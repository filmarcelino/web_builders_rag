[
  {
    "source_name": "firebase_docs",
    "category": "backend_service",
    "url": "https://firebase.google.com/docs/build",
    "title": "Build Documentation  |  Firebase Documentation",
    "content": "Firebase\n      \n  \n\n\n\n\n    \n        Documentation\n      \n  \n\n\n\n\n    \n        Build\n      \n  \n\n\n\n\n\n  \n    \n    Send feedback\n  \n  \n\n\n\n\n      \n      Stay organized with collections\n    \n\n      \n      Save and categorize content based on your preferences.\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\nFeatured topics\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Ensure app security\n      \n  \n\n\n            Firebase Authentication and Security Rules are central to a secure app. As you're building and launching your app, keep these top tips in mind.\n\n          \n\nReview the security checklist\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Emulator Suite is your first step\n      \n  \n\n\n            You can develop Firebase apps in an offline sandbox, leaving your projects and live services untouched, with the Firebase Local Emulator Suite. Take a look at a hands-on example of the process.\n\n          \n\nPrototype locally\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Cloud Firestore\n      \n  \n\n\n            Firestore is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud. It keeps your data in sync across client apps through realtime listeners and offers offline support for mobile and web so you can build responsive apps that work regardless of network latency or Internet connectivity.\n\n          \n\nIntroduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Cloud Functions\n      \n  \n\n\n            Cloud Functions for Firebase is a serverless framework that lets you automatically run backend code in response to events triggered by Firebase features and HTTPS requests. Your code is stored in Google servers so there's no need to manage and scale your own.\n\n          \n\nIntroduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Realtime Database\n      \n  \n\n\n            The Firebase Realtime Database is a cloud-hosted database. Data is stored as JSON and synchronized in realtime to every connected client, with cross-platform support for iOS, Android, Web and more.\n\n          \n\nIntroduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Firebase Local Emulator Suite\n      \n  \n\n\n            Firebase Local Emulator Suite is a set of advanced tools for developers looking to build and test apps locally.\n\n          \n\nIntroduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Cloud Functions shell\n      \n  \n\n\n            The Cloud Functions shell provides an interactive shell for invoking functions with test data. The shell supports all trigger types.\n\n          \n\nGuide to Functions shell\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Firebase CLI\n      \n  \n\n\n            The Firebase CLI provides a variety of tools for managing, viewing, and deploying to Firebase projects.\n\n          \n\nCLI reference\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n    \n        Introducing Firestore\n      \n  \n    \n\n            Cloud Firestore is a NoSQL document database that simplifies storing, syncing, and querying data for your mobile and web apps at global scale. Its client libraries provide live synchronization and offline support, while its security features and integrations with the Firebase and Google Cloud platforms accelerate building truly serverless apps.\n\n          \n\n\n\n\n\n\n\n\n\n\n      \n    \n        Introducing Firebase Authentication\n      \n  \n    \n\n            Firebase Authentication makes authentication easy for end users and developers. It allows you to focus on your users, and not the sign-in infrastructure to support them.\n\n          \n\n\n\n\n\n\n\n\n\n\n      \n    \n        Introducing Firebase ML\n      \n  \n    \n\n            Developers are increasingly relying on machine learning to enhance their app’s user experience, and only with finely-tuned machine learning models can they deliver those powerful features to delight their users. Introducing Firebase Machine Learning, a set of tools and services for bringing powerful machine learning features to your app.",
    "code_blocks": [],
    "headings": [
      "Featured topics",
      "Ensure app security",
      "Emulator Suite is your first step",
      "Cloud Firestore",
      "Cloud Functions",
      "Realtime Database",
      "Firebase Local Emulator Suite",
      "Cloud Functions shell",
      "Firebase CLI",
      "Introducing Firestore",
      "Introducing Firebase Authentication",
      "Introducing Firebase ML"
    ],
    "token_count": 618,
    "collected_at": "2025-09-03T01:38:57.914137",
    "priority": "high"
  },
  {
    "source_name": "firebase_docs",
    "category": "backend_service",
    "url": "https://firebase.google.com/docs/web/setup",
    "title": "Add Firebase to your JavaScript project  |  Firebase for web platforms",
    "content": "Firebase\n      \n  \n\n\n\n\n    \n        Documentation\n      \n  \n\n\n\n\n    \n        Firebase for web platforms\n      \n  \n\n\n\n\n    \n        Fundamentals\n      \n  \n\n\n\n\n\n\n\n  \n    \n    Send feedback\n  \n  \n\n\n      Add Firebase to your JavaScript project\n\n\n      \n      Stay organized with collections\n    \n\n      \n      Save and categorize content based on your preferences.\n    \n\n\n\n\n\n\n\n\n\n\n\nFollow this guide to use the Firebase JavaScript SDK in your web app or as a client for\nend-user access, for example, in a Node.js desktop or IoT application.\nStep 1: Create a Firebase project and register your app\nBefore you can add Firebase to your JavaScript app, you need to create a\nFirebase project and register your app with that project. When you register your\napp with Firebase, you'll get a Firebase configuration object that you'll use to\nconnect your app with your Firebase project resources.\n\nVisit Understand Firebase Projects to learn more\nabout Firebase projects and best practices for adding apps to projects.\n\n\nCreate a Firebase project\n\n\n\nNew to Firebase or Cloud\n\n      Follow these steps if you're new to Firebase or Google Cloud.\n      You can also follow these steps if you want to create a wholly new\n      Firebase project (and its underlying Google Cloud project).\n    \n\nSign into the\n        Firebase console.\n      \n\n        Click the button to create a new Firebase project.\n      \n\nIn the text field, enter a project name.\nIf you're part of a Google Cloud org, you can optionally select which\n          folder you create your project in.\n        \n\n\n\n        If prompted, review and accept the Firebase terms,\n        then click Continue.\n      \n(Optional) Enable AI assistance in the Firebase console\n        (called \"Gemini in Firebase\"), which can help you get started and\n        streamline your development process.\n      \n\n(Optional) Set up Google Analytics for your project,\n          which enables an optimal experience using these Firebase products:\n          Firebase A/B Testing,\n          Cloud Messaging,\n          Crashlytics,\n          In-App Messaging, and\n          Remote Config\n          (including\n          Personalization).\n        \nEither select an existing\n          Google Analytics account\n          or create a new account. If you create a new account, select your\n          Analytics reporting location,\n          then accept the data sharing settings and Google Analytics terms\n          for your project.\n        \n\n\n\n        Click Create project.\n      \n\nFirebase creates your project, provisions some initial resources, and\n      enables important APIs. When the process completes, you'll be taken to the\n      overview page for your Firebase project in the Firebase console.\n    \n\n\nExisting Cloud project\n\n      Follow these steps if you want to start using Firebase with an existing\n      Google Cloud project. Learn more about\n      \"adding\n        Firebase\" to an existing Google Cloud project.\n    \n\nSign into the\n        Firebase console with the account that gives\n        you access to the existing Google Cloud project.\n      \n\n        Click the button to create a new Firebase project.\n      \n\n        At the bottom of the page, click\n        Add Firebase to Google Cloud project.\n      \n\n        In the text field, start entering the project name of the\n        existing project, and then select the project from the displayed list.\n      \n\n        Click Open project.\n      \n\n        If prompted, review and accept the Firebase terms,\n        then click Continue.\n      \n(Optional) Enable AI assistance in the Firebase console\n        (called \"Gemini in Firebase\"), which can help you get started and\n        streamline your development process.\n      \n\n(Optional) Set up Google Analytics for your project,\n          which enables an optimal experience using these Firebase products:\n          Firebase A/B Testing,\n          Cloud Messaging,\n          Crashlytics,\n          In-App Messaging, and\n          Remote Config\n          (including\n          Personalization).\n        \nEither select an existing\n          Google Analytics account\n          or create a new account. If you create a new account, select your\n          Analytics reporting location,\n          then accept the data sharing settings and Google Analytics terms\n          for your project.\n        \n\n\n\n        Click Add Firebase.\n      \n\nFirebase\n      adds\n        Firebase to your existing project.\n      When the process completes, you'll be taken to the overview page for your\n      Firebase project in the Firebase console.\n    \n\n\n\n\n\nRegister your app\n\nAfter you have a Firebase project, you can register your web app with that project.\n\n\nIn the center of the Firebase console's project\n        overview\n        page, click the Web icon\n      (plat_web)\n      to launch the setup workflow.\n    \nIf you've already added an app to your Firebase project, click Add app to\n      display the platform options.\n    \n\n\nEnter your app's nickname.\n      This nickname is an internal, convenience identifier and is only visible to\n      you in the Firebase console.\n\n\nClick Register app.\n\n\nFollow the on-screen instructions to add and initialize the Firebase SDK in your app.\nYou can also find more detailed instructions for adding, initializing, and using the Firebase\n      SDK in the next steps of this getting started page.\n    \n\n\n\nIf you don't already have a JavaScript project and just want to try out a\nFirebase product, you can download one of our quickstart samples.\nStep 2: Install the SDK and initialize Firebase\nThis page describes setup instructions for the Firebase JS SDK's modular API,\nwhich uses a JavaScript Module \nformat.\nThis workflow uses npm and requires module bundlers or JavaScript framework\ntooling because the modular API is optimized to work with\nmodule bundlers\nto eliminate unused code (tree-shaking) and decrease SDK size.\n\n\nInstall Firebase using npm:\nnpm install firebase\nInitialize Firebase in your app and create a Firebase App object:\nimport { initializeApp } from 'firebase/app';\n\n// TODO: Replace the following with your app's Firebase configuration\nconst firebaseConfig = {\n  //...\n};\n\nconst app = initializeApp(firebaseConfig);\nA Firebase App is a container-like object that stores common configuration\nand shares authentication across Firebase services. After you initialize a\nFirebase App object in your code, you can add and start using Firebase\nservices.\nIf your app includes dynamic features based on server-side rendering (SSR),\nyou'll need to take some additional steps to ensure that your configuration\npersists across server rendering and client rendering passes. In\nyour server logic, implement the\nFirebaseServerApp interface to\noptimize your app's\nsession management with service workers.\n\n\nStep 3: Access Firebase in your app\nFirebase services (like Cloud Firestore, Authentication, Realtime Database,\nRemote Config, and more) are available to import within individual\nsub-packages.\nThe example below shows how you could use the Cloud Firestore Lite SDK to retrieve\na list of data.\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\n// Follow this pattern to import other Firebase services\n// import { } from 'firebase/<service>';\n\n// TODO: Replace the following with your app's Firebase configuration\nconst firebaseConfig = {\n  //...\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n// Get a list of cities from your database\nasync function getCities(db) {\n  const citiesCol = collection(db, 'cities');\n  const citySnapshot = await getDocs(citiesCol);\n  const cityList = citySnapshot.docs.map(doc => doc.data());\n  return cityList;\n}\nStep 4: Use a module bundler (webpack/Rollup) for size reduction\n\nThe Firebase Web SDK is designed to work with module bundlers to remove any\nunused code (tree-shaking). We strongly recommend using this approach for\nproduction apps. Tools such as the Angular CLI,\nNext.js, Vue CLI, or Create\nReact App automatically\nhandle module bundling for libraries installed through npm and imported into\nyour codebase.\nSee our guide Using module bundlers with Firebase for more information.\nAvailable Firebase services for web\nNow that you're setup to use Firebase, you can start adding and using any of the\nfollowing available Firebase services in your web app.\n\nThe following commands show how to import Firebase libraries installed locally\nwith npm. For alternative import options, see the\navailable libraries documentation.\n\n\n1 Firebase AI Logic was formerly called\n  \"Vertex AI in Firebase\" with the package\n  firebase/vertexai.\n\nNext steps\nLearn about Firebase:\n\nExplore sample Firebase apps.\nGet hands-on experience with the\nFirebase Web Codelab.\nExplore the open source code in\nGitHub.\nReview the supported environments for the\nFirebase JavaScript SDK.\nSpeed up your development with additional Firebase-maintained open source\nlibraries, like\nAngularFire,\nRxFire, and\nFirebaseUI for web.\nPrepare to launch your app:\n\nSet up budget\nalerts\nfor your project in the Google Cloud console.\nMonitor the Usage and billing\ndashboard \nin the Firebase console to get an overall picture of your project's\nusage across multiple Firebase services.\n\nReview the Firebase launch checklist.\n\n\n\n\n\n\n\n\n  \n    \n    Send feedback",
    "code_blocks": [
      "npm install firebase",
      "import { initializeApp } from 'firebase/app';\n\n// TODO: Replace the following with your app's Firebase configuration\nconst firebaseConfig = {\n  //...\n};\n\nconst app = initializeApp(firebaseConfig);",
      "FirebaseServerApp",
      "import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\n// Follow this pattern to import other Firebase services\n// import { } from 'firebase/<service>';\n\n// TODO: Replace the following with your app's Firebase configuration\nconst firebaseConfig = {\n  //...\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n// Get a list of cities from your database\nasync function getCities(db) {\n  const citiesCol = collection(db, 'cities');\n  const citySnapshot = await getDocs(citiesCol);\n  const cityList = citySnapshot.docs.map(doc => doc.data());\n  return cityList;\n}",
      "npm",
      "firebase/vertexai"
    ],
    "headings": [
      "Add Firebase to your JavaScript project\n\n\n      \n      Stay organized with collections\n    \n\n      \n      Save and categorize content based on your preferences.",
      "Step 1: Create a Firebase project and register your app",
      "Create a Firebase project",
      "New to Firebase or Cloud",
      "Existing Cloud project",
      "Register your app",
      "Step 2: Install the SDK and initialize Firebase",
      "Step 3: Access Firebase in your app",
      "Step 4: Use a module bundler (webpack/Rollup) for size reduction",
      "Available Firebase services for web",
      "Next steps"
    ],
    "token_count": 1808,
    "collected_at": "2025-09-03T01:38:58.372474",
    "priority": "high"
  }
]