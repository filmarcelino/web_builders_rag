[
  {
    "id": "f87565a51e8d5435d086a9764dc3ca7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad0\ntitle: Align columns\nchallengeType: 1\nforumTopicId: 302224\ndashedName: align-columns\n--description--\nGiven an array of many lines, where fields within a line are delineated by a single $ character, write a program that aligns each column of fields by ensuring that words in each column are separated by at least one space Further, allow for each word in a column to be either left justified, right justified, or center justified within its column --instructions--\nUse the following text to test your programs:\njs\nconst testText = [\n'Given$a$text$file$of$many$lines',\n'where$fields$within$a$line$',\n'are$delineated$by$a$single$\"dollar\"$character',\n'write$a$program',\n'that$aligns$each$column$of$fields',\n'by$ensuring$that$words$in$each$',\n'column$are$separated$by$at$least$one$space ',\n'Further,$allow$for$each$word$in$a$column$to$be$either$left$',\n'justified,$right$justified',\n'or$center$justified$within$its$column '\n];\nNote that:\nThe example input texts lines may, or may not, have trailing dollar characters All columns should share the same alignment Consecutive space characters produced adjacent to the end of lines are insignificant for the purposes of the task Output text will be viewed in a mono-spaced font on a plain text editor or basic terminal Lines in it should be joined using new line character (\\n) The minimum space between columns should be computed from the text and not hard-coded It is not a requirement to add separating characters between or around columns For example, one of the lines from the testText, after justifying to the right, left and center respectively:\njs\n'    column        are separated     by     at    least       one space \\n'\n'column     are        separated by     at     least    one       space \\n'\n'  column      are     separated   by     at    least      one    space \\n'\n--hints--\nformatText should be a function js\nassert(typeof formatText === 'function');\nformatText(testText, 'right') should produce text with columns justified to the right js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6597,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "9afbe30891d7d6b2587330885f6c384a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "between or around columns For example, one of the lines from the testText, after justifying to the right, left and center respectively: js ' column are separated by at least one space \\n' 'column are separated by at least one space \\n' ' column are separated by at least one space \\n' --hints-- formatText should be a function js assert(typeof formatText === 'function'); formatText(testText, 'right') should produce text with columns justified to the right js assertstrictEqual(formatText(_testText, 'right'), rightAligned);\nformatText(testText, 'left') should produce text with columns justified to the left js\nassert strictEqual(formatText(_testText, 'left'), leftAligned);\nformatText(testText, 'center') should produce text with columns justified to the center js\nassert strictEqual(formatText(_testText, 'center'), centerAligned);\n--seed--\n--after-user-code--\n```js\nconst _testText = [\n'Given$a$text$file$of$many$lines',\n'where$fields$within$a$line$',\n'are$delineated$by$a$single$\"dollar\"$character',\n'write$a$program',\n'that$aligns$each$column$of$fields$',\n'by$ensuring$that$words$in$each$',\n'column$are$separated$by$at$least$one$space ',\n'Further,$allow$for$each$word$in$a$column$to$be$either$left$',\n'justified,$right$justified',\n'or$center$justified$within$its$column '\n];\nconst rightAligned = '     Given          a      text   file     of     many     lines\\n' +\n'     where     fields    within      a   line \\n' +\n'       are delineated        by      a single \"dollar\" character\\n' +\n'     write          a   program\\n' +\n'      that     aligns      each column     of   fields \\n' +\n'        by   ensuring      that  words     in     each \\n' +\n'    column        are separated     by     at    least       one space",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6597,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "374bc9a86d1a4938140cf24ab6bed9e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= [ 'Given$a$text$file$of$many$lines', 'where$fields$within$a$line$', 'are$delineated$by$a$single$\"dollar\"$character', 'write$a$program', 'that$aligns$each$column$of$fields$', 'by$ensuring$that$words$in$each$', 'column$are$separated$by$at$least$one$space ', 'Further,$allow$for$each$word$in$a$column$to$be$either$left$', 'justified,$right$justified', 'or$center$justified$within$its$column ' ]; const rightAligned = ' Given a text file of many lines\\n' + ' where fields within a line \\n' + ' are delineated by a single \"dollar\" character\\n' + ' write a program\\n' + ' that aligns each column of fields \\n' + ' by ensuring that words in each \\n' + ' column are separated by at least one space\\n' +\n'  Further,      allow       for   each   word       in         a column to be either left \\n' +\n'justified,      right justified\\n' +\n'        or     center justified within    its  column ';\nconst leftAligned = 'Given      a          text      file   of     many     lines    \\n' +\n'where      fields     within    a      line   \\n' +\n'are        delineated by        a      single \"dollar\" character\\n' +\n'write      a          program  \\n' +\n'that       aligns     each      column of     fields   \\n' +\n'by         ensuring   that      words  in     each     \\n' +\n'column     are        separated by     at     least    one       space \\n' +\n'Further,   allow      for       each   word   in       a         column to be either left \\n' +\n'justified, right      justified\\n' +\n'or         center     justified within its    column",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6597,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "eb12fb5042c78a2d701b09cc28b30c78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "file of many lines \\n' + 'where fields within a line \\n' + 'are delineated by a single \"dollar\" character\\n' + 'write a program \\n' + 'that aligns each column of fields \\n' + 'by ensuring that words in each \\n' + 'column are separated by at least one space \\n' + 'Further, allow for each word in a column to be either left \\n' + 'justified, right justified\\n' + 'or center justified within its column';\nconst centerAligned = '  Given        a        text     file    of     many     lines  \\n' +\n'  where      fields    within     a     line  \\n' +\n'   are     delineated    by       a    single \\\"dollar\\\" character\\n' +\n'  write        a       program \\n' +\n'   that      aligns     each    column   of    fields  \\n' +\n'    by      ensuring    that    words    in     each   \\n' +\n'  column      are     separated   by     at    least      one    space \\n' +\n' Further,    allow       for     each   word     in        a     column to be either left \\n' +\n'justified,   right    justified\\n' +\n'    or       center   justified within  its   column ';\n```\n--seed-contents--\n```js\nfunction formatText(input, justification) {\n}\nconst testText = [\n'Given$a$text$file$of$many$lines',\n'where$fields$within$a$line$',\n'are$delineated$by$a$single$\"dollar\"$character',\n'write$a$program',\n'that$aligns$each$column$of$fields$',\n'by$ensuring$that$words$in$each$',\n'column$are$separated$by$at$least$one$space ',\n'Further,$allow$for$each$word$in$a$column$to$be$either$left$',\n'justified,$right$justified',\n'or$center$justified$within$its$column '\n];\n```\n--solutions--\n```js\nString prototype repeat = function (n) { return new Array(1 + parseInt(n))",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6597,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "47f524e0e21f234e0da306c25e02d5df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "are separated by at least one space \\n' + ' Further, allow for each word in a column to be either left \\n' + 'justified, right justified\\n' + ' or center justified within its column '; ``` --seed-contents-- ```js function formatText(input, justification) { } const testText = [ 'Given$a$text$file$of$many$lines', 'where$fields$within$a$line$', 'are$delineated$by$a$single$\"dollar\"$character', 'write$a$program', 'that$aligns$each$column$of$fields$', 'by$ensuring$that$words$in$each$', 'column$are$separated$by$at$least$one$space ', 'Further,$allow$for$each$word$in$a$column$to$be$either$left$', 'justified,$right$justified', 'or$center$justified$within$its$column ' ]; ``` --solutions-- ```js String prototype repeat = function (n) { return new Array(1 + parseInt(n))join(this); };\nfunction formatText(input, justification) {\nlet x, y, max, cols = 0, diff, left, right;\nfor (x = 0; x < input length; x++) {\ninput[x] = input[x] split('$');\nif (input[x] length > cols) {\ncols = input[x] length;\n}\n}\nfor (x = 0; x < cols; x++) {\nmax = 0;\nfor (y = 0; y < input length; y++) {\nif (input[y][x] && max < input[y][x] length) {\nmax = input[y][x] length;\n}\n}\nfor (y = 0; y < input length; y++) {\nif (input[y][x]) {\ndiff = (max - input[y][x] length) / 2;\nleft = ' ' repeat(Math floor(diff));\nright = ' ' repeat(Math ceil(diff));\nif (justification === 'left') {\nright += left; left = '';\n}\nif (justification === 'right') {\nleft += right; right = '';\n}\ninput[y][x] = left + input[y][x] + right;\n}\n}\n}\nfor (x = 0; x < input length; x++) {\ninput[x] = input[x]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6597,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "286d89f6ccdfbf8263c82d7889714b60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "y < input length; y++) { if (input[y][x]) { diff = (max - input[y][x] length) / 2; left = ' ' repeat(Math floor(diff)); right = ' ' repeat(Math ceil(diff)); if (justification === 'left') { right += left; left = ''; } if (justification === 'right') { left += right; right = ''; } input[y][x] = left + input[y][x] + right; } } } for (x = 0; x < input length; x++) { input[x] = input[x]join(' ');\n}\ninput = input join('\\n');\nreturn input;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6597,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\align-columns.md",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "f144e4243021ea44211e15bcd3773b33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\balanced-brackets.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594dc6c729e5700999302b45\ntitle: Balanced brackets\nchallengeType: 1\nforumTopicId: 302230\ndashedName: balanced-brackets\n--description--\nDetermine whether a generated string of brackets is balanced; that is, whether it consists entirely of pairs of opening/closing brackets (in that order), none of which mis-nest Examples:\n| Input                     | Output |\n| ------------------------- | ------ |\n| []          | true   |\n| ][          | false  |\n| [][]         | true   |\n| ][]         | false  |\n| []][[]    | false  |\n| [[[[]]]] | true   |\n--hints--\nisBalanced should be a function js\nassert(typeof isBalanced === 'function');\nisBalanced(\"[]\") should return true js\nassert(isBalanced(testCases[0]));\nisBalanced(\"]][[[][][][]][\") should return false js\nassert( isBalanced(testCases[1]));\nisBalanced(\"[][[[[][][[[]]]]]]\") should return true js\nassert(isBalanced(testCases[2]));\nisBalanced(\"][\") should return false js\nassert( isBalanced(testCases[3]));\nisBalanced(\"[[[]]]][[]\") should return false js\nassert( isBalanced(testCases[4]));\nisBalanced(\"][[]\") should return false js\nassert( isBalanced(testCases[5]));\nisBalanced(\"][[][]][[[]]\") should return false js\nassert( isBalanced(testCases[6]));\nisBalanced(\"[[][]]][\") should return false js\nassert( isBalanced(testCases[7]));\nisBalanced(\"[[[]]][[]]]][][[\") should return false js\nassert( isBalanced(testCases[8]));\nisBalanced(\"[]][[]]][[[[][]]\") should return false js\nassert( isBalanced(testCases[9]));\nisBalanced(\"][]][[][\") should return false js\nassert( isBalanced(testCases[10]));\nisBalanced(\"[[]][[][]]\") should return true js\nassert(isBalanced(testCases[11]));\nisBalanced(\"[[]]\") should return true js\nassert(isBalanced(testCases[12]));\nisBalanced(\"]][]][[]][[[\") should return false js\nassert(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\balanced-brackets.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "864958e540981e3a0417b946a9314461",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\balanced-brackets.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert(isBalanced(testCases[2])); isBalanced(\"][\") should return false js assert( isBalanced(testCases[3])); isBalanced(\"[[[]]]][[]\") should return false js assert( isBalanced(testCases[4])); isBalanced(\"][[]\") should return false js assert( isBalanced(testCases[5])); isBalanced(\"][[][]][[[]]\") should return false js assert( isBalanced(testCases[6])); isBalanced(\"[[][]]][\") should return false js assert( isBalanced(testCases[7])); isBalanced(\"[[[]]][[]]]][][[\") should return false js assert( isBalanced(testCases[8])); isBalanced(\"[]][[]]][[[[][]]\") should return false js assert( isBalanced(testCases[9])); isBalanced(\"][]][[][\") should return false js assert( isBalanced(testCases[10])); isBalanced(\"[[]][[][]]\") should return true js assert(isBalanced(testCases[11])); isBalanced(\"[[]]\") should return true js assert(isBalanced(testCases[12])); isBalanced(\"]][]][[]][[[\") should return false js assert(isBalanced(testCases[13]));\nisBalanced(\"][]][][[\") should return false js\nassert( isBalanced(testCases[14]));\nisBalanced(\"][][\") should return false js\nassert( isBalanced(testCases[15]));\nisBalanced(\"[]]]\") should return false js\nassert( isBalanced(testCases[16]));\nisBalanced(\"\") should return true",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\balanced-brackets.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "83fbbd5c80439c67a1e9152203a29f48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\balanced-brackets.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return false js assert( isBalanced(testCases[6])); isBalanced(\"[[][]]][\") should return false js assert( isBalanced(testCases[7])); isBalanced(\"[[[]]][[]]]][][[\") should return false js assert( isBalanced(testCases[8])); isBalanced(\"[]][[]]][[[[][]]\") should return false js assert( isBalanced(testCases[9])); isBalanced(\"][]][[][\") should return false js assert( isBalanced(testCases[10])); isBalanced(\"[[]][[][]]\") should return true js assert(isBalanced(testCases[11])); isBalanced(\"[[]]\") should return true js assert(isBalanced(testCases[12])); isBalanced(\"]][]][[]][[[\") should return false js assert(isBalanced(testCases[13])); isBalanced(\"][]][][[\") should return false js assert( isBalanced(testCases[14])); isBalanced(\"][][\") should return false js assert( isBalanced(testCases[15])); isBalanced(\"[]]]\") should return false js assert( isBalanced(testCases[16])); isBalanced(\"\") should return truejs\nassert(isBalanced(testCases[17]));\n--seed--\n--after-user-code--\njs\nconst testCases = [\n'[]',\n']][[[][][][]][',\n'[][[[[][][[[]]]]]]',\n'][',\n'[[[]]]][[]',\n'][[]',\n'][[][]][[[]]',\n'[[][]]][',\n'[[[]]][[]]]][][[',\n'[]][[]]][[[[][]]',\n'][]][[][',\n'[[]][[][]]',\n'[[]]',\n']][]][[]][[[',\n'][]][][[',\n'][][',\n'[]]]',\n''\n];\n--seed-contents--\n```js\nfunction isBalanced(str) {\nreturn true;\n}\n```\n--solutions--\njs\nfunction isBalanced(str) {\nif (str === '') return true;\nlet a = str;\nlet b;\ndo {\nb = a;\na = a replace(/\\[\\]/g, '');\n} while (a == b);\nreturn a;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\balanced-brackets.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "eda3f7a54966073914b001061ee56401",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\comma-quibbling.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 596e414344c3b2872167f0fe\ntitle: Comma quibbling\nchallengeType: 1\nforumTopicId: 302234\ndashedName: comma-quibbling\n--description--\nComma quibbling is a task originally set by Eric Lippert in his blog --instructions--\nWrite a function to generate a string output which is the concatenation of input words from a list/sequence where:\nAn input of no words produces the output string of just the two brace characters (\"{}\")\nAn input of just one word, e g [\"ABC\"], produces the output string of the word inside the two braces, e g \"{ABC}\"\nAn input of two words, e g [\"ABC\", \"DEF\"], produces the output string of the two words inside the two braces with the words separated by the string \" and \", e g \"{ABC and DEF}\"\nAn input of three or more words, e g [\"ABC\", \"DEF\", \"G\", \"H\"], produces the output string of all but the last word separated by \", \" with the last word separated by \" and \" and all within braces; e g \"{ABC, DEF, G and H}\"\nTest your function with the following series of inputs showing your output here on this page:\n[] # (No input words) [\"ABC\"]\n[\"ABC\", \"DEF\"]\n[\"ABC\", \"DEF\", \"G\", \"H\"]\nNote: Assume words are non-empty strings of uppercase characters for this task --hints--\nquibble should be a function js\nassert(typeof quibble === 'function');\nquibble([\"ABC\"]) should return a string js\nassert(typeof quibble(['ABC']) === 'string');\nquibble([]) should return \"{}\" js\nassert equal(quibble(testCases[0]), results[0]);\nquibble([\"ABC\"]) should return \"{ABC}\" js\nassert equal(quibble(testCases[1]), results[1]);\nquibble([\"ABC\", \"DEF\"]) should return \"{ABC and DEF}\" js\nassert equal(quibble(testCases[2]), results[2]);\nquibble([\"ABC\", \"DEF\", \"G\", \"H\"]) should return \"{ABC, DEF, G and H}\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\comma-quibbling.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "961dac419dd710997566df2fabfea0a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\comma-quibbling.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"DEF\", \"G\", \"H\"] Note: Assume words are non-empty strings of uppercase characters for this task --hints-- quibble should be a function js assert(typeof quibble === 'function'); quibble([\"ABC\"]) should return a string js assert(typeof quibble(['ABC']) === 'string'); quibble([]) should return \"{}\" js assert equal(quibble(testCases[0]), results[0]); quibble([\"ABC\"]) should return \"{ABC}\" js assert equal(quibble(testCases[1]), results[1]); quibble([\"ABC\", \"DEF\"]) should return \"{ABC and DEF}\" js assert equal(quibble(testCases[2]), results[2]); quibble([\"ABC\", \"DEF\", \"G\", \"H\"]) should return \"{ABC, DEF, G and H}\" js assertequal(quibble(testCases[3]), results[3]);\n--seed--\n--after-user-code--\njs\nconst testCases = [[], [\"ABC\"], [\"ABC\", \"DEF\"], [\"ABC\", \"DEF\", \"G\", \"H\"]];\nconst results = [\"{}\", \"{ABC}\", \"{ABC and DEF}\", \"{ABC, DEF, G and H}\"];\n--seed-contents--\n```js\nfunction quibble(words) {\nreturn true;\n}\n```\n--solutions--\njs\nfunction quibble(words) {\nreturn \"{\" +\nwords slice(0, words length - 1) join(\", \") +\n(words length > 1 \" and \" : \"\") +\n(words[words length - 1] || '') +\n\"}\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\comma-quibbling.md",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6d145bdc49dac07f9f49906d4c095dc7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\combinations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5958469238c0d8d2632f46db\ntitle: Combinations\nchallengeType: 1\nforumTopicId: 302233\ndashedName: combinations\n--description--\nGiven non-negative integers m and n, generate all size m combinations of the integers from 0 (zero) to n-1 in sorted order (each combination is sorted and the entire table is sorted) Example:\n3 comb 5 is:\n0 1 2\n0 1 3\n0 1 4\n0 2 3\n0 2 4\n0 3 4\n1 2 3\n1 2 4\n1 3 4\n2 3 4\n--hints--\ncombinations should be a function js\nassert(typeof combinations === 'function');\ncombinations(3, 5) should return [[0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 3], [0, 2, 4], [0, 3, 4], [1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]] js\nassert deepEqual(combinations(testInput1[0], testInput1[1]), testOutput1);\ncombinations(4, 6) should return [[0,1,2,3], [0,1,2,4], [0,1,2,5], [0,1,3,4], [0,1,3,5], [0,1,4,5], [0,2,3,4], [0,2,3,5], [0,2,4,5], [0,3,4,5], [1,2,3,4], [1,2,3,5], [1,2,4,5], [1,3,4,5], [2,3,4,5]]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\combinations.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bb19e0d279670d25a994d94738be7781",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\combinations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3 4 2 3 4 --hints-- combinations should be a function js assert(typeof combinations === 'function'); combinations(3, 5) should return [[0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 3], [0, 2, 4], [0, 3, 4], [1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]] js assert deepEqual(combinations(testInput1[0], testInput1[1]), testOutput1); combinations(4, 6) should return [[0,1,2,3], [0,1,2,4], [0,1,2,5], [0,1,3,4], [0,1,3,5], [0,1,4,5], [0,2,3,4], [0,2,3,5], [0,2,4,5], [0,3,4,5], [1,2,3,4], [1,2,3,5], [1,2,4,5], [1,3,4,5], [2,3,4,5]] js assertdeepEqual(combinations(testInput2[0], testInput2[1]), testOutput2);\n--seed--\n--after-user-code--\n```js\nconst testInput1 = [3, 5];\nconst testOutput1 = [[0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 3], [0, 2, 4], [0, 3, 4], [1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]];\nconst testInput2 = [4, 6];\nconst testOutput2 = [[0, 1, 2, 3], [0, 1, 2, 4], [0, 1, 2, 5], [0, 1, 3, 4], [0, 1, 3, 5], [0, 1, 4, 5], [0, 2, 3, 4], [0, 2, 3, 5], [0, 2, 4, 5], [0, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 4, 5], [1, 3, 4, 5], [2, 3, 4, 5]];\n```\n--seed-contents--\n```js\nfunction combinations(m, n) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction combinations(m, n) {\nconst nArr = [",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\combinations.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e0a8f2b1f76e470bc492fa4fa0a1022b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\combinations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1, 2, 4], [0, 1, 2, 5], [0, 1, 3, 4], [0, 1, 3, 5], [0, 1, 4, 5], [0, 2, 3, 4], [0, 2, 3, 5], [0, 2, 4, 5], [0, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 4, 5], [1, 3, 4, 5], [2, 3, 4, 5]]; ``` --seed-contents-- ```js function combinations(m, n) { return true; } ``` --solutions-- ```js function combinations(m, n) { const nArr = [Array(n) keys()];\nreturn (function generateCombinations (size, numArr) {\nconst ret = [];\nfor (let i = 0; i < numArr length; i++) {\nif (size === 1) {\nret push([numArr[i]]);\n}\nelse {\nconst sub = generateCombinations(size - 1, numArr slice(i + 1, numArr length));\nfor (let subI = 0; subI < sub length; subI++) {\nconst next = sub[subI];\nnext unshift(numArr[i]);\nret push(next);\n}\n}\n}\nreturn ret;\n}(m, nArr));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\combinations.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "88b9af8dfc9c7d27f16b3836f6dd2df5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\compare-a-list-of-strings.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 596e457071c35c882915b3e4\ntitle: Compare a list of strings\nchallengeType: 1\nforumTopicId: 302235\ndashedName: compare-a-list-of-strings\n--description--\nA list is an ordered set of values that may contain duplicates Here is an example:\n```js\nconst list = [['AA',  'BB', 'CC'], ['AA', 'ACB', 'AA'], [], ['AA']];\n````\nGiven a list of arbitrarily many strings, implement a function for each of the following conditions:\ntest if they are all lexically equal\ntest if every string is lexically less than the one after it  (i e whether the list is in strict ascending order)\n--hints--\nallEqual should be a function js\nassert(typeof allEqual === 'function');\nazSorted should be a function js\nassert(typeof azSorted === 'function');\nallEqual([\"AA\", \"AA\", \"AA\", \"AA\"]) should return true js\nassert(allEqual(testCases[0]));\nazSorted([\"AA\", \"AA\", \"AA\", \"AA\"]) should return false js\nassert( azSorted(testCases[0]));\nallEqual([\"AA\", \"ACB\", \"BB\", \"CC\"]) should return false js\nassert( allEqual(testCases[1]));\nazSorted([\"AA\", \"ACB\", \"BB\", \"CC\"]) should return true js\nassert(azSorted(testCases[1]));\nallEqual([]) should return true js\nassert(allEqual(testCases[2]));\nazSorted([]) should return true js\nassert(azSorted(testCases[2]));\nallEqual([\"AA\"]) should return true js\nassert(allEqual(testCases[3]));\nazSorted([\"AA\"]) should return true js\nassert(azSorted(testCases[3]));\nallEqual([\"BB\", \"AA\"]) should return false js\nassert( allEqual(testCases[4]));\nazSorted([\"BB\", \"AA\"]) should return false js\nassert(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2285,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\compare-a-list-of-strings.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "32d016011e0fadc3c3f654b996ebaa23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\compare-a-list-of-strings.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"AA\", \"AA\", \"AA\"]) should return true js assert(allEqual(testCases[0])); azSorted([\"AA\", \"AA\", \"AA\", \"AA\"]) should return false js assert( azSorted(testCases[0])); allEqual([\"AA\", \"ACB\", \"BB\", \"CC\"]) should return false js assert( allEqual(testCases[1])); azSorted([\"AA\", \"ACB\", \"BB\", \"CC\"]) should return true js assert(azSorted(testCases[1])); allEqual([]) should return true js assert(allEqual(testCases[2])); azSorted([]) should return true js assert(azSorted(testCases[2])); allEqual([\"AA\"]) should return true js assert(allEqual(testCases[3])); azSorted([\"AA\"]) should return true js assert(azSorted(testCases[3])); allEqual([\"BB\", \"AA\"]) should return false js assert( allEqual(testCases[4])); azSorted([\"BB\", \"AA\"]) should return false js assert(azSorted(testCases[4]));\n--seed--\n--after-user-code--\njs\nconst testCases = [['AA', 'AA', 'AA', 'AA'], ['AA', 'ACB', 'BB', 'CC'], [], ['AA'], ['BB', 'AA']];\n--seed-contents--\n```js\nfunction allEqual(arr) {\nreturn true;\n}\nfunction azSorted(arr) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction allEqual(a) {\nlet out = true;\nlet i = 0;\nwhile (++i < a length) {\nout = out && (a[i - 1] === a[i]);\n} return out;\n}\nfunction azSorted(a) {\nlet out = true;\nlet i = 0;\nwhile (++i < a length) {\nout = out && (a[i - 1] < a[i]);\n} return out;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2285,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\compare-a-list-of-strings.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "01bdf82f9ed9d5fa3843fe4da7f29103",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\convert-seconds-to-compound-duration.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 596fd036dc1ab896c5db98b1\ntitle: Convert seconds to compound duration\nchallengeType: 1\nforumTopicId: 302236\ndashedName: convert-seconds-to-compound-duration\n--description--\nImplement a function which:\ntakes a positive integer representing a duration in seconds as input (e g , 100), and\nreturns a string which shows the same duration decomposed into weeks, days, hours, minutes, and seconds as detailed below (e g , 1 min, 40 sec) Demonstrate that it passes the following three test-cases:\nTest Cases\n| Input number | Output number                         |\n| ------------ | ------------------------------------- |\n| 7259         | 2 hr, 59 sec             |\n| 86400        | 1 d                      |\n| 6000000      | 9 wk, 6 d, 10 hr, 40 min |\nDetails\nThe following five units should be used:\n| Unit   | Suffix used in Output | Conversion            |\n| ------ | --------------------- | --------------------- |\n| week   | wk       | 1 week = 7 days       |\n| day    | d        | 1 day = 24 hours      |\n| hour   | hr       | 1 hour = 60 minutes   |\n| minute | min      | 1 minute = 60 seconds |\n| second | sec      | ---                   |\nHowever, only include quantities with non-zero values in the output (e g , return 1 d and not 0 wk, 1 d, 0 hr, 0 min, 0 sec) Give larger units precedence over smaller ones as much as possible (e g , return 2 min, 10 sec and not 1 min, 70 sec or 130 sec) Mimic the formatting shown in the test-cases (quantities sorted from largest unit to smallest and separated by comma+space; value and unit of each quantity separated by space) --hints--\nconvertSeconds should be a function js\nassert(typeof convertSeconds === 'function');\nconvertSeconds(7259) should return 2 hr, 59 sec js\nassert equal(convertSeconds(testCases[0]), results[0]);\nconvertSeconds(86400) should return 1 d js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3529,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\convert-seconds-to-compound-duration.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "dd12799163490ef374becba0eff013e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\convert-seconds-to-compound-duration.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "much as possible (e g , return 2 min, 10 sec and not 1 min, 70 sec or 130 sec) Mimic the formatting shown in the test-cases (quantities sorted from largest unit to smallest and separated by comma+space; value and unit of each quantity separated by space) --hints-- convertSeconds should be a function js assert(typeof convertSeconds === 'function'); convertSeconds(7259) should return 2 hr, 59 sec js assert equal(convertSeconds(testCases[0]), results[0]); convertSeconds(86400) should return 1 d js assertequal(convertSeconds(testCases[1]), results[1]);\nconvertSeconds(6000000) should return 9 wk, 6 d, 10 hr, 40 min js\nassert equal(convertSeconds(testCases[2]), results[2]);\n--seed--\n--after-user-code--\njs\nconst testCases = [7259, 86400, 6000000];\nconst results = ['2 hr, 59 sec', '1 d', '9 wk, 6 d, 10 hr, 40 min'];\n--seed-contents--\n```js\nfunction convertSeconds(sec) {\nreturn true;\n}\n```\n--solutions--\n``js\nfunction convertSeconds(sec) {\nconst localNames = ['wk', 'd', 'hr', 'min', 'sec'];\n// compoundDuration :: [String] -> Int -> String\nconst compoundDuration = (labels, intSeconds) =>\nweekParts(intSeconds) map((v, i) => [v, labels[i]]) reduce((a, x) =>\na concat(x[0] [${x[0]} ${x[1] || ' '}`] : []), []\n) join(', ');\n// weekParts :: Int -> [Int]\nconst weekParts = intSeconds => [0, 7, 24, 60, 60] reduceRight((a, x) => {\nconst r = a rem;\nconst mod = x == 0 r % x : r;\nreturn {\nrem: (r - mod) / (x || 1),\nparts: [mod] concat(a parts)\n};\n}, {\nrem: intSeconds,\nparts: []\n}) parts;\nreturn compoundDuration(localNames, sec);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3529,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\convert-seconds-to-compound-duration.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "785b399e338990069284e8d8cfca85bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\count-occurrences-of-a-substring.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 596fda99c69f779975a1b67d\ntitle: Count occurrences of a substring\nchallengeType: 1\nforumTopicId: 302237\ndashedName: count-occurrences-of-a-substring\n--description--\nCreate a function, or show a built-in function, to count the number of non-overlapping occurrences of a substring inside a string.\nThe function should take two arguments:\nthe first argument being the string to search, and\nthe second a substring to be searched for.\nIt should return an integer count.\nThe matching should yield the highest number of non-overlapping matches.\nIn general, this essentially means matching from left-to-right or right-to-left.\n--hints--\ncountSubstring should be a function.\njs\nassert(typeof countSubstring === 'function');\ncountSubstring(\"the three truths\", \"th\") should return 3.\njs\nassert.equal(countSubstring(testCases[0], searchString[0]), results[0]);\ncountSubstring(\"ababababab\", \"abab\") should return 2.\njs\nassert.equal(countSubstring(testCases[1], searchString[1]), results[1]);\ncountSubstring(\"abaabba*bbaba*bbab\", \"a*b\") should return 2.\njs\nassert.equal(countSubstring(testCases[2], searchString[2]), results[2]);\n--seed--\n--after-user-code--\njs\nconst testCases = ['the three truths', 'ababababab', 'abaabba*bbaba*bbab'];\nconst searchString = ['th', 'abab', 'a*b'];\nconst results = [3, 2, 2];\n--seed-contents--\n```js\nfunction countSubstring(str, subStr) {\nreturn true;\n}\n```\n--solutions--\njs\nfunction countSubstring(str, subStr) {\nconst escapedSubStr = subStr.replace(/[.+*?^$[\\]{}()|/]/g, '\\\\$&');\nconst matches = str.match(new RegExp(escapedSubStr, 'g'));\nreturn matches ? matches.length : 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1745,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\count-occurrences-of-a-substring.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1de97f88f6fa2c696d7621b82d04f7b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\count-the-coins.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59713bd26bdeb8a594fb9413\ntitle: Count the coins\nchallengeType: 1\nforumTopicId: 302238\ndashedName: count-the-coins\n--description--\nThere are four types of common coins in US currency:\nquarters (25 cents)\ndimes (10 cents)\nnickels (5 cents), and\npennies (1 cent)\nThere are six ways to make change for 15 cents:\nA dime and a nickel\nA dime and 5 pennies\n3 nickels\n2 nickels and 5 pennies\nA nickel and 10 pennies\n15 pennies\n--instructions--\nImplement a function to determine how many ways there are to make change for a given input, cents, that represents an amount of US pennies using these common coins.\n--hints--\ncountCoins should be a function.\njs\nassert(typeof countCoins === 'function');\ncountCoins(15) should return 6.\njs\nassert.equal(countCoins(15), 6);\ncountCoins(85) should return 163.\njs\nassert.equal(countCoins(85), 163);\ncountCoins(100) should return 242.\njs\nassert.equal(countCoins(100), 242);\n--seed--\n--seed-contents--\n```js\nfunction countCoins(cents) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction countCoins(cents) {\nconst operands = [1, 5, 10, 25];\nconst targetsLength = cents + 1;\nconst operandsLength = operands.length;\nconst t = [1];\nfor (let a = 0; a < operandsLength; a++) {\nfor (let b = 1; b < targetsLength; b++) {\n// initialise undefined target\nt[b] = t[b] ? t[b] : 0;\n// accumulate target + operand ways\nt[b] += (b < operands[a]) ? 0 : t[b - operands[a]];\n}\n}\nreturn t[targetsLength - 1];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1701,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\count-the-coins.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "80114d074438bc5e19a8899f356e6ac3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5951815dd895584b06884620\ntitle: Circles of given radius through two points\nchallengeType: 1\nforumTopicId: 302231\ndashedName: circles-of-given-radius-through-two-points\n--description--\nGiven two points on a plane and a radius, usually two circles of given radius can be drawn through the points Exceptions:\nA radius of zero should be treated as never describing circles (except in the case where the points are coincident) If the points are coincident then an infinite number of circles with the point on their circumference can be drawn, unless the radius is equal to zero as well which then collapses the circles to a point If the points form a diameter then return a single circle If the points are too far apart then no circles can be drawn --instructions--\nImplement a function that takes two points and a radius and returns the two circles through those points For each resulting circle, provide the coordinates for the center of each circle rounded to four decimal digits Return each coordinate as an array, and coordinates as an array of arrays For edge cases, return the following:\nIf points are on the diameter, return one point If the radius is also zero however, return \"Radius Zero\" If points are coincident, return \"Coincident point Infinite solutions\" If points are farther apart than the diameter, return \"No intersection Points further apart than circle diameter\" Sample inputs:\np1                p2           r\n0 1234, 0 9876    0 8765, 0 2345    2 0\n0 0000, 2 0000    0 0000, 0 0000    1 0\n0 1234, 0 9876    0 1234, 0 9876    2 0\n0 1234, 0 9876    0 8765, 0 2345    0 5\n0 1234, 0 9876    0 1234, 0 9876    0 0\n--hints--\ngetCircles should be a function js\nassert(typeof getCircles === 'function');\ngetCircles([0 1234, 0 9876], [0 8765, 0 2345], 2 0) should return [[1 8631, 1 9742], [-0 8632, -0 7521]] js\nassert deepEqual(getCircles(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
      "source_type": "git_repo"
    },
    "token_count": 521,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "59e0a829ab6045e3dfa9f5e5ac0a7259",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2 0 0 0000, 2 0000 0 0000, 0 0000 1 0 0 1234, 0 9876 0 1234, 0 9876 2 0 0 1234, 0 9876 0 8765, 0 2345 0 5 0 1234, 0 9876 0 1234, 0 9876 0 0 --hints-- getCircles should be a function js assert(typeof getCircles === 'function'); getCircles([0 1234, 0 9876], [0 8765, 0 2345], 2 0) should return [[1 8631, 1 9742], [-0 8632, -0 7521]] js assert deepEqual(getCircles(testCases[0]), answers[0]);\ngetCircles([0 0000, 2 0000], [0 0000, 0 0000], 1 0) should return [0, 1]\njs\nassert deepEqual(getCircles( testCases[1]), answers[1]);\ngetCircles([0 1234, 0 9876], [0 1234, 0 9876], 2 0) should return Coincident point Infinite solutions\njs\nassert deepEqual(getCircles( testCases[2]), answers[2]);\ngetCircles([0 1234, 0 9876], [0 8765, 0 2345], 0 5) should return No intersection Points further apart than circle diameter\njs\nassert deepEqual(getCircles( testCases[3]), answers[3]);\ngetCircles([0 1234, 0 9876], [0 1234, 0 9876], 0 0) should return Radius Zero\njs\nassert deepEqual(getCircles( testCases[4]), answers[4]);\n--seed--\n--after-user-code--\njs\nconst testCases = [\n[[0 1234, 0 9876], [0 8765, 0 2345], 2 0],\n[[0 0000, 2 0000], [0 0000, 0 0000], 1 0],\n[[0 1234, 0 9876], [0 1234, 0 9876], 2 0],\n[[0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
      "source_type": "git_repo"
    },
    "token_count": 531,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "db16bd985d114352ee45909fe49c43e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0 2345], 0 5) should return No intersection Points further apart than circle diameter js assert deepEqual(getCircles( testCases[3]), answers[3]); getCircles([0 1234, 0 9876], [0 1234, 0 9876], 0 0) should return Radius Zero js assert deepEqual(getCircles( testCases[4]), answers[4]); --seed-- --after-user-code-- js const testCases = [ [[0 1234, 0 9876], [0 8765, 0 2345], 2 0], [[0 0000, 2 0000], [0 0000, 0 0000], 1 0], [[0 1234, 0 9876], [0 1234, 0 9876], 2 0], [[01234, 0 9876], [0 8765, 0 2345], 0 5],\n[[0 1234, 0 9876], [0 1234, 0 9876], 0 0]\n];\nconst answers = [\n[[1 8631, 1 9742], [-0 8632, -0 7521]],\n[0, 1],\n'Coincident point Infinite solutions',\n'No intersection Points further apart than circle diameter',\n'Radius Zero'\n];\n--seed-contents--\n```js\nfunction getCircles( args) {\nreturn true;\n}\n```\n--solutions--\n```js\nconst hDist = (p1, p2) => Math hypot( p1 map((e, i) => e - p2[i])) / 2;\nconst pAng = (p1, p2) => Math atan(p1 map((e, i) => e - p2[i]) reduce((p, c) => c / p, 1));\nconst solveF = (p, r) => t => [parseFloat((r * Math cos(t) + p[0]) toFixed(4)), parseFloat((r * Math sin(t) + p[1]) toFixed(4))];\nconst diamPoints = (p1, p2) => p1 map((e, i) => parseFloat((e + (p2[i] - e) / 2) toFixed(4)));\nfunction getCircles(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "109c5c3f6abbe0c39e6424e5552e5572",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "p2) => Math hypot( p1 map((e, i) => e - p2[i])) / 2; const pAng = (p1, p2) => Math atan(p1 map((e, i) => e - p2[i]) reduce((p, c) => c / p, 1)); const solveF = (p, r) => t => [parseFloat((r * Math cos(t) + p[0]) toFixed(4)), parseFloat((r * Math sin(t) + p[1]) toFixed(4))]; const diamPoints = (p1, p2) => p1 map((e, i) => parseFloat((e + (p2[i] - e) / 2) toFixed(4))); function getCircles(args) {\nconst [p1, p2, s] = args;\nconst solve = solveF(p1, s);\nconst halfDist = hDist(p1, p2);\nlet msg = [];\nswitch (Math sign(s - halfDist)) {\ncase 0:\nmsg = s diamPoints(p1, p2) :\n'Radius Zero';\nbreak;\ncase 1:\nif ( halfDist) {\nmsg = 'Coincident point Infinite solutions';\n}\nelse {\nconst theta = pAng(p1, p2);\nconst theta2 = Math acos(halfDist / s);\n[1, -1] map(e => solve(theta + e * theta2)) forEach(\ne => msg push(e));\n}\nbreak;\ncase -1:\nmsg = 'No intersection Points further apart than circle diameter';\nbreak;\ndefault:\nmsg = 'Reached the default';\n}\nreturn msg;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\circles-of-given-radius-through-two-points.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d74edd61b6d4eaeeb3213c6815ab9c14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cumulative-standard-deviation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e03\ntitle: Cumulative standard deviation\nchallengeType: 1\nforumTopicId: 302240\ndashedName: cumulative-standard-deviation\n--description--\nSuppose that the entire population of interest is eight students in a particular class For a finite set of numbers, the population standard deviation is found by taking the square root of the average of the squared deviations of the values subtracted from their average value The marks of a class of eight students (that is, a statistical population) are the following eight values:\n$2, 4, 4, 4, 5, 5, 7, 9$\nThese eight data points have the mean (average) of 5:\n$$\\mu ={\\frac {2+4+4+4+5+5+7+9}{8}}={\\frac {40}{8}}=5$$\nFirst, calculate the deviations of each data point from the mean, and square the result of each:\n| Deviations of each data|  Square the result  |\n| ---------------------- | --------------------|\n| $(2-5)^{2}=(-3)^{2}=9$ | $(5-5)^{2}=0^{2}=0$ |\n| $(4-5)^{2}=(-1)^{2}=1$ | $(5-5)^{2}=0^{2}=0$ |\n| $(4-5)^{2}=(-1)^{2}=1$ | $(7-5)^{2}=2^{2}=4$ |\n| $(4-5)^{2}=(-1)^{2}=1$ | $(9-5)^{2}=4^{2}=16$|\nThe variance is the mean of these values:\n$$\\sigma ^{2}={\\frac {9+1+1+1+0+0+4+16}{8}}={\\frac {32}{8}}=4$$\nand the population standard deviation is equal to the square root of the variance:\n$$\\sigma ={\\sqrt {4}}=2$$\nWrite a function that takes an array of numbers as parameter and returns the standard deviation of the series --hints--\nstandardDeviation should be a function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cumulative-standard-deviation.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "769702e813e743e18d995f44df615890",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cumulative-standard-deviation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "---------------------- | --------------------| | $(2-5)^{2}=(-3)^{2}=9$ | $(5-5)^{2}=0^{2}=0$ | | $(4-5)^{2}=(-1)^{2}=1$ | $(5-5)^{2}=0^{2}=0$ | | $(4-5)^{2}=(-1)^{2}=1$ | $(7-5)^{2}=2^{2}=4$ | | $(4-5)^{2}=(-1)^{2}=1$ | $(9-5)^{2}=4^{2}=16$| The variance is the mean of these values: $$\\sigma ^{2}={\\frac {9+1+1+1+0+0+4+16}{8}}={\\frac {32}{8}}=4$$ and the population standard deviation is equal to the square root of the variance: $$\\sigma ={\\sqrt {4}}=2$$ Write a function that takes an array of numbers as parameter and returns the standard deviation of the series --hints-- standardDeviation should be a functionjs\nassert(typeof standardDeviation == 'function');\nstandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]) should return a number js\nassert(typeof standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]) == 'number');\nstandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]) should return 2 js\nassert equal(standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]), 2);\nstandardDeviation([600, 470, 170, 430, 300]) should return 147 323 js\nassert equal(standardDeviation([600, 470, 170, 430, 300]), 147 323);\nstandardDeviation([75, 83, 96, 100, 121, 125]) should return 18 239 js\nassert equal(standardDeviation([75, 83, 96, 100, 121, 125]), 18",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cumulative-standard-deviation.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "16a9e45425b5fd9eee2ed01878f84690",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cumulative-standard-deviation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "9]) should return a number js assert(typeof standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]) == 'number'); standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]) should return 2 js assert equal(standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]), 2); standardDeviation([600, 470, 170, 430, 300]) should return 147 323 js assert equal(standardDeviation([600, 470, 170, 430, 300]), 147 323); standardDeviation([75, 83, 96, 100, 121, 125]) should return 18 239 js assert equal(standardDeviation([75, 83, 96, 100, 121, 125]), 18239);\nstandardDeviation([23, 37, 45, 49, 56, 63, 63, 70, 72, 82]) should return 16 87 js\nassert equal(\nstandardDeviation([23, 37, 45, 49, 56, 63, 63, 70, 72, 82]),\n16 87\n);\nstandardDeviation([271, 354, 296, 301, 333, 326, 285, 298, 327, 316, 287, 314]) should return 22 631 js\nassert equal(\nstandardDeviation([\n271,\n354,\n296,\n301,\n333,\n326,\n285,\n298,\n327,\n316,\n287,\n314\n]),\n22 631\n);\n--seed--\n--seed-contents--\n```js\nfunction standardDeviation(arr) {\n}\n```\n--solutions--\n```js\nfunction standardDeviation(arr) {\nvar sum = 0,\nsum_sq = 0,\nn = arr length;\narr forEach(function(e) {\nsum += e;\nsum_sq += e * e;\n});\nvar std_dev = Math sqrt(sum_sq / n - Math pow(sum / n, 2));\nreturn Math round(std_dev * 1000) / 1000;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cumulative-standard-deviation.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "980d2621b56f80edc93b0117e74779b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5951a53863c8a34f02bf1bdc\ntitle: Closest-pair problem\nchallengeType: 1\nforumTopicId: 302232\ndashedName: closest-pair-problem\n--description--\nProvide a function to find the closest two points among a set of given points in two dimensions The straightforward solution is a $O(n^2)$ algorithm (which we can call brute-force algorithm); the pseudo-code (using indexes) could be simply:\nbruteForceClosestPair of P(1), P(2), P(N)\nif N < 2 then\nreturn ∞\nelse\nminDistance ← |P(1) - P(2)|\nminPoints ← { P(1), P(2) }\nforeach i ∈ [1, N-1]\nforeach j ∈ [i+1, N]\nif |P(i) - P(j)| < minDistance then\nminDistance ← |P(i) - P(j)|\nminPoints ← { P(i), P(j) }\nendif\nendfor\nendfor\nreturn minDistance, minPoints\nendif\nA better algorithm is based on the recursive divide and conquer approach, which is $O(n\\log n)$ a pseudo-code could be:\nclosestPair of (xP, yP)\nwhere xP is P(1) P(N) sorted by x coordinate, and\nyP is P(1)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "b45236d0318edc6ca4a2e4dc0a8e896e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ P(1), P(2) } foreach i ∈ [1, N-1] foreach j ∈ [i+1, N] if |P(i) - P(j)| < minDistance then minDistance ← |P(i) - P(j)| minPoints ← { P(i), P(j) } endif endfor endfor return minDistance, minPoints endif A better algorithm is based on the recursive divide and conquer approach, which is $O(n\\log n)$ a pseudo-code could be: closestPair of (xP, yP) where xP is P(1) P(N) sorted by x coordinate, and yP is P(1)P(N) sorted by y coordinate (ascending order)\nif N ≤ 3 then\nreturn closest points of xP using brute-force algorithm\nelse\nxL ← points of xP from 1 to ⌈N/2⌉\nxR ← points of xP from ⌈N/2⌉+1 to N\nxm ← xP(⌈N/2⌉)x\nyL ← { p ∈ yP : px ≤ xm }\nyR ← { p ∈ yP : px > xm }\n(dL, pairL) ← closestPair of (xL, yL)\n(dR, pairR) ← closestPair of (xR, yR)\n(dmin, pairMin) ← (dR, pairR)\nif dL < dR then\n(dmin, pairMin) ← (dL, pairL)\nendif\nyS ← { p ∈ yP : |xm - px| < dmin }\nnS ← number of points in yS\n(closest, closestPair) ← (dmin, pairMin)\nfor i from 1 to nS - 1\nk ← i + 1\nwhile k ≤ nS and yS(k)y - yS(i)y < dmin\nif |yS(k) - yS(i)| < closest then\n(closest, closestPair) ← (|yS(k) - yS(i)|, {yS(k), yS(i)})\nendif\nk ← k + 1\nendwhile\nendfor\nreturn closest, closestPair\nendif\nFor the input, expect the argument to be an array of Point objects with x and y members set to numbers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "9e3bbfa3d1daf7d1d8fd88dd7380d685",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(closest, closestPair) ← (dmin, pairMin) for i from 1 to nS - 1 k ← i + 1 while k ≤ nS and yS(k)y - yS(i)y < dmin if |yS(k) - yS(i)| < closest then (closest, closestPair) ← (|yS(k) - yS(i)|, {yS(k), yS(i)}) endif k ← k + 1 endwhile endfor return closest, closestPair endif For the input, expect the argument to be an array of Point objects with x and y members set to numbersReturn an object containing the key:value pairs for distance and pair (the pair of two closest points) For example getClosestPair with input array points:\njs\nconst points = [\nnew Point(1, 2),\nnew Point(3, 3),\nnew Point(2, 2)\n];\nWould return:\njs\n{\ndistance: 1,\npair: [\n{\nx: 1,\ny: 2\n},\n{\nx: 2,\ny: 2\n}\n]\n}\nNote: Sort the pair array by their x values in incrementing order --hints--\ngetClosestPair should be a function js\nassert(typeof getClosestPair === 'function');\ngetClosestPair(points1) distance should be 0 0894096443343775 js\nassert equal(getClosestPair(points1) distance, answer1 distance);\ngetClosestPair(points1) pair should be [ { x: 7 46489, y: 4 6268 }, { x: 7 46911, y: 4 71611 } ] js\nassert deepEqual(\nJSON parse(JSON stringify(getClosestPair(points1))) pair,\nanswer1 pair\n);\ngetClosestPair(points2) distance should be 65 06919393998976 js\nassert equal(getClosestPair(points2) distance, answer2 distance);\ngetClosestPair(points2) pair should be [ { x: 37134, y: 1963 }, { x: 37181, y: 2008 } ] js\nassert deepEqual(\nJSON parse(JSON stringify(getClosestPair(points2))) pair,\nanswer2 pair\n);\ngetClosestPair(points3) distance should be 6754 625082119658 js\nassert equal(getClosestPair(points3) distance, answer3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "d9e1999f86eed28cb7177877c1f8e37b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "7 46489, y: 4 6268 }, { x: 7 46911, y: 4 71611 } ] js assert deepEqual( JSON parse(JSON stringify(getClosestPair(points1))) pair, answer1 pair ); getClosestPair(points2) distance should be 65 06919393998976 js assert equal(getClosestPair(points2) distance, answer2 distance); getClosestPair(points2) pair should be [ { x: 37134, y: 1963 }, { x: 37181, y: 2008 } ] js assert deepEqual( JSON parse(JSON stringify(getClosestPair(points2))) pair, answer2 pair ); getClosestPair(points3) distance should be 6754 625082119658 js assert equal(getClosestPair(points3) distance, answer3distance);\ngetClosestPair(points3) pair should be [ { x: 46817, y: 64975 }, { x: 48953, y: 58567 } ] js\nassert deepEqual(\nJSON parse(JSON stringify(getClosestPair(points3))) pair,\nanswer3 pair\n);\n--seed--\n--after-user-code--\n```js\nconst points1 = [\nnew Point(0 748501, 4 09624),\nnew Point(3 00302, 5 26164),\nnew Point(3 61878,  9 52232),\nnew Point(7 46911,  4 71611),\nnew Point(5 7819,   2 69367),\nnew Point(2 34709,  8 74782),\nnew Point(2 87169,  5 97774),\nnew Point(6 33101,  0 463131),\nnew Point(7 46489,  4 6268),\nnew Point(1 45428,  0 087596)\n];\nconst answer1 = {\ndistance: 0 0894096443343775,\npair: [\n{\nx: 7 46489,\ny: 4 6268\n},\n{\nx: 7 46911,\ny: 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "9e4bb958a640b55c9a1ae83050593df6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= [ new Point(0 748501, 4 09624), new Point(3 00302, 5 26164), new Point(3 61878, 9 52232), new Point(7 46911, 4 71611), new Point(5 7819, 2 69367), new Point(2 34709, 8 74782), new Point(2 87169, 5 97774), new Point(6 33101, 0 463131), new Point(7 46489, 4 6268), new Point(1 45428, 0 087596) ]; const answer1 = { distance: 0 0894096443343775, pair: [ { x: 7 46489, y: 4 6268 }, { x: 7 46911, y: 471611\n}\n]\n};\nconst points2 = [\nnew Point(37100, 13118),\nnew Point(37134, 1963),\nnew Point(37181, 2008),\nnew Point(37276, 21611),\nnew Point(37307, 9320)\n];\nconst answer2 = {\ndistance: 65",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 263,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "53a9e7f4b3dbb1941f46824cea4b5d4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "34709, 8 74782), new Point(2 87169, 5 97774), new Point(6 33101, 0 463131), new Point(7 46489, 4 6268), new Point(1 45428, 0 087596) ]; const answer1 = { distance: 0 0894096443343775, pair: [ { x: 7 46489, y: 4 6268 }, { x: 7 46911, y: 471611 } ] }; const points2 = [ new Point(37100, 13118), new Point(37134, 1963), new Point(37181, 2008), new Point(37276, 21611), new Point(37307, 9320) ]; const answer2 = { distance: 6506919393998976,\npair: [\n{\nx: 37134,\ny: 1963\n},\n{\nx: 37181,\ny: 2008\n}\n]\n};\nconst points3 = [\nnew Point(16910, 54699),\nnew Point(14773, 61107),\nnew Point(95547, 45344),\nnew Point(95951, 17573),\nnew Point(5824, 41072),\nnew Point(8769, 52562),\nnew Point(21182, 41881),\nnew Point(53226, 45749),\nnew Point(68180, 887),\nnew Point(29322, 44017),\nnew Point(46817, 64975),\nnew Point(10501, 483),\nnew Point(57094, 60703),\nnew Point(23318, 35472),\nnew Point(72452, 88070),\nnew Point(67775, 28659),\nnew Point(19450, 20518),\nnew Point(17314, 26927),\nnew Point(98088, 11164),\nnew Point(25050, 56835),\nnew Point(8364, 6892),\nnew Point(37868, 18382),\nnew Point(23723, 7701),\nnew Point(55767, 11569),\nnew Point(70721, 66707),\nnew Point(31863, 9837),\nnew Point(49358, 30795),\nnew Point(13041, 39744),\nnew Point(59635, 26523),\nnew Point(25859, 1292),\nnew Point(1551, 53890),\nnew Point(70316, 94479),\nnew Point(48549, 86338),\nnew Point(46413, 92747),\nnew Point(27186, 50426),\nnew Point(27591, 22655),\nnew Point(10905, 46153),\nnew Point(40408, 84202),\nnew Point(52821, 73520),\nnew Point(84865, 77388),\nnew Point(99819, 32527),\nnew Point(34404, 75657),\nnew Point(78457, 96615),\nnew Point(42140, 5564),\nnew Point(62175, 92342),\nnew Point(54958, 67112),\nnew Point(4092, 19709),\nnew Point(99415, 60298),\nnew Point(51090, 52158),\nnew Point(48953, 58567)\n];\nconst answer3 = {\ndistance: 6754",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 738,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "113f4eecffda554c17b5a29925f1301e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "new Point(13041, 39744), new Point(59635, 26523), new Point(25859, 1292), new Point(1551, 53890), new Point(70316, 94479), new Point(48549, 86338), new Point(46413, 92747), new Point(27186, 50426), new Point(27591, 22655), new Point(10905, 46153), new Point(40408, 84202), new Point(52821, 73520), new Point(84865, 77388), new Point(99819, 32527), new Point(34404, 75657), new Point(78457, 96615), new Point(42140, 5564), new Point(62175, 92342), new Point(54958, 67112), new Point(4092, 19709), new Point(99415, 60298), new Point(51090, 52158), new Point(48953, 58567) ]; const answer3 = { distance: 6754625082119658,\npair: [\n{\nx: 46817,\ny: 64975\n},\n{\nx: 48953,\ny: 58567\n}\n]\n}\n```\n--seed-contents--\n```js\nconst Point = function(x, y) {\nthis x = x;\nthis y = y;\n};\nPoint prototype getX = function() {\nreturn this x;\n};\nPoint prototype getY = function() {\nreturn this y;\n};\nfunction getClosestPair(pointsArr) {\nreturn true;\n}\n```\n--solutions--\n```js\nconst Point = function(x, y) {\nthis x = x;\nthis y = y;\n};\nPoint prototype getX = function() {\nreturn this x;\n};\nPoint prototype getY = function() {\nreturn this y;\n};\nconst mergeSort = function mergeSort(points, comp) {\nif(points length < 2) return points;\nvar n = points length,\ni = 0,\nj = 0,\nleftN = Math floor(n / 2),\nrightN = leftN;\nvar leftPart = mergeSort( points slice(0, leftN), comp),\nrightPart = mergeSort( points slice(rightN), comp );\nvar sortedPart = [];\nwhile((i < leftPart",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "28c22d43c4d0ec64ff7143c54c362657",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}; Point prototype getX = function() { return this x; }; Point prototype getY = function() { return this y; }; const mergeSort = function mergeSort(points, comp) { if(points length < 2) return points; var n = points length, i = 0, j = 0, leftN = Math floor(n / 2), rightN = leftN; var leftPart = mergeSort( points slice(0, leftN), comp), rightPart = mergeSort( points slice(rightN), comp ); var sortedPart = []; while((i < leftPartlength) && (j < rightPart length)) {\nif(comp(leftPart[i], rightPart[j]) < 0) {\nsortedPart push(leftPart[i]);\ni += 1;\n}\nelse {\nsortedPart push(rightPart[j]);\nj += 1;\n}\n}\nwhile(i < leftPart length) {\nsortedPart push(leftPart[i]);\ni += 1;\n}\nwhile(j < rightPart length) {\nsortedPart push(rightPart[j]);\nj += 1;\n}\nreturn sortedPart;\n};\nconst closestPair = function _closestPair(Px, Py) {\nif(Px length < 2) return { distance: Infinity, pair: [ new Point(0, 0), new Point(0, 0) ] };\nif(Px length < 3) {\n//find euclid distance\nvar d = Math sqrt( Math pow(Math abs(Px[1] x - Px[0] x), 2) + Math pow(Math abs(Px[1] y - Px[0] y), 2) );\nreturn {\ndistance: d,\npair: [ Px[0], Px[1] ]\n};\n}\nvar n = Px length,\nleftN = Math floor(n / 2),\nrightN = leftN;\nvar Xl = Px slice(0, leftN),\nXr = Px slice(rightN),\nXm = Xl[leftN - 1],\nYl = [],\nYr = [];\n//separate Py\nfor(var i = 0; i < Py length; i += 1) {\nif(Py[i] x <= Xm x)\nYl push(Py[i]);\nelse\nYr push(Py[i]);\n}\nvar dLeft = _closestPair(Xl, Yl),\ndRight = _closestPair(Xr, Yr);\nvar minDelta = dLeft distance,\nclosestPair = dLeft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "d79400bafea51abaf939c19f5721aab0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "n = Px length, leftN = Math floor(n / 2), rightN = leftN; var Xl = Px slice(0, leftN), Xr = Px slice(rightN), Xm = Xl[leftN - 1], Yl = [], Yr = []; //separate Py for(var i = 0; i < Py length; i += 1) { if(Py[i] x <= Xm x) Yl push(Py[i]); else Yr push(Py[i]); } var dLeft = _closestPair(Xl, Yl), dRight = _closestPair(Xr, Yr); var minDelta = dLeft distance, closestPair = dLeftpair;\nif(dLeft distance > dRight distance) {\nminDelta = dRight distance;\nclosestPair = dRight pair;\n}\n//filter points around Xm within delta (minDelta)\nvar closeY = [];\nfor(i = 0; i < Py length; i += 1) {\nif(Math abs(Py[i] x - Xm x) < minDelta) closeY push(Py[i]);\n}\n//find min within delta 8 steps max\nfor(i = 0; i < closeY length; i += 1) {\nfor(var j = i + 1; j < Math min( (i + 8), closeY length ); j += 1) {\nvar d = Math sqrt( Math pow(Math abs(closeY[j] x - closeY[i] x), 2) + Math pow(Math abs(closeY[j] y - closeY[i] y), 2) );\nif(d < minDelta) {\nminDelta = d;\nclosestPair = [ closeY[i], closeY[j] ]\n}\n}\n}\nreturn {\ndistance: minDelta,\npair: closestPair sort((pointA, pointB) => pointA x - pointB x)\n};\n};\nfunction getClosestPair(points) {\nconst sortX = function(a, b) { return (a x < b x) -1 : ((a x > b x) 1 : 0); }\nconst sortY = function(a, b) { return (a y < b y) -1 : ((a y > b y) 1 : 0); }\nconst Px = mergeSort(points, sortX);\nconst Py = mergeSort(points, sortY);\nreturn closestPair(Px, Py);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\closest-pair-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "6d0b804c3267a8ff2e8aa91ffc651edd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cusip.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e05\ntitle: CUSIP\nchallengeType: 1\nforumTopicId: 302241\ndashedName: cusip\n--description--\nA CUSIP is a nine-character alphanumeric code that identifies a North American financial security for the purposes of facilitating clearing and settlement of trades The CUSIP was adopted as an American National Standard under Accredited Standards X9 6 --instructions--\nWrite a function that takes a string as a parameter and checks if the string is valid CUSIP --hints--\nisCusip should be a function js\nassert(typeof isCusip == 'function');\nisCusip(\"037833100\") should return a boolean js\nassert(typeof isCusip('037833100') == 'boolean');\nisCusip(\"037833100\") should return true js\nassert equal(isCusip('037833100'), true);\nisCusip(\"17275R102\") should return true js\nassert equal(isCusip('17275R102'), true);\nisCusip(\"38259P50a\") should return false js\nassert equal(isCusip('38259P50a'), false);\nisCusip(\"38259P508\") should return true js\nassert equal(isCusip('38259P508'), true);\nisCusip(\"38259P50#\") should return false js\nassert equal(isCusip('38259P50#'), false);\nisCusip(\"68389X105\") should return true js\nassert equal(isCusip('68389X105'), true);\nisCusip(\"68389X106\") should return false js\nassert equal(isCusip('68389X106'), false);\nisCusip(\"5949181\") should return false js\nassert equal(isCusip('5949181'), false);\n--seed--\n--seed-contents--\n```js\nfunction isCusip(s) {\n}\n```\n--solutions--\n```js\nfunction isCusip(s) {\nif (s length = 9) return false;\nvar sum = 0;\nvar ASCII = x => x charCodeAt(0);\nfor (var i = 0; i < 7; i++) {\nvar c = s",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cusip.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9a198c5f1d24ac7c6a03b4db4047e641",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cusip.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return false js assert equal(isCusip('38259P50#'), false); isCusip(\"68389X105\") should return true js assert equal(isCusip('68389X105'), true); isCusip(\"68389X106\") should return false js assert equal(isCusip('68389X106'), false); isCusip(\"5949181\") should return false js assert equal(isCusip('5949181'), false); --seed-- --seed-contents-- ```js function isCusip(s) { } ``` --solutions-- ```js function isCusip(s) { if (s length = 9) return false; var sum = 0; var ASCII = x => x charCodeAt(0); for (var i = 0; i < 7; i++) { var c = scharCodeAt(i);\nvar v;\nif (c >= ASCII('0') && c <= ASCII('9')) {\nv = c - 48;\n} else if (c >= ASCII('A') && c <= ASCII('Z')) {\nv = c - 64; // lower case letters apparently invalid\n} else if (c == ASCII('*')) {\nv = 36;\n} else if (c == ASCII('@')) {\nv = 37;\n} else if (c == ASCII('#')) {\nv = 38;\n} else {\nreturn false;\n}\nif (i % 2 == 1) v *= 2; // check if odd as using 0-based indexing\nsum += Math floor(v / 10) + (v % 10);\n}\nreturn s charCodeAt(8) - 48 == (10 - (sum % 10)) % 10;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cusip.md",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d05e04f881b0915aa0c7e6c1c2a85d17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59713da0a428c1a62d7db430\ntitle: Cramer's rule\nchallengeType: 1\nforumTopicId: 302239\ndashedName: cramers-rule\n--description--\nCramer's rule is a formula for solving a system of linear equations by using the determinants of matrices formed from subsets of the coefficients and right hand side values The determinant of a matrix with 2 rows and two columns is given by:\n$\\begin{aligned}|A|={\\begin{vmatrix}a&b\\\\c&d\\end{vmatrix}}=ad-bc \\end{aligned}$\nGiven a system of linear equations:\n$\\left\\{\\begin{matrix}a_1x + b_1y + c_1z&= {\\color{red}d_1}\\\\a_2x + b_2y + c_2z&= {\\color{red}d_2}\\\\a_3x + b_3y + c_3z&= {\\color{red}d_3}\\end{matrix}\\right $\nwhich in matrix format is\n$\\begin{bmatrix} a_1 & b_1 & c_1 \\\\ a_2 & b_2 & c_2 \\\\ a_3 & b_3 & c_3 \\end{bmatrix}\\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix}=\\begin{bmatrix} {\\color{red}d_1} \\\\ {\\color{red}d_2} \\\\ {\\color{red}d_3} \\end{bmatrix}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "8db9749137e22ce86dcf87ef2b458386",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "values The determinant of a matrix with 2 rows and two columns is given by: $\\begin{aligned}|A|={\\begin{vmatrix}a&b\\\\c&d\\end{vmatrix}}=ad-bc \\end{aligned}$ Given a system of linear equations: $\\left\\{\\begin{matrix}a_1x + b_1y + c_1z&= {\\color{red}d_1}\\\\a_2x + b_2y + c_2z&= {\\color{red}d_2}\\\\a_3x + b_3y + c_3z&= {\\color{red}d_3}\\end{matrix}\\right $ which in matrix format is $\\begin{bmatrix} a_1 & b_1 & c_1 \\\\ a_2 & b_2 & c_2 \\\\ a_3 & b_3 & c_3 \\end{bmatrix}\\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix}=\\begin{bmatrix} {\\color{red}d_1} \\\\ {\\color{red}d_2} \\\\ {\\color{red}d_3} \\end{bmatrix}$\nThen the values of $x, y$ and $z$ can be found as follows:\n$x = \\frac{\\begin{vmatrix} {\\color{red}d_1} & b_1 & c_1 \\\\ {\\color{red}d_2} & b_2 & c_2 \\\\ {\\color{red}d_3} & b_3 & c_3 \\end{vmatrix} } { \\begin{vmatrix} a_1 & b_1 & c_1 \\\\ a_2 & b_2 & c_2 \\\\ a_3 & b_3 & c_3 \\end{vmatrix}}, \\quad y = \\frac {\\begin{vmatrix} a_1 & {\\color{red}d_1} & c_1 \\\\ a_2 & {\\color{red}d_2} & c_2 \\\\ a_3 & {\\color{red}d_3} & c_3 \\end{vmatrix}} {\\begin{vmatrix} a_1 & b_1 & c_1 \\\\ a_2 & b_2 & c_2 \\\\ a_3 & b_3 & c_3 \\end{vmatrix}}, \\text{ and }z = \\frac { \\begin{vmatrix} a_1 & b_1 & {\\color{red}d_1} \\\\ a_2 & b_2 & {\\color{red}d_2} \\\\ a_3 & b_3 & {\\color{red}d_3} \\end{vmatrix}} {\\begin{vmatrix} a_1 & b_1 & c_1 \\\\ a_2 & b_2 & c_2 \\\\ a_3 & b_3 & c_3 \\end{vmatrix} }",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
      "source_type": "git_repo"
    },
    "token_count": 637,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "aba4546d9b4a02db05f915791ab2a94b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a_2 & {\\color{red}d_2} & c_2 \\\\ a_3 & {\\color{red}d_3} & c_3 \\end{vmatrix}} {\\begin{vmatrix} a_1 & b_1 & c_1 \\\\ a_2 & b_2 & c_2 \\\\ a_3 & b_3 & c_3 \\end{vmatrix}}, \\text{ and }z = \\frac { \\begin{vmatrix} a_1 & b_1 & {\\color{red}d_1} \\\\ a_2 & b_2 & {\\color{red}d_2} \\\\ a_3 & b_3 & {\\color{red}d_3} \\end{vmatrix}} {\\begin{vmatrix} a_1 & b_1 & c_1 \\\\ a_2 & b_2 & c_2 \\\\ a_3 & b_3 & c_3 \\end{vmatrix} }$\n--instructions--\nGiven the following system of equations:\n$\\begin{cases} 2w-x+5y+z=-3 \\\\ 3w+2x+2y-6z=-32 \\\\ w+3x+3y-z=-47 \\\\ 5w-2x-3y+3z=49 \\\\ \\end{cases}$\nsolve for $w$, $x$, $y$ and $z$, using Cramer's rule --hints--\ncramersRule should be a function js\nassert(typeof cramersRule === 'function');\ncramersRule([[2, -1, 5, 1], [3, 2, 2, -6], [1, 3, 3, -1], [5, -2, -3, 3]], [-3, -32, -47, 49]) should return [2, -12, -4, 1] js\nassert deepEqual(cramersRule(matrices[0], freeTerms[0]), answers[0]);\ncramersRule([[3, 1, 1], [2, 2, 5], [1, -3, -4]], [3, -1, 2]) should return [1, 1, -1] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "e48e98918b499c3137ff212706f68838",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "w+3x+3y-z=-47 \\\\ 5w-2x-3y+3z=49 \\\\ \\end{cases}$ solve for $w$, $x$, $y$ and $z$, using Cramer's rule --hints-- cramersRule should be a function js assert(typeof cramersRule === 'function'); cramersRule([[2, -1, 5, 1], [3, 2, 2, -6], [1, 3, 3, -1], [5, -2, -3, 3]], [-3, -32, -47, 49]) should return [2, -12, -4, 1] js assert deepEqual(cramersRule(matrices[0], freeTerms[0]), answers[0]); cramersRule([[3, 1, 1], [2, 2, 5], [1, -3, -4]], [3, -1, 2]) should return [1, 1, -1] js assertdeepEqual(cramersRule(matrices[1], freeTerms[1]), answers[1]);\n--seed--\n--after-user-code--\n```js\nconst matrices = [\n[\n[2, -1, 5, 1],\n[3, 2, 2, -6],\n[1, 3, 3, -1],\n[5, -2, -3, 3]\n],\n[\n[3, 1, 1],\n[2, 2, 5],\n[1, -3, -4]\n]\n];\nconst freeTerms = [[-3, -32, -47, 49], [3, -1, 2]];\nconst answers = [[2, -12, -4, 1], [1, 1, -1]];\n```\n--seed-contents--\n```js\nfunction cramersRule(matrix, freeTerms) {\nreturn true;\n}\n```\n--solutions--\n```js\n/*\n* Compute Cramer's Rule\n* @param  {array} matrix    x,y,z, etc terms\n* @param  {array} freeTerms\n* @return {array}           solution for x,y,z, etc",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "2a0fad3fb0abd5d50b7360f8e09470e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3, 3, -1], [5, -2, -3, 3] ], [ [3, 1, 1], [2, 2, 5], [1, -3, -4] ] ]; const freeTerms = [[-3, -32, -47, 49], [3, -1, 2]]; const answers = [[2, -12, -4, 1], [1, 1, -1]]; ``` --seed-contents-- ```js function cramersRule(matrix, freeTerms) { return true; } ``` --solutions-- ```js /* * Compute Cramer's Rule * @param {array} matrix x,y,z, etc terms * @param {array} freeTerms * @return {array} solution for x,y,z, etc/\nfunction cramersRule(matrix, freeTerms) {\nconst det = detr(matrix);\nconst returnArray = [];\nlet i;\nfor (i = 0; i < matrix[0] length; i++) {\nconst tmpMatrix = insertInTerms(matrix, freeTerms, i);\nreturnArray push(detr(tmpMatrix) / det);\n}\nreturn returnArray;\n}\n/\n* Inserts single dimensional array into\n* @param  {array} matrix multidimensional array to have ins inserted into\n* @param  {array} ins single dimensional array to be inserted vertically into matrix\n* @param  {array} at  zero based offset for ins to be inserted into matrix\n* @return {array}     New multidimensional array with ins replacing the at column in matrix\n*/\nfunction insertInTerms(matrix, ins, at) {\nconst tmpMatrix = clone(matrix);\nlet i;\nfor (i = 0; i < matrix length; i++) {\ntmpMatrix[i][at] = ins[i];\n}\nreturn tmpMatrix;\n}\n/\n* Compute the determinate of a matrix No protection, assumes square matrix\n* function borrowed, and adapted from MIT Licensed numericjs library (www numericjs com)\n* @param  {array} m Input Matrix (multidimensional array)\n* @return {number}   result rounded to 2 decimal\n*/\nfunction detr(m) {\nlet ret = 1;\nlet j;\nlet k;\nconst A = clone(m);\nconst n = m[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "8fdf5079fa761155300cc8ca3c2f87b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0; i < matrix length; i++) { tmpMatrix[i][at] = ins[i]; } return tmpMatrix; } / * Compute the determinate of a matrix No protection, assumes square matrix * function borrowed, and adapted from MIT Licensed numericjs library (www numericjs com) * @param {array} m Input Matrix (multidimensional array) * @return {number} result rounded to 2 decimal */ function detr(m) { let ret = 1; let j; let k; const A = clone(m); const n = m[0]length;\nlet alpha;\nfor (j = 0; j < n - 1; j++) {\nk = j;\nfor (let i = j + 1; i < n; i++) { if (Math abs(A[i][j]) > Math abs(A[k][j])) { k = i; } }\nif (k == j) {\nconst temp = A[k]; A[k] = A[j]; A[j] = temp;\nret = -1;\n}\nconst Aj = A[j];\nfor (let i = j + 1; i < n; i++) {\nconst Ai = A[i];\nalpha = Ai[j] / Aj[j];\nfor (k = j + 1; k < n - 1; k += 2) {\nconst k1 = k + 1;\nAi[k] -= Aj[k] * alpha;\nAi[k1] -= Aj[k1] * alpha;\n}\nif (k == n) { Ai[k] -= Aj[k] * alpha; }\n}\nif (Aj[j] === 0) { return 0; }\nret = Aj[j];\n}\nreturn Math round(ret * A[j][j] * 100) / 100;\n}\n/*\n* Clone two dimensional Array using ECMAScript 5 map function and EcmaScript 3 slice\n* @param  {array} m Input matrix (multidimensional array) to clone\n* @return {array}   New matrix copy\n/\nfunction clone(m) {\nreturn m map(a => a slice());\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cramers-rule.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "829f73c12a8977697b7cb3dadda03c37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-format.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59669d08d75b60482359409f\ntitle: Date format\nchallengeType: 1\nforumTopicId: 302243\ndashedName: date-format\n--description--\nReturn an array with two date strings of the current date with the following specifications:\nThe first string's date order should be the year number, month number, and day number separated by dashes (-) The first string's year should be four digits in length The first string's month and day should not contain any leading zeros The second string's weekday and month names should not be abbreviated The second string's day should not contain any leading zeros Example outputs:\njs\n['2007-11-23', 'Friday, November 23, 2007']\n['2021-3-2', 'Tuesday, March 2, 2021']\n--hints--\ngetDateFormats should be a function js\nassert(typeof getDateFormats === 'function');\ngetDateFormats should return an object js\nassert(typeof getDateFormats() === 'object');\ngetDateFormats should return an array with 2 elements js\nassert(getDateFormats() length === 2);\ngetDateFormats should return the correct date in the right format\njs\nassert deepEqual(getDateFormats(), dates, equalsMessage);\n--seed--\n--after-user-code--\n``js\nconst getDateSolution = () => {\nconst date = new Date();\nconst weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst fmt1 =${date getFullYear()}-${(1 + date getMonth())}-${date getDate()};\nconst fmt2 =${weekdays[date getDay()]}, ${months[date getMonth()]} ${date getDate()}, ${date getFullYear()}`;\nreturn [fmt1, fmt2];\n};\nconst dates = getDateSolution();\nconst equalsMessage = message: <code>getDataFormats()</code> should return <code>[\"${dates[0]}\", \"${dates[1]}\"]</code>",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-format.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3c00cd6d64dc5e70885064fa151778a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-format.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dates, equalsMessage); --seed-- --after-user-code-- ``js const getDateSolution = () => { const date = new Date(); const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; const fmt1 =${date getFullYear()}-${(1 + date getMonth())}-${date getDate()}; const fmt2 =${weekdays[date getDay()]}, ${months[date getMonth()]} ${date getDate()}, ${date getFullYear()}`; return [fmt1, fmt2]; }; const dates = getDateSolution(); const equalsMessage = message: <code>getDataFormats()</code> should return <code>[\"${dates[0]}\", \"${dates[1]}\"]</code>;\n```\n--seed-contents--\n```js\nfunction getDateFormats() {\nreturn true;\n}\n```\n--solutions--\njs\nfunction getDateFormats() {\nconst date = new Date();\nconst weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst fmt1 = `${date getFullYear()}-${(1 + date getMonth())}-${date getDate()}`;\nconst fmt2 = `${weekdays[date getDay()]}, ${months[date getMonth()]} ${date getDate()}, ${date getFullYear()}`;\nreturn [fmt1, fmt2];\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-format.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7f59999ccc4cde23c4178deae72c7029",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cut-a-rectangle.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e06\ntitle: Cut a rectangle\nchallengeType: 1\nforumTopicId: 302242\ndashedName: cut-a-rectangle\n--description--\nA given rectangle is made from m × n squares If m and n are not both odd, then it is possible to cut a path through the rectangle along the square edges such that the rectangle splits into two connected pieces with the same shape (after rotating one of the pieces by 180°) All such paths for 2 × 2 and 4 × 3 rectangles are shown below --instructions--\nWrite a function that calculates the number of different ways to cut an m × n rectangle --hints--\ncutRectangle should be a function js\nassert(typeof cutRectangle == 'function');\ncutRectangle(2, 2) should return a number js\nassert(typeof cutRectangle(2, 2) == 'number');\ncutRectangle(2, 2) should return 2 js\nassert equal(cutRectangle(2, 2), 2);\ncutRectangle(4, 3) should return 9 js\nassert equal(cutRectangle(4, 3), 9);\ncutRectangle(4, 4) should return 22 js\nassert equal(cutRectangle(4, 4), 22);\ncutRectangle(8, 3) should return 53 js\nassert equal(cutRectangle(8, 3), 53);\ncutRectangle(7, 4) should return 151 js\nassert equal(cutRectangle(7, 4), 151);\n--seed--\n--seed-contents--\n```js\nfunction cutRectangle(w, h) {\n}\n```\n--solutions--\n```js\nfunction cutRectangle(w, h) {\nif (w % 2 == 1 && h % 2 == 1) return;\nvar dirs = [[0, -1], [-1, 0], [0, 1], [1, 0]];\nvar grid = new Array(h);\nfor (var i = 0; i < grid length; i++) grid[i] = new Array(w);\nvar stack = [];\nvar half = Math floor((w * h) / 2);\nvar bits = Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5772,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cut-a-rectangle.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3ebeeebdb0b033c7562145197a67846a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cut-a-rectangle.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "151); --seed-- --seed-contents-- ```js function cutRectangle(w, h) { } ``` --solutions-- ```js function cutRectangle(w, h) { if (w % 2 == 1 && h % 2 == 1) return; var dirs = [[0, -1], [-1, 0], [0, 1], [1, 0]]; var grid = new Array(h); for (var i = 0; i < grid length; i++) grid[i] = new Array(w); var stack = []; var half = Math floor((w * h) / 2); var bits = Mathpow(2, half) - 1;\nvar result = 0;\nfor (; bits > 0; bits -= 2) {\nfor (var i = 0; i < half; i++) {\nvar r = Math floor(i / w);\nvar c = i % w;\ngrid[r][c] = (bits & (1 << i)) = 0 1 : 0;\ngrid[h - r - 1][w - c - 1] = 1 - grid[r][c];\n}\nstack push(0);\ngrid[0][0] = 2;\nvar count = 1;\nwhile (stack length = 0) {\nvar pos = stack pop();\nvar r = Math floor(pos / w);\nvar c = pos % w;\nfor (var dir of dirs) {\nvar nextR = r + dir[0];\nvar nextC = c + dir[1];\nif (nextR >= 0 && nextR < h && nextC >= 0 && nextC < w) {\nif (grid[nextR][nextC] == 1) {\nstack push(nextR * w + nextC);\ngrid[nextR][nextC] = 2;\ncount++;\n}\n}\n}\n}\nif (count == half) {\nresult++;\n}\n}\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5772,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\cut-a-rectangle.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "acea46dac11a66b2b8de23dc24a09206",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\day-of-the-week.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5966f99c45e8976909a85575\ntitle: Day of the week\nchallengeType: 1\nforumTopicId: 302245\ndashedName: day-of-the-week\n--description--\nA company decides that whenever Xmas falls on a Sunday they will give their workers all extra paid holidays so that, together with any public holidays, workers will not have to work the following week (between the 25th of December and the first of January) --instructions--\nWrite a function that takes a start year and an end year and return an array of all the years where the 25th of December will be a Sunday --hints--\nfindXmasSunday should be a function js\nassert(typeof findXmasSunday === 'function');\nfindXmasSunday(2000, 2100) should return an array js\nassert(typeof findXmasSunday(2000, 2100) === 'object');\nfindXmasSunday(1970, 2017) should return [1977, 1983, 1988, 1994, 2005, 2011, 2016]\njs\nassert deepEqual(findXmasSunday(1970, 2017), firstSolution);\nfindXmasSunday(2008, 2121) should return [2011, 2016, 2022, 2033, 2039, 2044, 2050, 2061, 2067, 2072, 2078, 2089, 2095, 2101, 2107, 2112, 2118]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\day-of-the-week.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f1724f24bc9b3357ded488384273f3eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\day-of-the-week.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "array of all the years where the 25th of December will be a Sunday --hints-- findXmasSunday should be a function js assert(typeof findXmasSunday === 'function'); findXmasSunday(2000, 2100) should return an array js assert(typeof findXmasSunday(2000, 2100) === 'object'); findXmasSunday(1970, 2017) should return [1977, 1983, 1988, 1994, 2005, 2011, 2016] js assert deepEqual(findXmasSunday(1970, 2017), firstSolution); findXmasSunday(2008, 2121) should return [2011, 2016, 2022, 2033, 2039, 2044, 2050, 2061, 2067, 2072, 2078, 2089, 2095, 2101, 2107, 2112, 2118] js assertdeepEqual(findXmasSunday(2008, 2121), secondSolution);\n--seed--\n--after-user-code--\njs\nconst firstSolution = [1977, 1983, 1988, 1994, 2005, 2011, 2016];\nconst secondSolution = [2011, 2016, 2022, 2033, 2039, 2044, 2050, 2061, 2067, 2072, 2078, 2089, 2095, 2101, 2107, 2112, 2118];\n--seed-contents--\n```js\nfunction findXmasSunday(start, end) {\nreturn true;\n}\n```\n--solutions--\njs\nfunction findXmasSunday(start, end) {\nconst xmasSunday = [];\nfor (let year = start; year <= end; year++) {\nconst xmas = new Date(year, 11, 25);\nif (xmas getDay() === 0) {\nxmasSunday push(year);\n}\n}\nreturn xmasSunday;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\day-of-the-week.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "efb4b84d80d51afe5018023c35857eea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deepcopy.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 596a8888ab7c01048de257d5\ntitle: Deepcopy\nchallengeType: 1\nforumTopicId: 302247\ndashedName: deepcopy\n--description--\nWrite a function that returns a deep copy of a given object. The copy must not be the same object that was given.\nThis task will not test for:\nObjects with properties that are functions\nDate objects or object with properties that are Date objects\nRegEx or object with properties that are RegEx objects\nPrototype copying\n--hints--\ndeepcopy should be a function.\njs\nassert(typeof deepcopy === 'function');\ndeepcopy({test: \"test\"}) should return an object.\njs\nassert(typeof deepcopy(obj1) === 'object');\ndeepcopy should not return the same object that was provided.\njs\nassert(deepcopy(obj2) != obj2);\nWhen passed an object containing an array, deepcopy should return a deep copy of the object.\njs\nassert.deepEqual(deepcopy(obj2), obj2);\nWhen passed an object containing another object, deepcopy  should return a deep copy of the object.\njs\nassert.deepEqual(deepcopy(obj3), obj3);\n--seed--\n--after-user-code--\njs\nconst obj1 = { test: 'test' };\nconst obj2 = {\nt: 'test',\na: ['an', 'array']\n};\nconst obj3 = {\nt: 'try',\no: obj2\n};\n--seed-contents--\n```js\nfunction deepcopy(obj) {\nreturn true;\n}\n```\n--solutions--\njs\nfunction deepcopy(obj) {\nreturn JSON.parse(JSON.stringify(obj));\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deepcopy.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "acbd6f66667d4b409e68278e43fefe05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-manipulation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5966c21cf732a95f1b67dd28\ntitle: Date manipulation\nchallengeType: 1\nforumTopicId: 302244\ndashedName: date-manipulation\n--description--\nGiven a date string in EST, output the given date as a string with 12 hours added to the time Time zone should be preserved Example input: \"March 6 2009 7:30pm EST\"\nExample output: \"March 7 2009 7:30am EST\"\n--hints--\nadd12Hours should be a function js\nassert(typeof add12Hours === 'function');\nadd12Hours(dateString) should return a string js\nassert(typeof add12Hours('January 17 2017 11:43am EST') === 'string');\nadd12Hours(\"January 17 2017 11:43am EST\") should return \"January 17 2017 11:43pm EST\"\njs\nassert(\nadd12Hours('January 17 2017 11:43am EST') === 'January 17 2017 11:43pm EST'\n);\nShould handle day change add12Hours(\"March 6 2009 7:30pm EST\") should return \"March 7 2009 7:30am EST\"\njs\nassert(add12Hours('March 6 2009 7:30pm EST') === 'March 7 2009 7:30am EST');\nShould handle month change in a leap years add12Hours(\"February 29 2004 9:15pm EST\") should return \"March 1 2004 9:15am EST\"\njs\nassert(add12Hours('February 29 2004 9:15pm EST') === 'March 1 2004 9:15am EST');\nShould handle month change in a common years add12Hours(\"February 28 1999 3:15pm EST\") should return \"March 1 1999 3:15am EST\"\njs\nassert(add12Hours('February 28 1999 3:15pm EST') === 'March 1 1999 3:15am EST');\nShould handle year change",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2803,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-manipulation.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c70ff2d171f60b7590debd49ea5ea9d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-manipulation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "7:30pm EST') === 'March 7 2009 7:30am EST'); Should handle month change in a leap years add12Hours(\"February 29 2004 9:15pm EST\") should return \"March 1 2004 9:15am EST\" js assert(add12Hours('February 29 2004 9:15pm EST') === 'March 1 2004 9:15am EST'); Should handle month change in a common years add12Hours(\"February 28 1999 3:15pm EST\") should return \"March 1 1999 3:15am EST\" js assert(add12Hours('February 28 1999 3:15pm EST') === 'March 1 1999 3:15am EST'); Should handle year changeadd12Hours(\"December 31 2020 1:45pm EST\") should return \"January 1 2021 1:45am EST\"\njs\nassert(\nadd12Hours('December 31 2020 1:45pm EST') === 'January 1 2021 1:45am EST'\n);\n--seed--\n--seed-contents--\n```js\nfunction add12Hours(dateString) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction add12Hours(dateString) {\nconst months = ['January', 'February', 'March', 'April', 'May', 'June',\n'July', 'August', 'September', 'October', 'November', 'December'];\n// Get the parts of the string\nconst parts = dateString split(' ');\nconst month = months indexOf(parts[0]);\nconst day = parseInt(parts[1], 10);\nconst year = parseInt(parts[2], 10);\nconst time = parts[3] split(':');\nlet hours = parseInt(time[0], 10);\nif (time[1] slice(-2) === 'pm') {\nhours += 12;\n}\nconst minutes = parseInt(time[1] slice(0, -2), 10);\n// Create a date with given parts, and updated hours\nconst date = new Date();\ndate setFullYear(year, month, day);\ndate setHours(hours + 12);  // Add 12 hours\ndate setMinutes(minutes);\nlet hoursOutput = date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2803,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-manipulation.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ac5bfec28d5229aab6574336a633236d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-manipulation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'); const month = months indexOf(parts[0]); const day = parseInt(parts[1], 10); const year = parseInt(parts[2], 10); const time = parts[3] split(':'); let hours = parseInt(time[0], 10); if (time[1] slice(-2) === 'pm') { hours += 12; } const minutes = parseInt(time[1] slice(0, -2), 10); // Create a date with given parts, and updated hours const date = new Date(); date setFullYear(year, month, day); date setHours(hours + 12); // Add 12 hours date setMinutes(minutes); let hoursOutput = dategetHours();\nlet abbreviation = 'am';\nif (hoursOutput > 12) {\nhoursOutput -= 12;\nabbreviation = 'pm';\n}\nreturn ${months[date getMonth()]} ${date getDate()} ${date getFullYear()} ${hoursOutput}:${date getMinutes()}${abbreviation} EST;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2803,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\date-manipulation.md",
      "source_type": "git_repo"
    },
    "token_count": 203,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "dbe0bb74696bd783df1738e105422171",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\define-a-primitive-data-type.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 597089c87eec450c68aa1643\ntitle: Define a primitive data type\nchallengeType: 1\nforumTopicId: 302248\ndashedName: define-a-primitive-data-type\n--description--\nDefine a type that behaves like an integer but has a lowest valid value of 1 and a highest valid value of 10 Error handling:\nIf you try to instantiate a Num with a value outside of 1 - 10, it should throw a TypeError with an error message of 'Out of range' If you try to instantiate a Num with a value that is not a number, it should throw a TypeError with an error message of 'Not a Number' --hints--\nNum should be a function js\nassert(typeof Num === 'function');\nnew Num(4) should return an object js\nassert(typeof new Num(4) === 'object');\nnew Num('test') should throw a TypeError with message 'Not a Number' js\nassert throws(() => new Num('test'), TypeError);\nnew Num(0) should throw a TypeError with message 'Out of range' js\nassert throws(() => new Num(0), TypeError);\nnew Num(-5) should throw a TypeError with message 'Out of range' js\nassert throws(() => new Num(-5), TypeError);\nnew Num(10) should throw a TypeError with message 'Out of range' js\nassert throws(() => new Num(11), TypeError);\nnew Num(20) should throw a TypeError with message 'Out of range' js\nassert throws(() => new Num(20), TypeError);\nnew Num(3) + new Num(4) should equal 7 js\nassert equal(new Num(3) + new Num(4), 7);\nnew Num(3) - new Num(4) should equal -1 js\nassert equal(new Num(3) - new Num(4), -1);\nnew Num(3) * new Num(4) should equal 12 js\nassert equal(new Num(3) * new Num(4), 12);\nnew Num(3) / new Num(4) should equal 0 75 js\nassert equal(new Num(3) / new Num(4), 0 75);\nnew Num(3) < new Num(4) should be true",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2572,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\define-a-primitive-data-type.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bf25e80c440b66935a33bc61bab9c82a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\define-a-primitive-data-type.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Num(20), TypeError); new Num(3) + new Num(4) should equal 7 js assert equal(new Num(3) + new Num(4), 7); new Num(3) - new Num(4) should equal -1 js assert equal(new Num(3) - new Num(4), -1); new Num(3) * new Num(4) should equal 12 js assert equal(new Num(3) * new Num(4), 12); new Num(3) / new Num(4) should equal 0 75 js assert equal(new Num(3) / new Num(4), 0 75); new Num(3) < new Num(4) should be truejs\nassert(new Num(3) < new Num(4));\nnew Num(3) > new Num(4) should be false js\nassert( (new Num(3) > new Num(4)));\n(new Num(5)) toString() should return '5'\njs\nassert equal(new Num(5) toString(), '5');\n--seed--\n--seed-contents--\n```js\nfunction Num(n) {\nreturn n;\n}\n```\n--solutions--\n```js\nfunction Num(n) {\nif (isNaN(n)) {\nthrow new TypeError('Not a Number');\n}\nif (n < 1 || n > 10) {\nthrow new TypeError('Out of range');\n}\nthis _value = +n;\n}\nNum prototype valueOf = function() { return this _value; };\nNum prototype toString = function () { return this _value toString(); };\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2572,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\define-a-primitive-data-type.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "009f8408236116cbcaaf82262288d763",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\department-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59f40b17e79dbf1ab720ed7a\ntitle: Department Numbers\nchallengeType: 1\nforumTopicId: 302249\ndashedName: department-numbers\n--description--\nThere is a highly organized city that has decided to assign a number to each of their departments:\nPolice department\nSanitation department\nFire department\nEach department can have a number between 1 and 7 (inclusive) The three department numbers are to be unique (different from each other) and must add up to the number 12 The Chief of the Police doesn't like odd numbers and wants to have an even number for his department --instructions--\nWrite a program which outputs all valid combinations as an array js\n[2, 3, 7] [2, 4, 6] [2, 6, 4]\n[2, 7, 3] [4, 1, 7] [4, 2, 6]\n[4, 3, 5] [4, 5, 3] [4, 6, 2]\n[4, 7, 1] [6, 1, 5] [6, 2, 4]\n[6, 4, 2] [6, 5, 1]\n--hints--\ncombinations should be a function js\nassert(typeof combinations === 'function');\ncombinations([1, 2, 3], 6) should return an Array js\nassert(Array isArray(combinations([1, 2, 3], 6)));\ncombinations([1, 2, 3, 4, 5, 6, 7], 12) should return an array of length 14 js\nassert(combinations(nums, total) length === len);\ncombinations([1, 2, 3, 4, 5, 6, 7], 12) should return all valid combinations js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\department-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "75e86f5fed1d7e3918bf2a0a9ca96aea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\department-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[4, 7, 1] [6, 1, 5] [6, 2, 4] [6, 4, 2] [6, 5, 1] --hints-- combinations should be a function js assert(typeof combinations === 'function'); combinations([1, 2, 3], 6) should return an Array js assert(Array isArray(combinations([1, 2, 3], 6))); combinations([1, 2, 3, 4, 5, 6, 7], 12) should return an array of length 14 js assert(combinations(nums, total) length === len); combinations([1, 2, 3, 4, 5, 6, 7], 12) should return all valid combinations js assertdeepEqual(combinations(nums, total), result);\n--seed--\n--after-user-code--\njs\nconst nums = [1, 2, 3, 4, 5, 6, 7];\nconst total = 12;\nconst len = 14;\nconst result = [\n[2, 3, 7],\n[2, 4, 6],\n[2, 6, 4],\n[2, 7, 3],\n[4, 1, 7],\n[4, 2, 6],\n[4, 3, 5],\n[4, 5, 3],\n[4, 6, 2],\n[4, 7, 1],\n[6, 1, 5],\n[6, 2, 4],\n[6, 4, 2],\n[6, 5, 1]\n];\n--seed-contents--\n```js\nfunction combinations(possibleNumbers, total) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction combinations(possibleNumbers, total) {\nlet firstNumber;\nlet secondNumber;\nlet thirdNumber;\nconst allCombinations = [];\nfor (let i = 0; i < possibleNumbers length; i += 1) {\nfirstNumber = possibleNumbers[i];\nif (firstNumber % 2 === 0) {\nfor (let j = 0; j < possibleNumbers length; j += 1) {\nsecondNumber = possibleNumbers[j];\nif (j",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\department-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4d287bda79eb319ca98ed577c25ba9a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\department-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2, 4], [6, 4, 2], [6, 5, 1] ]; --seed-contents-- ```js function combinations(possibleNumbers, total) { return true; } ``` --solutions-- ```js function combinations(possibleNumbers, total) { let firstNumber; let secondNumber; let thirdNumber; const allCombinations = []; for (let i = 0; i < possibleNumbers length; i += 1) { firstNumber = possibleNumbers[i]; if (firstNumber % 2 === 0) { for (let j = 0; j < possibleNumbers length; j += 1) { secondNumber = possibleNumbers[j]; if (j== i && firstNumber + secondNumber <= total) {\nthirdNumber = total - firstNumber - secondNumber;\nif (thirdNumber == firstNumber && thirdNumber == secondNumber && possibleNumbers includes(thirdNumber)) {\nallCombinations push([firstNumber, secondNumber, thirdNumber]);\n}\n}\n}\n}\n}\nreturn allCombinations;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\department-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c73e48ab719dbdc665708927d60e4573",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\dot-product.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e1e\ntitle: Dot product\nchallengeType: 1\nforumTopicId: 302251\ndashedName: dot-product\n--description--\nCreate a function, to compute the dot product, also known as the scalar product of two vectors --hints--\ndotProduct should be a function js\nassert(typeof dotProduct == 'function');\ndotProduct([1, 3, -5], [4, -2, -1]) should return a number js\nassert(typeof dotProduct([1, 3, -5], [4, -2, -1]) == 'number');\ndotProduct([1, 3, -5], [4, -2, -1]) should return 3 js\nassert equal(dotProduct([1, 3, -5], [4, -2, -1]), 3);\ndotProduct([1, 2, 3, 4, 5], [6, 7, 8, 9, 10]) should return 130 js\nassert equal(dotProduct([1, 2, 3, 4, 5], [6, 7, 8, 9, 10]), 130);\ndotProduct([5, 4, 3, 2], [7, 8, 9, 6]) should return 106 js\nassert equal(dotProduct([5, 4, 3, 2], [7, 8, 9, 6]), 106);\ndotProduct([-5, 4, -3, 2], [-7, -8, 9, -6]) should return -36 js\nassert equal(dotProduct([-5, 4, -3, 2], [-7, -8, 9, -6]), -36);\ndotProduct([17, 27, 34, 43, 15], [62, 73, 48, 95, 110]) should return 10392 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\dot-product.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "96c7214b6188ac1acef937cb5267ca09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\dot-product.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "10]) should return 130 js assert equal(dotProduct([1, 2, 3, 4, 5], [6, 7, 8, 9, 10]), 130); dotProduct([5, 4, 3, 2], [7, 8, 9, 6]) should return 106 js assert equal(dotProduct([5, 4, 3, 2], [7, 8, 9, 6]), 106); dotProduct([-5, 4, -3, 2], [-7, -8, 9, -6]) should return -36 js assert equal(dotProduct([-5, 4, -3, 2], [-7, -8, 9, -6]), -36); dotProduct([17, 27, 34, 43, 15], [62, 73, 48, 95, 110]) should return 10392 js assertequal(dotProduct([17, 27, 34, 43, 15], [62, 73, 48, 95, 110]), 10392);\n--seed--\n--seed-contents--\n```js\nfunction dotProduct(ary1, ary2) {\n}\n```\n--solutions--\njs\nfunction dotProduct(ary1, ary2) {\nvar dotprod = 0;\nfor (var i = 0; i < ary1 length; i++) dotprod += ary1[i] * ary2[i];\nreturn dotprod;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\dot-product.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9e56846add119bbdcd817008589b992b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59694356a6e7011f7f1c5f4e\ntitle: Deal cards for FreeCell\nchallengeType: 1\nforumTopicId: 302246\ndashedName: deal-cards-for-freecell\n--description--\nFreeCell is the solitaire card game that Paul Alfille introduced to the PLATO system in 1978 Jim Horne, at Microsoft, changed the name to FreeCell and reimplemented the game for DOS, then Windows This version introduced 32000 numbered deals As the game became popular, Jim Horne disclosed the algorithm, and other implementations of FreeCell began to reproduce the Microsoft deals These deals are numbered from 1 to 32000 Newer versions from Microsoft have 1 million deals, numbered from 1 to 1000000; some implementations allow numbers outside that range The algorithm uses this linear congruential generator from Microsoft C:\n$state_{n + 1} \\equiv 214013 \\times state_n + 2531011 \\pmod{2^{31}}$\n$rand_n = state_n \\div 2^{16}$\n$rand_n$ is in range 0 to 32767 The algorithm follows:\nSeed the RNG with the number of the deal Create an array of 52 cards: Ace of Clubs, Ace of Diamonds, Ace of Hearts, Ace of Spades, 2 of Clubs, 2 of Diamonds, and so on through the ranks: Ace, 2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King The array indexes are 0 to 51, with Ace of Clubs at 0, and King of Spades at 51 Until the array is empty:\nChoose a random card at index ≡ next random number (mod array length) Swap this random card with the last card of the array Remove this random card from the array (Array length goes down by 1 )\nDeal this random card Deal all 52 cards, face up, across 8 columns The first 8 cards go in 8 columns, the next 8 cards go on the first 8 cards, and so on",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "e98ef3a8293b95d148c1ff6568b07943",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the array is empty: Choose a random card at index ≡ next random number (mod array length) Swap this random card with the last card of the array Remove this random card from the array (Array length goes down by 1 ) Deal this random card Deal all 52 cards, face up, across 8 columns The first 8 cards go in 8 columns, the next 8 cards go on the first 8 cards, and so onExample:\nOrder to deal cards\n1  2  3  4  5  6  7  8\n9 10 11 12 13 14 15 16\n17 18 19 20 21 22 23 24\n25 26 27 28 29 30 31 32\n33 34 35 36 37 38 39 40\n41 42 43 44 45 46 47 48\n49 50 51 52\nGame #1\njs\n[\n['JD', '2D', '9H', 'JC', '5D', '7H', '7C', '5H'],\n['KD', 'KC', '9S', '5S', 'AD', 'QC', 'KH', '3H'],\n['2S', 'KS', '9D', 'QD', 'JS', 'AS', 'AH', '3C'],\n['4C', '5C', 'TS', 'QH', '4H', 'AC', '4D', '7S'],\n['3S', 'TD', '4S', 'TH', '8H', '2C', 'JH', '7D'],\n['6D', '8S', '8D', 'QS', '6C', '3D', '8C', 'TC'],\n['6S', '9C', '2H', '6H']\n]\nGame #617\njs\n[\n['7D', 'AD', '5C', '3S', '5S', '8C', '2D', 'AH'],\n['TD', '7S', 'QD', 'AC', '6D', '8H', 'AS', 'KH'],\n['TH', 'QC', '3H', '9D', '6S', '8D', '3D', 'TC'],\n['KD', '5H', '9S', '3C', '8S', '7H', '4D', 'JS'],\n['4C', 'QS', '9C', '9H', '7C', '6H', '2C', '2S'],\n['4S', 'TS', '2H', '5D', 'JC', '6C', 'JH', 'QH'],\n['JD', 'KS', 'KC', '4H']\n]\n--instructions--\nWrite a function to take a deal number and deal cards in the same order as this algorithm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
      "source_type": "git_repo"
    },
    "token_count": 629,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "2bee906dd9148db8c36ca6e377dc2a09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Game #617 js [ ['7D', 'AD', '5C', '3S', '5S', '8C', '2D', 'AH'], ['TD', '7S', 'QD', 'AC', '6D', '8H', 'AS', 'KH'], ['TH', 'QC', '3H', '9D', '6S', '8D', '3D', 'TC'], ['KD', '5H', '9S', '3C', '8S', '7H', '4D', 'JS'], ['4C', 'QS', '9C', '9H', '7C', '6H', '2C', '2S'], ['4S', 'TS', '2H', '5D', 'JC', '6C', 'JH', 'QH'], ['JD', 'KS', 'KC', '4H'] ] --instructions-- Write a function to take a deal number and deal cards in the same order as this algorithmThe function must return a two dimensional array representing the FreeCell board --hints--\ndealFreeCell should be a function js\nassert(typeof dealFreeCell === 'function');\ndealFreeCell(seed) should return an object js\nassert(typeof dealFreeCell(1) === 'object');\ndealFreeCell(seed) should return an array of length 7 js\nassert(dealFreeCell(1) length === 7);\ndealFreeCell(1) should return an array identical to example \"Game #1\"\njs\nassert deepEqual(dealFreeCell(1), game1);\ndealFreeCell(617) should return an array identical to example \"Game #617\"\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "0b09df0f94b08f042ab9b598ecbf28bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "same order as this algorithmThe function must return a two dimensional array representing the FreeCell board --hints-- dealFreeCell should be a function js assert(typeof dealFreeCell === 'function'); dealFreeCell(seed) should return an object js assert(typeof dealFreeCell(1) === 'object'); dealFreeCell(seed) should return an array of length 7 js assert(dealFreeCell(1) length === 7); dealFreeCell(1) should return an array identical to example \"Game #1\" js assert deepEqual(dealFreeCell(1), game1); dealFreeCell(617) should return an array identical to example \"Game #617\" js assertdeepEqual(dealFreeCell(617), game617);\n--seed--\n--after-user-code--\njs\nconst replaceThis = 3;\nconst game1 = [\n['JD', '2D', '9H', 'JC', '5D', '7H', '7C', '5H'],\n['KD', 'KC', '9S', '5S', 'AD', 'QC', 'KH', '3H'],\n['2S', 'KS', '9D', 'QD', 'JS', 'AS', 'AH', '3C'],\n['4C', '5C', 'TS', 'QH', '4H', 'AC', '4D', '7S'],\n['3S', 'TD', '4S', 'TH', '8H', '2C', 'JH', '7D'],\n['6D', '8S', '8D', 'QS', '6C', '3D', '8C', 'TC'],\n['6S', '9C', '2H', '6H']\n];\nconst game617 = [\n['7D', 'AD', '5C', '3S', '5S', '8C', '2D', 'AH'],\n['TD', '7S', 'QD', 'AC', '6D', '8H', 'AS', 'KH'],\n['TH', 'QC', '3H', '9D', '6S', '8D', '3D', 'TC'],\n['KD', '5H', '9S', '3C', '8S', '7H', '4D', 'JS'],\n['4C', 'QS', '9C', '9H', '7C', '6H', '2C', '2S'],\n['4S', 'TS', '2H', '5D', 'JC', '6C', 'JH', 'QH'],\n['JD', 'KS', 'KC', '4H']\n];\n--seed-contents--\n```js\nfunction dealFreeCell(seed) {\nreturn true;\n}\n```\n--solutions--\n``js\n// RNG\nfunction FreeCellRNG(seed) {\nreturn {\nlastNum: seed,\nnext() {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "c4b79f37f3879b14bcaa7570c4c28c5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "['7D', 'AD', '5C', '3S', '5S', '8C', '2D', 'AH'], ['TD', '7S', 'QD', 'AC', '6D', '8H', 'AS', 'KH'], ['TH', 'QC', '3H', '9D', '6S', '8D', '3D', 'TC'], ['KD', '5H', '9S', '3C', '8S', '7H', '4D', 'JS'], ['4C', 'QS', '9C', '9H', '7C', '6H', '2C', '2S'], ['4S', 'TS', '2H', '5D', 'JC', '6C', 'JH', 'QH'], ['JD', 'KS', 'KC', '4H'] ]; --seed-contents-- ```js function dealFreeCell(seed) { return true; } ``` --solutions-- ``js // RNG function FreeCellRNG(seed) { return { lastNum: seed, next() { thislastNum = ((214013 * this lastNum) + 2531011) % (Math pow(2, 31));\nreturn this lastNum >> 16;\n}\n};\n}\n// Get cards\nfunction getDeck() {\nconst ranks = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'];\nconst suits = ['C', 'D', 'H', 'S'];\nconst cards = [];\nfor (let i = 0; i < ranks length; i += 1) {\nfor (let j = 0; j < suits length; j += 1) {\ncards push(${ranks[i]}${suits[j]}`);\n}\n}\nreturn cards;\n}\nfunction dealFreeCell(seed) {\nconst rng = FreeCellRNG(seed);\nconst deck = getDeck();\nconst dealtCards = [[], [], [], [], [], [], []];\nlet currentColumn = 0;\nlet currentRow = 0;\nlet rand;\nlet temp;\nlet card;\nwhile (deck length > 0) {\n// Choose a random card\nrand = rng next() % deck",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "5e53dff9cee0a6e7248aa45ca32cbbd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "i += 1) { for (let j = 0; j < suits length; j += 1) { cards push(${ranks[i]}${suits[j]}`); } } return cards; } function dealFreeCell(seed) { const rng = FreeCellRNG(seed); const deck = getDeck(); const dealtCards = [[], [], [], [], [], [], []]; let currentColumn = 0; let currentRow = 0; let rand; let temp; let card; while (deck length > 0) { // Choose a random card rand = rng next() % decklength;\n// Swap this random card with the last card in the array\ntemp = deck[deck length - 1];\ndeck[deck length - 1] = deck[rand];\ndeck[rand] = temp;\n// Remove this card from the array\ncard = deck pop();\n// Deal this card\ndealtCards[currentRow] push(card);\ncurrentColumn += 1;\nif (currentColumn === 8) {\ncurrentColumn = 0;\ncurrentRow += 1;\n}\n}\nreturn dealtCards;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\deal-cards-for-freecell.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "8c60ae5efc3e1e3dbb895e836da25404",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\entropy.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 599d15309e88c813a40baf58\ntitle: Entropy\nchallengeType: 1\nforumTopicId: 302254\ndashedName: entropy\n--description--\nCalculate the Shannon entropy H of a given input string Given the discrete random variable $X$ that is a string of $N$ \"symbols\" (total characters) consisting of $n$ different characters (n=2 for binary), the Shannon entropy of X in bits/symbol is:\n$H_2(X) = -\\sum_{i=1}^n \\frac{count_i}{N} \\log_2 \\left(\\frac{count_i}{N}\\right)$\nwhere $count_i$ is the count of character $n_i$ --hints--\nentropy should be a function js\nassert(typeof entropy === 'function');\nentropy(\"0\") should return 0\njs\nassert equal(entropy('0'), 0);\nentropy(\"01\") should return 1\njs\nassert equal(entropy('01'), 1);\nentropy(\"0123\") should return 2\njs\nassert equal(entropy('0123'), 2);\nentropy(\"01234567\") should return 3\njs\nassert equal(entropy('01234567'), 3);\nentropy(\"0123456789abcdef\") should return 4\njs\nassert equal(entropy('0123456789abcdef'), 4);\nentropy(\"1223334444\") should return 1 8464393446710154\njs\nassert equal(entropy('1223334444'), 1 8464393446710154);\n--seed--\n--seed-contents--\n```js\nfunction entropy(s) {\n}\n```\n--solutions--\n```js\nfunction entropy(s) {\n// Create a dictionary of character frequencies and iterate over it function process(s, evaluator) {\nlet h = Object create(null),\nk;\ns split('') forEach(c => {\nh[c] && h[c]++ || (h[c] = 1); });\nif (evaluator) for (k in h) evaluator(k, h[k]);\nreturn h;\n}\n// Measure the entropy of a string in bits per symbol let sum = 0,\nlen = s length;\nprocess(s, (k, f) => {\nconst p = f / len;\nsum -= p * Math log(p) / Math log(2);\n});\nreturn sum;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\entropy.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "446dbc7e601bf3443778bae9feafcd47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\emirp-primes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 599d0ba974141b0f508b37d5\ntitle: Emirp primes\nchallengeType: 1\nforumTopicId: 302253\ndashedName: emirp-primes\n--description--\nAn emirp (prime spelled backwards) are primes that when reversed (in their decimal representation) are a different prime --instructions--\nWrite a function that:\nShows the first n emirp numbers Shows the emirp numbers in a range Shows the number of emirps in a range Shows the nth emirp number The function should accept two parameters The first will receive n or the range as an array The second will receive a boolean, that specifies if the function returns the emirps as an array or a single number (the number of primes in the range or the nth prime) According to the parameters the function should return an array or a number --hints--\nemirps should be a function js\nassert(typeof emirps === 'function');\nemirps(20,true) should return [13,17,31,37,71,73,79,97,107,113,149,157,167,179,199,311,337,347,359,389]\njs\nassert deepEqual(emirps(20, true), [\n13,\n17,\n31,\n37,\n71,\n73,\n79,\n97,\n107,\n113,\n149,\n157,\n167,\n179,\n199,\n311,\n337,\n347,\n359,\n389\n]);\nemirps(1000) should return 70529\njs\nassert deepEqual(emirps(1000), 70529);\nemirps([7700,8000],true) should return [7717,7757,7817,7841,7867,7879,7901,7927,7949,7951,7963]\njs\nassert deepEqual(emirps([7700, 8000], true), [\n7717,\n7757,\n7817,\n7841,\n7867,\n7879,\n7901,\n7927,\n7949,\n7951,\n7963\n]);\nemirps([7700,8000],false) should return 11\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\emirp-primes.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "23577ed53e0528aee2d52de9e2813feb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\emirp-primes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "emirps should be a function js assert(typeof emirps === 'function'); emirps(20,true) should return [13,17,31,37,71,73,79,97,107,113,149,157,167,179,199,311,337,347,359,389] js assert deepEqual(emirps(20, true), [ 13, 17, 31, 37, 71, 73, 79, 97, 107, 113, 149, 157, 167, 179, 199, 311, 337, 347, 359, 389 ]); emirps(1000) should return 70529 js assert deepEqual(emirps(1000), 70529); emirps([7700,8000],true) should return [7717,7757,7817,7841,7867,7879,7901,7927,7949,7951,7963] js assert deepEqual(emirps([7700, 8000], true), [ 7717, 7757, 7817, 7841, 7867, 7879, 7901, 7927, 7949, 7951, 7963 ]); emirps([7700,8000],false) should return 11 js assertdeepEqual(emirps([7700, 8000], false), 11);\n--seed--\n--seed-contents--\n```js\nfunction emirps(n) {\n}\n```\n--solutions--\n```js\nfunction emirps(num, showEmirps)\n{\nconst is_prime = function(n)\n{\nif ( (n % 2) || (n % 3)) return false;\nlet p = 1;\nwhile (p * p < n)\n{ if (n % (p += 4) == 0 || n % (p += 2) == 0)\n{ return false; } }\nreturn true;\n};\nconst is_emirp = function(n) {\nconst r = parseInt(n toString() split('') reverse() join(''));\nreturn r = n && is_prime(n) && is_prime(r);\n};\nlet i,\narr = [];\nif (typeof num === 'number') {\nfor (i = 0; arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\emirp-primes.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "436073e4211bb8577a497ef3ba0423a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\emirp-primes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3)) return false; let p = 1; while (p * p < n) { if (n % (p += 4) == 0 || n % (p += 2) == 0) { return false; } } return true; }; const is_emirp = function(n) { const r = parseInt(n toString() split('') reverse() join('')); return r = n && is_prime(n) && is_prime(r); }; let i, arr = []; if (typeof num === 'number') { for (i = 0; arrlength < num; i++) if (is_emirp(i)) arr push(i);\n// first x emirps\nif (showEmirps) return arr;\n// xth emirp\nreturn arr pop();\n}\nif (Array isArray(num)) {\nfor (i = num[0]; i <= num[1]; i++) if (is_emirp(i)) arr push(i);\n// emirps between x y\nif (showEmirps) return arr;\n// number of emirps between x y\nreturn arr length;\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\emirp-primes.md",
      "source_type": "git_repo"
    },
    "token_count": 236,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7c7396eb4d196cc8851c603505d0d0a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 599c333915e0ea32d04d4bec\ntitle: Element-wise operations\nchallengeType: 1\nforumTopicId: 302252\ndashedName: element-wise-operations\n--description--\nImplement basic element-wise matrix-matrix and scalar-matrix operations Implement:\naddition\nsubtraction\nmultiplication\ndivision\nexponentiation\nThe first parameter will be the operation to be performed, for example, \"m_add\" for matrix addition and \"s_add\" for scalar addition The second and third parameters will be the matrices on which the operations are to be performed --hints--\noperation should be a function js\nassert(typeof operation === 'function');\noperation(\"m_add\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[2,4],[6,8]] js\nassert deepEqual(\noperation(\n'm_add',\n[\n[1, 2],\n[3, 4]\n],\n[\n[1, 2],\n[3, 4]\n]\n),\n[\n[2, 4],\n[6, 8]\n]\n);\noperation(\"s_add\",[[1,2],[3,4]],2) should return [[3,4],[5,6]] js\nassert deepEqual(\noperation(\n's_add',\n[\n[1, 2],\n[3, 4]\n],\n2\n),\n[\n[3, 4],\n[5, 6]\n]\n);\noperation(\"m_sub\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[0,0],[0,0]] js\nassert deepEqual(\noperation(\n'm_sub',\n[\n[1, 2],\n[3, 4]\n],\n[\n[1, 2],\n[3, 4]\n]\n),\n[\n[0, 0],\n[0, 0]\n]\n);\noperation(\"m_mult\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,4],[9,16]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3118,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "43a18c724885966d17b2c5a580e15cfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[3, 4] ], [ [1, 2], [3, 4] ] ), [ [2, 4], [6, 8] ] ); operation(\"s_add\",[[1,2],[3,4]],2) should return [[3,4],[5,6]] js assert deepEqual( operation( 's_add', [ [1, 2], [3, 4] ], 2 ), [ [3, 4], [5, 6] ] ); operation(\"m_sub\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[0,0],[0,0]] js assert deepEqual( operation( 'm_sub', [ [1, 2], [3, 4] ], [ [1, 2], [3, 4] ] ), [ [0, 0], [0, 0] ] ); operation(\"m_mult\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,4],[9,16]] js assertdeepEqual(\noperation(\n'm_mult',\n[\n[1, 2],\n[3, 4]\n],\n[\n[1, 2],\n[3, 4]\n]\n),\n[\n[1, 4],\n[9, 16]\n]\n);\noperation(\"m_div\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,1],[1,1]] js\nassert deepEqual(\noperation(\n'm_div',\n[\n[1, 2],\n[3, 4]\n],\n[\n[1, 2],\n[3, 4]\n]\n),\n[\n[1, 1],\n[1, 1]\n]\n);\noperation(\"m_exp\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,4],[27,256]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3118,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "9f0772e35d1da9667723dfa8ea378010",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[1, 2], [3, 4] ] ), [ [0, 0], [0, 0] ] ); operation(\"m_mult\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,4],[9,16]] js assertdeepEqual( operation( 'm_mult', [ [1, 2], [3, 4] ], [ [1, 2], [3, 4] ] ), [ [1, 4], [9, 16] ] ); operation(\"m_div\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,1],[1,1]] js assert deepEqual( operation( 'm_div', [ [1, 2], [3, 4] ], [ [1, 2], [3, 4] ] ), [ [1, 1], [1, 1] ] ); operation(\"m_exp\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,4],[27,256]] js assertdeepEqual(\noperation(\n'm_exp',\n[\n[1, 2],\n[3, 4]\n],\n[\n[1, 2],\n[3, 4]\n]\n),\n[\n[1, 4],\n[27, 256]\n]\n);\noperation(\"m_add\",[[1,2,3,4],[5,6,7,8]],[[9,10,11,12],[13,14,15,16]]) should return [[10,12,14,16],[18,20,22,24]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3118,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d431d2f8ed7c035e84d006a6460b6c2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[1, 2], [3, 4] ] ), [ [1, 4], [9, 16] ] ); operation(\"m_div\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,1],[1,1]] js assert deepEqual( operation( 'm_div', [ [1, 2], [3, 4] ], [ [1, 2], [3, 4] ] ), [ [1, 1], [1, 1] ] ); operation(\"m_exp\",[[1,2],[3,4]],[[1,2],[3,4]]) should return [[1,4],[27,256]] js assertdeepEqual( operation( 'm_exp', [ [1, 2], [3, 4] ], [ [1, 2], [3, 4] ] ), [ [1, 4], [27, 256] ] ); operation(\"m_add\",[[1,2,3,4],[5,6,7,8]],[[9,10,11,12],[13,14,15,16]]) should return [[10,12,14,16],[18,20,22,24]] js assertdeepEqual(\noperation(\n'm_add',\n[\n[1, 2, 3, 4],\n[5, 6, 7, 8]\n],\n[\n[9, 10, 11, 12],\n[13, 14, 15, 16]\n]\n),\n[\n[10, 12, 14, 16],\n[18, 20, 22, 24]\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction operation(op, arr1, arr2) {\n}\n```\n--solutions--\njs\nfunction operation(op, arr1, arr2) {\nconst ops = {\nadd: ((a, b) => a + b),\nsub: ((a, b) => a - b),\nmult: ((a, b) => a * b),\ndiv: ((a, b) => a / b),\nexp: ((a, b) => Math pow(a, b))\n};\nconst ifm = op startsWith('m');\nconst doOp = ops[op substring(2)];\nfor (let i = 0; i < arr1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3118,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c155b1d58064b1b568f94881e780c5ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "); --seed-- --seed-contents-- ```js function operation(op, arr1, arr2) { } ``` --solutions-- js function operation(op, arr1, arr2) { const ops = { add: ((a, b) => a + b), sub: ((a, b) => a - b), mult: ((a, b) => a * b), div: ((a, b) => a / b), exp: ((a, b) => Math pow(a, b)) }; const ifm = op startsWith('m'); const doOp = ops[op substring(2)]; for (let i = 0; i < arr1length; i++) {\nfor (let j = 0; j < arr1[0] length; j++) {\narr1[i][j] = doOp(arr1[i][j], (ifm) (arr2[i][j]) : (arr2));\n}\n}\nreturn arr1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3118,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\element-wise-operations.md",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "04cebe225feb6555035cddf4f8c9864e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59f4eafba0343628bb682785\ntitle: Discordian date\nchallengeType: 1\nforumTopicId: 302250\ndashedName: discordian-date\n--description--\nThe Gregorian calendar is a solar calendar with 12 months of 28-31 days each A week consists of seven days, and there are 52 weeks and 1 day per year The year consists of 365 days with a leap day added to February every leap year A leap year occurs every four years, except for the first three centurial years of every 400 years The Discordian calendar is aligned with the Gregorian calendar, and begins on January 1 The week consists of five days, and there are 73 weeks per year The year also consists of 365 days, with an extra day inserted between Chaos 59 and Chaos 60 every leap year The months, weekdays, Apostle events, and Holidays in the Discordian calendar are given by:\nSeasons: 'Chaos', 'Discord', 'Confusion', 'Bureaucracy', 'The Aftermath' Weekdays: 'Sweetmorn', 'Boomtime', 'Pungenday', 'Prickle-Prickle', 'Setting Orange' Apostle: 'Mungday', 'Mojoday', 'Syaday', 'Zaraday', 'Maladay' Holidays: 'Chaoflux', 'Discoflux', 'Confuflux', 'Bureflux', 'Afflux' --instructions--\nConvert a given date from the Gregorian calendar to the Discordian calendar Note that the day Chaos 1, 3188 YOLD in the Discordian calendar is the day January 1, 2022 in the Gregorian calendar --hints--\ndiscordianDate should be a function js\nassert(typeof discordianDate === 'function');\ndiscordianDate(new Date(2010, 6, 22)) should return \"Pungenday, the 57th day of Confusion in the YOLD 3176\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2cac386b7c2740ecfc9982aa71c0b98b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Setting Orange' Apostle: 'Mungday', 'Mojoday', 'Syaday', 'Zaraday', 'Maladay' Holidays: 'Chaoflux', 'Discoflux', 'Confuflux', 'Bureflux', 'Afflux' --instructions-- Convert a given date from the Gregorian calendar to the Discordian calendar Note that the day Chaos 1, 3188 YOLD in the Discordian calendar is the day January 1, 2022 in the Gregorian calendar --hints-- discordianDate should be a function js assert(typeof discordianDate === 'function'); discordianDate(new Date(2010, 6, 22)) should return \"Pungenday, the 57th day of Confusion in the YOLD 3176\"js\nassert(\ndiscordianDate(new Date(2010, 6, 22)) ===\n'Pungenday, the 57th day of Confusion in the YOLD 3176'\n);\ndiscordianDate(new Date(2012, 1, 28)) should return \"Prickle-Prickle, the 59th day of Chaos in the YOLD 3178\" js\nassert(\ndiscordianDate(new Date(2012, 1, 28)) ===\n'Prickle-Prickle, the 59th day of Chaos in the YOLD 3178'\n);\ndiscordianDate(new Date(2012, 1, 29)) should return \"Setting Orange, the 60th day of Chaos in the YOLD 3178 Celebrate St Tib\\'s Day \" js\nassert(\ndiscordianDate(new Date(2012, 1, 29)) ===\n\"Setting Orange, the 60th day of Chaos in the YOLD 3178 Celebrate St Tib's Day \"\n);\ndiscordianDate(new Date(2012, 2, 1)) should return \"Setting Orange, the 60th day of Chaos in the YOLD 3178\" js\nassert(\ndiscordianDate(new Date(2012, 2, 1)) ===\n'Setting Orange, the 60th day of Chaos in the YOLD 3178'\n);\ndiscordianDate(new Date(2010, 0, 5)) should return \"Setting Orange, the 5th day of Chaos in the YOLD 3176 Celebrate Mungday",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "56b062ec14455373bf5c38c171afff8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Date(2012, 1, 29)) === \"Setting Orange, the 60th day of Chaos in the YOLD 3178 Celebrate St Tib's Day \" ); discordianDate(new Date(2012, 2, 1)) should return \"Setting Orange, the 60th day of Chaos in the YOLD 3178\" js assert( discordianDate(new Date(2012, 2, 1)) === 'Setting Orange, the 60th day of Chaos in the YOLD 3178' ); discordianDate(new Date(2010, 0, 5)) should return \"Setting Orange, the 5th day of Chaos in the YOLD 3176 Celebrate Mungday\" js\nassert(\ndiscordianDate(new Date(2010, 0, 5)) ===\n'Setting Orange, the 5th day of Chaos in the YOLD 3176 Celebrate Mungday '\n);\ndiscordianDate(new Date(2011, 4, 3)) should return \"Pungenday, the 50th day of Discord in the YOLD 3177 Celebrate Discoflux \" js\nassert(\ndiscordianDate(new Date(2011, 4, 3)) ===\n'Pungenday, the 50th day of Discord in the YOLD 3177 Celebrate Discoflux '\n);\ndiscordianDate(new Date(2015, 9, 19)) should return \"Boomtime, the 73rd day of Bureaucracy in the YOLD 3181\" js\nassert(\ndiscordianDate(new Date(2015, 9, 19)) ===\n'Boomtime, the 73rd day of Bureaucracy in the YOLD 3181'\n);\n--seed--\n--seed-contents--\n```js\nfunction discordianDate(date) {\nreturn true;\n}\n```\n--solutions--\n```js\n/*\n* All Hail Discordia - this script prints Discordian date using system date *\n* lang: JavaScript\n* author: jklu\n* contributors: JamesMcGuigan\n*\n* source: https://rosettacode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "dbdafc6f7e6520d2958f3b99036d0edf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "' ); discordianDate(new Date(2015, 9, 19)) should return \"Boomtime, the 73rd day of Bureaucracy in the YOLD 3181\" js assert( discordianDate(new Date(2015, 9, 19)) === 'Boomtime, the 73rd day of Bureaucracy in the YOLD 3181' ); --seed-- --seed-contents-- ```js function discordianDate(date) { return true; } ``` --solutions-- ```js /* * All Hail Discordia - this script prints Discordian date using system date * * lang: JavaScript * author: jklu * contributors: JamesMcGuigan * * source: https://rosettacodeorg/wiki/Discordian_date#JavaScript\n/\nconst seasons = [\n'Chaos', 'Discord', 'Confusion',\n'Bureaucracy', 'The Aftermath'\n];\nconst weekday = [\n'Sweetmorn', 'Boomtime', 'Pungenday',\n'Prickle-Prickle', 'Setting Orange'\n];\nconst apostle = [\n'Mungday', 'Mojoday', 'Syaday',\n'Zaraday', 'Maladay'\n];\nconst holiday = [\n'Chaoflux', 'Discoflux', 'Confuflux',\n'Bureflux', 'Afflux'\n];\nDate prototype isLeapYear = function() {\nconst year = this getFullYear();\nif ((year & 3) == 0) { return false; }\nreturn ((year % 100) == 0 || (year % 400) === 0);\n};\n// Get Day of Year\nDate prototype getDOY = function() {\nconst dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\nconst mn = this getMonth();\nconst dn = this getDate();\nlet dayOfYear = dayCount[mn] + dn;\nif (mn > 1 && this isLeapYear()) { dayOfYear += 1; }\nreturn dayOfYear;\n};\nDate prototype isToday = function() {\nconst today = new Date();\nreturn this getDate() === today getDate()\n&& this getMonth() === today getMonth()\n&& this getFullYear() === today getFullYear()\n;\n};\nfunction discordianDate(date) {\nif (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "462438d3ed7589a9b61e98131a812280",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "90, 120, 151, 181, 212, 243, 273, 304, 334]; const mn = this getMonth(); const dn = this getDate(); let dayOfYear = dayCount[mn] + dn; if (mn > 1 && this isLeapYear()) { dayOfYear += 1; } return dayOfYear; }; Date prototype isToday = function() { const today = new Date(); return this getDate() === today getDate() && this getMonth() === today getMonth() && this getFullYear() === today getFullYear() ; }; function discordianDate(date) { if (date) { date = new Date(); }\nconst y = date getFullYear();\nconst yold = y + 1166;\nlet dayOfYear = date getDOY();\nlet celebrateHoliday = null;\nif (date isLeapYear()) {\nif (dayOfYear === 60) {\ncelebrateHoliday = 'St Tib\\'s Day';\n}\nelse if (dayOfYear > 60) {\ndayOfYear--;\n}\n}\ndayOfYear--;\nconst divDay = Math floor(dayOfYear / 73);\nconst seasonDay = (dayOfYear % 73) + 1;\nif (seasonDay === 5) {\ncelebrateHoliday = apostle[divDay];\n}\nif (seasonDay === 50) {\ncelebrateHoliday = holiday[divDay];\n}\nconst season = seasons[divDay];\nconst dayOfWeek = weekday[dayOfYear % 5];\nconst nth = (seasonDay % 10 === 1) 'st'\n: (seasonDay % 10 === 2) 'nd'\n: (seasonDay % 10 === 3) 'rd'\n: 'th';\nreturn ''\n+ dayOfWeek\n+ ', the ' + seasonDay + nth\n+ ' day of ' + season\n+ ' in the YOLD ' + yold\n+ (celebrateHoliday ' Celebrate ' + celebrateHoliday + ' ' : '')\n;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\discordian-date.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "7db3315c3b0938748e21409bf8e328ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\evaluate-binomial-coefficients.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 598de241872ef8353c58a7a2\ntitle: Evaluate binomial coefficients\nchallengeType: 1\nforumTopicId: 302259\ndashedName: evaluate-binomial-coefficients\n--description--\nWrite a function to calculate the binomial coefficient for the given value of n and k.\nThis formula is recommended:\n$\\binom{n}{k} = \\frac{n!}{(n-k)!k!} = \\frac{n(n-1)(n-2)\\ldots(n-k+1)}{k(k-1)(k-2)\\ldots 1}$\n--hints--\nbinom should be a function.\njs\nassert(typeof binom === 'function');\nbinom(5,3) should return 10.\njs\nassert.equal(binom(5, 3), 10);\nbinom(7,2) should return 21.\njs\nassert.equal(binom(7, 2), 21);\nbinom(10,4) should return 210.\njs\nassert.equal(binom(10, 4), 210);\nbinom(6,1) should return 6.\njs\nassert.equal(binom(6, 1), 6);\nbinom(12,8) should return 495.\njs\nassert.equal(binom(12, 8), 495);\n--seed--\n--seed-contents--\n```js\nfunction binom(n, k) {\n}\n```\n--solutions--\njs\nfunction binom(n, k) {\nlet coeff = 1;\nfor (let i = n - k + 1; i <= n; i++) coeff *= i;\nfor (let i = 1; i <= k; i++) coeff /= i;\nreturn coeff;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1110,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\evaluate-binomial-coefficients.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "770aee2d9ff2eb4cbbcf88e44b1ed0b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ethiopian-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 599d1566a02b571412643b84\ntitle: Ethiopian multiplication\nchallengeType: 1\nforumTopicId: 302257\ndashedName: ethiopian-multiplication\n--description--\nEthiopian multiplication is a method of multiplying integers using only addition, doubling, and halving Method:\nTake two numbers to be multiplied and write them down at the top of two columns\nIn the left-hand column repeatedly halve the last number, discarding any remainders, and write the result below the last in the same column, until you write a value of 1\nIn the right-hand column repeatedly double the last number and write the result below stop when you add a result in the same row as where the left hand column shows 1\nExamine the table produced and discard any row where the value in the left column is even\nSum the values in the right-hand column that remain to produce the result of multiplying the original two numbers together\nFor example: 17 × 34\n17   34\nHalving the first column:\n17   34\n8\n4\n2\n1\nDoubling the second column:\n17   34\n8    68\n4   136\n2   272\n1   544\nStrike-out rows whose first cell is even:\n17   34\n8    68\n4   136\n2   272\n1   544\nSum the remaining numbers in the right-hand column:\n17   34\n8    --\n4   ---\n2   ---\n1   544\n====\n578\nSo 17 multiplied by 34, by the Ethiopian method is 578 --instructions--\nThe task is to define three named functions/methods/procedures/subroutines:\none to halve an integer,\none to double an integer, and\none to state if an integer is even\nUse these functions to create a function that does Ethiopian multiplication --hints--\neth_mult should be a function js\nassert(typeof eth_mult === 'function');\neth_mult(17,34) should return 578 js\nassert equal(eth_mult(17, 34), 578);\neth_mult(23,46) should return 1058 js\nassert equal(eth_mult(23, 46), 1058);\neth_mult(12,27) should return 324 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ethiopian-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4bf9e89948b53af7a8fc8e0c1af11f41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ethiopian-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is 578 --instructions-- The task is to define three named functions/methods/procedures/subroutines: one to halve an integer, one to double an integer, and one to state if an integer is even Use these functions to create a function that does Ethiopian multiplication --hints-- eth_mult should be a function js assert(typeof eth_mult === 'function'); eth_mult(17,34) should return 578 js assert equal(eth_mult(17, 34), 578); eth_mult(23,46) should return 1058 js assert equal(eth_mult(23, 46), 1058); eth_mult(12,27) should return 324 js assertequal(eth_mult(12, 27), 324);\neth_mult(56,98) should return 5488 js\nassert equal(eth_mult(56, 98), 5488);\neth_mult(63,74) should return 4662 js\nassert equal(eth_mult(63, 74), 4662);\n--seed--\n--seed-contents--\n```js\nfunction eth_mult(a, b) {\n}\n```\n--solutions--\n```js\nfunction eth_mult(a, b) {\nlet sum = 0; a = [a]; b = [b];\nlet half = a => a / 2,\ndouble = a => a * 2,\nis_even = a => a % 2 == 0;\nwhile (a[0] == 1) {\na unshift(Math floor(half(a[0])));\nb unshift(double(b[0]));\n}\nfor (let i = a length - 1; i > 0; i -= 1) {\nif ( is_even(a[i])) {\nsum += b[i];\n}\n}\nreturn sum + b[0];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ethiopian-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f452b86ae7cfa9bee84c4e32dc9690b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\equilibrium-index.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5987fd532b954e0f21b5d3f6\ntitle: Equilibrium index\nchallengeType: 1\nforumTopicId: 302255\ndashedName: equilibrium-index\n--description--\nAn equilibrium index of a sequence is an index into the sequence such that the sum of elements at lower indices is equal to the sum of elements at higher indices For example, in a sequence $A$:\n$A_0 = -7$\n$A_1 =  1$\n$A_2 =  5$\n$A_3 =  2$\n$A_4 = -4$\n$A_5 =  3$\n$A_6 =  0$\n3 is an equilibrium index, because:\n$A_0 + A_1 + A_2 = A_4 + A_5 + A_6$\n6 is also an equilibrium index, because:\n$A_0 + A_1 + A_2 + A_3 + A_4 + A_5 = 0$\n(sum of zero elements is zero)\n7 is not an equilibrium index, because it is not a valid index of sequence $A$ --instructions--\nWrite a function that, given a sequence, returns its equilibrium indices (if any) Assume that the sequence may be very long --hints--\nequilibrium should be a function js\nassert(typeof equilibrium === 'function');\nequilibrium([-7, 1, 5, 2, -4, 3, 0]) should return [3,6] js\nassert deepEqual(equilibrium(equilibriumTests[0]), ans[0]);\nequilibrium([2, 4, 6]) should return [] js\nassert deepEqual(equilibrium(equilibriumTests[1]), ans[1]);\nequilibrium([2, 9, 2]) should return [1] js\nassert deepEqual(equilibrium(equilibriumTests[2]), ans[2]);\nequilibrium([1, -1, 1, -1, 1, -1, 1]) should return [0,1,2,3,4,5,6] js\nassert deepEqual(equilibrium(equilibriumTests[3]), ans[3]);\nequilibrium([1]) should return [0] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\equilibrium-index.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0425ce022c47d4db592cbcf857be1042",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\equilibrium-index.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "indices (if any) Assume that the sequence may be very long --hints-- equilibrium should be a function js assert(typeof equilibrium === 'function'); equilibrium([-7, 1, 5, 2, -4, 3, 0]) should return [3,6] js assert deepEqual(equilibrium(equilibriumTests[0]), ans[0]); equilibrium([2, 4, 6]) should return [] js assert deepEqual(equilibrium(equilibriumTests[1]), ans[1]); equilibrium([2, 9, 2]) should return [1] js assert deepEqual(equilibrium(equilibriumTests[2]), ans[2]); equilibrium([1, -1, 1, -1, 1, -1, 1]) should return [0,1,2,3,4,5,6] js assert deepEqual(equilibrium(equilibriumTests[3]), ans[3]); equilibrium([1]) should return [0] js assertdeepEqual(equilibrium(equilibriumTests[4]), ans[4]);\nequilibrium([]) should return [] js\nassert deepEqual(equilibrium(equilibriumTests[5]), ans[5]);\n--seed--\n--after-user-code--\njs\nconst equilibriumTests =\n[[-7, 1, 5, 2, -4, 3, 0], // 3, 6\n[2, 4, 6], // empty\n[2, 9, 2], // 1\n[1, -1, 1, -1, 1, -1, 1], // 0,1,2,3,4,5,6\n[1], // 0\n[] // empty\n];\nconst ans = [[3, 6], [], [1], [0, 1, 2, 3, 4, 5, 6], [0], []];\n--seed-contents--\n```js\nfunction equilibrium(a) {\n}\n```\n--solutions--\njs\nfunction equilibrium(a) {\nlet N = a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\equilibrium-index.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2df95e91b15c816647de23299b79c30b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\equilibrium-index.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "deepEqual(equilibrium(equilibriumTests[5]), ans[5]); --seed-- --after-user-code-- js const equilibriumTests = [[-7, 1, 5, 2, -4, 3, 0], // 3, 6 [2, 4, 6], // empty [2, 9, 2], // 1 [1, -1, 1, -1, 1, -1, 1], // 0,1,2,3,4,5,6 [1], // 0 [] // empty ]; const ans = [[3, 6], [], [1], [0, 1, 2, 3, 4, 5, 6], [0], []]; --seed-contents-- ```js function equilibrium(a) { } ``` --solutions-- js function equilibrium(a) { let N = alength,\ni,\nl = [],\nr = [],\ne = [];\nfor (l[0] = a[0], r[N - 1] = a[N - 1], i = 1; i < N; i++)\n{ l[i] = l[i - 1] + a[i], r[N - i - 1] = r[N - i] + a[N - i - 1]; }\nfor (i = 0; i < N; i++)\n{ if (l[i] === r[i]) e push(i); }\nreturn e;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\equilibrium-index.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5e3ad40ee2c7ba3d6d57b26daec51fd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\euler-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59880443fb36441083c6c20e\ntitle: Euler method\nchallengeType: 1\nforumTopicId: 302258\ndashedName: euler-method\n--description--\nEuler's method numerically approximates solutions of first-order ordinary differential equations (ODEs) with a given initial value It is an explicit method for solving initial value problems (IVPs), as described in this article The ODE has to be provided in the following form:\n$\\frac{dy(t)}{dt} = f(t,y(t))$\nwith an initial value\n$y(t_0) = y_0$\nTo get a numeric solution, we replace the derivative on the LHS with a finite difference approximation:\n$\\frac{dy(t)}{dt}  \\approx \\frac{y(t+h)-y(t)}{h}$\nthen solve for $y(t+h)$:\n$y(t+h) \\approx y(t) + h \\, \\frac{dy(t)}{dt}$\nwhich is the same as\n$y(t+h) \\approx y(t) + h \\, f(t,y(t))$\nThe iterative solution rule is then:\n$y_{n+1} = y_n + h \\, f(t_n, y_n)$\nwhere $h$ is the step size, the most relevant parameter for accuracy of the solution A smaller step size increases accuracy but also the computation cost, so it has always has to be hand-picked according to the problem at hand Example: Newton's Cooling Law\nNewton's cooling law describes how an object of initial temperature $T(t_0) = T_0$ cools down in an environment of temperature $T_R$:\n$\\frac{dT(t)}{dt} = -k \\, \\Delta T$\nor\n$\\frac{dT(t)}{dt} = -k \\, (T(t) - T_R)$\nIt says that the cooling rate $\\frac{dT(t)}{dt}$ of the object is proportional to the current temperature difference $\\Delta T = (T(t) - T_R)$ to the surrounding environment",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4107,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\euler-method.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "159df11efc91c9ce690211f079a919c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\euler-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "has to be hand-picked according to the problem at hand Example: Newton's Cooling Law Newton's cooling law describes how an object of initial temperature $T(t_0) = T_0$ cools down in an environment of temperature $T_R$: $\\frac{dT(t)}{dt} = -k \\, \\Delta T$ or $\\frac{dT(t)}{dt} = -k \\, (T(t) - T_R)$ It says that the cooling rate $\\frac{dT(t)}{dt}$ of the object is proportional to the current temperature difference $\\Delta T = (T(t) - T_R)$ to the surrounding environmentThe analytical solution, which we will compare to the numerical approximation, is\n$T(t) = T_R + (T_0 - T_R) \\; e^{-k t}$\n--instructions--\nImplement a routine of Euler's method and then use it to solve the given example of Newton's cooling law for three different step sizes of:\n2 s\n5 s and\n10 s\nand compare with the analytical solution Initial values:\ninitial temperature $T_0$ shall be 100 °C\nroom temperature $T_R$ shall be 20 °C\ncooling constant $k$ shall be 0 07\ntime interval to calculate shall be from 0 s to 100 s\nFirst parameter to the function is initial time, second parameter is initial temperature, third parameter is elapsed time and fourth parameter is step size --hints--\neulersMethod should be a function js\nassert(typeof eulersMethod === 'function');\neulersMethod(0, 100, 100, 2) should return a number js\nassert(typeof eulersMethod(0, 100, 100, 2) === 'number');\neulersMethod(0, 100, 100, 2) should return 20 0424631833732 js\nassert equal(eulersMethod(0, 100, 100, 2), 20 0424631833732);\neulersMethod(0, 100, 100, 5) should return 20 01449963666907 js\nassert equal(eulersMethod(0, 100, 100, 5), 20 01449963666907);\neulersMethod(0, 100, 100, 10) should return 20 000472392 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4107,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\euler-method.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f080550c33eef8c664113168e6de8de1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\euler-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "time and fourth parameter is step size --hints-- eulersMethod should be a function js assert(typeof eulersMethod === 'function'); eulersMethod(0, 100, 100, 2) should return a number js assert(typeof eulersMethod(0, 100, 100, 2) === 'number'); eulersMethod(0, 100, 100, 2) should return 20 0424631833732 js assert equal(eulersMethod(0, 100, 100, 2), 20 0424631833732); eulersMethod(0, 100, 100, 5) should return 20 01449963666907 js assert equal(eulersMethod(0, 100, 100, 5), 20 01449963666907); eulersMethod(0, 100, 100, 10) should return 20 000472392 js assertequal(eulersMethod(0, 100, 100, 10), 20 000472392);\n--seed--\n--seed-contents--\n```js\nfunction eulersMethod(x1, y1, x2, h) {\n}\n```\n--solutions--\n```js\nfunction eulersMethod(x1, y1, x2, h) {\nlet x = x1;\nlet y = y1;\nwhile ((x < x2 && x1 < x2) || (x > x2 && x1 > x2)) {\ny += h * (-0 07 * (y - 20));\nx += h;\n}\nreturn y;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4107,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\euler-method.md",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f94bcac04c8f4842bc4a73528cb9e4e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factorial.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 597b2b2a2702b44414742771\ntitle: Factorial\nchallengeType: 1\nforumTopicId: 302263\ndashedName: factorial\n--description--\nWrite a function to return the factorial of a number.\nFactorial of a number is given by:\nn! = n * (n-1) * (n-2) * ..... * 1\nFor example:\n3! = 3 * 2 * 1 = 6\n4! = 4 * 3 * 2 * 1 = 24\nNote: 0! = 1\n--hints--\nfactorial should be a function.\njs\nassert(typeof factorial === 'function');\nfactorial(2) should return a number.\njs\nassert(typeof factorial(2) === 'number');\nfactorial(3) should return 6.\njs\nassert.equal(factorial(3), 6);\nfactorial(5) should return 120.\njs\nassert.equal(factorial(5), 120);\nfactorial(10) should return 3,628,800.\njs\nassert.equal(factorial(10), 3628800);\n--seed--\n--seed-contents--\n```js\nfunction factorial(n) {\n}\n```\n--solutions--\njs\nfunction factorial(n) {\nlet sum = 1;\nwhile (n > 1) {\nsum *= n;\nn--;\n}\nreturn sum;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factorial.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b72d3def126b00ab9bed8262c5467c5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\extensible-prime-generator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 598ee8b91b410510ae82efef\ntitle: Extensible prime generator\nchallengeType: 1\nforumTopicId: 302262\ndashedName: extensible-prime-generator\n--description--\nWrite a generator of prime numbers, in order, that will automatically adjust to accommodate the generation of any reasonably high prime The generator should be able to:\nShow the first n prime numbers\nShow the prime numbers in a range\nShow the number of primes in a range\nShow the nth prime number\nThe function should have two parameters The first will receive n or the range as an array The second will receive a boolean, that specifies if the function returns the prime numbers as an array or a single number(the number of primes in the range or the nth prime) According to the parameters the function should return an array --hints--\nprimeGenerator should be a function js\nassert(typeof primeGenerator === 'function');\nprimeGenerator(20, true) should return [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71] js\nassert deepEqual(primeGenerator(20, true), [\n2,\n3,\n5,\n7,\n11,\n13,\n17,\n19,\n23,\n29,\n31,\n37,\n41,\n43,\n47,\n53,\n59,\n61,\n67,\n71\n]);\nprimeGenerator([100, 150], true) should return [101, 103, 107, 109, 113, 127, 131, 137, 139, 149] js\nassert deepEqual(primeGenerator([100, 150], true), [\n101,\n103,\n107,\n109,\n113,\n127,\n131,\n137,\n139,\n149\n]);\nprimeGenerator([7700, 8000], false) should return 30 js\nassert equal(primeGenerator([7700, 8000], false), 30);\nprimeGenerator(10000, false) should return 104729 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\extensible-prime-generator.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "787c98a81bfe8b5e3012e752d73af4ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\extensible-prime-generator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert deepEqual(primeGenerator(20, true), [ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71 ]); primeGenerator([100, 150], true) should return [101, 103, 107, 109, 113, 127, 131, 137, 139, 149] js assert deepEqual(primeGenerator([100, 150], true), [ 101, 103, 107, 109, 113, 127, 131, 137, 139, 149 ]); primeGenerator([7700, 8000], false) should return 30 js assert equal(primeGenerator([7700, 8000], false), 30); primeGenerator(10000, false) should return 104729 js assertequal(primeGenerator(10000, false), 104729);\n--seed--\n--seed-contents--\n```js\nfunction primeGenerator(num, showPrimes) {\n}\n```\n--solutions--\n```js\nfunction primeGenerator(num, showPrimes) {\nlet i,\narr = [];\nfunction isPrime(num) {\n// try primes <= 16\nif (num <= 16) { return (\nnum == 2 || num == 3 || num == 5 || num == 7 || num == 11 || num == 13\n); }\n// cull multiples of 2, 3, 5 or 7\nif (num % 2 == 0 || num % 3 == 0 || num % 5 == 0 || num % 7 == 0)\n{ return false; }\n// cull square numbers ending in 1, 3, 7 or 9\nfor (let i = 10; i * i <= num; i += 10) {\nif (num % (i + 1) == 0) return false;\nif (num % (i + 3) == 0) return false;\nif (num % (i + 7) == 0) return false;\nif (num % (i + 9) == 0) return false;\n}\nreturn true;\n}\nif (typeof num === 'number') {\nfor (i = 0; arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\extensible-prime-generator.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ec99ac51f8e0508c2f125e5e23980616",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\extensible-prime-generator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "ending in 1, 3, 7 or 9 for (let i = 10; i * i <= num; i += 10) { if (num % (i + 1) == 0) return false; if (num % (i + 3) == 0) return false; if (num % (i + 7) == 0) return false; if (num % (i + 9) == 0) return false; } return true; } if (typeof num === 'number') { for (i = 0; arrlength < num; i++) if (isPrime(i)) arr push(i);\n// first x primes\nif (showPrimes) return arr;\n// xth prime\nreturn arr pop();\n}\nif (Array isArray(num)) {\nfor (i = num[0]; i <= num[1]; i++) if (isPrime(i)) arr push(i);\n// primes between x y\nif (showPrimes) return arr;\n// number of primes between x y\nreturn arr length;\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\extensible-prime-generator.md",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d4f70a4a128726012934cae0c1b27f7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59e0a8df964e4540d5abe599\ntitle: Execute Brain****\nchallengeType: 1\nforumTopicId: 302261\ndashedName: execute-brain\n--description--\nWrite a function to implement a Brain**** interpreter The function will take a string as a parameter and should return a string as the output More details are given below:\nRCBF is a set of Brainf*** compilers and interpreters written for Rosetta Code in a variety of languages Below are links to each of the versions of RCBF An implementation need only properly implement the following instructions:\n| Command           | Description                                                                        |\n| ----------------- | ---------------------------------------------------------------------------------- |\n| >    | Move the pointer to the right                                                      |\n| < | Move the pointer to the left                                                       |\n| +    | Increment the memory cell under the pointer                                        |\n| -    | Decrement the memory cell under the pointer                                        |\n| | Output the character signified by the cell at the pointer                          |\n| ,    | Input a character and store it in the cell at the pointer                          |\n| [   | Jump past the matching ] if the cell under the pointer is 0           |\n| ]    | Jump back to the matching [ if the cell under the pointer is nonzero |\nAny cell size is allowed, EOF (End-O-File) support is optional, as is whether you have bounded or unbounded memory --hints--\nbrain(hello) should return a string\njs\nassert(typeof brain(hello) === 'string');\nbrain(\"++++++[>++++++++++<-]>+++++ \") should return \"A\"\njs\nassert equal(brain('++++++[>++++++++++<-]>+++++ '), 'A');\nbrain(hello) should return Hello World \\n\njs\nassert equal(brain(hello), 'Hello World \\n');\nbrain(fib) should return 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4928,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "0ac7c6d66148567b2954b5dbba4b869c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the cell under the pointer is nonzero | Any cell size is allowed, EOF (End-O-File) support is optional, as is whether you have bounded or unbounded memory --hints-- brain(hello) should return a string js assert(typeof brain(hello) === 'string'); brain(\"++++++[>++++++++++<-]>+++++ \") should return \"A\" js assert equal(brain('++++++[>++++++++++<-]>+++++ '), 'A'); brain(hello) should return Hello World \\n js assert equal(brain(hello), 'Hello World \\n'); brain(fib) should return 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89 js assertequal(brain(fib), '1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89');\n--seed--\n--before-user-code--\n``js\nlet fib=+\n++\n+++\n++++\n+>+>>\n++++\n+++++++\n++++++++\n+++++++++\n++++++++++\n++++++>++++\n++++++++++++\n+++++++++++++\n+++<<<<<<[>[>>\n+>+<<<<<<<-\n]>>>>>>>[<<<<<<<\n+>>>>>>>-]<[>++++\n++++++[-<-[>>+>+<<\n<-]>>>[<<<+>>>-]+<[\n[-]<[-]]>[<<[>>>+<<\n<-]>>[-]]<<]>>>[>>+>+\n<<<-]>>>[<<<+>>>-]+<[>\n[-]<[-]]>[<<+>>[-]]<<<<\n<<<]>>>>>[++++++++++++++\n+++++++++++++++++++++++++\n+++++++++ [-]]++++++++++<[\n->-<]>+++++++++++++++++++++\n+++++++++++++++++++++++++++ [-]<<<<<<<<<<<<[>>>+>+<<<<-]>\n[<<<<+>>>>-]<-[>> > <<<[-]]\n<<[>>+>+<<<-]>>>[<<<+>>>-]<<[<+\n-]>[<+>-]<<<-]`;\nlet hello='++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>> >--- +++++++ +++ >> <- < +++ ------ -------- >>+ >++",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4928,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "507fac922ea88448a0e01f42ee9f21e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89 js assertequal(brain(fib), '1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89'); --seed-- --before-user-code-- ``js let fib=+ ++ +++ ++++ +>+>> ++++ +++++++ ++++++++ +++++++++ ++++++++++ ++++++>++++ ++++++++++++ +++++++++++++ +++<<<<<<[>[>> +>+<<<<<<<- ]>>>>>>>[<<<<<<< +>>>>>>>-]<[>++++ ++++++[-<-[>>+>+<< <-]>>>[<<<+>>>-]+<[ [-]<[-]]>[<<[>>>+<< <-]>>[-]]<<]>>>[>>+>+ <<<-]>>>[<<<+>>>-]+<[> [-]<[-]]>[<<+>>[-]]<<<< <<<]>>>>>[++++++++++++++ +++++++++++++++++++++++++ +++++++++ [-]]++++++++++<[ ->-<]>+++++++++++++++++++++ +++++++++++++++++++++++++++ [-]<<<<<<<<<<<<[>>>+>+<<<<-]> [<<<<+>>>>-]<-[>> > <<<[-]] <<[>>+>+<<<-]>>>[<<<+>>>-]<<[<+ -]>[<+>-]<<<-]`; let hello='++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>> >--- +++++++ +++ >> <- < +++ ------ -------- >>+ >++'\n```\n--seed-contents--\n```js\nfunction brain(prog) {\n}\n```\n--solutions--\n```js\nfunction brain(prog){\nvar output=\"\";\nvar code; // formatted code\nvar ip = 0; // current instruction within code\nvar nest = 0; // current bracket nesting (for Out button)\nvar ahead = []; // locations of matching brackets\nvar data = [0]; // data array (mod by +, -)\nvar dp = 0; // index into data (mod by <, >)\nvar inp = 0; // current input character (fetch with ,)\nvar quit = 0;\nvar commands = {\n'>':function() { if (++dp >= data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4928,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "a629a9c96e8593827603c4db6e8fa29c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "ip = 0; // current instruction within code var nest = 0; // current bracket nesting (for Out button) var ahead = []; // locations of matching brackets var data = [0]; // data array (mod by +, -) var dp = 0; // index into data (mod by <, >) var inp = 0; // current input character (fetch with ,) var quit = 0; var commands = { '>':function() { if (++dp >= datalength) data[dp]=0 },\n'<':function() { if (--dp < 0) quit++ },\n'+':function() { ++data[dp] },\n'-':function() { --data[dp] },\n'[':function() { if ( data[dp]) ip = ahead[ip]; else ++nest },\n']':function() { if ( data[dp]) ip = ahead[ip]; else --nest },\n',':function() {\nvar c = document getElementById(\"input\") value charCodeAt(inp++);\ndata[dp] = isNaN(c) 0 : c; // EOF: other options are -1 or no change\n},\n' ':function() {\noutput+=String fromCharCode(data[dp]);\n/var s = document getElementById(\"output\") innerHTML)\n+ String fromCharCode(data[dp]);\ns = s replace(/\\n/g,\"\") replace(/ /g,\"&nbsp;\");\ndocument getElementById(\"output\") innerHTML = s;/\n},\n};\nlet ar=prog split('');\nvar st = [], back, error = -1;\nfor (ip=0; ip<ar length; ip++) {\nswitch(ar[ip]) {\ncase '[':\nst push(ip);\nbreak;\ncase ']':\nif (st length == 0) error = ip;\nback = st pop();\nahead[ip] = back;\nahead[back] = ip;\nbreak;\n}\n}\nfor(ip=0;ip<ar length;ip++){\nif(commands hasOwnProperty(ar[ip]))\ncommands[ar[ip]]();\n}\nreturn output;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4928,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-brain.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "48208edb60c40ec30f06d3838a39bc93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-an-integer.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 597f1e7fbc206f0e9ba95dc4\ntitle: Factors of an integer\nchallengeType: 1\nforumTopicId: 302265\ndashedName: factors-of-an-integer\n--description--\nWrite a function that returns the factors of a positive integer as an array.\nThese factors are the positive integers by which the number being factored can be divided to yield a positive integer result.\n--hints--\nfactors should be a function.\njs\nassert(typeof factors === 'function');\nfactors(45) should return [1,3,5,9,15,45].\njs\nassert.deepEqual(factors(45), ans[0]);\nfactors(53) should return [1,53].\njs\nassert.deepEqual(factors(53), ans[1]);\nfactors(64) should return [1,2,4,8,16,32,64].\njs\nassert.deepEqual(factors(64), ans[2]);\n--seed--\n--after-user-code--\njs\nconst ans=[[1,3,5,9,15,45],[1,53],[1,2,4,8,16,32,64]];\n--seed-contents--\n```js\nfunction factors(num) {\n}\n```\n--solutions--\n```js\nfunction factors(num)\n{\nlet n_factors = [], i, sqr=Math.floor(Math.sqrt(num));\nfor (i = 1; i <=sqr ; i += 1)\nif (num % i === 0)\n{\nn_factors.push(i);\nif (num / i !== i)\nn_factors.push(num / i);\n}\nn_factors.sort(function(a, b){return a - b;});\nreturn n_factors;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1219,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-an-integer.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "44a18788eb9de744d96defc4981368fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 598eea87e5cf4b116c3ff81a\ntitle: Factors of a Mersenne number\nchallengeType: 1\nforumTopicId: 302264\ndashedName: factors-of-a-mersenne-number\n--description--\nA Mersenne number is a number in the form of 2P-1 If P is prime, the Mersenne number may be a Mersenne prime (If P is not prime, the Mersenne number is also not prime )\nIn the search for Mersenne prime numbers it is advantageous to eliminate exponents by finding a small factor before starting a, potentially lengthy, Lucas-Lehmer test There are very efficient algorithms for determining if a number divides 2P-1 (or equivalently, if 2P mod (the number) = 1) Some languages already have built-in implementations of this exponent-and-mod operation (called modPow or similar) The following is how to implement this modPow yourself:\nFor example, let's compute 223 mod 47 Convert the exponent 23 to binary, you get 10111 Starting with square = 1, repeatedly square it Remove the top bit of the exponent, and if it's 1 multiply square by the base of the exponentiation (2), then compute square modulo 47 Use the result of the modulo from the last step as the initial value of square in the next step:\nRemove   Optional\nsquare        top bit  multiply by 2  mod 47\n------------  -------  -------------  ------\n1*1 = 1       1  0111  1*2 = 2           2\n2*2 = 4       0   111     no             4\n4*4 = 16      1    11  16*2 = 32        32\n32*32 = 1024  1     1  1024*2 = 2048    27\n27*27 = 729   1        729*2 = 1458      1\nSince 223 mod 47 = 1, 47 is a factor of 2P-1 (To see this, subtract 1 from both sides: 223-1 = 0 mod 47 )\nSince we've shown that 47 is a factor, 223-1 is not prime",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4707,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8648b850b7f72f183f3dbf68d205a2f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0111 1*2 = 2 2 2*2 = 4 0 111 no 4 4*4 = 16 1 11 16*2 = 32 32 32*32 = 1024 1 1 1024*2 = 2048 27 27*27 = 729 1 729*2 = 1458 1 Since 223 mod 47 = 1, 47 is a factor of 2P-1 (To see this, subtract 1 from both sides: 223-1 = 0 mod 47 ) Since we've shown that 47 is a factor, 223-1 is not primeFurther properties of Mersenne numbers allow us to refine the process even more Any factor q of 2P-1 must be of the form 2kP+1, k being a positive integer or zero Furthermore, q must be 1 or 7 mod 8 Finally any potential factor q must be prime As in other trial division algorithms, the algorithm stops when 2kP+1 > sqrt(N) These primarily tests only work on Mersenne numbers where P is prime For example, M4=15 yields no factors using these techniques, but factors into 3 and 5, neither of which fit 2kP+1 --instructions--\nUsing the above method find a factor of 2p-1 --hints--\ncheck_mersenne should be a function js\nassert(typeof check_mersenne === 'function');\ncheck_mersenne(3) should return a string js\nassert(typeof check_mersenne(3) == 'string');\ncheck_mersenne(3) should return the string M3 = 2^3-1 is prime js\nassert equal(check_mersenne(3), 'M3 = 2^3-1 is prime');\ncheck_mersenne(23) should return the string M23 = 2^23-1 is composite with factor 47 js\nassert equal(check_mersenne(23), 'M23 = 2^23-1 is composite with factor 47');\ncheck_mersenne(929) should return the string M929 = 2^929-1 is composite with factor 13007 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4707,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "5e415722374fa5514c03717b4667dc54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should be a function js assert(typeof check_mersenne === 'function'); check_mersenne(3) should return a string js assert(typeof check_mersenne(3) == 'string'); check_mersenne(3) should return the string M3 = 2^3-1 is prime js assert equal(check_mersenne(3), 'M3 = 2^3-1 is prime'); check_mersenne(23) should return the string M23 = 2^23-1 is composite with factor 47 js assert equal(check_mersenne(23), 'M23 = 2^23-1 is composite with factor 47'); check_mersenne(929) should return the string M929 = 2^929-1 is composite with factor 13007 js assertequal(\ncheck_mersenne(929),\n'M929 = 2^929-1 is composite with factor 13007'\n);\n--seed--\n--seed-contents--\n```js\nfunction check_mersenne(p) {\n}\n```\n--solutions--\n```js\nfunction check_mersenne(p){\nfunction isPrime(value){\nfor (let i=2; i < value; i++){\nif (value % i == 0){\nreturn false;\n}\nif (value % i = 0){\nreturn true;\n}\n}\n}\nfunction trial_factor(base, exp, mod){\nlet square, bits;\nsquare = 1;\nbits = exp toString(2) split('');\nfor (let i=0,ln=bits length; i<ln; i++){\nsquare = Math pow(square, 2) * (bits[i] == 1 base : 1) % mod;\n}\nreturn (square == 1);\n}\nfunction mersenne_factor(p){\nlet limit, k, q;\nlimit = Math sqrt(Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4707,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "0b5586064b9574d04767f67f3e27a957",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "i=2; i < value; i++){ if (value % i == 0){ return false; } if (value % i = 0){ return true; } } } function trial_factor(base, exp, mod){ let square, bits; square = 1; bits = exp toString(2) split(''); for (let i=0,ln=bits length; i<ln; i++){ square = Math pow(square, 2) * (bits[i] == 1 base : 1) % mod; } return (square == 1); } function mersenne_factor(p){ let limit, k, q; limit = Math sqrt(Mathpow(2,p) - 1);\nk = 1;\nwhile ((2*k*p - 1) < limit){\nq = 2*k*p + 1;\nif (isPrime(q) && (q % 8 == 1 || q % 8 == 7) && trial_factor(2,p,q)){\nreturn q; // q is a factor of 2**p-1\n}\nk++;\n}\nreturn null;\n}\nlet f, result;\nresult=\"M\"+p+\" = 2^\"+p+\"-1 is \";\nf = mersenne_factor(p);\nresult+=f == null \"prime\" : \"composite with factor \"+f;\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4707,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\factors-of-a-mersenne-number.md",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "95a96278f9da688996995ce806e78945",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\farey-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59c3ec9f15068017c96eb8a3\ntitle: Farey sequence\nchallengeType: 1\nforumTopicId: 302266\ndashedName: farey-sequence\n--description--\nThe Farey sequence Fn of order n is the sequence of completely reduced fractions between 0 and 1 which, when in lowest terms, have denominators less than or equal to n, arranged in order of increasing size The Farey sequence is sometimes incorrectly called a Farey series Each Farey sequence:\nstarts with the value  0,  denoted by the fraction  $ \\frac{0}{1} $\nends with the value  1,  denoted by the fraction  $ \\frac{1}{1}$ The Farey sequences of orders 1 to 5 are:\n${\\bf\\it{F}}_1 = \\frac{0}{1}, \\frac{1}{1}$\n${\\bf\\it{F}}_2 = \\frac{0}{1}, \\frac{1}{2}, \\frac{1}{1}$\n${\\bf\\it{F}}_3 = \\frac{0}{1}, \\frac{1}{3}, \\frac{1}{2}, \\frac{2}{3}, \\frac{1}{1}$\n${\\bf\\it{F}}_4 = \\frac{0}{1}, \\frac{1}{4}, \\frac{1}{3}, \\frac{1}{2}, \\frac{2}{3}, \\frac{3}{4}, \\frac{1}{1}$\n${\\bf\\it{F}}_5 = \\frac{0}{1}, \\frac{1}{5}, \\frac{1}{4}, \\frac{1}{3}, \\frac{2}{5}, \\frac{1}{2}, \\frac{3}{5}, \\frac{2}{3}, \\frac{3}{4}, \\frac{4}{5}, \\frac{1}{1}$\n--instructions--\nWrite a function that returns the Farey sequence of order n The function should have one parameter that is n It should return the sequence as an array --hints--\nfarey should be a function js\nassert(typeof farey === 'function');\nfarey(3) should return an array\njs\nassert(Array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2655,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\farey-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "963447e44df57f4e8f52aef05dbe7bd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\farey-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "${\\bf\\it{F}}_3 = \\frac{0}{1}, \\frac{1}{3}, \\frac{1}{2}, \\frac{2}{3}, \\frac{1}{1}$ ${\\bf\\it{F}}_4 = \\frac{0}{1}, \\frac{1}{4}, \\frac{1}{3}, \\frac{1}{2}, \\frac{2}{3}, \\frac{3}{4}, \\frac{1}{1}$ ${\\bf\\it{F}}_5 = \\frac{0}{1}, \\frac{1}{5}, \\frac{1}{4}, \\frac{1}{3}, \\frac{2}{5}, \\frac{1}{2}, \\frac{3}{5}, \\frac{2}{3}, \\frac{3}{4}, \\frac{4}{5}, \\frac{1}{1}$ --instructions-- Write a function that returns the Farey sequence of order n The function should have one parameter that is n It should return the sequence as an array --hints-- farey should be a function js assert(typeof farey === 'function'); farey(3) should return an array js assert(ArrayisArray(farey(3)));\nfarey(3) should return ['0/1','1/3','1/2','2/3','1/1']\njs\nassert deepEqual(farey(3),['0/1', '1/3', '1/2', '2/3', '1/1']);\nfarey(4) should return ['0/1','1/4','1/3','1/2','2/3','3/4','1/1']\njs\nassert deepEqual(farey(4), ['0/1', '1/4', '1/3', '1/2', '2/3', '3/4', '1/1']);\nfarey(5) should return ['0/1','1/5','1/4','1/3','2/5','1/2','3/5','2/3','3/4','4/5','1/1']\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2655,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\farey-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ad47b6de40fa11c391a3fd774e7e36a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\farey-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a function that returns the Farey sequence of order n The function should have one parameter that is n It should return the sequence as an array --hints-- farey should be a function js assert(typeof farey === 'function'); farey(3) should return an array js assert(ArrayisArray(farey(3))); farey(3) should return ['0/1','1/3','1/2','2/3','1/1'] js assert deepEqual(farey(3),['0/1', '1/3', '1/2', '2/3', '1/1']); farey(4) should return ['0/1','1/4','1/3','1/2','2/3','3/4','1/1'] js assert deepEqual(farey(4), ['0/1', '1/4', '1/3', '1/2', '2/3', '3/4', '1/1']); farey(5) should return ['0/1','1/5','1/4','1/3','2/5','1/2','3/5','2/3','3/4','4/5','1/1'] js assertdeepEqual(farey(5), [\n'0/1',\n'1/5',\n'1/4',\n'1/3',\n'2/5',\n'1/2',\n'3/5',\n'2/3',\n'3/4',\n'4/5',\n'1/1'\n]);\n--seed--\n--seed-contents--\n```js\nfunction farey(n) {\n}\n```\n--solutions--\njs\nfunction farey(n) {\nconst sequence = [{ string: \"0/1\", float: 0 0 }];\nfor (let i = 1; i < n; i++) {\nfor (let j = n; j >= i; j--) {\nif (i === 1 || j % i > 0) {\nsequence push({ string: `${i}/${j}`, float: i / j });\n}\n}\n}\nreturn sequence sort((a, b) => a float - b float) map(e => e string)\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2655,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\farey-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2f51d227e82f40cc852d637814b0ef4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59e09e6d412c5939baa02d16\ntitle: Execute a Markov algorithm\nchallengeType: 1\nforumTopicId: 302260\ndashedName: execute-a-markov-algorithm\n--description--\nMarkov Concepts are used in machine learning, because of its simple approach in data manipulation With a set number of rules you can manipulate given data to create a desired output We have added in the background:\nThe rules in the form of nested array, and the data in the form of array, too And the desired outputs The rules:\n```js\nlet rules=[\n[\n\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\n\"the shop -> my brother\",\"a never used -> terminating rule\"\n],\n[\n\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\n\"the shop -> my brother\",\"a never used -> terminating rule\"\n],\n[\n\"A -> apple\",\"WWWW -> with\",\"Bgage -> -> \",\"B -> bag\",\n\"-> -> money\",\"W -> WW\",\"S -> shop\",\"T -> the\",\n\"the shop -> my brother\",\"a never used -> terminating rule\"\n],\n[\n\"+1 -> _1+\",\"1+1 -> 11+\",\"1 -> 1\",\", -> +\",\" -> \",\"1*1 -> x,@y\",\"1x -> xX\",\n\"X, -> 1,1\",\"X1 -> 1X\",\"_x -> _X\",\",x -> ,X\",\"y1 -> 1y\",\"y -> \",\"1@1 -> x,@y\",\n\"1@ -> @\",\",@ -> \",\"++ -> +\",\"_1 -> 1\",\"1+ -> 1\",\"+ -> \"\n],\n[\n\"A0 -> 1B\",\"0A1 -> C01\",\"1A1 -> C11\",\"0B0 -> A01\",\"1B0 -> A11\",\n\"B1 -> 1B\",\"0C0 -> B01\",\"1C0 -> B11\",\"0C1 -> H01\",\"1C1 -> H11\"\n]\n];\n```\nThe data:\njs\nlet data=[\n\"I bought a B of As from T S \",\n\"I bought a B of As from T S \",\n\"I bought a B of As W my Bgage from T S",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "05c9b45d4d5d0f974026c2f72b3832cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "-> @\",\",@ -> \",\"++ -> +\",\"_1 -> 1\",\"1+ -> 1\",\"+ -> \" ], [ \"A0 -> 1B\",\"0A1 -> C01\",\"1A1 -> C11\",\"0B0 -> A01\",\"1B0 -> A11\", \"B1 -> 1B\",\"0C0 -> B01\",\"1C0 -> B11\",\"0C1 -> H01\",\"1C1 -> H11\" ] ]; ``` The data: js let data=[ \"I bought a B of As from T S \", \"I bought a B of As from T S \", \"I bought a B of As W my Bgage from T S\",\n\"_1111*11111_\",\n\"000000A000000\"\n];\nThe outputs:\njs\nlet outputs=[\n\"I bought a bag of apples from my brother \",\n\"I bought a bag of apples from T shop \",\n\"I bought a bag of apples with my money from T shop \",\n\"11111111111111111111\",\n\"00011H1111000\"\n]\nUsing Markov Algorithm, change the data into the desired outputs using the rules provided for you --hints--\nmarkov should be a function js\nassert(typeof markov === 'function');\nmarkov([\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"],\"I bought a B of As from T S \") should return the string I bought a bag of apples from my brother js\nassert deepEqual(markov(rules[0], datas[0]), outputs[0]);\nmarkov([\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"],\"I bought a B of As from T S \") should return the string I bought a bag of apples from T shop js\nassert deepEqual(markov(rules[1], datas[1]), outputs[1]);\nmarkov([\"A -> apple\",\"WWWW -> with\",\"Bgage -> -> *\",\"B -> bag\",\"-> * -> money\",\"W -> WW\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"],\"I bought a B of As W my Bgage from T S \") should return the string I bought a bag of apples with my money from T shop js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "a9b583e3d4b045db5e4c43220aff182e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return the string I bought a bag of apples from T shop js assert deepEqual(markov(rules[1], datas[1]), outputs[1]); markov([\"A -> apple\",\"WWWW -> with\",\"Bgage -> -> *\",\"B -> bag\",\"-> * -> money\",\"W -> WW\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"],\"I bought a B of As W my Bgage from T S \") should return the string I bought a bag of apples with my money from T shop js assertdeepEqual(markov(rules[2], datas[2]), outputs[2]);\nmarkov([\"_+1 -> _1+\",\"1+1 -> 11+\",\"1 -> 1\",\", -> +\",\"_ -> _\",\"1*1 -> x,@y\",\"1x -> xX\",\"X, -> 1,1\",\"X1 -> 1X\",\"_x -> _X\",\",x -> ,X\",\"y1 -> 1y\",\"y_ -> _\",\"1@1 -> x,@y\",\"1@_ -> @_\",\",@_ -> _\",\"++ -> +\",\"_1 -> 1\",\"1+_ -> 1\",\"_+_ -> \"],\"_1111*11111_\") should return the string 11111111111111111111 js\nassert deepEqual(markov(rules[3], datas[3]), outputs[3]);\nmarkov([\"A0 -> 1B\",\"0A1 -> C01\",\"1A1 -> C11\",\"0B0 -> A01\",\"1B0 -> A11\",\"B1 -> 1B\",\"0C0 -> B01\",\"1C0 -> B11\",\"0C1 -> H01\",\"1C1 -> H11\"],\"\") should return the string 00011H1111000 js\nassert deepEqual(markov(rules[4], datas[4]), outputs[4]);\n--seed--\n--after-user-code--\n```js\nlet rules=[[\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"],\n[\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"],\n[\"A -> apple\",\"WWWW -> with\",\"Bgage -> -> \",\"B -> bag\",\"->",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "bc5baf08dbd55d215f2fa0d480c33333",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "-> C11\",\"0B0 -> A01\",\"1B0 -> A11\",\"B1 -> 1B\",\"0C0 -> B01\",\"1C0 -> B11\",\"0C1 -> H01\",\"1C1 -> H11\"],\"\") should return the string 00011H1111000 js assert deepEqual(markov(rules[4], datas[4]), outputs[4]); --seed-- --after-user-code-- ```js let rules=[[\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"], [\"A -> apple\",\"B -> bag\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"], [\"A -> apple\",\"WWWW -> with\",\"Bgage -> -> \",\"B -> bag\",\"->-> money\",\"W -> WW\",\"S -> shop\",\"T -> the\",\"the shop -> my brother\",\"a never used -> terminating rule\"],\n[\"+1 -> _1+\",\"1+1 -> 11+\",\"1 -> 1\",\", -> +\",\" -> \",\"11 -> x,@y\",\"1x -> xX\",\"X, -> 1,1\",\"X1 -> 1X\",\"x -> _X\",\",x -> ,X\",\"y1 -> 1y\",\"y -> \",\"1@1 -> x,@y\",\"1@ -> @\",\",@ -> \",\"++ -> +\",\"_1 -> 1\",\"1+ -> 1\",\"+ -> \"],\n[\"A0 -> 1B\",\"0A1 -> C01\",\"1A1 -> C11\",\"0B0 -> A01\",\"1B0 -> A11\",\"B1 -> 1B\",\"0C0 -> B01\",\"1C0 -> B11\",\"0C1 -> H01\",\"1C1 -> H11\"]];\nlet datas=[\"I bought a B of As from T S \",\n\"I bought a B of As from T S \",\n\"I bought a B of As W my Bgage from T S \",\n\"_111111111\",\n\"000000A000000\"];\nlet outputs=[\"I bought a bag of apples from my brother \",\n\"I bought a bag of apples from T shop \",\n\"I bought a bag of apples with my money from T shop",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "e4cbfc848eb44886e9a86f17d0b5c500",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "B01\",\"1C0 -> B11\",\"0C1 -> H01\",\"1C1 -> H11\"]]; let datas=[\"I bought a B of As from T S \", \"I bought a B of As from T S \", \"I bought a B of As W my Bgage from T S \", \"_111111111\", \"000000A000000\"]; let outputs=[\"I bought a bag of apples from my brother \", \"I bought a bag of apples from T shop \", \"I bought a bag of apples with my money from T shop\",\n\"11111111111111111111\",\n\"00011H1111000\"]\n```\n--seed-contents--\n```js\nfunction markov(rules,data) {\n}\n```\n--solutions--\n```js\nfunction markov(rules,data) {\nlet pattern = new RegExp(\"^([^#] )\\s+->\\s+(\\ )( )\");\nlet origData = data;\nlet captures = [];\nrules forEach(function(rule){\nlet m = pattern exec(rule);\nfor (let j = 0; j < m length; j++)\nm[j] = m[j + 1];\ncaptures push(m);\n});\ndata = origData;\nlet copy = data;\nfor (let j = 0; j < captures length; j++) {\nlet c = captures[j];\ndata = data replace(c[0], c[2]);\nif (c[1]==\" \")\nbreak;\nif (data =copy) {\nj = -1;\ncopy = data;\n}\n}\nreturn data;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\execute-a-markov-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3b6e2323c3057d9b764365ec6feb8e5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 597f24c1dda4e70f53c79c81\ntitle: Fibonacci sequence\nchallengeType: 1\nforumTopicId: 302268\ndashedName: fibonacci-sequence\n--description--\nWrite a function to generate the nth Fibonacci number.\nThe nth Fibonacci number is given by:\nFn = Fn-1 + Fn-2\nThe first two terms of the series are 0 and 1.\nHence, the series is: 0, 1, 1, 2, 3, 5, 8, 13...\n--hints--\nfibonacci should be a function.\njs\nassert(typeof fibonacci === 'function');\nfibonacci(2) should return a number.\njs\nassert(typeof fibonacci(2) == 'number');\nfibonacci(3) should return 2.\njs\nassert.equal(fibonacci(3), 2);\nfibonacci(5) should return 5.\njs\nassert.equal(fibonacci(5), 5);\nfibonacci(10) should return 55.\njs\nassert.equal(fibonacci(10), 55);\n--seed--\n--seed-contents--\n```js\nfunction fibonacci(n) {\n}\n```\n--solutions--\njs\nfunction fibonacci(n) {\nlet a = 0, b = 1, t;\nwhile (--n >= 0) {\nt = a;\na = b;\nb += t;\n}\nreturn a;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9bcd4d49535f9c8976b5b7f0545a5441",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fizzbuzz.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e9ddb06ec35240f39657419\ntitle: FizzBuzz\nchallengeType: 1\nforumTopicId: 385370\ndashedName: fizzbuzz\n--description--\nWrite a program that generates an array of integers from 1 to 100 (inclusive). But:\nfor multiples of 3, add \"Fizz\" to the array instead of the number\nfor multiples of 5, add \"Buzz\" to the array instead of the number\nfor multiples of 3 and 5, add \"FizzBuzz\" to the array instead of the number\n--instructions--\nYour program should return an array containing the results based on the rules above.\n--hints--\nfizzBuzz should be a function.\njs\nassert(typeof fizzBuzz == 'function');\nfizzBuzz() should return an Array.\njs\nassert(Array.isArray(fizzBuzz()) == true);\nNumbers divisible by only 3 should return \"Fizz\".\njs\nassert.equal(fizzBuzz()[2], 'Fizz');\nNumbers divisible by only 5 should return \"Buzz\".\njs\nassert.equal(fizzBuzz()[99], 'Buzz');\nNumbers divisible by both 3 and 5 should return \"FizzBuzz\".\njs\nassert.equal(fizzBuzz()[89], 'FizzBuzz');\nNumbers not divisible by either 3 or 5 should return the number itself.\njs\nassert.equal(fizzBuzz()[12], 13);\n--seed--\n--seed-contents--\n```js\nfunction fizzBuzz() {\n}\n```\n--solutions--\njs\nfunction fizzBuzz() {\nlet res=[];\nfor (let i =1; i < 101; i++) {\nif (i % 3 === 0  && i % 5 === 0) {\nres.push(\"FizzBuzz\");\n}\nelse if (i % 3 === 0) {\nres.push(\"Fizz\");\n}\nelse if (i % 5 === 0) {\nres.push(\"Buzz\");\n}\nelse {\nres.push(i);\n}\n}\nreturn res;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1723,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fizzbuzz.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a71e5c33181fafc3b67d1328bebabe61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5992e222d397f00d21122931\ntitle: Fibonacci word\nchallengeType: 1\nforumTopicId: 302269\ndashedName: fibonacci-word\n--description--\nThe Fibonacci Word Sequence may be created in a manner analogous to the Fibonacci Sequence, but it focuses on iterating concatenation Define  F_Word1  as  1\nDefine  F_Word2  as  0\nForm   F_Word3  as  F_Word2   concatenated with  F_Word1   i e :  01\nForm   F_Wordn  as  F_Wordn-1  concatenated with  F_wordn-2\nEntropy calculation is required in this challenge, as shown in this Rosetta Code challenge\n--instructions--\nWrite a function to return the first n Fibonacci Words The number of n is provided as a parameter to the function The function should return an array of objects The objects should be of the form: { N: 1, Length: 1, Entropy: 0, Word: '1' } Entropy is computed for the string Word and rounded to 8 decimal digits of accuracy Note that the indices of this sequence start at 1 --hints--\nfibWord should be a function js\nassert(typeof fibWord === 'function');\nfibWord(5) should return an array js\nassert(Array isArray(fibWord(5)));\nfibWord(5) should return [{ N:1, Length:1, Entropy:0, Word:\"1\" },{ N:2, Length:1, Entropy:0, Word:\"0\" },{ N:3, Length:2, Entropy:1, Word:\"01\" },{ N:4, Length:3, Entropy:0 91829583, Word:\"010\" },{ N:5, Length:5, Entropy:0 97095059, Word:\"01001\" }] js\nassert deepEqual(fibWord(5), words5);\nfibWord(7) should return [{ N:1, Length:1, Entropy:0, Word:\"1\" },{ N:2, Length:1, Entropy:0, Word:\"0\" },{ N:3, Length:2, Entropy:1, Word:\"01\" },{ N:4, Length:3, Entropy:0 91829583, Word:\"010\" },{ N:5, Length:5, Entropy:0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "ff86fdbdf355316d261bb77e2c9bb24e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert(typeof fibWord === 'function'); fibWord(5) should return an array js assert(Array isArray(fibWord(5))); fibWord(5) should return [{ N:1, Length:1, Entropy:0, Word:\"1\" },{ N:2, Length:1, Entropy:0, Word:\"0\" },{ N:3, Length:2, Entropy:1, Word:\"01\" },{ N:4, Length:3, Entropy:0 91829583, Word:\"010\" },{ N:5, Length:5, Entropy:0 97095059, Word:\"01001\" }] js assert deepEqual(fibWord(5), words5); fibWord(7) should return [{ N:1, Length:1, Entropy:0, Word:\"1\" },{ N:2, Length:1, Entropy:0, Word:\"0\" },{ N:3, Length:2, Entropy:1, Word:\"01\" },{ N:4, Length:3, Entropy:0 91829583, Word:\"010\" },{ N:5, Length:5, Entropy:097095059, Word:\"01001\" }, { N:6, Length:8, Entropy:0 954434, Word:'01001010' }, { N:7, Length:13, Entropy:0 9612366, Word:'0100101001001' }] js\nassert deepEqual(fibWord(7), words7);\n--seed--\n--after-user-code--\n```js\nconst words5 = [\n{ N: 1, Length: 1, Entropy: 0, Word: '1' },\n{ N: 2, Length: 1, Entropy: 0, Word: '0' },\n{ N: 3, Length: 2, Entropy: 1, Word: '01' },\n{ N: 4, Length: 3, Entropy: 0 91829583, Word: '010' },\n{ N: 5, Length: 5, Entropy: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f6491ad3a827424221c99efb55b1194c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Entropy:097095059, Word:\"01001\" }, { N:6, Length:8, Entropy:0 954434, Word:'01001010' }, { N:7, Length:13, Entropy:0 9612366, Word:'0100101001001' }] js assert deepEqual(fibWord(7), words7); --seed-- --after-user-code-- ```js const words5 = [ { N: 1, Length: 1, Entropy: 0, Word: '1' }, { N: 2, Length: 1, Entropy: 0, Word: '0' }, { N: 3, Length: 2, Entropy: 1, Word: '01' }, { N: 4, Length: 3, Entropy: 0 91829583, Word: '010' }, { N: 5, Length: 5, Entropy: 097095059, Word: '01001' }\n];\nconst words7 = [\n{ N: 1, Length: 1, Entropy: 0, Word: '1' },\n{ N: 2, Length: 1, Entropy: 0, Word: '0' },\n{ N: 3, Length: 2, Entropy: 1, Word: '01' },\n{ N: 4, Length: 3, Entropy: 0 91829583, Word: '010' },\n{ N: 5, Length: 5, Entropy: 0 97095059, Word: '01001' },\n{ N: 6, Length: 8, Entropy: 0 954434, Word: '01001010' },\n{ N: 7, Length: 13, Entropy: 0 9612366, Word: '0100101001001' }\n];\n```\n--seed-contents--\n```js\nfunction fibWord(n) {\n}\n```\n--solutions--\n```js\n// Round to digits\nfunction roundFloat(num, digits) {\nreturn Math round(num * 10 0digits) / (10 0digits);\n}\n// Entropy calculation for string with only 0 and 1\nfunction entropy(word) {\nfunction digitEntropy(count) {\nreturn count < 1 0\n: - count / word length * Math log2(count / word",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ee433bb198cda0f39d90f2edb0065261",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "954434, Word: '01001010' }, { N: 7, Length: 13, Entropy: 0 9612366, Word: '0100101001001' } ]; ``` --seed-contents-- ```js function fibWord(n) { } ``` --solutions-- ```js // Round to digits function roundFloat(num, digits) { return Math round(num * 10 0digits) / (10 0digits); } // Entropy calculation for string with only 0 and 1 function entropy(word) { function digitEntropy(count) { return count < 1 0 : - count / word length * Math log2(count / wordlength);\n}\nconst numZeros = word split('') filter(e => e === '0') length;\nconst numOnes  = word length - numZeros;\nreturn roundFloat(digitEntropy(numZeros) + digitEntropy(numOnes), 8);\n}\n// Compute array of Fibonacci words\nfunction fibWord(n) {\nreturn [ Array(n) keys()] reduce((words, i) => {\nconst word = i === 0 \"1\"\n: i === 1 \"0\"\n: words[i - 1] Word + words[i - 2] Word;\nwords push(\n{ N: i + 1, Length: word length, Entropy: entropy(word), Word: word }\n);\nreturn words;\n}, []);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-word.md",
      "source_type": "git_repo"
    },
    "token_count": 293,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "3989ee94c4d77ccadedc0d0645cd6869",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gamma-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e76\ntitle: Gamma function\nchallengeType: 1\nforumTopicId: 302271\ndashedName: gamma-function\n--description--\nImplement one algorithm (or more) to compute the Gamma function (in the real field only) The Gamma function can be defined as:\n$\\Gamma(x) = \\displaystyle\\int_0^\\infty t^{x-1}e^{-t} dt$\n--hints--\ngamma should be a function js\nassert(typeof gamma == 'function');\ngamma( 1) should return a number js\nassert(typeof gamma(0 1) == 'number');\ngamma( 1) should return 9 513507698668736 js\nassert equal(round(gamma(0 1)), round(9 513507698668736));\ngamma( 2) should return 4 590843711998803 js\nassert equal(round(gamma(0 2)), round(4 590843711998803));\ngamma( 3) should return 2 9915689876875904 js\nassert equal(round(gamma(0 3)), round(2 9915689876875904));\ngamma( 4) should return 2 218159543757687 js\nassert equal(round(gamma(0 4)), round(2 218159543757687));\ngamma( 5) should return 1 7724538509055159 js\nassert equal(round(gamma(0 5)), round(1 7724538509055159));\n--seed--\n--after-user-code--\njs\nfunction round(x) {\nreturn Number(x) toPrecision(13);\n}\n--seed-contents--\n```js\nfunction gamma(x) {\n}\n```\n--solutions--\n```js\nfunction gamma(x) {\nvar p = [0 99999999999980993, 676 5203681218851, -1259 1392167224028,\n771 32342877765313, -176 61502916214059, 12 507343278686905,\n-0 13857109526572012, 9 9843695780195716e-6, 1 5056327351493116e-7\n];\nvar g = 7;\nif (x < 0 5) {\nreturn Math PI / (Math sin(Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gamma-function.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2a9eacd27c5cc927a8f6f894a48fa9f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gamma-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "equal(round(gamma(0 4)), round(2 218159543757687)); gamma( 5) should return 1 7724538509055159 js assert equal(round(gamma(0 5)), round(1 7724538509055159)); --seed-- --after-user-code-- js function round(x) { return Number(x) toPrecision(13); } --seed-contents-- ```js function gamma(x) { } ``` --solutions-- ```js function gamma(x) { var p = [0 99999999999980993, 676 5203681218851, -1259 1392167224028, 771 32342877765313, -176 61502916214059, 12 507343278686905, -0 13857109526572012, 9 9843695780195716e-6, 1 5056327351493116e-7 ]; var g = 7; if (x < 0 5) { return Math PI / (Math sin(MathPI * x) * gamma(1 - x));\n}\nx -= 1;\nvar a = p[0];\nvar t = x + g + 0 5;\nfor (var i = 1; i < p length; i++) {\na += p[i] / (x + i);\n}\nvar result=Math sqrt(2 * Math PI) * Math pow(t, x + 0 5) * Math exp(-t) * a;\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gamma-function.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4769a0223bef23bc2590a53aab2404ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a7dad05be01840e1778a0d1\ntitle: Fractran\nchallengeType: 1\nforumTopicId: 302270\ndashedName: fractran\n--description--\nFRACTRAN is a Turing-complete esoteric programming language invented by the mathematician John Horton Conway A FRACTRAN program is an ordered list of positive fractions $P = (f_1, f_2, \\ldots, f_m)$, together with an initial positive integer input $n$ The program is run by updating the integer $n$ as follows:\nfor the first fraction, $f_i$, in the list for which $nf_i$ is an integer, replace $n$ with $nf_i$ ;\nrepeat this rule until no fraction in the list produces an integer when multiplied by $n$, then halt Conway gave a program for primes in FRACTRAN:\n$\\dfrac{17}{91}$, $\\dfrac{78}{85}$, $\\dfrac{19}{51}$, $\\dfrac{23}{38}$, $\\dfrac{29}{33}$, $\\dfrac{77}{29}$, $\\dfrac{95}{23}$, $\\dfrac{77}{19}$, $\\dfrac{1}{17}$, $\\dfrac{11}{13}$, $\\dfrac{13}{11}$, $\\dfrac{15}{14}$, $\\dfrac{15}{2}$, $\\dfrac{55}{1}$\nStarting with $n=2$, this FRACTRAN program will change $n$ to $15=2\\times (\\frac{15}{2})$, then $825=15\\times (\\frac{55}{1})$, generating the following sequence of integers:\n$2$, $15$, $825$, $725$, $1925$, $2275$, $425$, $390$, $330$, $290$, $770$, $\\ldots$\nAfter 2, this sequence contains the following powers of 2:\n$2^2=4$, $2^3=8$, $2^5=32$, $2^7=128$, $2^{11}=2048$, $2^{13}=8192$, $2^{17}=131072$, $2^{19}=524288$, $\\ldots$\nwhich are the prime powers of 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "cf6475e5f34fadec4f3470060024d82b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "primes in FRACTRAN: $\\dfrac{17}{91}$, $\\dfrac{78}{85}$, $\\dfrac{19}{51}$, $\\dfrac{23}{38}$, $\\dfrac{29}{33}$, $\\dfrac{77}{29}$, $\\dfrac{95}{23}$, $\\dfrac{77}{19}$, $\\dfrac{1}{17}$, $\\dfrac{11}{13}$, $\\dfrac{13}{11}$, $\\dfrac{15}{14}$, $\\dfrac{15}{2}$, $\\dfrac{55}{1}$ Starting with $n=2$, this FRACTRAN program will change $n$ to $15=2\\times (\\frac{15}{2})$, then $825=15\\times (\\frac{55}{1})$, generating the following sequence of integers: $2$, $15$, $825$, $725$, $1925$, $2275$, $425$, $390$, $330$, $290$, $770$, $\\ldots$ After 2, this sequence contains the following powers of 2: $2^2=4$, $2^3=8$, $2^5=32$, $2^7=128$, $2^{11}=2048$, $2^{13}=8192$, $2^{17}=131072$, $2^{19}=524288$, $\\ldots$ which are the prime powers of 2--instructions--\nWrite a function that takes a fractran program as a string parameter and returns the first 10 numbers of the program as an array If the result does not have 10 numbers then return the numbers as is --hints--\nfractran should be a function js\nassert(typeof fractran == 'function');\nfractran(\"3/2, 1/3\") should return an array js\nassert(Array isArray(fractran('3/2, 1/3')));\nfractran(\"3/2, 1/3\") should return [ 2, 3, 1 ] js\nassert deepEqual(fractran('3/2, 1/3'), [2, 3, 1]);\nfractran(\"3/2, 5/3, 1/5\") should return [ 2, 3, 5, 1 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2ac94c73b4cec1cdd680314dde922c17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and returns the first 10 numbers of the program as an array If the result does not have 10 numbers then return the numbers as is --hints-- fractran should be a function js assert(typeof fractran == 'function'); fractran(\"3/2, 1/3\") should return an array js assert(Array isArray(fractran('3/2, 1/3'))); fractran(\"3/2, 1/3\") should return [ 2, 3, 1 ] js assert deepEqual(fractran('3/2, 1/3'), [2, 3, 1]); fractran(\"3/2, 5/3, 1/5\") should return [ 2, 3, 5, 1 ] js assertdeepEqual(fractran('3/2, 5/3, 1/5'), [2, 3, 5, 1]);\nfractran(\"3/2, 6/3\") should return [ 2, 3, 6, 9, 18, 27, 54, 81, 162, 243 ] js\nassert deepEqual(fractran('3/2, 6/3'), [2, 3, 6, 9, 18, 27, 54, 81, 162, 243]);\nfractran(\"2/7, 7/2\") should return [ 2, 7, 2, 7, 2, 7, 2, 7, 2, 7 ] js\nassert deepEqual(fractran('2/7, 7/2'), [2, 7, 2, 7, 2, 7, 2, 7, 2, 7]);\nfractran(\"17/91, 78/85, 19/51, 23/38, 29/33, 77/29, 95/23, 77/19, 1/17, 11/13, 13/11, 15/14, 15/2, 55/1\") should return [ 2, 15, 825, 725, 1925, 2275, 425, 390, 330, 290 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "bcc8b1a97d6b29c3b5cbf786b620e118",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "243 ] js assert deepEqual(fractran('3/2, 6/3'), [2, 3, 6, 9, 18, 27, 54, 81, 162, 243]); fractran(\"2/7, 7/2\") should return [ 2, 7, 2, 7, 2, 7, 2, 7, 2, 7 ] js assert deepEqual(fractran('2/7, 7/2'), [2, 7, 2, 7, 2, 7, 2, 7, 2, 7]); fractran(\"17/91, 78/85, 19/51, 23/38, 29/33, 77/29, 95/23, 77/19, 1/17, 11/13, 13/11, 15/14, 15/2, 55/1\") should return [ 2, 15, 825, 725, 1925, 2275, 425, 390, 330, 290 ] js assertdeepEqual(\nfractran(\n'17/91, 78/85, 19/51, 23/38, 29/33, 77/29, 95/23, 77/19, 1/17, 11/13, 13/11, 15/14, 15/2, 55/1'\n),\n[2, 15, 825, 725, 1925, 2275, 425, 390, 330, 290]\n);\n--seed--\n--seed-contents--\n```js\nfunction fractran(progStr) {\n}\n```\n--solutions--\n```js\nfunction fractran(progStr){\nvar num = new Array();\nvar den = new Array();\nvar val ;\nvar out=\"\";\nfunction compile(prog){\nvar regex = /\\s(\\d)\\s\\/\\s(\\d)\\s( *)/m;\nwhile(regex test(prog)){\nnum push(regex exec(prog)[1]);\nden push(regex exec(prog)[2]);\nprog = regex exec(prog)[3];\n}\n}\nfunction step(val){\nvar i=0;\nwhile(i<den length && val%den[i]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "b046f4684045d12fc6c72b68f08b4411",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "95/23, 77/19, 1/17, 11/13, 13/11, 15/14, 15/2, 55/1' ), [2, 15, 825, 725, 1925, 2275, 425, 390, 330, 290] ); --seed-- --seed-contents-- ```js function fractran(progStr) { } ``` --solutions-- ```js function fractran(progStr){ var num = new Array(); var den = new Array(); var val ; var out=\"\"; function compile(prog){ var regex = /\\s(\\d)\\s\\/\\s(\\d)\\s( *)/m; while(regex test(prog)){ num push(regex exec(prog)[1]); den push(regex exec(prog)[2]); prog = regex exec(prog)[3]; } } function step(val){ var i=0; while(i<den length && val%den[i]= 0) i++;\nreturn num[i]*val/den[i];\n}\nvar seq=[]\nfunction exec(val){\nvar i = 0;\nwhile(val && i<limit){\nseq push(val)\nval = step(val);\ni ++;\n}\n}\n// Main\ncompile(progStr);\nvar limit = 10;\nexec(2);\nreturn seq;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fractran.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "c3d3de168f5f2acf3c0ed25e44a8c132",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 598eef80ba501f1268170e1e\ntitle: Fibonacci n-step number sequences\nchallengeType: 1\nforumTopicId: 302267\ndashedName: fibonacci-n-step-number-sequences\n--description--\nThese number series are an expansion of the ordinary Fibonacci sequence where:\nFor $n = 2$ we have the Fibonacci sequence; with initial values $[1, 1]$ and $F_k^2 = F_{k-1}^2 + F_{k-2}^2$\nFor $n = 3$ we have the tribonacci sequence; with initial values $[1, 1, 2]$ and $F_k^3 = F_{k-1}^3 + F_{k-2}^3 + F_{k-3}^3$\nFor $n = 4$ we have the tetranacci sequence; with initial values $[1, 1, 2, 4]$ and $F_k^4 = F_{k-1}^4 + F_{k-2}^4 + F_{k-3}^4 + F_{k-4}^4$ For general $n>2$ we have the Fibonacci $n$-step sequence - $F_k^n$; with initial values of the first $n$ values of the $(n-1)$'th Fibonacci $n$-step sequence $F_k^{n-1}$; and $k$'th value of this $n$'th sequence being $F_k^n = \\sum_{i=1}^{(n)} {F_{k-i}^{(n)}}$\nFor small values of $n$, Greek numeric prefixes are sometimes used to individually name each series Fibonacci $n$-step sequences:\n| $n$ | Series name | Values                                                 |\n| --- | ----------- | ------------------------------------------------------ |\n| 2   | fibonacci   | 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 |\n| 3   | tribonacci  | 1 1 2 4 7 13 24 44 81 149 274 504 927 1705 3136",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "99751b79771d16cc273a4467964f7eae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{F_{k-i}^{(n)}}$ For small values of $n$, Greek numeric prefixes are sometimes used to individually name each series Fibonacci $n$-step sequences: | $n$ | Series name | Values | | --- | ----------- | ------------------------------------------------------ | | 2 | fibonacci | 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 | | 3 | tribonacci | 1 1 2 4 7 13 24 44 81 149 274 504 927 1705 3136|\n| 4   | tetranacci  | 1 1 2 4 8 15 29 56 108 208 401 773 1490 2872 5536 |\n| 5   | pentanacci  | 1 1 2 4 8 16 31 61 120 236 464 912 1793 3525 6930 |\n| 6   | hexanacci   | 1 1 2 4 8 16 32 63 125 248 492 976 1936 3840 7617 |\n| 7   | heptanacci  | 1 1 2 4 8 16 32 64 127 253 504 1004 2000 3984 7936 |\n| 8   | octonacci   | 1 1 2 4 8 16 32 64 128 255 509 1016 2028 4048 8080 |\n| 9   | nonanacci   | 1 1 2 4 8 16 32 64 128 256 511 1021 2040 4076 8144 |\n| 10  | decanacci   | 1 1 2 4 8 16 32 64 128 256 512 1023 2045 4088 8172 |\nAllied sequences can be generated where the initial values are changed: The Lucas series sums the two preceding values like the fibonacci series for $n=2$ but uses $[2, 1]$ as its initial values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "d56f8c7de9378487f96e754cb8ad2ea1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "| | 9 | nonanacci | 1 1 2 4 8 16 32 64 128 256 511 1021 2040 4076 8144 | | 10 | decanacci | 1 1 2 4 8 16 32 64 128 256 512 1023 2045 4088 8172 | Allied sequences can be generated where the initial values are changed: The Lucas series sums the two preceding values like the fibonacci series for $n=2$ but uses $[2, 1]$ as its initial values--instructions--\nWrite a function to generate Fibonacci $n$-step number sequences and Lucas sequences The first parameter will be $n$ The second parameter will be the number of elements to be returned The third parameter will specify whether to output the Fibonacci sequence or the Lucas sequence If the parameter is \"f\" then return the Fibonacci sequence and if it is \"l\", then return the Lucas sequence The sequences must be returned as an array --hints--\nfib_luc should be a function js\nassert(typeof fib_luc === 'function');\nfib_luc(2,10,\"f\") should return [1,1,2,3,5,8,13,21,34,55] js\nassert deepEqual(fib_luc(2, 10, 'f'), ans[0]);\nfib_luc(3,15,\"f\") should return [1,1,2,4,7,13,24,44,81,149,274,504,927,1705,3136] js\nassert deepEqual(fib_luc(3, 15, 'f'), ans[1]);\nfib_luc(4,15,\"f\") should return [1,1,2,4,8,15,29,56,108,208,401,773,1490,2872,5536] js\nassert deepEqual(fib_luc(4, 15, 'f'), ans[2]);\nfib_luc(2,10,\"l\") should return [ 2, 1, 3, 4, 7, 11, 18, 29, 47, 76] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "5520d08438a738cbe880352124db2a4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "sequence and if it is \"l\", then return the Lucas sequence The sequences must be returned as an array --hints-- fib_luc should be a function js assert(typeof fib_luc === 'function'); fib_luc(2,10,\"f\") should return [1,1,2,3,5,8,13,21,34,55] js assert deepEqual(fib_luc(2, 10, 'f'), ans[0]); fib_luc(3,15,\"f\") should return [1,1,2,4,7,13,24,44,81,149,274,504,927,1705,3136] js assert deepEqual(fib_luc(3, 15, 'f'), ans[1]); fib_luc(4,15,\"f\") should return [1,1,2,4,8,15,29,56,108,208,401,773,1490,2872,5536] js assert deepEqual(fib_luc(4, 15, 'f'), ans[2]); fib_luc(2,10,\"l\") should return [ 2, 1, 3, 4, 7, 11, 18, 29, 47, 76] js assertdeepEqual(fib_luc(2, 10, 'l'), ans[3]);\nfib_luc(3,15,\"l\") should return [ 2, 1, 3, 6, 10, 19, 35, 64, 118, 217, 399, 734, 1350, 2483, 4567 ] js\nassert deepEqual(fib_luc(3, 15, 'l'), ans[4]);\nfib_luc(4,15,\"l\") should return [ 2, 1, 3, 6, 12, 22, 43, 83, 160, 308, 594, 1145, 2207, 4254, 8200 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "059756114b541545894c79dbc9542eaa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return [1,1,2,4,8,15,29,56,108,208,401,773,1490,2872,5536] js assert deepEqual(fib_luc(4, 15, 'f'), ans[2]); fib_luc(2,10,\"l\") should return [ 2, 1, 3, 4, 7, 11, 18, 29, 47, 76] js assertdeepEqual(fib_luc(2, 10, 'l'), ans[3]); fib_luc(3,15,\"l\") should return [ 2, 1, 3, 6, 10, 19, 35, 64, 118, 217, 399, 734, 1350, 2483, 4567 ] js assert deepEqual(fib_luc(3, 15, 'l'), ans[4]); fib_luc(4,15,\"l\") should return [ 2, 1, 3, 6, 12, 22, 43, 83, 160, 308, 594, 1145, 2207, 4254, 8200 ] js assertdeepEqual(fib_luc(4, 15, 'l'), ans[5]);\nfib_luc(5,15,\"l\") should return [ 2, 1, 3, 6, 12, 24, 46, 91, 179, 352, 692, 1360, 2674, 5257, 10335 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "e99770266f681380126c2c9130fa92b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "10, 'l'), ans[3]); fib_luc(3,15,\"l\") should return [ 2, 1, 3, 6, 10, 19, 35, 64, 118, 217, 399, 734, 1350, 2483, 4567 ] js assert deepEqual(fib_luc(3, 15, 'l'), ans[4]); fib_luc(4,15,\"l\") should return [ 2, 1, 3, 6, 12, 22, 43, 83, 160, 308, 594, 1145, 2207, 4254, 8200 ] js assertdeepEqual(fib_luc(4, 15, 'l'), ans[5]); fib_luc(5,15,\"l\") should return [ 2, 1, 3, 6, 12, 24, 46, 91, 179, 352, 692, 1360, 2674, 5257, 10335 ] js assertdeepEqual(fib_luc(5, 15, 'l'), ans[6]);\n--seed--\n--after-user-code--\njs\nconst ans = [[1,1,2,3,5,8,13,21,34,55],\n[1,1,2,4,7,13,24,44,81,149,274,504,927,1705,3136],\n[1,1,2,4,8,15,29,56,108,208,401,773,1490,2872,5536],\n[ 2, 1, 3, 4, 7, 11, 18, 29, 47, 76],\n[ 2, 1, 3, 6, 10, 19, 35, 64, 118, 217, 399, 734, 1350, 2483, 4567 ],\n[ 2, 1, 3, 6, 12, 22, 43, 83, 160, 308, 594, 1145, 2207, 4254, 8200 ],\n[ 2, 1, 3, 6, 12, 24, 46, 91, 179, 352, 692, 1360, 2674, 5257, 10335 ]];\n--seed-contents--\n```js\nfunction fib_luc(n, len, w) {\n}\n```\n--solutions--\njs\nfunction fib_luc(n, len, w) {\nfunction nacci(a, n, len) {\nwhile (a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 591,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "d1e4f92ce092a89e77a6c5c075a684c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "47, 76], [ 2, 1, 3, 6, 10, 19, 35, 64, 118, 217, 399, 734, 1350, 2483, 4567 ], [ 2, 1, 3, 6, 12, 22, 43, 83, 160, 308, 594, 1145, 2207, 4254, 8200 ], [ 2, 1, 3, 6, 12, 24, 46, 91, 179, 352, 692, 1360, 2674, 5257, 10335 ]]; --seed-contents-- ```js function fib_luc(n, len, w) { } ``` --solutions-- js function fib_luc(n, len, w) { function nacci(a, n, len) { while (alength < len) {\nlet sum = 0;\nfor (let i = Math max(0, a length - n); i < a length; i++)\nsum += a[i];\na push(sum);\n}\nreturn a;\n}\nif(w==\"f\"){\nreturn nacci(nacci([1,1], n, n), n, len);\n}else{\nreturn nacci(nacci([2,1], n, n), n, len);\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\fibonacci-n-step-number-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "62b30f10a0ec7ede9f55bed83cf214fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\general-fizzbuzz.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e78\ntitle: General FizzBuzz\nchallengeType: 1\nforumTopicId: 302273\ndashedName: general-fizzbuzz\n--description--\nWrite a generalized version of FizzBuzz that works for any list of factors, along with their words This is basically a \"fizzbuzz\" implementation where the rules of the game are supplied to the user Create a function to implement this The function should take two parameters The first will be an array with the FizzBuzz rules For example: [ [3, \"Fizz\"] , [5, \"Buzz\"] ] This indicates that Fizz should be printed if the number is a multiple of 3 and Buzz if it is a multiple of 5 If it is a multiple of both then the strings should be concatenated in the order specified in the array In this case, FizzBuzz if the number is a multiple of 3 and 5 The second parameter is the number for which the function should return a string as stated above --hints--\ngenFizzBuzz should be a function js\nassert(typeof genFizzBuzz == 'function');\ngenFizzBuzz([[3, \"Fizz\"],[5, \"Buzz\"]], 6) should return a string js\nassert(\ntypeof genFizzBuzz(\n[\n[3, 'Fizz'],\n[5, 'Buzz']\n],\n6\n) == 'string'\n);\ngenFizzBuzz([[3, \"Fizz\"],[5, \"Buzz\"]], 6) should return \"Fizz\" js\nassert equal(\ngenFizzBuzz(\n[\n[3, 'Fizz'],\n[5, 'Buzz']\n],\n6\n),\n'Fizz'\n);\ngenFizzBuzz([[3, \"Fizz\"],[5, \"Buzz\"]], 10) should return \"Buzz\" js\nassert equal(\ngenFizzBuzz(\n[\n[3, 'Fizz'],\n[5, 'Buzz']\n],\n10\n),\n'Buzz'\n);\ngenFizzBuzz([[3, \"Buzz\"],[5, \"Fizz\"]], 12) should return \"Buzz\" js\nassert equal(\ngenFizzBuzz(\n[\n[3, 'Buzz'],\n[5, 'Fizz']\n],\n12\n),\n'Buzz'\n);\ngenFizzBuzz([[3, \"Buzz\"],[5, \"Fizz\"]], 13) should return \"13\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\general-fizzbuzz.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6ef1130f114e3c6298c717acc86a53fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\general-fizzbuzz.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": ") == 'string' ); genFizzBuzz([[3, \"Fizz\"],[5, \"Buzz\"]], 6) should return \"Fizz\" js assert equal( genFizzBuzz( [ [3, 'Fizz'], [5, 'Buzz'] ], 6 ), 'Fizz' ); genFizzBuzz([[3, \"Fizz\"],[5, \"Buzz\"]], 10) should return \"Buzz\" js assert equal( genFizzBuzz( [ [3, 'Fizz'], [5, 'Buzz'] ], 10 ), 'Buzz' ); genFizzBuzz([[3, \"Buzz\"],[5, \"Fizz\"]], 12) should return \"Buzz\" js assert equal( genFizzBuzz( [ [3, 'Buzz'], [5, 'Fizz'] ], 12 ), 'Buzz' ); genFizzBuzz([[3, \"Buzz\"],[5, \"Fizz\"]], 13) should return \"13\" js assertequal(\ngenFizzBuzz(\n[\n[3, 'Buzz'],\n[5, 'Fizz']\n],\n13\n),\n'13'\n);\ngenFizzBuzz([[3, \"Buzz\"],[5, \"Fizz\"]], 15) should return \"BuzzFizz\" js\nassert equal(\ngenFizzBuzz(\n[\n[3, 'Buzz'],\n[5, 'Fizz']\n],\n15\n),\n'BuzzFizz'\n);\ngenFizzBuzz([[3, \"Fizz\"],[5, \"Buzz\"]], 15) should return \"FizzBuzz\" js\nassert equal(\ngenFizzBuzz(\n[\n[3, 'Fizz'],\n[5, 'Buzz']\n],\n15\n),\n'FizzBuzz'\n);\ngenFizzBuzz([[3, \"Fizz\"],[5, \"Buzz\"],[7, \"Baxx\"]], 105) should return \"FizzBuzzBaxx\" js\nassert equal(\ngenFizzBuzz(\n[\n[3, 'Fizz'],\n[5, 'Buzz'],\n[7, 'Baxx']\n],\n105\n),\n'FizzBuzzBaxx'\n);\n--seed--\n--seed-contents--\n```js\nfunction genFizzBuzz(rules, num) {\n}\n```\n--solutions--\n```js\nfunction genFizzBuzz(rules, num) {\nlet res='';\nrules forEach(function (e) {\nif(num % e[0] == 0)\nres+=e[1];\n})\nif(res==''){\nres=num toString();\n}\nreturn res;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\general-fizzbuzz.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a5f6ce0ef966fef652375bd886000828",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generate-lower-case-ascii-alphabet.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e7a\ntitle: Generate lower case ASCII alphabet\nchallengeType: 1\nforumTopicId: 302274\ndashedName: generate-lower-case-ascii-alphabet\n--description--\nWrite a function to generate an array of lower case ASCII characters for a given range For example, given the range ['a', 'd'], the function should return ['a', 'b', 'c', 'd'] --hints--\nlascii should be a function js\nassert(typeof lascii == 'function');\nlascii(\"a\",\"d\") should return an array js\nassert(Array isArray(lascii('a', 'd')));\nlascii('a','d') should return [ 'a', 'b', 'c', 'd' ] js\nassert deepEqual(lascii('a', 'd'), results[0]);\nlascii('c','i') should return [ 'c', 'd', 'e', 'f', 'g', 'h', 'i' ] js\nassert deepEqual(lascii('c', 'i'), results[1]);\nlascii('m','q') should return [ 'm', 'n', 'o', 'p', 'q' ] js\nassert deepEqual(lascii('m', 'q'), results[2]);\nlascii('k','n') should return [ 'k', 'l', 'm', 'n' ] js\nassert deepEqual(lascii('k', 'n'), results[3]);\nlascii('t','z') should return [ 't', 'u', 'v', 'w', 'x', 'y', 'z' ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1797,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generate-lower-case-ascii-alphabet.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3c2eb9cbc618017c0383b8825e975175",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generate-lower-case-ascii-alphabet.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "isArray(lascii('a', 'd'))); lascii('a','d') should return [ 'a', 'b', 'c', 'd' ] js assert deepEqual(lascii('a', 'd'), results[0]); lascii('c','i') should return [ 'c', 'd', 'e', 'f', 'g', 'h', 'i' ] js assert deepEqual(lascii('c', 'i'), results[1]); lascii('m','q') should return [ 'm', 'n', 'o', 'p', 'q' ] js assert deepEqual(lascii('m', 'q'), results[2]); lascii('k','n') should return [ 'k', 'l', 'm', 'n' ] js assert deepEqual(lascii('k', 'n'), results[3]); lascii('t','z') should return [ 't', 'u', 'v', 'w', 'x', 'y', 'z' ] js assertdeepEqual(lascii('t', 'z'), results[4]);\n--seed--\n--after-user-code--\njs\nlet results=[\n[ 'a', 'b', 'c', 'd' ],\n[ 'c', 'd', 'e', 'f', 'g', 'h', 'i' ],\n[ 'm', 'n', 'o', 'p', 'q' ],\n[ 'k', 'l', 'm', 'n' ],\n[ 't', 'u', 'v', 'w', 'x', 'y', 'z' ]\n]\n--seed-contents--\n```js\nfunction lascii(cFrom, cTo) {\n}\n```\n--solutions--\n```js\nfunction lascii(cFrom, cTo) {\nfunction cRange(cFrom, cTo) {\nvar iStart = cFrom charCodeAt(0);\nreturn Array apply(\nnull, Array(cTo charCodeAt(0) - iStart + 1)\n) map(function (_, i) {\nreturn String fromCharCode(iStart + i);\n});\n}\nreturn cRange(cFrom, cTo);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1797,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generate-lower-case-ascii-alphabet.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ff8135ea1fcc1afb523a032ec9caf237",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generator-exponential.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e7b\ntitle: Generator/Exponential\nchallengeType: 1\nforumTopicId: 302275\ndashedName: generatorexponential\n--description--\nA generator is an executable entity (like a function or procedure) that contains code that yields a sequence of values, one at a time, so that each time you call the generator, the next value in the sequence is provided Generators are often built on top of coroutines or objects so that the internal state of the object is handled \"naturally\" Generators are often used in situations where a sequence is potentially infinite, and where it is possible to construct the next value of the sequence with only minimal state --instructions--\nWrite a function that uses generators to generate squares and cubes Create a new generator that filters all cubes from the generator of squares The function should return the \\( n^{th} \\) value of the filtered generator For example for \\(n=7\\), the function should return 81 as the sequence would be 4, 9, 16, 25, 36, 49, 81 Here 64 is filtered out, as it is a cube --hints--\nexponentialGenerator should be a function js\nassert(typeof exponentialGenerator == 'function');\nexponentialGenerator() should return a number js\nassert(typeof exponentialGenerator(10) == 'number');\nexponentialGenerator(10) should return 144 js\nassert equal(exponentialGenerator(10), 144);\nexponentialGenerator(12) should return 196 js\nassert equal(exponentialGenerator(12), 196);\nexponentialGenerator(14) should return 256 js\nassert equal(exponentialGenerator(14), 256);\nexponentialGenerator(20) should return 484 js\nassert equal(exponentialGenerator(20), 484);\nexponentialGenerator(25) should return 784 js\nassert equal(exponentialGenerator(25), 784);\n--seed--\n--seed-contents--\n```js\nfunction exponentialGenerator(n) {\n}\n```\n--solutions--\n```js\nfunction exponentialGenerator(n){\nfunction* PowersGenerator(m) {\nvar n=0;\nwhile(1) {\nyield Math pow(n, m);\nn += 1;\n}\n}\nfunction* FilteredGenerator(g, f){\nvar value = g next() value;\nvar filter = f next()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2704,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generator-exponential.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7a62b5c1efd69c1ba213025867bb6fd8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generator-exponential.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "equal(exponentialGenerator(10), 144); exponentialGenerator(12) should return 196 js assert equal(exponentialGenerator(12), 196); exponentialGenerator(14) should return 256 js assert equal(exponentialGenerator(14), 256); exponentialGenerator(20) should return 484 js assert equal(exponentialGenerator(20), 484); exponentialGenerator(25) should return 784 js assert equal(exponentialGenerator(25), 784); --seed-- --seed-contents-- ```js function exponentialGenerator(n) { } ``` --solutions-- ```js function exponentialGenerator(n){ function* PowersGenerator(m) { var n=0; while(1) { yield Math pow(n, m); n += 1; } } function* FilteredGenerator(g, f){ var value = g next() value; var filter = f next()value;\nwhile(1) {\nif( value < filter ) {\nyield value;\nvalue = g next() value;\n} else if ( value > filter ) {\nfilter = f next() value;\n} else {\nvalue = g next() value;\nfilter = f next() value;\n}\n}\n}\nvar squares = PowersGenerator(2);\nvar cubes = PowersGenerator(3);\nvar filtered = FilteredGenerator(squares, cubes);\nvar curr=0;\nfor(var i=0;i<n;i++) curr=filtered next();\nreturn curr value;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2704,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\generator-exponential.md",
      "source_type": "git_repo"
    },
    "token_count": 289,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fd504de5a75e4063988f6973855a736a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e77\ntitle: Gaussian elimination\nchallengeType: 1\nforumTopicId: 302272\ndashedName: gaussian-elimination\n--description--\nWrite a function to solve \\(Ax = b\\) using Gaussian elimination then backwards substitution \\(A\\) being an \\(n \\times n\\) matrix Also, \\(x\\) and \\(b\\) are \\(n\\) by 1 vectors To improve accuracy, please use partial pivoting and scaling --hints--\ngaussianElimination should be a function js\nassert(typeof gaussianElimination == 'function');\ngaussianElimination([[1,1],[1,-1]], [5,1]) should return an array js\nassert(\nArray isArray(\ngaussianElimination(\n[\n[1, 1],\n[1, -1]\n],\n[5, 1]\n)\n)\n);\ngaussianElimination([[1,1],[1,-1]], [5,1]) should return [ 3, 2 ] js\nassert deepEqual(\ngaussianElimination(\n[\n[1, 1],\n[1, -1]\n],\n[5, 1]\n),\n[3, 2]\n);\ngaussianElimination([[2,3],[2,1]] , [8,4]) should return [ 1, 2 ] js\nassert deepEqual(\ngaussianElimination(\n[\n[2, 3],\n[2, 1]\n],\n[8, 4]\n),\n[1, 2]\n);\ngaussianElimination([[1,3],[5,-2]], [14,19]) should return [ 5, 3 ] js\nassert deepEqual(\ngaussianElimination(\n[\n[1, 3],\n[5, -2]\n],\n[14, 19]\n),\n[5, 3]\n);\ngaussianElimination([[1,1],[5,-1]] , [10,14]) should return [ 4, 6 ] js\nassert deepEqual(\ngaussianElimination(\n[\n[1, 1],\n[5, -1]\n],\n[10, 14]\n),\n[4, 6]\n);\ngaussianElimination([[1,2,3],[4,5,6],[7,8,8]] , [6,15,23]) should return [ 1, 1, 1 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "148ee913f6dc42bbab98caac55487d41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert deepEqual( gaussianElimination( [ [2, 3], [2, 1] ], [8, 4] ), [1, 2] ); gaussianElimination([[1,3],[5,-2]], [14,19]) should return [ 5, 3 ] js assert deepEqual( gaussianElimination( [ [1, 3], [5, -2] ], [14, 19] ), [5, 3] ); gaussianElimination([[1,1],[5,-1]] , [10,14]) should return [ 4, 6 ] js assert deepEqual( gaussianElimination( [ [1, 1], [5, -1] ], [10, 14] ), [4, 6] ); gaussianElimination([[1,2,3],[4,5,6],[7,8,8]] , [6,15,23]) should return [ 1, 1, 1 ] js assertdeepEqual(\ngaussianElimination(\n[\n[1, 2, 3],\n[4, 5, 6],\n[7, 8, 8]\n],\n[6, 15, 23]\n),\n[1, 1, 1]\n);\n--seed--\n--seed-contents--\n```js\nfunction gaussianElimination(A,b) {\n}\n```\n--solutions--\n```js\nfunction gaussianElimination(A, b) {\n// Lower Upper Decomposition\nfunction ludcmp(A) {\n// A is a matrix that we want to decompose into Lower and Upper matrices var d = true\nvar n = A length\nvar idx = new Array(n) // Output vector with row permutations from partial pivoting\nvar vv = new Array(n) // Scaling information\nfor (var i=0; i<n; i++) {\nvar max = 0\nfor (var j=0; j<n; j++) {\nvar temp = Math abs(A[i][j])\nif (temp > max) max = temp\n}\nif (max == 0) return // Singular Matrix vv[i] = 1 / max // Scaling\n}\nvar Acpy = new Array(n)\nfor (var i=0; i<n; i++) {\nvar Ai = A[i]\nlet Acpyi = new Array(Ai length)\nfor (j=0; j<Ai",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "89b95e94703bcd70683e4800a318dce7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "vv = new Array(n) // Scaling information for (var i=0; i<n; i++) { var max = 0 for (var j=0; j<n; j++) { var temp = Math abs(A[i][j]) if (temp > max) max = temp } if (max == 0) return // Singular Matrix vv[i] = 1 / max // Scaling } var Acpy = new Array(n) for (var i=0; i<n; i++) { var Ai = A[i] let Acpyi = new Array(Ai length) for (j=0; j<Ailength; j+=1) Acpyi[j] = Ai[j]\nAcpy[i] = Acpyi\n}\nA = Acpy\nvar tiny = 1e-20 // in case pivot element is zero\nfor (var i=0; ; i++) {\nfor (var j=0; j<i; j++) {\nvar sum = A[j][i]\nfor (var k=0; k<j; k++) sum -= A[j][k] * A[k][i];\nA[j][i] = sum\n}\nvar jmax = 0\nvar max = 0;\nfor (var j=i; j<n; j++) {\nvar sum = A[j][i]\nfor (var k=0; k<i; k++) sum -= A[j][k] * A[k][i];\nA[j][i] = sum\nvar temp = vv[j] * Math abs(sum)\nif (temp >= max) {\nmax = temp\njmax = j\n}\n}\nif (i <= jmax) {\nfor (var j=0; j<n; j++) {\nvar temp = A[jmax][j]\nA[jmax][j] = A[i][j]\nA[i][j] = temp\n}\nd =",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "fd47f941a4ff1fb0659ca0657e32b84b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} var jmax = 0 var max = 0; for (var j=i; j<n; j++) { var sum = A[j][i] for (var k=0; k<i; k++) sum -= A[j][k] * A[k][i]; A[j][i] = sum var temp = vv[j] * Math abs(sum) if (temp >= max) { max = temp jmax = j } } if (i <= jmax) { for (var j=0; j<n; j++) { var temp = A[jmax][j] A[jmax][j] = A[i][j] A[i][j] = temp } d =d;\nvv[jmax] = vv[i]\n}\nidx[i] = jmax;\nif (i == n-1) break;\nvar temp = A[i][i]\nif (temp == 0) A[i][i] = temp = tiny\ntemp = 1 / temp\nfor (var j=i+1; j<n; j++) A[j][i] *= temp\n}\nreturn {A:A, idx:idx, d:d}\n}\n// Lower Upper Back Substitution\nfunction lubksb(lu, b) {\n// solves the set of n linear equations A*x = b // lu is the object containing A, idx and d as determined by the routine ludcmp var A = lu A\nvar idx = lu idx\nvar n = idx length\nvar bcpy = new Array(n)\nfor (var i=0; i<b",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c726bd6d970f07a1a55a19afb011c68d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "/ temp for (var j=i+1; j<n; j++) A[j][i] *= temp } return {A:A, idx:idx, d:d} } // Lower Upper Back Substitution function lubksb(lu, b) { // solves the set of n linear equations A*x = b // lu is the object containing A, idx and d as determined by the routine ludcmp var A = lu A var idx = lu idx var n = idx length var bcpy = new Array(n) for (var i=0; i<blength; i+=1) bcpy[i] = b[i]\nb = bcpy\nfor (var ii=-1, i=0; i<n; i++) {\nvar ix = idx[i]\nvar sum = b[ix]\nb[ix] = b[i]\nif (ii > -1)\nfor (var j=ii; j<i; j++) sum -= A[i][j] * b[j]\nelse if (sum)\nii = i\nb[i] = sum\n}\nfor (var i=n-1; i>=0; i--) {\nvar sum = b[i]\nfor (var j=i+1; j<n; j++) sum -= A[i][j] * b[j]\nb[i] = sum / A[i][i]\n}\nreturn b // solution vector x\n}\nvar lu = ludcmp(A)\nif (lu === undefined) return // Singular Matrix return lubksb(lu, b)\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gaussian-elimination.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "dfdee864d43581129e5ed9d3e672bdb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-common-divisor.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e82\ntitle: Greatest common divisor\nchallengeType: 1\nforumTopicId: 302277\ndashedName: greatest-common-divisor\n--description--\nWrite a function that returns the greatest common divisor of two integers.\n--hints--\ngcd should be a function.\njs\nassert(typeof gcd == 'function');\ngcd(24,36) should return a number.\njs\nassert(typeof gcd(24, 36) == 'number');\ngcd(24,36) should return 12.\njs\nassert.equal(gcd(24, 36), 12);\ngcd(30,48) should return 6.\njs\nassert.equal(gcd(30, 48), 6);\ngcd(10,15) should return 5.\njs\nassert.equal(gcd(10, 15), 5);\ngcd(100,25) should return 25.\njs\nassert.equal(gcd(100, 25), 25);\ngcd(13,250) should return 1.\njs\nassert.equal(gcd(13, 250), 1);\ngcd(1300,250) should return 50.\njs\nassert.equal(gcd(1300, 250), 50);\n--seed--\n--seed-contents--\n```js\nfunction gcd(a, b) {\n}\n```\n--solutions--\njs\nfunction gcd(a, b) {\nreturn b==0 ? Math.abs(a):gcd(b, a % b);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-common-divisor.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "274cb211a172c76f6ef38d54ed1b0d71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\happy-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad1\ntitle: Happy numbers\nchallengeType: 1\nforumTopicId: 302280\ndashedName: happy-numbers\n--description--\nA happy number is defined by the following process:\nStarting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers, while those that do not end in 1 are unhappy numbers.\n--instructions--\nImplement a function that returns true if the number is happy, or false if not.\n--hints--\nhappy should be a function.\njs\nassert(typeof happy === 'function');\nhappy(1) should return a boolean.\njs\nassert(typeof happy(1) === 'boolean');\nhappy(1) should return true.\njs\nassert(happy(1));\nhappy(2) should return false.\njs\nassert(!happy(2));\nhappy(7) should return true.\njs\nassert(happy(7));\nhappy(10) should return true.\njs\nassert(happy(10));\nhappy(13) should return true.\njs\nassert(happy(13));\nhappy(19) should return true.\njs\nassert(happy(19));\nhappy(23) should return true.\njs\nassert(happy(23));\nhappy(28) should return true.\njs\nassert(happy(28));\nhappy(31) should return true.\njs\nassert(happy(31));\nhappy(32) should return true.\njs\nassert(happy(32));\nhappy(33) should return false.\njs\nassert(!happy(33));\n--seed--\n--seed-contents--\n```js\nfunction happy(number) {\n}\n```\n--solutions--\n```js\nfunction happy (number) {\nlet m;\nlet digit;\nconst cycle = [];\nwhile (number !== 1 && cycle[number] !== true) {\ncycle[number] = true;\nm = 0;\nwhile (number > 0) {\ndigit = number % 10;\nm += Math.pow(digit, 2);\nnumber = (number - digit) / 10;\n}\nnumber = m;\n}\nreturn (number === 1);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\happy-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d35b37517b1ceaa69c0a1cde28ec78bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gray-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e80\ntitle: Gray code\nchallengeType: 1\nforumTopicId: 302276\ndashedName: gray-code\n--description--\nGray code is a form of binary encoding where transitions between consecutive numbers differ by only one bit This is a useful encoding for reducing hardware data hazards with values that change rapidly and/or connect to slower hardware as inputs It is also useful for generating inputs for Karnaugh maps in order from left to right or top to bottom --instructions--\nCreate a function to encode a number to and decode a number from Gray code The function should will have 2 parameters The first would be a boolean The function should encode for true and decode for false The second parameter would be the number to be encoded/decoded Display the normal binary representations, Gray code representations, and decoded Gray code values for all 5-bit binary numbers (0-31 inclusive, leading 0's not necessary) There are many possible Gray codes The following encodes what is called \"binary reflected Gray code \"\nEncoding (MSB is bit 0, b is binary, g is Gray code):\nif b[i-1] = 1\ng[i] = not b[i]\nelse\ng[i] = b[i]\nOr:\ng = b xor (b logically right shifted 1 time)\nDecoding (MSB is bit 0, b is binary, g is Gray code):\nb[0] = g[0]\nfor other bits:\nb[i] = g[i] xor b[i-1]\n--hints--\ngray should be a function js\nassert(typeof gray == 'function');\ngray(true,177) should return a number js\nassert(typeof gray(true, 177) == 'number');\ngray(true,177) should return 233 js\nassert equal(gray(true, 177), 233);\ngray(true,425) should return 381 js\nassert equal(gray(true, 425), 381);\ngray(true,870) should return 725 js\nassert equal(gray(true, 870), 725);\ngray(false,233) should return 177 js\nassert equal(gray(false, 233), 177);\ngray(false,381) should return 425 js\nassert equal(gray(false, 381), 425);\ngray(false,725) should return 870 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2367,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gray-code.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cbffbdd32974863396420cf30c8b57af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gray-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "g[i] xor b[i-1] --hints-- gray should be a function js assert(typeof gray == 'function'); gray(true,177) should return a number js assert(typeof gray(true, 177) == 'number'); gray(true,177) should return 233 js assert equal(gray(true, 177), 233); gray(true,425) should return 381 js assert equal(gray(true, 425), 381); gray(true,870) should return 725 js assert equal(gray(true, 870), 725); gray(false,233) should return 177 js assert equal(gray(false, 233), 177); gray(false,381) should return 425 js assert equal(gray(false, 381), 425); gray(false,725) should return 870 js assertequal(gray(false, 725), 870);\n--seed--\n--seed-contents--\n```js\nfunction gray(enc, number) {\n}\n```\n--solutions--\n```js\nfunction gray(enc, number){\nif(enc){\nreturn number ^ (number >> 1);\n}else{\nlet n = number;\nwhile (number >>= 1) {\nn ^= number;\n}\nreturn n;\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2367,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\gray-code.md",
      "source_type": "git_repo"
    },
    "token_count": 245,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "aae3f907ffa782962fd1cfeabe497d39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-subsequential-sum.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7e84\ntitle: Greatest subsequential sum\nchallengeType: 1\nforumTopicId: 302278\ndashedName: greatest-subsequential-sum\n--description--\nGiven a sequence of integers, find a continuous subsequence which maximizes the sum of its elements, that is, the elements of no other single subsequence add up to a value larger than this one An empty subsequence is considered to have the sum of \\( 0 \\); thus if all elements are negative, the result must be the empty sequence --hints--\nmaximumSubsequence should be a function js\nassert(typeof maximumSubsequence == 'function');\nmaximumSubsequence([ 1, 2, -1, 3, 10, -10 ]) should return an array js\nassert(Array isArray(maximumSubsequence([1, 2, -1, 3, 10, -10])));\nmaximumSubsequence([ 1, 2, -1, 3, 10, -10 ]) should return [ 1, 2, -1, 3, 10 ] js\nassert deepEqual(maximumSubsequence([1, 2, -1, 3, 10, -10]), [1, 2, -1, 3, 10]);\nmaximumSubsequence([ 0, 8, 10, -2, -4, -1, -5, -3 ]) should return [ 0, 8, 10 ] js\nassert deepEqual(maximumSubsequence([0, 8, 10, -2, -4, -1, -5, -3]), [\n0,\n8,\n10\n]);\nmaximumSubsequence([ 9, 9, -10, 1 ]) should return [ 9, 9 ] js\nassert deepEqual(maximumSubsequence([9, 9, -10, 1]), [9, 9]);\nmaximumSubsequence([ 7, 1, -5, -3, -8, 1 ]) should return [ 7, 1 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2530,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-subsequential-sum.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "079ea02f3be606c595668df71b380bea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-subsequential-sum.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3, 10, -10]), [1, 2, -1, 3, 10]); maximumSubsequence([ 0, 8, 10, -2, -4, -1, -5, -3 ]) should return [ 0, 8, 10 ] js assert deepEqual(maximumSubsequence([0, 8, 10, -2, -4, -1, -5, -3]), [ 0, 8, 10 ]); maximumSubsequence([ 9, 9, -10, 1 ]) should return [ 9, 9 ] js assert deepEqual(maximumSubsequence([9, 9, -10, 1]), [9, 9]); maximumSubsequence([ 7, 1, -5, -3, -8, 1 ]) should return [ 7, 1 ] js assertdeepEqual(maximumSubsequence([7, 1, -5, -3, -8, 1]), [7, 1]);\nmaximumSubsequence([ -3, 6, -1, 4, -4, -6 ]) should return [ 6, -1, 4 ] js\nassert deepEqual(maximumSubsequence([-3, 6, -1, 4, -4, -6]), [6, -1, 4]);\nmaximumSubsequence([ -1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1 ]) should return [ 3, 5, 6, -2, -1, 4 ] js\nassert deepEqual(maximumSubsequence([-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1]), [\n3,\n5,\n6,\n-2,\n-1,\n4\n]);\n--seed--\n--seed-contents--\n```js\nfunction maximumSubsequence(population) {\n}\n```\n--solutions--\n```js\nfunction maximumSubsequence(population) {\nfunction sumValues(arr) {\nvar result = 0;\nfor (var i = 0, len = arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2530,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-subsequential-sum.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "283389beabb26e507d9c110c36739f8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-subsequential-sum.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "-6]), [6, -1, 4]); maximumSubsequence([ -1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1 ]) should return [ 3, 5, 6, -2, -1, 4 ] js assert deepEqual(maximumSubsequence([-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1]), [ 3, 5, 6, -2, -1, 4 ]); --seed-- --seed-contents-- ```js function maximumSubsequence(population) { } ``` --solutions-- ```js function maximumSubsequence(population) { function sumValues(arr) { var result = 0; for (var i = 0, len = arrlength; i < len; i++) {\nresult += arr[i];\n}\nreturn result;\n}\nvar greatest;\nvar maxValue = 0;\nfor (var i = 0, len = population length; i < len; i++) {\nfor (var j = i; j <= len; j++) {\nvar subsequence = population slice(i, j);\nvar value = sumValues(subsequence);\nif (value > maxValue) {\nmaxValue = value;\ngreatest = subsequence;\n};\n}\n}\nreturn greatest;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2530,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\greatest-subsequential-sum.md",
      "source_type": "git_repo"
    },
    "token_count": 293,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a300d99f77f7df34e6c8e858b7986527",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hailstone-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 595608ff8bcd7a50bd490181\ntitle: Hailstone sequence\nchallengeType: 1\nforumTopicId: 302279\ndashedName: hailstone-sequence\n--description--\nThe Hailstone sequence of numbers can be generated from a starting positive integer, n by:\nIf n is 1 then the sequence ends\nIf n is even then the next n of the sequence = n/2\nIf n is odd then the next n of the sequence = (3 * n) + 1\nThe (unproven) Collatz conjecture is that the hailstone sequence for any starting number always terminates The hailstone sequence is also known as hailstone numbers (because the values are usually subject to multiple descents and ascents like hailstones in a cloud), or as the Collatz sequence --instructions--\nCreate a routine to generate the hailstone sequence for a number\nYour function should return an array with the number less than limit which has the longest hailstone sequence and that sequence's length (But don't show the actual sequence )\n--hints--\nhailstoneSequence should be a function js\nassert(typeof hailstoneSequence === 'function');\nhailstoneSequence(30) should return an array js\nassert(Array isArray(hailstoneSequence(30)));\nhailstoneSequence(30) should return [27, 112] js\nassert deepEqual(hailstoneSequence(30), [27, 112]);\nhailstoneSequence(50000) should return [35655, 324] js\nassert deepEqual(hailstoneSequence(50000), [35655, 324]);\nhailstoneSequence(100000) should return [77031, 351] js\nassert deepEqual(hailstoneSequence(100000), [77031, 351]);\n--seed--\n--seed-contents--\n```js\nfunction hailstoneSequence(limit) {\nconst res = [];\nreturn res;\n}\n```\n--solutions--\n```js\nfunction hailstoneSequence (limit) {\nfunction hailstone(n) {\nconst seq = [n];\nwhile (n > 1) {\nn = n % 2 3 * n + 1 : n / 2;\nseq push(n);\n}\nreturn seq;\n}\nlet n = 0;\nlet max = 0;\nfor (let i = limit; --i;) {\nconst seq = hailstone(i);\nconst sLen = seq",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2110,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hailstone-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "18c80a3f781ba7eaa753c41f14a317a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hailstone-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "351]); --seed-- --seed-contents-- ```js function hailstoneSequence(limit) { const res = []; return res; } ``` --solutions-- ```js function hailstoneSequence (limit) { function hailstone(n) { const seq = [n]; while (n > 1) { n = n % 2 3 * n + 1 : n / 2; seq push(n); } return seq; } let n = 0; let max = 0; for (let i = limit; --i;) { const seq = hailstone(i); const sLen = seqlength;\nif (sLen > max) {\nn = i;\nmax = sLen;\n}\n}\nreturn [n, max];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2110,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hailstone-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 155,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8f959254aa0b68555e6cef6aabd19f7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\harshad-or-niven-series.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 595668ca4cfe1af2fb9818d4\ntitle: Harshad or Niven series\nchallengeType: 1\nforumTopicId: 302281\ndashedName: harshad-or-niven-series\n--description--\nThe Harshad or Niven numbers are positive integers ≥ 1 that are divisible by the sum of their digits For example, 42 is a Harshad number as 42 is divisible by (4 + 2) without remainder Assume that the series is defined as the numbers in increasing order --instructions--\nImplement a function to generate successive members of the Harshad sequence Use it to return an array with ten members of the sequence, starting with first Harshad number greater than n --hints--\nisHarshadOrNiven should be a function js\nassert(typeof isHarshadOrNiven === 'function');\nisHarshadOrNiven(10) should return [12, 18, 20, 21, 24, 27, 30, 36, 40, 42]\njs\nassert deepEqual(isHarshadOrNiven(10), [12, 18, 20, 21, 24, 27, 30, 36, 40, 42]);\nisHarshadOrNiven(400) should return [402, 405, 407, 408, 410, 414, 420, 423, 432, 440]\njs\nassert deepEqual(isHarshadOrNiven(400), [402, 405, 407, 408, 410, 414, 420, 423, 432, 440]);\nisHarshadOrNiven(1000) should return [1002, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1020]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\harshad-or-niven-series.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f0d74ab9b1f2340a5baff29b959c5618",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\harshad-or-niven-series.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should be a function js assert(typeof isHarshadOrNiven === 'function'); isHarshadOrNiven(10) should return [12, 18, 20, 21, 24, 27, 30, 36, 40, 42] js assert deepEqual(isHarshadOrNiven(10), [12, 18, 20, 21, 24, 27, 30, 36, 40, 42]); isHarshadOrNiven(400) should return [402, 405, 407, 408, 410, 414, 420, 423, 432, 440] js assert deepEqual(isHarshadOrNiven(400), [402, 405, 407, 408, 410, 414, 420, 423, 432, 440]); isHarshadOrNiven(1000) should return [1002, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1020] js assertdeepEqual(isHarshadOrNiven(1000), [1002, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1020]);\n--seed--\n--seed-contents--\n```js\nfunction isHarshadOrNiven(n) {\nconst res = [];\nreturn res;\n}\n```\n--solutions--\n```js\nfunction isHarshadOrNiven(n) {\nfunction isHarshad(num) {\nlet s = 0;\nconst nStr = num toString();\nfor (let i = 0; i < nStr length; ++i) {\ns += parseInt(nStr charAt(i), 10);\n}\nreturn n % s === 0;\n}\nconst res = [];\nlet count = 0;\nwhile (count < 10) {\nn++;\nif (isHarshad(n)) {\ncount++;\nres push(n);\n}\n}\nreturn res;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\harshad-or-niven-series.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1b6cb522786eda569cae16410f0da06a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 595671d4d2cdc305f0d5b36f\ntitle: Hash from two arrays\nchallengeType: 1\nforumTopicId: 302283\ndashedName: hash-from-two-arrays\n--description--\nGiven two arrays, create a hash object where the elements from one array (the keys) are linked to the elements of the other (the values) Example:\njs\nconst firstArr = [1, 2, 3];\nconst secondArr = [\"a\", \"b\", \"c\"];\nconst hashObj = arrToObj(firstArr, secondArr);\nThe hash object created from the arrays above will be {1: \"a\", 2: \"b\", 3: \"c\"} --hints--\narrToObj should be a function js\nassert(typeof arrToObj === 'function');\narrToObj([1, 2, 3, 4, 5], [\"a\", \"b\", \"c\", \"d\", \"e\"]) should return { 1: \"a\", 2: \"b\", 3: \"c\", 4: \"d\", 5: \"e\" }\njs\nassert deepEqual(arrToObj( testCases[0]), res[0]);\narrToObj([1, 2, 3, 4, 5], [\"a\", \"b\", \"c\", \"d\"]) should return { 1: \"a\", 2: \"b\", 3: \"c\", 4: \"d\", 5: undefined }\njs\nassert deepEqual(arrToObj( testCases[1]), res[1]);\narrToObj([1, 2, 3], [\"a\", \"b\", \"c\", \"d\", \"e\"]) should return { 1: \"a\", 2: \"b\", 3: \"c\" }\njs\nassert deepEqual(arrToObj( testCases[2]), res[2]);\narrToObj([\"a\", \"b\", \"c\", \"d\", \"e\"], [1, 2, 3, 4, 5]) should return { \"a\": 1, \"b\": 2, \"c\": 3 , \"d\": 4, \"e\": 5 }\njs\nassert deepEqual(arrToObj(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "35ed3e1d97b599a74ddca106e202ee35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "4, 5], [\"a\", \"b\", \"c\", \"d\"]) should return { 1: \"a\", 2: \"b\", 3: \"c\", 4: \"d\", 5: undefined } js assert deepEqual(arrToObj( testCases[1]), res[1]); arrToObj([1, 2, 3], [\"a\", \"b\", \"c\", \"d\", \"e\"]) should return { 1: \"a\", 2: \"b\", 3: \"c\" } js assert deepEqual(arrToObj( testCases[2]), res[2]); arrToObj([\"a\", \"b\", \"c\", \"d\", \"e\"], [1, 2, 3, 4, 5]) should return { \"a\": 1, \"b\": 2, \"c\": 3 , \"d\": 4, \"e\": 5 } js assert deepEqual(arrToObj(testCases[3]), res[3]);\narrToObj([\"a\", \"b\", \"c\", \"d\", \"e\"], [1, 2, 3, 4]) should return { \"a\": 1, \"b\": 2, \"c\": 3 , \"d\": 4, \"e\": undefined }\njs\nassert deepEqual(arrToObj( testCases[4]), res[4]);\narrToObj([\"a\", \"b\", \"c\"], [1, 2, 3, 4, 5]) should return { \"a\": 1, \"b\": 2, \"c\": 3 }\njs\nassert deepEqual(arrToObj(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "621d8f0bb98f32e589b73855ff62e1cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"d\", \"e\"], [1, 2, 3, 4, 5]) should return { \"a\": 1, \"b\": 2, \"c\": 3 , \"d\": 4, \"e\": 5 } js assert deepEqual(arrToObj(testCases[3]), res[3]); arrToObj([\"a\", \"b\", \"c\", \"d\", \"e\"], [1, 2, 3, 4]) should return { \"a\": 1, \"b\": 2, \"c\": 3 , \"d\": 4, \"e\": undefined } js assert deepEqual(arrToObj( testCases[4]), res[4]); arrToObj([\"a\", \"b\", \"c\"], [1, 2, 3, 4, 5]) should return { \"a\": 1, \"b\": 2, \"c\": 3 } js assert deepEqual(arrToObj(testCases[5]), res[5]);\n--seed--\n--after-user-code--\n```js\nconst testCases = [\n[[1, 2, 3, 4, 5], ['a', 'b', 'c', 'd', 'e']],\n[[1, 2, 3, 4, 5], ['a', 'b', 'c', 'd']],\n[[1, 2, 3], ['a', 'b', 'c', 'd', 'e']],\n[['a', 'b', 'c', 'd', 'e'], [1, 2, 3, 4, 5]],\n[['a', 'b', 'c', 'd', 'e'], [1, 2, 3, 4]],\n[['a', 'b', 'c'], [1, 2, 3, 4, 5]]\n];\nconst res = [\n{ 1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e' },\n{ 1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: undefined },\n{ 1: 'a', 2: 'b', 3: 'c' },\n{ a: 1, b: 2, c: 3, d: 4, e: 5 },\n{ a: 1, b: 2, c: 3, d: 4, e: undefined },\n{ a: 1, b: 2, c: 3 }\n];\n```\n--seed-contents--\n```js\nfunction arrToObj (keys, vals) {\nreturn true;\n}\n```\n--solutions--\njs\nfunction arrToObj (keys, vals) {\nreturn keys",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 589,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "859dbd3c8324101fcb413a8dda6477d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'e' }, { 1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: undefined }, { 1: 'a', 2: 'b', 3: 'c' }, { a: 1, b: 2, c: 3, d: 4, e: 5 }, { a: 1, b: 2, c: 3, d: 4, e: undefined }, { a: 1, b: 2, c: 3 } ]; ``` --seed-contents-- ```js function arrToObj (keys, vals) { return true; } ``` --solutions-- js function arrToObj (keys, vals) { return keysreduce((map, key, index) => {\nmap[key] = vals[index];\nreturn map;\n}, {});\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-from-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "04c226a2ccd2435416e8c4d6051b320f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-figure-figure-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59622f89e4e137560018a40e\ntitle: Hofstadter Figure-Figure sequences\nchallengeType: 1\nforumTopicId: 302286\ndashedName: hofstadter-figure-figure-sequences\n--description--\nThe Hofstadter Figure-Figure sequences $R_n$ and $S_n$ are given by\n$R_1 = 1\\ ;\\ S_1 = 2 \\\\R_n = R_{n-1} + S_{n-1}, \\quad n>1 $\nSpecifically, the sequence $R_n$ contains the values\n1, 3, 7, 12, 18, and the sequence $S_n$ contains the values\n2, 4, 5, 6, 8, The sequence $R_n$ is defined by the recurrence relation $R_n = R_{n-1} + S_{n-1}$, while $S_n$ is defined as sequence of positive integers that are not included in the sequence $R_n$ --instructions--\nCreate two functions named ffr and ffs that return R(n) or S(n), respectively, for any index n Note that the Hofstadter Figure-Figure sequences are 1-indexed, with $R_1 = 1$ and $S_1 = 2$ No maximum value for n should be assumed References\nRosetta: Hofstadter Figure-Figure sequences --hints--\nffr should be a function js\nassert(typeof ffr === 'function');\nffs should be a function js\nassert(typeof ffs === 'function');\nffr should return integer js\nassert(Number isInteger(ffr(1)));\nffs should return integer js\nassert(Number isInteger(ffs(1)));\nffr(10) should return 69\njs\nassert equal(ffr(ffrParamRes[0][0]), ffrParamRes[0][1]);\nffr(50) should return 1509\njs\nassert equal(ffr(ffrParamRes[1][0]), ffrParamRes[1][1]);\nffr(100) should return 5764\njs\nassert equal(ffr(ffrParamRes[2][0]), ffrParamRes[2][1]);\nffr(1000) should return 526334\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2995,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-figure-figure-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ce05e99e7e75fc5649842923fb615425",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-figure-figure-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value for n should be assumed References Rosetta: Hofstadter Figure-Figure sequences --hints-- ffr should be a function js assert(typeof ffr === 'function'); ffs should be a function js assert(typeof ffs === 'function'); ffr should return integer js assert(Number isInteger(ffr(1))); ffs should return integer js assert(Number isInteger(ffs(1))); ffr(10) should return 69 js assert equal(ffr(ffrParamRes[0][0]), ffrParamRes[0][1]); ffr(50) should return 1509 js assert equal(ffr(ffrParamRes[1][0]), ffrParamRes[1][1]); ffr(100) should return 5764 js assert equal(ffr(ffrParamRes[2][0]), ffrParamRes[2][1]); ffr(1000) should return 526334 js assertequal(ffr(ffrParamRes[3][0]), ffrParamRes[3][1]);\nffs(10) should return 14\njs\nassert equal(ffs(ffsParamRes[0][0]), ffsParamRes[0][1]);\nffs(50) should return 59\njs\nassert equal(ffs(ffsParamRes[1][0]), ffsParamRes[1][1]);\nffs(100) should return 112\njs\nassert equal(ffs(ffsParamRes[2][0]), ffsParamRes[2][1]);\nffs(1000) should return 1041\njs\nassert equal(ffs(ffsParamRes[3][0]), ffsParamRes[3][1]);\n--seed--\n--after-user-code--\njs\nconst ffrParamRes = [[10, 69], [50, 1509], [100, 5764], [1000, 526334]];\nconst ffsParamRes = [[10, 14], [50, 59], [100, 112], [1000, 1041]];\n--seed-contents--\n```js\nfunction ffr(n) {\nreturn n;\n}\nfunction ffs(n) {\nreturn n;\n}\n```\n--solutions--\n```js\nconst R = [null, 1];\nconst S = [null, 2];\nfunction extendSequences (n) {\nlet current = Math max(R[R",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2995,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-figure-figure-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e7485d926b66e18a7c39d9d7d4a82597",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-figure-figure-sequences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return 112 js assert equal(ffs(ffsParamRes[2][0]), ffsParamRes[2][1]); ffs(1000) should return 1041 js assert equal(ffs(ffsParamRes[3][0]), ffsParamRes[3][1]); --seed-- --after-user-code-- js const ffrParamRes = [[10, 69], [50, 1509], [100, 5764], [1000, 526334]]; const ffsParamRes = [[10, 14], [50, 59], [100, 112], [1000, 1041]]; --seed-contents-- ```js function ffr(n) { return n; } function ffs(n) { return n; } ``` --solutions-- ```js const R = [null, 1]; const S = [null, 2]; function extendSequences (n) { let current = Math max(R[Rlength - 1], S[S length - 1]);\nlet i;\nwhile (R length <= n || S length <= n) {\ni = Math min(R length, S length) - 1;\ncurrent += 1;\nif (current === R[i] + S[i]) {\nR push(current);\n} else {\nS push(current);\n}\n}\n}\nfunction ffr (n) {\nextendSequences(n);\nreturn R[n];\n}\nfunction ffs (n) {\nextendSequences(n);\nreturn S[n];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2995,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-figure-figure-sequences.md",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7ac84c6d4483a4f5f5e848782e4d6bb1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5956795bc9e2c415eb244de1\ntitle: Hash join\nchallengeType: 1\nforumTopicId: 302284\ndashedName: hash-join\n--description--\nAn inner join is an operation that combines two data tables into one table, based on matching column values The simplest way of implementing this operation is the nested loop join algorithm, but a more scalable alternative is the hash join algorithm The \"hash join\" algorithm consists of two steps:\nHash phase: Create a multimap from one of the two tables, mapping from each join column value to all the rows that contain it The multimap must support hash-based lookup which scales better than a simple linear search, because that's the whole point of this algorithm Ideally we should create the multimap for the smaller table, thus minimizing its creation time and memory size Join phase: Scan the other table, and find matching rows by looking in the multimap created before In pseudo-code, the algorithm could be expressed as follows:\nlet A = the first input table (or ideally, the larger one)\nlet B = the second input table (or ideally, the smaller one)\nlet jA = the join column ID of table A\nlet jB = the join column ID of table B\nlet MB = a multimap for mapping from single values to multiple rows of table B (starts out empty)\nlet C = the output table (starts out empty)\nfor each row b in table B:\nplace b in multimap MB under key b(jB)\nfor each row a in table A:\nfor each row b in multimap MB under key a(jA):\nlet c = the concatenation of row a and row b\nplace row c in table C\n--instructions--\nImplement the \"hash join\" algorithm as a function and demonstrate that it passes the test-case listed below The function should accept two arrays of objects and return an array of combined objects Input\nA =\nAge\nName\n27\nJonah\n18\nAlan\n28\nGlory\n18\nPopeye\n28\nAlan\nB =\nCharacter\nNemesis\nJonah\nWhales\nJonah\nSpiders\nAlan\nGhosts\nAlan\nZombies\nGlory\nBuffy\njA =\nName (i e column 1)\njB =\nCharacter (i e",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "1bedc2ac5df55a1d86a4ae48bd103e10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "table C --instructions-- Implement the \"hash join\" algorithm as a function and demonstrate that it passes the test-case listed below The function should accept two arrays of objects and return an array of combined objects Input A = Age Name 27 Jonah 18 Alan 28 Glory 18 Popeye 28 Alan B = Character Nemesis Jonah Whales Jonah Spiders Alan Ghosts Alan Zombies Glory Buffy jA = Name (i e column 1) jB = Character (i ecolumn 0)\nOutput\n| A_age | A_name | B_character | B_nemesis |\n| ----- | ------ | ----------- | --------- |\n| 27    | Jonah  | Jonah       | Whales    |\n| 27    | Jonah  | Jonah       | Spiders   |\n| 18    | Alan   | Alan        | Ghosts    |\n| 18    | Alan   | Alan        | Zombies   |\n| 28    | Glory  | Glory       | Buffy     |\n| 28    | Alan   | Alan        | Ghosts    |\n| 28    | Alan   | Alan        | Zombies   |\nThe order of the rows in the output table is not significant --hints--\nhashJoin should be a function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "ea9b384424fc1d99af72664179151742",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Jonah | Whales | | 27 | Jonah | Jonah | Spiders | | 18 | Alan | Alan | Ghosts | | 18 | Alan | Alan | Zombies | | 28 | Glory | Glory | Buffy | | 28 | Alan | Alan | Ghosts | | 28 | Alan | Alan | Zombies | The order of the rows in the output table is not significant --hints-- hashJoin should be a functionjs\nassert(typeof hashJoin === 'function');\nhashJoin([{ age: 27, name: \"Jonah\" }, { age: 18, name: \"Alan\" }, { age: 28, name: \"Glory\" }, { age: 18, name: \"Popeye\" }, { age: 28, name: \"Alan\" }], [{ character: \"Jonah\", nemesis: \"Whales\" }, { character: \"Jonah\", nemesis: \"Spiders\" }, { character: \"Alan\", nemesis: \"Ghosts\" }, { character:\"Alan\", nemesis: \"Zombies\" }, { character: \"Glory\", nemesis: \"Buffy\" }, { character: \"Bob\", nemesis: \"foo\" }]) should return [{\"A_age\": 27,\"A_name\": \"Jonah\", \"B_character\": \"Jonah\", \"B_nemesis\": \"Whales\"}, {\"A_age\": 27,\"A_name\": \"Jonah\", \"B_character\": \"Jonah\", \"B_nemesis\": \"Spiders\"}, {\"A_age\": 18,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Ghosts\"}, {\"A_age\": 18,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Zombies\"}, {\"A_age\": 28,\"A_name\": \"Glory\", \"B_character\": \"Glory\", \"B_nemesis\": \"Buffy\"}, {\"A_age\": 28,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Ghosts\"}, {\"A_age\": 28,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Zombies\"}]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a279fbea8722265e498af8a923d2172f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ character: \"Alan\", nemesis: \"Ghosts\" }, { character:\"Alan\", nemesis: \"Zombies\" }, { character: \"Glory\", nemesis: \"Buffy\" }, { character: \"Bob\", nemesis: \"foo\" }]) should return [{\"A_age\": 27,\"A_name\": \"Jonah\", \"B_character\": \"Jonah\", \"B_nemesis\": \"Whales\"}, {\"A_age\": 27,\"A_name\": \"Jonah\", \"B_character\": \"Jonah\", \"B_nemesis\": \"Spiders\"}, {\"A_age\": 18,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Ghosts\"}, {\"A_age\": 18,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Zombies\"}, {\"A_age\": 28,\"A_name\": \"Glory\", \"B_character\": \"Glory\", \"B_nemesis\": \"Buffy\"}, {\"A_age\": 28,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Ghosts\"}, {\"A_age\": 28,\"A_name\": \"Alan\", \"B_character\": \"Alan\", \"B_nemesis\": \"Zombies\"}] js assertdeepEqual(hashJoin(hash1, hash2), res);\n--seed--\n--after-user-code--\n```js\nconst hash1 = [\n{ age: 27, name: 'Jonah' },\n{ age: 18, name: 'Alan' },\n{ age: 28, name: 'Glory' },\n{ age: 18, name: 'Popeye' },\n{ age: 28, name: 'Alan' }\n];\nconst hash2 = [\n{ character: 'Jonah', nemesis: 'Whales' },\n{ character: 'Jonah', nemesis: 'Spiders' },\n{ character: 'Alan', nemesis: 'Ghosts' },\n{ character: 'Alan', nemesis: 'Zombies' },\n{ character: 'Glory', nemesis: 'Buffy' },\n{ character: 'Bob', nemesis: 'foo' }\n];\nconst res = [\n{ A_age: 27, A_name: 'Jonah', B_character: 'Jonah', B_nemesis: 'Whales' },\n{ A_age: 27, A_name: 'Jonah', B_character: 'Jonah', B_nemesis: 'Spiders' },\n{ A_age: 18, A_name: 'Alan', B_character: 'Alan', B_nemesis: 'Ghosts' },\n{ A_age: 18, A_name: 'Alan', B_character: 'Alan', B_nemesis: 'Zombies' },\n{ A_age: 28, A_name: 'Glory', B_character: 'Glory', B_nemesis: 'Buffy' },\n{ A_age: 28, A_name: 'Alan', B_character: 'Alan', B_nemesis: 'Ghosts' },\n{ A_age: 28, A_name: 'Alan', B_character: 'Alan', B_nemesis: 'Zombies' }\n];\nconst bench1 = [{ name: 'u2v7v', num: 1 }, { name: 'n53c8', num: 10 }, { name: 'oysce', num: 9 }, { name: '0mto2s', num: 1 }, { name: 'vkh5id', num: 4 }, { name: '5od0cf', num: 8 }, { name: 'uuulue', num: 10 }, { name: '3rgsbi', num: 9 }, { name: 'kccv35r', num: 4 }, { name: '80un74', num: 9 }, { name: 'h4pp3', num: 6 }, { name: '51bit', num: 7 }, { name: 'j9ndf', num: 8 }, { name: 'vf3u1', num: 10 }, { name: 'g0bw0om', num: 10 }, { name: 'j031x', num: 7 }, { name: 'ij3asc', num: 9 }, { name: 'byv83y', num: 8 }, { name: 'bjzp4k', num: 4 }, { name: 'f3kbnm', num: 10 }];\nconst bench2 = [{ friend: 'o8b', num: 8 }, { friend: 'ye', num: 2 }, { friend: '32i', num: 5 }, { friend: 'uz', num: 3 }, { friend: 'a5k', num: 4 }, { friend: 'uad', num: 7 }, { friend: '3w5', num: 10 }, { friend: 'vw', num: 10 }, { friend: 'ah', num: 4 }, { friend: 'qv', num: 7 }, { friend: 'ozv', num: 2 }, { friend: '9ri', num: 10 }, { friend: '7nu', num: 4 }, { friend: 'w3', num: 9 }, { friend: 'tgp', num: 8 }, { friend: 'ibs', num: 1 }, { friend: 'ss7', num: 6 }, { friend: 'g44', num: 9 }, { friend: 'tab', num: 9 }, { friend: 'zem', num: 10 }];\n```\n--seed-contents--\n```js\nfunction hashJoin(hash1, hash2) {\nreturn [];\n}\n```\n--solutions--\n```js\nfunction hashJoin(hash1, hash2) {\nconst hJoin = (tblA, tblB, strJoin) => {\nconst [jA, jB] = strJoin",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
      "source_type": "git_repo"
    },
    "token_count": 1266,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c9ba28ad118ec16d0762f64bb7aaee18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'7nu', num: 4 }, { friend: 'w3', num: 9 }, { friend: 'tgp', num: 8 }, { friend: 'ibs', num: 1 }, { friend: 'ss7', num: 6 }, { friend: 'g44', num: 9 }, { friend: 'tab', num: 9 }, { friend: 'zem', num: 10 }]; ``` --seed-contents-- ```js function hashJoin(hash1, hash2) { return []; } ``` --solutions-- ```js function hashJoin(hash1, hash2) { const hJoin = (tblA, tblB, strJoin) => { const [jA, jB] = strJoinsplit('=');\nconst M = tblB reduce((a, x) => {\nconst id = x[jB];\nreturn (\na[id] a[id] push(x) : (a[id] = [x]),\na\n);\n}, {});\nreturn tblA reduce((a, x) => {\nconst match = M[x[jA]];\nreturn match (\na concat(match map(row => dictConcat(x, row)))\n) : a;\n}, []);\n};\nconst dictConcat = (dctA, dctB) => {\nconst ok = Object keys;\nreturn ok(dctB) reduce(\n(a, k) => (a[B_${k}] = dctB[k]) && a,\nok(dctA) reduce(\n(a, k) => (a[A_${k}] = dctA[k]) && a, {}\n)\n);\n};\nreturn hJoin(hash1, hash2, 'name=character');\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hash-join.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "5b7cb481f3b1ba2b9116825cee4ed4ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\i-before-e-except-after-c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7eb0\ntitle: I before E except after C\nchallengeType: 1\nforumTopicId: 302288\ndashedName: i-before-e-except-after-c\n--description--\n\"I before E, except after C\" is a general rule for English language spelling. If one is unsure whether a word is spelled with the digraph ei or ie, the rhyme suggests that the correct order is ie unless the preceding letter is c, in which case it may be ei.\nUsing the words provided, check if the two sub-clauses of the phrase are plausible individually:\n\"I before E when not preceded by C\".\n\"E before I when preceded by C\".\nIf both sub-phrases are plausible then the original phrase can be said to be plausible.\n--instructions--\nWrite a function that accepts a word and check if the word follows this rule. The function should return true if the word follows the rule and false if it does not.\n--hints--\nIBeforeExceptC should be a function.\njs\nassert(typeof IBeforeExceptC == 'function');\nIBeforeExceptC(\"receive\") should return a boolean.\njs\nassert(typeof IBeforeExceptC('receive') == 'boolean');\nIBeforeExceptC(\"receive\") should return true.\njs\nassert.equal(IBeforeExceptC('receive'), true);\nIBeforeExceptC(\"science\") should return false.\njs\nassert.equal(IBeforeExceptC('science'), false);\nIBeforeExceptC(\"imperceivable\") should return true.\njs\nassert.equal(IBeforeExceptC('imperceivable'), true);\nIBeforeExceptC(\"inconceivable\") should return true.\njs\nassert.equal(IBeforeExceptC('inconceivable'), true);\nIBeforeExceptC(\"insufficient\") should return false.\njs\nassert.equal(IBeforeExceptC('insufficient'), false);\nIBeforeExceptC(\"omniscient\") should return false.\njs\nassert.equal(IBeforeExceptC('omniscient'), false);\n--seed--\n--seed-contents--\n```js\nfunction IBeforeExceptC(word) {\n}\n```\n--solutions--\njs\nfunction IBeforeExceptC(word)\n{\nif(word.indexOf(\"c\")==-1 && word.indexOf(\"ie\")!=-1)\nreturn true;\nelse if(word.indexOf(\"cei\")!=-1)\nreturn true;\nreturn false;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2292,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\i-before-e-except-after-c.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6f362f9bb2fe69dd798830dfbd0727f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 595b98f8b5a2245e243aa831\ntitle: Heronian triangles\nchallengeType: 1\nforumTopicId: 302285\ndashedName: heronian-triangles\n--description--\nHero's formula for the area of a triangle given the length of its three sides a, b, and c is given by:\n$A = \\sqrt{s(s-a)(s-b)(s-c)},$\nwhere s is half the perimeter of the triangle; that is,\n$s=\\frac{a+b+c}{2} $\nHeronian triangles are triangles whose sides and area are all integers An example is the triangle with sides 3, 4, 5 whose area is 6 (and whose perimeter is 12) Note that any triangle whose sides are all an integer multiple of 3, 4, 5; such as 6, 8, 10, will also be a Heronian triangle Define a Primitive Heronian triangle as a Heronian triangle where the greatest common divisor\nof all three sides is 1 (unity) This will exclude, for example, triangle 6, 8, 10 --instructions--\nImplement a function based on Hero's formula that returns the first nth ordered triangles in an array of arrays --hints--\nheronianTriangle should be a function js\nassert(typeof heronianTriangle === 'function');\nheronianTriangle(10) should return [[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17]]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4971,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "3cec275a5a9af00d54a89d1ef31d3ee7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(unity) This will exclude, for example, triangle 6, 8, 10 --instructions-- Implement a function based on Hero's formula that returns the first nth ordered triangles in an array of arrays --hints-- heronianTriangle should be a function js assert(typeof heronianTriangle === 'function'); heronianTriangle(10) should return [[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17]] js assertdeepEqual(heronianTriangle(testCases[0]), res[0]);\nheronianTriangle(15) should return [[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15]],\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4971,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "77ffe23c42635000bfc01e9299971964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17]] js assertdeepEqual(heronianTriangle(testCases[0]), res[0]); heronianTriangle(15) should return [[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15]], js assertdeepEqual(heronianTriangle(testCases[1]), res[1]);\nheronianTriangle(20) should return [[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15], [10, 17, 21], [7, 24, 25], [8, 29, 35], [12, 17, 25], [4, 51, 53]],\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4971,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "64c709f8a55abf76973bf48d4689267e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "13, 20], [5, 29, 30], [13, 14, 15]], js assertdeepEqual(heronianTriangle(testCases[1]), res[1]); heronianTriangle(20) should return [[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15], [10, 17, 21], [7, 24, 25], [8, 29, 35], [12, 17, 25], [4, 51, 53]], js assertdeepEqual(heronianTriangle(testCases[2]), res[2]);\nheronianTriangle(25) should return [[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15], [10, 17, 21], [7, 24, 25], [8, 29, 35], [12, 17, 25], [4, 51, 53], [19, 20, 37],[16, 17, 17], [17, 17, 30], [16, 25, 39], [13, 20, 21]]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4971,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "8465d16cc7d8207150a686f82cf053ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15], [10, 17, 21], [7, 24, 25], [8, 29, 35], [12, 17, 25], [4, 51, 53], [19, 20, 37],[16, 17, 17], [17, 17, 30], [16, 25, 39], [13, 20, 21]] js assertdeepEqual(heronianTriangle(testCases[3]), res[3]);\n--seed--\n--after-user-code--\n```js\nconst testCases = [10, 15, 20, 25];\nconst res = [\n[[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17]],\n[[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15]],\n[[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15], [10, 17, 21], [7, 24, 25], [8, 29, 35], [12, 17, 25], [4, 51, 53]],\n[[3, 4, 5], [5, 5, 6], [5, 5, 8], [4, 13, 15], [5, 12, 13], [9, 10, 17], [3, 25, 26], [7, 15, 20], [10, 13, 13], [8, 15, 17], [13, 13, 24], [6, 25, 29], [11, 13, 20], [5, 29, 30], [13, 14, 15], [10, 17, 21], [7, 24, 25], [8, 29, 35], [12, 17, 25], [4, 51, 53], [19, 20, 37], [16, 17, 17], [17, 17, 30], [16, 25, 39], [13, 20, 21]]\n];\n```\n--seed-contents--\n```js\nfunction heronianTriangle(n) {\nreturn [];\n}\n```\n--solutions--\n```js\nfunction heronianTriangle(n) {\nconst list = [];\nconst result = [];\nlet j = 0;\nfor (let c = 1; c <= 200; c++) {\nfor (let b = 1; b <= c; b++) {\nfor (let a = 1; a <= b; a++) {\nif (gcd(gcd(a, b), c) === 1 && isHeron(heronArea(a, b, c))) {\nlist[j++] = new Array(a, b, c, heronArea(a, b, c));\n}\n}\n}\n}\nsort(list);\nfor (let i = 0; i < n; i++) {\nresult[i] = [list[i][0], list[i][1], list[i][2]];\n}\nreturn result;\nfunction heronArea(a, b, c) {\nconst s = (a + b + c) / 2;\nreturn Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4971,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
      "source_type": "git_repo"
    },
    "token_count": 1122,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c4773615febcc551ab90474b0a266da0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1; b <= c; b++) { for (let a = 1; a <= b; a++) { if (gcd(gcd(a, b), c) === 1 && isHeron(heronArea(a, b, c))) { list[j++] = new Array(a, b, c, heronArea(a, b, c)); } } } } sort(list); for (let i = 0; i < n; i++) { result[i] = [list[i][0], list[i][1], list[i][2]]; } return result; function heronArea(a, b, c) { const s = (a + b + c) / 2; return Mathsqrt(s * (s - a) * (s - b) * (s - c));\n}\nfunction isHeron(h) { return h % 1 === 0 && h > 0; }\nfunction gcd(a, b) {\nlet leftover = 1;\nlet dividend = a > b a : b;\nlet divisor = a > b b : a;\nwhile (leftover == 0) {\nleftover = dividend % divisor;\nif (leftover > 0) {\ndividend = divisor;\ndivisor = leftover;\n}\n}\nreturn divisor;\n}\nfunction sort(arg) {\nlet swapped = true;\nlet temp = [];\nwhile (swapped) {\nswapped = false;\nfor (let i = 1; i < arg length; i++) {\nif (arg[i][4] < arg[i - 1][4] || arg[i][4] === arg[i - 1][4] && arg[i][3] < arg[i - 1][3]) {\ntemp = arg[i];\narg[i] = arg[i - 1];\narg[i - 1] = temp;\nswapped = true;\n}\n}\n}\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4971,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\heronian-triangles.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "7be8d8b00ed52ea62106107442548b0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-q-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59637c4d89f6786115efd814\ntitle: Hofstadter Q sequence\nchallengeType: 1\nforumTopicId: 302287\ndashedName: hofstadter-q-sequence\n--description--\nThe Hofstadter Q sequence is defined as:\n$Q(1)=Q(2)=1, \\\\ Q(n)=Q\\big(n-Q(n-1)\\big)+Q\\big(n-Q(n-2)), \\quad n>2 $\nIt is defined like the Fibonacci sequence, but whereas the next term in the Fibonacci sequence is the sum of the previous two terms, in the Q sequence the previous two terms tell you how far to go back in the Q sequence to find the two numbers to sum to make the next term of the sequence --instructions--\nImplement the Hofstadter Q Sequence equation as a function The function should accept number, n, and return an integer --hints--\nhofstadterQ should be a function js\nassert(typeof hofstadterQ === 'function');\nhofstadterQ() should return integer\njs\nassert(Number isInteger(hofstadterQ(1000)));\nhofstadterQ(1000) should return 502\njs\nassert equal(hofstadterQ(testCase[0]), res[0]);\nhofstadterQ(1500) should return 755\njs\nassert equal(hofstadterQ(testCase[1]), res[1]);\nhofstadterQ(2000) should return 1005\njs\nassert equal(hofstadterQ(testCase[2]), res[2]);\nhofstadterQ(2500) should return 1261\njs\nassert equal(hofstadterQ(testCase[3]), res[3]);\n--seed--\n--after-user-code--\njs\nconst testCase = [1000, 1500, 2000, 2500];\nconst res = [502, 755, 1005, 1261];\n--seed-contents--\n```js\nfunction hofstadterQ(n) {\nreturn n;\n}\n```\n--solutions--\njs\nfunction hofstadterQ (n) {\nconst memo = [1, 1, 1];\nconst Q = function (i) {\nlet result = memo[i];\nif (typeof result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1808,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-q-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "11101974dacd8818bd01d77d01fb5288",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-q-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "res[0]); hofstadterQ(1500) should return 755 js assert equal(hofstadterQ(testCase[1]), res[1]); hofstadterQ(2000) should return 1005 js assert equal(hofstadterQ(testCase[2]), res[2]); hofstadterQ(2500) should return 1261 js assert equal(hofstadterQ(testCase[3]), res[3]); --seed-- --after-user-code-- js const testCase = [1000, 1500, 2000, 2500]; const res = [502, 755, 1005, 1261]; --seed-contents-- ```js function hofstadterQ(n) { return n; } ``` --solutions-- js function hofstadterQ (n) { const memo = [1, 1, 1]; const Q = function (i) { let result = memo[i]; if (typeof result== 'number') {\nresult = Q(i - Q(i - 1)) + Q(i - Q(i - 2));\nmemo[i] = result;\n}\nreturn result;\n};\nreturn Q(n);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1808,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\hofstadter-q-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "676d4a36da4fff473d6c09fdfec4f388",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iterated-digits-squaring.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ec1\ntitle: Iterated digits squaring\nchallengeType: 1\nforumTopicId: 302291\ndashedName: iterated-digits-squaring\n--description--\nIf you add the square of the digits of a Natural number (an integer bigger than zero), you always end with either 1 or 89:\n15 -> 26 -> 40 -> 16 -> 37 -> 58 -> 89\n7 -> 49 -> 97 -> 130 -> 10 -> 1\n--instructions--\nWrite a function that takes a number as a parameter and returns 1 or 89 after performing the mentioned process.\n--hints--\niteratedSquare should be a function.\njs\nassert(typeof iteratedSquare == 'function');\niteratedSquare(4) should return a number.\njs\nassert(typeof iteratedSquare(4) == 'number');\niteratedSquare(4) should return 89.\njs\nassert.equal(iteratedSquare(4), 89);\niteratedSquare(7) should return 1.\njs\nassert.equal(iteratedSquare(7), 1);\niteratedSquare(15) should return 89.\njs\nassert.equal(iteratedSquare(15), 89);\niteratedSquare(20) should return 89.\njs\nassert.equal(iteratedSquare(20), 89);\niteratedSquare(70) should return 1.\njs\nassert.equal(iteratedSquare(70), 1);\niteratedSquare(100) should return 1.\njs\nassert.equal(iteratedSquare(100), 1);\n--seed--\n--seed-contents--\n```js\nfunction iteratedSquare(n) {\n}\n```\n--solutions--\njs\nfunction iteratedSquare(n) {\nvar total;\nwhile (n != 89 && n != 1) {\ntotal = 0;\nwhile (n > 0) {\ntotal += Math.pow(n % 10, 2);\nn = Math.floor(n/10);\n}\nn = total;\n}\nreturn n;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iterated-digits-squaring.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bb61d3ff1761ab4cbbd0cb7a97729519",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\identity-matrix.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7eb1\ntitle: Identity matrix\nchallengeType: 1\nforumTopicId: 302290\ndashedName: identity-matrix\n--description--\nAn identity matrix is a square matrix of size \\( n \\times n \\), where the diagonal elements are all 1s (ones), and all the other elements are all 0s (zeroes) \\(\\displaystyle I_{n}=\\begin{bmatrix} 1 & 0 & 0 \\cr 0 & 1 & 0 \\cr 0 & 0 & 1 \\cr \\end{bmatrix}\\)\n--instructions--\nWrite a function that takes a number n as a parameter and returns the identity matrix of order \\( n \\times n \\) --hints--\nidMatrix should be a function js\nassert(typeof idMatrix == 'function');\nidMatrix(1) should return an array js\nassert(Array isArray(idMatrix(1)));\nidMatrix(1) should return [ [ 1 ] ] js\nassert deepEqual(idMatrix(1), results[0]);\nidMatrix(2) should return [ [ 1, 0 ], [ 0, 1 ] ] js\nassert deepEqual(idMatrix(2), results[1]);\nidMatrix(3) should return [ [ 1, 0, 0 ], [ 0, 1, 0 ], [ 0, 0, 1 ] ] js\nassert deepEqual(idMatrix(3), results[2]);\nidMatrix(4) should return [ [ 1, 0, 0, 0 ], [ 0, 1, 0, 0 ], [ 0, 0, 1, 0 ], [ 0, 0, 0, 1 ] ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1779,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\identity-matrix.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5236d8cd7b71722edf542cd26a8ea04f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\identity-matrix.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert deepEqual(idMatrix(1), results[0]); idMatrix(2) should return [ [ 1, 0 ], [ 0, 1 ] ] js assert deepEqual(idMatrix(2), results[1]); idMatrix(3) should return [ [ 1, 0, 0 ], [ 0, 1, 0 ], [ 0, 0, 1 ] ] js assert deepEqual(idMatrix(3), results[2]); idMatrix(4) should return [ [ 1, 0, 0, 0 ], [ 0, 1, 0, 0 ], [ 0, 0, 1, 0 ], [ 0, 0, 0, 1 ] ] js assertdeepEqual(idMatrix(4), results[3]);\n--seed--\n--after-user-code--\njs\nlet results=[[ [ 1 ] ],\n[ [ 1, 0 ], [ 0, 1 ] ],\n[ [ 1, 0, 0 ], [ 0, 1, 0 ], [ 0, 0, 1 ] ],\n[ [ 1, 0, 0, 0 ], [ 0, 1, 0, 0 ], [ 0, 0, 1, 0 ], [ 0, 0, 0, 1 ] ]]\n--seed-contents--\n```js\nfunction idMatrix(n) {\n}\n```\n--solutions--\njs\nfunction idMatrix(n) {\nreturn Array apply(null, new Array(n)) map(function (x, i, xs) {\nreturn xs map(function (_, k) {\nreturn i === k 1 : 0;\n})\n});\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1779,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\identity-matrix.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "49f14ade4adad55dde246f552972629b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iban.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7eaf\ntitle: IBAN\nchallengeType: 1\nforumTopicId: 302289\ndashedName: iban\n--description--\nThe International Bank Account Number (IBAN) is an internationally agreed means of identifying bank accounts across national borders with a reduced risk of propagating transcription errors The IBAN consists of up to 34 alphanumeric characters:\nfirst the two-letter ISO 3166-1 alpha-2 country code\nthen two check digits, and\nfinally a country-specific Basic Bank Account Number (BBAN) The check digits enable a sanity check of the bank account number to confirm its integrity even before submitting a transaction --instructions--\nWrite a function that takes IBAN string as parameter If it is valid return true Otherwise, return false --hints--\nisValid should be a function js\nassert(typeof isValid == 'function');\nisValid(\"GB82 WEST 1234 5698 7654 32\") should return a boolean js\nassert(typeof isValid('GB82 WEST 1234 5698 7654 32') == 'boolean');\nisValid(\"GB82 WEST 1234 5698 7654 32\") should return true js\nassert equal(isValid('GB82 WEST 1234 5698 7654 32'), true);\nisValid(\"GB82 WEST 1 34 5698 7654 32\") should return false js\nassert equal(isValid('GB82 WEST 1 34 5698 7654 32'), false);\nisValid(\"GB82 WEST 1234 5698 7654 325\") should return false js\nassert equal(isValid('GB82 WEST 1234 5698 7654 325'), false);\nisValid(\"GB82 TEST 1234 5698 7654 32\") should return false js\nassert equal(isValid('GB82 TEST 1234 5698 7654 32'), false);\nisValid(\"SA03 8000 0000 6080 1016 7519\") should return true js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iban.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "10773a0cfe871bff7928fff9ed38618a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iban.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert equal(isValid('GB82 WEST 1234 5698 7654 32'), true); isValid(\"GB82 WEST 1 34 5698 7654 32\") should return false js assert equal(isValid('GB82 WEST 1 34 5698 7654 32'), false); isValid(\"GB82 WEST 1234 5698 7654 325\") should return false js assert equal(isValid('GB82 WEST 1234 5698 7654 325'), false); isValid(\"GB82 TEST 1234 5698 7654 32\") should return false js assert equal(isValid('GB82 TEST 1234 5698 7654 32'), false); isValid(\"SA03 8000 0000 6080 1016 7519\") should return true js assertequal(isValid('SA03 8000 0000 6080 1016 7519'), true);\n--seed--\n--seed-contents--\n```js\nfunction isValid(iban) {\n}\n```\n--solutions--\njs\nfunction isValid(iban) {\nvar ibanLen = {\nNO:15, BE:16, DK:18, FI:18, FO:18, GL:18, NL:18, MK:19,\nSI:19, AT:20, BA:20, EE:20, KZ:20, LT:20, LU:20, CR:21,\nCH:21, HR:21, LI:21, LV:21, BG:22, BH:22, DE:22, GB:22,\nGE:22, IE:22, ME:22, RS:22, AE:23, GI:23, IL:23, AD:24,\nCZ:24, ES:24, MD:24, PK:24, RO:24, SA:24, SE:24, SK:24,\nVG:24, TN:24, PT:25, IS:26, TR:26, FR:27, GR:27, IT:27,\nMC:27, MR:27, SM:27, AL:28, AZ:28, CY:28, DO:28, GT:28,\nHU:28, LB:28, PL:28, BR:29, PS:29, KW:30, MU:30, MT:31\n}\niban = __helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iban.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ce5d5769269e19c1ff1b18f3e3afd301",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iban.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js function isValid(iban) { var ibanLen = { NO:15, BE:16, DK:18, FI:18, FO:18, GL:18, NL:18, MK:19, SI:19, AT:20, BA:20, EE:20, KZ:20, LT:20, LU:20, CR:21, CH:21, HR:21, LI:21, LV:21, BG:22, BH:22, DE:22, GB:22, GE:22, IE:22, ME:22, RS:22, AE:23, GI:23, IL:23, AD:24, CZ:24, ES:24, MD:24, PK:24, RO:24, SA:24, SE:24, SK:24, VG:24, TN:24, PT:25, IS:26, TR:26, FR:27, GR:27, IT:27, MC:27, MR:27, SM:27, AL:28, AZ:28, CY:28, DO:28, GT:28, HU:28, LB:28, PL:28, BR:29, PS:29, KW:30, MU:30, MT:31 } iban = __helpersremoveWhiteSpace(iban)\nif ( iban match(/^[\\dA-Z]+$/)) return false\nvar len = iban length\nif (len = ibanLen[iban substring(0,2)]) return false\niban = iban substring(4) + iban substring(0,4)\nfor (var s='', i=0; i<len; i+=1) s+=parseInt(iban charAt(i),36)\nfor (var m=s substring(0,15)%97, s=s substring(15); s; s=s substring(13)) m=(m+s substring(0,13))%97\nreturn m == 1\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\iban.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b0a3cbebb9a812d3cfdd948589958670",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\josephus-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ec5\ntitle: Josephus problem\nchallengeType: 1\nforumTopicId: 302294\ndashedName: josephus-problem\n--description--\nJosephus problem is a math puzzle with a grim description: $n$ prisoners are standing on a circle, sequentially numbered from $0$ to $n-1$ An executioner walks along the circle, starting from prisoner $0$, removing every $k$-th prisoner and killing him As the process goes on, the circle becomes smaller and smaller, until only one prisoner remains, who is then freed For example, if there are $n=5$ prisoners and $k=2$, the order the prisoners are killed in (let's call it the \"killing sequence\") will be 1, 3, 0, and 4, and the survivor will be #2 Given any $n, k > 0$, find out which prisoner will be the final survivor In one such incident, there were 41 prisoners and every 3rd prisoner was being killed ($k=3$) Among them was a clever chap name Josephus who worked out the problem, stood at the surviving position, and lived on to tell the tale Which number was he --instructions--\nWrite a function that takes the initial number of prisoners and k as parameters and returns the number of the prisoner that survives --hints--\njosephus should be a function js\nassert(typeof josephus == 'function');\njosephus(30,3) should return a number js\nassert(typeof josephus(30, 3) == 'number');\njosephus(30,3) should return 28 js\nassert equal(josephus(30, 3), 28);\njosephus(30,5) should return 2 js\nassert equal(josephus(30, 5), 2);\njosephus(20,2) should return 8 js\nassert equal(josephus(20, 2), 8);\njosephus(17,6) should return 1 js\nassert equal(josephus(17, 6), 1);\njosephus(29,4) should return 1 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\josephus-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e0609a3684b79458f8bbeb1e629f478a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\josephus-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "k as parameters and returns the number of the prisoner that survives --hints-- josephus should be a function js assert(typeof josephus == 'function'); josephus(30,3) should return a number js assert(typeof josephus(30, 3) == 'number'); josephus(30,3) should return 28 js assert equal(josephus(30, 3), 28); josephus(30,5) should return 2 js assert equal(josephus(30, 5), 2); josephus(20,2) should return 8 js assert equal(josephus(20, 2), 8); josephus(17,6) should return 1 js assert equal(josephus(17, 6), 1); josephus(29,4) should return 1 js assertequal(josephus(29, 4), 1);\n--seed--\n--seed-contents--\n```js\nfunction josephus(init, kill) {\n}\n```\n--solutions--\njs\nfunction josephus(init, kill) {\nconst arr = Array from(Array(init) keys());\nlet curr = -1\nwhile (arr length > 1) {\ncurr = (curr + kill) % arr length;\narr splice(curr, 1);\ncurr--;\n}\nreturn arr[0];\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\josephus-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6ee3c81e2c4afca0b49556e5e974c2cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jortsort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ec4\ntitle: JortSort\nchallengeType: 1\nforumTopicId: 302293\ndashedName: jortsort\n--description--\njortSort is a sorting toolset that makes the user do the work and guarantees efficiency because you don't have to sort ever again It was originally presented by Jenn \"Moneydollars\" Schiffer at the prestigious JSConf2014 jortSort should be a function that takes a single array of comparable objects as its argument It then sorts the array in ascending order and compares the sorted array to the originally provided array If the arrays match (i e the original array was already sorted), the function returns true If the arrays do not match (i e the original array was not sorted), the function returns false --hints--\njortsort should be a function js\nassert(typeof jortsort == 'function');\njortsort([1,2,3,4,5]) should return a boolean js\nassert(typeof jortsort([1, 2, 3, 4, 5]) == 'boolean');\njortsort([1,2,3,4,5]) should return true js\nassert equal(jortsort([1, 2, 3, 4, 5]), true);\njortsort([1,2,13,4,5]) should return false js\nassert equal(jortsort([1, 2, 13, 4, 5]), false);\njortsort([12,4,51,2,4]) should return false js\nassert equal(jortsort([12, 4, 51, 2, 4]), false);\njortsort([1,2]) should return true js\nassert equal(jortsort([1, 2]), true);\njortsort([5,4,3,2,1]) should return false js\nassert equal(jortsort([5, 4, 3, 2, 1]), false);\njortsort([1,1,1,1,1]) should return true js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1996,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jortsort.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fe1db3f1348265831cb1a2b77c93edf9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jortsort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return a boolean js assert(typeof jortsort([1, 2, 3, 4, 5]) == 'boolean'); jortsort([1,2,3,4,5]) should return true js assert equal(jortsort([1, 2, 3, 4, 5]), true); jortsort([1,2,13,4,5]) should return false js assert equal(jortsort([1, 2, 13, 4, 5]), false); jortsort([12,4,51,2,4]) should return false js assert equal(jortsort([12, 4, 51, 2, 4]), false); jortsort([1,2]) should return true js assert equal(jortsort([1, 2]), true); jortsort([5,4,3,2,1]) should return false js assert equal(jortsort([5, 4, 3, 2, 1]), false); jortsort([1,1,1,1,1]) should return true js assertequal(jortsort([1, 1, 1, 1, 1]), true);\n--seed--\n--seed-contents--\n```js\nfunction jortsort(array) {\n}\n```\n--solutions--\n```js\nfunction jortsort(array) {\n// sort the array\nvar originalArray = array slice(0);\narray sort( function(a,b){return a - b} );\n// compare to see if it was originally sorted\nfor (var i = 0; i < originalArray length; ++i) {\nif (originalArray[i] == array[i]) return false;\n}\nreturn true;\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1996,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jortsort.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "add6ededaae18ad9d43c56b852a1bdc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ec2\ntitle: Jaro distance\nchallengeType: 1\nforumTopicId: 302292\ndashedName: jaro-distance\n--description--\nThe Jaro distance is a measure of similarity between two strings The higher the Jaro distance for two strings is, the more similar the strings are The score is normalized such that 0 equates to no similarity and 1 is an exact match Definition\nThe Jaro distance \\( d_j \\) of two given strings \\(s_1\\) and \\(s_2\\) is\n\\begin{align}d_j = \\begin{cases}0& & \\text{if }m=0 \\\\\\\\{\\frac {1}{3}}\\left({\\frac {m}{|s_{1}|}}+{\\frac {m}{|s_{2}|}}+{\\frac {m-t}{m}}\\right)& & \\text{otherwise}\\end{cases}\\end{align}\nWhere:\n\\(m\\) is the number of matching characters;\n\\(t\\) is half the number of transpositions Two characters from \\(s_1\\) and \\(s_2\\) respectively, are considered matching only if they are the same and not farther than \\(\\left\\lfloor\\frac{\\max(|s_1|,|s_2|)}{2}\\right\\rfloor-1\\) Each character of \\(s_1\\) is compared with all its matching characters in \\(s_2\\) The number of matching (but different sequence order) characters divided by 2 defines the number of transpositions Example\nGiven the strings \\(s_1\\) DWAYNE and \\(s_2\\) DUANE we find:\n\\(m = 4\\)\n\\(|s_1| = 6\\)\n\\(|s_2| = 5\\)\n\\(t = 0\\)\nWe find a Jaro score of: \\(d_j = \\frac{1}{3}\\left(\\frac{4}{6} + \\frac{4}{5} + \\frac{4-0}{4}\\right) = 0 822\\) --instructions--\nWrite a function a that takes two strings as parameters and returns the associated Jaro distance --hints--\njaro should be a function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3610,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "9a7d1f207b79de9c0b5ff7938e3bc3da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "matching (but different sequence order) characters divided by 2 defines the number of transpositions Example Given the strings \\(s_1\\) DWAYNE and \\(s_2\\) DUANE we find: \\(m = 4\\) \\(|s_1| = 6\\) \\(|s_2| = 5\\) \\(t = 0\\) We find a Jaro score of: \\(d_j = \\frac{1}{3}\\left(\\frac{4}{6} + \\frac{4}{5} + \\frac{4-0}{4}\\right) = 0 822\\) --instructions-- Write a function a that takes two strings as parameters and returns the associated Jaro distance --hints-- jaro should be a functionjs\nassert(typeof jaro == 'function');\njaro(\"MARTHA\", \"MARHTA\") should return a number js\nassert(typeof jaro('MARTHA', 'MARHTA') == 'number');\njaro(\"MARTHA\", \"MARHTA\") should return 0 9444444444444445 js\nassert equal(jaro('MARTHA', 'MARHTA'), 0 9444444444444445);\njaro(\"DIXON\", \"DICKSONX\") should return 0 7666666666666666 js\nassert equal(jaro('DIXON', 'DICKSONX'), 0 7666666666666666);\njaro(\"JELLYFISH\", \"SMELLYFISH\") should return 0 8962962962962964 js\nassert equal(jaro('JELLYFISH', 'SMELLYFISH'), 0 8962962962962964);\njaro(\"HELLOS\", \"CHELLO\") should return 0 888888888888889 js\nassert equal(jaro('HELLOS', 'CHELLO'), 0 888888888888889);\njaro(\"ABCD\", \"BCDA\") should return 0 8333333333333334 js\nassert equal(jaro('ABCD', 'BCDA'), 0 8333333333333334);\n--seed--\n--seed-contents--\n```js\nfunction jaro(s, t) {\n}\n```\n--solutions--\n```js\nfunction jaro(s, t) {\nvar s_len = s length;\nvar t_len = t",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3610,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "43ed6d42ccba9fc113d63d3aafb018c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "equal(jaro('MARTHA', 'MARHTA'), 0 9444444444444445); jaro(\"DIXON\", \"DICKSONX\") should return 0 7666666666666666 js assert equal(jaro('DIXON', 'DICKSONX'), 0 7666666666666666); jaro(\"JELLYFISH\", \"SMELLYFISH\") should return 0 8962962962962964 js assert equal(jaro('JELLYFISH', 'SMELLYFISH'), 0 8962962962962964); jaro(\"HELLOS\", \"CHELLO\") should return 0 888888888888889 js assert equal(jaro('HELLOS', 'CHELLO'), 0 888888888888889); jaro(\"ABCD\", \"BCDA\") should return 0 8333333333333334 js assert equal(jaro('ABCD', 'BCDA'), 0 8333333333333334); --seed-- --seed-contents-- ```js function jaro(s, t) { } ``` --solutions-- ```js function jaro(s, t) { var s_len = s length; var t_len = tlength;\nif (s_len == 0 && t_len == 0) return 1;\nvar match_distance = Math max(s_len, t_len) / 2 - 1;\nvar s_matches = new Array(s_len);\nvar t_matches = new Array(t_len);\nvar matches = 0;\nvar transpositions = 0;\nfor (var i = 0; i < s_len; i++) {\nvar start = Math max(0, i - match_distance);\nvar end = Math min(i + match_distance + 1, t_len);\nfor (var j = start; j < end; j++) {\nif (t_matches[j]) continue;\nif (s charAt(i) = t charAt(j)) continue;\ns_matches[i] = true;\nt_matches[j] = true;\nmatches++;\nbreak;\n}\n}\nif (matches == 0) return 0;\nvar k = 0;\nfor (var i = 0; i < s_len; i++) {\nif ( s_matches[i]) continue;\nwhile ( t_matches[k]) k++;\nif (s charAt(i) = t",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3610,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "b4b23b8556771cdcc080b61bfb0cd481",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "i - match_distance); var end = Math min(i + match_distance + 1, t_len); for (var j = start; j < end; j++) { if (t_matches[j]) continue; if (s charAt(i) = t charAt(j)) continue; s_matches[i] = true; t_matches[j] = true; matches++; break; } } if (matches == 0) return 0; var k = 0; for (var i = 0; i < s_len; i++) { if ( s_matches[i]) continue; while ( t_matches[k]) k++; if (s charAt(i) = tcharAt(k)) transpositions++;\nk++;\n}\nreturn ((matches / s_len) +\n(matches / t_len) +\n((matches - transpositions / 2 0) / matches)) / 3 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3610,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\jaro-distance.md",
      "source_type": "git_repo"
    },
    "token_count": 181,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ce9ea0f29e9290c6fb4c383add357cc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\kaprekar-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7eca\ntitle: Kaprekar numbers\nchallengeType: 1\nforumTopicId: 302296\ndashedName: kaprekar-numbers\n--description--\nA positive integer is a Kaprekar number if:\nIt is 1, or,\nThe decimal representation of its square may be split once into two parts consisting of positive integers which sum to the original number Note that a split resulting in a part consisting purely of 0s is not valid, as 0 is not considered positive Example Kaprekar numbers:\n2223 is a Kaprekar number, as 2223 * 2223 = 4941729, 4941729 may be split to 494 and 1729, and 494 + 1729 = 2223\nThe series of Kaprekar numbers is known as A006886, and begins as 1, 9, 45, 55, --instructions--\nWrite a function that takes a number $n$, a base $bs$, and returns true if the number is a Kaprekar number for the given base Otherwise, the function returns false --hints--\nisKaprekar should be a function js\nassert(typeof isKaprekar == 'function');\nisKaprekar(1, 10) should return a boolean js\nassert(typeof isKaprekar(1, 10) == 'boolean');\nisKaprekar(1, 10) should return true js\nassert equal(isKaprekar(1, 10), true);\nisKaprekar(9, 10) should return true js\nassert equal(isKaprekar(9, 10), true);\nisKaprekar(2223, 10) should return true js\nassert equal(isKaprekar(2223, 10), true);\nisKaprekar(22823, 10) should return false js\nassert equal(isKaprekar(22823, 10), false);\nisKaprekar(9, 17) should return false js\nassert equal(isKaprekar(9, 17), false);\nisKaprekar(225, 17) should return true js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\kaprekar-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "913dd1dc8ed4f87cb630ba77b7fc4490",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\kaprekar-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a function js assert(typeof isKaprekar == 'function'); isKaprekar(1, 10) should return a boolean js assert(typeof isKaprekar(1, 10) == 'boolean'); isKaprekar(1, 10) should return true js assert equal(isKaprekar(1, 10), true); isKaprekar(9, 10) should return true js assert equal(isKaprekar(9, 10), true); isKaprekar(2223, 10) should return true js assert equal(isKaprekar(2223, 10), true); isKaprekar(22823, 10) should return false js assert equal(isKaprekar(22823, 10), false); isKaprekar(9, 17) should return false js assert equal(isKaprekar(9, 17), false); isKaprekar(225, 17) should return true js assertequal(isKaprekar(225, 17), true);\nisKaprekar(999, 17) should return false js\nassert equal(isKaprekar(999, 17), false);\n--seed--\n--seed-contents--\n```js\nfunction isKaprekar(n, bs) {\n}\n```\n--solutions--\njs\nfunction isKaprekar(n, bs) {\nif (n < 1) return false;\nif (n == 1) return true;\nfor (var a = n * n, b = 0, s = 1; a; s *= bs) {\nb += (a % bs) * s;\na = Math floor(a / bs);\nif (b && a + b == n) return true;\n}\nreturn false;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\kaprekar-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "150f21f1f5264d6f48c7bc8452c85964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ed1\ntitle: Knapsack problem/0-1\nchallengeType: 1\nforumTopicId: 323649\ndashedName: knapsack-problem0-1\n--description--\nThe 0-1 knapsack problem is defined as follows:\nYou are given an array of objects representing items to be put in a knapsack The objects have 3 attributes: name, weight, and value The items need to be selected so that the total weight does not exceed the maximum weight and the value is maximized --instructions--\nWrite a function to solve the knapsack problem The function is given the array of objects and the maximum weight as parameters It should return the maximum total value possible --hints--\nknapsack([{ name:'map', weight:9, value:150 }, { name:'compass', weight:13, value:35 }, { name:'water', weight:153, value:200 }, { name:'sandwich', weight:50, value:160 }, { name:'glucose', weight:15, value:60 }, { name:'tin', weight:68, value:45 }, { name:'banana', weight:27, value:60 }, { name:'apple', weight:39, value:40 }], 100) should return 405 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 284,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "3c1794130639321f1f81e8239e315e49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a function to solve the knapsack problem The function is given the array of objects and the maximum weight as parameters It should return the maximum total value possible --hints-- knapsack([{ name:'map', weight:9, value:150 }, { name:'compass', weight:13, value:35 }, { name:'water', weight:153, value:200 }, { name:'sandwich', weight:50, value:160 }, { name:'glucose', weight:15, value:60 }, { name:'tin', weight:68, value:45 }, { name:'banana', weight:27, value:60 }, { name:'apple', weight:39, value:40 }], 100) should return 405 js assertequal(\nknapsack(\n[\n{ name: 'map', weight: 9, value: 150 },\n{ name: 'compass', weight: 13, value: 35 },\n{ name: 'water', weight: 153, value: 200 },\n{ name: 'sandwich', weight: 50, value: 160 },\n{ name: 'glucose', weight: 15, value: 60 },\n{ name: 'tin', weight: 68, value: 45 },\n{ name: 'banana', weight: 27, value: 60 },\n{ name: 'apple', weight: 39, value: 40 }\n],\n100\n),\n405\n);\nknapsack([{ name:'map', weight:9, value:150 }, { name:'compass', weight:13, value:35 }, { name:'water', weight:153, value:200 }, { name:'sandwich', weight:50, value:160 }, { name:'glucose', weight:15, value:60 }, { name:'tin', weight:68, value:45 }, { name:'banana', weight:27, value:60 }, { name:'apple', weight:39, value:40 }], 200) should return 510 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "bb68953f67e622108ead54e2154f4a95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}, { name: 'tin', weight: 68, value: 45 }, { name: 'banana', weight: 27, value: 60 }, { name: 'apple', weight: 39, value: 40 } ], 100 ), 405 ); knapsack([{ name:'map', weight:9, value:150 }, { name:'compass', weight:13, value:35 }, { name:'water', weight:153, value:200 }, { name:'sandwich', weight:50, value:160 }, { name:'glucose', weight:15, value:60 }, { name:'tin', weight:68, value:45 }, { name:'banana', weight:27, value:60 }, { name:'apple', weight:39, value:40 }], 200) should return 510 js assertequal(\nknapsack(\n[\n{ name: 'map', weight: 9, value: 150 },\n{ name: 'compass', weight: 13, value: 35 },\n{ name: 'water', weight: 153, value: 200 },\n{ name: 'sandwich', weight: 50, value: 160 },\n{ name: 'glucose', weight: 15, value: 60 },\n{ name: 'tin', weight: 68, value: 45 },\n{ name: 'banana', weight: 27, value: 60 },\n{ name: 'apple', weight: 39, value: 40 }\n],\n200\n),\n510\n);\nknapsack([{ name:'cheese', weight:23, value:30 }, { name:'beer', weight:52, value:10 }, { name:'suntan cream', weight:11, value:70 }, { name:'camera', weight:32, value:30 }, { name:'T-shirt', weight:24, value:15 }, { name:'trousers', weight:48, value:10 }, { name:'umbrella', weight:73, value:40 }], 100) should return 145 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "59d301aec9cb48e9a8a93f9df6ccd8e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "weight: 15, value: 60 }, { name: 'tin', weight: 68, value: 45 }, { name: 'banana', weight: 27, value: 60 }, { name: 'apple', weight: 39, value: 40 } ], 200 ), 510 ); knapsack([{ name:'cheese', weight:23, value:30 }, { name:'beer', weight:52, value:10 }, { name:'suntan cream', weight:11, value:70 }, { name:'camera', weight:32, value:30 }, { name:'T-shirt', weight:24, value:15 }, { name:'trousers', weight:48, value:10 }, { name:'umbrella', weight:73, value:40 }], 100) should return 145 js assertequal(\nknapsack(\n[\n{ name: 'cheese', weight: 23, value: 30 },\n{ name: 'beer', weight: 52, value: 10 },\n{ name: 'suntan cream', weight: 11, value: 70 },\n{ name: 'camera', weight: 32, value: 30 },\n{ name: 'T-shirt', weight: 24, value: 15 },\n{ name: 'trousers', weight: 48, value: 10 },\n{ name: 'umbrella', weight: 73, value: 40 }\n],\n100\n),\n145\n);\nknapsack([{ name:'cheese', weight:23, value:30 }, { name:'beer', weight:52, value:10 }, { name:'suntan cream', weight:11, value:70 }, { name:'camera', weight:32, value:30 }, { name:'T-shirt', weight:24, value:15 }, { name:'trousers', weight:48, value:10 }, { name:'umbrella', weight:73, value:40 }], 200) should return 185 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "0a4f4d35fb8cdb1ba2f0320efed54a74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "weight: 32, value: 30 }, { name: 'T-shirt', weight: 24, value: 15 }, { name: 'trousers', weight: 48, value: 10 }, { name: 'umbrella', weight: 73, value: 40 } ], 100 ), 145 ); knapsack([{ name:'cheese', weight:23, value:30 }, { name:'beer', weight:52, value:10 }, { name:'suntan cream', weight:11, value:70 }, { name:'camera', weight:32, value:30 }, { name:'T-shirt', weight:24, value:15 }, { name:'trousers', weight:48, value:10 }, { name:'umbrella', weight:73, value:40 }], 200) should return 185 js assertequal(\nknapsack(\n[\n{ name: 'cheese', weight: 23, value: 30 },\n{ name: 'beer', weight: 52, value: 10 },\n{ name: 'suntan cream', weight: 11, value: 70 },\n{ name: 'camera', weight: 32, value: 30 },\n{ name: 'T-shirt', weight: 24, value: 15 },\n{ name: 'trousers', weight: 48, value: 10 },\n{ name: 'umbrella', weight: 73, value: 40 }\n],\n200\n),\n185\n);\nknapsack([{ name:'waterproof trousers', weight:42, value:70 }, { name:'waterproof overclothes', weight:43, value:75 }, { name:'note-case', weight:22, value:80 }, { name:'sunglasses', weight:7, value:20 }, { name:'towel', weight:18, value:12 }, { name:'socks', weight:4, value:50 }, { name:'book', weight:30, value:10 }], 100) should return 237 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "14c9985eff277b28644ceaba3ef0fa60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "32, value: 30 }, { name: 'T-shirt', weight: 24, value: 15 }, { name: 'trousers', weight: 48, value: 10 }, { name: 'umbrella', weight: 73, value: 40 } ], 200 ), 185 ); knapsack([{ name:'waterproof trousers', weight:42, value:70 }, { name:'waterproof overclothes', weight:43, value:75 }, { name:'note-case', weight:22, value:80 }, { name:'sunglasses', weight:7, value:20 }, { name:'towel', weight:18, value:12 }, { name:'socks', weight:4, value:50 }, { name:'book', weight:30, value:10 }], 100) should return 237 js assertequal(\nknapsack(\n[\n{ name: 'waterproof trousers', weight: 42, value: 70 },\n{ name: 'waterproof overclothes', weight: 43, value: 75 },\n{ name: 'note-case', weight: 22, value: 80 },\n{ name: 'sunglasses', weight: 7, value: 20 },\n{ name: 'towel', weight: 18, value: 12 },\n{ name: 'socks', weight: 4, value: 50 },\n{ name: 'book', weight: 30, value: 10 }\n],\n100\n),\n237\n);\nknapsack([{ name:'waterproof trousers', weight:42, value:70 }, { name:'waterproof overclothes', weight:43, value:75 }, { name:'note-case', weight:22, value:80 }, { name:'sunglasses', weight:7, value:20 }, { name:'towel', weight:18, value:12 }, { name:'socks', weight:4, value:50 }, { name:'book', weight:30, value:10 }], 200) should return 317 '\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "9e2a56d325c7cc43473494dabaafe40d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value: 20 }, { name: 'towel', weight: 18, value: 12 }, { name: 'socks', weight: 4, value: 50 }, { name: 'book', weight: 30, value: 10 } ], 100 ), 237 ); knapsack([{ name:'waterproof trousers', weight:42, value:70 }, { name:'waterproof overclothes', weight:43, value:75 }, { name:'note-case', weight:22, value:80 }, { name:'sunglasses', weight:7, value:20 }, { name:'towel', weight:18, value:12 }, { name:'socks', weight:4, value:50 }, { name:'book', weight:30, value:10 }], 200) should return 317 ' js assertequal(\nknapsack(\n[\n{ name: 'waterproof trousers', weight: 42, value: 70 },\n{ name: 'waterproof overclothes', weight: 43, value: 75 },\n{ name: 'note-case', weight: 22, value: 80 },\n{ name: 'sunglasses', weight: 7, value: 20 },\n{ name: 'towel', weight: 18, value: 12 },\n{ name: 'socks', weight: 4, value: 50 },\n{ name: 'book', weight: 30, value: 10 }\n],\n200\n),\n317\n);\n--seed--\n--seed-contents--\n```js\nfunction knapsack(items, maxweight) {\n}\n```\n--solutions--\n```js\nfunction knapsack(items, maxweight) {\nvar _ = {\nmax: function(e) {\nvar mx = e[0];\ne forEach(function(f) {\nif (mx < f) mx = f;\n});\nreturn mx;\n},\nmap: function(array, func) {\nreturn array map(func);\n},\nisUndefined: function(a) {\nif (a) {\nreturn false;\n}\nreturn true;\n},\nrange: function(start, end, step) {\nvar a = [];\nvar f = (f = (i, end) => i < end);\nif (start > end) f = (i, end) => i > end;\nfor (var i = start; f(i, end); i += step) a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "6a571effb463ba252fbfecec2f47c10b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "forEach(function(f) { if (mx < f) mx = f; }); return mx; }, map: function(array, func) { return array map(func); }, isUndefined: function(a) { if (a) { return false; } return true; }, range: function(start, end, step) { var a = []; var f = (f = (i, end) => i < end); if (start > end) f = (i, end) => i > end; for (var i = start; f(i, end); i += step) apush(i);\nreturn a;\n}\n};\nvar valuefn = e => e value;\nvar weightfn = e => e weight;\nvar epsilon = 0 01;\nvar _p = max(_ map(items, valuefn));\nvar _k = (_epsilon * _p) / items length;\nvar _memo = (function() {\nvar _mem = {};\nvar _key = function(i, w) {\nreturn i + '::' + w;\n};\nreturn {\nget: function(i, w) {\nreturn _mem[_key(i, w)];\n},\nput: function(i, w, r) {\n_mem[_key(i, w)] = r;\nreturn r;\n}\n};\n})();\nvar _m = function(i, w) {\ni = Math round(i);\nw = Math round(w);\nif (i < 0 || w === 0) {\n// empty base case\nreturn { items: [], totalWeight: 0, totalValue: 0 };\n}\nvar mm = _memo get(i, w);\nif ( _ isUndefined(mm)) {\nreturn mm;\n}\nvar item = items[i];\nif (weightfn(item) > w) {\n//item does not fit, try the next item\nreturn _memo put(i, w, _m(i - 1, w));\n}\n// this item could fit // are we better off excluding it var excluded = _m(i - 1, w);\n// or including it var included = _m(i - 1, w - weightfn(item));\nif (\nincluded totalValue + Math floor(valuefn(item) / _k) >\nexcluded totalValue\n) {\n// better off including it\n// make a copy of the list\nvar i1 = included items slice();\ni1 push(item);\nreturn _memo put(i, w, {\nitems: i1,\ntotalWeight: included",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "d9b71e67e4170340002597459b21308f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} // this item could fit // are we better off excluding it var excluded = _m(i - 1, w); // or including it var included = _m(i - 1, w - weightfn(item)); if ( included totalValue + Math floor(valuefn(item) / _k) > excluded totalValue ) { // better off including it // make a copy of the list var i1 = included items slice(); i1 push(item); return _memo put(i, w, { items: i1, totalWeight: includedtotalWeight + weightfn(item),\ntotalValue: included totalValue + Math floor(valuefn(item) / _k)\n});\n}\n//better off excluding it\nreturn _memo put(i, w, excluded);\n};\nvar scaled = _m(items length - 1, maxweight);\nvar val = 0;\nscaled items forEach(function(e) {\nval += e value;\n});\nreturn val;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7828,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-0-1.md",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "b1e9cc4cfca609eb013fbdc80e8bb421",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ecb\ntitle: K-d tree\nchallengeType: 1\nforumTopicId: 302295\ndashedName: k-d-tree\n--description--\nA k-d tree (short for k-dimensional tree) is a space-partitioning data structure for organizing points in a k-dimensional space k-d trees are a useful data structure for several applications, such as searches involving a multidimensional search key (e g range searches and nearest neighbor searches) k-d trees are a special case of binary space partitioning trees k-d trees are not suitable, however, for efficiently finding the nearest neighbor in high dimensional spaces As a general rule, if the dimensionality is k, the number of points in the data, N, should be N ≫ 2k Otherwise, when k-d trees are used with high-dimensional data, most of the points in the tree will be evaluated and the efficiency is no better than exhaustive search, and other methods such as approximate nearest-neighbor are used instead --instructions--\nWrite a function to perform a nearest neighbor search using k-d tree The function takes two parameters: an array of k-dimensional points, and a single k-dimensional point whose nearest neighbor should be returned by the function A k-dimensional point will be given as an array of k elements --hints--\nkdNN should be a function js\nassert(typeof kdNN == 'function');\nkdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [9, 2]) should return an array js\nassert(\nArray isArray(\nkdNN(\n[\n[2, 3],\n[5, 4],\n[9, 6],\n[4, 7],\n[8, 1],\n[7, 2]\n],\n[9, 2]\n)\n)\n);\nkdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [9, 2]) should return [ 8, 1 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "68cea150f0aa4e8aafd53382352a3f26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "elements --hints-- kdNN should be a function js assert(typeof kdNN == 'function'); kdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [9, 2]) should return an array js assert( Array isArray( kdNN( [ [2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2] ], [9, 2] ) ) ); kdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [9, 2]) should return [ 8, 1 ] js assertdeepEqual(\nkdNN(\n[\n[2, 3],\n[5, 4],\n[9, 6],\n[4, 7],\n[8, 1],\n[7, 2]\n],\n[9, 2]\n),\n[8, 1]\n);\nkdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [7, 1]) should return [ 8, 1 ] js\nassert deepEqual(\nkdNN(\n[\n[2, 3],\n[5, 4],\n[9, 6],\n[4, 7],\n[8, 1],\n[7, 2]\n],\n[7, 1]\n),\n[8, 1]\n);\nkdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [3, 2]) should return [ 2, 3 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "ce32794287a8ee64d5b45c5ea6027c77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1], [7, 2] ], [9, 2] ), [8, 1] ); kdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [7, 1]) should return [ 8, 1 ] js assert deepEqual( kdNN( [ [2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2] ], [7, 1] ), [8, 1] ); kdNN([[[2, 3], [5, 4], [9, 6], [4, 7], [8, 1], [7, 2]], [3, 2]) should return [ 2, 3 ] js assertdeepEqual(\nkdNN(\n[\n[2, 3],\n[5, 4],\n[9, 6],\n[4, 7],\n[8, 1],\n[7, 2]\n],\n[3, 2]\n),\n[2, 3]\n);\nkdNN([[2, 3, 1], [9, 4, 5], [4, 6, 7], [1, 2, 5], [7, 8, 9], [3, 6, 1]], [1, 2, 3]) should return [ 1, 2, 5 ] js\nassert deepEqual(\nkdNN(\n[\n[2, 3, 1],\n[9, 4, 5],\n[4, 6, 7],\n[1, 2, 5],\n[7, 8, 9],\n[3, 6, 1]\n],\n[1, 2, 3]\n),\n[1, 2, 5]\n);\nkdNN([[2, 3, 1], [9, 4, 5], [4, 6, 7], [1, 2, 5], [7, 8, 9], [3, 6, 1]], [4, 5, 6]) should return [ 4, 6, 7 ] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "27293100c695ea6b4b0c45db7b4f2e19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "9], [3, 6, 1]], [1, 2, 3]) should return [ 1, 2, 5 ] js assert deepEqual( kdNN( [ [2, 3, 1], [9, 4, 5], [4, 6, 7], [1, 2, 5], [7, 8, 9], [3, 6, 1] ], [1, 2, 3] ), [1, 2, 5] ); kdNN([[2, 3, 1], [9, 4, 5], [4, 6, 7], [1, 2, 5], [7, 8, 9], [3, 6, 1]], [4, 5, 6]) should return [ 4, 6, 7 ] js assertdeepEqual(\nkdNN(\n[\n[2, 3, 1],\n[9, 4, 5],\n[4, 6, 7],\n[1, 2, 5],\n[7, 8, 9],\n[3, 6, 1]\n],\n[4, 5, 6]\n),\n[4, 6, 7]\n);\nkdNN([[2, 3, 1], [9, 4, 5], [4, 6, 7], [1, 2, 5], [7, 8, 9], [3, 6, 1]], [8, 8, 8]) should return [ 7, 8, 9 ] js\nassert deepEqual(\nkdNN(\n[\n[2, 3, 1],\n[9, 4, 5],\n[4, 6, 7],\n[1, 2, 5],\n[7, 8, 9],\n[3, 6, 1]\n],\n[8, 8, 8]\n),\n[7, 8, 9]\n);\n--seed--\n--seed-contents--\n```js\nfunction kdNN(fpoints, fpoint) {\n}\n```\n--solutions--\n```js\nfunction kdNN(fpoints, fpoint) {\nfunction Node(obj, dimension, parent) {\nthis obj = obj;\nthis left = null;\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "5ef9e71b0952b5289dca29b18b90f209",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "8, 9], [3, 6, 1]], [8, 8, 8]) should return [ 7, 8, 9 ] js assert deepEqual( kdNN( [ [2, 3, 1], [9, 4, 5], [4, 6, 7], [1, 2, 5], [7, 8, 9], [3, 6, 1] ], [8, 8, 8] ), [7, 8, 9] ); --seed-- --seed-contents-- ```js function kdNN(fpoints, fpoint) { } ``` --solutions-- ```js function kdNN(fpoints, fpoint) { function Node(obj, dimension, parent) { this obj = obj; this left = null; thisright = null;\nthis parent = parent;\nthis dimension = dimension;\n}\nfunction kdTree(points, metric, dimensions) {\nvar self = this;\nfunction buildTree(points, depth, parent) {\nvar dim = depth % dimensions length,\nmedian,\nnode;\nif (points length === 0) {\nreturn null;\n}\nif (points length === 1) {\nreturn new Node(points[0], dim, parent);\n}\npoints sort(function(a, b) {\nreturn a[dimensions[dim]] - b[dimensions[dim]];\n});\nmedian = Math floor(points length / 2);\nnode = new Node(points[median], dim, parent);\nnode left = buildTree(points slice(0, median), depth + 1, node);\nnode right = buildTree(points slice(median + 1), depth + 1, node);\nreturn node;\n}\nthis root = buildTree(points, 0, null);\nthis insert = function(point) {\nfunction innerSearch(node, parent) {\nif (node === null) {\nreturn parent;\n}\nvar dimension = dimensions[node dimension];\nif (point[dimension] < node obj[dimension]) {\nreturn innerSearch(node left, node);\n} else {\nreturn innerSearch(node right, node);\n}\n}\nvar insertPosition = innerSearch(this root, null),\nnewNode,\ndimension;\nif (insertPosition === null) {\nthis root = new Node(point, 0, null);\nreturn;\n}\nnewNode = new Node(\npoint,\n(insertPosition dimension + 1) % dimensions length,\ninsertPosition\n);\ndimension = dimensions[insertPosition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "66694ece4bf6d0ec970fdcd5ff8747ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ function innerSearch(node, parent) { if (node === null) { return parent; } var dimension = dimensions[node dimension]; if (point[dimension] < node obj[dimension]) { return innerSearch(node left, node); } else { return innerSearch(node right, node); } } var insertPosition = innerSearch(this root, null), newNode, dimension; if (insertPosition === null) { this root = new Node(point, 0, null); return; } newNode = new Node( point, (insertPosition dimension + 1) % dimensions length, insertPosition ); dimension = dimensions[insertPositiondimension];\nif (point[dimension] < insertPosition obj[dimension]) {\ninsertPosition left = newNode;\n} else {\ninsertPosition right = newNode;\n}\n};\nthis nearest = function(point, maxNodes, maxDistance) {\nvar i, result, bestNodes;\nbestNodes = new BinaryHeap(function(e) {\nreturn -e[1];\n});\nfunction nearestSearch(node) {\nvar bestChild,\ndimension = dimensions[node dimension],\nownDistance = metric(point, node obj),\nlinearPoint = {},\nlinearDistance,\notherChild,\ni;\nfunction saveNode(node, distance) {\nbestNodes push([node, distance]);\nif (bestNodes size() > maxNodes) {\nbestNodes pop();\n}\n}\nfor (i = 0; i < dimensions length; i += 1) {\nif (i === node dimension) {\nlinearPoint[dimensions[i]] = point[dimensions[i]];\n} else {\nlinearPoint[dimensions[i]] = node obj[dimensions[i]];\n}\n}\nlinearDistance = metric(linearPoint, node obj);\nif (node right === null && node left === null) {\nif (\nbestNodes size() < maxNodes ||\nownDistance < bestNodes peek()[1]\n) {\nsaveNode(node, ownDistance);\n}\nreturn;\n}\nif (node right === null) {\nbestChild = node left;\n} else if (node left === null) {\nbestChild = node right;\n} else {\nif (point[dimension] < node obj[dimension]) {\nbestChild = node left;\n} else {\nbestChild = node right;\n}\n}\nnearestSearch(bestChild);\nif (bestNodes size() < maxNodes || ownDistance < bestNodes peek()[1]) {\nsaveNode(node, ownDistance);\n}\nif (\nbestNodes size() < maxNodes ||\nMath abs(linearDistance) < bestNodes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "3895ffc25d0ebf94773169edfeee65be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ saveNode(node, ownDistance); } return; } if (node right === null) { bestChild = node left; } else if (node left === null) { bestChild = node right; } else { if (point[dimension] < node obj[dimension]) { bestChild = node left; } else { bestChild = node right; } } nearestSearch(bestChild); if (bestNodes size() < maxNodes || ownDistance < bestNodes peek()[1]) { saveNode(node, ownDistance); } if ( bestNodes size() < maxNodes || Math abs(linearDistance) < bestNodespeek()[1]\n) {\nif (bestChild === node left) {\notherChild = node right;\n} else {\notherChild = node left;\n}\nif (otherChild == null) {\nnearestSearch(otherChild);\n}\n}\n}\nif (maxDistance) {\nfor (i = 0; i < maxNodes; i += 1) {\nbestNodes push([null, maxDistance]);\n}\n}\nif (self root) nearestSearch(self root);\nresult = [];\nfor (i = 0; i < Math min(maxNodes, bestNodes content length); i += 1) {\nif (bestNodes content[i][0]) {\nresult push([bestNodes content[i][0] obj, bestNodes content[i][1]]);\n}\n}\nreturn result;\n};\n}\nfunction BinaryHeap(scoreFunction) {\nthis content = [];\nthis scoreFunction = scoreFunction;\n}\nBinaryHeap prototype = {\npush: function(element) {\n// Add the new element to the end of the array this content push(element);\n// Allow it to bubble up this bubbleUp(this content length - 1);\n},\npop: function() {\n// Store the first element so we can return it later var result = this content[0];\n// Get the element at the end of the array var end = this content pop();\n// If there are any elements left, put the end element at the\n// start, and let it sink down if (this content length > 0) {\nthis content[0] = end;\nthis sinkDown(0);\n}\nreturn result;\n},\npeek: function() {\nreturn this content[0];\n},\nsize: function() {\nreturn this content length;\n},\nbubbleUp: function(n) {\n// Fetch the element that has to be moved var element = this content[n];\n// When at 0, an element can not go up any further",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "7076ed34e0d8c551ff019f983aa21456",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "elements left, put the end element at the // start, and let it sink down if (this content length > 0) { this content[0] = end; this sinkDown(0); } return result; }, peek: function() { return this content[0]; }, size: function() { return this content length; }, bubbleUp: function(n) { // Fetch the element that has to be moved var element = this content[n]; // When at 0, an element can not go up any furtherwhile (n > 0) {\n// Compute the parent element's index, and fetch it var parentN = Math floor((n + 1) / 2) - 1,\nparent = this content[parentN];\n// Swap the elements if the parent is greater if (this scoreFunction(element) < this scoreFunction(parent)) {\nthis content[parentN] = element;\nthis content[n] = parent;\n// Update 'n' to continue at the new position n = parentN;\n}\n// Found a parent that is less, no need to move it further else {\nbreak;\n}\n}\n},\nsinkDown: function(n) {\n// Look up the target element and its score var length = this content length,\nelement = this content[n],\nelemScore = this scoreFunction(element);\nwhile (true) {\n// Compute the indices of the child elements var child2N = (n + 1) * 2,\nchild1N = child2N - 1;\n// This is used to store the new position of the element,\n// if any var swap = null;\n// If the first child exists (is inside the array) if (child1N < length) {\n// Look it up and compute its score var child1 = this content[child1N],\nchild1Score = this scoreFunction(child1);\n// If the score is less than our element's, we need to swap if (child1Score < elemScore) swap = child1N;\n}\n// Do the same checks for the other child if (child2N < length) {\nvar child2 = this content[child2N],\nchild2Score = this scoreFunction(child2);\nif (child2Score < (swap == null elemScore : child1Score)) {\nswap = child2N;\n}\n}\n// If the element needs to be moved, swap it, and continue if (swap = null) {\nthis content[n] = this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "793f1d43f8bf5dfc0bdae5c672d26dcc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is less than our element's, we need to swap if (child1Score < elemScore) swap = child1N; } // Do the same checks for the other child if (child2N < length) { var child2 = this content[child2N], child2Score = this scoreFunction(child2); if (child2Score < (swap == null elemScore : child1Score)) { swap = child2N; } } // If the element needs to be moved, swap it, and continue if (swap = null) { this content[n] = thiscontent[swap];\nthis content[swap] = element;\nn = swap;\n}\n// Otherwise, we are done else {\nbreak;\n}\n}\n}\n};\nvar dims = [];\nfor (var i = 0; i < fpoint length; i++) dims push(i);\nvar tree = new kdTree(\nfpoints,\nfunction(e1, e2) {\nvar d = 0;\nvar e3 = e1;\nif ( Array isArray(e1)) {\ne3 = [];\nfor (var key in e1) e3 push(e1[key]);\ne1 = e3;\n}\ne1 forEach(function(e, i) {\nvar sqd = e1[i] - e2[i];\nd += sqd * sqd;\n});\nreturn d;\n},\ndims\n);\nreturn tree nearest(fpoint, 1, 1000)[0][0];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\k-d-tree.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "2ffb0fdd1b094a1b70a81e3ed3d79277",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ed3\ntitle: Knapsack problem/Continuous\nchallengeType: 1\nforumTopicId: 323654\ndashedName: knapsack-problemcontinuous\n--description--\nA thief burgles a butcher's shop, where he can select from some items The thief knows the weights and prices of each items Because he has a knapsack with a limit on the maximum weight that it can carry, he wants to select the items such that he would have his profit maximized He may cut the items; the item has a reduced price after cutting that is proportional to the original price by the ratio of masses That means: half of an item has half the price of the original --instructions--\nWrite a function that takes an array of objects representing the items available in the shop Each object has 3 attributes: name, weight, and value The function also takes the maximum weight as a parameter The function should return the maximum value possible, and the total weight of the selected items should not exceed the maximum weight --hints--\nknapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":5 4, \"value\":43, name:\"pork\" }, { \"weight\":3 6, \"value\":90, name:\"ham\" }, { \"weight\":2 4, \"value\":45, name:\"greaves\" }, { \"weight\":4 0, \"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":3 7, \"value\":67, name:\"welt\" }, { \"weight\":3 0, \"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 10) should return 257 875 js\nassert equal(\nknapContinuous(\n[\n{ weight: 3 8, value: 36, name: 'beef' },\n{ weight: 5 4, value: 43, name: 'pork' },\n{ weight: 3 6, value: 90, name: 'ham' },\n{ weight: 2 4, value: 45, name: 'greaves' },\n{ weight: 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "6bdd072e5ed795e2b7f5939ff1966bb3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":3 7, \"value\":67, name:\"welt\" }, { \"weight\":3 0, \"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 10) should return 257 875 js assert equal( knapContinuous( [ { weight: 3 8, value: 36, name: 'beef' }, { weight: 5 4, value: 43, name: 'pork' }, { weight: 3 6, value: 90, name: 'ham' }, { weight: 2 4, value: 45, name: 'greaves' }, { weight: 40, value: 30, name: 'flitch' },\n{ weight: 2 5, value: 56, name: 'brawn' },\n{ weight: 3 7, value: 67, name: 'welt' },\n{ weight: 3 0, value: 95, name: 'salami' },\n{ weight: 5 9, value: 98, name: 'sausage' }\n],\n10\n),\n257 875\n);\nknapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":5 4, \"value\":43, name:\"pork\" }, { \"weight\":3 6, \"value\":90, name:\"ham\" }, { \"weight\":2 4, \"value\":45, name:\"greaves\" }, { \"weight\":4 0, \"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":3 7, \"value\":67, name:\"welt\" }, { \"weight\":3 0, \"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 12) should return 295 05405405405406 js\nassert equal(\nknapContinuous(\n[\n{ weight: 3 8, value: 36, name: 'beef' },\n{ weight: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "89b0ed8d48fa5d69763fe5b0cd2a4ec1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "knapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":5 4, \"value\":43, name:\"pork\" }, { \"weight\":3 6, \"value\":90, name:\"ham\" }, { \"weight\":2 4, \"value\":45, name:\"greaves\" }, { \"weight\":4 0, \"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":3 7, \"value\":67, name:\"welt\" }, { \"weight\":3 0, \"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 12) should return 295 05405405405406 js assert equal( knapContinuous( [ { weight: 3 8, value: 36, name: 'beef' }, { weight: 54, value: 43, name: 'pork' },\n{ weight: 3 6, value: 90, name: 'ham' },\n{ weight: 2 4, value: 45, name: 'greaves' },\n{ weight: 4 0, value: 30, name: 'flitch' },\n{ weight: 2 5, value: 56, name: 'brawn' },\n{ weight: 3 7, value: 67, name: 'welt' },\n{ weight: 3 0, value: 95, name: 'salami' },\n{ weight: 5 9, value: 98, name: 'sausage' }\n],\n12\n),\n295 05405405405406\n);\nknapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":5 4, \"value\":43, name:\"pork\" }, { \"weight\":3 6, \"value\":90, name:\"ham\" }, { \"weight\":2 4, \"value\":45, name:\"greaves\" }, { \"weight\":4 0, \"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "7b2512128513112e9e65f2dac3c5be41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value: 56, name: 'brawn' }, { weight: 3 7, value: 67, name: 'welt' }, { weight: 3 0, value: 95, name: 'salami' }, { weight: 5 9, value: 98, name: 'sausage' } ], 12 ), 295 05405405405406 ); knapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":5 4, \"value\":43, name:\"pork\" }, { \"weight\":3 6, \"value\":90, name:\"ham\" }, { \"weight\":2 4, \"value\":45, name:\"greaves\" }, { \"weight\":4 0, \"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":37, \"value\":67, name:\"welt\" }, { \"weight\":3 0, \"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 15) should return 349 3783783783784 js\nassert equal(\nknapContinuous(\n[\n{ weight: 3 8, value: 36, name: 'beef' },\n{ weight: 5 4, value: 43, name: 'pork' },\n{ weight: 3 6, value: 90, name: 'ham' },\n{ weight: 2 4, value: 45, name: 'greaves' },\n{ weight: 4 0, value: 30, name: 'flitch' },\n{ weight: 2 5, value: 56, name: 'brawn' },\n{ weight: 3 7, value: 67, name: 'welt' },\n{ weight: 3 0, value: 95, name: 'salami' },\n{ weight: 5 9, value: 98, name: 'sausage' }\n],\n15\n),\n349 3783783783784\n);\nknapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "d9d8aa4d7ba0bbc751486cdce3966bd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "weight: 3 6, value: 90, name: 'ham' }, { weight: 2 4, value: 45, name: 'greaves' }, { weight: 4 0, value: 30, name: 'flitch' }, { weight: 2 5, value: 56, name: 'brawn' }, { weight: 3 7, value: 67, name: 'welt' }, { weight: 3 0, value: 95, name: 'salami' }, { weight: 5 9, value: 98, name: 'sausage' } ], 15 ), 349 3783783783784 ); knapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":54, \"value\":43, name:\"pork\" }, { \"weight\":3 6, \"value\":90, name:\"ham\" }, { \"weight\":2 4, \"value\":45, name:\"greaves\" }, { \"weight\":4 0, \"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":3 7, \"value\":67, name:\"welt\" }, { \"weight\":3 0, \"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 22) should return 459 5263157894737 js\nassert equal(\nknapContinuous(\n[\n{ weight: 3 8, value: 36, name: 'beef' },\n{ weight: 5 4, value: 43, name: 'pork' },\n{ weight: 3 6, value: 90, name: 'ham' },\n{ weight: 2 4, value: 45, name: 'greaves' },\n{ weight: 4 0, value: 30, name: 'flitch' },\n{ weight: 2 5, value: 56, name: 'brawn' },\n{ weight: 3 7, value: 67, name: 'welt' },\n{ weight: 3 0, value: 95, name: 'salami' },\n{ weight: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "26f6a8cf2461db74fcfd9346cadc7166",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[ { weight: 3 8, value: 36, name: 'beef' }, { weight: 5 4, value: 43, name: 'pork' }, { weight: 3 6, value: 90, name: 'ham' }, { weight: 2 4, value: 45, name: 'greaves' }, { weight: 4 0, value: 30, name: 'flitch' }, { weight: 2 5, value: 56, name: 'brawn' }, { weight: 3 7, value: 67, name: 'welt' }, { weight: 3 0, value: 95, name: 'salami' }, { weight: 59, value: 98, name: 'sausage' }\n],\n22\n),\n459 5263157894737\n);\nknapContinuous([{ \"weight\":3 8, \"value\":36, name:\"beef\" }, { \"weight\":5 4, \"value\":43, name:\"pork\" }, { \"weight\":3 6, \"value\":90, name:\"ham\" }, { \"weight\":2 4, \"value\":45, name:\"greaves\" }, { \"weight\":4 0, \"value\":30, name:\"flitch\" }, { \"weight\":2 5, \"value\":56, name:\"brawn\" }, { \"weight\":3 7, \"value\":67, name:\"welt\" }, { \"weight\":3 0, \"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 24) should return 478 4736842105263 js\nassert equal(\nknapContinuous(\n[\n{ weight: 3 8, value: 36, name: 'beef' },\n{ weight: 5 4, value: 43, name: 'pork' },\n{ weight: 3 6, value: 90, name: 'ham' },\n{ weight: 2 4, value: 45, name: 'greaves' },\n{ weight: 4 0, value: 30, name: 'flitch' },\n{ weight: 2 5, value: 56, name: 'brawn' },\n{ weight: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "a684b54c775948f2e8122a1b6604b2c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"value\":95, name:\"salami\" }, { \"weight\":5 9, \"value\":98, name:\"sausage\" }], 24) should return 478 4736842105263 js assert equal( knapContinuous( [ { weight: 3 8, value: 36, name: 'beef' }, { weight: 5 4, value: 43, name: 'pork' }, { weight: 3 6, value: 90, name: 'ham' }, { weight: 2 4, value: 45, name: 'greaves' }, { weight: 4 0, value: 30, name: 'flitch' }, { weight: 2 5, value: 56, name: 'brawn' }, { weight: 37, value: 67, name: 'welt' },\n{ weight: 3 0, value: 95, name: 'salami' },\n{ weight: 5 9, value: 98, name: 'sausage' }\n],\n24\n),\n478 4736842105263\n);\n--seed--\n--seed-contents--\n```js\nfunction knapContinuous(items, maxweight) {\n}\n```\n--solutions--\n```js\nfunction knapContinuous(items, maxweight) {\nfunction item_cmp(a, b) {\nconst ua = a unitVal,\nub = b unitVal;\nreturn ua < ub 1 : ua > ub -1 : 0;\n}\nitems = items map(({ value, weight }) => ({\nunitVal: value / weight,\nweight\n}));\nitems sort(item_cmp);\nlet val = 0;\nlet wt = 0;\nfor (let { unitVal, weight } of items) {\nvar portion = Math min(maxweight - wt, weight);\nwt += portion;\nvar addVal = portion * unitVal;\nval += addVal;\nif (wt >= maxweight) {\nbreak;\n}\n}\nreturn val;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-continuous.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "600264768cb717e9e383f1b7e34c91be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\largest-int-from-concatenated-ints.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7edb\ntitle: Largest int from concatenated ints\nchallengeType: 1\nforumTopicId: 302298\ndashedName: largest-int-from-concatenated-ints\n--description--\nGiven a set of positive integers, write a function to order the integers in such a way that the concatenation of the numbers forms the largest possible integer and return this integer --hints--\nmaxCombine should be a function js\nassert(typeof maxCombine == 'function');\nmaxCombine([1, 3, 3, 4, 55]) should return a number js\nassert(typeof maxCombine([1, 3, 3, 4, 55]) == 'number');\nmaxCombine([1, 3, 3, 4, 55]) should return 554331 js\nassert equal(maxCombine([1, 3, 3, 4, 55]), 554331);\nmaxCombine([71, 45, 23, 4, 5]) should return 71545423 js\nassert equal(maxCombine([71, 45, 23, 4, 5]), 71545423);\nmaxCombine([14, 43, 53, 114, 55]) should return 55534314114 js\nassert equal(maxCombine([14, 43, 53, 114, 55]), 55534314114);\nmaxCombine([1, 34, 3, 98, 9, 76, 45, 4]) should return 998764543431 js\nassert equal(maxCombine([1, 34, 3, 98, 9, 76, 45, 4]), 998764543431);\nmaxCombine([54, 546, 548, 60]) should return 6054854654 js\nassert equal(maxCombine([54, 546, 548, 60]), 6054854654);\n--seed--\n--seed-contents--\n```js\nfunction maxCombine(xs) {\n}\n```\n--solutions--\n```js\nfunction maxCombine(xs) {\nreturn parseInt(\nxs sort(function(x, y) {\nvar a = x toString(),\nb = y toString(),\nab = parseInt(a + b),\nba = parseInt(b + a);\nreturn ab > ba -1 : ab < ba",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\largest-int-from-concatenated-ints.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fed71c0386c269b3cba6a01c36c79765",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\largest-int-from-concatenated-ints.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "4]) should return 998764543431 js assert equal(maxCombine([1, 34, 3, 98, 9, 76, 45, 4]), 998764543431); maxCombine([54, 546, 548, 60]) should return 6054854654 js assert equal(maxCombine([54, 546, 548, 60]), 6054854654); --seed-- --seed-contents-- ```js function maxCombine(xs) { } ``` --solutions-- ```js function maxCombine(xs) { return parseInt( xs sort(function(x, y) { var a = x toString(), b = y toString(), ab = parseInt(a + b), ba = parseInt(b + a); return ab > ba -1 : ab < ba1 : 0;\n}) join(''),\n10\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\largest-int-from-concatenated-ints.md",
      "source_type": "git_repo"
    },
    "token_count": 178,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d044a399f1be678f71b0231b43c7d965",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-friday-of-each-month.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7edc\ntitle: Last Friday of each month\nchallengeType: 1\nforumTopicId: 302299\ndashedName: last-friday-of-each-month\n--description--\nWrite a function that returns the date of the last Friday of a given month for a given year.\n--hints--\nlastFriday should be a function.\njs\nassert(typeof lastFriday == 'function');\nlastFriday(2018, 1) should return a number.\njs\nassert(typeof lastFriday(2018, 1) == 'number');\nlastFriday(2018, 1) should return 26.\njs\nassert.equal(lastFriday(2018, 1), 26);\nlastFriday(2017, 2) should return 24.\njs\nassert.equal(lastFriday(2017, 2), 24);\nlastFriday(2012, 3) should return 30.\njs\nassert.equal(lastFriday(2012, 3), 30);\nlastFriday(1900, 4) should return 27.\njs\nassert.equal(lastFriday(1900, 4), 27);\nlastFriday(2000, 5) should return 26.\njs\nassert.equal(lastFriday(2000, 5), 26);\nlastFriday(2006, 6) should return 30.\njs\nassert.equal(lastFriday(2006, 6), 30);\nlastFriday(2010, 7) should return 30.\njs\nassert.equal(lastFriday(2010, 7), 30);\nlastFriday(2005, 8) should return 26.\njs\nassert.equal(lastFriday(2005, 8), 26);\n--seed--\n--seed-contents--\n```js\nfunction lastFriday(year, month) {\n}\n```\n--solutions--\njs\nfunction lastFriday(year, month) {\nvar i, last_day;\ni = 0;\nwhile (true) {\nlast_day = new Date(year, month, i);\nif (last_day.getDay() === 5) {\nreturn last_day.getDate();\n}\ni -= 1;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-friday-of-each-month.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cd7aee6bb2e682b83fc81d58874fcff7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ed4\ntitle: Knapsack problem/Unbounded\nchallengeType: 1\nforumTopicId: 323655\ndashedName: knapsack-problemunbounded\n--description--\nA traveler gets diverted and has to make an unscheduled stop in what turns out to be Shangri-La Opting to leave, he is allowed to take as much as he likes of the items available there, so long as it will fit in his knapsack, and he can carry it He knows that he can carry no more than a particular value of maximum weight in total; and that the capacity of his knapsack has a limited volume Looking just above the bar codes on the items he finds their weights and volumes He digs out his recent copy of a financial paper and gets the value of each item He can only take whole units of any item, but there is much more of any item than he could ever carry --instructions--\nWrite a function that takes an array of objects, maximum weight, and maximum volume as parameters Each object has 4 attributes: name, value, weight, and volume The function should return the maximum value of items the traveller can take with him --hints--\nknapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0 025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0 002 }], 25, 0 25) should return 54500 js\nassert equal(\nknapsackUnbounded(\n[\n{ name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 },\n{ name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 },\n{ name: 'gold', value: 2500, weight: 2, volume: 0 002 }\n],\n25,\n0 25\n),\n54500\n);\nknapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0 025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c0fe8667bf72fda69c8882a44b93550e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "002 }], 25, 0 25) should return 54500 js assert equal( knapsackUnbounded( [ { name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 }, { name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 }, { name: 'gold', value: 2500, weight: 2, volume: 0 002 } ], 25, 0 25 ), 54500 ); knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0 025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0002 }], 55, 0 25) should return 88400 js\nassert equal(\nknapsackUnbounded(\n[\n{ name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 },\n{ name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 },\n{ name: 'gold', value: 2500, weight: 2, volume: 0 002 }\n],\n55,\n0 25\n),\n88400\n);\nknapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0 025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0 002 }], 25, 0 15) should return 42500 js\nassert equal(\nknapsackUnbounded(\n[\n{ name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 },\n{ name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 },\n{ name: 'gold', value: 2500, weight: 2, volume: 0 002 }\n],\n25,\n0 15\n),\n42500\n);\nknapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
      "source_type": "git_repo"
    },
    "token_count": 516,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2cae281e30af3d09f8513efa96db1af9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0 002 }], 25, 0 15) should return 42500 js assert equal( knapsackUnbounded( [ { name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 }, { name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 }, { name: 'gold', value: 2500, weight: 2, volume: 0 002 } ], 25, 0 15 ), 42500 ); knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0 002 }], 35, 0 35) should return 75900 js\nassert equal(\nknapsackUnbounded(\n[\n{ name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 },\n{ name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 },\n{ name: 'gold', value: 2500, weight: 2, volume: 0 002 }\n],\n35,\n0 35\n),\n75900\n);\nknapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0 025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0 002 }], 15, 0 25) should return 43200 js\nassert equal(\nknapsackUnbounded(\n[\n{ name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 },\n{ name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 },\n{ name: 'gold', value: 2500, weight: 2, volume: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "215536ed85d91d57ca9ad1e55b86af5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "002 } ], 35, 0 35 ), 75900 ); knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0 3, volume:0 025 }, { name:\"ichor\", value:1800, weight:0 2, volume:0 015 }, { name:\"gold\", value:2500, weight:2, volume:0 002 }], 15, 0 25) should return 43200 js assert equal( knapsackUnbounded( [ { name: 'panacea', value: 3000, weight: 0 3, volume: 0 025 }, { name: 'ichor', value: 1800, weight: 0 2, volume: 0 015 }, { name: 'gold', value: 2500, weight: 2, volume: 0002 }\n],\n15,\n0 25\n),\n43200\n);\n--seed--\n--seed-contents--\n```js\nfunction knapsackUnbounded(items, maxweight, maxvolume) {\n}\n```\n--solutions--\n```js\nfunction knapsackUnbounded(items, maxWeight, maxVolume) {\nfunction getPickTotals(items, pick) {\nlet totalValue = 0;\nlet totalWeight = 0;\nlet totalVolume = 0;\nfor (let i = 0; i < items length; i++) {\ntotalValue += pick[i] * items[i] value;\ntotalWeight += pick[i] * items[i] weight;\ntotalVolume += pick[i] * items[i] volume;\n}\nreturn [totalValue, totalWeight, totalVolume];\n}\nfunction getMaxes(items, maxWeight, maxVolume) {\nconst maxes = [];\nfor (let i = 0; i < items length; i++) {\nconst maxUnitsInWeight = Math floor(maxWeight / items[i] weight);\nconst maxUnitsInVolume = Math floor(maxVolume / items[i] volume);\nconst maxUnitsInLimit = Math min(maxUnitsInWeight, maxUnitsInVolume);\nmaxes push(maxUnitsInLimit);\n}\nreturn maxes;\n}\nfunction isInLimit(value, limit) {\nreturn value <= limit;\n}\nfunction getCombinations(maxValues, curPicks, combinations) {\nif (maxValues length === 0) {\ncombinations",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "d894876d6b18cb5a4d9554c699043bff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "volume; } return [totalValue, totalWeight, totalVolume]; } function getMaxes(items, maxWeight, maxVolume) { const maxes = []; for (let i = 0; i < items length; i++) { const maxUnitsInWeight = Math floor(maxWeight / items[i] weight); const maxUnitsInVolume = Math floor(maxVolume / items[i] volume); const maxUnitsInLimit = Math min(maxUnitsInWeight, maxUnitsInVolume); maxes push(maxUnitsInLimit); } return maxes; } function isInLimit(value, limit) { return value <= limit; } function getCombinations(maxValues, curPicks, combinations) { if (maxValues length === 0) { combinationspush(curPicks);\n}\nconst curMax = maxValues[0];\nconst leftMaxValues = maxValues slice(1);\nfor (let i = 0; i <= curMax; i++) {\ngetCombinations(leftMaxValues, curPicks concat(i), combinations);\n}\nreturn combinations;\n}\nlet bestValue = 0;\nlet bestPick = [];\nconst maxes = getMaxes(items, maxWeight, maxVolume);\nconst combinations = getCombinations(maxes, [], []);\nfor (let i = 0; i < combinations length; i++) {\nconst curPick = combinations[i];\nconst [curValue, curWeight, curVolume] = getPickTotals(items, curPick);\nif ( isInLimit(curWeight, maxWeight) || isInLimit(curVolume, maxVolume)) {\ncontinue;\n}\nif (curValue > bestValue) {\nbestValue = curValue;\nbestPick = [curPick];\n} else if (curValue === bestValue) {\nbestPick push(curPick);\n}\n}\nreturn bestValue;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-unbounded.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "9cc6deceb4f81a05ca8b2df0ef58d582",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ed5\ntitle: Knight's tour\nchallengeType: 1\nforumTopicId: 302297\ndashedName: knights-tour\n--description--\nKnight's Tour Problem: You have an empty width * height chessboard, but for a single knight on some square The knight must perform a sequence of legal moves that result in the knight visiting every square on the chessboard exactly once Note that it is not a requirement that the tour be \"closed\"; that is, the knight need not end within a single move of its start position --instructions--\nWrite a function that takes width and height as parameters and returns the number of initial positions from where it is possible to achieve the task stated above --hints--\nknightTour should be a function js\nassert(typeof knightTour == 'function');\nknightTour(6, 6) should return a number js\nassert(typeof knightTour(6, 6) == 'number');\nknightTour(6, 6) should return 36 js\nassert equal(knightTour(6, 6), 36);\nknightTour(5, 6) should return 30 js\nassert equal(knightTour(5, 6), 30);\nknightTour(4, 6) should return 12 js\nassert equal(knightTour(4, 6), 12);\nknightTour(7, 3) should return 10 js\nassert equal(knightTour(7, 3), 10);\nknightTour(8, 6) should return 48 js\nassert equal(knightTour(8, 6), 48);\n--seed--\n--seed-contents--\n```js\nfunction knightTour(width, height) {\n}\n```\n--solutions--\n```js\nfunction knightTour(width, height) {\nfunction createBoards(rows, columns) {\nconst board = [];\nconst visited = [];\nfor (let i = 0; i < rows; i++) {\nboard push(new Array(columns) fill(-1));\nvisited push(new Array(columns) fill(false));\n}\nreturn [board, visited];\n}\nfunction copyBoard(board) {\nconst copied = [];\nfor (let i = 0; i < board length; i++) {\ncopied push([",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "29237811347445faa724c3d4b87272d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "48 js assert equal(knightTour(8, 6), 48); --seed-- --seed-contents-- ```js function knightTour(width, height) { } ``` --solutions-- ```js function knightTour(width, height) { function createBoards(rows, columns) { const board = []; const visited = []; for (let i = 0; i < rows; i++) { board push(new Array(columns) fill(-1)); visited push(new Array(columns) fill(false)); } return [board, visited]; } function copyBoard(board) { const copied = []; for (let i = 0; i < board length; i++) { copied push([board[i]]);\n}\nreturn copied;\n}\nfunction isOnBoard(value, limit) {\nreturn value >= 0 && value < limit;\n}\nfunction markVisited(board, visited, row, column) {\nvisited[row][column] = true;\nboard[row][column] = -1;\n}\nfunction areAllVisited(visited) {\nreturn (\nvisited filter(row => row filter(column => column === false) length == 0) length === 0\n);\n}\nfunction getMovesFrom(board, row, column) {\nconst possibleMoves = [];\nfor (let i = 0; i < moves length; i++) {\nconst [rowChange, colChange] = moves[i];\nconst [rowN, colN] = [row + rowChange, column + colChange];\nif ( isOnBoard(rowN, board length) || isOnBoard(colN, board[0] length)) {\ncontinue;\n}\npossibleMoves push([rowN, colN]);\n}\nreturn possibleMoves;\n}\nfunction fillAllowedMovesCounts(board) {\nfor (let row = 0; row < board length; row++) {\nfor (let column = 0; column < board[0] length; column++) {\nboard[row][column] = getMovesFrom(board, row, column) length;\n}\n}\n}\nfunction updateAllowedMovesCounts(board, possibleMoves) {\nfor (let i = 0; i < possibleMoves",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "367c195429bbfd57a77e9e49aac20dd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "moves[i]; const [rowN, colN] = [row + rowChange, column + colChange]; if ( isOnBoard(rowN, board length) || isOnBoard(colN, board[0] length)) { continue; } possibleMoves push([rowN, colN]); } return possibleMoves; } function fillAllowedMovesCounts(board) { for (let row = 0; row < board length; row++) { for (let column = 0; column < board[0] length; column++) { board[row][column] = getMovesFrom(board, row, column) length; } } } function updateAllowedMovesCounts(board, possibleMoves) { for (let i = 0; i < possibleMoveslength; i++) {\nconst [row, column] = possibleMoves[i];\nif (board[row][column] > 0) {\nboard[row][column]--;\n}\n}\n}\nfunction getBestNextMoves(board, allowedMoves) {\nlet bestMoves = [];\nlet fewestNextMoves = Infinity;\nlet zeroMove = [];\nfor (let i = 0; i < allowedMoves length; i++) {\nconst [moveRow, moveCol] = allowedMoves[i];\nconst numMoves = board[moveRow][moveCol];\nif (numMoves === -1) {\ncontinue;\n}\nif (numMoves === 0) {\nzeroMove push(allowedMoves[i]);\n}\nif (numMoves < fewestNextMoves) {\nbestMoves = [allowedMoves[i]];\nfewestNextMoves = numMoves;\n} else if (numMoves === fewestNextMoves) {\nbestMoves push(allowedMoves[i]);\n}\n}\nif (bestMoves length > 0) {\nreturn bestMoves;\n}\nreturn zeroMove;\n}\nfunction solve(board, visited, lastRow, lastColumn) {\nif (areAllVisited(visited)) {\nreturn true;\n}\nconst nextMoves = getMovesFrom(board, lastRow, lastColumn);\nupdateAllowedMovesCounts(board, nextMoves);\nconst allowedMoves = nextMoves filter(\n([row, column]) => visited[row][column]\n);\nconst bestMoves = getBestNextMoves(board, allowedMoves);\nconst restMoves = allowedMoves filter(\nmove => bestMoves indexOf(move) === -1\n);\nconst possibleMoves = [ bestMoves];\npossibleMoves push( getBestNextMoves(board, restMoves));\nfor (let i = 0; i < possibleMoves",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "c5996923c8d089b153198cb8a99095cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "if (bestMoves length > 0) { return bestMoves; } return zeroMove; } function solve(board, visited, lastRow, lastColumn) { if (areAllVisited(visited)) { return true; } const nextMoves = getMovesFrom(board, lastRow, lastColumn); updateAllowedMovesCounts(board, nextMoves); const allowedMoves = nextMoves filter( ([row, column]) => visited[row][column] ); const bestMoves = getBestNextMoves(board, allowedMoves); const restMoves = allowedMoves filter( move => bestMoves indexOf(move) === -1 ); const possibleMoves = [ bestMoves]; possibleMoves push( getBestNextMoves(board, restMoves)); for (let i = 0; i < possibleMoveslength; i++) {\nconst [moveRow, moveCol] = possibleMoves[i];\nconst newBoard = copyBoard(board);\nconst newVisited = copyBoard(visited);\nmarkVisited(newBoard, newVisited, moveRow, moveCol);\nif (solve(newBoard, newVisited, moveRow, moveCol)) {\nreturn true;\n}\n}\nreturn false;\n}\nfunction solveStart(board, visited, startRow, startColumn) {\nconst newBoard = copyBoard(board);\nconst newVisited = copyBoard(visited);\nmarkVisited(newBoard, newVisited, startRow, startColumn);\nreturn solve(newBoard, newVisited, startRow, startColumn);\n}\nconst moves = [\n[-1, -2],\n[-2, -1],\n[-2, 1],\n[-1, 2],\n[1, 2],\n[2, 1],\n[2, -1],\n[1, -2]\n];\nconst [baseBoard, baseVisited] = createBoards(height, width);\nfillAllowedMovesCounts(baseBoard);\nlet solvedCount = 0;\nfor (let row = 0; row < height; row++) {\nfor (let column = 0; column < width; column++) {\nif (solveStart(baseBoard, baseVisited, row, column)) {\nsolvedCount++;\n}\n}\n}\nreturn solvedCount;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knights-tour.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d9783c0b8edfb71b5f836c8b4dc247bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\leap-year.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ede\ntitle: Leap year\nchallengeType: 1\nforumTopicId: 302300\ndashedName: leap-year\n--description--\nDetermine whether a given year is a leap year in the Gregorian calendar.\n--hints--\nisLeapYear should be a function.\njs\nassert(typeof isLeapYear == 'function');\nisLeapYear() should return a boolean.\njs\nassert(typeof isLeapYear(2018) == 'boolean');\nisLeapYear(2018) should return false.\njs\nassert.equal(isLeapYear(2018), false);\nisLeapYear(2016) should return true.\njs\nassert.equal(isLeapYear(2016), true);\nisLeapYear(2000) should return true.\njs\nassert.equal(isLeapYear(2000), true);\nisLeapYear(1900) should return false.\njs\nassert.equal(isLeapYear(1900), false);\nisLeapYear(1996) should return true.\njs\nassert.equal(isLeapYear(1996), true);\nisLeapYear(1800) should return false.\njs\nassert.equal(isLeapYear(1800), false);\n--seed--\n--seed-contents--\n```js\nfunction isLeapYear(year) {\n}\n```\n--solutions--\njs\nfunction isLeapYear(year) {\nreturn year % 100 === 0 ? year % 400 === 0 : year % 4 === 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1155,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\leap-year.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "45a5d26a7e9716ced8c63b2b9d49b18b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ed2\ntitle: Knapsack problem/Bounded\nchallengeType: 1\nforumTopicId: 323652\ndashedName: knapsack-problembounded\n--description--\nThe bounded knapsack problem is defined as follows:\nYou are given an array of objects representing items to be put in a knapsack The objects have 4 attributes: name, pieces (the number of the particular item), weight, and value The items need to be selected so that the total weight does not exceed the maximum weight and the value is maximized Keep in mind that each item can appear between 0 and pieces times --instructions--\nWrite a function to solve the knapsack problem The function is given the array of objects and the maximum weight as parameters It should return the maximum total value possible --hints--\nfindBestPack([{ name:'map', weight:9, value:150, pieces:1 }, { name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 300) should return 755 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "014c6c95fde6dcf03af3979f7e8d7dfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 300) should return 755 js assertequal(\nfindBestPack(\n[\n{ name: 'map', weight: 9, value: 150, pieces: 1 },\n{ name: 'compass', weight: 13, value: 35, pieces: 1 },\n{ name: 'water', weight: 153, value: 200, pieces: 2 },\n{ name: 'sandwich', weight: 50, value: 60, pieces: 2 },\n{ name: 'glucose', weight: 15, value: 60, pieces: 2 },\n{ name: 'tin', weight: 68, value: 45, pieces: 3 },\n{ name: 'banana', weight: 27, value: 60, pieces: 3 },\n{ name: 'apple', weight: 39, value: 40, pieces: 3 },\n{ name: 'cheese', weight: 23, value: 30, pieces: 1 },\n{ name: 'beer', weight: 52, value: 10, pieces: 3 },\n{ name: 'suntan, cream', weight: 11, value: 70, pieces: 1 },\n{ name: 'camera', weight: 32, value: 30, pieces: 1 },\n{ name: 'T-shirt', weight: 24, value: 15, pieces: 2 }\n],\n300\n),\n755\n);\nfindBestPack([{ name:'map', weight:9, value:150, pieces:1 }, { name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 400) should return 875",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 748,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "b0ec5ac0c930002658ca2774877a8e51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 400) should return 875js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "7d63e626de333e468114697ca0ef71bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 400) should return 875js assertequal(\nfindBestPack(\n[\n{ name: 'map', weight: 9, value: 150, pieces: 1 },\n{ name: 'compass', weight: 13, value: 35, pieces: 1 },\n{ name: 'water', weight: 153, value: 200, pieces: 2 },\n{ name: 'sandwich', weight: 50, value: 60, pieces: 2 },\n{ name: 'glucose', weight: 15, value: 60, pieces: 2 },\n{ name: 'tin', weight: 68, value: 45, pieces: 3 },\n{ name: 'banana', weight: 27, value: 60, pieces: 3 },\n{ name: 'apple', weight: 39, value: 40, pieces: 3 },\n{ name: 'cheese', weight: 23, value: 30, pieces: 1 },\n{ name: 'beer', weight: 52, value: 10, pieces: 3 },\n{ name: 'suntan, cream', weight: 11, value: 70, pieces: 1 },\n{ name: 'camera', weight: 32, value: 30, pieces: 1 },\n{ name: 'T-shirt', weight: 24, value: 15, pieces: 2 }\n],\n400\n),\n875\n);\nfindBestPack([{ name:'map', weight:9, value:150, pieces:1 }, { name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 500) should return 1015",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 753,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "5d96a00cc82c58f0b2141dd6d3820530",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 500) should return 1015js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "3b607d9fa7d74adcb6f7c20be66b39c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 500) should return 1015js assertequal(\nfindBestPack(\n[\n{ name: 'map', weight: 9, value: 150, pieces: 1 },\n{ name: 'compass', weight: 13, value: 35, pieces: 1 },\n{ name: 'water', weight: 153, value: 200, pieces: 2 },\n{ name: 'sandwich', weight: 50, value: 60, pieces: 2 },\n{ name: 'glucose', weight: 15, value: 60, pieces: 2 },\n{ name: 'tin', weight: 68, value: 45, pieces: 3 },\n{ name: 'banana', weight: 27, value: 60, pieces: 3 },\n{ name: 'apple', weight: 39, value: 40, pieces: 3 },\n{ name: 'cheese', weight: 23, value: 30, pieces: 1 },\n{ name: 'beer', weight: 52, value: 10, pieces: 3 },\n{ name: 'suntan, cream', weight: 11, value: 70, pieces: 1 },\n{ name: 'camera', weight: 32, value: 30, pieces: 1 },\n{ name: 'T-shirt', weight: 24, value: 15, pieces: 2 }\n],\n500\n),\n1015\n);\nfindBestPack([{ name:'map', weight:9, value:150, pieces:1 }, { name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 600) should return 1120",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 755,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "19ccb0cb2892c6c38ba882dcbc8dd79c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 600) should return 1120js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "2901dee7f091729e33533fa7b700b036",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 600) should return 1120js assertequal(\nfindBestPack(\n[\n{ name: 'map', weight: 9, value: 150, pieces: 1 },\n{ name: 'compass', weight: 13, value: 35, pieces: 1 },\n{ name: 'water', weight: 153, value: 200, pieces: 2 },\n{ name: 'sandwich', weight: 50, value: 60, pieces: 2 },\n{ name: 'glucose', weight: 15, value: 60, pieces: 2 },\n{ name: 'tin', weight: 68, value: 45, pieces: 3 },\n{ name: 'banana', weight: 27, value: 60, pieces: 3 },\n{ name: 'apple', weight: 39, value: 40, pieces: 3 },\n{ name: 'cheese', weight: 23, value: 30, pieces: 1 },\n{ name: 'beer', weight: 52, value: 10, pieces: 3 },\n{ name: 'suntan, cream', weight: 11, value: 70, pieces: 1 },\n{ name: 'camera', weight: 32, value: 30, pieces: 1 },\n{ name: 'T-shirt', weight: 24, value: 15, pieces: 2 }\n],\n600\n),\n1120\n);\nfindBestPack([{ name:'map', weight:9, value:150, pieces:1 }, { name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 700) should return 1225",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 755,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "fbb3356c443cdcc45adfe737940d24f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name:'compass', weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 700) should return 1225js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "e49a6ab3485ec8850aa68dca4631d082",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "weight:13, value:35, pieces:1 }, { name:'water', weight:153, value:200, pieces:2 }, { name:'sandwich', weight:50, value:60, pieces:2 }, { name:'glucose', weight:15, value:60, pieces:2 }, { name:'tin', weight:68, value:45, pieces:3 }, { name:'banana', weight:27, value:60, pieces:3 }, { name:'apple', weight:39, value:40, pieces:3 }, { name:'cheese', weight:23, value:30, pieces:1 }, { name:'beer', weight:52, value:10, pieces:3 }, { name:'suntan, cream', weight:11, value:70, pieces:1 }, { name:'camera', weight:32, value:30, pieces:1 }, { name:'T-shirt', weight:24, value:15, pieces:2 }], 700) should return 1225js assertequal(\nfindBestPack(\n[\n{ name: 'map', weight: 9, value: 150, pieces: 1 },\n{ name: 'compass', weight: 13, value: 35, pieces: 1 },\n{ name: 'water', weight: 153, value: 200, pieces: 2 },\n{ name: 'sandwich', weight: 50, value: 60, pieces: 2 },\n{ name: 'glucose', weight: 15, value: 60, pieces: 2 },\n{ name: 'tin', weight: 68, value: 45, pieces: 3 },\n{ name: 'banana', weight: 27, value: 60, pieces: 3 },\n{ name: 'apple', weight: 39, value: 40, pieces: 3 },\n{ name: 'cheese', weight: 23, value: 30, pieces: 1 },\n{ name: 'beer', weight: 52, value: 10, pieces: 3 },\n{ name: 'suntan, cream', weight: 11, value: 70, pieces: 1 },\n{ name: 'camera', weight: 32, value: 30, pieces: 1 },\n{ name: 'T-shirt', weight: 24, value: 15, pieces: 2 }\n],\n700\n),\n1225\n);\n--seed--\n--seed-contents--\n```js\nfunction findBestPack(data, maxweight) {\n}\n```\n--solutions--\n```js\nfunction findBestPack(data, maxweight) {\nvar m = [[0]]; // maximum pack value found so far\nvar b = [[0]]; // best combination found so far\nvar opts = [0]; // item index for 0 of item 0\nvar P = [1]; // item encoding for 0 of item 0\nvar choose = 0;\nfor (var j = 0; j < data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 633,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "29dd0c5114c203f7d1be21c00f108ce9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "700 ), 1225 ); --seed-- --seed-contents-- ```js function findBestPack(data, maxweight) { } ``` --solutions-- ```js function findBestPack(data, maxweight) { var m = [[0]]; // maximum pack value found so far var b = [[0]]; // best combination found so far var opts = [0]; // item index for 0 of item 0 var P = [1]; // item encoding for 0 of item 0 var choose = 0; for (var j = 0; j < datalength; j++) {\nopts[j + 1] = opts[j] + data[j] pieces; // item index for 0 of item j+1\nP[j + 1] = P[j] * (1 + data[j] pieces); // item encoding for 0 of item j+1\n}\nfor (var j = 0; j < opts[data length]; j++) {\nm[0][j + 1] = b[0][j + 1] = 0; // best values and combos for empty pack: nothing\n}\nfor (var w = 1; w <= maxweight; w++) {\nm[w] = [0];\nb[w] = [0];\nfor (var j = 0; j < data length; j++) {\nvar N = data[j] pieces; // how many of these can we have var base = opts[j]; // what is the item index for 0 of these for (var n = 1; n <= N; n++) {\nvar W = n * data[j] weight; // how much do these items weigh var s = w >= W 1 : 0; // can we carry this many var v = s * n * data[j] value; // how much are they worth var I = base + n; // what is the item number for this many var wN = w - s * W; // how much other stuff can we be carrying var C = n * P[j] + b[wN][base]; // encoded combination\nm[w][I] = Math max(m[w][I - 1], v + m[wN][base]); // best value\nchoose = b[w][I] = m[w][I] > m[w][I - 1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "00ba84b8c52d05312fee2a889f982894",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "s * n * data[j] value; // how much are they worth var I = base + n; // what is the item number for this many var wN = w - s * W; // how much other stuff can we be carrying var C = n * P[j] + b[wN][base]; // encoded combination m[w][I] = Math max(m[w][I - 1], v + m[wN][base]); // best value choose = b[w][I] = m[w][I] > m[w][I - 1]C : b[w][I - 1];\n}\n}\n}\nvar best = [];\nfor (var j = data length - 1; j >= 0; j--) {\nbest[j] = Math floor(choose / P[j]);\nchoose -= best[j] * P[j];\n}\nvar wgt = 0;\nvar val = 0;\nfor (var i = 0; i < best length; i++) {\nif (0 == best[i]) continue;\nwgt += best[i] * data[i] weight;\nval += best[i] * data[i] value;\n}\nreturn val;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\knapsack-problem-bounded.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "a32cb07f011806560ce0dd8a70c77534",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\least-common-multiple.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7edf\ntitle: Least common multiple\nchallengeType: 1\nforumTopicId: 302301\ndashedName: least-common-multiple\n--description--\nThe least common multiple of 12 and 18 is 36, because 12 is a factor (12 × 3 = 36), and 18 is a factor (18 × 2 = 36), and there is no positive integer less than 36 that has both factors As a special case, if either $m$ or $n$ is zero, then the least common multiple is zero One way to calculate the least common multiple is to iterate all the multiples of $m$, until you find one that is also a multiple of $n$ If you already have $gcd$ for greatest common divisor, then this formula calculates $lcm$ $$\n\\operatorname{lcm}(m, n) = \\frac{|m \\times n|}{\\operatorname{gcd}(m, n)}\n$$\n--instructions--\nCompute the least common multiple of an array of integers Given m and n, the least common multiple is the smallest positive integer that has both m and n as factors --hints--\nLCM should be a function js\nassert(typeof LCM == 'function');\nLCM([2, 4, 8]) should return a number js\nassert(typeof LCM([2, 4, 8]) == 'number');\nLCM([2, 4, 8]) should return 8 js\nassert equal(LCM([2, 4, 8]), 8);\nLCM([4, 8, 12]) should return 24 js\nassert equal(LCM([4, 8, 12]), 24);\nLCM([3, 4, 5, 12, 40]) should return 120 js\nassert equal(LCM([3, 4, 5, 12, 40]), 120);\nLCM([11, 33, 90]) should return 990 js\nassert equal(LCM([11, 33, 90]), 990);\nLCM([-50, 25, -45, -18, 90, 447]) should return 67050 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\least-common-multiple.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b00112fbd4c0da4dd32a3b2b7d1317d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\least-common-multiple.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "4, 8]) should return a number js assert(typeof LCM([2, 4, 8]) == 'number'); LCM([2, 4, 8]) should return 8 js assert equal(LCM([2, 4, 8]), 8); LCM([4, 8, 12]) should return 24 js assert equal(LCM([4, 8, 12]), 24); LCM([3, 4, 5, 12, 40]) should return 120 js assert equal(LCM([3, 4, 5, 12, 40]), 120); LCM([11, 33, 90]) should return 990 js assert equal(LCM([11, 33, 90]), 990); LCM([-50, 25, -45, -18, 90, 447]) should return 67050 js assertequal(LCM([-50, 25, -45, -18, 90, 447]), 67050);\n--seed--\n--seed-contents--\n```js\nfunction LCM(A) {\n}\n```\n--solutions--\njs\nfunction LCM(A) {\nvar n = A length,\na = Math abs(A[0]);\nfor (var i = 1; i < n; i++) {\nvar b = Math abs(A[i]),\nc = a;\nwhile (a && b) {\na > b (a %= b) : (b %= a);\n}\na = Math abs(c * A[i]) / (a + b);\n}\nreturn a;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\least-common-multiple.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1600495b8429d42ed0dbcbca454c1f84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\left-factorials.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ee0\ntitle: Left factorials\nchallengeType: 1\nforumTopicId: 302302\ndashedName: left-factorials\n--description--\nLeft factorials, $ n $, may refer to either subfactorials or to factorial sums The same notation can be confusingly seen used for the two different definitions Sometimes, subfactorials (also known as derangements) may use any of the notations:\n$ n`$\n$ n$\n$n¡$\n(It may not be visually obvious, but the last example uses an upside-down exclamation mark ) This task will be using this formula for left factorial:\n$ n = \\sum_{k=0}^{n-1} k $\nwhere $ 0 = 0$\n--instructions--\nWrite a function to calculate the left factorial of a given number --hints--\nleftFactorial should be a function js\nassert(typeof leftFactorial == 'function');\nleftFactorial(0) should return a number js\nassert(typeof leftFactorial(0) == 'number');\nleftFactorial(0) should return 0 js\nassert equal(leftFactorial(0), 0);\nleftFactorial(1) should return 1 js\nassert equal(leftFactorial(1), 1);\nleftFactorial(2) should return 2 js\nassert equal(leftFactorial(2), 2);\nleftFactorial(3) should return 4 js\nassert equal(leftFactorial(3), 4);\nleftFactorial(10) should return 409114 js\nassert equal(leftFactorial(10), 409114);\nleftFactorial(17) should return 22324392524314 js\nassert equal(leftFactorial(17), 22324392524314);\nleftFactorial(19) should return 6780385526348314 js\nassert equal(leftFactorial(19), 6780385526348314);\n--seed--\n--seed-contents--\n```js\nfunction leftFactorial(n) {\n}\n```\n--solutions--\n```js\nfunction leftFactorial(n) {\nif (n == 0) return 0;\nif (n == 1) return 1;\n// Note: for n>=20, the result may not be correct // This is because JavaScript uses 53 bit integers and\n// for n>=20 result becomes too large",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\left-factorials.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b557a39e1aa6b516b6ed6411ba9eefa9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\left-factorials.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "leftFactorial(10) should return 409114 js assert equal(leftFactorial(10), 409114); leftFactorial(17) should return 22324392524314 js assert equal(leftFactorial(17), 22324392524314); leftFactorial(19) should return 6780385526348314 js assert equal(leftFactorial(19), 6780385526348314); --seed-- --seed-contents-- ```js function leftFactorial(n) { } ``` --solutions-- ```js function leftFactorial(n) { if (n == 0) return 0; if (n == 1) return 1; // Note: for n>=20, the result may not be correct // This is because JavaScript uses 53 bit integers and // for n>=20 result becomes too largelet res = 2,\nfact = 2;\nfor (var i = 2; i < n; i++) {\nres += fact;\nfact *= i + 1;\n}\nreturn res;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\left-factorials.md",
      "source_type": "git_repo"
    },
    "token_count": 217,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "36f0740c8dfec67e457f263a8be13a6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\levenshtein-distance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e4ce2eaac708cc68c1df260\ntitle: Levenshtein distance\nchallengeType: 1\nforumTopicId: 385264\ndashedName: levenshtein-distance\n--description--\nIn information theory and computer science, the Levenshtein distance is a metric for measuring the amount of difference between two sequences (i e an edit distance) The Levenshtein distance between two strings is defined as the minimum number of edits needed to transform one string into the other, with the allowable edit operations being insertion, deletion, or substitution of a single character Example:\nThe Levenshtein distance between \"kitten\" and \"sitting\" is 3, since the following three edits change one into the other, and there isn't a way to do it with fewer than three edits:\nkitten   sitten    (substitution of 'k' with 's')\nsitten   sittin    (substitution of 'e' with 'i')\nsittin   sitting    (insert 'g' at the end) The Levenshtein distance between \"rosettacode\", \"raisethysword\" is 8 The distance between two strings is same as that when both strings are reversed --instructions--\nWrite a function that returns the Levenshtein distance between two strings given as parameters --hints--\nlevenshtein should be a function js\nassert(typeof levenshtein == 'function');\nlevenshtein(\"mist\", \"dist\") should return a number js\nassert(typeof levenshtein('mist', 'dist') == 'number');\nlevenshtein(\"mist\", \"dist\") should return 1 js\nassert equal(levenshtein('mist', 'dist'), 1);\nlevenshtein(\"tier\", \"tor\") should return 2 js\nassert equal(levenshtein('tier', 'tor'), 2);\nlevenshtein(\"kitten\", \"sitting\") should return 3 js\nassert equal(levenshtein('kitten', 'sitting'), 3);\nlevenshtein(\"stop\", \"tops\") should return 2 js\nassert equal(levenshtein('stop', 'tops'), 2);\nlevenshtein(\"rosettacode\", \"raisethysword\") should return 8 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2728,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\levenshtein-distance.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4a5a67c14df9616fde8e313e2b553686",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\levenshtein-distance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "between two strings given as parameters --hints-- levenshtein should be a function js assert(typeof levenshtein == 'function'); levenshtein(\"mist\", \"dist\") should return a number js assert(typeof levenshtein('mist', 'dist') == 'number'); levenshtein(\"mist\", \"dist\") should return 1 js assert equal(levenshtein('mist', 'dist'), 1); levenshtein(\"tier\", \"tor\") should return 2 js assert equal(levenshtein('tier', 'tor'), 2); levenshtein(\"kitten\", \"sitting\") should return 3 js assert equal(levenshtein('kitten', 'sitting'), 3); levenshtein(\"stop\", \"tops\") should return 2 js assert equal(levenshtein('stop', 'tops'), 2); levenshtein(\"rosettacode\", \"raisethysword\") should return 8 js assertequal(levenshtein('rosettacode', 'raisethysword'), 8);\nlevenshtein(\"mississippi\", \"swiss miss\") should return 8 js\nassert equal(levenshtein('mississippi', 'swiss miss'), 8);\n--seed--\n--seed-contents--\n```js\nfunction levenshtein(a, b) {\n}\n```\n--solutions--\njs\nfunction levenshtein(a, b) {\nvar t = [], u, i, j, m = a length, n = b length;\nif ( m) { return n; }\nif ( n) { return m; }\nfor (j = 0; j <= n; j++) { t[j] = j; }\nfor (i = 1; i <= m; i++) {\nfor (u = [i], j = 1; j <= n; j++) {\nu[j] = a[i - 1] === b[j - 1] t[j - 1] : Math min(t[j - 1], t[j], u[j - 1]) + 1;\n} t = u;\n} return u[n];\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2728,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\levenshtein-distance.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "38b61bef96b2d1d48737269df136469f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e4ce2b6ac708cc68c1df25e\ntitle: Last letter-first letter\nchallengeType: 1\nforumTopicId: 385256\ndashedName: last-letter-first-letter\n--description--\nA certain children's game involves starting with a word in a particular category Each participant in turn says a word, but that word must begin with the final letter of the previous word Once a word has been given, it cannot be repeated If an opponent cannot give a word in the category, they fall out of the game For example, with \"animals\" as the category,\nChild 1: dog\nChild 2: goldfish\nChild 1: hippopotamus\nChild 2: snake --instructions--\nWrite a function that takes an input array of words The function should return an array of words where the first letter of each word is the same as the last letter of the previous word Only use the words in the input array, and once a word is used it cannot be repeated The words in the return array should be selected and sequenced so that its length is maximized --hints--\nfindLongestChain should be a function js\nassert(typeof findLongestChain == 'function');\nfindLongestChain([\"certain\", \"each\", \"game\", \"involves\", \"starting\", \"with\", \"word\"]) should return an array js\nassert(\nArray isArray(\nfindLongestChain([\n'certain',\n'each',\n'game',\n'involves',\n'starting',\n'with',\n'word'\n])\n)\n);\nfindLongestChain([\"certain\", \"each\", \"game\", \"involves\", \"starting\", \"with\", \"word\"]) should return [\"involves\", \"starting\", \"game\", \"each\"] js\nassert deepEqual(\nfindLongestChain([\n'certain',\n'each',\n'game',\n'involves',\n'starting',\n'with',\n'word'\n]),\n['involves', 'starting', 'game', 'each']\n);\nfindLongestChain([\"audino\", \"bagon\", \"kangaskhan\", \"banette\", \"bidoof\", \"braviary\", \"exeggcute\", \"yamask\"]) should return [\"braviary\", \"yamask\", \"kangaskhan\"]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "d553194a584ea89f187ad161c7436c9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert(typeof findLongestChain == 'function'); findLongestChain([\"certain\", \"each\", \"game\", \"involves\", \"starting\", \"with\", \"word\"]) should return an array js assert( Array isArray( findLongestChain([ 'certain', 'each', 'game', 'involves', 'starting', 'with', 'word' ]) ) ); findLongestChain([\"certain\", \"each\", \"game\", \"involves\", \"starting\", \"with\", \"word\"]) should return [\"involves\", \"starting\", \"game\", \"each\"] js assert deepEqual( findLongestChain([ 'certain', 'each', 'game', 'involves', 'starting', 'with', 'word' ]), ['involves', 'starting', 'game', 'each'] ); findLongestChain([\"audino\", \"bagon\", \"kangaskhan\", \"banette\", \"bidoof\", \"braviary\", \"exeggcute\", \"yamask\"]) should return [\"braviary\", \"yamask\", \"kangaskhan\"] js assertdeepEqual(\nfindLongestChain([\n'audino',\n'bagon',\n'kangaskhan',\n'banette',\n'bidoof',\n'braviary',\n'exeggcute',\n'yamask'\n]),\n['braviary', 'yamask', 'kangaskhan']\n);\nfindLongestChain([\"harp\", \"poliwrath\", \"poochyena\", \"porygon2\", \"porygonz\", \"archana\"]) should return [\"poliwrath\", \"harp\", \"poochyena\", \"archana\"] js\nassert deepEqual(\nfindLongestChain([\n'harp',\n'poliwrath',\n'poochyena',\n'porygon2',\n'porygonz',\n'archana'\n]),\n['poliwrath', 'harp', 'poochyena', 'archana']\n);\nfindLongestChain([\"scolipede\", \"elephant\", \"zeaking\", \"sealeo\", \"silcoon\", \"tigers\"]) should return [\"scolipede\", \"elephant\", \"tigers\", \"sealeo\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "7298e56fefa0d988f5eb87c900828f6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "['involves', 'starting', 'game', 'each'] ); findLongestChain([\"audino\", \"bagon\", \"kangaskhan\", \"banette\", \"bidoof\", \"braviary\", \"exeggcute\", \"yamask\"]) should return [\"braviary\", \"yamask\", \"kangaskhan\"] js assertdeepEqual( findLongestChain([ 'audino', 'bagon', 'kangaskhan', 'banette', 'bidoof', 'braviary', 'exeggcute', 'yamask' ]), ['braviary', 'yamask', 'kangaskhan'] ); findLongestChain([\"harp\", \"poliwrath\", \"poochyena\", \"porygon2\", \"porygonz\", \"archana\"]) should return [\"poliwrath\", \"harp\", \"poochyena\", \"archana\"] js assert deepEqual( findLongestChain([ 'harp', 'poliwrath', 'poochyena', 'porygon2', 'porygonz', 'archana' ]), ['poliwrath', 'harp', 'poochyena', 'archana'] ); findLongestChain([\"scolipede\", \"elephant\", \"zeaking\", \"sealeo\", \"silcoon\", \"tigers\"]) should return [\"scolipede\", \"elephant\", \"tigers\", \"sealeo\"] js assertdeepEqual(\nfindLongestChain([\n'scolipede',\n'elephant',\n'zeaking',\n'sealeo',\n'silcoon',\n'tigers'\n]),\n['scolipede', 'elephant', 'tigers', 'sealeo']\n);\nfindLongestChain([\"loudred\", \"lumineon\", \"lunatone\", \"machamp\", \"magnezone\", \"nosepass\", \"petilil\", \"pidgeotto\", \"pikachu\"]) should return [\"machamp\", \"petilil\", \"lumineon\", \"nosepass\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "9d80d67c17d0de7abde0abfd8d59a96a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "['braviary', 'yamask', 'kangaskhan'] ); findLongestChain([\"harp\", \"poliwrath\", \"poochyena\", \"porygon2\", \"porygonz\", \"archana\"]) should return [\"poliwrath\", \"harp\", \"poochyena\", \"archana\"] js assert deepEqual( findLongestChain([ 'harp', 'poliwrath', 'poochyena', 'porygon2', 'porygonz', 'archana' ]), ['poliwrath', 'harp', 'poochyena', 'archana'] ); findLongestChain([\"scolipede\", \"elephant\", \"zeaking\", \"sealeo\", \"silcoon\", \"tigers\"]) should return [\"scolipede\", \"elephant\", \"tigers\", \"sealeo\"] js assertdeepEqual( findLongestChain([ 'scolipede', 'elephant', 'zeaking', 'sealeo', 'silcoon', 'tigers' ]), ['scolipede', 'elephant', 'tigers', 'sealeo'] ); findLongestChain([\"loudred\", \"lumineon\", \"lunatone\", \"machamp\", \"magnezone\", \"nosepass\", \"petilil\", \"pidgeotto\", \"pikachu\"]) should return [\"machamp\", \"petilil\", \"lumineon\", \"nosepass\"] js assertdeepEqual(\nfindLongestChain([\n'loudred',\n'lumineon',\n'lunatone',\n'machamp',\n'magnezone',\n'nosepass',\n'petilil',\n'pidgeotto',\n'pikachu'\n]),\n['machamp', 'petilil', 'lumineon', 'nosepass']\n);\n--seed--\n--seed-contents--\n```js\nfunction findLongestChain(items) {\n}\n```\n--solutions--\n```js\nfunction findLongestChain(items) {\nfunction Ref(index, first_char, last_char) {\nthis index = index;\nthis first_char = first_char;\nthis last_char = last_char;\n}\nvar items_len = items",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "aca49805b354511e87b1c4a0a5c89965",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'silcoon', 'tigers' ]), ['scolipede', 'elephant', 'tigers', 'sealeo'] ); findLongestChain([\"loudred\", \"lumineon\", \"lunatone\", \"machamp\", \"magnezone\", \"nosepass\", \"petilil\", \"pidgeotto\", \"pikachu\"]) should return [\"machamp\", \"petilil\", \"lumineon\", \"nosepass\"] js assertdeepEqual( findLongestChain([ 'loudred', 'lumineon', 'lunatone', 'machamp', 'magnezone', 'nosepass', 'petilil', 'pidgeotto', 'pikachu' ]), ['machamp', 'petilil', 'lumineon', 'nosepass'] ); --seed-- --seed-contents-- ```js function findLongestChain(items) { } ``` --solutions-- ```js function findLongestChain(items) { function Ref(index, first_char, last_char) { this index = index; this first_char = first_char; this last_char = last_char; } var items_len = itemslength\nvar refs_len = items_len;\nvar refs = []\n// enough space for all items\nvar longest_path_refs_len = 0;\nvar longest_path_refs = new Array(items_len);\nfunction search(curr_len) {\nif (curr_len > longest_path_refs_len) {\nlongest_path_refs_len = curr_len;\nfor (var i = 0; i < curr_len; i++) {\nlongest_path_refs[i] = refs[i];\n}\n}\n// recursive search\nvar last_char = refs[curr_len - 1] last_char;\nfor (var i = curr_len; i < refs_len; i++)\nif (refs[i] first_char == last_char) {\nvar aux = refs[curr_len];\nrefs[curr_len] = refs[i];\nrefs[i] = aux;\nsearch(curr_len + 1);\nrefs[i] = refs[curr_len];\nrefs[curr_len] = aux;\n}\n}\nfor (var i = 0; i < items_len; i++) {\nvar itemsi_len = items[i] length;\nrefs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "b1f25e407169c1f079c4201232726c9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(var i = 0; i < curr_len; i++) { longest_path_refs[i] = refs[i]; } } // recursive search var last_char = refs[curr_len - 1] last_char; for (var i = curr_len; i < refs_len; i++) if (refs[i] first_char == last_char) { var aux = refs[curr_len]; refs[curr_len] = refs[i]; refs[i] = aux; search(curr_len + 1); refs[i] = refs[curr_len]; refs[curr_len] = aux; } } for (var i = 0; i < items_len; i++) { var itemsi_len = items[i] length; refspush(new Ref(i, items[i][0], items[i][itemsi_len - 1]));\n}\n// try each item as possible start\nfor (var i = 0; i < items_len; i++) {\nvar aux = refs[0];\nrefs[0] = refs[i];\nrefs[i] = aux;\nsearch(1);\nrefs[i] = refs[0];\nrefs[0] = aux;\n}\nvar longest_path_len = longest_path_refs_len;\nvar longest_path = new Array(longest_path_len);\nfor (var i = 0; i < longest_path_len; i++)\nlongest_path[i] = items[longest_path_refs[i] index];\nreturn longest_path;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\last-letter-first-letter.md",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "8138edf6cee79ed6c9eded5aff0a2142",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\linear-congruential-generator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e4ce2f5ac708cc68c1df261\ntitle: Linear congruential generator\nchallengeType: 1\nforumTopicId: 385266\ndashedName: linear-congruential-generator\n--description--\nA linear congruential generator (LCG) is an algorithm that yields a sequence of pseudo-randomized numbers calculated with a discontinuous piecewise linear equation All linear congruential generators use this formula:\n$$r_{n + 1} = (a \\times r_n + c) \\bmod m$$\nWhere:\n$ r_0 $ is a seed $r_1$, $r_2$, $r_3$, , are the random numbers $a$, $c$, $m$ are constants If one chooses the values of $a$, $c$ and $m$ with care, then the generator produces a uniform distribution of integers from $0$ to $m - 1$ LCG numbers have poor quality $r_n$ and $r_{n + 1}$ are not independent, as true random numbers would be Anyone who knows $r_n$ can predict $r_{n + 1}$, therefore LCG is not cryptographically secure The LCG is still good enough for simple tasks like Miller-Rabin primality test, or FreeCell deals Among the benefits of the LCG, one can easily reproduce a sequence of numbers, from the same $r_0$ One can also reproduce such sequence with a different programming language, because the formula is so simple --instructions--\nWrite a function that takes $r_0,a,c,m,n$ as parameters and returns $r_n$ --hints--\nlinearCongGenerator should be a function js\nassert(typeof linearCongGenerator == 'function');\nlinearCongGenerator(324, 1145, 177, 2148, 3) should return a number js\nassert(typeof linearCongGenerator(324, 1145, 177, 2148, 3) == 'number');\nlinearCongGenerator(324, 1145, 177, 2148, 3) should return 855 js\nassert equal(linearCongGenerator(324, 1145, 177, 2148, 3), 855);\nlinearCongGenerator(234, 11245, 145, 83648, 4) should return 1110 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\linear-congruential-generator.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0ddc0f3252570cc0179f6da8c1a33394",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\linear-congruential-generator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "different programming language, because the formula is so simple --instructions-- Write a function that takes $r_0,a,c,m,n$ as parameters and returns $r_n$ --hints-- linearCongGenerator should be a function js assert(typeof linearCongGenerator == 'function'); linearCongGenerator(324, 1145, 177, 2148, 3) should return a number js assert(typeof linearCongGenerator(324, 1145, 177, 2148, 3) == 'number'); linearCongGenerator(324, 1145, 177, 2148, 3) should return 855 js assert equal(linearCongGenerator(324, 1145, 177, 2148, 3), 855); linearCongGenerator(234, 11245, 145, 83648, 4) should return 1110 js assertequal(linearCongGenerator(234, 11245, 145, 83648, 4), 1110);\nlinearCongGenerator(85, 11, 1234, 214748, 5) should return 62217 js\nassert equal(linearCongGenerator(85, 11, 1234, 214748, 5), 62217);\nlinearCongGenerator(0, 1103515245, 12345, 2147483648, 1) should return 12345 js\nassert equal(linearCongGenerator(0, 1103515245, 12345, 2147483648, 1), 12345);\nlinearCongGenerator(0, 1103515245, 12345, 2147483648, 2) should return 1406932606 js\nassert equal(\nlinearCongGenerator(0, 1103515245, 12345, 2147483648, 2),\n1406932606\n);\n--seed--\n--seed-contents--\n```js\nfunction linearCongGenerator(r0, a, c, m, n) {\n}\n```\n--solutions--\njs\nfunction linearCongGenerator(r0, a, c, m, n) {\nfor (let i = 0; i < n; i++) {\nr0 = (a * r0 + c) % m;\n}\nreturn r0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\linear-congruential-generator.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "77837fcc74f1afb290cbee73375a750e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-common-subsequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e6dd1278e6ca105cde40ea9\ntitle: Longest common subsequence\nchallengeType: 1\nforumTopicId: 385271\ndashedName: longest-common-subsequence\n--description--\nThe longest common subsequence (or LCS) of groups A and B is the longest group of elements from A and B that are common between the two groups and in the same order in each group For example, the sequences 1234 and 1224533324 have an LCS of 1234:\n1234\n1224533324\nFor a string example, consider the sequences thisisatest and testing123testing An LCS would be tsitest:\nthisisatest\ntesting123testing Your code only needs to deal with strings --instructions--\nWrite a case-sensitive function that returns the LCS of two strings You don't need to show multiple LCS's --hints--\nlcs should be a function js\nassert(typeof lcs == 'function');\nlcs(\"thisisatest\", \"testing123testing\") should return a string js\nassert(typeof lcs('thisisatest', 'testing123testing') == 'string');\nlcs(\"thisisatest\", \"testing123testing\") should return \"tsitest\" js\nassert equal(lcs('thisisatest', 'testing123testing'), 'tsitest');\nlcs(\"ABCDGH\", \"AEDFHR\") should return \"ADH\" js\nassert equal(lcs('ABCDGH', 'AEDFHR'), 'ADH');\nlcs(\"AGGTAB\", \"GXTXAYB\") should return \"GTAB\" js\nassert equal(lcs('AGGTAB', 'GXTXAYB'), 'GTAB');\nlcs(\"BDACDB\", \"BDCB\") should return \"BDCB\" js\nassert equal(lcs('BDACDB', 'BDCB'), 'BDCB');\nlcs(\"ABAZDC\", \"BACBAD\") should return \"ABAD\" js\nassert equal(lcs('ABAZDC', 'BACBAD'), 'ABAD');\n--seed--\n--seed-contents--\n```js\nfunction lcs(a, b) {\n}\n```\n--solutions--\n```js\nfunction lcs(a, b) {\nvar aSub = a substring(0, a length - 1);\nvar bSub = b substring(0, b",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2147,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-common-subsequence.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e2257ed6f9024e213318d9c628c36821",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-common-subsequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"tsitest\" js assert equal(lcs('thisisatest', 'testing123testing'), 'tsitest'); lcs(\"ABCDGH\", \"AEDFHR\") should return \"ADH\" js assert equal(lcs('ABCDGH', 'AEDFHR'), 'ADH'); lcs(\"AGGTAB\", \"GXTXAYB\") should return \"GTAB\" js assert equal(lcs('AGGTAB', 'GXTXAYB'), 'GTAB'); lcs(\"BDACDB\", \"BDCB\") should return \"BDCB\" js assert equal(lcs('BDACDB', 'BDCB'), 'BDCB'); lcs(\"ABAZDC\", \"BACBAD\") should return \"ABAD\" js assert equal(lcs('ABAZDC', 'BACBAD'), 'ABAD'); --seed-- --seed-contents-- ```js function lcs(a, b) { } ``` --solutions-- ```js function lcs(a, b) { var aSub = a substring(0, a length - 1); var bSub = b substring(0, blength - 1);\nif (a length === 0 || b length === 0) {\nreturn '';\n} else if (a charAt(a length - 1) === b charAt(b length - 1)) {\nreturn lcs(aSub, bSub) + a charAt(a length - 1);\n} else {\nvar x = lcs(a, bSub);\nvar y = lcs(aSub, b);\nreturn (x length > y length) x : y;\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2147,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-common-subsequence.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4859c5708b5dd70006ec4d2de6c6f828",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e4ce2a1ac708cc68c1df25d\ntitle: Long multiplication\nchallengeType: 1\nforumTopicId: 385269\ndashedName: long-multiplication\n--description--\nExplicitly implement long multiplication This is one possible approach to arbitrary-precision integer algebra --instructions--\nWrite a function that takes two strings of large numbers as parameters Your function should return the product of these two large numbers as a string Note: In JavaScript, arithmetic operations are inaccurate with large numbers, so you will have to implement precise multiplication yourself --hints--\nmult should be a function js\nassert(typeof mult == 'function');\nmult(\"18446744073709551616\", \"18446744073709551616\") should return a string js\nassert(typeof mult('18446744073709551616', '18446744073709551616') == 'string');\nmult(\"18446744073709551616\", \"18446744073709551616\") should return \"340282366920938463463374607431768211456\" js\nassert equal(\nmult('18446744073709551616', '18446744073709551616'),\n'340282366920938463463374607431768211456'\n);\nmult(\"31844674073709551616\", \"1844674407309551616\") should return \"58743055272886011737990786529368211456\" js\nassert equal(\nmult('31844674073709551616', '1844674407309551616'),\n'58743055272886011737990786529368211456'\n);\nmult(\"1846744073709551616\", \"44844644073709551616\") should return \"82816580680737279241781007431768211456\" js\nassert equal(\nmult('1846744073709551616', '44844644073709551616'),\n'82816580680737279241781007431768211456'\n);\nmult(\"1844674407370951616\", \"1844674407709551616\") should return \"3402823669833978308014392742590611456\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2949,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "90cf8c5aabb41b33236b870388f386cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "numbers, so you will have to implement precise multiplication yourself --hints-- mult should be a function js assert(typeof mult == 'function'); mult(\"18446744073709551616\", \"18446744073709551616\") should return a string js assert(typeof mult('18446744073709551616', '18446744073709551616') == 'string'); mult(\"18446744073709551616\", \"18446744073709551616\") should return \"340282366920938463463374607431768211456\" js assert equal( mult('18446744073709551616', '18446744073709551616'), '340282366920938463463374607431768211456' ); mult(\"31844674073709551616\", \"1844674407309551616\") should return \"58743055272886011737990786529368211456\" js assert equal( mult('31844674073709551616', '1844674407309551616'), '58743055272886011737990786529368211456' ); mult(\"1846744073709551616\", \"44844644073709551616\") should return \"82816580680737279241781007431768211456\" js assert equal( mult('1846744073709551616', '44844644073709551616'), '82816580680737279241781007431768211456' ); mult(\"1844674407370951616\", \"1844674407709551616\") should return \"3402823669833978308014392742590611456\" js assertequal(\nmult('1844674407370951616', '1844674407709551616'),\n'3402823669833978308014392742590611456'\n);\nmult(\"2844674407370951616\", \"1844674407370955616\") should return \"5247498076580334548376218009219475456\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2949,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "169ba4f8cfe7474c8262b5076f740189",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "mult should be a function js assert(typeof mult == 'function'); mult(\"18446744073709551616\", \"18446744073709551616\") should return a string js assert(typeof mult('18446744073709551616', '18446744073709551616') == 'string'); mult(\"18446744073709551616\", \"18446744073709551616\") should return \"340282366920938463463374607431768211456\" js assert equal( mult('18446744073709551616', '18446744073709551616'), '340282366920938463463374607431768211456' ); mult(\"31844674073709551616\", \"1844674407309551616\") should return \"58743055272886011737990786529368211456\" js assert equal( mult('31844674073709551616', '1844674407309551616'), '58743055272886011737990786529368211456' ); mult(\"1846744073709551616\", \"44844644073709551616\") should return \"82816580680737279241781007431768211456\" js assert equal( mult('1846744073709551616', '44844644073709551616'), '82816580680737279241781007431768211456' ); mult(\"1844674407370951616\", \"1844674407709551616\") should return \"3402823669833978308014392742590611456\" js assertequal( mult('1844674407370951616', '1844674407709551616'), '3402823669833978308014392742590611456' ); mult(\"2844674407370951616\", \"1844674407370955616\") should return \"5247498076580334548376218009219475456\" js assertequal(\nmult('2844674407370951616', '1844674407370955616'),\n'5247498076580334548376218009219475456'\n);\n--seed--\n--seed-contents--\n```js\nfunction mult(strNum1, strNum2) {\n}\n```\n--solutions--\n```js\nfunction mult(strNum1, strNum2) {\nvar a1 = strNum1 split(\"\") reverse();\nvar a2 = strNum2 toString()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2949,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "dabc2d8e1eedd7b2f3bfd08388fc4297",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "mult('18446744073709551616', '18446744073709551616'), '340282366920938463463374607431768211456' ); mult(\"31844674073709551616\", \"1844674407309551616\") should return \"58743055272886011737990786529368211456\" js assert equal( mult('31844674073709551616', '1844674407309551616'), '58743055272886011737990786529368211456' ); mult(\"1846744073709551616\", \"44844644073709551616\") should return \"82816580680737279241781007431768211456\" js assert equal( mult('1846744073709551616', '44844644073709551616'), '82816580680737279241781007431768211456' ); mult(\"1844674407370951616\", \"1844674407709551616\") should return \"3402823669833978308014392742590611456\" js assertequal( mult('1844674407370951616', '1844674407709551616'), '3402823669833978308014392742590611456' ); mult(\"2844674407370951616\", \"1844674407370955616\") should return \"5247498076580334548376218009219475456\" js assertequal( mult('2844674407370951616', '1844674407370955616'), '5247498076580334548376218009219475456' ); --seed-- --seed-contents-- ```js function mult(strNum1, strNum2) { } ``` --solutions-- ```js function mult(strNum1, strNum2) { var a1 = strNum1 split(\"\") reverse(); var a2 = strNum2 toString()split(\"\") reverse();\nvar aResult = new Array;\nfor ( var iterNum1 = 0; iterNum1 < a1 length; iterNum1++ ) {\nfor ( var iterNum2 = 0; iterNum2 < a2 length; iterNum2++ ) {\nvar idxIter = iterNum1 + iterNum2;    // Get the current array position",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2949,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "fb1b617de7449e321deba1f6b5de8a6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assertequal( mult('2844674407370951616', '1844674407370955616'), '5247498076580334548376218009219475456' ); --seed-- --seed-contents-- ```js function mult(strNum1, strNum2) { } ``` --solutions-- ```js function mult(strNum1, strNum2) { var a1 = strNum1 split(\"\") reverse(); var a2 = strNum2 toString()split(\"\") reverse(); var aResult = new Array; for ( var iterNum1 = 0; iterNum1 < a1 length; iterNum1++ ) { for ( var iterNum2 = 0; iterNum2 < a2 length; iterNum2++ ) { var idxIter = iterNum1 + iterNum2; // Get the current array positionaResult[idxIter] = a1[iterNum1] * a2[iterNum2] + ( idxIter >= aResult length 0 : aResult[idxIter] );\nif ( aResult[idxIter] > 9 ) {    // Carrying\naResult[idxIter + 1] = Math floor( aResult[idxIter] / 10 ) + ( idxIter + 1 >= aResult length 0 : aResult[idxIter + 1] );\naResult[idxIter] %= 10;\n}\n}\n}\nreturn aResult reverse() join(\"\");\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2949,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\long-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a456270c8f53077cb5f10d8d47bdc054",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e4ce2bbac708cc68c1df25f\ntitle: Letter frequency\nchallengeType: 1\nforumTopicId: 385263\ndashedName: letter-frequency\n--description--\nGiven a string, calculate the frequency of each character All characters should be counted This includes lower and upper case letters, digits, whitespace, special characters, or any other distinct characters --instructions--\nWrite a function to count the occurrences of each character in a given string The function should return a 2D array with each of the elements in the following form: ['char', freq] The character should be a string with a length of 1, and frequency is a number denoting the count For example, given the string \"ab\", your function should return [['a', 1], ['b', 1]] --hints--\nletterFrequency should be a function js\nassert(typeof letterFrequency == 'function');\nletterFrequency(\"Not all that Mrs Bennet, however\") should return an array js\nassert(Array isArray(letterFrequency('Not all that Mrs Bennet, however')));\nletterFrequency(\"Not all that Mrs Bennet, however\") should return [[\" \", 5], [\",\", 1], [\" \", 1], [\"B\", 1], [\"M\", 1], [\"N\", 1], [\"a\", 2], [\"e\", 4], [\"h\", 2], [\"l\", 2], [\"n\", 2], [\"o\", 2], [\"r\", 2], [\"s\", 1], [\"t\", 4], [\"v\", 1], [\"w\", 1]] js\nassert deepEqual(letterFrequency('Not all that Mrs Bennet, however'), [\n[' ', 5],\n[',', 1],\n['",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "80ab2915bb02c9a25807d71ad492298a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "all that Mrs Bennet, however\") should return an array js assert(Array isArray(letterFrequency('Not all that Mrs Bennet, however'))); letterFrequency(\"Not all that Mrs Bennet, however\") should return [[\" \", 5], [\",\", 1], [\" \", 1], [\"B\", 1], [\"M\", 1], [\"N\", 1], [\"a\", 2], [\"e\", 4], [\"h\", 2], [\"l\", 2], [\"n\", 2], [\"o\", 2], [\"r\", 2], [\"s\", 1], [\"t\", 4], [\"v\", 1], [\"w\", 1]] js assert deepEqual(letterFrequency('Not all that Mrs Bennet, however'), [ [' ', 5], [',', 1], ['', 1],\n['B', 1],\n['M', 1],\n['N', 1],\n['a', 2],\n['e', 4],\n['h', 2],\n['l', 2],\n['n', 2],\n['o', 2],\n['r', 2],\n['s', 1],\n['t', 4],\n['v', 1],\n['w', 1]\n]);\nletterFrequency(\"daughters, could ask on the \") should return [[\" \", 5],[\",\", 1],[\"a\", 2],[\"c\", 1],[\"d\", 2],[\"e\", 2],[\"g\", 1],[\"h\", 2],[\"k\", 1],[\"l\", 1],[\"n\", 1],[\"o\", 2],[\"r\", 1],[\"s\", 2],[\"t\", 2],[\"u\", 2]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "d47adda2820550edbf9c328734806efd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1], [\"w\", 1]] js assert deepEqual(letterFrequency('Not all that Mrs Bennet, however'), [ [' ', 5], [',', 1], ['', 1], ['B', 1], ['M', 1], ['N', 1], ['a', 2], ['e', 4], ['h', 2], ['l', 2], ['n', 2], ['o', 2], ['r', 2], ['s', 1], ['t', 4], ['v', 1], ['w', 1] ]); letterFrequency(\"daughters, could ask on the \") should return [[\" \", 5],[\",\", 1],[\"a\", 2],[\"c\", 1],[\"d\", 2],[\"e\", 2],[\"g\", 1],[\"h\", 2],[\"k\", 1],[\"l\", 1],[\"n\", 1],[\"o\", 2],[\"r\", 1],[\"s\", 2],[\"t\", 2],[\"u\", 2]] js assertdeepEqual(letterFrequency('daughters, could ask on the '), [\n[' ', 5],\n[',', 1],\n['a', 2],\n['c', 1],\n['d', 2],\n['e', 2],\n['g', 1],\n['h', 2],\n['k', 1],\n['l', 1],\n['n', 1],\n['o', 2],\n['r', 1],\n['s', 2],\n['t', 2],\n['u', 2]\n]);\nletterFrequency(\"husband any satisfactory description\") should return [[\" \", 3], [\"a\", 4], [\"b\", 1], [\"c\", 2], [\"d\", 2], [\"e\", 1], [\"f\", 1], [\"h\", 1], [\"i\", 3], [\"n\", 3], [\"o\", 2], [\"p\", 1], [\"r\", 2], [\"s\", 4], [\"t\", 3], [\"u\", 1], [\"y\", 2]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "79e4a19596f177aa48f26e2729d0e499",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "', 5], [',', 1], ['a', 2], ['c', 1], ['d', 2], ['e', 2], ['g', 1], ['h', 2], ['k', 1], ['l', 1], ['n', 1], ['o', 2], ['r', 1], ['s', 2], ['t', 2], ['u', 2] ]); letterFrequency(\"husband any satisfactory description\") should return [[\" \", 3], [\"a\", 4], [\"b\", 1], [\"c\", 2], [\"d\", 2], [\"e\", 1], [\"f\", 1], [\"h\", 1], [\"i\", 3], [\"n\", 3], [\"o\", 2], [\"p\", 1], [\"r\", 2], [\"s\", 4], [\"t\", 3], [\"u\", 1], [\"y\", 2]] js assertdeepEqual(letterFrequency('husband any satisfactory description'), [\n[' ', 3],\n['a', 4],\n['b', 1],\n['c', 2],\n['d', 2],\n['e', 1],\n['f', 1],\n['h', 1],\n['i', 3],\n['n', 3],\n['o', 2],\n['p', 1],\n['r', 2],\n['s', 4],\n['t', 3],\n['u', 1],\n['y', 2]\n]);\nletterFrequency(\"in various ways--with barefaced\") should return [[\" \", 3], [\"-\", 2], [\"a\", 4], [\"b\", 1], [\"c\", 1], [\"d\", 1], [\"e\", 2], [\"f\", 1], [\"h\", 1], [\"i\", 3], [\"n\", 1], [\"o\", 1], [\"r\", 2], [\"s\", 2], [\"t\", 1], [\"u\", 1], [\"v\", 1], [\"w\", 2], [\"y\", 1]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "b28fc110647cb53b0b413ee7c6ad7588",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "['c', 2], ['d', 2], ['e', 1], ['f', 1], ['h', 1], ['i', 3], ['n', 3], ['o', 2], ['p', 1], ['r', 2], ['s', 4], ['t', 3], ['u', 1], ['y', 2] ]); letterFrequency(\"in various ways--with barefaced\") should return [[\" \", 3], [\"-\", 2], [\"a\", 4], [\"b\", 1], [\"c\", 1], [\"d\", 1], [\"e\", 2], [\"f\", 1], [\"h\", 1], [\"i\", 3], [\"n\", 1], [\"o\", 1], [\"r\", 2], [\"s\", 2], [\"t\", 1], [\"u\", 1], [\"v\", 1], [\"w\", 2], [\"y\", 1]] js assertdeepEqual(letterFrequency('in various ways--with barefaced'), [\n[' ', 3],\n['-', 2],\n['a', 4],\n['b', 1],\n['c', 1],\n['d', 1],\n['e', 2],\n['f', 1],\n['h', 1],\n['i', 3],\n['n', 1],\n['o', 1],\n['r', 2],\n['s', 2],\n['t', 1],\n['u', 1],\n['v', 1],\n['w', 2],\n['y', 1]\n]);\nletterFrequency(\"distant surmises; but he eluded\") should return [[\" \", 4], [\";\", 1], [\"a\", 1], [\"b\", 1], [\"d\", 3], [\"e\", 4], [\"h\", 1], [\"i\", 2], [\"l\", 1], [\"m\", 1], [\"n\", 1], [\"r\", 1], [\"s\", 4], [\"t\", 3], [\"u\", 3]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "ffd9e0f3743d2b46e365bca858367686",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2], ['a', 4], ['b', 1], ['c', 1], ['d', 1], ['e', 2], ['f', 1], ['h', 1], ['i', 3], ['n', 1], ['o', 1], ['r', 2], ['s', 2], ['t', 1], ['u', 1], ['v', 1], ['w', 2], ['y', 1] ]); letterFrequency(\"distant surmises; but he eluded\") should return [[\" \", 4], [\";\", 1], [\"a\", 1], [\"b\", 1], [\"d\", 3], [\"e\", 4], [\"h\", 1], [\"i\", 2], [\"l\", 1], [\"m\", 1], [\"n\", 1], [\"r\", 1], [\"s\", 4], [\"t\", 3], [\"u\", 3]] js assertdeepEqual(letterFrequency('distant surmises; but he eluded'), [\n[' ', 4],\n[';', 1],\n['a', 1],\n['b', 1],\n['d', 3],\n['e', 4],\n['h', 1],\n['i', 2],\n['l', 1],\n['m', 1],\n['n', 1],\n['r', 1],\n['s', 4],\n['t', 3],\n['u', 3]\n]);\nletterFrequency(\"last obliged to accept the second-hand,\") should return [[\" \", 5], [\",\", 1], [\"-\", 1], [\"a\", 3], [\"b\", 1], [\"c\", 3], [\"d\", 3], [\"e\", 4], [\"g\", 1], [\"h\", 2], [\"i\", 1], [\"l\", 2], [\"n\", 2], [\"o\", 3], [\"p\", 1], [\"s\", 2], [\"t\", 4]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "9ee0f64f112832571405e9490ee29f72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "', 4], [';', 1], ['a', 1], ['b', 1], ['d', 3], ['e', 4], ['h', 1], ['i', 2], ['l', 1], ['m', 1], ['n', 1], ['r', 1], ['s', 4], ['t', 3], ['u', 3] ]); letterFrequency(\"last obliged to accept the second-hand,\") should return [[\" \", 5], [\",\", 1], [\"-\", 1], [\"a\", 3], [\"b\", 1], [\"c\", 3], [\"d\", 3], [\"e\", 4], [\"g\", 1], [\"h\", 2], [\"i\", 1], [\"l\", 2], [\"n\", 2], [\"o\", 3], [\"p\", 1], [\"s\", 2], [\"t\", 4]] js assertdeepEqual(letterFrequency('last obliged to accept the second-hand,'), [\n[' ', 5],\n[',', 1],\n['-', 1],\n['a', 3],\n['b', 1],\n['c', 3],\n['d', 3],\n['e', 4],\n['g', 1],\n['h', 2],\n['i', 1],\n['l', 2],\n['n', 2],\n['o', 3],\n['p', 1],\n['s', 2],\n['t', 4]\n]);\n--seed--\n--seed-contents--\n```js\nfunction letterFrequency(txt) {\n}\n```\n--solutions--\n```js\nfunction letterFrequency(txt) {\nvar cs = txt split(''),\ni = cs length,\ndct =  {},\nc = '',\nkeys;\nwhile (i--) {\nc = cs[i];\ndct[c] = (dct[c] || 0) + 1;\n}\nkeys = Object keys(dct);\nkeys sort();\nreturn keys map(function (c) { return [c, dct[c]]; });\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\letter-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "f024497b52ba272f755df1e7bbb3e522",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-increasing-subsequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e6dd139859c290b6ab80292\ntitle: Longest increasing subsequence\nchallengeType: 1\nforumTopicId: 385272\ndashedName: longest-increasing-subsequence\n--description--\nThe longest increasing subsequence problem is to find a subsequence of a given sequence in which the subsequence's elements are in sorted order, lowest to highest, and in which the subsequence is as long as possible An example:\nFor the following array:\njs\nconst array = [3, 10, 2, 1, 20];\nLongest increasing sequence is:\n$\\{3, 10, 20\\}$\n--instructions--\nWrite a function that takes an array of numbers as a parameter and returns the longest increasing subsequence It is guaranteed that every array will have a longest increasing subsequence --hints--\nfindSequence should be a function js\nassert(typeof findSequence == 'function');\nfindSequence([3, 10, 2, 1, 20]) should return a array js\nassert(Array isArray(findSequence([3, 10, 2, 1, 20])));\nfindSequence([3, 10, 2, 1, 20]) should return [3, 10, 20] js\nassert deepEqual(findSequence([3, 10, 2, 1, 20]), [3, 10, 20]);\nfindSequence([2, 7, 3, 5, 8]) should return [2, 3, 5, 8] js\nassert deepEqual(findSequence([2, 7, 3, 5, 8]), [2, 3, 5, 8]);\nfindSequence([2, 6, 4, 5, 1]) should return [2, 4, 5] js\nassert deepEqual(findSequence([2, 6, 4, 5, 1]), [2, 4, 5]);\nfindSequence([10, 22, 9, 33, 21, 50, 60, 80]) should return [10, 22, 33, 50, 60, 80] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-increasing-subsequence.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8c22611294b0bb1b40a80a5fb8eb2ff1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-increasing-subsequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "20]) should return [3, 10, 20] js assert deepEqual(findSequence([3, 10, 2, 1, 20]), [3, 10, 20]); findSequence([2, 7, 3, 5, 8]) should return [2, 3, 5, 8] js assert deepEqual(findSequence([2, 7, 3, 5, 8]), [2, 3, 5, 8]); findSequence([2, 6, 4, 5, 1]) should return [2, 4, 5] js assert deepEqual(findSequence([2, 6, 4, 5, 1]), [2, 4, 5]); findSequence([10, 22, 9, 33, 21, 50, 60, 80]) should return [10, 22, 33, 50, 60, 80] js assertdeepEqual(findSequence([10, 22, 9, 33, 21, 50, 60, 80]), [\n10,\n22,\n33,\n50,\n60,\n80\n]);\nfindSequence([0, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]) should return [0, 2, 6, 9, 11, 15 js\nassert deepEqual(\nfindSequence([0, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]),\n[0, 2, 6, 9, 11, 15]\n);\n--seed--\n--seed-contents--\n```js\nfunction findSequence(input) {\n}\n```\n--solutions--\n```js\nfunction findSequence(input) {\nvar len = input length;\nvar result = []\nfor (var i = 0; i < len; i++) result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-increasing-subsequence.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8516e72e03285c320309a51e49081dd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-increasing-subsequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]) should return [0, 2, 6, 9, 11, 15 js assert deepEqual( findSequence([0, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]), [0, 2, 6, 9, 11, 15] ); --seed-- --seed-contents-- ```js function findSequence(input) { } ``` --solutions-- ```js function findSequence(input) { var len = input length; var result = [] for (var i = 0; i < len; i++) resultpush(1)\nfor (var i = 0; i < len; i++)\nfor (var j = i - 1; j >= 0; j--)\nif (input[i] > input[j] && result[j] >= result[i])\nresult[i] = result[j] + 1;\nvar maxValue = Math max apply(null, result);\nvar maxIndex = result indexOf(Math max apply(Math, result));\nvar output = [];\noutput push(input[maxIndex]);\nfor (var i = maxIndex; i >= 0; i--) {\nif (maxValue == 0) break;\nif (input[maxIndex] > input[i] && result[i] == maxValue - 1) {\noutput push(input[i]);\nmaxValue--;\n}\n}\noutput reverse();\nreturn output;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-increasing-subsequence.md",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5d9dc406e3e8f53cfb7bdc4c878f8048",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-string-challenge.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e6dd14192286d95fc43046e\ntitle: Longest string challenge\nchallengeType: 1\nforumTopicId: 385275\ndashedName: longest-string-challenge\n--description--\nIn this challenge, you have to find the strings that are the longest among the given strings --instructions--\nWrite a function that takes an array of strings and returns the strings that have a length equal to the longest length --hints--\nlongestString should be a function js\nassert(typeof longestString == 'function');\nlongestString([\"a\", \"bb\", \"ccc\", \"ee\", \"f\", \"ggg\"]) should return a array js\nassert(Array isArray(longestString(['a', 'bb', 'ccc', 'ee', 'f', 'ggg'])));\nlongestString([\"a\", \"bb\", \"ccc\", \"ee\", \"f\", \"ggg\"]) should return [\"ccc\", \"ggg\"] js\nassert deepEqual(longestString(['a', 'bb', 'ccc', 'ee', 'f', 'ggg']), [\n'ccc',\n'ggg'\n]);\nlongestString([\"afedg\", \"bb\", \"sdccc\", \"efdee\", \"f\", \"geegg\"]) should return [\"afedg\", \"sdccc\", \"efdee\", \"geegg\"] js\nassert deepEqual(\nlongestString(['afedg', 'bb', 'sdccc', 'efdee', 'f', 'geegg']),\n['afedg', 'sdccc', 'efdee', 'geegg']\n);\nlongestString([\"a\", \"bhghgb\", \"ccc\", \"efde\", \"fssdrr\", \"ggg\"]) should return [\"bhghgb\", \"fssdrr\"] js\nassert deepEqual(\nlongestString(['a', 'bhghgb', 'ccc', 'efde', 'fssdrr', 'ggg']),\n['bhghgb', 'fssdrr']\n);\nlongestString([\"ahgfhg\", \"bdsfsb\", \"ccc\", \"ee\", \"f\", \"ggdsfg\"]) should return [\"ahgfhg\", \"bdsfsb\", \"ggdsfg\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2163,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-string-challenge.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "17306d7c8e7ee1995d6fc99348fcc300",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-string-challenge.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return [\"ccc\", \"ggg\"] js assert deepEqual(longestString(['a', 'bb', 'ccc', 'ee', 'f', 'ggg']), [ 'ccc', 'ggg' ]); longestString([\"afedg\", \"bb\", \"sdccc\", \"efdee\", \"f\", \"geegg\"]) should return [\"afedg\", \"sdccc\", \"efdee\", \"geegg\"] js assert deepEqual( longestString(['afedg', 'bb', 'sdccc', 'efdee', 'f', 'geegg']), ['afedg', 'sdccc', 'efdee', 'geegg'] ); longestString([\"a\", \"bhghgb\", \"ccc\", \"efde\", \"fssdrr\", \"ggg\"]) should return [\"bhghgb\", \"fssdrr\"] js assert deepEqual( longestString(['a', 'bhghgb', 'ccc', 'efde', 'fssdrr', 'ggg']), ['bhghgb', 'fssdrr'] ); longestString([\"ahgfhg\", \"bdsfsb\", \"ccc\", \"ee\", \"f\", \"ggdsfg\"]) should return [\"ahgfhg\", \"bdsfsb\", \"ggdsfg\"] js assertdeepEqual(\nlongestString(['ahgfhg', 'bdsfsb', 'ccc', 'ee', 'f', 'ggdsfg']),\n['ahgfhg', 'bdsfsb', 'ggdsfg']\n);\nlongestString([\"a\", \"bbdsf\", \"ccc\", \"edfe\", \"gzzzgg\"]) should return [\"gzzzgg\"] js\nassert deepEqual(longestString(['a', 'bbdsf', 'ccc', 'edfe', 'gzzzgg']), [\n'gzzzgg'\n]);\n--seed--\n--seed-contents--\n```js\nfunction longestString(strings) {\n}\n```\n--solutions--\n```js\nfunction longestString(strings) {\nvar mx = 0;\nvar result = []\nstrings forEach(function (e) {\nif (e length > mx) {\nmx = e length\nresult = [e]\n} else if (e length == mx)\nresult push(e)\n})\nreturn result\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2163,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\longest-string-challenge.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "10875129e56c3b7ede4cb7c133a3e710",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\look-and-say-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e6dd14797f5ce267c2f19d0\ntitle: Look-and-say sequence\nchallengeType: 1\nforumTopicId: 385277\ndashedName: look-and-say-sequence\n--description--\nThe Look and say sequence is a recursively defined sequence of numbers Sequence Definition\nTake a decimal number\nLook at the number, visually grouping consecutive runs of the same digit Say the number, from left to right, group by group; as how many of that digit there are - followed by the digit grouped This becomes the next number of the sequence An example:\nStarting with the number 1, you have one 1 which produces 11\nStarting with 11, you have two 1's I E : 21\nStarting with 21, you have one 2, then one 1 I E : (12)(11) which becomes 1211\nStarting with 1211, you have one 1, one 2, then two 1's I E : (11)(12)(21) which becomes 111221\n--instructions--\nWrite a function that accepts a string as a parameter, processes it, and returns the resultant string --hints--\nlookAndSay should be a function js\nassert(typeof lookAndSay == 'function');\nlookAndSay(\"1\") should return a string js\nassert(typeof lookAndSay('1') == 'string');\nlookAndSay(\"1\") should return \"11\" js\nassert equal(lookAndSay('1'), '11');\nlookAndSay(\"11\") should return \"21\" js\nassert equal(lookAndSay('11'), '21');\nlookAndSay(\"21\") should return \"1211\" js\nassert equal(lookAndSay('21'), '1211');\nlookAndSay(\"1211\") should return \"111221\" js\nassert equal(lookAndSay('1211'), '111221');\nlookAndSay(\"3542\") should return \"13151412\" js\nassert equal(lookAndSay('3542'), '13151412');\n--seed--\n--seed-contents--\n```js\nfunction lookAndSay(str) {\n}\n```\n--solutions--\njs\nfunction lookAndSay(str) {\nreturn str replace(/( )\\1*/g, function(seq, p1) {\nreturn seq length toString() + p1;\n});\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2066,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\look-and-say-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c23b78b274d60a880396eeaab1bd36b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lucas-lehmer-test.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e6dee7749a0b85a3f1fc7d5\ntitle: Lucas-Lehmer test\nchallengeType: 1\nforumTopicId: 385281\ndashedName: lucas-lehmer-test\n--description--\nLucas-Lehmer Test: for $p$ an odd prime, the Mersenne number $2^p-1$ is prime if and only if $2^p-1$ divides $S(p-1)$ where $S(n+1)=(S(n))^2-2$, and $S(1)=4$ --instructions--\nWrite a function that returns whether the given Mersenne number is prime or not --hints--\nlucasLehmer should be a function js\nassert(typeof lucasLehmer == 'function');\nlucasLehmer(11) should return a boolean js\nassert(typeof lucasLehmer(11) == 'boolean');\nlucasLehmer(11) should return false js\nassert equal(lucasLehmer(11), false);\nlucasLehmer(15) should return false js\nassert equal(lucasLehmer(15), false);\nlucasLehmer(13) should return true js\nassert equal(lucasLehmer(13), true);\nlucasLehmer(17) should return true js\nassert equal(lucasLehmer(17), true);\nlucasLehmer(19) should return true js\nassert equal(lucasLehmer(19), true);\nlucasLehmer(21) should return false js\nassert equal(lucasLehmer(21), false);\n--seed--\n--seed-contents--\n```js\nfunction lucasLehmer(p) {\n}\n```\n--solutions--\n```js\nfunction lucasLehmer(p) {\nfunction isPrime(p) {\nif (p == 2)\nreturn true;\nelse if (p <= 1 || p % 2 == 0)\nreturn false;\nelse {\nvar to = Math sqrt(p);\nfor (var i = 3; i <= to; i += 2)\nif (p % i == 0)\nreturn false;\nreturn true;\n}\n}\nfunction isMersennePrime(p) {\nif (p == 2)\nreturn true;\nelse {\nvar m_p = Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1948,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lucas-lehmer-test.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "96c274ad0546542515cc8c8ff89313a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lucas-lehmer-test.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "lucasLehmer(p) { } ``` --solutions-- ```js function lucasLehmer(p) { function isPrime(p) { if (p == 2) return true; else if (p <= 1 || p % 2 == 0) return false; else { var to = Math sqrt(p); for (var i = 3; i <= to; i += 2) if (p % i == 0) return false; return true; } } function isMersennePrime(p) { if (p == 2) return true; else { var m_p = Mathpow(2, p) - 1\nvar s = 4;\nfor (var i = 3; i <= p; i++)\ns = (s * s - 2) % m_p\nreturn s == 0;\n}\n}\nreturn isPrime(p) && isMersennePrime(p)\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1948,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lucas-lehmer-test.md",
      "source_type": "git_repo"
    },
    "token_count": 196,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b43aab656746bcc13d45792ad8916b6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\loop-over-multiple-arrays-simultaneously.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e6dd15004c88cf00d2a78b3\ntitle: Loop over multiple arrays simultaneously\nchallengeType: 1\nforumTopicId: 385279\ndashedName: loop-over-multiple-arrays-simultaneously\n--description--\nLoop over multiple arrays and create a new array whose $i^{th}$ element is the concatenation of $i^{th}$ element of each of the given For this example, if you are given this array of arrays:\njs\n[ [\"a\", \"b\", \"c\"], [\"A\", \"B\", \"C\"], [1, 2, 3] ]\nthe output should be:\njs\n[\"aA1\",\"bB2\",\"cC3\"]\n--instructions--\nWrite a function that takes an array of arrays as a parameter and returns an array of strings satisfying the given description --hints--\nloopSimult should be a function js\nassert(typeof loopSimult == 'function');\nloopSimult([[\"a\", \"b\", \"c\"], [\"A\", \"B\", \"C\"], [1, 2, 3]]) should return a array js\nassert(\nArray isArray(\nloopSimult([\n['a', 'b', 'c'],\n['A', 'B', 'C'],\n[1, 2, 3]\n])\n)\n);\nloopSimult([[\"a\", \"b\", \"c\"], [\"A\", \"B\", \"C\"], [1, 2, 3]]) should return [\"aA1\", \"bB2\", \"cC3\"] js\nassert deepEqual(\nloopSimult([\n['a', 'b', 'c'],\n['A', 'B', 'C'],\n[1, 2, 3]\n]),\n['aA1', 'bB2', 'cC3']\n);\nloopSimult([[\"c\", \"b\", \"c\"], [\"4\", \"5\", \"C\"], [7, 7, 3]]) should return [\"c47\", \"b57\", \"cC3\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2434,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\loop-over-multiple-arrays-simultaneously.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c3fabee7e5ac527f2b3645fd2645c0c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\loop-over-multiple-arrays-simultaneously.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"c\"], [\"A\", \"B\", \"C\"], [1, 2, 3]]) should return a array js assert( Array isArray( loopSimult([ ['a', 'b', 'c'], ['A', 'B', 'C'], [1, 2, 3] ]) ) ); loopSimult([[\"a\", \"b\", \"c\"], [\"A\", \"B\", \"C\"], [1, 2, 3]]) should return [\"aA1\", \"bB2\", \"cC3\"] js assert deepEqual( loopSimult([ ['a', 'b', 'c'], ['A', 'B', 'C'], [1, 2, 3] ]), ['aA1', 'bB2', 'cC3'] ); loopSimult([[\"c\", \"b\", \"c\"], [\"4\", \"5\", \"C\"], [7, 7, 3]]) should return [\"c47\", \"b57\", \"cC3\"] js assertdeepEqual(\nloopSimult([\n['c', 'b', 'c'],\n['4', '5', 'C'],\n[7, 7, 3]\n]),\n['c47', 'b57', 'cC3']\n);\nloopSimult([[\"a\", \"b\", \"c\", \"d\"], [\"A\", \"B\", \"C\", \"d\"], [1, 2, 3, 4]]) should return [\"aA1\", \"bB2\", \"cC3\", \"dd4\"] js\nassert deepEqual(\nloopSimult([\n['a', 'b', 'c', 'd'],\n['A', 'B', 'C', 'd'],\n[1, 2, 3, 4]\n]),\n['aA1', 'bB2', 'cC3', 'dd4']\n);\nloopSimult([[\"a\", \"b\"], [\"A\", \"B\"], [1, 2]]) should return [\"aA1\", \"bB2\"] js\nassert deepEqual(\nloopSimult([\n['a', 'b'],\n['A', 'B'],\n[1, 2]\n]),\n['aA1', 'bB2']\n);\nloopSimult([[\"b\", \"c\"], [\"B\", \"C\"], [2, 3]]) should return [\"bB2\", \"cC3\"]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2434,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\loop-over-multiple-arrays-simultaneously.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d4c7b9645d24a0fae420c858814075b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\loop-over-multiple-arrays-simultaneously.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'cC3'] ); loopSimult([[\"a\", \"b\", \"c\", \"d\"], [\"A\", \"B\", \"C\", \"d\"], [1, 2, 3, 4]]) should return [\"aA1\", \"bB2\", \"cC3\", \"dd4\"] js assert deepEqual( loopSimult([ ['a', 'b', 'c', 'd'], ['A', 'B', 'C', 'd'], [1, 2, 3, 4] ]), ['aA1', 'bB2', 'cC3', 'dd4'] ); loopSimult([[\"a\", \"b\"], [\"A\", \"B\"], [1, 2]]) should return [\"aA1\", \"bB2\"] js assert deepEqual( loopSimult([ ['a', 'b'], ['A', 'B'], [1, 2] ]), ['aA1', 'bB2'] ); loopSimult([[\"b\", \"c\"], [\"B\", \"C\"], [2, 3]]) should return [\"bB2\", \"cC3\"]js\nassert deepEqual(\nloopSimult([\n['b', 'c'],\n['B', 'C'],\n[2, 3]\n]),\n['bB2', 'cC3']\n);\n--seed--\n--seed-contents--\n```js\nfunction loopSimult(A) {\n}\n```\n--solutions--\njs\nfunction loopSimult(A) {\nvar res = [], output;\nfor (var i = 0; i < A[0] length; i += 1) {\noutput = \"\";\nfor (var j = 0; j < A length; j++)\noutput += A[j][i];\nres push(output);\n}\nreturn res;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2434,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\loop-over-multiple-arrays-simultaneously.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2ef041ead7a45ec4d5bf2604bcd0853d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ludic-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5ea281203167d2b0bdefca00\ntitle: Ludic numbers\nchallengeType: 1\nforumTopicId: 385282\ndashedName: ludic-numbers\n--description--\nLudic numbers are related to prime numbers as they are generated by a sieve quite like the Sieve of Eratosthenes is used to generate prime numbers The first ludic number is 1 To generate succeeding ludic numbers create an array of increasing integers starting from 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 (Loop)\nTake the first member of the resultant array as the next ludic number 2 Remove every 2nd indexed item from the array (including the first) 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 (Unrolling a few loops )\nTake the first member of the resultant array as the next ludic number 3 Remove every 3rd indexed item from the array (including the first) 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 Take the first member of the resultant array as the next ludic number 5 Remove every 5th indexed item from the array (including the first) 5 7 11 13 17 19 23 25 29 31 35 37 41 43 47 49 53 55 59 61 65 67 71 73 77 Take the first member of the resultant array as the next ludic number 7 Remove every 7th indexed item from the array (including the first) 7 11 13 17 23 25 29 31 37 41 43 47 53 55 59 61 67 71 73 77 83 85 89 91 97 Take the first member of the current array as the next ludic number L",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ludic-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7b6cb3a3143e4b9bcde703f09e8be628",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ludic-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "43 47 49 53 55 59 61 65 67 71 73 77 Take the first member of the resultant array as the next ludic number 7 Remove every 7th indexed item from the array (including the first) 7 11 13 17 23 25 29 31 37 41 43 47 53 55 59 61 67 71 73 77 83 85 89 91 97 Take the first member of the current array as the next ludic number LRemove every Lth indexed item from the array (including the first) --instructions--\nWrite a function that returns all the ludic numbers less than or equal to the given number --hints--\nludic should be a function js\nassert(typeof ludic === 'function', '<code>ludic</code> should be a function ');\nludic(2) should return a array js\nassert(Array isArray(ludic(2)));\nludic(2) should return [1, 2] js\nassert deepEqual(ludic(2), [1, 2]);\nludic(3) should return [1, 2, 3] js\nassert deepEqual(ludic(3), [1, 2, 3]);\nludic(5) should return [1, 2, 3, 5] js\nassert deepEqual(ludic(5), [1, 2, 3, 5]);\nludic(20) should return [1, 2, 3, 5, 7, 11, 13, 17] js\nassert deepEqual(ludic(20), [1, 2, 3, 5, 7, 11, 13, 17]);\nludic(26) should return [1, 2, 3, 5, 7, 11, 13, 17, 23, 25] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ludic-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8cf4ab7c490bc3382df725563598b8d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ludic-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert(Array isArray(ludic(2))); ludic(2) should return [1, 2] js assert deepEqual(ludic(2), [1, 2]); ludic(3) should return [1, 2, 3] js assert deepEqual(ludic(3), [1, 2, 3]); ludic(5) should return [1, 2, 3, 5] js assert deepEqual(ludic(5), [1, 2, 3, 5]); ludic(20) should return [1, 2, 3, 5, 7, 11, 13, 17] js assert deepEqual(ludic(20), [1, 2, 3, 5, 7, 11, 13, 17]); ludic(26) should return [1, 2, 3, 5, 7, 11, 13, 17, 23, 25] js assertdeepEqual(ludic(26), [1, 2, 3, 5, 7, 11, 13, 17, 23, 25]);\n--seed--\n--seed-contents--\n```js\nfunction ludic(n) {\n}\n```\n--solutions--\n```js\nfunction ludic(n) {\nconst makeArr = (s, e) => new Array(e + 1 - s) fill(s) map((e, i) => e + i);\nconst filterAtInc = (arr, n) => arr filter((e, i) => (i + 1) % n);\nconst makeLudic = (arr, result) => {\nconst iter = arr shift();\nresult push(iter);\nreturn arr length makeLudic(filterAtInc(arr, iter), result) : result;\n};\nconst ludicResult = makeLudic(makeArr(2, n), [1]);\nreturn ludicResult;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\ludic-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "75845021abc78417fe47becc6f601342",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\luhn-test-of-credit-card-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5ea28156e79528a9ab248f27\ntitle: Luhn test of credit card numbers\nchallengeType: 1\nforumTopicId: 385284\ndashedName: luhn-test-of-credit-card-numbers\n--description--\nThe Luhn test is used by some credit card companies to distinguish valid credit card numbers from what could be a random selection of digits Those companies using credit card numbers that can be validated by the Luhn test have numbers that pass the following test:\nReverse the order of the digits in the number Take the first, third, and every other odd digit in the reversed digits and sum them to form the partial sum s1\nTaking the second, fourth and every other even digit in the reversed digits:\nMultiply each digit by two and sum the digits if the answer is greater than nine to form partial sums for the even digits Sum the partial sums of the even digits to form s2 If s1 + s2 ends in zero then the original number is in the form of a valid credit card number as verified by the Luhn test For example, if the trial number is 49927398716:\n```md\nReverse the digits:\n61789372994\nSum the odd digits:\n6 + 7 + 9 + 7 + 9 + 4 = 42 = s1\nThe even digits:\n1, 8, 3, 2, 9\nTwo times each even digit:\n2, 16, 6, 4, 18\nSum the digits of each multiplication:\n2, 7, 6, 4, 9\nSum the last:\n2 + 7 + 6 + 4 + 9 = 28 = s2\ns1 + s2 = 70 which ends in zero which means that 49927398716 passes the Luhn test ```\n--instructions--\nWrite a function that will validate a number with the Luhn test Return true if it's a valid number Otherwise, return false --hints--\nluhnTest should be a function js\nassert(typeof luhnTest === 'function');\nluhnTest(\"4111111111111111\") should return a boolean js\nassert(typeof luhnTest('4111111111111111') === 'boolean');\nluhnTest(\"4111111111111111\") should return true js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\luhn-test-of-credit-card-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "90f6505a95ec643939883cb335b86adc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\luhn-test-of-credit-card-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "+ 4 + 9 = 28 = s2 s1 + s2 = 70 which ends in zero which means that 49927398716 passes the Luhn test ``` --instructions-- Write a function that will validate a number with the Luhn test Return true if it's a valid number Otherwise, return false --hints-- luhnTest should be a function js assert(typeof luhnTest === 'function'); luhnTest(\"4111111111111111\") should return a boolean js assert(typeof luhnTest('4111111111111111') === 'boolean'); luhnTest(\"4111111111111111\") should return true js assertequal(luhnTest('4111111111111111'), true);\nluhnTest(\"4111111111111112\") should return false js\nassert equal(luhnTest('4111111111111112'), false);\nluhnTest(\"49927398716\") should return true js\nassert equal(luhnTest('49927398716'), true);\nluhnTest(\"49927398717\") should return false js\nassert equal(luhnTest('49927398717'), false);\nluhnTest(\"1234567812345678\") should return false js\nassert equal(luhnTest('1234567812345678'), false);\nluhnTest(\"1234567812345670\") should return true js\nassert equal(luhnTest('1234567812345670'), true);\n--seed--\n--seed-contents--\n```js\nfunction luhnTest(str) {\n}\n```\n--solutions--\njs\nfunction luhnTest(str) {\nvar luhnArr = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9];\nvar counter = 0;\nvar incNum;\nvar odd = false;\nvar temp = String(str) replace(/[^\\d]/g, '');\nif (temp length == 0) return false;\nfor (var i = temp length - 1; i >= 0; --i) {\nincNum = parseInt(temp charAt(i), 10);\ncounter += (odd = odd) incNum : luhnArr[incNum];\n}\nreturn counter % 10 == 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\luhn-test-of-credit-card-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8f4b4b33ae058f896ddf7a4dd9ef41e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lychrel-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5ea2815a8640bcc6cb7dab3c\ntitle: Lychrel numbers\nchallengeType: 1\nforumTopicId: 385287\ndashedName: lychrel-numbers\n--description--\nTake an integer n₀, greater than zero Form the next number n of the series by reversing n₀ and adding it to n₀\nStop when n becomes palindromic - i e the digits of n in reverse order == n The above recurrence relation when applied to most starting numbers n = 1, 2, terminates in a palindrome quite quickly For example if n₀ = 12 we get:\nmd\n12\n12 + 21 = 33,  a palindrome And if n₀ = 55 we get:\nmd\n55\n55 + 55 = 110\n110 + 011 = 121,  a palindrome Notice that the check for a palindrome happens after an addition Some starting numbers seem to go on forever; the recurrence relation for 196 has been calculated for millions of repetitions forming numbers with millions of digits, without forming a palindrome These numbers that do not end in a palindrome are called Lychrel numbers For the purposes of this task a Lychrel number is any starting number that does not form a palindrome within 500 (or more) iterations Seed and related Lychrel numbers:\nAny integer produced in the sequence of a Lychrel number is also a Lychrel number In general, any sequence from one Lychrel number might converge to join the sequence from a prior Lychrel number candidate; for example the sequences for the numbers 196 and then 689 begin:\nmd\n196\n196 + 691 = 887\n887 + 788 = 1675\n1675 + 5761 = 7436\n7436 + 6347 = 13783\n13783 + 38731 = 52514\n52514 + 41525 = 94039 689\n689 + 986 = 1675\n1675 + 5761 = 7436 So we see that the sequence starting with 689 converges to, and continues with the same numbers as that for 196",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3474,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lychrel-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d687846efc002e074927e131dcab62aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lychrel-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for example the sequences for the numbers 196 and then 689 begin: md 196 196 + 691 = 887 887 + 788 = 1675 1675 + 5761 = 7436 7436 + 6347 = 13783 13783 + 38731 = 52514 52514 + 41525 = 94039 689 689 + 986 = 1675 1675 + 5761 = 7436 So we see that the sequence starting with 689 converges to, and continues with the same numbers as that for 196Because of this we can further split the Lychrel numbers into true Seed Lychrel number candidates, and Related numbers that produce no palindromes but have integers in their sequence seen as part of the sequence generated from a lower Lychrel number --instructions--\nWrite a function that takes a number as a parameter Return true if the number is a Lynchrel number Otherwise, return false Remember that the iteration limit is 500 --hints--\nisLychrel should be a function js\nassert(typeof isLychrel === 'function');\nisLychrel(12) should return a boolean js\nassert(typeof isLychrel(12) === 'boolean');\nisLychrel(12) should return false js\nassert equal(isLychrel(12), false);\nisLychrel(55) should return false js\nassert equal(isLychrel(55), false);\nisLychrel(196) should return true js\nassert equal(isLychrel(196), true);\nisLychrel(879) should return true js\nassert equal(isLychrel(879), true);\nisLychrel(44987) should return false js\nassert equal(isLychrel(44987), false);\nisLychrel(7059) should return true js\nassert equal(isLychrel(7059), true);\n--seed--\n--seed-contents--\n```js\nfunction isLychrel(n) {\n}\n```\n--solutions--\n```js\nfunction isLychrel(n) {\nfunction reverse(num) {\nreturn parseInt(\nnum toString() split('') reverse()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3474,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lychrel-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f05eb7e5e83b9b3801c4ffbec7162a9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lychrel-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "boolean js assert(typeof isLychrel(12) === 'boolean'); isLychrel(12) should return false js assert equal(isLychrel(12), false); isLychrel(55) should return false js assert equal(isLychrel(55), false); isLychrel(196) should return true js assert equal(isLychrel(196), true); isLychrel(879) should return true js assert equal(isLychrel(879), true); isLychrel(44987) should return false js assert equal(isLychrel(44987), false); isLychrel(7059) should return true js assert equal(isLychrel(7059), true); --seed-- --seed-contents-- ```js function isLychrel(n) { } ``` --solutions-- ```js function isLychrel(n) { function reverse(num) { return parseInt( num toString() split('') reverse()join('')\n);\n}\nvar i;\nfor (i = 0; i < 500; i++) {\nn = n + reverse(n);\nif (n == reverse(n)) break;\n}\nreturn i == 500;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3474,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lychrel-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 248,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1428511a7c2434df3488bfd35a4a7e05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\s-expressions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59667989bf71cf555dd5d2ff\ntitle: S-Expressions\nchallengeType: 1\nforumTopicId: 302303\ndashedName: s-expressions\n--description--\nS-Expressions are one convenient way to parse and store data --instructions--\nWrite a simple reader/parser for S-Expressions that handles quoted and unquoted strings, integers and floats The function should read a single but nested S-Expression from a string and return it as a (nested) array Newlines and other whitespace may be ignored unless contained within a quoted string \"()\" inside quoted strings are not interpreted, but treated as part of the string Handling escaped quotes inside a string is optional; thus \"(foo\"bar)\" may be treated as a string \"foo\"bar\", or as an error For this, the reader need not recognize \\ for escaping, but should, in addition, recognize numbers if the language has appropriate data types Note that with the exception of ()\" (\\ if escaping is supported) and whitespace, there are no special characters Anything else is allowed without quotes The reader should be able to read the following input\n((data \"quoted data\" 123 4 5)\n(data ( @# (4 5) \"(more\" \"data)\")))\nand turn it into a native data structure --hints--\nparseSexpr should be a function js\nassert(typeof parseSexpr === 'function');\nparseSexpr('(data1 data2 data3)') should return ['data1', 'data2', 'data3']\njs\nassert deepEqual(parseSexpr(simpleSExpr), simpleSolution);\nparseSexpr('((data \"quoted data\" 123 4 5) (data ( @# (4 5) \"(more\" \"data)\")))') should return [['data', '\"quoted data\"', 123, 4 5], ['data', [' @#', [4 5], '\"(more\"', '\"data)\"']]] js\nassert deepEqual(parseSexpr(basicSExpr), basicSolution);\n--seed--\n--after-user-code--\n```js\nconst simpleSExpr = '(data1 data2 data3)';\nconst simpleSolution = ['data1', 'data2', 'data3'];\nconst basicSExpr = '((data \"quoted data\" 123 4 5) (data ( @# (4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2832,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\s-expressions.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7a22e24beb3ed59c165b608d9dbd8eb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\s-expressions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert(typeof parseSexpr === 'function'); parseSexpr('(data1 data2 data3)') should return ['data1', 'data2', 'data3'] js assert deepEqual(parseSexpr(simpleSExpr), simpleSolution); parseSexpr('((data \"quoted data\" 123 4 5) (data ( @# (4 5) \"(more\" \"data)\")))') should return [['data', '\"quoted data\"', 123, 4 5], ['data', [' @#', [4 5], '\"(more\"', '\"data)\"']]] js assert deepEqual(parseSexpr(basicSExpr), basicSolution); --seed-- --after-user-code-- ```js const simpleSExpr = '(data1 data2 data3)'; const simpleSolution = ['data1', 'data2', 'data3']; const basicSExpr = '((data \"quoted data\" 123 4 5) (data ( @# (45) \"(more\" \"data)\")))';\nconst basicSolution = [[\"data\",\"\\\"quoted data\\\"\",123,4 5],[\"data\",[\" @#\",[4 5],\"\\\"(more\\\"\",\"\\\"data)\\\"\"]]];\n```\n--seed-contents--\n```js\nfunction parseSexpr(str) {\nreturn true;\n}\n```\n--solutions--\njs\nfunction parseSexpr(str) {\nconst t = str match(/\\s*(\"[^\"]*\"|\\(|\\)|\"|[^\\s()\"]+)/g);\nfor (var o, c = 0, i = t length - 1; i >= 0; i--) {\nvar n,\nti = t[i] trim();\nif (ti == '\"') return;\nelse if (ti == '(') t[i] = '[', c += 1;\nelse if (ti == ')') t[i] = ']', c -= 1;\nelse if ((n = +ti) == ti) t[i] = n;\nelse t[i] = `'${ti replace('\\'', '\\\\\\'')}'`;\nif (i > 0 && ti = ']' && t[i - 1] trim() = '(') t splice(i, 0, ',');\nif ( c) if ( o) o = true; else return;\n}\nreturn c undefined : eval(t join(''));\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2832,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\s-expressions.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fc9710a3ead12599e25b9c014601eb35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5ea2815e364d9a2222ea55f8\ntitle: LZW compression\nchallengeType: 1\nforumTopicId: 385288\ndashedName: lzw-compression\n--description--\nThe Lempel-Ziv-Welch (LZW) algorithm provides loss-less data compression --instructions--\nWrite a function that takes two parameters The first parameter is a boolean where true indicates compress and false indicates decompress The second parameter is either a string or an array to be processed If it is a string to be compressed, return an array of numbers If it's an array of numbers to be decompressed, return a string --hints--\nLZW should be a function js\nassert(typeof LZW === 'function');\nLZW(true, \"TOBEORNOTTOBEORTOBEORNOT\") should return a array js\nassert(Array isArray(LZW(true, 'TOBEORNOTTOBEORTOBEORNOT')));\nLZW(false, [84, 79, 66, 69, 79, 82, 78, 79, 84, 256, 258, 260, 265, 259, 261, 263]) should return a string js\nassert(\ntypeof LZW(false, [\n84,\n79,\n66,\n69,\n79,\n82,\n78,\n79,\n84,\n256,\n258,\n260,\n265,\n259,\n261,\n263\n]) === 'string'\n);\nLZW(true, \"TOBEORNOTTOBEORTOBEORNOT\") should return [84, 79, 66, 69, 79, 82, 78, 79, 84, 256, 258, 260, 265, 259, 261, 263] js\nassert deepEqual(LZW(true, 'TOBEORNOTTOBEORTOBEORNOT'), [\n84,\n79,\n66,\n69,\n79,\n82,\n78,\n79,\n84,\n256,\n258,\n260,\n265,\n259,\n261,\n263\n]);\nLZW(false, [84, 79, 66, 69, 79, 82, 78, 79, 84, 256, 258, 260, 265, 259, 261, 263]) should return \"TOBEORNOTTOBEORTOBEORNOT\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "274e87a174c42f02d10541803a8f78ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "84, 256, 258, 260, 265, 259, 261, 263 ]) === 'string' ); LZW(true, \"TOBEORNOTTOBEORTOBEORNOT\") should return [84, 79, 66, 69, 79, 82, 78, 79, 84, 256, 258, 260, 265, 259, 261, 263] js assert deepEqual(LZW(true, 'TOBEORNOTTOBEORTOBEORNOT'), [ 84, 79, 66, 69, 79, 82, 78, 79, 84, 256, 258, 260, 265, 259, 261, 263 ]); LZW(false, [84, 79, 66, 69, 79, 82, 78, 79, 84, 256, 258, 260, 265, 259, 261, 263]) should return \"TOBEORNOTTOBEORTOBEORNOT\" js assertequal(\nLZW(false, [\n84,\n79,\n66,\n69,\n79,\n82,\n78,\n79,\n84,\n256,\n258,\n260,\n265,\n259,\n261,\n263\n]),\n'TOBEORNOTTOBEORTOBEORNOT'\n);\nLZW(true, \"0123456789\") should return [48, 49, 50, 51, 52, 53, 54, 55, 56, 57] js\nassert deepEqual(LZW(true, '0123456789'), [\n48,\n49,\n50,\n51,\n52,\n53,\n54,\n55,\n56,\n57\n]);\nLZW(false, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) should return \"0123456789\" js\nassert equal(\nLZW(false, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57]),\n'0123456789'\n);\nLZW(true, \"BABAABAAA\") should return [66, 65, 256, 257, 65, 260] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "ffae72b1adc1dc44eb8cb95ba9dae848",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "263 ]), 'TOBEORNOTTOBEORTOBEORNOT' ); LZW(true, \"0123456789\") should return [48, 49, 50, 51, 52, 53, 54, 55, 56, 57] js assert deepEqual(LZW(true, '0123456789'), [ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 ]); LZW(false, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) should return \"0123456789\" js assert equal( LZW(false, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), '0123456789' ); LZW(true, \"BABAABAAA\") should return [66, 65, 256, 257, 65, 260] js assertdeepEqual(LZW(true, 'BABAABAAA'), [66, 65, 256, 257, 65, 260]);\nLZW(false, [66, 65, 256, 257, 65, 260]) should return \"BABAABAAA\" js\nassert equal(LZW(false, [66, 65, 256, 257, 65, 260]), 'BABAABAAA');\n--seed--\n--seed-contents--\n```js\nfunction LZW (compressData, input) {\n}\n```\n--solutions--\n```js\nfunction LZW (compressData, input) {\nfunction compress(uncompressed) {\n// Build the dictionary var i,\ndictionary = {},\nc,\nwc,\nw = \"\",\nresult = [],\ndictSize = 256;\nfor (i = 0; i < 256; i += 1) {\ndictionary[String fromCharCode(i)] = i;\n}\nfor (i = 0; i < uncompressed length; i += 1) {\nc = uncompressed charAt(i);\nwc = w + c;\n//Do not use dictionary[wc] because javascript arrays\n//will return values for array['pop'], array['push'] etc\n// if (dictionary[wc]) {\nif (dictionary hasOwnProperty(wc)) {\nw = wc;\n} else {\nresult",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "d989d8092839bc1e534bb3e228962aba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "wc, w = \"\", result = [], dictSize = 256; for (i = 0; i < 256; i += 1) { dictionary[String fromCharCode(i)] = i; } for (i = 0; i < uncompressed length; i += 1) { c = uncompressed charAt(i); wc = w + c; //Do not use dictionary[wc] because javascript arrays //will return values for array['pop'], array['push'] etc // if (dictionary[wc]) { if (dictionary hasOwnProperty(wc)) { w = wc; } else { resultpush(dictionary[w]);\n// Add wc to the dictionary dictionary[wc] = dictSize++;\nw = String(c);\n}\n}\n// Output the code for w if (w == \"\") {\nresult push(dictionary[w]);\n}\nreturn result;\n}\nfunction decompress(compressed) {\n// Build the dictionary var i,\ndictionary = [],\nw,\nresult,\nk,\nentry = \"\",\ndictSize = 256;\nfor (i = 0; i < 256; i += 1) {\ndictionary[i] = String fromCharCode(i);\n}\nw = String fromCharCode(compressed[0]);\nresult = w;\nfor (i = 1; i < compressed length; i += 1) {\nk = compressed[i];\nif (dictionary[k]) {\nentry = dictionary[k];\n} else {\nif (k === dictSize) {\nentry = w + w charAt(0);\n} else {\nreturn null;\n}\n}\nresult += entry;\n// Add w+entry[0] to the dictionary dictionary[dictSize++] = w + entry charAt(0);\nw = entry;\n}\nreturn result;\n}\nif(compressData){\nreturn compress(input)\n}else{\nreturn decompress(input)\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lzw-compression.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "dff7e69b08f534cea3d77d45df7ea26f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\search-a-list-of-records.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eb3e497b8d6d7f63c5517ea\ntitle: Search a list of records\nchallengeType: 1\nforumTopicId: 385315\ndashedName: search-a-list-of-records\n--description--\nA record consists of attributes that describe an entity Each attribute has a name and a value For example, a person can have an attribute age with a value of 25 An important operation on a list of records is to find a record with a particular attribute value --instructions--\nWrite a function that takes a string as a parameter The function should return the index of the item in list for which the value of the name attribute matches the given string --hints--\nsearchCity should be a function js\nassert(typeof searchCity === 'function');\nsearchCity(\"Dar Es Salaam\") should return a number js\nassert(typeof searchCity('Dar Es Salaam') === 'number');\nsearchCity(\"Dar Es Salaam\") should return 6 js\nassert equal(searchCity('Dar Es Salaam'), 6);\nsearchCity(\"Casablanca\") should return 9 js\nassert equal(searchCity('Casablanca'), 9);\nsearchCity(\"Cairo\") should return 1 js\nassert equal(searchCity('Cairo'), 1);\nsearchCity(\"Mogadishu\") should return 4 js\nassert equal(searchCity('Mogadishu'), 4);\nsearchCity(\"Lagos\") should return 0 js\nassert equal(searchCity('Lagos'), 0);\n--seed--\n--seed-contents--\n```js\nfunction searchCity(name) {\n}\nconst list = [\n{ name: 'Lagos', population: 21 0 },\n{ name: 'Cairo', population: 15 2 },\n{ name: 'Kinshasa-Brazzaville', population: 11 3 },\n{ name: 'Greater Johannesburg', population: 7 55 },\n{ name: 'Mogadishu', population: 5 85 },\n{ name: 'Khartoum-Omdurman', population: 4 98 },\n{ name: 'Dar Es Salaam', population: 4 7 },\n{ name: 'Alexandria', population: 4 58 },\n{ name: 'Abidjan', population: 4 4 },\n{ name: 'Casablanca', population: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\search-a-list-of-records.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f4ff6c9d54effae2576f79f73e42fd66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\search-a-list-of-records.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} const list = [ { name: 'Lagos', population: 21 0 }, { name: 'Cairo', population: 15 2 }, { name: 'Kinshasa-Brazzaville', population: 11 3 }, { name: 'Greater Johannesburg', population: 7 55 }, { name: 'Mogadishu', population: 5 85 }, { name: 'Khartoum-Omdurman', population: 4 98 }, { name: 'Dar Es Salaam', population: 4 7 }, { name: 'Alexandria', population: 4 58 }, { name: 'Abidjan', population: 4 4 }, { name: 'Casablanca', population: 398 }\n];\n```\n--solutions--\n```js\nfunction searchCity(name) {\nreturn list findIndex(item => item name === name);\n}\nconst list = [\n{ name: 'Lagos', population: 21 0 },\n{ name: 'Cairo', population: 15 2 },\n{ name: 'Kinshasa-Brazzaville', population: 11 3 },\n{ name: 'Greater Johannesburg', population: 7 55 },\n{ name: 'Mogadishu', population: 5 85 },\n{ name: 'Khartoum-Omdurman', population: 4 98 },\n{ name: 'Dar Es Salaam', population: 4 7 },\n{ name: 'Alexandria', population: 4 58 },\n{ name: 'Abidjan', population: 4 4 },\n{ name: 'Casablanca', population: 3 98 }\n];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\search-a-list-of-records.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7a1f0da947947935df61c4a00b6bba24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sedols.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59d9c6bc214c613ba73ff012\ntitle: SEDOLs\nchallengeType: 1\nforumTopicId: 302305\ndashedName: sedols\n--description--\nSEDOL is a list of securities identification numbers issued by the London Stock Exchange For each number list of 6-digit SEDOLs, calculate and append the checksum digit That is, given the input string on the left, your function should return the corresponding string on the right:\n710889 => 7108899\nB0YBKJ => B0YBKJ7\n406566 => 4065663\nB0YBLH => B0YBLH2\n228276 => 2282765\nB0YBKL => B0YBKL9\n557910 => 5579107\nB0YBKR => B0YBKR5\n585284 => 5852842\nB0YBKT => B0YBKT7\nB00030 => B000300\nCheck that each input is correctly formed, especially with respect to valid characters allowed in a SEDOL string Your function should return null on an invalid input --hints--\nsedol should be a function js\nassert(typeof sedol === 'function');\nsedol('a') should return null js\nassert(sedol('a') === null);\nsedol('710889') should return '7108899' js\nassert(sedol('710889') === '7108899');\nsedol('BOATER') should return null js\nassert(sedol('BOATER') === null);\nsedol('228276') should return '2282765' js\nassert(sedol('228276') === '2282765');\n--seed--\n--seed-contents--\n```js\nfunction sedol(input) {\nconst checkSum = 0\nreturn checkSum;\n}\n```\n--solutions--\n```js\nfunction sedol(input) {\nconst checkDigit = sedolCheckDigit(input);\nif (checkDigit == null) {\nreturn input + checkDigit;\n}\nreturn null;\n}\nconst weight = [1, 3, 1, 7, 3, 9, 1];\nfunction sedolCheckDigit(char6) {\nif (char6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1987,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sedols.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e9a237b5018c9a8bfe0a0bf413dfa35e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sedols.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "null); sedol('710889') should return '7108899' js assert(sedol('710889') === '7108899'); sedol('BOATER') should return null js assert(sedol('BOATER') === null); sedol('228276') should return '2282765' js assert(sedol('228276') === '2282765'); --seed-- --seed-contents-- ```js function sedol(input) { const checkSum = 0 return checkSum; } ``` --solutions-- ```js function sedol(input) { const checkDigit = sedolCheckDigit(input); if (checkDigit == null) { return input + checkDigit; } return null; } const weight = [1, 3, 1, 7, 3, 9, 1]; function sedolCheckDigit(char6) { if (char6search(/^[0-9BCDFGHJKLMNPQRSTVWXYZ]{6}$/) === -1) {\nreturn null;\n}\nlet sum = 0;\nfor (let i = 0; i < char6 length; i++) {\nsum += weight[i] * parseInt(char6 charAt(i), 36);\n}\nconst checkSum = (10 - (sum % 10)) % 10;\nreturn checkSum toString();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1987,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sedols.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "60f303c7447854a393e1a8c620b786ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sailors-coconuts-and-a-monkey-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 59da22823d04c95919d46269\ntitle: 'Sailors, coconuts and a monkey problem'\nchallengeType: 1\nforumTopicId: 302304\ndashedName: sailors-coconuts-and-a-monkey-problem\n--description--\nFive sailors are shipwrecked on an island and collect a large pile of coconuts during the day That night the first sailor wakes up and decides to take his first share early so tries to divide the pile of coconuts equally into five piles but finds that there is one coconut left over, so he tosses it to a monkey and then hides \"his\" one of the five equally sized piles of coconuts and pushes the other four piles together to form a single visible pile of coconuts again and goes to bed To cut a long story short, each of the sailors in turn gets up once during the night and performs the same actions of dividing the coconut pile into five, finding that one coconut is left over and giving that single remainder coconut to the monkey, then push the other four piles together to form a single pile In the morning (after the surreptitious and separate action of each of the five sailors during the night), the remaining coconuts are divided into five equal piles for each of the sailors, whereupon it is found that the pile of coconuts divides equally amongst the sailors with no remainder (Nothing for the monkey in the morning )\n--instructions--\nCreate a function that returns the minimum possible size of the initial pile of coconuts collected during the day for N sailors Note: Of course the tale is told in a world where the collection of any number of coconuts in a day and multiple divisions of the pile, etc can occur in time fitting the story line, so as not to affect mathematics --hints--\nsplitCoconuts should be a function js\nassert(typeof splitCoconuts === 'function');\nsplitCoconuts(5) should return 3121 js\nassert(splitCoconuts(5) === 3121);\nsplitCoconuts(6) should return 233275 js\nassert(splitCoconuts(6) === 233275);\nsplitCoconuts(7) should return 823537",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sailors-coconuts-and-a-monkey-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "822ee712b71c593556a10f4e98491e69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sailors-coconuts-and-a-monkey-problem.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for N sailors Note: Of course the tale is told in a world where the collection of any number of coconuts in a day and multiple divisions of the pile, etc can occur in time fitting the story line, so as not to affect mathematics --hints-- splitCoconuts should be a function js assert(typeof splitCoconuts === 'function'); splitCoconuts(5) should return 3121 js assert(splitCoconuts(5) === 3121); splitCoconuts(6) should return 233275 js assert(splitCoconuts(6) === 233275); splitCoconuts(7) should return 823537js\nassert(splitCoconuts(7) === 823537);\n--seed--\n--seed-contents--\n```js\nfunction splitCoconuts(intSailors) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction splitCoconuts(intSailors) {\nlet intNuts = intSailors;\nlet result = splitCoconutsHelper(intNuts, intSailors);\nwhile ( result) {\nintNuts += 1;\nresult = splitCoconutsHelper(intNuts, intSailors);\n}\nreturn intNuts;\n}\nfunction splitCoconutsHelper(intNuts, intSailors, intDepth) {\nconst nDepth = intDepth == undefined intDepth : intSailors;\nconst portion = Math floor(intNuts / intSailors);\nconst remain = intNuts % intSailors;\nif (portion <= 0 || remain == (nDepth 1 : 0)) {\nreturn null;\n}\nif (nDepth) {\nreturn splitCoconutsHelper(\nintNuts - portion - remain, intSailors, nDepth - 1\n);\n}\nreturn intNuts;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sailors-coconuts-and-a-monkey-problem.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8e8e07c2974f05d5817ad97647d6af9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e6decd8ec8d7db960950d1c\ntitle: LU decomposition\nchallengeType: 1\nforumTopicId: 385280\ndashedName: lu-decomposition\n--description--\nEvery square matrix $A$ can be decomposed into a product of a lower triangular matrix $L$ and a upper triangular matrix $U$ This is known as the LU decomposition $A = LU$\nIt is a modified form of Gaussian elimination While the Cholesky decomposition only works for symmetric, positive definite matrices, the more general LU decomposition works for any square matrix There are several algorithms for calculating $L$ and $U$ To derive Crout's algorithm for a 3x3 example, we have to solve the following system:\n\\begin{align}A = \\begin{pmatrix} a_{11} & a_{12} & a_{13}\\\\ a_{21} & a_{22} & a_{23}\\\\ a_{31} & a_{32} & a_{33}\\\\ \\end{pmatrix}= \\begin{pmatrix} l_{11} & 0 & 0 \\\\ l_{21} & l_{22} & 0 \\\\ l_{31} & l_{32} & l_{33}\\\\ \\end{pmatrix} \\begin{pmatrix} u_{11} & u_{12} & u_{13} \\\\ 0 & u_{22} & u_{23} \\\\ 0 & 0 & u_{33} \\end{pmatrix} = LU\\end{align}\nWe now would have to solve 9 equations with 12 unknowns To make the system uniquely solvable, usually the diagonal elements of $L$ are set to 1\n$l_{11}=1$\n$l_{22}=1$\n$l_{33}=1$\nso we get a solvable system of 9 unknowns and 9 equations",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "128b311dc053478588acb168961fd064",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\\\\ l_{21} & l_{22} & 0 \\\\ l_{31} & l_{32} & l_{33}\\\\ \\end{pmatrix} \\begin{pmatrix} u_{11} & u_{12} & u_{13} \\\\ 0 & u_{22} & u_{23} \\\\ 0 & 0 & u_{33} \\end{pmatrix} = LU\\end{align} We now would have to solve 9 equations with 12 unknowns To make the system uniquely solvable, usually the diagonal elements of $L$ are set to 1 $l_{11}=1$ $l_{22}=1$ $l_{33}=1$ so we get a solvable system of 9 unknowns and 9 equations\\begin{align}A = \\begin{pmatrix} a_{11} & a_{12} & a_{13}\\\\ a_{21} & a_{22} & a_{23}\\\\ a_{31} & a_{32} & a_{33}\\\\ \\end{pmatrix} = \\begin{pmatrix} 1 & 0 & 0 \\\\ l_{21} & 1 & 0 \\\\ l_{31} & l_{32} & 1\\\\ \\end{pmatrix} \\begin{pmatrix} u_{11} & u_{12} & u_{13} \\\\ 0 & u_{22} & u_{23} \\\\ 0 & 0 & u_{33} \\end{pmatrix} = \\begin{pmatrix} u_{11} & u_{12} & u_{13} \\\\ u_{11}l_{21} & u_{12}l_{21}+u_{22} & u_{13}l_{21}+u_{23} \\\\ u_{11}l_{31} & u_{12}l_{31}+u_{22}l_{32} & u_{13}l_{31} + u_{23}l_{32}+u_{33} \\end{pmatrix} = LU\\end{align}\nSolving for the other $l$ and $u$, we get the following equations:\n$u_{11}=a_{11}$\n$u_{12}=a_{12}$\n$u_{13}=a_{13}$\n$u_{22}=a_{22} - u_{12}l_{21}$\n$u_{23}=a_{23} - u_{13}l_{21}$\n$u_{33}=a_{33} - (u_{13}l_{31} + u_{23}l_{32})$\nand for $l$:\n$l_{21}=\\frac{1}{u_{11}} a_{21}$\n$l_{31}=\\frac{1}{u_{11}} a_{31}$\n$l_{32}=\\frac{1}{u_{22}} (a_{32} - u_{12}l_{31})$\nWe see that there is a calculation pattern, which can be expressed as the following formulas, first for $U$\n$u_{ij} = a_{ij} - \\sum_{k=1}^{i-1} u_{kj}l_{ik}$\nand then for $L$\n$l_{ij} = \\frac{1}{u_{jj}} (a_{ij} - \\sum_{k=1}^{j-1} u_{kj}l_{ik})$\nWe see in the second formula that to get the $l_{ij}$ below the diagonal, we have to divide by the diagonal element (pivot) $u_{jj}$, so we get problems when $u_{jj}$ is either 0 or very small, which leads to numerical instability",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 787,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "48e0120d25951f006224135476227674",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "see that there is a calculation pattern, which can be expressed as the following formulas, first for $U$ $u_{ij} = a_{ij} - \\sum_{k=1}^{i-1} u_{kj}l_{ik}$ and then for $L$ $l_{ij} = \\frac{1}{u_{jj}} (a_{ij} - \\sum_{k=1}^{j-1} u_{kj}l_{ik})$ We see in the second formula that to get the $l_{ij}$ below the diagonal, we have to divide by the diagonal element (pivot) $u_{jj}$, so we get problems when $u_{jj}$ is either 0 or very small, which leads to numerical instabilityThe solution to this problem is pivoting $A$, which means rearranging the rows of $A$, prior to the $LU$ decomposition, in a way that the largest element of each column gets onto the diagonal of $A$ Rearranging the rows means to multiply $A$ by a permutation matrix $P$:\n$PA \\Rightarrow A'$\nExample:\n\\begin{align} \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix} \\begin{pmatrix} 1 & 4 \\\\ 2 & 3 \\end{pmatrix} \\Rightarrow \\begin{pmatrix} 2 & 3 \\\\ 1 & 4 \\end{pmatrix} \\end{align}\nThe decomposition algorithm is then applied on the rearranged matrix so that\n$PA = LU$\n--instructions--\nThe task is to implement a routine which will take a square nxn matrix $A$ and return a lower triangular matrix $L$, a upper triangular matrix $U$ and a permutation matrix $P$, so that the above equation is fulfilled The returned value should be in the form [L, U, P] --hints--\nluDecomposition should be a function js\nassert(typeof luDecomposition == 'function');\nluDecomposition([[1, 3, 5], [2, 4, 7], [1, 1, 0]]) should return a array js\nassert(\nArray",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "3652b8208947374f330942189647747a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "task is to implement a routine which will take a square nxn matrix $A$ and return a lower triangular matrix $L$, a upper triangular matrix $U$ and a permutation matrix $P$, so that the above equation is fulfilled The returned value should be in the form [L, U, P] --hints-- luDecomposition should be a function js assert(typeof luDecomposition == 'function'); luDecomposition([[1, 3, 5], [2, 4, 7], [1, 1, 0]]) should return a array js assert( ArrayisArray(\nluDecomposition([\n[1, 3, 5],\n[2, 4, 7],\n[1, 1, 0]\n])\n)\n);\nluDecomposition([[1, 3, 5], [2, 4, 7], [1, 1, 0]]) should return [[[1, 0, 0], [0 5, 1, 0], [0 5, -1, 1]], [[2, 4, 7], [0, 1, 1 5], [0, 0, -2]], [[0, 1, 0], [1, 0, 0], [0, 0, 1]]] js\nassert deepEqual(\nluDecomposition([\n[1, 3, 5],\n[2, 4, 7],\n[1, 1, 0]\n]),\n[\n[\n[1, 0, 0],\n[0 5, 1, 0],\n[0 5, -1, 1]\n],\n[\n[2, 4, 7],\n[0, 1, 1 5],\n[0, 0, -2]\n],\n[\n[0, 1, 0],\n[1, 0, 0],\n[0, 0, 1]\n]\n]\n);\nluDecomposition([[11, 9, 24, 2], [1, 5, 2, 6], [3, 17, 18, 1], [2, 5, 7, 1]]) should return [[[1, 0, 0, 0], [0 2727272727272727, 1, 0, 0], [0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "684bb75e540e7c8343d0cbd93b1d58d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3, 5], [2, 4, 7], [1, 1, 0] ]), [ [ [1, 0, 0], [0 5, 1, 0], [0 5, -1, 1] ], [ [2, 4, 7], [0, 1, 1 5], [0, 0, -2] ], [ [0, 1, 0], [1, 0, 0], [0, 0, 1] ] ] ); luDecomposition([[11, 9, 24, 2], [1, 5, 2, 6], [3, 17, 18, 1], [2, 5, 7, 1]]) should return [[[1, 0, 0, 0], [0 2727272727272727, 1, 0, 0], [009090909090909091, 0 2875, 1, 0], [0 18181818181818182, 0 23124999999999996, 0 0035971223021580693, 1]], [[11, 9, 24, 2], [0, 14 545454545454547, 11 454545454545455, 0 4545454545454546], [0, 0, -3 4749999999999996, 5 6875], [0, 0, 0, 0 510791366906476]], [[1, 0, 0, 0], [0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 0, 1]]] js\nassert deepEqual(\nluDecomposition([\n[11, 9, 24, 2],\n[1, 5, 2, 6],\n[3, 17, 18, 1],\n[2, 5, 7, 1]\n]),\n[\n[\n[1, 0, 0, 0],\n[0 2727272727272727, 1, 0, 0],\n[0 09090909090909091, 0 2875, 1, 0],\n[0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "85d3542d86bd51bf6787cf6256da4a90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "9, 24, 2], [0, 14 545454545454547, 11 454545454545455, 0 4545454545454546], [0, 0, -3 4749999999999996, 5 6875], [0, 0, 0, 0 510791366906476]], [[1, 0, 0, 0], [0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 0, 1]]] js assert deepEqual( luDecomposition([ [11, 9, 24, 2], [1, 5, 2, 6], [3, 17, 18, 1], [2, 5, 7, 1] ]), [ [ [1, 0, 0, 0], [0 2727272727272727, 1, 0, 0], [0 09090909090909091, 0 2875, 1, 0], [018181818181818182, 0 23124999999999996, 0 0035971223021580693, 1]\n],\n[\n[11, 9, 24, 2],\n[0, 14 545454545454547, 11 454545454545455, 0 4545454545454546],\n[0, 0, -3 4749999999999996, 5 6875],\n[0, 0, 0, 0 510791366906476]\n],\n[\n[1, 0, 0, 0],\n[0, 0, 1, 0],\n[0, 1, 0, 0],\n[0, 0, 0, 1]\n]\n]\n);\nluDecomposition([[1, 1, 1], [4, 3, -1], [3, 5, 3]]) should return [[[1, 0, 0], [0 75, 1, 0], [0 25, 0 09090909090909091, 1]], [[4, 3, -1], [0, 2 75, 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "6507e9d21c55e43a1b9833459be9746e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1] ], [ [11, 9, 24, 2], [0, 14 545454545454547, 11 454545454545455, 0 4545454545454546], [0, 0, -3 4749999999999996, 5 6875], [0, 0, 0, 0 510791366906476] ], [ [1, 0, 0, 0], [0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 0, 1] ] ] ); luDecomposition([[1, 1, 1], [4, 3, -1], [3, 5, 3]]) should return [[[1, 0, 0], [0 75, 1, 0], [0 25, 0 09090909090909091, 1]], [[4, 3, -1], [0, 2 75, 375], [0, 0, 0 9090909090909091]], [[0, 1, 0], [0, 0, 1], [1, 0, 0]]] js\nassert deepEqual(\nluDecomposition([\n[1, 1, 1],\n[4, 3, -1],\n[3, 5, 3]\n]),\n[\n[\n[1, 0, 0],\n[0 75, 1, 0],\n[0 25, 0 09090909090909091, 1]\n],\n[\n[4, 3, -1],\n[0, 2 75, 3 75],\n[0, 0, 0 9090909090909091]\n],\n[\n[0, 1, 0],\n[0, 0, 1],\n[1, 0, 0]\n]\n]\n);\nluDecomposition([[1, -2, 3], [2, -5, 12], [0, 2, -10]]) should return [[[1, 0, 0], [0, 1, 0], [0 5, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "6235ef0ff7e81328e366472f101a50a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert deepEqual( luDecomposition([ [1, 1, 1], [4, 3, -1], [3, 5, 3] ]), [ [ [1, 0, 0], [0 75, 1, 0], [0 25, 0 09090909090909091, 1] ], [ [4, 3, -1], [0, 2 75, 3 75], [0, 0, 0 9090909090909091] ], [ [0, 1, 0], [0, 0, 1], [1, 0, 0] ] ] ); luDecomposition([[1, -2, 3], [2, -5, 12], [0, 2, -10]]) should return [[[1, 0, 0], [0, 1, 0], [0 5, 025, 1]], [[2, -5, 12], [0, 2, -10], [0, 0, -0 5]], [[0, 1, 0], [0, 0, 1], [1, 0, 0]]] js\nassert deepEqual(\nluDecomposition([\n[1, -2, 3],\n[2, -5, 12],\n[0, 2, -10]\n]),\n[\n[\n[1, 0, 0],\n[0, 1, 0],\n[0 5, 0 25, 1]\n],\n[\n[2, -5, 12],\n[0, 2, -10],\n[0, 0, -0 5]\n],\n[\n[0, 1, 0],\n[0, 0, 1],\n[1, 0, 0]\n]\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction luDecomposition(A) {\n}\n```\n--solutions--\n```js\nfunction luDecomposition(A) {\nfunction dotProduct(a, b) {\nvar sum = 0;\nfor (var i = 0; i < a length; i++)\nsum += a[i] * b[i]\nreturn sum;\n}\nfunction matrixMul(A, B) {\nvar result = new Array(A",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "858e7db301c1931caf559080e29bbe88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "25, 1] ], [ [2, -5, 12], [0, 2, -10], [0, 0, -0 5] ], [ [0, 1, 0], [0, 0, 1], [1, 0, 0] ] ] ); --seed-- --seed-contents-- ```js function luDecomposition(A) { } ``` --solutions-- ```js function luDecomposition(A) { function dotProduct(a, b) { var sum = 0; for (var i = 0; i < a length; i++) sum += a[i] * b[i] return sum; } function matrixMul(A, B) { var result = new Array(Alength);\nfor (var i = 0; i < A length; i++)\nresult[i] = new Array(B[0] length)\nvar aux = new Array(B length);\nfor (var j = 0; j < B[0] length; j++) {\nfor (var k = 0; k < B length; k++)\naux[k] = B[k][j];\nfor (var i = 0; i < A length; i++)\nresult[i][j] = dotProduct(A[i], aux);\n}\nreturn result;\n}\nfunction pivotize(m) {\nvar n = m length;\nvar id = new Array(n);\nfor (var i = 0; i < n; i++) {\nid[i] = new Array(n);\nid[i] fill(0)\nid[i][i] = 1;\n}\nfor (var i = 0; i < n; i++) {\nvar maxm = m[i][i];\nvar row = i;\nfor (var j = i; j < n; j++)\nif (m[j][i] > maxm) {\nmaxm = m[j][i];\nrow = j;\n}\nif (i = row) {\nvar tmp = id[i];\nid[i] = id[row];\nid[row] = tmp;\n}\n}\nreturn id;\n}\nvar n = A length;\nvar L = new Array(n);\nfor (var i = 0; i < n; i++) { L[i] = new Array(n); L[i]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "818523b7acb6d9b4133dcc8900b2d264",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "i++) { var maxm = m[i][i]; var row = i; for (var j = i; j < n; j++) if (m[j][i] > maxm) { maxm = m[j][i]; row = j; } if (i = row) { var tmp = id[i]; id[i] = id[row]; id[row] = tmp; } } return id; } var n = A length; var L = new Array(n); for (var i = 0; i < n; i++) { L[i] = new Array(n); L[i]fill(0) }\nvar U = new Array(n);\nfor (var i = 0; i < n; i++) { U[i] = new Array(n); U[i] fill(0) }\nvar P = pivotize(A);\nvar A2 = matrixMul(P, A);\nfor (var j = 0; j < n; j++) {\nL[j][j] = 1;\nfor (var i = 0; i < j + 1; i++) {\nvar s1 = 0;\nfor (var k = 0; k < i; k++)\ns1 += U[k][j] * L[i][k];\nU[i][j] = A2[i][j] - s1;\n}\nfor (var i = j; i < n; i++) {\nvar s2 = 0;\nfor (var k = 0; k < j; k++)\ns2 += U[k][j] * L[i][k];\nL[i][j] = (A2[i][j] - s2) / U[j][j];\n}\n}\nreturn [L, U, P];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\lu-decomposition.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "b1e2e99d79b650149c58377bec83350d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-describing-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eaf48389ee512d4d103684b\ntitle: Self Describing Numbers\nchallengeType: 1\nforumTopicId: 385289\ndashedName: self-describing-numbers\n--description--\nThere are several so-called \"self-describing\" or \"self-descriptive\" integers An integer is said to be \"self-describing\" if it has the property that, when digit positions are labeled 0 to N-1, the digit in each position is equal to the number of times that digit appears in the number For example, 2020 is a four-digit self describing number:\nposition 0 has value 2 and there are two 0s in the number;\nposition 1 has value 0 and there are no 1s in the number;\nposition 2 has value 2 and there are two 2s;\nposition 3 has value 0 and there are zero 3s;\nSelf-describing numbers < 100,000,000 are: 1210, 2020, 21200, 3211000, 42101000 --instructions--\nWrite a function that takes a positive integer as a parameter If it is self-describing return true Otherwise, return false --hints--\nisSelfDescribing should be a function js\nassert(typeof isSelfDescribing == 'function');\nisSelfDescribing() should return a boolean js\nassert(typeof isSelfDescribing(2020) == 'boolean');\nisSelfDescribing(2020) should return true js\nassert equal(isSelfDescribing(2020), true);\nisSelfDescribing(3021) should return false js\nassert equal(isSelfDescribing(3021), false);\nisSelfDescribing(3211000) should return true js\nassert equal(isSelfDescribing(3211000), true);\n--seed--\n--seed-contents--\n```js\nfunction isSelfDescribing(n) {\n}\n```\n--solutions--\n```js\nfunction isSelfDescribing(n) {\nlet digits = String(n) split(\"\");\ndigits = digits map(function(e) {return parseInt(e)});\nlet count = digits map((x) => {return 0})\ndigits forEach((d) =>{\nif (d >= count length) {\nreturn false\n}\ncount[d] += 1;\n});\nif (digits === count) {\nreturn true;\n}\nif (digits length = count",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-describing-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5b732ad08a8124ec0fd42bbc6482ebdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-describing-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return false js assert equal(isSelfDescribing(3021), false); isSelfDescribing(3211000) should return true js assert equal(isSelfDescribing(3211000), true); --seed-- --seed-contents-- ```js function isSelfDescribing(n) { } ``` --solutions-- ```js function isSelfDescribing(n) { let digits = String(n) split(\"\"); digits = digits map(function(e) {return parseInt(e)}); let count = digits map((x) => {return 0}) digits forEach((d) =>{ if (d >= count length) { return false } count[d] += 1; }); if (digits === count) { return true; } if (digits length = countlength) {\nreturn false;\n}\nfor (let i=0; i< digits length; i++){\nif (digits[i] == count[i]) {\nreturn false;\n}\n}\nreturn true;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-describing-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 195,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4d94de0361e3e685543e082e6f9c7d8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\semiprime.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eb3e4aa847216613aa81983\ntitle: Semiprime\nchallengeType: 1\nforumTopicId: 385318\ndashedName: semiprime\n--description--\nSemiprime numbers are natural numbers that are products of exactly two (possibly equal) prime numbers 1679  =  23 x 73\n--instructions--\nWrite a function that returns true if a number is semiprime, or false if it is not --hints--\nisSemiPrime should be a function js\nassert(typeof isSemiPrime === 'function');\nisSemiPrime(100) should return a boolean js\nassert(typeof isSemiPrime(100) === 'boolean');\nisSemiPrime(100) should return false js\nassert equal(isSemiPrime(100), false);\nisSemiPrime(504) should return false js\nassert equal(isSemiPrime(504), false);\nisSemiPrime(4) should return true js\nassert equal(isSemiPrime(4), true);\nisSemiPrime(46) should return true js\nassert equal(isSemiPrime(46), true);\nisSemiPrime(13) should return false js\nassert equal(isSemiPrime(13), false);\nisSemiPrime(74) should return true js\nassert equal(isSemiPrime(74), true);\nisSemiPrime(1679) should return true js\nassert equal(isSemiPrime(1679), true);\nisSemiPrime(2) should return false js\nassert equal(isSemiPrime(2), false);\nisSemiPrime(95) should return true js\nassert equal(isSemiPrime(95), true);\nisSemiPrime(124) should return false js\nassert equal(isSemiPrime(124), false);\n--seed--\n--seed-contents--\n```js\nfunction isSemiPrime(n) {\n}\n```\n--solutions--\n```js\nfunction isSemiPrime(n) {\nif (n <= 3) return false;\nvar ans = [];\nvar done = false;\nwhile ( done) {\nif (n % 2 === 0) {\nans push(2);\nn /= 2;\ncontinue;\n}\nif (n % 3 === 0) {\nans",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2522,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\semiprime.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2b6d247a34c9a8480ea7608eb7008215",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\semiprime.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return false js assert equal(isSemiPrime(2), false); isSemiPrime(95) should return true js assert equal(isSemiPrime(95), true); isSemiPrime(124) should return false js assert equal(isSemiPrime(124), false); --seed-- --seed-contents-- ```js function isSemiPrime(n) { } ``` --solutions-- ```js function isSemiPrime(n) { if (n <= 3) return false; var ans = []; var done = false; while ( done) { if (n % 2 === 0) { ans push(2); n /= 2; continue; } if (n % 3 === 0) { anspush(3);\nn /= 3;\ncontinue;\n}\nif (n === 1) return ans length == 2;\nvar sr = Math sqrt(n);\ndone = true;\n// try to divide the checked number by all numbers till its square root for (var i = 6; i <= sr; i += 6) {\nif (n % (i - 1) === 0) {\n// is n divisible by i-1 ans push(i - 1);\nn /= i - 1;\ndone = false;\nbreak;\n}\nif (n % (i + 1) === 0) {\n// is n divisible by i+1 ans push(i + 1);\nn /= i + 1;\ndone = false;\nbreak;\n}\n}\n}\nans push(n);\nreturn ans length == 2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2522,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\semiprime.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "80ec6cc1c864ab5e779ae9343561ba86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eb3e4a21f462f409d656c73\ntitle: Self-referential sequence\nchallengeType: 1\nforumTopicId: 385317\ndashedName: self-referential-sequence\n--description--\nThere are several ways to generate a self-referential sequence One very common one (the Look-and-say sequence) is to start with a positive integer, then generate the next term by concatenating enumerated groups of adjacent alike digits:\n0, 10, 1110, 3110, 132110, 1113122110, 311311222110 The terms generated grow in length geometrically and never converge Another way to generate a self-referential sequence is to summarize the previous term Count how many of each alike digit there is, then concatenate the sum and digit for each of the sorted enumerated digits Note that the first five terms are the same as for the previous sequence 0, 10, 1110, 3110, 132110, 13123110, 23124110 Sort the digits largest to smallest Do not include counts of digits that do not appear in the previous term Depending on the seed value, series generated this way always either converge to a stable value or to a short cyclical pattern (For our purposes, converge means that an element matches a previously seen element ) The sequence shown, with a seed value of 0, converges to a stable value of 1433223110 after 11 iterations The seed value that converges most quickly is 22 It goes stable after the first element (The next element is 22, which has been seen before )\n--instructions--\nWrite a function that takes the seed value as parameter, generates a self referential sequence until it converges, and returns it as an array --hints--\nselfReferential should be a function js\nassert(typeof selfReferential === 'function');\nselfReferential(40) should return a array js\nassert(Array isArray(selfReferential(40)));\nselfReferential(40) should return [\"40\", \"1410\", \"142110\", \"14123110\", \"1413124110\", \"2413125110\", \"151413224110\", \"152413225110\", \"251413324110\", \"152423224110\", \"152413423110\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "af345de162e01f698f421c0bcbea2c7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "stable after the first element (The next element is 22, which has been seen before ) --instructions-- Write a function that takes the seed value as parameter, generates a self referential sequence until it converges, and returns it as an array --hints-- selfReferential should be a function js assert(typeof selfReferential === 'function'); selfReferential(40) should return a array js assert(Array isArray(selfReferential(40))); selfReferential(40) should return [\"40\", \"1410\", \"142110\", \"14123110\", \"1413124110\", \"2413125110\", \"151413224110\", \"152413225110\", \"251413324110\", \"152423224110\", \"152413423110\"] js assertdeepEqual(selfReferential(40), [\n'40',\n'1410',\n'142110',\n'14123110',\n'1413124110',\n'2413125110',\n'151413224110',\n'152413225110',\n'251413324110',\n'152423224110',\n'152413423110'\n]);\nselfReferential(132110) should return [\"132110\", \"13123110\", \"23124110\", \"1413223110\", \"1423224110\", \"2413323110\", \"1433223110\"] js\nassert deepEqual(selfReferential(132110), [\n'132110',\n'13123110',\n'23124110',\n'1413223110',\n'1423224110',\n'2413323110',\n'1433223110'\n]);\nselfReferential(132211) should return [\"132211\", \"132231\", \"232221\", \"134211\", \"14131231\", \"14231241\", \"24132231\", \"14233221\"] js\nassert deepEqual(selfReferential(132211), [\n'132211',\n'132231',\n'232221',\n'134211',\n'14131231',\n'14231241',\n'24132231',\n'14233221'\n]);\nselfReferential(1413223110) should return [\"1413223110\", \"1423224110\", \"2413323110\", \"1433223110\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "868ec11df37631430c12075decfcd88a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"2413125110\", \"151413224110\", \"152413225110\", \"251413324110\", \"152423224110\", \"152413423110\"] js assertdeepEqual(selfReferential(40), [ '40', '1410', '142110', '14123110', '1413124110', '2413125110', '151413224110', '152413225110', '251413324110', '152423224110', '152413423110' ]); selfReferential(132110) should return [\"132110\", \"13123110\", \"23124110\", \"1413223110\", \"1423224110\", \"2413323110\", \"1433223110\"] js assert deepEqual(selfReferential(132110), [ '132110', '13123110', '23124110', '1413223110', '1423224110', '2413323110', '1433223110' ]); selfReferential(132211) should return [\"132211\", \"132231\", \"232221\", \"134211\", \"14131231\", \"14231241\", \"24132231\", \"14233221\"] js assert deepEqual(selfReferential(132211), [ '132211', '132231', '232221', '134211', '14131231', '14231241', '24132231', '14233221' ]); selfReferential(1413223110) should return [\"1413223110\", \"1423224110\", \"2413323110\", \"1433223110\"] js assertdeepEqual(selfReferential(1413223110), [\n'1413223110',\n'1423224110',\n'2413323110',\n'1433223110'\n]);\nselfReferential(251413126110) should return [\"251413126110\", \"16151413225110\", \"16251413226110\", \"26151413325110\", \"16251423225110\", \"16251413424110\", \"16153413225110\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "fe179b93b23d62aa7fe29bb7f459c78e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'152423224110', '152413423110' ]); selfReferential(132110) should return [\"132110\", \"13123110\", \"23124110\", \"1413223110\", \"1423224110\", \"2413323110\", \"1433223110\"] js assert deepEqual(selfReferential(132110), [ '132110', '13123110', '23124110', '1413223110', '1423224110', '2413323110', '1433223110' ]); selfReferential(132211) should return [\"132211\", \"132231\", \"232221\", \"134211\", \"14131231\", \"14231241\", \"24132231\", \"14233221\"] js assert deepEqual(selfReferential(132211), [ '132211', '132231', '232221', '134211', '14131231', '14231241', '24132231', '14233221' ]); selfReferential(1413223110) should return [\"1413223110\", \"1423224110\", \"2413323110\", \"1433223110\"] js assertdeepEqual(selfReferential(1413223110), [ '1413223110', '1423224110', '2413323110', '1433223110' ]); selfReferential(251413126110) should return [\"251413126110\", \"16151413225110\", \"16251413226110\", \"26151413325110\", \"16251423225110\", \"16251413424110\", \"16153413225110\"] js assertdeepEqual(selfReferential(251413126110), [\n'251413126110',\n'16151413225110',\n'16251413226110',\n'26151413325110',\n'16251423225110',\n'16251413424110',\n'16153413225110'\n]);\n--seed--\n--seed-contents--\n```js\nfunction selfReferential(n) {\n}\n```\n--solutions--\n```js\nfunction selfReferential(n) {\nvar descending,\ni,\nincr,\nj,\nmax_i,\nmax_len,\nmax_seq,\nseq,\nsequence,\nindexOf =\n[] indexOf ||\nfunction(item) {\nfor (var i = 0, l = this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d173aa6de520103b7e80b0c6f8e2060e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'14233221' ]); selfReferential(1413223110) should return [\"1413223110\", \"1423224110\", \"2413323110\", \"1433223110\"] js assertdeepEqual(selfReferential(1413223110), [ '1413223110', '1423224110', '2413323110', '1433223110' ]); selfReferential(251413126110) should return [\"251413126110\", \"16151413225110\", \"16251413226110\", \"26151413325110\", \"16251423225110\", \"16251413424110\", \"16153413225110\"] js assertdeepEqual(selfReferential(251413126110), [ '251413126110', '16151413225110', '16251413226110', '26151413325110', '16251423225110', '16251413424110', '16153413225110' ]); --seed-- --seed-contents-- ```js function selfReferential(n) { } ``` --solutions-- ```js function selfReferential(n) { var descending, i, incr, j, max_i, max_len, max_seq, seq, sequence, indexOf = [] indexOf || function(item) { for (var i = 0, l = thislength; i < l; i++) {\nif (i in this && this[i] === item) return i;\n}\nreturn -1;\n};\nsequence = function(n) {\nvar c, cnt, cnts, d, digit, i, j, l, len, new_cnts, ref, s, seq;\ncnts = {};\nref = n toString();\nfor (j = 0, len = ref length; j < len; j++) {\nc = ref[j];\nd = parseInt(c);\nincr(cnts, d);\n}\nseq = [ref];\nwhile (true) {\ns = '';\nfor (i = l = 9; l >= 0; i = --l) {\nif (cnts[i]) {\ns += '' + cnts[i] + i;\n}\n}\nif (indexOf call(seq, s) >= 0) {\nbreak;\n}\nseq",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4e95cae556f34d7ee61fa1a77d19f71c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "ref, s, seq; cnts = {}; ref = n toString(); for (j = 0, len = ref length; j < len; j++) { c = ref[j]; d = parseInt(c); incr(cnts, d); } seq = [ref]; while (true) { s = ''; for (i = l = 9; l >= 0; i = --l) { if (cnts[i]) { s += '' + cnts[i] + i; } } if (indexOf call(seq, s) >= 0) { break; } seqpush(s);\nnew_cnts = {};\nfor (digit in cnts) {\ncnt = cnts[digit];\nincr(new_cnts, cnt);\nincr(new_cnts, digit);\n}\ncnts = new_cnts;\n}\nreturn seq;\n};\nincr = function(h, k) {\nif (h[k] == null) {\nh[k] = 0;\n}\nreturn (h[k] += 1);\n};\ndescending = function(n) {\nvar tens;\nif (n < 10) {\nreturn true;\n}\ntens = n / 10;\nif (n % 10 > tens % 10) {\nreturn false;\n}\nreturn descending(tens);\n};\nreturn sequence(n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\self-referential-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "9299ac499aac1d847e0d974b2020b663",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eb3e4af7d0e7b760b46cedc\ntitle: Set consolidation\nchallengeType: 1\nforumTopicId: 385319\ndashedName: set-consolidation\n--description--\nGiven two sets of items then if any item is common to any set then the result of applying consolidation to those sets is a set of sets whose contents is:\nThe two input sets if no common item exists between the two input sets of items The single set that is the union of the two input sets if they share a common item Given N sets of items where N > 2 then the result is the same as repeatedly replacing all combinations of two sets by their consolidation until no further consolidation between set pairs is possible If N < 2 then consolidation has no strict meaning and the input can be returned Here are some examples:\nExample 1:\nGiven the two sets {A,B} and {C,D} then there is no common element between the sets and the result is the same as the input Example 2:\nGiven the two sets {A,B} and {B,D} then there is a common element B between the sets and the result is the single set {B,D,A} (Note that order of items in a set is immaterial: {A,B,D} is the same as {B,D,A} and {D,A,B}, etc) Example 3:\nGiven the three sets {A,B} and {C,D} and {D,B} then there is no common element between the sets {A,B} and {C,D} but the sets {A,B} and {D,B} do share a common element that consolidates to produce the result {B,D,A} On examining this result with the remaining set, {C,D}, they share a common element and so consolidate to the final output of the single set {A,B,C,D}\nExample 4:\nThe consolidation of the five sets:\n{H,I,K}, {A,B}, {C,D}, {D,B}, and {F,G,H}\nIs the two sets:\n{A, C, B, D}, and {G, F, I, H, K}\n--instructions--\nWrite a function that takes an array of strings as a parameter Each string is represents a set with the characters representing the set elements The function should return a 2D array containing the consolidated sets Note: Each set should be sorted",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d15ee328c419684ca51e7117b317ce57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the single set {A,B,C,D} Example 4: The consolidation of the five sets: {H,I,K}, {A,B}, {C,D}, {D,B}, and {F,G,H} Is the two sets: {A, C, B, D}, and {G, F, I, H, K} --instructions-- Write a function that takes an array of strings as a parameter Each string is represents a set with the characters representing the set elements The function should return a 2D array containing the consolidated sets Note: Each set should be sorted--hints--\nsetConsolidation should be a function js\nassert(typeof setConsolidation === 'function');\nsetConsolidation([\"AB\", \"CD\"]) should return a array js\nassert(Array isArray(setConsolidation(['AB', 'CD'])));\nsetConsolidation([\"AB\", \"CD\"]) should return [[\"C\", \"D\"], [\"A\", \"B\"]] js\nassert deepEqual(setConsolidation(['AB', 'CD']), [\n['C', 'D'],\n['A', 'B']\n]);\nsetConsolidation([\"AB\", \"BD\"]) should return [[\"A\", \"B\", \"D\"]] js\nassert deepEqual(setConsolidation(['AB', 'BD']), [['A', 'B', 'D']]);\nsetConsolidation([\"AB\", \"CD\", \"DB\"]) should return [[\"A\", \"B\", \"C\", \"D\"]] js\nassert deepEqual(setConsolidation(['AB', 'CD', 'DB']), [['A', 'B', 'C', 'D']]);\nsetConsolidation([\"HIK\", \"AB\", \"CD\", \"DB\", \"FGH\"]) should return [[\"F\", \"G\", \"H\", \"I\", \"K\"], [\"A\", \"B\", \"C\", \"D\"]] js\nassert deepEqual(setConsolidation(['HIK', 'AB', 'CD', 'DB', 'FGH']), [\n['F', 'G', 'H', 'I', 'K'],\n['A', 'B', 'C', 'D']\n]);\n--seed--\n--seed-contents--\n```js\nfunction setConsolidation(sets) {\n}\n```\n--solutions--\n```js\nfunction setConsolidation(sets) {\nfunction addAll(l1, l2) {\nl2 forEach(function(e) {\nif (l1 indexOf(e) == -1) l1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "bbdfb0b053d3968810569abdb0593bca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"DB\"]) should return [[\"A\", \"B\", \"C\", \"D\"]] js assert deepEqual(setConsolidation(['AB', 'CD', 'DB']), [['A', 'B', 'C', 'D']]); setConsolidation([\"HIK\", \"AB\", \"CD\", \"DB\", \"FGH\"]) should return [[\"F\", \"G\", \"H\", \"I\", \"K\"], [\"A\", \"B\", \"C\", \"D\"]] js assert deepEqual(setConsolidation(['HIK', 'AB', 'CD', 'DB', 'FGH']), [ ['F', 'G', 'H', 'I', 'K'], ['A', 'B', 'C', 'D'] ]); --seed-- --seed-contents-- ```js function setConsolidation(sets) { } ``` --solutions-- ```js function setConsolidation(sets) { function addAll(l1, l2) { l2 forEach(function(e) { if (l1 indexOf(e) == -1) l1push(e);\n});\n}\nfunction consolidate(sets) {\nvar r = [];\nfor (var i = 0; i < sets length; i++) {\nvar s = sets[i];\n{\nvar new_r = [];\nnew_r push(s);\nfor (var j = 0; j < r length; j++) {\nvar x = r[j];\n{\nif ( (function(c1, c2) {\nfor (var i = 0; i < c1 length; i++) {\nif (c2 indexOf(c1[i]) >= 0) return false;\n}\nreturn true;\n})(s, x)\n) {\n(function(l1, l2) {\naddAll(l1, l2);\n})(s, x);\n} else {\nnew_r push(x);\n}\n}\n}\nr = new_r;\n}\n}\nreturn r;\n}\nfunction consolidateR(sets) {\nif (sets length < 2) return sets;\nvar r = [];\nr push(sets[0]);\n{\nvar arr1 = consolidateR(sets slice(1, sets length));\nfor (var i = 0; i < arr1 length; i++) {\nvar x = arr1[i];\n{\nif ( (function(c1, c2) {\nfor (var i = 0; i < c1 length; i++) {\nif (c2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ae12e3e9dbb54b4bbf8da82b24e477b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "})(s, x); } else { new_r push(x); } } } r = new_r; } } return r; } function consolidateR(sets) { if (sets length < 2) return sets; var r = []; r push(sets[0]); { var arr1 = consolidateR(sets slice(1, sets length)); for (var i = 0; i < arr1 length; i++) { var x = arr1[i]; { if ( (function(c1, c2) { for (var i = 0; i < c1 length; i++) { if (c2indexOf(c1[i]) >= 0) return false;\n}\nreturn true;\n})(r[0], x)\n) {\n(function(l1, l2) {\nreturn l1 push apply(l1, l2);\n})(r[0], x);\n} else {\nr push(x);\n}\n}\n}\n}\nreturn r;\n}\nfunction hashSetList(set) {\nvar r = [];\nfor (var i = 0; i < set length; i++) {\nr push([]);\nfor (var j = 0; j < set[i] length; j++)\n(function(s, e) {\nif (s indexOf(e) == -1) {\ns push(e);\nreturn true;\n} else {\nreturn false;\n}\n})(r[i], set[i] charAt(j));\n}\nreturn r;\n}\nvar h1 = consolidate(hashSetList(sets)) map(function(e) {\ne sort();\nreturn e;\n});\nreturn h1;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-consolidation.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "01beb07ac8c398cc31bf1d6e3858a2ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eb3e4b20aa93c437f9e9717\ntitle: Set of real numbers\nchallengeType: 1\nforumTopicId: 385322\ndashedName: set-of-real-numbers\n--description--\nAll real numbers form the uncountable set ℝ Among its subsets, relatively simple are the convex sets, each expressed as a range between two real numbers a and b where a ≤ b There are actually four cases for the meaning of \"between\", depending on open or closed boundary:\n[a, b]: {x | a ≤ x and x ≤ b }\n(a, b): {x | a < x and x < b }\n[a, b): {x | a ≤ x and x < b }\n(a, b]: {x | a < x and x ≤ b }\nNote that if a = b, of the four only [a, a] would be non-empty Task\nDevise a way to represent any set of real numbers, for the definition of \"any\" in the implementation notes below Provide methods for these common set operations (x is a real number; A and B are sets):\nx ∈ A: determine if x is an element of A\nexample: 1 is in [1, 2), while 2, 3, are not A ∪ B: union of A and B, i e {x | x ∈ A or x ∈ B}\nexample: [0, 2) ∪ (1, 3) = [0, 3); [0, 1) ∪ (2, 3] = well, [0, 1) ∪ (2, 3]\nA ∩ B: intersection of A and B, i e {x | x ∈ A and x ∈ B}\nexample: [0, 2) ∩ (1, 3) = (1, 2); [0, 1) ∩ (2, 3] = empty set\nA - B: difference between A and B, also written as A \\ B, i e {x | x ∈ A and x ∉ B}\nexample: [0, 2) − (1, 3) = [0, 1]\n--instructions--\nWrite a function that takes 2 objects, a string and an array as parameters The objects represents the set and have attributes: low, high and rangeType",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "429b5463b1b7a8c85f7af79d071e33d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2) ∩ (1, 3) = (1, 2); [0, 1) ∩ (2, 3] = empty set A - B: difference between A and B, also written as A \\ B, i e {x | x ∈ A and x ∉ B} example: [0, 2) − (1, 3) = [0, 1] --instructions-- Write a function that takes 2 objects, a string and an array as parameters The objects represents the set and have attributes: low, high and rangeTypeThe rangeType can have values 0, 1, 2 and 3 for CLOSED, BOTH_OPEN, LEFT_OPEN and RIGHT_OPEN, respectively The function should implement a set using this information The string represents the operation to be performed on the sets It can be: \"union\", \"intersect\" and \"subtract\" (difference) After performing the operation, the function should check if the values in the array are present in the resultant set and store a corresponding boolean value to an array The function should return this array --hints--\nrealSet should be a function js\nassert(typeof realSet == 'function');\nrealSet({\"low\":0, \"high\":1, \"rangeType\":2}, {\"low\":0, \"high\":2, \"rangeType\":3}, \"union\", [1, 2, 3]) should return a array js\nassert(\nArray isArray(\nrealSet(\n{ low: 0, high: 1, rangeType: 2 },\n{ low: 0, high: 2, rangeType: 3 },\n'union',\n[1, 2, 3]\n)\n)\n);\nrealSet({\"low\":0, \"high\":1, \"rangeType\":2}, {\"low\":0, \"high\":2, \"rangeType\":3}, \"union\", [1, 2, 3]) should return [true, false, false] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "e3875d51d6ab3498261b47ad6b63e04d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "The function should return this array --hints-- realSet should be a function js assert(typeof realSet == 'function'); realSet({\"low\":0, \"high\":1, \"rangeType\":2}, {\"low\":0, \"high\":2, \"rangeType\":3}, \"union\", [1, 2, 3]) should return a array js assert( Array isArray( realSet( { low: 0, high: 1, rangeType: 2 }, { low: 0, high: 2, rangeType: 3 }, 'union', [1, 2, 3] ) ) ); realSet({\"low\":0, \"high\":1, \"rangeType\":2}, {\"low\":0, \"high\":2, \"rangeType\":3}, \"union\", [1, 2, 3]) should return [true, false, false] js assertdeepEqual(\nrealSet(\n{ low: 0, high: 1, rangeType: 2 },\n{ low: 0, high: 2, rangeType: 3 },\n'union',\n[1, 2, 3]\n),\n[true, false, false]\n);\nrealSet({\"low\":0, \"high\":2, \"rangeType\":3}, {\"low\":1, \"high\":2, \"rangeType\":2}, \"intersect\", [0, 1, 2]) should return [false, false, false] js\nassert deepEqual(\nrealSet(\n{ low: 0, high: 2, rangeType: 3 },\n{ low: 1, high: 2, rangeType: 2 },\n'intersect',\n[0, 1, 2]\n),\n[false, false, false]\n);\nrealSet({\"low\":0, \"high\":3, \"rangeType\":3}, {\"low\":0, \"high\":1, \"rangeType\":1}, \"subtract\", [0, 1, 2]) should return [true, true, true] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "55278c0912f90d098c7408429405a461",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0, high: 2, rangeType: 3 }, 'union', [1, 2, 3] ), [true, false, false] ); realSet({\"low\":0, \"high\":2, \"rangeType\":3}, {\"low\":1, \"high\":2, \"rangeType\":2}, \"intersect\", [0, 1, 2]) should return [false, false, false] js assert deepEqual( realSet( { low: 0, high: 2, rangeType: 3 }, { low: 1, high: 2, rangeType: 2 }, 'intersect', [0, 1, 2] ), [false, false, false] ); realSet({\"low\":0, \"high\":3, \"rangeType\":3}, {\"low\":0, \"high\":1, \"rangeType\":1}, \"subtract\", [0, 1, 2]) should return [true, true, true] js assertdeepEqual(\nrealSet(\n{ low: 0, high: 3, rangeType: 3 },\n{ low: 0, high: 1, rangeType: 1 },\n'subtract',\n[0, 1, 2]\n),\n[true, true, true]\n);\nrealSet({\"low\":0, \"high\":3, \"rangeType\":3}, {\"low\":0, \"high\":1, \"rangeType\":0}, \"subtract\", [0, 1, 2]) should return [false, false, true] js\nassert deepEqual(\nrealSet(\n{ low: 0, high: 3, rangeType: 3 },\n{ low: 0, high: 1, rangeType: 0 },\n'subtract',\n[0, 1, 2]\n),\n[false, false, true]\n);\nrealSet({\"low\":0, \"high\":33, \"rangeType\":1}, {\"low\":30, \"high\":31, \"rangeType\":0}, \"intersect\", [30, 31, 32]) should return [true, true, false] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "052eae0e39307d89ffb7cf54c5b8e8ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0, high: 1, rangeType: 1 }, 'subtract', [0, 1, 2] ), [true, true, true] ); realSet({\"low\":0, \"high\":3, \"rangeType\":3}, {\"low\":0, \"high\":1, \"rangeType\":0}, \"subtract\", [0, 1, 2]) should return [false, false, true] js assert deepEqual( realSet( { low: 0, high: 3, rangeType: 3 }, { low: 0, high: 1, rangeType: 0 }, 'subtract', [0, 1, 2] ), [false, false, true] ); realSet({\"low\":0, \"high\":33, \"rangeType\":1}, {\"low\":30, \"high\":31, \"rangeType\":0}, \"intersect\", [30, 31, 32]) should return [true, true, false] js assertdeepEqual(\nrealSet(\n{ low: 0, high: 33, rangeType: 1 },\n{ low: 30, high: 31, rangeType: 0 },\n'intersect',\n[30, 31, 32]\n),\n[true, true, false]\n);\n--seed--\n--seed-contents--\n```js\nfunction realSet(set1, set2, operation, values) {\n}\n```\n--solutions--\n```js\nfunction realSet(set1, set2, operation, values) {\nconst RangeType = {\nCLOSED: 0,\nBOTH_OPEN: 1,\nLEFT_OPEN: 2,\nRIGHT_OPEN: 3\n};\nfunction Predicate(test) {\nthis test = test;\nthis or = function(other) {\nreturn new Predicate(t => this test(t) || other test(t));\n};\nthis and = function(other) {\nreturn new Predicate(t => this test(t) && other test(t));\n};\nthis negate = function() {\nreturn new Predicate(t => this test(t));\n};\n}\nfunction RealSet(start, end, rangeType, predF) {\nthis low = start;\nthis high = end;\nif (predF) {\nthis predicate = new Predicate(predF);\n} else {\nthis predicate = new Predicate(d => {\nswitch (rangeType) {\ncase RangeType CLOSED:\nreturn start <= d && d <= end;\ncase RangeType",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c4772a0731d96faf765ce6939f604d4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "this and = function(other) { return new Predicate(t => this test(t) && other test(t)); }; this negate = function() { return new Predicate(t => this test(t)); }; } function RealSet(start, end, rangeType, predF) { this low = start; this high = end; if (predF) { this predicate = new Predicate(predF); } else { this predicate = new Predicate(d => { switch (rangeType) { case RangeType CLOSED: return start <= d && d <= end; case RangeTypeBOTH_OPEN:\nreturn start < d && d < end;\ncase RangeType LEFT_OPEN:\nreturn start < d && d <= end;\ncase RangeType RIGHT_OPEN:\nreturn start <= d && d < end;\n}\n});\n}\nthis contains = function(d) {\nreturn this predicate test(d);\n};\nthis union = function(other) {\nvar low2 = Math min(this low, other low);\nvar high2 = Math max(this high, other high);\nreturn new RealSet(low2, high2, null, d =>\nthis predicate or(other predicate) test(d)\n);\n};\nthis intersect = function(other) {\nvar low2 = Math min(this low, other low);\nvar high2 = Math max(this high, other high);\nreturn new RealSet(low2, high2, null, d =>\nthis predicate and(other predicate) test(d)\n);\n};\nthis subtract = function(other) {\nreturn new RealSet(this low, this high, null, d =>\nthis predicate and(other predicate negate()) test(d)\n);\n};\n}\nset1 = new RealSet(set1 low, set1 high, set1 rangeType);\nset2 = new RealSet(set2 low, set2 high, set2 rangeType);\nvar result = [];\nvalues forEach(function(value) {\nresult push(set1operation contains(value));\n});\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\set-of-real-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "20418928a252d91a4bcc09a1c3744d7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eb3e4b5f629b9a07429a5d2\ntitle: SHA-1\nchallengeType: 1\nforumTopicId: 385326\ndashedName: sha-1\n--description--\nSHA-1 or SHA1 is a one-way hash function; it computes a 160-bit message digest SHA-1 often appears in security protocols; for example, many HTTPS websites use RSA with SHA-1 to secure their connections BitTorrent uses SHA-1 to verify downloads Git and Mercurial use SHA-1 digests to identify commits A US government standard, FIPS 180-1, defines SHA-1 --instructions--\nWrite a function that returns the SHA-1 message digest for a given string --hints--\nSHA1 should be a function js\nassert(typeof SHA1 === 'function');\nSHA1(\"abc\") should return a string js\nassert(typeof SHA1('abc') === 'string');\nSHA1(\"abc\") should return \"a9993e364706816aba3e25717850c26c9cd0d89d\" js\nassert equal(SHA1('abc'), 'a9993e364706816aba3e25717850c26c9cd0d89d');\nSHA1(\"Rosetta Code\") should return \"48c98f7e5a6e736d790ab740dfc3f51a61abe2b5\" js\nassert equal(SHA1('Rosetta Code'), '48c98f7e5a6e736d790ab740dfc3f51a61abe2b5');\nSHA1(\"Hello world\") should return \"7b502c3a1f48c8609ae212cdfb639dee39673f5e\" js\nassert equal(SHA1('Hello world'), '7b502c3a1f48c8609ae212cdfb639dee39673f5e');\nSHA1(\"Programming\") should return \"d1a946bf8b2f2a7292c250063ee28989d742cd4b\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "12a065d184449f658c9cc0d907e7c3bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "US government standard, FIPS 180-1, defines SHA-1 --instructions-- Write a function that returns the SHA-1 message digest for a given string --hints-- SHA1 should be a function js assert(typeof SHA1 === 'function'); SHA1(\"abc\") should return a string js assert(typeof SHA1('abc') === 'string'); SHA1(\"abc\") should return \"a9993e364706816aba3e25717850c26c9cd0d89d\" js assert equal(SHA1('abc'), 'a9993e364706816aba3e25717850c26c9cd0d89d'); SHA1(\"Rosetta Code\") should return \"48c98f7e5a6e736d790ab740dfc3f51a61abe2b5\" js assert equal(SHA1('Rosetta Code'), '48c98f7e5a6e736d790ab740dfc3f51a61abe2b5'); SHA1(\"Hello world\") should return \"7b502c3a1f48c8609ae212cdfb639dee39673f5e\" js assert equal(SHA1('Hello world'), '7b502c3a1f48c8609ae212cdfb639dee39673f5e'); SHA1(\"Programming\") should return \"d1a946bf8b2f2a7292c250063ee28989d742cd4b\" js assertequal(SHA1('Programming'), 'd1a946bf8b2f2a7292c250063ee28989d742cd4b');\nSHA1(\"is Awesome\") should return \"6537205da59c72b57ed3881843c2d24103d683a3\" js\nassert equal(SHA1('is Awesome'), '6537205da59c72b57ed3881843c2d24103d683a3');\n--seed--\n--seed-contents--\n```js\nfunction SHA1(input) {\n}\n```\n--solutions--\n```js\nfunction SHA1(input) {\nvar hexcase = 0;\nvar b64pad = '';\nvar chrsz = 8;\nfunction hex_sha1(s) {\nreturn binb2hex(core_sha1(str2binb(s), s",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "48a29cd1b24c4b4a541eb6dcf40138b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "SHA1(\"abc\") should return \"a9993e364706816aba3e25717850c26c9cd0d89d\" js assert equal(SHA1('abc'), 'a9993e364706816aba3e25717850c26c9cd0d89d'); SHA1(\"Rosetta Code\") should return \"48c98f7e5a6e736d790ab740dfc3f51a61abe2b5\" js assert equal(SHA1('Rosetta Code'), '48c98f7e5a6e736d790ab740dfc3f51a61abe2b5'); SHA1(\"Hello world\") should return \"7b502c3a1f48c8609ae212cdfb639dee39673f5e\" js assert equal(SHA1('Hello world'), '7b502c3a1f48c8609ae212cdfb639dee39673f5e'); SHA1(\"Programming\") should return \"d1a946bf8b2f2a7292c250063ee28989d742cd4b\" js assertequal(SHA1('Programming'), 'd1a946bf8b2f2a7292c250063ee28989d742cd4b'); SHA1(\"is Awesome\") should return \"6537205da59c72b57ed3881843c2d24103d683a3\" js assert equal(SHA1('is Awesome'), '6537205da59c72b57ed3881843c2d24103d683a3'); --seed-- --seed-contents-- ```js function SHA1(input) { } ``` --solutions-- ```js function SHA1(input) { var hexcase = 0; var b64pad = ''; var chrsz = 8; function hex_sha1(s) { return binb2hex(core_sha1(str2binb(s), slength * chrsz));\n}\nfunction core_sha1(x, len) {\nx[len >> 5] |= 0x80 << (24 - (len % 32));\nx[(((len + 64) >> 9) << 4) + 15] = len;\nvar w = Array(80);\nvar a = 1732584193;\nvar b = -271733879;\nvar c = -1732584194;\nvar d = 271733878;\nvar e = -1009589776;\nfor (var i = 0; i < x",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
      "source_type": "git_repo"
    },
    "token_count": 536,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "0d34ebd46f0803cf50411a0bca4c4da7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0; var b64pad = ''; var chrsz = 8; function hex_sha1(s) { return binb2hex(core_sha1(str2binb(s), slength * chrsz)); } function core_sha1(x, len) { x[len >> 5] |= 0x80 << (24 - (len % 32)); x[(((len + 64) >> 9) << 4) + 15] = len; var w = Array(80); var a = 1732584193; var b = -271733879; var c = -1732584194; var d = 271733878; var e = -1009589776; for (var i = 0; i < xlength; i += 16) {\nvar olda = a;\nvar oldb = b;\nvar oldc = c;\nvar oldd = d;\nvar olde = e;\nfor (var j = 0; j < 80; j++) {\nif (j < 16) w[j] = x[i + j];\nelse w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\nvar t = safe_add(\nsafe_add(rol(a, 5), sha1_ft(j, b, c, d)),\nsafe_add(safe_add(e, w[j]), sha1_kt(j))\n);\ne = d;\nd = c;\nc = rol(b, 30);\nb = a;\na = t;\n}\na = safe_add(a, olda);\nb = safe_add(b, oldb);\nc = safe_add(c, oldc);\nd = safe_add(d, oldd);\ne = safe_add(e, olde);\n}\nreturn Array(a, b, c, d, e);\n}\nfunction sha1_ft(t, b, c, d) {\nif (t < 20) return (b & c) | (~b & d);\nif (t < 40) return b ^ c ^ d;\nif (t < 60) return (b & c) | (b & d) | (c & d);\nreturn b ^ c ^ d;\n}\nfunction sha1_kt(t) {\nreturn t < 20 1518500249\n: t < 40",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6e1f73c9f3d42d3c50466663555e7273",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "oldd); e = safe_add(e, olde); } return Array(a, b, c, d, e); } function sha1_ft(t, b, c, d) { if (t < 20) return (b & c) | (~b & d); if (t < 40) return b ^ c ^ d; if (t < 60) return (b & c) | (b & d) | (c & d); return b ^ c ^ d; } function sha1_kt(t) { return t < 20 1518500249 : t < 401859775393\n: t < 60 -1894007588\n: -899497514;\n}\nfunction safe_add(x, y) {\nvar lsw = (x & 0xffff) + (y & 0xffff);\nvar msw = (x >> 16) + (y >> 16) + (lsw >> 16);\nreturn (msw << 16) | (lsw & 0xffff);\n}\nfunction rol(num, cnt) {\nreturn (num << cnt) | (num >>> (32 - cnt));\n}\nfunction str2binb(str) {\nvar bin = Array();\nvar mask = (1 << chrsz) - 1;\nfor (var i = 0; i < str length * chrsz; i += chrsz)\nbin[i >> 5] |= (str charCodeAt(i / chrsz) & mask) << (24 - (i % 32));\nreturn bin;\n}\nfunction binb2hex(binarray) {\nvar hex_tab = hexcase '0123456789ABCDEF' : '0123456789abcdef';\nvar str = '';\nfor (var i = 0; i < binarray length * 4; i++) {\nstr +=\nhex_tab charAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8 + 4)) & 0xf) +\nhex_tab charAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8)) & 0xf);\n}\nreturn str;\n}\nreturn hex_sha1(input);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-1.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "7785ed493253d4f1c64ce7d5f7b7b91f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc7ffe\ntitle: Sort an array of composite structures\nchallengeType: 1\nforumTopicId: 302306\ndashedName: sort-an-array-of-composite-structures\n--description--\nWrite a function that takes an array of objects as a parameter The function should sort the array according to the 'key' attribute of the objects and return the sorted array --hints--\nsortByKey should be a function js\nassert(typeof sortByKey == 'function');\nsortByKey([{key: 3, value: \"foo\"}, {key: 2, value: \"bar\"}, {key: 4, value: \"baz\"}, {key: 1, value: 42}, {key: 5, value: \"another string\"}]) should return an array js\nassert(\nArray isArray(\nsortByKey([\n{ key: 3, value: 'foo' },\n{ key: 2, value: 'bar' },\n{ key: 4, value: 'baz' },\n{ key: 1, value: 42 },\n{ key: 5, value: 'another string' }\n])\n)\n);\nsortByKey([{key: 3, value: \"foo\"}, {key: 2, value: \"bar\"}, {key: 4, value: \"baz\"}, {key: 1, value: 42}, {key: 5, value: \"another string\"}]) should return [{key: 1, value: 42}, {key: 2, value: \"bar\"}, {key: 3, value: \"foo\"}, {key: 4, value: \"baz\"}, {key: 5, value: \"another string\"}] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "7282525b1e1c416924821cded0d733ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'foo' }, { key: 2, value: 'bar' }, { key: 4, value: 'baz' }, { key: 1, value: 42 }, { key: 5, value: 'another string' } ]) ) ); sortByKey([{key: 3, value: \"foo\"}, {key: 2, value: \"bar\"}, {key: 4, value: \"baz\"}, {key: 1, value: 42}, {key: 5, value: \"another string\"}]) should return [{key: 1, value: 42}, {key: 2, value: \"bar\"}, {key: 3, value: \"foo\"}, {key: 4, value: \"baz\"}, {key: 5, value: \"another string\"}] js assertdeepEqual(\nsortByKey([\n{ key: 3, value: 'foo' },\n{ key: 2, value: 'bar' },\n{ key: 4, value: 'baz' },\n{ key: 1, value: 42 },\n{ key: 5, value: 'another string' }\n]),\n[\n{ key: 1, value: 42 },\n{ key: 2, value: 'bar' },\n{ key: 3, value: 'foo' },\n{ key: 4, value: 'baz' },\n{ key: 5, value: 'another string' }\n]\n);\nsortByKey([{key: 3, name: \"Joe\"}, {key: 4, name: \"Bill\"}, {key: 20, name: \"Alice\"}, {key: 5, name: \"Harry\"}]) should return [{key: 3, name: \"Joe\"}, {key: 4, name: \"Bill\"}, {key: 5, name: \"Harry\"}, {key: 20, name: \"Alice\"}] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "b8478201e4a7fd939aaa436199c85e8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5, value: 'another string' } ]), [ { key: 1, value: 42 }, { key: 2, value: 'bar' }, { key: 3, value: 'foo' }, { key: 4, value: 'baz' }, { key: 5, value: 'another string' } ] ); sortByKey([{key: 3, name: \"Joe\"}, {key: 4, name: \"Bill\"}, {key: 20, name: \"Alice\"}, {key: 5, name: \"Harry\"}]) should return [{key: 3, name: \"Joe\"}, {key: 4, name: \"Bill\"}, {key: 5, name: \"Harry\"}, {key: 20, name: \"Alice\"}] js assertdeepEqual(\nsortByKey([\n{ key: 3, name: 'Joe' },\n{ key: 4, name: 'Bill' },\n{ key: 20, name: 'Alice' },\n{ key: 5, name: 'Harry' }\n]),\n[\n{ key: 3, name: 'Joe' },\n{ key: 4, name: 'Bill' },\n{ key: 5, name: 'Harry' },\n{ key: 20, name: 'Alice' }\n]\n);\nsortByKey([{key: 2341, name: \"Adam\"}, {key: 122, name: \"Bernie\"}, {key: 19, name: \"David\"}, {key: 5531, name: \"Joe\"}, {key: 1234, name: \"Walter\"}]) should return [{key: 19, name: \"David\"}, {key: 122, name: \"Bernie\"}, {key: 1234, name: \"Walter\"}, {key: 2341, name: \"Adam\"}, {key: 5531, name: \"Joe\"}] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "a061c2dfcd0b19a608228c33b698955b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5, name: 'Harry' } ]), [ { key: 3, name: 'Joe' }, { key: 4, name: 'Bill' }, { key: 5, name: 'Harry' }, { key: 20, name: 'Alice' } ] ); sortByKey([{key: 2341, name: \"Adam\"}, {key: 122, name: \"Bernie\"}, {key: 19, name: \"David\"}, {key: 5531, name: \"Joe\"}, {key: 1234, name: \"Walter\"}]) should return [{key: 19, name: \"David\"}, {key: 122, name: \"Bernie\"}, {key: 1234, name: \"Walter\"}, {key: 2341, name: \"Adam\"}, {key: 5531, name: \"Joe\"}] js assertdeepEqual(\nsortByKey([\n{ key: 2341, name: 'Adam' },\n{ key: 122, name: 'Bernie' },\n{ key: 19, name: 'David' },\n{ key: 5531, name: 'Joe' },\n{ key: 1234, name: 'Walter' }\n]),\n[\n{ key: 19, name: 'David' },\n{ key: 122, name: 'Bernie' },\n{ key: 1234, name: 'Walter' },\n{ key: 2341, name: 'Adam' },\n{ key: 5531, name: 'Joe' }\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction sortByKey(arr) {\n}\n```\n--solutions--\njs\nfunction sortByKey (arr) {\nreturn arr sort(function(a, b) {\nreturn a key - b key\n});\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-an-array-of-composite-structures.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "5638e6a29001d48e77db60bc280dedc2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8000\ntitle: Sort disjoint sublist\nchallengeType: 1\nforumTopicId: 302307\ndashedName: sort-disjoint-sublist\n--description--\nGiven a list of values and a set of integer indices into that value list, the task is to sort the values at the given indices, but preserving the values at indices outside the set of those to be sorted Make your function work with the following list of values and set of indices:\nvalues: [7, 6, 5, 4, 3, 2, 1, 0]\njs\nindices(0-based): {6, 1, 7}\nWhere the correct result would be:\n[7, 0, 5, 4, 3, 2, 1, 6] --hints--\nsortDisjoint should be a function js\nassert(typeof sortDisjoint == 'function');\nsortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [6, 1, 7]) should return an array js\nassert(Array isArray(sortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [6, 1, 7])));\nsortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [6, 1, 7]) should return [7, 0, 5, 4, 3, 2, 1, 6] js\nassert deepEqual(sortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [6, 1, 7]), [\n7,\n0,\n5,\n4,\n3,\n2,\n1,\n6\n]);\nsortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [1, 2, 5, 6]) should return [7, 1, 2, 4, 3, 5, 6, 0] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "44d18bc62f016b43cf58cc2a99d48be7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "4, 3, 2, 1, 0], [6, 1, 7]))); sortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [6, 1, 7]) should return [7, 0, 5, 4, 3, 2, 1, 6] js assert deepEqual(sortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [6, 1, 7]), [ 7, 0, 5, 4, 3, 2, 1, 6 ]); sortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [1, 2, 5, 6]) should return [7, 1, 2, 4, 3, 5, 6, 0] js assertdeepEqual(sortDisjoint([7, 6, 5, 4, 3, 2, 1, 0], [1, 2, 5, 6]), [\n7,\n1,\n2,\n4,\n3,\n5,\n6,\n0\n]);\nsortDisjoint([8, 7, 6, 5, 4, 3, 2, 1], [6, 1, 7]) should return [8, 1, 6, 5, 4, 3, 2, 7] js\nassert deepEqual(sortDisjoint([8, 7, 6, 5, 4, 3, 2, 1], [6, 1, 7]), [\n8,\n1,\n6,\n5,\n4,\n3,\n2,\n7\n]);\nsortDisjoint([8, 7, 6, 5, 4, 3, 2, 1], [1, 3, 5, 6]) should return [8, 2, 6, 3, 4, 5, 7, 1] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "29de4ae008839017365833da62101362",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1, 2, 4, 3, 5, 6, 0 ]); sortDisjoint([8, 7, 6, 5, 4, 3, 2, 1], [6, 1, 7]) should return [8, 1, 6, 5, 4, 3, 2, 7] js assert deepEqual(sortDisjoint([8, 7, 6, 5, 4, 3, 2, 1], [6, 1, 7]), [ 8, 1, 6, 5, 4, 3, 2, 7 ]); sortDisjoint([8, 7, 6, 5, 4, 3, 2, 1], [1, 3, 5, 6]) should return [8, 2, 6, 3, 4, 5, 7, 1] js assertdeepEqual(sortDisjoint([8, 7, 6, 5, 4, 3, 2, 1], [1, 3, 5, 6]), [\n8,\n2,\n6,\n3,\n4,\n5,\n7,\n1\n]);\nsortDisjoint([6, 1, 7, 1, 3, 5, 6], [6, 1, 5, 4]) should return [6, 1, 7, 1, 3, 5, 6] js\nassert deepEqual(sortDisjoint([6, 1, 7, 1, 3, 5, 6], [6, 1, 5, 4]), [\n6,\n1,\n7,\n1,\n3,\n5,\n6\n]);\n--seed--\n--seed-contents--\n```js\nfunction sortDisjoint(values, indices) {\n}\n```\n--solutions--\n```js\nfunction sortDisjoint(values, indices) {\nlet sublist = [];\nindices sort(function(a, b) {\nreturn a - b;\n});\nfor (let i = 0; i < indices length; i++) {\nsublist push(values[indices[i]]);\n}\nsublist sort((a, b) => {\nreturn a - b;\n});\nfor (let i = 0; i < indices",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "1e59a765f1f64d44d9ac7eaffa10f0d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3, 5, 6], [6, 1, 5, 4]), [ 6, 1, 7, 1, 3, 5, 6 ]); --seed-- --seed-contents-- ```js function sortDisjoint(values, indices) { } ``` --solutions-- ```js function sortDisjoint(values, indices) { let sublist = []; indices sort(function(a, b) { return a - b; }); for (let i = 0; i < indices length; i++) { sublist push(values[indices[i]]); } sublist sort((a, b) => { return a - b; }); for (let i = 0; i < indiceslength; i++) {\nvalues[indices[i]] = sublist[i];\n}\nreturn values;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-disjoint-sublist.md",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "5477c261bc14f299889a1b462193509d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-using-a-custom-comparator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8016\ntitle: Sort using a custom comparator\nchallengeType: 1\nforumTopicId: 302309\ndashedName: sort-using-a-custom-comparator\n--description--\nWrite a function to sort an array (or list) of strings in order of descending length, and in ascending lexicographic order for strings of equal length --hints--\nlengthSorter should be a function js\nassert(typeof lengthSorter == 'function');\nlengthSorter([\"Here\", \"are\", \"some\", \"sample\", \"strings\", \"to\", \"be\", \"sorted\"]) should return an array js\nassert(\nArray isArray(\nlengthSorter([\n'Here',\n'are',\n'some',\n'sample',\n'strings',\n'to',\n'be',\n'sorted'\n])\n)\n);\nlengthSorter([\"Here\", \"are\", \"some\", \"sample\", \"strings\", \"to\", \"be\", \"sorted\"]) should return [\"strings\", \"sample\", \"sorted\", \"Here\", \"some\", \"are\", \"be\", \"to\"] js\nassert deepEqual(\nlengthSorter([\n'Here',\n'are',\n'some',\n'sample',\n'strings',\n'to',\n'be',\n'sorted'\n]),\n['strings', 'sample', 'sorted', 'Here', 'some', 'are', 'be', 'to']\n);\nlengthSorter([\"I\", \"hope\", \"your\", \"day\", \"is\", \"going\", \"good\", \" \"]) should return [\"going\", \"good\", \"hope\", \"your\", \"day\", \"is\", \" \",\"I\"] js\nassert deepEqual(\nlengthSorter(['I', 'hope', 'your', 'day', 'is', 'going', 'good', ' ']),\n['going', 'good', 'hope', 'your', 'day', 'is', ' ', 'I']\n);\nlengthSorter([\"Mine\", \"is\", \"going\", \"great\"]) should return [\"going\", \"great\", \"Mine\", \"is\"] js\nassert deepEqual(lengthSorter(['Mine', 'is', 'going', 'great']), [\n'going',\n'great',\n'Mine',\n'is'\n]);\nlengthSorter([\"Have\", \"fun\", \"sorting\", \" \"]) should return [\"sorting\", \"Have\", \"fun\", \" \"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-using-a-custom-comparator.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f4a59464ec8000a9fbf17661cbb257d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-using-a-custom-comparator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"hope\", \"your\", \"day\", \"is\", \"going\", \"good\", \" \"]) should return [\"going\", \"good\", \"hope\", \"your\", \"day\", \"is\", \" \",\"I\"] js assert deepEqual( lengthSorter(['I', 'hope', 'your', 'day', 'is', 'going', 'good', ' ']), ['going', 'good', 'hope', 'your', 'day', 'is', ' ', 'I'] ); lengthSorter([\"Mine\", \"is\", \"going\", \"great\"]) should return [\"going\", \"great\", \"Mine\", \"is\"] js assert deepEqual(lengthSorter(['Mine', 'is', 'going', 'great']), [ 'going', 'great', 'Mine', 'is' ]); lengthSorter([\"Have\", \"fun\", \"sorting\", \" \"]) should return [\"sorting\", \"Have\", \"fun\", \" \"] js assertdeepEqual(lengthSorter(['Have', 'fun', 'sorting', ' ']), [\n'sorting',\n'Have',\n'fun',\n' '\n]);\nlengthSorter([\"Everything\", \"is\", \"good\", \" \"]) should return [\"Everything\", \"good\", \" \", \"is\"] js\nassert deepEqual(lengthSorter(['Everything', 'is', 'good', ' ']), [\n'Everything',\n'good',\n' ',\n'is'\n]);\n--seed--\n--seed-contents--\n```js\nfunction lengthSorter(arr) {\n}\n```\n--solutions--\njs\nfunction lengthSorter(arr) {\narr sort(function(a, b) {\nvar result = b length - a length;\nif (result == 0) result = a localeCompare(b);\nreturn result;\n});\nreturn arr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-using-a-custom-comparator.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ebb7118e922f3d64b1e6da3f5cdbc583",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8014\ntitle: Sort stability\nchallengeType: 1\nforumTopicId: 302308\ndashedName: sort-stability\n--description--\nWhen sorting records in a table by a particular column or field, a stable sort will always retain the relative order of records that have the same key For example, in this table of countries and cities, a stable sort on the second column, the cities, would keep the US Birmingham above the UK Birmingham (Although an unstable sort might, in this case, place the US Birmingham above the UK Birmingham, a stable sort routine would guarantee it) UK  London\nUS  New York\nUS  Birmingham\nUK  Birmingham\nSimilarly, stable sorting on just the first column would generate \"UK London\" as the first item and \"US Birmingham\" as the last item (since the order of the elements having the same first word – \"UK\" or \"US\" – would be maintained) --instructions--\nWrite a function that takes a 2D array as a parameter Each element has 2 elements similar to the above example The function should sort the array as mentioned previously and return the sorted array --hints--\nstableSort should be a function js\nassert(typeof stableSort == 'function');\nstableSort([[\"UK\", \"London\"], [\"US\", \"New York\"], [\"US\", \"Birmingham\"], [\"UK\", \"Birmingham\"]]) should return an array js\nassert(\nArray isArray(\nstableSort([\n['UK', 'London'],\n['US', 'New York'],\n['US', 'Birmingham'],\n['UK', 'Birmingham']\n])\n)\n);\nstableSort([[\"UK\", \"London\"], [\"US\", \"New York\"], [\"US\", \"Birmingham\"], [\"UK\", \"Birmingham\"]]) should return [[\"US\", \"Birmingham\"], [\"UK\", \"Birmingham\"], [\"UK\", \"London\"], [\"US\", \"New York\"]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "917325e13142265535b4dc2491e2937b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "function should sort the array as mentioned previously and return the sorted array --hints-- stableSort should be a function js assert(typeof stableSort == 'function'); stableSort([[\"UK\", \"London\"], [\"US\", \"New York\"], [\"US\", \"Birmingham\"], [\"UK\", \"Birmingham\"]]) should return an array js assert( Array isArray( stableSort([ ['UK', 'London'], ['US', 'New York'], ['US', 'Birmingham'], ['UK', 'Birmingham'] ]) ) ); stableSort([[\"UK\", \"London\"], [\"US\", \"New York\"], [\"US\", \"Birmingham\"], [\"UK\", \"Birmingham\"]]) should return [[\"US\", \"Birmingham\"], [\"UK\", \"Birmingham\"], [\"UK\", \"London\"], [\"US\", \"New York\"]] js assertdeepEqual(\nstableSort([\n['UK', 'London'],\n['US', 'New York'],\n['US', 'Birmingham'],\n['UK', 'Birmingham']\n]),\n[\n['US', 'Birmingham'],\n['UK', 'Birmingham'],\n['UK', 'London'],\n['US', 'New York']\n]\n);\nstableSort([[2, 2], [1, 2], [1, 4], [1, 5]]) should return [[2, 2], [1, 2], [1, 4], [1, 5]] js\nassert deepEqual(\nstableSort([\n[2, 2],\n[1, 2],\n[1, 4],\n[1, 5]\n]),\n[\n[2, 2],\n[1, 2],\n[1, 4],\n[1, 5]\n]\n);\nstableSort([[11, 55], [12, 45], [11, 45], [32, 45]]) should return [[12, 45], [11, 45], [32, 45], [11, 55]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "03921314d66ff48b8a0ad5bb582ca59f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Birmingham'] ]), [ ['US', 'Birmingham'], ['UK', 'Birmingham'], ['UK', 'London'], ['US', 'New York'] ] ); stableSort([[2, 2], [1, 2], [1, 4], [1, 5]]) should return [[2, 2], [1, 2], [1, 4], [1, 5]] js assert deepEqual( stableSort([ [2, 2], [1, 2], [1, 4], [1, 5] ]), [ [2, 2], [1, 2], [1, 4], [1, 5] ] ); stableSort([[11, 55], [12, 45], [11, 45], [32, 45]]) should return [[12, 45], [11, 45], [32, 45], [11, 55]] js assertdeepEqual(\nstableSort([\n[11, 55],\n[12, 45],\n[11, 45],\n[32, 45]\n]),\n[\n[12, 45],\n[11, 45],\n[32, 45],\n[11, 55]\n]\n);\nstableSort([[10, 22], [1, 2], [1, 4], [1, 5], [10, 9]]) should return [[1, 2], [1, 4], [1, 5], [10, 9], [10, 22]] js\nassert deepEqual(\nstableSort([\n[10, 22],\n[1, 2],\n[1, 4],\n[1, 5],\n[10, 9]\n]),\n[\n[1, 2],\n[1, 4],\n[1, 5],\n[10, 9],\n[10, 22]\n]\n);\nstableSort([[55, 54], [12, 22], [31, 43], [31, 54], [10, 49]]) should return [[12, 22], [31, 43], [10, 49], [55, 54], [31, 54]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "81e421d667a1d26ac5bdba5fe296cc43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "] ); stableSort([[10, 22], [1, 2], [1, 4], [1, 5], [10, 9]]) should return [[1, 2], [1, 4], [1, 5], [10, 9], [10, 22]] js assert deepEqual( stableSort([ [10, 22], [1, 2], [1, 4], [1, 5], [10, 9] ]), [ [1, 2], [1, 4], [1, 5], [10, 9], [10, 22] ] ); stableSort([[55, 54], [12, 22], [31, 43], [31, 54], [10, 49]]) should return [[12, 22], [31, 43], [10, 49], [55, 54], [31, 54]] js assertdeepEqual(\nstableSort([\n[55, 54],\n[12, 22],\n[31, 43],\n[31, 54],\n[10, 49]\n]),\n[\n[12, 22],\n[31, 43],\n[10, 49],\n[55, 54],\n[31, 54]\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction stableSort(arr) {\n}\n```\n--solutions--\njs\nfunction stableSort(arr) {\narr sort(function(a, b) {\nreturn a[1] < b[1] -1 : a[1] > b[1] 1 : 0;\n});\nreturn arr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sort-stability.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6ce931b31b74fd55a5a0b4c511ca3a01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5eb3e4c3a894c333d2811a3f\ntitle: SHA-256\nchallengeType: 1\nforumTopicId: 385328\ndashedName: sha-256\n--description--\nThe SHA-2 family is a stronger alternative to SHA-1 The main difference between them is the length of the hash Meaning SHA-1 provides a shorter code with fewer possibilities for unique combinations SHA-2 or SHA-256 creates a longer and thus more complex hash with more possibilities --instructions--\nResearch implementation details and write a function that takes a string as the parameter and returns a hash using SHA-256\n--hints--\nSHA256 should be a function js\nassert(typeof SHA256 === 'function');\nSHA256(\"Rosetta code\") should return a string js\nassert(typeof SHA256('Rosetta code') === 'string');\nSHA256(\"Rosetta code\") should return \"764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf\" js\nassert equal(\nSHA256('Rosetta code'),\n'764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf'\n);\nSHA256(\"SHA-256 Hash\") should return \"bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e\" js\nassert equal(\nSHA256('SHA-256 Hash'),\n'bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e'\n);\nSHA256(\"implementation\") should return \"da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "52f71c866fe25e50a4dce60f1108fb01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "more possibilities --instructions-- Research implementation details and write a function that takes a string as the parameter and returns a hash using SHA-256 --hints-- SHA256 should be a function js assert(typeof SHA256 === 'function'); SHA256(\"Rosetta code\") should return a string js assert(typeof SHA256('Rosetta code') === 'string'); SHA256(\"Rosetta code\") should return \"764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf\" js assert equal( SHA256('Rosetta code'), '764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf' ); SHA256(\"SHA-256 Hash\") should return \"bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e\" js assert equal( SHA256('SHA-256 Hash'), 'bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e' ); SHA256(\"implementation\") should return \"da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171\" js assertequal(\nSHA256('implementation'),\n'da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171'\n);\nSHA256(\"algorithm\") should return \"b1eb2ec8ac9f31ff7918231e67f96e6deda83a9ff33ed2c67443f1df81e5ed14\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "a7daf2bba9718e1fb9567fd5e2b82bb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "function that takes a string as the parameter and returns a hash using SHA-256 --hints-- SHA256 should be a function js assert(typeof SHA256 === 'function'); SHA256(\"Rosetta code\") should return a string js assert(typeof SHA256('Rosetta code') === 'string'); SHA256(\"Rosetta code\") should return \"764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf\" js assert equal( SHA256('Rosetta code'), '764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf' ); SHA256(\"SHA-256 Hash\") should return \"bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e\" js assert equal( SHA256('SHA-256 Hash'), 'bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e' ); SHA256(\"implementation\") should return \"da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171\" js assertequal( SHA256('implementation'), 'da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171' ); SHA256(\"algorithm\") should return \"b1eb2ec8ac9f31ff7918231e67f96e6deda83a9ff33ed2c67443f1df81e5ed14\" js assertequal(\nSHA256('algorithm'),\n'b1eb2ec8ac9f31ff7918231e67f96e6deda83a9ff33ed2c67443f1df81e5ed14'\n);\nSHA256(\"language\") should return \"a4ef304ba42a200bafd78b046e0869af9183f6eee5524aead5dcb3a5ab5f8f3f\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "ba25963529914ded6cb67743911128be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "returns a hash using SHA-256 --hints-- SHA256 should be a function js assert(typeof SHA256 === 'function'); SHA256(\"Rosetta code\") should return a string js assert(typeof SHA256('Rosetta code') === 'string'); SHA256(\"Rosetta code\") should return \"764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf\" js assert equal( SHA256('Rosetta code'), '764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf' ); SHA256(\"SHA-256 Hash\") should return \"bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e\" js assert equal( SHA256('SHA-256 Hash'), 'bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e' ); SHA256(\"implementation\") should return \"da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171\" js assertequal( SHA256('implementation'), 'da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171' ); SHA256(\"algorithm\") should return \"b1eb2ec8ac9f31ff7918231e67f96e6deda83a9ff33ed2c67443f1df81e5ed14\" js assertequal( SHA256('algorithm'), 'b1eb2ec8ac9f31ff7918231e67f96e6deda83a9ff33ed2c67443f1df81e5ed14' ); SHA256(\"language\") should return \"a4ef304ba42a200bafd78b046e0869af9183f6eee5524aead5dcb3a5ab5f8f3f\" js assertequal(\nSHA256('language'),\n'a4ef304ba42a200bafd78b046e0869af9183f6eee5524aead5dcb3a5ab5f8f3f'\n);\n--seed--\n--seed-contents--\n```js\nfunction SHA256(input) {\n}\n```\n--solutions--\n```js\nfunction SHA256(input) {\nvar chrsz = 8;\nvar hexcase = 0;\nfunction safe_add(x, y) {\nvar lsw = (x & 0xffff) + (y & 0xffff);\nvar msw = (x >> 16) + (y >> 16) + (lsw >> 16);\nreturn (msw << 16) | (lsw & 0xffff);\n}\nfunction S(X, n) {\nreturn (X >>> n) | (X << (32 - n));\n}\nfunction R(X, n) {\nreturn X >>> n;\n}\nfunction Ch(x, y, z) {\nreturn (x & y) ^ (~x & z);\n}\nfunction Maj(x, y, z) {\nreturn (x & y) ^ (x & z) ^ (y & z);\n}\nfunction Sigma0256(x) {\nreturn S(x, 2) ^ S(x, 13) ^ S(x, 22);\n}\nfunction Sigma1256(x) {\nreturn S(x, 6) ^ S(x, 11) ^ S(x, 25);\n}\nfunction Gamma0256(x) {\nreturn S(x, 7) ^ S(x, 18) ^ R(x, 3);\n}\nfunction Gamma1256(x) {\nreturn S(x, 17) ^ S(x, 19) ^ R(x, 10);\n}\nfunction Sigma0512(x) {\nreturn S(x, 28) ^ S(x, 34) ^ S(x, 39);\n}\nfunction Sigma1512(x) {\nreturn S(x, 14) ^ S(x, 18) ^ S(x, 41);\n}\nfunction Gamma0512(x) {\nreturn S(x, 1) ^ S(x, 8) ^ R(x, 7);\n}\nfunction Gamma1512(x) {\nreturn S(x, 19) ^ S(x, 61) ^ R(x, 6);\n}\nfunction core_sha256(m, l) {\nvar K = new Array(\n0x428a2f98,\n0x71374491,\n0xb5c0fbcf,\n0xe9b5dba5,\n0x3956c25b,\n0x59f111f1,\n0x923f82a4,\n0xab1c5ed5,\n0xd807aa98,\n0x12835b01,\n0x243185be,\n0x550c7dc3,\n0x72be5d74,\n0x80deb1fe,\n0x9bdc06a7,\n0xc19bf174,\n0xe49b69c1,\n0xefbe4786,\n0xfc19dc6,\n0x240ca1cc,\n0x2de92c6f,\n0x4a7484aa,\n0x5cb0a9dc,\n0x76f988da,\n0x983e5152,\n0xa831c66d,\n0xb00327c8,\n0xbf597fc7,\n0xc6e00bf3,\n0xd5a79147,\n0x6ca6351,\n0x14292967,\n0x27b70a85,\n0x2e1b2138,\n0x4d2c6dfc,\n0x53380d13,\n0x650a7354,\n0x766a0abb,\n0x81c2c92e,\n0x92722c85,\n0xa2bfe8a1,\n0xa81a664b,\n0xc24b8b70,\n0xc76c51a3,\n0xd192e819,\n0xd6990624,\n0xf40e3585,\n0x106aa070,\n0x19a4c116,\n0x1e376c08,\n0x2748774c,\n0x34b0bcb5,\n0x391c0cb3,\n0x4ed8aa4a,\n0x5b9cca4f,\n0x682e6ff3,\n0x748f82ee,\n0x78a5636f,\n0x84c87814,\n0x8cc70208,\n0x90befffa,\n0xa4506ceb,\n0xbef9a3f7,\n0xc67178f2\n);\nvar HASH = new Array(\n0x6a09e667,\n0xbb67ae85,\n0x3c6ef372,\n0xa54ff53a,\n0x510e527f,\n0x9b05688c,\n0x1f83d9ab,\n0x5be0cd19\n);\nvar W = new Array(64);\nvar a, b, c, d, e, f, g, h, i, j;\nvar T1, T2;\nm[l >> 5] |= 0x80 << (24 - (l % 32));\nm[(((l + 64) >> 9) << 4) + 15] = l;\nfor (var i = 0; i < m",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 1623,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "12347b2bb43c741eb19c6bdb2bf215d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2 ); var HASH = new Array( 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ); var W = new Array(64); var a, b, c, d, e, f, g, h, i, j; var T1, T2; m[l >> 5] |= 0x80 << (24 - (l % 32)); m[(((l + 64) >> 9) << 4) + 15] = l; for (var i = 0; i < mlength; i += 16) {\na = HASH[0];\nb = HASH[1];\nc = HASH[2];\nd = HASH[3];\ne = HASH[4];\nf = HASH[5];\ng = HASH[6];\nh = HASH[7];\nfor (var j = 0; j < 64; j++) {\nif (j < 16) W[j] = m[j + i];\nelse\nW[j] = safe_add(\nsafe_add(\nsafe_add(Gamma1256(W[j - 2]), W[j - 7]),\nGamma0256(W[j - 15])\n),\nW[j - 16]\n);\nT1 = safe_add(\nsafe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]),\nW[j]\n);\nT2 = safe_add(Sigma0256(a), Maj(a, b, c));\nh = g;\ng = f;\nf = e;\ne = safe_add(d, T1);\nd = c;\nc = b;\nb = a;\na = safe_add(T1, T2);\n}\nHASH[0] = safe_add(a, HASH[0]);\nHASH[1] = safe_add(b, HASH[1]);\nHASH[2] = safe_add(c, HASH[2]);\nHASH[3] = safe_add(d, HASH[3]);\nHASH[4] = safe_add(e, HASH[4]);\nHASH[5] = safe_add(f, HASH[5]);\nHASH[6] = safe_add(g, HASH[6]);\nHASH[7] = safe_add(h, HASH[7]);\n}\nreturn HASH;\n}\nfunction core_sha512(m, l) {\nvar K = new Array(\n0x428a2f98d728ae22,\n0x7137449123ef65cd,\n0xb5c0fbcfec4d3b2f,\n0xe9b5dba58189dbbc,\n0x3956c25bf348b538,\n0x59f111f1b605d019,\n0x923f82a4af194f9b,\n0xab1c5ed5da6d8118,\n0xd807aa98a3030242,\n0x12835b0145706fbe,\n0x243185be4ee4b28c,\n0x550c7dc3d5ffb4e2,\n0x72be5d74f27b896f,\n0x80deb1fe3b1696b1,\n0x9bdc06a725c71235,\n0xc19bf174cf692694,\n0xe49b69c19ef14ad2,\n0xefbe4786384f25e3,\n0x0fc19dc68b8cd5b5,\n0x240ca1cc77ac9c65,\n0x2de92c6f592b0275,\n0x4a7484aa6ea6e483,\n0x5cb0a9dcbd41fbd4,\n0x76f988da831153b5,\n0x983e5152ee66dfab,\n0xa831c66d2db43210,\n0xb00327c898fb213f,\n0xbf597fc7beef0ee4,\n0xc6e00bf33da88fc2,\n0xd5a79147930aa725,\n0x06ca6351e003826f,\n0x142929670a0e6e70,\n0x27b70a8546d22ffc,\n0x2e1b21385c26c926,\n0x4d2c6dfc5ac42aed,\n0x53380d139d95b3df,\n0x650a73548baf63de,\n0x766a0abb3c77b2a8,\n0x81c2c92e47edaee6,\n0x92722c851482353b,\n0xa2bfe8a14cf10364,\n0xa81a664bbc423001,\n0xc24b8b70d0f89791,\n0xc76c51a30654be30,\n0xd192e819d6ef5218,\n0xd69906245565a910,\n0xf40e35855771202a,\n0x106aa07032bbd1b8,\n0x19a4c116b8d2d0c8,\n0x1e376c085141ab53,\n0x2748774cdf8eeb99,\n0x34b0bcb5e19b48a8,\n0x391c0cb3c5c95a63,\n0x4ed8aa4ae3418acb,\n0x5b9cca4f7763e373,\n0x682e6ff3d6b2b8a3,\n0x748f82ee5defb2fc,\n0x78a5636f43172f60,\n0x84c87814a1f0ab72,\n0x8cc702081a6439ec,\n0x90befffa23631e28,\n0xa4506cebde82bde9,\n0xbef9a3f7b2c67915,\n0xc67178f2e372532b,\n0xca273eceea26619c,\n0xd186b8c721c0c207,\n0xeada7dd6cde0eb1e,\n0xf57d4f7fee6ed178,\n0x06f067aa72176fba,\n0x0a637dc5a2c898a6,\n0x113f9804bef90dae,\n0x1b710b35131c471b,\n0x28db77f523047d84,\n0x32caab7b40c72493,\n0x3c9ebe0a15c9bebc,\n0x431d67c49c100d4c,\n0x4cc5d4becb3e42b6,\n0x597f299cfc657e2a,\n0x5fcb6fab3ad6faec,\n0x6c44198c4a475817\n);\nvar HASH = new Array(\n0x6a09e667f3bcc908,\n0xbb67ae8584caa73b,\n0x3c6ef372fe94f82b,\n0xa54ff53a5f1d36f1,\n0x510e527fade682d1,\n0x9b05688c2b3e6c1f,\n0x1f83d9abfb41bd6b,\n0x5be0cd19137e2179\n);\nvar W = new Array(80);\nvar a, b, c, d, e, f, g, h, i, j;\nvar T1, T2;\n}\nfunction str2binb(str) {\nvar bin = Array();\nvar mask = (1 << chrsz) - 1;\nfor (var i = 0; i < str",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 1772,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "2b3af615655da48d537bd53047e318c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0xbef9a3f7b2c67915, 0xc67178f2e372532b, 0xca273eceea26619c, 0xd186b8c721c0c207, 0xeada7dd6cde0eb1e, 0xf57d4f7fee6ed178, 0x06f067aa72176fba, 0x0a637dc5a2c898a6, 0x113f9804bef90dae, 0x1b710b35131c471b, 0x28db77f523047d84, 0x32caab7b40c72493, 0x3c9ebe0a15c9bebc, 0x431d67c49c100d4c, 0x4cc5d4becb3e42b6, 0x597f299cfc657e2a, 0x5fcb6fab3ad6faec, 0x6c44198c4a475817 ); var HASH = new Array( 0x6a09e667f3bcc908, 0xbb67ae8584caa73b, 0x3c6ef372fe94f82b, 0xa54ff53a5f1d36f1, 0x510e527fade682d1, 0x9b05688c2b3e6c1f, 0x1f83d9abfb41bd6b, 0x5be0cd19137e2179 ); var W = new Array(80); var a, b, c, d, e, f, g, h, i, j; var T1, T2; } function str2binb(str) { var bin = Array(); var mask = (1 << chrsz) - 1; for (var i = 0; i < strlength * chrsz; i += chrsz)\nbin[i >> 5] |= (str",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "98e73b3432b894ac2f06bfdecc320e96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0x28db77f523047d84, 0x32caab7b40c72493, 0x3c9ebe0a15c9bebc, 0x431d67c49c100d4c, 0x4cc5d4becb3e42b6, 0x597f299cfc657e2a, 0x5fcb6fab3ad6faec, 0x6c44198c4a475817 ); var HASH = new Array( 0x6a09e667f3bcc908, 0xbb67ae8584caa73b, 0x3c6ef372fe94f82b, 0xa54ff53a5f1d36f1, 0x510e527fade682d1, 0x9b05688c2b3e6c1f, 0x1f83d9abfb41bd6b, 0x5be0cd19137e2179 ); var W = new Array(80); var a, b, c, d, e, f, g, h, i, j; var T1, T2; } function str2binb(str) { var bin = Array(); var mask = (1 << chrsz) - 1; for (var i = 0; i < strlength * chrsz; i += chrsz) bin[i >> 5] |= (strcharCodeAt(i / chrsz) & mask) << (24 - (i % 32));\nreturn bin;\n}\nfunction binb2str(bin) {\nvar str = '';\nvar mask = (1 << chrsz) - 1;\nfor (var i = 0; i < bin length * 32; i += chrsz)\nstr += String fromCharCode((bin[i >> 5] >>> (24 - (i % 32))) & mask);\nreturn str;\n}\nfunction binb2hex(binarray) {\nvar hex_tab = hexcase '0123456789ABCDEF' : '0123456789abcdef';\nvar str = '';\nfor (var i = 0; i < binarray length * 4; i++) {\nstr +=\nhex_tab",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "f0a8cb975ae7348fa2fba5466bc4df49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "function binb2str(bin) { var str = ''; var mask = (1 << chrsz) - 1; for (var i = 0; i < bin length * 32; i += chrsz) str += String fromCharCode((bin[i >> 5] >>> (24 - (i % 32))) & mask); return str; } function binb2hex(binarray) { var hex_tab = hexcase '0123456789ABCDEF' : '0123456789abcdef'; var str = ''; for (var i = 0; i < binarray length * 4; i++) { str += hex_tabcharAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8 + 4)) & 0xf) +\nhex_tab charAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8)) & 0xf);\n}\nreturn str;\n}\nfunction binb2b64(binarray) {\nvar tab =\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nvar str = '';\nfor (var i = 0; i < binarray length * 4; i += 3) {\nvar triplet =\n(((binarray[i >> 2] >> (8 * (3 - (i % 4)))) & 0xff) << 16) |\n(((binarray[(i + 1) >> 2] >> (8 * (3 - ((i + 1) % 4)))) & 0xff) << 8) |\n((binarray[(i + 2) >> 2] >> (8 * (3 - ((i + 2) % 4)))) & 0xff);\nfor (var j = 0; j < 4; j++) {\nif (i * 8 + j * 6 > binarray length * 32) str += '';\nelse str += tab charAt((triplet >> (6 * (3 - j))) & 0x3f);\n}\n}\nreturn str;\n}\nfunction hex_sha2(s) {\nreturn binb2hex(core_sha256(str2binb(s), s length * chrsz));\n}\nfunction b64_sha2(s) {\nreturn binb2b64(core_sha256(str2binb(s), s",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "083de9fac7ef55da21be83ed2af7891a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "+ 2) >> 2] >> (8 * (3 - ((i + 2) % 4)))) & 0xff); for (var j = 0; j < 4; j++) { if (i * 8 + j * 6 > binarray length * 32) str += ''; else str += tab charAt((triplet >> (6 * (3 - j))) & 0x3f); } } return str; } function hex_sha2(s) { return binb2hex(core_sha256(str2binb(s), s length * chrsz)); } function b64_sha2(s) { return binb2b64(core_sha256(str2binb(s), slength * chrsz));\n}\nfunction str_sha2(s) {\nreturn binb2str(core_sha256(str2binb(s), s length * chrsz));\n}\nreturn hex_sha2(input);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sha-256.md",
      "source_type": "git_repo"
    },
    "token_count": 196,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "5e1726daaf1f599db7af6c39a8bab92d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bead-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8001\ntitle: Sorting algorithms/Bead sort\nchallengeType: 1\nforumTopicId: 302310\ndashedName: sorting-algorithmsbead-sort\n--description--\nA bead sort starts by creating a matrix of zeroes whose length is equal to the value of the largest element in the input array The matrix is transformed by adding one to all elements between the zeroth index and the index indicated by the current element This process is repeated, until you have filled the matrix Iterating over the matrix, summing the number of elements greater than zero, then decreasing the value of each element by one yields the sorted array Note: Each element in the input array is unique Sort an array of positive integers using the Bead Sort Algorithm --hints--\nbeadSort should be a function js\nassert(typeof beadSort == 'function');\nbeadSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(beadSort([25, 32, 12, 7, 20])));\nbeadSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(beadSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\nbeadSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(beadSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\nbeadSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert deepEqual(beadSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\nbeadSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bead-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f55408912e5f6db112bb80437c328eb1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bead-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "deepEqual(beadSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); beadSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(beadSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); beadSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assert deepEqual(beadSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]); beadSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js assertdeepEqual(beadSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\nbeadSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert deepEqual(beadSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction beadSort(arr) {\n}\n```\n--solutions--\njs\nfunction beadSort(arr) {\nlet max = 0;\nfor (let i = 0; i < arr length; i++) if (arr[i] > max) max = arr[i];\nconst grid = new Array(arr length);\nfor (let i = 0; i < grid length; i++) {\ngrid[i] = new Array(max);\n}\nconst levelcount = new Array(max);\nlevelcount",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bead-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "69d49d393aa92d13791e3f5699408f59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bead-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "48, 16, 1, 4, 29]), [ 1, 3, 4, 16, 29, 39, 48 ]); --seed-- --seed-contents-- ```js function beadSort(arr) { } ``` --solutions-- js function beadSort(arr) { let max = 0; for (let i = 0; i < arr length; i++) if (arr[i] > max) max = arr[i]; const grid = new Array(arr length); for (let i = 0; i < grid length; i++) { grid[i] = new Array(max); } const levelcount = new Array(max); levelcountfill(0);\nfor (let i = 0; i < max; i++) {\nlevelcount[i] = 0;\nfor (let j = 0; j < arr length; j++) grid[j][i] = '_';\n}\nfor (let i = 0; i < arr length; i++) {\nlet num = arr[i];\nfor (let j = 0; num > 0; j++) {\ngrid[levelcount[j]++][j] = '*';\nnum--;\n}\n}\nconst sorted = new Array(arr length);\nsorted fill(0);\nfor (let i = 0; i < arr length; i++) {\nlet putt = 0;\nfor (\nlet j = 0;\nj < max &&\n(function(c) {\nreturn c charCodeAt == null c : c charCodeAt(0);\n})(grid[arr length - 1 - i][j]) == '*' charCodeAt(0);\nj++\n)\nputt++;\nsorted[i] = putt;\n}\nreturn sorted;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bead-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "28c43fcb0e8bfe461b4d5435d59ed755",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bogosort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8002\ntitle: Sorting algorithms/Bogosort\nchallengeType: 1\nforumTopicId: 302311\ndashedName: sorting-algorithmsbogosort\n--description--\nBogosort a list of numbers Bogosort simply shuffles a collection randomly until it is sorted \"Bogosort\" is a perversely inefficient algorithm only used as an in-joke Its average run-time is O(n ) because the chance that any given shuffle of a set will end up in sorted order is about one in n factorial, and the worst case is infinite since there's no guarantee that a random shuffling will ever produce a sorted sequence Its best case is O(n) since a single pass through the elements may suffice to order them Pseudocode:\nwhile not InOrder(list) do\nShuffle(list)\ndone\n--hints--\nbogosort should be a function js\nassert(typeof bogosort == 'function');\nbogosort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(bogosort([25, 32, 12, 7, 20])));\nbogosort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(bogosort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\nbogosort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(bogosort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\nbogosort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bogosort.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "22910b6d7dcd026453e95eeeb10b3dcc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bogosort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "12, 7, 20]) should return an array js assert(Array isArray(bogosort([25, 32, 12, 7, 20]))); bogosort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js assert deepEqual(bogosort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); bogosort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(bogosort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); bogosort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assertdeepEqual(bogosort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\nbogosort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert deepEqual(bogosort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\nbogosort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert deepEqual(bogosort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction bogosort(v) {\n}\n```\n--solutions--\n```js\nfunction bogosort(v) {\nfunction shuffle(v) {\nfor (\nvar j, x, i = v length;\ni;\nj = Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bogosort.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "211261d782ba871076f8f89ef07aeef1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bogosort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "18, 1, 16, 38]), [ 1, 12, 16, 18, 26, 33, 38 ]); bogosort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js assert deepEqual(bogosort([3, 39, 48, 16, 1, 4, 29]), [ 1, 3, 4, 16, 29, 39, 48 ]); --seed-- --seed-contents-- ```js function bogosort(v) { } ``` --solutions-- ```js function bogosort(v) { function shuffle(v) { for ( var j, x, i = v length; i; j = Mathfloor(Math random() * i), x = v[--i], v[i] = v[j], v[j] = x\n);\nreturn v;\n}\nfunction isSorted(v) {\nfor (var i = 1; i < v length; i++) {\nif (v[i - 1] > v[i]) {\nreturn false;\n}\n}\nreturn true;\n}\nvar sorted = false;\nwhile (sorted == false) {\nv = shuffle(v);\nsorted = isSorted(v);\n}\nreturn v;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-bogosort.md",
      "source_type": "git_repo"
    },
    "token_count": 289,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d1b6a2642c3e467ed6b2b5cf523093e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-cocktail-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8004\ntitle: Sorting algorithms/Cocktail sort\nchallengeType: 1\nforumTopicId: 302312\ndashedName: sorting-algorithmscocktail-sort\n--description--\nThe cocktail sort is an improvement on the Bubble Sort Given an array of numbers, the cocktail sort will traverse the array from start to finish, moving the largest number to the end Then, it will traverse the array backwards and move the smallest number to the start It repeats these two passes, moving the next largest/smallest number to its correct position in the array until it is sorted --instructions--\nWrite a function that sorts a given array using cocktail sort --hints--\ncocktailSort should be a function js\nassert(typeof cocktailSort == 'function');\ncocktailSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(cocktailSort([25, 32, 12, 7, 20])));\ncocktailSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(cocktailSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\ncocktailSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(cocktailSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\ncocktailSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert deepEqual(cocktailSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\ncocktailSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-cocktail-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7d058de85a6e320ac962be956cea9be0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-cocktail-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "deepEqual(cocktailSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); cocktailSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(cocktailSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); cocktailSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assert deepEqual(cocktailSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]); cocktailSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js assertdeepEqual(cocktailSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\ncocktailSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert deepEqual(cocktailSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction cocktailSort(arr) {\n}\n```\n--solutions--\n```js\nfunction cocktailSort(arr) {\nlet isSorted = true;\nwhile (isSorted) {\nfor (let i = 0; i < arr length - 1; i++) {\nif (arr[i] > arr[i + 1]) {\nlet temp = arr[i];\narr[i] = arr[i + 1];\narr[i + 1] = temp;\nisSorted = true;\n}\n}\nif ( isSorted) break;\nisSorted = false;\nfor (let j = arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-cocktail-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "006ab60d739c5c8ba63e538d7fae12aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-cocktail-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "16, 29, 39, 48 ]); --seed-- --seed-contents-- ```js function cocktailSort(arr) { } ``` --solutions-- ```js function cocktailSort(arr) { let isSorted = true; while (isSorted) { for (let i = 0; i < arr length - 1; i++) { if (arr[i] > arr[i + 1]) { let temp = arr[i]; arr[i] = arr[i + 1]; arr[i + 1] = temp; isSorted = true; } } if ( isSorted) break; isSorted = false; for (let j = arrlength - 1; j > 0; j--) {\nif (arr[j - 1] > arr[j]) {\nlet temp = arr[j];\narr[j] = arr[j - 1];\narr[j - 1] = temp;\nisSorted = true;\n}\n}\n}\nreturn arr;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-cocktail-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "022c694c5f1d6b40d71ae9e450f81309",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8005\ntitle: Sorting algorithms/Comb sort\nchallengeType: 1\nforumTopicId: 302313\ndashedName: sorting-algorithmscomb-sort\n--description--\nImplement a comb sort The Comb Sort is a variant of the Bubble Sort Like the Shell sort, the Comb Sort increases the gap used in comparisons and exchanges Dividing the gap by $(1-e^{-\\varphi})^{-1} \\approx 1 247330950103979$ works best, but 1 3 may be more practical Some implementations use the insertion sort once the gap is less than a certain amount Variants:\nCombsort11 makes sure the gap ends in (11, 8, 6, 4, 3, 2, 1), which is significantly faster than the other two possible endings Combsort with different endings changes to a more efficient sort when the data is almost sorted (when the gap is small) Comb sort with a low gap isn't much better than the Bubble Sort Pseudocode:\nfunction combsort(array input)\ngap := input size //initialize gap size\nloop until gap = 1 and swaps = 0\n//update the gap value for a next comb Below is an example\ngap := int(gap / 1 25)\nif gap < 1\n//minimum gap is 1\ngap := 1\nend if\ni := 0\nswaps := 0 //see Bubble Sort for an explanation\n//a single \"comb\" over the input list\nloop until i + gap >= input size //see Shell sort for similar idea\nif input[i] > input[i+gap]\nswap(input[i], input[i+gap])\nswaps := 1 // Flag a swap has occurred, so the\n// list is not guaranteed sorted\nend if\ni := i + 1\nend loop\nend loop\nend function\n--instructions--\nWrite a function that sorts a given array using Comb sort --hints--\ncombSort should be a function js\nassert(typeof combSort == 'function');\ncombSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "ab9d6e865386512a30350d0d6c803c19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "//see Shell sort for similar idea if input[i] > input[i+gap] swap(input[i], input[i+gap]) swaps := 1 // Flag a swap has occurred, so the // list is not guaranteed sorted end if i := i + 1 end loop end loop end function --instructions-- Write a function that sorts a given array using Comb sort --hints-- combSort should be a function js assert(typeof combSort == 'function'); combSort([25, 32, 12, 7, 20]) should return an array js assert(ArrayisArray(combSort([25, 32, 12, 7, 20])));\ncombSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(combSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\ncombSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(combSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\ncombSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert deepEqual(combSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\ncombSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert deepEqual(combSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\ncombSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "4400c50ba01a4f97bc704090f2110fe9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "combSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assert deepEqual(combSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]); combSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js assert deepEqual(combSort([12, 33, 26, 18, 1, 16, 38]), [ 1, 12, 16, 18, 26, 33, 38 ]); combSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js assertdeepEqual(combSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction combSort(arr) {\n}\n```\n--solutions--\n```js\nfunction combSort(arr) {\nfunction is_array_sorted(arr) {\nvar sorted = true;\nfor (var i = 0; i < arr length - 1; i++) {\nif (arr[i] > arr[i + 1]) {\nsorted = false;\nbreak;\n}\n}\nreturn sorted;\n}\nvar iteration_count = 0;\nvar gap = arr length - 2;\nvar decrease_factor = 1 25;\n// Until array is not sorted, repeat iterations\nwhile ( is_array_sorted(arr)) {\n// If not first gap\nif (iteration_count > 0)\n// Calculate gap\ngap = gap == 1 gap : Math floor(gap / decrease_factor);\n// Set front and back elements and increment to a gap\nvar front = 0;\nvar back = gap;\nwhile (back <= arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2917407fbd9192daecede5967b5595b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "sorted; } var iteration_count = 0; var gap = arr length - 2; var decrease_factor = 1 25; // Until array is not sorted, repeat iterations while ( is_array_sorted(arr)) { // If not first gap if (iteration_count > 0) // Calculate gap gap = gap == 1 gap : Math floor(gap / decrease_factor); // Set front and back elements and increment to a gap var front = 0; var back = gap; while (back <= arrlength - 1) {\n// If elements are not ordered swap them\nif (arr[front] > arr[back]) {\nvar temp = arr[front];\narr[front] = arr[back];\narr[back] = temp;\n}\n// Increment and re-run swapping\nfront += 1;\nback += 1;\n}\niteration_count += 1;\n}\nreturn arr;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-comb-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 185,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d5af1748df0055b9ea1f84826f1c7dae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-gnome-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8007\ntitle: Sorting algorithms/Gnome sort\nchallengeType: 1\nforumTopicId: 302314\ndashedName: sorting-algorithmsgnome-sort\n--description--\nGnome sort is a sorting algorithm which is similar to Insertion sort, except that moving an element to its proper place is accomplished by a series of swaps, as in Bubble Sort The pseudocode for the algorithm is:\nfunction gnomeSort(a[0 size-1])\ni := 1\nj := 2\nwhile i < size do\nif a[i-1] <= a[i] then\n/// for descending sort, use >= for comparison\ni := j\nj := j + 1\nelse\nswap a[i-1] and a[i]\ni := i - 1\nif i = 0 then\ni := j\nj := j + 1\nendif\nendif\ndone\n--instructions--\nWrite a function to implement the above pseudo code The function should return the sorted array --hints--\ngnomeSort should be a function js\nassert(typeof gnomeSort == 'function');\ngnomeSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(gnomeSort([25, 32, 12, 7, 20])));\ngnomeSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(gnomeSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\ngnomeSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(gnomeSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\ngnomeSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-gnome-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3efad5aa48598efa3c90b71a9e78f5f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-gnome-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "12, 7, 20]) should return an array js assert(Array isArray(gnomeSort([25, 32, 12, 7, 20]))); gnomeSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js assert deepEqual(gnomeSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); gnomeSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(gnomeSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); gnomeSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assertdeepEqual(gnomeSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\ngnomeSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert deepEqual(gnomeSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\ngnomeSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-gnome-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6ece3a81758a347f5df847c3fe785057",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-gnome-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "45]); gnomeSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assertdeepEqual(gnomeSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]); gnomeSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js assert deepEqual(gnomeSort([12, 33, 26, 18, 1, 16, 38]), [ 1, 12, 16, 18, 26, 33, 38 ]); gnomeSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js assertdeepEqual(gnomeSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction gnomeSort(a) {\n}\n```\n--solutions--\njs\nfunction gnomeSort(a) {\nfunction moveBack(i) {\nfor (; i > 0 && a[i - 1] > a[i]; i--) {\nvar t = a[i];\na[i] = a[i - 1];\na[i - 1] = t;\n}\n}\nfor (var i = 1; i < a length; i++) {\nif (a[i - 1] > a[i]) moveBack(i);\n}\nreturn a;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-gnome-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "603918094f1babab50978444fe73e6aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-pancake-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc800b\ntitle: Sorting algorithms/Pancake sort\nchallengeType: 1\nforumTopicId: 302315\ndashedName: sorting-algorithmspancake-sort\n--description--\nWrite a function to sort an array of integers (of any convenient size) into ascending order using Pancake sorting The function should return the sorted array In short, instead of individual elements being sorted, the only operation allowed is to \"flip\" one end of the list, like so:\nBefore:\n6 7 8 9 2 5 3 4 1\nAfter:\n9 8 7 6 2 5 3 4 1\nOnly one end of the list can be flipped; this should be the low end, but the high end is okay if it's easier to code or works better, but it must be the same end for the entire solution (The end flipped can't be arbitrarily changed )\n--hints--\npancakeSort should be a function js\nassert(typeof pancakeSort == 'function');\npancakeSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(pancakeSort([25, 32, 12, 7, 20])));\npancakeSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(pancakeSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\npancakeSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(pancakeSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\npancakeSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-pancake-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "88a24aba1faf80b55d68c83dac8678bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-pancake-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "12, 7, 20]) should return an array js assert(Array isArray(pancakeSort([25, 32, 12, 7, 20]))); pancakeSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js assert deepEqual(pancakeSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); pancakeSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(pancakeSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); pancakeSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assertdeepEqual(pancakeSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\npancakeSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert deepEqual(pancakeSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\npancakeSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert deepEqual(pancakeSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction pancakeSort(arr) {\n}\n```\n--solutions--\n```js\nfunction pancakeSort(arr) {\nfor (var i = arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-pancake-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a71b956592aebbbab901d4c470f4ecd8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-pancake-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "12, 16, 18, 26, 33, 38] js assert deepEqual(pancakeSort([12, 33, 26, 18, 1, 16, 38]), [ 1, 12, 16, 18, 26, 33, 38 ]); pancakeSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js assert deepEqual(pancakeSort([3, 39, 48, 16, 1, 4, 29]), [ 1, 3, 4, 16, 29, 39, 48 ]); --seed-- --seed-contents-- ```js function pancakeSort(arr) { } ``` --solutions-- ```js function pancakeSort(arr) { for (var i = arrlength - 1; i >= 1; i--) {\n// find the index of the largest element not yet sorted\nvar max_idx = 0;\nvar max = arr[0];\nfor (var j = 1; j <= i; j++) {\nif (arr[j] > max) {\nmax = arr[j];\nmax_idx = j;\n}\n}\nif (max_idx == i) continue; // element already in place\nvar new_slice;\n// flip arr max element to index 0\nif (max_idx > 0) {\nnew_slice = arr slice(0, max_idx + 1) reverse();\nfor (var j = 0; j <= max_idx; j++) arr[j] = new_slice[j];\n}\n// then flip the max element to its place\nnew_slice = arr slice(0, i + 1) reverse();\nfor (var j = 0; j <= i; j++) arr[j] = new_slice[j];\n}\nreturn arr;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-pancake-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8840dbaf0449a4b736174be56e063cab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-permutation-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc800c\ntitle: Sorting algorithms/Permutation sort\nchallengeType: 1\nforumTopicId: 302316\ndashedName: sorting-algorithmspermutation-sort\n--description--\nWrite a function to implement a permutation sort, which proceeds by generating the possible permutations of the input array until discovering the sorted one The function should return the sorted array Pseudocode:\nwhile not InOrder(list) do\nnextPermutation(list)\ndone\n--hints--\npermutationSort should be a function js\nassert(typeof permutationSort == 'function');\npermutationSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(permutationSort([25, 32, 12, 7, 20])));\npermutationSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(permutationSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\npermutationSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(permutationSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\npermutationSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert deepEqual(permutationSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\npermutationSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2491,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-permutation-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "000fbfdaacca9b8e5a670760f1473360",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-permutation-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "deepEqual(permutationSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); permutationSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(permutationSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); permutationSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assert deepEqual(permutationSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]); permutationSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js assertdeepEqual(permutationSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\npermutationSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert deepEqual(permutationSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction permutationSort(arr) {\n}\n```\n--solutions--\n```js\nfunction permutationSort(arr) {\nfunction pSort(a) {\nvar list = [];\npermute(a, a length, list);\nfor (var i = 0; i < list length; i++) {\nvar x = list[i];\nif (isSorted(x)) return x;\n}\nreturn a;\n}\nfunction permute(a, n, list) {\nif (n === 1) {\nvar b = a slice();\nlist",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2491,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-permutation-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ad119c935935964cbb3258cc6c76ca6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-permutation-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "16, 1, 4, 29]), [ 1, 3, 4, 16, 29, 39, 48 ]); --seed-- --seed-contents-- ```js function permutationSort(arr) { } ``` --solutions-- ```js function permutationSort(arr) { function pSort(a) { var list = []; permute(a, a length, list); for (var i = 0; i < list length; i++) { var x = list[i]; if (isSorted(x)) return x; } return a; } function permute(a, n, list) { if (n === 1) { var b = a slice(); listpush(b);\nreturn;\n}\nfor (var i = 0; i < n; i++) {\nswap(a, i, n - 1);\npermute(a, n - 1, list);\nswap(a, i, n - 1);\n}\n}\nfunction isSorted(a){\nfor(let i = 0; i < a length - 1; i++)\nif(a[i] > a[i + 1])\nreturn false;\nreturn true;\n}\nfunction swap(arr, i, j) {\nvar temp = arr[i];\narr[i] = arr[j];\narr[j] = temp;\n}\nreturn pSort(arr);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2491,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-permutation-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5376bcab80db3fad5e5b0f0b75bd0627",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-shell-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8010\ntitle: Sorting algorithms/Shell sort\nchallengeType: 1\nforumTopicId: 302317\ndashedName: sorting-algorithmsshell-sort\n--description--\nWrite a function to sort an array of elements using the Shell sort algorithm, a diminishing increment sort The function should return the sorted array The Shell sort (also known as Shellsort or Shell's method) is named after its inventor, Donald Shell, who published the algorithm in 1959 Shell sort is a sequence of interleaved insertion sorts based on an increment sequence The increment size is reduced after each pass until the increment size is 1 With an increment size of 1, the sort is a basic insertion sort, but by this time the data is guaranteed to be almost sorted, which is insertion sort's \"best case\" Any sequence will sort the data as long as it ends in 1, but some work better than others Empirical studies have shown a geometric increment sequence with a ratio of about 2 2 work well in practice --hints--\nshellSort should be a function js\nassert(typeof shellSort == 'function');\nshellSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(shellSort([25, 32, 12, 7, 20])));\nshellSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(shellSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\nshellSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(shellSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\nshellSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2431,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-shell-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1b375dde3bf85bb30f18870ae26d4065",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-shell-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "12, 7, 20]) should return an array js assert(Array isArray(shellSort([25, 32, 12, 7, 20]))); shellSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js assert deepEqual(shellSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); shellSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(shellSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); shellSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assertdeepEqual(shellSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\nshellSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert deepEqual(shellSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\nshellSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert deepEqual(shellSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction shellSort(a) {\n}\n```\n--solutions--\njs\nfunction shellSort(a) {\nfor (var h = a length; h > 0; h = parseInt(h / 2)) {\nfor (var i = h; i < a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2431,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-shell-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "dc212fcfbbe3425d5eb4f53599e4582e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-shell-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "16, 18, 26, 33, 38 ]); shellSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js assert deepEqual(shellSort([3, 39, 48, 16, 1, 4, 29]), [ 1, 3, 4, 16, 29, 39, 48 ]); --seed-- --seed-contents-- ```js function shellSort(a) { } ``` --solutions-- js function shellSort(a) { for (var h = a length; h > 0; h = parseInt(h / 2)) { for (var i = h; i < alength; i++) {\nvar k = a[i];\nfor (var j = i; j >= h && k < a[j - h]; j -= h) a[j] = a[j - h];\na[j] = k;\n}\n}\nreturn a;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2431,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-shell-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7801c37edddd32bd2cb1339435892de5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-stooge-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8012\ntitle: Sorting algorithms/Stooge sort\nchallengeType: 1\nforumTopicId: 302318\ndashedName: sorting-algorithmsstooge-sort\n--description--\nWrite a function to perform Stooge Sort on an array of integers The function should return a sorted array The Stooge Sort algorithm is as follows:\nalgorithm stoogesort(array L, i = 0, j = length(L)-1)\nif L[j] < L[i] then\nL[i] ↔ L[j]\nif j - i > 1 then\nt := (j - i + 1)/3\nstoogesort(L, i , j-t)\nstoogesort(L, i+t, j )\nstoogesort(L, i , j-t)\nreturn L\n--hints--\nstoogeSort should be a function js\nassert(typeof stoogeSort == 'function');\nstoogeSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(stoogeSort([25, 32, 12, 7, 20])));\nstoogeSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(stoogeSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\nstoogeSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert deepEqual(stoogeSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\nstoogeSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2374,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-stooge-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1e2bd534fae3788aae6a33c76b30f741",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-stooge-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "12, 7, 20]) should return an array js assert(Array isArray(stoogeSort([25, 32, 12, 7, 20]))); stoogeSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js assert deepEqual(stoogeSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); stoogeSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assert deepEqual(stoogeSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]); stoogeSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assertdeepEqual(stoogeSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\nstoogeSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert deepEqual(stoogeSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\nstoogeSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert deepEqual(stoogeSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction stoogeSort(arr) {\n}\n```\n--solutions--\n```js\nfunction stoogeSort(arr) {\nfunction stoogeSortRecurse(array, i, j) {\nif (j === undefined) {\nj = array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2374,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-stooge-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "beb559a6756afad60bc7d1c1a85348d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-stooge-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "deepEqual(stoogeSort([12, 33, 26, 18, 1, 16, 38]), [ 1, 12, 16, 18, 26, 33, 38 ]); stoogeSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js assert deepEqual(stoogeSort([3, 39, 48, 16, 1, 4, 29]), [ 1, 3, 4, 16, 29, 39, 48 ]); --seed-- --seed-contents-- ```js function stoogeSort(arr) { } ``` --solutions-- ```js function stoogeSort(arr) { function stoogeSortRecurse(array, i, j) { if (j === undefined) { j = arraylength - 1;\n}\nif (i === undefined) {\ni = 0;\n}\nif (array[j] < array[i]) {\nvar aux = array[i];\narray[i] = array[j];\narray[j] = aux;\n}\nif (j - i > 1) {\nvar t = Math floor((j - i + 1) / 3);\nstoogeSortRecurse(array, i, j - t);\nstoogeSortRecurse(array, i + t, j);\nstoogeSortRecurse(array, i, j - t);\n}\n}\nstoogeSortRecurse(arr);\nreturn arr;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2374,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-stooge-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "74c7298acaef94291176a395cca1d930",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-strand-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8013\ntitle: Sorting algorithms/Strand sort\nchallengeType: 1\nforumTopicId: 302319\ndashedName: sorting-algorithmsstrand-sort\n--description--\nThe Strand sort creates sorted subsets that are merged to create the final result Consider an unsortedArray = [3, 1, 4, 2] Pick the first item 3 and copy it into a separate array Search for any bigger item following this item When you find the a larger item, in this case 4, copy it to the separate array, [3, 4], and compare the following items to this new value, 4 After you have reached the end of the array, remove the items you copied, [3, 4], and start again with the first item remaining in the unsortedArray, in this case 1 Following this process results in two sorted arrays, [3, 4] and [1, 2] Merge these two arrays to create the strandSortedArray js\nconst unsortedArray = [3, 1, 4, 2];\nconst strandsortedArray = [1, 2, 3, 4];\nWrite a function to sort an array using the Strand sort The function should return the sorted array --hints--\nstrandSort should be a function js\nassert(typeof strandSort == 'function');\nstrandSort([25, 32, 12, 7, 20]) should return an array js\nassert(Array isArray(strandSort([25, 32, 12, 7, 20])));\nstrandSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js\nassert deepEqual(strandSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]);\nstrandSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-strand-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ce0f4e9fd6e6827845d5d31612979c45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-strand-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "using the Strand sort The function should return the sorted array --hints-- strandSort should be a function js assert(typeof strandSort == 'function'); strandSort([25, 32, 12, 7, 20]) should return an array js assert(Array isArray(strandSort([25, 32, 12, 7, 20]))); strandSort([25, 32, 12, 7, 20]) should return [7, 12, 20, 25, 32] js assert deepEqual(strandSort([25, 32, 12, 7, 20]), [7, 12, 20, 25, 32]); strandSort([38, 45, 35, 8, 13]) should return [8, 13, 35, 38, 45] js assertdeepEqual(strandSort([38, 45, 35, 8, 13]), [8, 13, 35, 38, 45]);\nstrandSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js\nassert deepEqual(strandSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]);\nstrandSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js\nassert deepEqual(strandSort([12, 33, 26, 18, 1, 16, 38]), [\n1,\n12,\n16,\n18,\n26,\n33,\n38\n]);\nstrandSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-strand-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "86da706bdd9d9f5cea2bbd850482aee4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-strand-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "strandSort([43, 36, 20, 34, 24]) should return [20, 24, 34, 36, 43] js assert deepEqual(strandSort([43, 36, 20, 34, 24]), [20, 24, 34, 36, 43]); strandSort([12, 33, 26, 18, 1, 16, 38]) should return [1, 12, 16, 18, 26, 33, 38] js assert deepEqual(strandSort([12, 33, 26, 18, 1, 16, 38]), [ 1, 12, 16, 18, 26, 33, 38 ]); strandSort([3, 39, 48, 16, 1, 4, 29]) should return [1, 3, 4, 16, 29, 39, 48] js assertdeepEqual(strandSort([3, 39, 48, 16, 1, 4, 29]), [\n1,\n3,\n4,\n16,\n29,\n39,\n48\n]);\n--seed--\n--seed-contents--\n```js\nfunction strandSort(list) {\n}\n```\n--solutions--\n```js\nfunction strandSort(list) {\nfunction merge(left, right) {\nvar result = [];\nwhile (left length = 0 && right length = 0) {\nif (left[0] <= right[0]) result push(left shift());\nelse result push(right shift());\n}\nresult push apply(result, left);\nresult push apply(result, right);\nreturn result;\n}\nif (list length <= 1) return list;\nvar result = [];\nwhile (list length > 0) {\nvar sorted = [];\nsorted push(list shift());\nvar len = list length;\nfor (var i = 1; i < len; i++) {\nvar elem = list[i];\nif (sorted[i - 1] <= elem) {\nsorted push(elem);\nsorted splice(i, 1);\n}\n}\nresult = merge(result, sorted);\n}\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sorting-algorithms-strand-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "38d110bdce7ff39987ac7f0cf27aa1c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\spiral-matrix.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc801c\ntitle: Spiral matrix\nchallengeType: 1\nforumTopicId: 302321\ndashedName: spiral-matrix\n--description--\nProduce a spiral array A spiral array is a square arrangement of the first N2 natural numbers, where the numbers increase sequentially as you go around the edges of the array spiraling inwards For example, given 5, produce this array:\n0  1  2  3  4\n15 16 17 18 5\n14 23 24 19 6\n13 22 21 20 7\n12 11 10  9 8\n--hints--\nspiralArray should be a function js\nassert(typeof spiralArray == 'function');\nspiralArray(3) should return an array js\nassert(Array isArray(spiralArray(3)));\nspiralArray(3) should return [[0, 1, 2],[7, 8, 3],[6, 5, 4]] js\nassert deepEqual(spiralArray(3), [\n[0, 1, 2],\n[7, 8, 3],\n[6, 5, 4]\n]);\nspiralArray(4) should return [[0, 1, 2, 3],[11, 12, 13, 4],[10, 15, 14, 5],[9, 8, 7, 6]] js\nassert deepEqual(spiralArray(4), [\n[0, 1, 2, 3],\n[11, 12, 13, 4],\n[10, 15, 14, 5],\n[9, 8, 7, 6]\n]);\nspiralArray(5) should return [[0, 1, 2, 3, 4],[15, 16, 17, 18, 5],[14, 23, 24, 19, 6],[13, 22, 21, 20, 7],[12, 11, 10, 9, 8]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\spiral-matrix.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2eba46d73031b699728bc5fe876faa08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\spiral-matrix.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert deepEqual(spiralArray(3), [ [0, 1, 2], [7, 8, 3], [6, 5, 4] ]); spiralArray(4) should return [[0, 1, 2, 3],[11, 12, 13, 4],[10, 15, 14, 5],[9, 8, 7, 6]] js assert deepEqual(spiralArray(4), [ [0, 1, 2, 3], [11, 12, 13, 4], [10, 15, 14, 5], [9, 8, 7, 6] ]); spiralArray(5) should return [[0, 1, 2, 3, 4],[15, 16, 17, 18, 5],[14, 23, 24, 19, 6],[13, 22, 21, 20, 7],[12, 11, 10, 9, 8]] js assertdeepEqual(spiralArray(5), [\n[0, 1, 2, 3, 4],\n[15, 16, 17, 18, 5],\n[14, 23, 24, 19, 6],\n[13, 22, 21, 20, 7],\n[12, 11, 10, 9, 8]\n]);\n--seed--\n--seed-contents--\n```js\nfunction spiralArray(n) {\n}\n```\n--solutions--\njs\nfunction spiralArray(n) {\nvar arr = Array(n),\nx = 0,\ny = n,\ntotal = n * n--,\ndx = 1,\ndy = 0,\ni = 0,\nj = 0;\nwhile (y) arr[--y] = [];\nwhile (i < total) {\narr[y][x] = i++;\nx += dx;\ny += dy;\nif (++j == n) {\nif (dy < 0) {\nx++;\ny++;\nn -= 2;\n}\nj = dx;\ndx = -dy;\ndy = j;\nj = 0;\n}\n}\nreturn arr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\spiral-matrix.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bc200dfd572a8563922a65c6f666633d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\split-a-character-string-based-on-change-of-character.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc801d\ntitle: Split a character string based on change of character\nchallengeType: 1\nforumTopicId: 302322\ndashedName: split-a-character-string-based-on-change-of-character\n--description--\nSplit a (character) string into comma (plus a blank) delimited strings based on a change of character (left to right) Blanks should be treated as any other character (except they are problematic to display clearly) The same applies to commas For instance, the string:\n\"gHHH5YY++///\\\\\"\nshould be split as:\n[\"g\", \"HHH\", \"5\", \"YY\", \"++\", \"///\", \"\\\\\" ];\n--hints--\nsplit should be a function js\nassert(typeof split == 'function');\nsplit(\"hello\") should return an array js\nassert(Array isArray(split('hello')));\nsplit(\"hello\") should return [\"h\", \"e\", \"ll\", \"o\"] js\nassert deepEqual(split('hello'), ['h', 'e', 'll', 'o']);\nsplit(\"commission\") should return [\"c\", \"o\", \"mm\", \"i\", \"ss\", \"i\", \"o\", \"n\"] js\nassert deepEqual(split('commission'), [\n'c',\n'o',\n'mm',\n'i',\n'ss',\n'i',\n'o',\n'n'\n]);\nsplit(\"ssss----====llloooo\") should return [\"ssss\", \"----\", \"====\", \"lll\", \"oooo\"] js\nassert deepEqual(split('ssss----====llloooo'), [\n'ssss',\n'----',\n'====',\n'lll',\n'oooo'\n]);\nsplit(\"sssmmmaaammmaaat\") should return [\"sss\", \"mmm\", \"aaa\", \"mmm\", \"aaa\", \"t\"] js\nassert deepEqual(split('sssmmmaaammmaaat'), [\n'sss',\n'mmm',\n'aaa',\n'mmm',\n'aaa',\n't'\n]);\nsplit(\"gHHH5YY++///\\\\\") should return [\"g\", \"HHH\", \"5\", \"YY\", \"++\", \"///\", \"\\\\\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2723,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\split-a-character-string-based-on-change-of-character.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a7c2d9f5eb521c61e207344fa178a676",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\split-a-character-string-based-on-change-of-character.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'ll', 'o']); split(\"commission\") should return [\"c\", \"o\", \"mm\", \"i\", \"ss\", \"i\", \"o\", \"n\"] js assert deepEqual(split('commission'), [ 'c', 'o', 'mm', 'i', 'ss', 'i', 'o', 'n' ]); split(\"ssss----====llloooo\") should return [\"ssss\", \"----\", \"====\", \"lll\", \"oooo\"] js assert deepEqual(split('ssss----====llloooo'), [ 'ssss', '----', '====', 'lll', 'oooo' ]); split(\"sssmmmaaammmaaat\") should return [\"sss\", \"mmm\", \"aaa\", \"mmm\", \"aaa\", \"t\"] js assert deepEqual(split('sssmmmaaammmaaat'), [ 'sss', 'mmm', 'aaa', 'mmm', 'aaa', 't' ]); split(\"gHHH5YY++///\\\\\") should return [\"g\", \"HHH\", \"5\", \"YY\", \"++\", \"///\", \"\\\\\"] js assertdeepEqual(split('gHHH5YY++///\\\\'), [\n'g',\n'HHH',\n'5',\n'YY',\n'++',\n'///',\n'\\\\'\n]);\n--seed--\n--seed-contents--\n```js\nfunction split(str) {\n}\n```\n--solutions--\n```js\nfunction split(str) {\nconst concat = xs =>\nxs length > 0 (() => {\nconst unit = typeof xs[0] === 'string' '' : [];\nreturn unit concat apply(unit, xs);\n})()\n: [];\nconst group = xs => groupBy((a, b) => a === b, xs);\nconst groupBy = (f, xs) => {\nconst dct = xs slice(1) reduce(\n(a, x) => {\nconst h = a active length > 0 a active[0] : undefined,\nblnGroup = h == undefined && f(h, x);\nreturn {\nactive: blnGroup a active concat([x]) : [x],\nsofar: blnGroup a sofar : a sofar concat([a active])\n};\n},\n{\nactive: xs length > 0 [xs[0]] : [],\nsofar: []\n}\n);\nreturn dct sofar concat(dct active length > 0 [dct active] : []);\n};\nconst map = (f, xs) => xs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2723,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\split-a-character-string-based-on-change-of-character.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7d791ea7aa0e14e1f53bd270d6cafc8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\split-a-character-string-based-on-change-of-character.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "x) => { const h = a active length > 0 a active[0] : undefined, blnGroup = h == undefined && f(h, x); return { active: blnGroup a active concat([x]) : [x], sofar: blnGroup a sofar : a sofar concat([a active]) }; }, { active: xs length > 0 [xs[0]] : [], sofar: [] } ); return dct sofar concat(dct active length > 0 [dct active] : []); }; const map = (f, xs) => xsmap(f);\nconst stringChars = s => s split('');\nreturn map(concat, group(stringChars(str)));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2723,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\split-a-character-string-based-on-change-of-character.md",
      "source_type": "git_repo"
    },
    "token_count": 146,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "93a6781f52ae9e786021640bb10c1096",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\soundex.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8017\ntitle: Soundex\nchallengeType: 1\nforumTopicId: 302320\ndashedName: soundex\n--description--\nSoundex Algorithm deals with the intentions of the words It creates a representation for similar sounding words It is used for searching names and addresses This means that the person who filled in the name, can focus on how it sounds instead of correcting the spelling of names For example:\nIf you are hearing the name Quenci for the first time, and misspelled it, you will get Soundex code Q520 When you spell the name Quincy correctly next time, you will still get the same code Q520, which means you can link multiple name pronunciations into the same person without the need for adding every spelling Here is the rules:\nIf a vowel (A, E, I, O, U) separates two consonants that have the same soundex code, the consonant to the right of the vowel is coded Tymczak is coded as T-522 (T, 5 for the M, 2 for the C, Z ignored (see \"Side-by-Side\" rule above), 2 for the K) Since the vowel \"A\" separates the Z and K, the K is coded If \"H\" or \"W\" separate two consonants that have the same soundex code, the consonant to the right of the vowel is not coded Example: Ashcraft is coded A-261 (A, 2 for the S, C ignored, 6 for the R, 1 for the F) It is not coded A-226 --instructions--\nWrite a function that takes a string as a parameter and returns the encoded string --hints--\nsoundex should be a function js\nassert(typeof soundex == 'function');\nsoundex(\"Soundex\") should return a string js\nassert(typeof soundex('Soundex') == 'string');\nsoundex(\"Soundex\") should return \"S532\" js\nassert equal(soundex('Soundex'), 'S532');\nsoundex(\"Example\") should return \"E251\" js\nassert equal(soundex('Example'), 'E251');\nsoundex(\"Sownteks\") should return \"S532\" js\nassert equal(soundex('Sownteks'), 'S532');\nsoundex(\"Ekzampul\") should return \"E251\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3446,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\soundex.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8044e5ef22de5bcc42dd2ca39154eb49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\soundex.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1 for the F) It is not coded A-226 --instructions-- Write a function that takes a string as a parameter and returns the encoded string --hints-- soundex should be a function js assert(typeof soundex == 'function'); soundex(\"Soundex\") should return a string js assert(typeof soundex('Soundex') == 'string'); soundex(\"Soundex\") should return \"S532\" js assert equal(soundex('Soundex'), 'S532'); soundex(\"Example\") should return \"E251\" js assert equal(soundex('Example'), 'E251'); soundex(\"Sownteks\") should return \"S532\" js assert equal(soundex('Sownteks'), 'S532'); soundex(\"Ekzampul\") should return \"E251\" js assertequal(soundex('Ekzampul'), 'E251');\nsoundex(\"Euler\") should return \"E460\" js\nassert equal(soundex('Euler'), 'E460');\nsoundex(\"Gauss\") should return \"G200\" js\nassert equal(soundex('Gauss'), 'G200');\nsoundex(\"Hilbert\") should return \"H416\" js\nassert equal(soundex('Hilbert'), 'H416');\nsoundex(\"Knuth\") should return \"K530\" js\nassert equal(soundex('Knuth'), 'K530');\nsoundex(\"Lloyd\") should return \"L300\" js\nassert equal(soundex('Lloyd'), 'L300');\nsoundex(\"Lukasiewicz\") should return \"L222\" js\nassert equal(soundex('Lukasiewicz'), 'L222');\n--seed--\n--seed-contents--\n```js\nfunction soundex(s) {\n}\n```\n--solutions--\n```js\nfunction soundex(s) {\nvar a = s toLowerCase() split('');\nvar f = a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3446,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\soundex.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ddb7e0d2c236784e19a66caedf03cf95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\soundex.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return \"E251\" js assertequal(soundex('Ekzampul'), 'E251'); soundex(\"Euler\") should return \"E460\" js assert equal(soundex('Euler'), 'E460'); soundex(\"Gauss\") should return \"G200\" js assert equal(soundex('Gauss'), 'G200'); soundex(\"Hilbert\") should return \"H416\" js assert equal(soundex('Hilbert'), 'H416'); soundex(\"Knuth\") should return \"K530\" js assert equal(soundex('Knuth'), 'K530'); soundex(\"Lloyd\") should return \"L300\" js assert equal(soundex('Lloyd'), 'L300'); soundex(\"Lukasiewicz\") should return \"L222\" js assert equal(soundex('Lukasiewicz'), 'L222'); --seed-- --seed-contents-- ```js function soundex(s) { } ``` --solutions-- ```js function soundex(s) { var a = s toLowerCase() split(''); var f = ashift(),\nr = '',\ncodes = {\na: '',\ne: '',\ni: '',\no: '',\nu: '',\nb: 1,\nf: 1,\np: 1,\nv: 1,\nc: 2,\ng: 2,\nj: 2,\nk: 2,\nq: 2,\ns: 2,\nx: 2,\nz: 2,\nd: 3,\nt: 3,\nl: 4,\nm: 5,\nn: 5,\nr: 6\n};\nr =\nf +\na map(function(v, i, a) {\nreturn codes[v];\n}) filter(function(v, i, a) {\nreturn i === 0 v == codes[f] : v == a[i - 1];\n}) join('');\nreturn (r + '000') slice(0, 4) toUpperCase();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3446,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\soundex.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "62c36feed2c7ee639fcc7b5a9c967b24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stern-brocot-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8028\ntitle: Stern-Brocot sequence\nchallengeType: 1\nforumTopicId: 302324\ndashedName: stern-brocot-sequence\n--description--\nFor this task, the Stern-Brocot sequence is to be generated by an algorithm similar to that employed in generating the Fibonacci sequence The first and second members of the sequence are both 1:\n1, 1\nStart by considering the second member of the sequence\nSum the considered member of the sequence and its precedent, (1 + 1) = 2, and append it to the end of the\nsequence:\n1, 1, 2\nAppend the considered member of the sequence to the end of the sequence:\n1, 1, 2, 1\nConsider the next member of the series, (the third member i e 2)\nGOTO 3\n─── Expanding another loop we get: ───\nSum the considered member of the sequence and its precedent, (2 + 1) = 3, and append it to the end of the\nsequence:\n1, 1, 2, 1, 3\nAppend the considered member of the sequence to the end of the sequence:\n1, 1, 2, 1, 3, 2\nConsider the next member of the series, (the fourth member i e 1)\n--instructions--\nCreate a function that returns the position in the Stern-Brocot sequence at which $ n $ is first encountered, where the sequence is generated with the method outlined above Note that this sequence uses 1 based indexing --hints--\nsternBrocot should be a function js\nassert(typeof sternBrocot == 'function');\nsternBrocot(2) should return a number js\nassert(typeof sternBrocot(2) == 'number');\nsternBrocot(2) should return 3 js\nassert equal(sternBrocot(2), 3);\nsternBrocot(3) should return 5 js\nassert equal(sternBrocot(3), 5);\nsternBrocot(5) should return 11 js\nassert equal(sternBrocot(5), 11);\nsternBrocot(7) should return 19 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stern-brocot-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6c48813eabb10c41a8f68732caed032e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stern-brocot-sequence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "which $ n $ is first encountered, where the sequence is generated with the method outlined above Note that this sequence uses 1 based indexing --hints-- sternBrocot should be a function js assert(typeof sternBrocot == 'function'); sternBrocot(2) should return a number js assert(typeof sternBrocot(2) == 'number'); sternBrocot(2) should return 3 js assert equal(sternBrocot(2), 3); sternBrocot(3) should return 5 js assert equal(sternBrocot(3), 5); sternBrocot(5) should return 11 js assert equal(sternBrocot(5), 11); sternBrocot(7) should return 19 js assertequal(sternBrocot(7), 19);\nsternBrocot(10) should return 39 js\nassert equal(sternBrocot(10), 39);\n--seed--\n--seed-contents--\n```js\nfunction sternBrocot(num) {\n}\n```\n--solutions--\n```js\nfunction sternBrocot(num) {\nfunction f(n) {\nreturn n < 2 n\n: n & 1 f(Math floor(n / 2)) + f(Math floor(n / 2 + 1))\n: f(Math floor(n / 2));\n}\nfunction gcd(a, b) {\nreturn a (a < b gcd(b % a, a) : gcd(a % b, b)) : b;\n}\nvar n;\nfor (n = 1; f(n) = num; n++);\nreturn n;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stern-brocot-sequence.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "55bfe7ab758e066e66070790cf0a9cd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8024\ntitle: State name puzzle\nchallengeType: 1\nforumTopicId: 302323\ndashedName: state-name-puzzle\n--description--\nState name is a word puzzle in which you take the letters from two U S state names and rearrange them to form the names of two different U S states --instructions--\nWrite a function to solve the challenge for a given array of actual U S state names, and for fictional state names The function should return an array Each element should be an object in this form: {\"from\":[],\"to\":[]} The from array should contain the original names and the to array should contain the resultant names --hints--\nsolve should be a function js\nassert(typeof solve == 'function');\nsolve([\"New Mexico\", \"New York\", \"North Carolina \", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\"]) should return an array js\nassert(\nArray isArray(\nsolve([\n'New Mexico',\n'New York',\n'North Carolina ',\n'North Dakota',\n'Ohio',\n'Oklahoma',\n'Oregon',\n'Pennsylvania',\n'Rhode Island',\n'South Carolina',\n'South Dakota'\n])\n)\n);\nsolve([\"New Mexico\", \"New York\", \"North Carolina \", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\"]) should return [{ from: [\"North Carolina \", \"South Dakota\"], to: [\"North Dakota\", \"South Carolina\"] }] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "f606d5814e4ddb982a2847e0cfa34229",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\"]) should return an array js assert( Array isArray( solve([ 'New Mexico', 'New York', 'North Carolina ', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota' ]) ) ); solve([\"New Mexico\", \"New York\", \"North Carolina \", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\"]) should return [{ from: [\"North Carolina \", \"South Dakota\"], to: [\"North Dakota\", \"South Carolina\"] }] js assertdeepEqual(\nsolve([\n'New Mexico',\n'New York',\n'North Carolina ',\n'North Dakota',\n'Ohio',\n'Oklahoma',\n'Oregon',\n'Pennsylvania',\n'Rhode Island',\n'South Carolina',\n'South Dakota'\n]),\n[\n{\nfrom: ['North Carolina ', 'South Dakota'],\nto: ['North Dakota', 'South Carolina']\n}\n]\n);\nsolve([\"New York\", \"New Kory\", \"Wen Kory\", \"York New\", \"Kory New\", \"New Kory\"]) should return [{ from: [\"New Kory\", \"New York\"], to: [\"Wen Kory\", \"York New\"] }, { from: [\"New Kory\", \"New York\"], to: [\"Kory New\", \"Wen Kory\"] }, { from: [\"New Kory\", \"New York\"], to: [\"Kory New\", \"York New\"] }, { from: [\"New York\", \"Wen Kory\"], to: [\"New Kory\", \"York New\"] }, { from: [\"New York\", \"Wen Kory\"], to: [\"Kory New\", \"New Kory\"] }, { from: [\"New York\", \"Wen Kory\"], to: [\"Kory New\", \"York New\"] }, { from: [\"New York\", \"York New\"], to: [\"New Kory\", \"Wen Kory\"] }, { from: [\"New York\", \"York New\"], to: [\"Kory New\", \"New Kory\"] }, { from: [\"New York\", \"York New\"], to: [\"Kory New\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New York\"], to: [\"New Kory\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New York\"], to: [\"New Kory\", \"York New\"] }, { from: [\"Kory New\", \"New York\"], to: [\"Wen Kory\", \"York New\"] }, { from: [\"New Kory\", \"Wen Kory\"], to: [\"Kory New\", \"York New\"] }, { from: [\"New Kory\", \"York New\"], to: [\"Kory New\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New Kory\"], to: [\"Wen Kory\", \"York New\"] }]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "a6cbb374f967b3b7ed57b5bf8c5eaadd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "New\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New York\"], to: [\"New Kory\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New York\"], to: [\"New Kory\", \"York New\"] }, { from: [\"Kory New\", \"New York\"], to: [\"Wen Kory\", \"York New\"] }, { from: [\"New Kory\", \"Wen Kory\"], to: [\"Kory New\", \"York New\"] }, { from: [\"New Kory\", \"York New\"], to: [\"Kory New\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New Kory\"], to: [\"Wen Kory\", \"York New\"] }]js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
      "source_type": "git_repo"
    },
    "token_count": 165,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3449c5771e4e35ff772bd5c36a24ceb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Wen Kory\"] }, { from: [\"Kory New\", \"New York\"], to: [\"New Kory\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New York\"], to: [\"New Kory\", \"York New\"] }, { from: [\"Kory New\", \"New York\"], to: [\"Wen Kory\", \"York New\"] }, { from: [\"New Kory\", \"Wen Kory\"], to: [\"Kory New\", \"York New\"] }, { from: [\"New Kory\", \"York New\"], to: [\"Kory New\", \"Wen Kory\"] }, { from: [\"Kory New\", \"New Kory\"], to: [\"Wen Kory\", \"York New\"] }]js assertdeepEqual(\nsolve([\n'New York',\n'New Kory',\n'Wen Kory',\n'York New',\n'Kory New',\n'New Kory'\n]),\n[\n{ from: ['New Kory', 'New York'], to: ['Wen Kory', 'York New'] },\n{ from: ['New Kory', 'New York'], to: ['Kory New', 'Wen Kory'] },\n{ from: ['New Kory', 'New York'], to: ['Kory New', 'York New'] },\n{ from: ['New York', 'Wen Kory'], to: ['New Kory', 'York New'] },\n{ from: ['New York', 'Wen Kory'], to: ['Kory New', 'New Kory'] },\n{ from: ['New York', 'Wen Kory'], to: ['Kory New', 'York New'] },\n{ from: ['New York', 'York New'], to: ['New Kory', 'Wen Kory'] },\n{ from: ['New York', 'York New'], to: ['Kory New', 'New Kory'] },\n{ from: ['New York', 'York New'], to: ['Kory New', 'Wen Kory'] },\n{ from: ['Kory New', 'New York'], to: ['New Kory', 'Wen Kory'] },\n{ from: ['Kory New', 'New York'], to: ['New Kory', 'York New'] },\n{ from: ['Kory New', 'New York'], to: ['Wen Kory', 'York New'] },\n{ from: ['New Kory', 'Wen Kory'], to: ['Kory New', 'York New'] },\n{ from: ['New Kory', 'York New'], to: ['Kory New', 'Wen Kory'] },\n{ from: ['Kory New', 'New Kory'], to: ['Wen Kory', 'York New'] }\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction solve(input) {\n}\n```\n--solutions--\n```js\nfunction solve(input) {\nvar orig = {};\ninput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3b5eb1562a3f50c870802837dff4fd20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'New York'], to: ['New Kory', 'York New'] }, { from: ['Kory New', 'New York'], to: ['Wen Kory', 'York New'] }, { from: ['New Kory', 'Wen Kory'], to: ['Kory New', 'York New'] }, { from: ['New Kory', 'York New'], to: ['Kory New', 'Wen Kory'] }, { from: ['Kory New', 'New Kory'], to: ['Wen Kory', 'York New'] } ] ); --seed-- --seed-contents-- ```js function solve(input) { } ``` --solutions-- ```js function solve(input) { var orig = {}; inputforEach(function(e) {\norig[__helpers removeWhiteSpace(e) toLowerCase()] = e;\n});\ninput = Object keys(orig);\nvar map = {};\nfor (var i = 0; i < input length - 1; i++) {\nvar pair0 = input[i];\nfor (var j = i + 1; j < input length; j++) {\nvar pair = [pair0, input[j]];\nvar s = pair0 + pair[1];\nvar key = s split('') sort();\nvar val = map[key] map[key] : [];\nval push(pair);\nmap[key] = val;\n}\n}\nvar result = [];\nObject keys(map) forEach(key => {\nfor (var i = 0; i < map[key] length - 1; i++) {\nvar a = map[key][i];\nfor (var j = i + 1; j < map[key] length; j++) {\nvar b = map[key][j];\nif (new Set([a[0], b[0], a[1], b[1]]) size < 4) continue;\nvar from = [orig[a[0]], orig[a[1]]] sort();\nvar to = [orig[b[0]], orig[b[1]]] sort();\nresult push({\nfrom,\nto\n});\n}\n}\n});\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\state-name-puzzle.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "ec60936ee772bfdd145dd12f574e5758",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\strip-control-codes-and-extended-characters-from-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8036\ntitle: Strip control codes and extended characters from a string\nchallengeType: 1\nforumTopicId: 302327\ndashedName: strip-control-codes-and-extended-characters-from-a-string\n--description--\nThe task is to strip control codes and extended characters from a string The solution should demonstrate how to achieve each of the following results: A string with control codes and extended characters stripped In ASCII, the control codes have decimal codes 0 through to 31 and 127 On an ASCII based system, if the control codes are stripped, the resultant string would have all of its characters within the range of 32 to 126 decimal on the ASCII table On a non-ASCII based system, we consider characters that do not have a corresponding glyph on the ASCII table (within the ASCII range of 32 to 126 decimal) to be an extended character for the purpose of this task --hints--\nstrip should be a function js\nassert(typeof strip == 'function');\nstrip(\"abc\") should return a string js\nassert(typeof strip('abc') == 'string');\nstrip(\"\\ba\\x00b\\n\\rc\\fd\\xc3\") should return \"abcd\" js\nassert equal(strip('\\ba\\x00b\\n\\rc\\fd\\xc3'), 'abcd');\nstrip(\"\\u0000\\n abc\\u00E9def\\u007F\") should return \" abcdef\" js\nassert equal(strip('\\u0000\\n abc\\u00E9def\\u007F'), ' abcdef');\nstrip(\"a\\n\\tb\\u2102d\\u2147f\") should return \"abdf\" js\nassert equal(strip('a\\n\\tb\\u2102d\\u2147f'), 'abdf');\nstrip(\"Français \") should return \"Franais \" js\nassert equal(strip('Français '), 'Franais ');\nstrip(\"123\\tabc\\u0007DEF\\u007F+-*/€æŧðłþ\") should return \"123abcDEF+-*/\" js\nassert equal(strip('123\\tabc\\u0007DEF\\u007F+-*/€æŧðłþ'), '123abcDEF+-*/');\n--seed--\n--seed-contents--\n```js\nfunction strip(s) {\n}\n```\n--solutions--\n```js\nfunction strip(s) {\nreturn s split('')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\strip-control-codes-and-extended-characters-from-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b22384021a624e9e7ba72a74e65247be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\strip-control-codes-and-extended-characters-from-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "== 'function'); strip(\"abc\") should return a string js assert(typeof strip('abc') == 'string'); strip(\"\\ba\\x00b\\n\\rc\\fd\\xc3\") should return \"abcd\" js assert equal(strip('\\ba\\x00b\\n\\rc\\fd\\xc3'), 'abcd'); strip(\"\\u0000\\n abc\\u00E9def\\u007F\") should return \" abcdef\" js assert equal(strip('\\u0000\\n abc\\u00E9def\\u007F'), ' abcdef'); strip(\"a\\n\\tb\\u2102d\\u2147f\") should return \"abdf\" js assert equal(strip('a\\n\\tb\\u2102d\\u2147f'), 'abdf'); strip(\"Français \") should return \"Franais \" js assert equal(strip('Français '), 'Franais '); strip(\"123\\tabc\\u0007DEF\\u007F+-*/€æŧðłþ\") should return \"123abcDEF+-*/\" js assert equal(strip('123\\tabc\\u0007DEF\\u007F+-*/€æŧðłþ'), '123abcDEF+-*/'); --seed-- --seed-contents-- ```js function strip(s) { } ``` --solutions-- ```js function strip(s) { return s split('')filter(function(x) {\nvar n = x charCodeAt(0);\nreturn 31 < n && 127 > n;\n}) join('');\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\strip-control-codes-and-extended-characters-from-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a0048631d92c6cfe6d0dd82a25883484",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8038\ntitle: Subleq\nchallengeType: 1\nforumTopicId: 302328\ndashedName: subleq\n--description--\nSubleq is an example of a One-Instruction Set Computer (OISC) It is named after its only instruction, which is SUbtract and Branch if Less than or EQual to zero Your task is to create an interpreter which emulates such a machine The machine's memory consists of an array of signed integers Any reasonable word size is fine, but the memory must be able to hold negative as well as positive numbers Execution begins with the instruction pointer aimed at the first word, which is address 0 It proceeds as follows:\nLet A, B, and C be the value stored in the three consecutive words in memory starting at the instruction pointer Advance the instruction pointer 3 words to point at the address after the one containing C If A is -1, then a character is read from standard input and its code point stored in the address given by B C is unused If B is -1, then the number contained in the address given by A is interpreted as a code point and the corresponding character output C is again unused Otherwise, both A and B are treated as the addresses of memory locations The number contained in the address given by A is subtracted from the number at the address given by B (and the result stored back in address B) If the result is zero or negative, the value C becomes the new instruction pointer If the instruction pointer becomes negative, execution halts Other negative addresses besides -1 may be treated as equivalent to -1, or generate an error, as you see fit Your solution should accept a program to execute on the machine, separately from the input fed to the program itself This program should be in raw subleq \"machine code\" - whitespace-separated decimal numbers, with no symbolic names or other assembly-level extensions, to be loaded into memory starting at address 0 Show the output of your solution when fed this \"Hello, world \" program (Note that the example assumes ASCII or a superset of it, such as any of the Latin-N character sets or Unicode You may translate it into another character set if your implementation is on a non-ASCiI-compatible environment",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b868fa81be6bead5ab7190dfc66f446f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in raw subleq \"machine code\" - whitespace-separated decimal numbers, with no symbolic names or other assembly-level extensions, to be loaded into memory starting at address 0 Show the output of your solution when fed this \"Hello, world \" program (Note that the example assumes ASCII or a superset of it, such as any of the Latin-N character sets or Unicode You may translate it into another character set if your implementation is on a non-ASCiI-compatible environment)\n15 17 -1 17 -1 -1 16 1 -1 16 3 -1 15 15 0 0 -1 72 101 108 108 111 44 32 119 111 114 108 100 33 10 0\nWhich corresponds to something like this in a hypothetical assembler language:\nstart:\nzero, message, -1\nmessage, -1, -1\nneg1, start+1, -1\nneg1, start+3, -1\nzero, zero, start\nzero: 0\nneg1: -1\nmessage: \"Hello, world \\n\\0\"\n--instructions--\nWrite a function that takes an array of integers as a parameter This represents the memory elements The function should interpret the sequence and return the output string For this task, assume that there is no standard input --hints--\nSubleq should be a function js\nassert(typeof Subleq == 'function');\nSubleq([15, 17, -1, 17, -1, -1, 16, 1, -1, 16, 3, -1, 15, 15, 0, 0, -1, 72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 0]) should return a string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3586575b3e71f531748f28e5bd298771",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "integers as a parameter This represents the memory elements The function should interpret the sequence and return the output string For this task, assume that there is no standard input --hints-- Subleq should be a function js assert(typeof Subleq == 'function'); Subleq([15, 17, -1, 17, -1, -1, 16, 1, -1, 16, 3, -1, 15, 15, 0, 0, -1, 72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 0]) should return a stringjs\nassert(\ntypeof Subleq([\n15,\n17,\n-1,\n17,\n-1,\n-1,\n16,\n1,\n-1,\n16,\n3,\n-1,\n15,\n15,\n0,\n0,\n-1,\n72,\n101,\n108,\n108,\n111,\n44,\n32,\n119,\n111,\n114,\n108,\n100,\n33,\n0\n]) == 'string'\n);\nSubleq([15, 17, -1, 17, -1, -1, 16, 1, -1, 16, 3, -1, 15, 15, 0, 0, -1, 72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 0]) should return \"Hello, world \" js\nassert equal(\nSubleq([\n15,\n17,\n-1,\n17,\n-1,\n-1,\n16,\n1,\n-1,\n16,\n3,\n-1,\n15,\n15,\n0,\n0,\n-1,\n72,\n101,\n108,\n108,\n111,\n44,\n32,\n119,\n111,\n114,\n108,\n100,\n33,\n0\n]),\n'Hello, world",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "770570d330c350965cd3da4eb0506313",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'string' ); Subleq([15, 17, -1, 17, -1, -1, 16, 1, -1, 16, 3, -1, 15, 15, 0, 0, -1, 72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 0]) should return \"Hello, world \" js assert equal( Subleq([ 15, 17, -1, 17, -1, -1, 16, 1, -1, 16, 3, -1, 15, 15, 0, 0, -1, 72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 0 ]), 'Hello, world'\n);\n--seed--\n--seed-contents--\n```js\nfunction Subleq(mem) {\n}\n```\n--solutions--\n```js\nfunction Subleq(mem) {\nvar out = '';\nvar instructionPointer = 0;\ndo {\nvar a = mem[instructionPointer];\nvar b = mem[instructionPointer + 1];\nif (a === -1) {\n} else if (b === -1) {\nout += String fromCharCode(mem[a]);\n} else {\nmem[b] -= mem[a];\nif (mem[b] < 1) {\ninstructionPointer = mem[instructionPointer + 2];\ncontinue;\n}\n}\ninstructionPointer += 3;\n} while (instructionPointer >= 0);\nreturn out;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\subleq.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "7ce85a08bfe527b3d9eda388a865851f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc802a\ntitle: Stream Merge\nchallengeType: 1\nforumTopicId: 302326\ndashedName: stream-merge\n--description--\nWrite a function that takes multiple sorted arrays of items, and returns one array of sorted items --hints--\nmergeLists should be a function js\nassert(typeof mergeLists == 'function');\nmergeLists([[1, 3, 5, 9, 10], [2, 4, 6, 7, 8]]) should return an array js\nassert(\nArray isArray(\nmergeLists([\n[1, 3, 5, 9, 10],\n[2, 4, 6, 7, 8]\n])\n)\n);\nmergeLists([[1, 3, 5, 9, 10], [2, 4, 6, 7, 8]]) should return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] js\nassert deepEqual(\nmergeLists([\n[1, 3, 5, 9, 10],\n[2, 4, 6, 7, 8]\n]),\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n);\nmergeLists([[1, 4, 7, 10], [2, 5, 8, 11], [3, 6, 9, 12]]) should return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "0bbf5080b99723d6e7afc0923ff70a22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "mergeLists([[1, 3, 5, 9, 10], [2, 4, 6, 7, 8]]) should return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] js assert deepEqual( mergeLists([ [1, 3, 5, 9, 10], [2, 4, 6, 7, 8] ]), [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] ); mergeLists([[1, 4, 7, 10], [2, 5, 8, 11], [3, 6, 9, 12]]) should return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] js assertdeepEqual(\nmergeLists([\n[1, 4, 7, 10],\n[2, 5, 8, 11],\n[3, 6, 9, 12]\n]),\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n);\nmergeLists([[1, 3, 9, 14, 15, 17, 28], [7, 8, 14, 14, 23, 26, 28, 29, 30], [9, 23, 25, 29]]) should return [1, 3, 7, 8, 9, 9, 14, 14, 14, 15, 17, 23, 23, 25, 26, 28, 28, 29, 29, 30] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "9750038dc50dbddd20b31ecf1fe5c9b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "10, 11, 12] js assertdeepEqual( mergeLists([ [1, 4, 7, 10], [2, 5, 8, 11], [3, 6, 9, 12] ]), [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] ); mergeLists([[1, 3, 9, 14, 15, 17, 28], [7, 8, 14, 14, 23, 26, 28, 29, 30], [9, 23, 25, 29]]) should return [1, 3, 7, 8, 9, 9, 14, 14, 14, 15, 17, 23, 23, 25, 26, 28, 28, 29, 29, 30] js assertdeepEqual(\nmergeLists([\n[1, 3, 9, 14, 15, 17, 28],\n[7, 8, 14, 14, 23, 26, 28, 29, 30],\n[9, 23, 25, 29]\n]),\n[1, 3, 7, 8, 9, 9, 14, 14, 14, 15, 17, 23, 23, 25, 26, 28, 28, 29, 29, 30]\n);\nmergeLists([[3, 14, 15], [2, 17, 18], [], [2, 3, 5, 7]]) should return [2, 2, 3, 3, 5, 7, 14, 15, 17, 18] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a1c3c6a0d079f4bfc26baafd4e127f62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "26, 28, 28, 29, 29, 30] js assertdeepEqual( mergeLists([ [1, 3, 9, 14, 15, 17, 28], [7, 8, 14, 14, 23, 26, 28, 29, 30], [9, 23, 25, 29] ]), [1, 3, 7, 8, 9, 9, 14, 14, 14, 15, 17, 23, 23, 25, 26, 28, 28, 29, 29, 30] ); mergeLists([[3, 14, 15], [2, 17, 18], [], [2, 3, 5, 7]]) should return [2, 2, 3, 3, 5, 7, 14, 15, 17, 18] js assertdeepEqual(mergeLists([[3, 14, 15], [2, 17, 18], [], [2, 3, 5, 7]]), [\n2,\n2,\n3,\n3,\n5,\n7,\n14,\n15,\n17,\n18\n]);\nmergeLists([[1, 19, 1999], [17, 33, 2999, 3000], [8, 500, 3999]]) should return [1, 8, 17, 19, 33, 500, 1999, 2999, 3000, 3999] js\nassert deepEqual(\nmergeLists([\n[1, 19, 1999],\n[17, 33, 2999, 3000],\n[8, 500, 3999]\n]),\n[1, 8, 17, 19, 33, 500, 1999, 2999, 3000, 3999]\n);\n--seed--\n--seed-contents--\n```js\nfunction mergeLists(lists) {\n}\n```\n--solutions--\n```js\nfunction mergeLists(lists) {\nfunction merge(l1, l2) {\nvar result = [],\ni = 0,\nj = 0;\nwhile (l1 length && l2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "2ef49d2fe820097cd0eeea2ea5c635b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "33, 2999, 3000], [8, 500, 3999]]) should return [1, 8, 17, 19, 33, 500, 1999, 2999, 3000, 3999] js assert deepEqual( mergeLists([ [1, 19, 1999], [17, 33, 2999, 3000], [8, 500, 3999] ]), [1, 8, 17, 19, 33, 500, 1999, 2999, 3000, 3999] ); --seed-- --seed-contents-- ```js function mergeLists(lists) { } ``` --solutions-- ```js function mergeLists(lists) { function merge(l1, l2) { var result = [], i = 0, j = 0; while (l1 length && l2length) {\nif (l1[i] <= l2[j]) {\nresult push(l1 shift());\n} else {\nresult push(l2 shift());\n}\n}\nresult push apply(result, l1);\nresult push apply(result, l2);\nreturn result;\n}\nvar result = lists[0];\nfor (var i = 1; i < lists length; i++) {\nresult = merge(result, lists[i]);\n}\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\stream-merge.md",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "37a726ea7452249e347b2c93c7987a84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-digits-of-an-integer.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc803f\ntitle: Sum digits of an integer\nchallengeType: 1\nforumTopicId: 302331\ndashedName: sum-digits-of-an-integer\n--description--\nWrite a function that takes a string as a parameter. This string represents a number that can be in any base (less than 37) and return the sum of its digits.\n110 sums to 1\n123410 sums to 10\nfe16 sums to 29\nf0e16 sums to 29\n--hints--\nsumDigits should be a function.\njs\nassert(typeof sumDigits == 'function');\nsumDigits(\"1\") should return a number.\njs\nassert(typeof sumDigits('1') == 'number');\nsumDigits(\"1\") should return 1.\njs\nassert.equal(sumDigits('1'), 1);\nsumDigits(\"12345\") should return 15.\njs\nassert.equal(sumDigits('12345'), 15);\nsumDigits(\"254\") should return 11.\njs\nassert.equal(sumDigits('254'), 11);\nsumDigits(\"fe\") should return 29.\njs\nassert.equal(sumDigits('fe'), 29);\nsumDigits(\"f0e\") should return 29.\njs\nassert.equal(sumDigits('f0e'), 29);\nsumDigits(\"999ABCXYZ\") should return 162.\njs\nassert.equal(sumDigits('999ABCXYZ'), 162);\n--seed--\n--seed-contents--\n```js\nfunction sumDigits(n) {\n}\n```\n--solutions--\njs\nfunction sumDigits(n) {\nn += '';\nfor (var s = 0, i = 0, e = n.length; i < e; i += 1)\ns += parseInt(n.charAt(i), 36);\nreturn s;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1509,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-digits-of-an-integer.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "116053615b7c5d0d11e89b9ab3bf9682",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-multiples-of-3-and-5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8040\ntitle: Sum multiples of 3 and 5\nchallengeType: 1\nforumTopicId: 302332\ndashedName: sum-multiples-of-3-and-5\n--description--\nThe objective is to write a function that finds the sum of all positive multiples of 3 or 5 below n.\n--hints--\nsumMults should be a function.\njs\nassert(typeof sumMults == 'function');\nsumMults(10) should return a number.\njs\nassert(typeof sumMults(10) == 'number');\nsumMults(10) should return 23.\njs\nassert.equal(sumMults(10), 23);\nsumMults(100) should return 2318.\njs\nassert.equal(sumMults(100), 2318);\nsumMults(1000) should return 233168.\njs\nassert.equal(sumMults(1000), 233168);\nsumMults(10000) should return 23331668.\njs\nassert.equal(sumMults(10000), 23331668);\nsumMults(100000) should return 2333316668.\njs\nassert.equal(sumMults(100000), 2333316668);\n--seed--\n--seed-contents--\n```js\nfunction sumMults(n) {\n}\n```\n--solutions--\njs\nfunction sumMults(n) {\nvar sum = 0;\nfor (var i = 1; i < n; i++) {\nif (i % 3 == 0 || i % 5 == 0) sum += i;\n}\nreturn sum;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-multiples-of-3-and-5.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "25d26fd61916776148a1f3b84df00006",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-of-a-series.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8041\ntitle: Sum of a series\nchallengeType: 1\nforumTopicId: 302333\ndashedName: sum-of-a-series\n--description--\nCompute the nth term of a series, i.e. the sum of the n first terms of the corresponding sequence. Informally this value, or its limit when n tends to infinity, is also called the sum of the series, thus the title of this task. For this task, use: $S_n = \\displaystyle\\sum_{k=1}^n \\frac{1}{k^2}$.\n--instructions--\nWrite a function that take $a$ and $b$ as parameters and returns the sum of $a^{th}$ to $b^{th}$ members of the sequence.\n--hints--\nsum should be a function.\njs\nassert(typeof sum == 'function');\nsum(1, 100) should return a number.\njs\nassert(typeof sum(1, 100) == 'number');\nsum(1, 100) should return 1.6349839001848923.\njs\nassert.equal(sum(1, 100), 1.6349839001848923);\nsum(33, 46) should return 0.009262256361481223.\njs\nassert.equal(sum(33, 46), 0.009262256361481223);\nsum(21, 213) should return 0.044086990748706555.\njs\nassert.equal(sum(21, 213), 0.044086990748706555);\nsum(11, 111) should return 0.08619778593108679.\njs\nassert.equal(sum(11, 111), 0.08619778593108679);\nsum(1, 10) should return 1.5497677311665408.\njs\nassert.equal(sum(1, 10), 1.5497677311665408);\n--seed--\n--seed-contents--\n```js\nfunction sum(a, b) {\n}\n```\n--solutions--\njs\nfunction sum(a, b) {\nfunction fn(x) {\nreturn 1 / (x * x);\n}\nvar s = 0;\nfor (; a <= b; a++) s += fn(a);\nreturn s;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1589,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-of-a-series.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b2983648d42fe48501a9e183e222f855",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-of-squares.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8042\ntitle: Sum of squares\nchallengeType: 1\nforumTopicId: 302334\ndashedName: sum-of-squares\n--description--\nWrite a function to find the sum of squares of an array of integers.\n--hints--\nsumsq should be a function.\njs\nassert(typeof sumsq == 'function');\nsumsq([1, 2, 3, 4, 5]) should return a number.\njs\nassert(typeof sumsq([1, 2, 3, 4, 5]) == 'number');\nsumsq([1, 2, 3, 4, 5]) should return 55.\njs\nassert.equal(sumsq([1, 2, 3, 4, 5]), 55);\nsumsq([25, 32, 12, 7, 20]) should return 2242.\njs\nassert.equal(sumsq([25, 32, 12, 7, 20]), 2242);\nsumsq([38, 45, 35, 8, 13]) should return 4927.\njs\nassert.equal(sumsq([38, 45, 35, 8, 13]), 4927);\nsumsq([43, 36, 20, 34, 24]) should return 5277.\njs\nassert.equal(sumsq([43, 36, 20, 34, 24]), 5277);\nsumsq([12, 33, 26, 18, 1, 16, 3]) should return 2499.\njs\nassert.equal(sumsq([12, 33, 26, 18, 1, 16, 3]), 2499);\n--seed--\n--seed-contents--\n```js\nfunction sumsq(array) {\n}\n```\n--solutions--\n```js\nfunction sumsq(array) {\nvar sum = 0;\nvar i, iLen;\nfor (i = 0, iLen = array.length; i < iLen; i++) {\nsum += array[i] * array[i];\n}\nreturn sum;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-of-squares.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e5dab93da0849d7c4c1ad6ad48c6aa7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8029\ntitle: Straddling checkerboard\nchallengeType: 1\nforumTopicId: 302325\ndashedName: straddling-checkerboard\n--description--\nImplement functions to encrypt and decrypt a message using the straddling checkerboard method Each function will take two arguments, a message string and an alphabet array The alphabet array will contain 3 strings representing the 3 rows of the straddling checkerboard The output of the straddle() function should be a series of decimal digits Numbers should be encrypted by inserting the escape character before each digit, then including the digit unencrypted This should be reversed for decryption with the unstraddle() function --hints--\nstraddle should be a function js\nassert(typeof straddle == 'function');\nstraddle(\"One night-it was on the twentieth of March, 1888-I was returning \",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js\nassert(\ntypeof straddle(\n'One night-it was on the twentieth of March, 1888-I was returning ',\n['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ /']\n) == 'string'\n);\nstraddle(\"One night-it was on the twentieth of March, 1888-I was returning \",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"34045747525284613427502840425027537379697175891898898898584619028294547488\" js\nassert equal(\nstraddle(\n'One night-it was on the twentieth of March, 1888-I was returning ',\n['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ /']\n),\n'34045747525284613427502840425027537379697175891898898898584619028294547488'\n);\nstraddle(\"One night-it was on the twentieth of March, 1888-I was returning\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ /\"]) should return \"139539363509369743061399059745399365901344308320791798798798367430685972839363935\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 21
  },
  {
    "id": "a638d71e0419434ce26f3d06d45b13a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "was returning ', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ /'] ) == 'string' ); straddle(\"One night-it was on the twentieth of March, 1888-I was returning \",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"34045747525284613427502840425027537379697175891898898898584619028294547488\" js assert equal( straddle( 'One night-it was on the twentieth of March, 1888-I was returning ', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ /'] ), '34045747525284613427502840425027537379697175891898898898584619028294547488' ); straddle(\"One night-it was on the twentieth of March, 1888-I was returning\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ /\"]) should return \"139539363509369743061399059745399365901344308320791798798798367430685972839363935\" js assertequal(\nstraddle('One night-it was on the twentieth of March, 1888-I was returning', [\n'HOL MES RT',\n'ABCDFGIJKN',\n'PQUVWXYZ /'\n]),\n'139539363509369743061399059745399365901344308320791798798798367430685972839363935'\n);\nstraddle(\"Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour \",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ \"]) should return \"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\" js\nassert equal(\nstraddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [\n'ET AON RIS',\n'BCDFGHJKLM',\n'PQ/UVWXYZ '\n]),\n'125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769'\n);\nunstraddle should be a function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 21
  },
  {
    "id": "3c9832e1ff6f62874db77673cc513ec6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'34045747525284613427502840425027537379697175891898898898584619028294547488' ); straddle(\"One night-it was on the twentieth of March, 1888-I was returning\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ /\"]) should return \"139539363509369743061399059745399365901344308320791798798798367430685972839363935\" js assertequal( straddle('One night-it was on the twentieth of March, 1888-I was returning', [ 'HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ /' ]), '139539363509369743061399059745399365901344308320791798798798367430685972839363935' ); straddle(\"Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour \",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ \"]) should return \"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\" js assert equal( straddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [ 'ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs\nassert(typeof unstraddle == 'function');\nunstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js\nassert(\ntypeof unstraddle(\n'34045747525284613427502840425027537379697175891898898898584619028294547488',\n['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 21
  },
  {
    "id": "34b493fa0ecc835ccc6823bacef18790",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assertequal( straddle('One night-it was on the twentieth of March, 1888-I was returning', [ 'HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ /' ]), '139539363509369743061399059745399365901344308320791798798798367430685972839363935' ); straddle(\"Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour \",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ \"]) should return \"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\" js assert equal( straddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [ 'ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/']\n) == 'string'\n);\nunstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 3,
    "total_chunks": 21
  },
  {
    "id": "a3cb32f77eb5de483885e4ee4c031410",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "RT', 'ABCDFGIJKN', 'PQUVWXYZ /' ]), '139539363509369743061399059745399365901344308320791798798798367430685972839363935' ); straddle(\"Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour \",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ \"]) should return \"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\" js assert equal( straddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [ 'ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal(\nunstraddle(\n'34045747525284613427502840425027537379697175891898898898584619028294547488',\n['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 4,
    "total_chunks": 21
  },
  {
    "id": "a254f1362ab1dc0e33d1ac0c2fa16f6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "); straddle(\"Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour \",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ \"]) should return \"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\" js assert equal( straddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [ 'ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/']\n),\n'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 5,
    "total_chunks": 21
  },
  {
    "id": "645075d5a472268afc3e1332c869f85b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "25cupsofflour \",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ \"]) should return \"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\" js assert equal( straddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [ 'ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING'\n);\nunstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 6,
    "total_chunks": 21
  },
  {
    "id": "5a6221be6718bb8794900a7462f4db3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"]) should return \"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\" js assert equal( straddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [ 'ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 7,
    "total_chunks": 21
  },
  {
    "id": "6c903b127c7cd5c22356c1d01397f526",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert equal( straddle('Thecheckerboardcakerecipespecifies3largeeggsand2 25cupsofflour ', [ 'ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal(\nunstraddle(\n'139539363509369743061399059745399365901344308320791798798798367430685972839363935',\n['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 8,
    "total_chunks": 21
  },
  {
    "id": "eda457cb513d805021dd82c6928efb3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ ' ]), '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769' ); unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/']\n),\n'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING'\n);\nunstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 9,
    "total_chunks": 21
  },
  {
    "id": "e389cd4cb560e12dd9735f26086d8428",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "unstraddle should be a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 523,
    "chunk_index": 10,
    "total_chunks": 21
  },
  {
    "id": "0a4b5063488ee451a92625f03b296ddd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 523,
    "chunk_index": 11,
    "total_chunks": 21
  },
  {
    "id": "62f9a39ae9a487a6af1f43bef1d17850",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 524,
    "chunk_index": 12,
    "total_chunks": 21
  },
  {
    "id": "ab13bad080391134344e8daa11dc1d0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 527,
    "chunk_index": 13,
    "total_chunks": 21
  },
  {
    "id": "c3bbe0a3995e379bd2548d7d13fc9762",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "functionjs assert(typeof unstraddle == 'function'); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"js assertequal(\nunstraddle(\n'125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769',\n['ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 585,
    "chunk_index": 14,
    "total_chunks": 21
  },
  {
    "id": "c0687467d4a406ff1f0690c2f77742ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"js assertequal( unstraddle( '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769', ['ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ']\n),\n'THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 561,
    "chunk_index": 15,
    "total_chunks": 21
  },
  {
    "id": "eb97c08edd5167b716a83a90f283b7cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "/\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"js assertequal( unstraddle( '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769', ['ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ'] ), 'THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 16,
    "total_chunks": 21
  },
  {
    "id": "ed5d275dd644a763c1b7f53846bedf68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "/\"]) should return a string js assert( typeof unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ) == 'string' ); unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA R\", \"BCDFGHJKLM\", \"PQUVWXYZ /\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING \" js assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"js assertequal( unstraddle( '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769', ['ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ'] ), 'THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR'\n);\n--seed--\n--seed-contents--\n```js\nfunction straddle(message, alphabet) {\n}\nfunction unstraddle(message, alphabet) {\n}\n```\n--solutions--\n```js\nfunction straddle(message, alphabet) {\nvar prefixes = new Array(\n'',\nalphabet[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 17,
    "total_chunks": 21
  },
  {
    "id": "a6b95b3654b09130543a40288beee4ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assertequal( unstraddle( '34045747525284613427502840425027537379697175891898898898584619028294547488', ['ESTONIA R', 'BCDFGHJKLM', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ/\"]) should return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"js assertequal( unstraddle( '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769', ['ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ'] ), 'THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR' ); --seed-- --seed-contents-- ```js function straddle(message, alphabet) { } function unstraddle(message, alphabet) { } ``` --solutions-- ```js function straddle(message, alphabet) { var prefixes = new Array( '', alphabet[0]indexOf(' '),\nalphabet[0] lastIndexOf(' ')\n);\nvar out = '';\nmessage = message toUpperCase();\nmessage = message",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 18,
    "total_chunks": 21
  },
  {
    "id": "9705b9e90d9346850d13c517760352b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return \"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\" js assertequal( unstraddle( '139539363509369743061399059745399365901344308320791798798798367430685972839363935', ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ/'] ), 'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING' ); unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ\"]) should return \"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR\"js assertequal( unstraddle( '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769', ['ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ'] ), 'THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND225CUPSOFFLOUR' ); --seed-- --seed-contents-- ```js function straddle(message, alphabet) { } function unstraddle(message, alphabet) { } ``` --solutions-- ```js function straddle(message, alphabet) { var prefixes = new Array( '', alphabet[0]indexOf(' '), alphabet[0] lastIndexOf(' ') ); var out = ''; message = message toUpperCase(); message = messagereplace(/([0-9])/g, '/$1'); // dumb way to escape numbers\nfor (var i = 0; i < message length; i++) {\nvar chr = message[i];\nif (chr == ' ') continue;\nfor (var j = 0; j < 3; j++) {\nvar k = alphabet[j] indexOf(chr);\nif (k < 0) continue;\nout += prefixes[j] toString() + k;\n}\nif (chr == '/') out += message[++i];\n}\nreturn out;\n}\nfunction unstraddle(message, alphabet) {\nvar prefixes = new Array(\n'',\nalphabet[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 19,
    "total_chunks": 21
  },
  {
    "id": "2c637ba86db338b4556d3aca6e4d1c5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "// dumb way to escape numbers for (var i = 0; i < message length; i++) { var chr = message[i]; if (chr == ' ') continue; for (var j = 0; j < 3; j++) { var k = alphabet[j] indexOf(chr); if (k < 0) continue; out += prefixes[j] toString() + k; } if (chr == '/') out += message[++i]; } return out; } function unstraddle(message, alphabet) { var prefixes = new Array( '', alphabet[0]indexOf(' '),\nalphabet[0] lastIndexOf(' ')\n);\nvar out = '';\nvar n, o;\nfor (var i = 0; i < message length; i++) {\nn = message[i] * 1;\nswitch (n) {\ncase prefixes[1]:\no = alphabet[1][message[++i]];\nbreak;\ncase prefixes[2]:\no = alphabet[2][message[++i]];\nbreak;\ndefault:\no = alphabet[0][n];\n}\no == '/' (out += message[++i]) : (out += o);\n}\nreturn out;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\straddling-checkerboard.md",
      "source_type": "git_repo"
    },
    "token_count": 236,
    "chunk_index": 20,
    "total_chunks": 21
  },
  {
    "id": "ed18acac9c7e52e6fc6874b520d04472",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8043\ntitle: Sum to 100\nchallengeType: 1\nforumTopicId: 302335\ndashedName: sum-to-100\n--description--\nFind solutions to the sum to one hundred puzzle Add (insert) the mathematical operators + or ─ (plus or minus) before any of the digits in the decimal numeric string 123456789 such that the resulting mathematical expression adds up to a particular sum (in this iconic case, 100) Example:\n123 + 4 - 5 + 67 - 89   =   100\n--instructions--\nWrite a function that takes a number as parameter The function should return an array containing all solutions for the given number The solutions should be strings representing the expressions For example: \"1+23-456+78-9\" Sort the array before returning it --hints--\nsumTo100 should be a function js\nassert(typeof sumTo100 == 'function');\nsumTo100(199) should return an array js\nassert(Array isArray(sumTo100(199)));\nsumTo100(199) should return [\"-1+2-3+45+67+89\", \"123-4+5+6+78-9\", \"123-4+56+7+8+9\"] js\nassert deepEqual(sumTo100(199), [\n'-1+2-3+45+67+89',\n'123-4+5+6+78-9',\n'123-4+56+7+8+9'\n]);\nsumTo100(209) should return [\"1+234+56+7-89\"] js\nassert deepEqual(sumTo100(209), ['1+234+56+7-89']);\nsumTo100(243) should return [\"-1-234+567-89\", \"-12+345+6-7-89\", \"123+45+6+78-9\"] js\nassert deepEqual(sumTo100(243), [\n'-1-234+567-89',\n'-12+345+6-7-89',\n'123+45+6+78-9'\n]);\nsumTo100(197) should return [\"1-2-3+45+67+89\", \"12+34-5+67+89\", \"123+4-5+6+78-9\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "5abf8b80558273b13a9937772deeb097",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "strings representing the expressions For example: \"1+23-456+78-9\" Sort the array before returning it --hints-- sumTo100 should be a function js assert(typeof sumTo100 == 'function'); sumTo100(199) should return an array js assert(Array isArray(sumTo100(199))); sumTo100(199) should return [\"-1+2-3+45+67+89\", \"123-4+5+6+78-9\", \"123-4+56+7+8+9\"] js assert deepEqual(sumTo100(199), [ '-1+2-3+45+67+89', '123-4+5+6+78-9', '123-4+56+7+8+9' ]); sumTo100(209) should return [\"1+234+56+7-89\"] js assert deepEqual(sumTo100(209), ['1+234+56+7-89']); sumTo100(243) should return [\"-1-234+567-89\", \"-12+345+6-7-89\", \"123+45+6+78-9\"] js assert deepEqual(sumTo100(243), [ '-1-234+567-89', '-12+345+6-7-89', '123+45+6+78-9' ]); sumTo100(197) should return [\"1-2-3+45+67+89\", \"12+34-5+67+89\", \"123+4-5+6+78-9\"] js assertdeepEqual(sumTo100(197), [\n'1-2-3+45+67+89',\n'12+34-5+67+89',\n'123+4-5+6+78-9'\n]);\n--seed--\n--seed-contents--\n```js\nfunction sumTo100(n) {\n}\n```\n--solutions--\n```js\nfunction sumTo100(n) {\nvar permutationsWithRepetition = function(n, as) {\nreturn as length > 0 foldl1(curry(cartesianProduct)(as), replicate(n, as))\n: [];\n};\nvar cartesianProduct = function(xs, ys) {\nreturn [] concat apply(\n[],\nxs map(function(x) {\nreturn [] concat apply(\n[],\nys map(function(y) {\nreturn [[x]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8234163eb7c16c726b9bd6a0325361e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"123+45+6+78-9\"] js assert deepEqual(sumTo100(243), [ '-1-234+567-89', '-12+345+6-7-89', '123+45+6+78-9' ]); sumTo100(197) should return [\"1-2-3+45+67+89\", \"12+34-5+67+89\", \"123+4-5+6+78-9\"] js assertdeepEqual(sumTo100(197), [ '1-2-3+45+67+89', '12+34-5+67+89', '123+4-5+6+78-9' ]); --seed-- --seed-contents-- ```js function sumTo100(n) { } ``` --solutions-- ```js function sumTo100(n) { var permutationsWithRepetition = function(n, as) { return as length > 0 foldl1(curry(cartesianProduct)(as), replicate(n, as)) : []; }; var cartesianProduct = function(xs, ys) { return [] concat apply( [], xs map(function(x) { return [] concat apply( [], ys map(function(y) { return [[x]concat(y)];\n})\n);\n})\n);\n};\nvar curry = function(f) {\nreturn function(a) {\nreturn function(b) {\nreturn f(a, b);\n};\n};\n};\nvar flip = function(f) {\nreturn function(a, b) {\nreturn f apply(null, [b, a]);\n};\n};\nvar foldl1 = function(f, xs) {\nreturn xs length > 0 xs slice(1) reduce(f, xs[0]) : [];\n};\nvar replicate = function(n, a) {\nvar v = [a],\no = [];\nif (n < 1) return o;\nwhile (n > 1) {\nif (n & 1) o = o concat(v);\nn >>= 1;\nv = v concat(v);\n}\nreturn o concat(v);\n};\nvar asSum = function(xs) {\nvar dct = xs reduceRight(\nfunction(a, sign, i) {\nvar d = i + 1; //  zero-based index to [1-9] positions\nif (sign == 0) {\n// Sum increased, digits cleared\nreturn {\ndigits: [],\nn: a n + sign * parseInt([d] concat(a digits)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "a30c020255452a97efc4dc44cabf751c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return o; while (n > 1) { if (n & 1) o = o concat(v); n >>= 1; v = v concat(v); } return o concat(v); }; var asSum = function(xs) { var dct = xs reduceRight( function(a, sign, i) { var d = i + 1; // zero-based index to [1-9] positions if (sign == 0) { // Sum increased, digits cleared return { digits: [], n: a n + sign * parseInt([d] concat(a digits)join(''), 10)\n};\n} else\nreturn {\n// Digits extended, sum unchanged\ndigits: [d] concat(a digits),\nn: a n\n};\n},\n{\ndigits: [],\nn: 0\n}\n);\nreturn (\ndct n + (dct digits length > 0 parseInt(dct digits join(''), 10) : 0)\n);\n};\nvar asString = function(xs) {\nvar ns = xs reduce(function(a, sign, i) {\nvar d = (i + 1) toString();\nreturn sign === 0 a + d : a + (sign > 0 '+' : '-') + d;\n}, '');\nreturn ns[0] === '+' tail(ns) : ns;\n};\nvar universe = permutationsWithRepetition(9, [0, 1, -1]) filter(function(x) {\nreturn x[0] == 1 && asSum(x) === n;\n}) map(asString);\nreturn universe sort();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sum-to-100.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "68c84a9dc3bb41be5ee1357457e5c07f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\symmetric-difference.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8046\ntitle: Symmetric difference\nchallengeType: 1\nforumTopicId: 16086\ndashedName: symmetric-difference\n--description--\nGiven two sets A and B, compute $(A \\setminus B) \\cup (B \\setminus A) $ That is, enumerate the items that are in A or B but not both This set is called the symmetric difference of A and B In other words: $(A \\cup B) \\setminus (A \\cap B)$ (the set of items that are in at least one of A or B minus the set of items that are in both A and B) Example:\nFor sets A = [1, 2, 3], and B = [1, 3, 4], the symmetric difference of A and B is [2, 4] --instructions--\nWrite a function that takes two arrays as parameters and returns the symmetric difference Sort the resultant array before returning it --hints--\nsymmetricDifference should be a function js\nassert(typeof symmetricDifference == 'function');\nsymmetricDifference([\"John\", \"Bob\", \"Mary\", \"Serena\"], [\"Jim\", \"Mary\", \"John\", \"Bob\"]) should return an array js\nassert(\nArray isArray(\nsymmetricDifference(\n['John', 'Bob', 'Mary', 'Serena'],\n['Jim', 'Mary', 'John', 'Bob']\n)\n)\n);\nsymmetricDifference([\"John\", \"Bob\", \"Mary\", \"Serena\"], [\"Jim\", \"Mary\", \"John\", \"Bob\"]) should return [\"Jim\", \"Serena\"] js\nassert deepEqual(\nsymmetricDifference(\n['John', 'Bob', 'Mary', 'Serena'],\n['Jim', 'Mary', 'John', 'Bob']\n),\n['Jim', 'Serena']\n);\nsymmetricDifference([1, 2, 3], [3, 4]) should return [1, 2, 4] js\nassert deepEqual(symmetricDifference([1, 2, 3], [3, 4]), [1, 2, 4]);\nsymmetricDifference([1, 2, 3, 4, 5], [3, 4, 8, 7]) should return [1, 2, 5, 7, 8] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2765,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\symmetric-difference.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "15ffc36285719b96a499d4c4400be492",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\symmetric-difference.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Bob', 'Mary', 'Serena'], ['Jim', 'Mary', 'John', 'Bob'] ) ) ); symmetricDifference([\"John\", \"Bob\", \"Mary\", \"Serena\"], [\"Jim\", \"Mary\", \"John\", \"Bob\"]) should return [\"Jim\", \"Serena\"] js assert deepEqual( symmetricDifference( ['John', 'Bob', 'Mary', 'Serena'], ['Jim', 'Mary', 'John', 'Bob'] ), ['Jim', 'Serena'] ); symmetricDifference([1, 2, 3], [3, 4]) should return [1, 2, 4] js assert deepEqual(symmetricDifference([1, 2, 3], [3, 4]), [1, 2, 4]); symmetricDifference([1, 2, 3, 4, 5], [3, 4, 8, 7]) should return [1, 2, 5, 7, 8] js assertdeepEqual(symmetricDifference([1, 2, 3, 4, 5], [3, 4, 8, 7]), [\n1,\n2,\n5,\n7,\n8\n]);\nsymmetricDifference([1, 2, 3, 4, 5, 6, 7, 8], [1, 3, 5, 6, 7, 8, 9]) should return [2, 4, 9] js\nassert deepEqual(\nsymmetricDifference([1, 2, 3, 4, 5, 6, 7, 8], [1, 3, 5, 6, 7, 8, 9]),\n[2, 4, 9]\n);\nsymmetricDifference([1, 2, 4, 7, 9], [2, 3, 7, 8, 9]) should return [1, 3, 4, 8] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2765,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\symmetric-difference.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1d58d2b498f8b2c75b162cfdf81efebe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\symmetric-difference.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assertdeepEqual(symmetricDifference([1, 2, 3, 4, 5], [3, 4, 8, 7]), [ 1, 2, 5, 7, 8 ]); symmetricDifference([1, 2, 3, 4, 5, 6, 7, 8], [1, 3, 5, 6, 7, 8, 9]) should return [2, 4, 9] js assert deepEqual( symmetricDifference([1, 2, 3, 4, 5, 6, 7, 8], [1, 3, 5, 6, 7, 8, 9]), [2, 4, 9] ); symmetricDifference([1, 2, 4, 7, 9], [2, 3, 7, 8, 9]) should return [1, 3, 4, 8] js assertdeepEqual(symmetricDifference([1, 2, 4, 7, 9], [2, 3, 7, 8, 9]), [\n1,\n3,\n4,\n8\n]);\n--seed--\n--seed-contents--\n```js\nfunction symmetricDifference(A, B) {\n}\n```\n--solutions--\n```js\nfunction symmetricDifference(A, B) {\nfunction relative_complement(A, B) {\nreturn A filter(function(elem) {\nreturn B indexOf(elem) == -1;\n});\n}\nfunction unique(ary) {\nvar u = ary concat() sort();\nfor (var i = 1; i < u length; ) {\nif (u[i - 1] === u[i]) u splice(i, 1);\nelse i++;\n}\nreturn u;\n}\nreturn unique(\nrelative_complement(A, B) concat(relative_complement(B, A))\n) sort();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2765,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\symmetric-difference.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "74633c35dbb6f23ae330816a4fefa33b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\taxicab-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594ecc0d9a8cf816e3340187\ntitle: Taxicab numbers\nchallengeType: 1\nforumTopicId: 302337\ndashedName: taxicab-numbers\n--description--\nA taxicab number (the definition that is being used here) is a positive integer that can be expressed as the sum of two positive cubes in more than one way The first taxicab number is 1729, which is:\n13 + 123 and\n93 + 103 Taxicab numbers are also known as:\ntaxi numbers\ntaxi-cab numbers\ntaxi cab numbers\nHardy-Ramanujan numbers\n--instructions--\nWrite a function that returns the lowest n taxicab numbers For each of the taxicab numbers, show the number as well as its constituent cubes --hints--\ntaxicabNumbers should be a function js\nassert(typeof taxicabNumbers === 'function');\ntaxicabNumbers should return an array js\nassert(typeof taxicabNumbers(2) === 'object');\ntaxicabNumbers should return an array of numbers js\nassert(typeof taxicabNumbers(100)[0] === 'number');\ntaxicabNumbers(4) should return [1729, 4104, 13832, 20683] js\nassert deepEqual(taxicabNumbers(4), res4);\ntaxicabNumbers(25) should return [1729, 4104, 13832, 20683, 32832, 39312, 40033, 46683, 64232, 65728, 110656, 110808, 134379, 149389, 165464, 171288, 195841, 216027, 216125, 262656, 314496, 320264, 327763, 373464, 402597]\njs\nassert deepEqual(taxicabNumbers(25), res25);\ntaxicabNumbers(39) resulting numbers from 20 - 29 should be [314496,320264,327763,373464,402597,439101,443889,513000,513856] js\nassert deepEqual(taxicabNumbers(39)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\taxicab-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ad2dae1d163d66e44bef9691b8bea928",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\taxicab-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return an array js assert(typeof taxicabNumbers(2) === 'object'); taxicabNumbers should return an array of numbers js assert(typeof taxicabNumbers(100)[0] === 'number'); taxicabNumbers(4) should return [1729, 4104, 13832, 20683] js assert deepEqual(taxicabNumbers(4), res4); taxicabNumbers(25) should return [1729, 4104, 13832, 20683, 32832, 39312, 40033, 46683, 64232, 65728, 110656, 110808, 134379, 149389, 165464, 171288, 195841, 216027, 216125, 262656, 314496, 320264, 327763, 373464, 402597] js assert deepEqual(taxicabNumbers(25), res25); taxicabNumbers(39) resulting numbers from 20 - 29 should be [314496,320264,327763,373464,402597,439101,443889,513000,513856] js assert deepEqual(taxicabNumbers(39)slice(20, 29), res39From20To29);\n--seed--\n--after-user-code--\n```js\nconst res4 = [1729, 4104, 13832, 20683];\nconst res25 = [\n1729, 4104, 13832, 20683, 32832, 39312, 40033, 46683, 64232, 65728, 110656,\n110808, 134379, 149389, 165464, 171288, 195841, 216027, 216125, 262656, 314496, 320264, 327763,\n373464, 402597\n];\nconst res39From20To29 = [314496, 320264, 327763, 373464, 402597, 439101, 443889, 513000, 513856];\n```\n--seed-contents--\n```js\nfunction taxicabNumbers(n) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction taxicabNumbers(nNumbers) {\nconst cubeN = [];\nconst s3s = {};\nconst e = 100;\nfor (let n = 1; n < e; n += 1) {\ncubeN[n] = n * n * n;\n}\nfor (let a = 1; a < e - 1; a += 1) {\nconst a3 = cubeN[a];\nfor (let b = a; b < e; b += 1) {\nconst b3 = cubeN[b];\nconst s3 = a3 + b3;\nlet abs = s3s[s3];\nif (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\taxicab-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "bbb42b87164e7aa917864d23983fc3bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\taxicab-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= []; const s3s = {}; const e = 100; for (let n = 1; n < e; n += 1) { cubeN[n] = n * n * n; } for (let a = 1; a < e - 1; a += 1) { const a3 = cubeN[a]; for (let b = a; b < e; b += 1) { const b3 = cubeN[b]; const s3 = a3 + b3; let abs = s3s[s3]; if (abs) {\ns3s[s3] = abs = [];\n}\nabs push([a, b]);\n}\n}\nlet i = 0;\nconst res = [];\nObject keys(s3s) forEach(s3 => {\nconst abs = s3s[s3];\nif (abs length >= 2) { // No two cube pairs found\ni += 1;\nif (i <= nNumbers) {\nres push(s3);\n}\n}\n});\nreturn res map(item => parseInt(item, 10));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\taxicab-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f153a8e1628de2b216b425e14d2eb03b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc8045\ntitle: Sutherland-Hodgman polygon clipping\nchallengeType: 1\nforumTopicId: 302336\ndashedName: sutherland-hodgman-polygon-clipping\n--description--\nThe Sutherland-Hodgman clipping algorithm finds the polygon that is the intersection between an arbitrary polygon (the \"subject polygon\") and a convex polygon (the \"clip polygon\") It is used in computer graphics (especially 2D graphics) to reduce the complexity of a scene being displayed by eliminating parts of a polygon that do not need to be displayed Take the closed polygon defined by the points:\n[(50, 150), (200, 50), (350, 150), (350, 300), (250, 300), (200, 250), (150, 350), (100, 250), (100, 200)]\nand clip it by the rectangle defined by the points:\n[(100, 100), (300, 100), (300, 300), (100, 300)]\n--instructions--\nWrite a function that takes 2 arrays as parameters The first array contains the points of the subject polygon and the second array contains the points of the clipping polygon The function should return an array containing the points of the clipped polygon Each number should be rounded to 3 decimal places --hints--\nclip should be a function js\nassert(typeof clip == 'function');\nclip([[50, 150], [200, 50], [350, 150], [350, 300], [250, 300], [200, 250], [150, 350], [100, 250], [100, 200]], [[100, 100], [300, 100], [300, 300], [100, 300]]) should return an array js\nassert(\nArray",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "1f02aceb988cdaf5704e3332b3f03059",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the second array contains the points of the clipping polygon The function should return an array containing the points of the clipped polygon Each number should be rounded to 3 decimal places --hints-- clip should be a function js assert(typeof clip == 'function'); clip([[50, 150], [200, 50], [350, 150], [350, 300], [250, 300], [200, 250], [150, 350], [100, 250], [100, 200]], [[100, 100], [300, 100], [300, 300], [100, 300]]) should return an array js assert( ArrayisArray(\nclip(\n[\n[50, 150],\n[200, 50],\n[350, 150],\n[350, 300],\n[250, 300],\n[200, 250],\n[150, 350],\n[100, 250],\n[100, 200]\n],\n[\n[100, 100],\n[300, 100],\n[300, 300],\n[100, 300]\n]\n)\n)\n);\nclip([[50, 150], [200, 50], [350, 150], [350, 300], [250, 300], [200, 250], [150, 350], [100, 250], [100, 200]], [[100, 100], [300, 100], [300, 300], [100, 300]]) should return [[100, 116 667], [125, 100], [275, 100], [300, 116 667], [300, 300], [250, 300], [200, 250], [175, 300], [125, 300], [100, 250]] js\nassert deepEqual(\nclip(\n[\n[50, 150],\n[200, 50],\n[350, 150],\n[350, 300],\n[250, 300],\n[200, 250],\n[150, 350],\n[100, 250],\n[100, 200]\n],\n[\n[100, 100],\n[300, 100],\n[300, 300],\n[100, 300]\n]\n),\n[\n[100, 116 667],\n[125, 100],\n[275, 100],\n[300, 116",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "422ce6f133c277f53f2da384ba9b706c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "100], [300, 100], [300, 300], [100, 300]]) should return [[100, 116 667], [125, 100], [275, 100], [300, 116 667], [300, 300], [250, 300], [200, 250], [175, 300], [125, 300], [100, 250]] js assert deepEqual( clip( [ [50, 150], [200, 50], [350, 150], [350, 300], [250, 300], [200, 250], [150, 350], [100, 250], [100, 200] ], [ [100, 100], [300, 100], [300, 300], [100, 300] ] ), [ [100, 116 667], [125, 100], [275, 100], [300, 116667],\n[300, 300],\n[250, 300],\n[200, 250],\n[175, 300],\n[125, 300],\n[100, 250]\n]\n);\nclip([[150, 200], [400, 450], [30, 50]], [[10, 10], [300, 200], [400, 600], [100, 300]]) should return [[150, 200], [350, 400], [348 611, 394 444], [30, 50]] js\nassert deepEqual(\nclip(\n[\n[150, 200],\n[400, 450],\n[30, 50]\n],\n[\n[10, 10],\n[300, 200],\n[400, 600],\n[100, 300]\n]\n),\n[\n[150, 200],\n[350, 400],\n[348 611, 394 444],\n[30, 50]\n]\n);\nclip([[250, 200], [100, 450], [130, 250]], [[50, 60], [100, 230], [400, 600], [100, 300]]) should return [[129 167, 329 167], [119 565, 319 565], [121 854, 304 305]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "7f4ed86e21de7201882dc92454f59a05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[[150, 200], [350, 400], [348 611, 394 444], [30, 50]] js assert deepEqual( clip( [ [150, 200], [400, 450], [30, 50] ], [ [10, 10], [300, 200], [400, 600], [100, 300] ] ), [ [150, 200], [350, 400], [348 611, 394 444], [30, 50] ] ); clip([[250, 200], [100, 450], [130, 250]], [[50, 60], [100, 230], [400, 600], [100, 300]]) should return [[129 167, 329 167], [119 565, 319 565], [121 854, 304 305]] js assertdeepEqual(\nclip(\n[\n[250, 200],\n[100, 450],\n[130, 250]\n],\n[\n[50, 60],\n[100, 230],\n[400, 600],\n[100, 300]\n]\n),\n[\n[129 167, 329 167],\n[119 565, 319 565],\n[121 854, 304 305]\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction clip(subjectPolygon, clipPolygon) {\n}\n```\n--solutions--\njs\nfunction clip(subjectPolygon, clipPolygon) {\nvar cp1, cp2, s, e, i, j;\nvar inside = function(p) {\nreturn (\n(cp2[0] - cp1[0]) * (p[1] - cp1[1]) > (cp2[1] - cp1[1]) * (p[0] - cp1[0])\n);\n};\nvar intersection = function() {\nvar dc = [cp1[0] - cp2[0], cp1[1] - cp2[1]],\ndp = [s[0] - e[0], s[1] - e[1]],\nn1 = cp1[0] * cp2[1] - cp1[1] * cp2[0],\nn2 = s[0] * e[1] - s[1] * e[0],\nn3 = 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "74afd2ea767cdfe8bb0e997f74cd3607",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "clipPolygon) { var cp1, cp2, s, e, i, j; var inside = function(p) { return ( (cp2[0] - cp1[0]) * (p[1] - cp1[1]) > (cp2[1] - cp1[1]) * (p[0] - cp1[0]) ); }; var intersection = function() { var dc = [cp1[0] - cp2[0], cp1[1] - cp2[1]], dp = [s[0] - e[0], s[1] - e[1]], n1 = cp1[0] * cp2[1] - cp1[1] * cp2[0], n2 = s[0] * e[1] - s[1] * e[0], n3 = 10 / (dc[0] * dp[1] - dc[1] * dp[0]);\nreturn [(n1 * dp[0] - n2 * dc[0]) * n3, (n1 * dp[1] - n2 * dc[1]) * n3];\n};\nvar outputList = subjectPolygon;\ncp1 = clipPolygon[clipPolygon length - 1];\nfor (j in clipPolygon) {\nvar cp2 = clipPolygon[j];\nvar inputList = outputList;\noutputList = [];\ns = inputList[inputList length - 1]; //last on the input list\nfor (i in inputList) {\nvar e = inputList[i];\nif (inside(e)) {\nif ( inside(s)) {\noutputList push(intersection());\n}\noutputList push(e);\n} else if (inside(s)) {\noutputList push(intersection());\n}\ns = e;\n}\ncp1 = cp2;\n}\nreturn outputList map(e => e map(f => Math round(f * 1000) / 1000));\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sutherland-hodgman-polygon-clipping.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "418f027161ebac87053d36edbc3e59e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a23c84252665b21eecc803c\ntitle: Sudoku\nchallengeType: 1\nforumTopicId: 302329\ndashedName: sudoku\n--description--\nWrite a function to solve a partially filled-in normal 9x9 Sudoku grid and return the result The blank fields are represented by -1 --hints--\nsolveSudoku should be a function js\nassert(typeof solveSudoku == 'function');\nsolveSudoku([[8, 1, 9, -1, -1, 5, -1, -1, -1],[-1, -1, 2, -1, -1, -1, 7, 5, -1],[-1, 3, 7, 1, -1, 4, -1, 6, -1],[4, -1, -1, 5, 9, -1, 1, -1, -1],[7, -1, -1, 3, -1, 8, -1, -1, 2],[-1, -1, 3, -1, 6, 2, -1, -1, 7],[-1, 5, -1, 7, -1, 9, 2, 1, -1],[-1, 6, 4, -1, -1, -1, 9, -1, -1],[-1, -1, -1, 2, -1, -1, 4, 3, 8]]) should return an array js\nassert(\nArray",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "7c731cd82e9fd5e32e7302df2298c9e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "-1, 5, -1, -1, -1],[-1, -1, 2, -1, -1, -1, 7, 5, -1],[-1, 3, 7, 1, -1, 4, -1, 6, -1],[4, -1, -1, 5, 9, -1, 1, -1, -1],[7, -1, -1, 3, -1, 8, -1, -1, 2],[-1, -1, 3, -1, 6, 2, -1, -1, 7],[-1, 5, -1, 7, -1, 9, 2, 1, -1],[-1, 6, 4, -1, -1, -1, 9, -1, -1],[-1, -1, -1, 2, -1, -1, 4, 3, 8]]) should return an array js assert( ArrayisArray(\nsolveSudoku([\n[8, 1, 9, -1, -1, 5, -1, -1, -1],\n[-1, -1, 2, -1, -1, -1, 7, 5, -1],\n[-1, 3, 7, 1, -1, 4, -1, 6, -1],\n[4, -1, -1, 5, 9, -1, 1, -1, -1],\n[7, -1, -1, 3, -1, 8, -1, -1, 2],\n[-1, -1, 3, -1, 6, 2, -1, -1, 7],\n[-1, 5, -1, 7, -1, 9, 2, 1, -1],\n[-1, 6, 4, -1, -1, -1, 9, -1, -1],\n[-1, -1, -1, 2, -1, -1, 4, 3, 8]\n])\n)\n);\nsolveSudoku([[8, 1, 9, -1, -1, 5, -1, -1, -1],[-1, -1, 2, -1, -1, -1, 7, 5, -1],[-1, 3, 7, 1, -1, 4, -1, 6, -1],[4, -1, -1, 5, 9, -1, 1, -1, -1],[7, -1, -1, 3, -1, 8, -1, -1, 2],[-1, -1, 3, -1, 6, 2, -1, -1, 7],[-1, 5, -1, 7, -1, 9, 2, 1, -1],[-1, 6, 4, -1, -1, -1, 9, -1, -1],[-1, -1, -1, 2, -1, -1, 4, 3, 8]]) should return [[8, 1, 9, 6, 7, 5, 3, 2, 4],[6, 4, 2, 9, 8, 3, 7, 5, 1],[5, 3, 7, 1, 2, 4, 8, 6, 9],[4, 2, 6, 5, 9, 7, 1, 8, 3],[7, 9, 5, 3, 1, 8, 6, 4, 2],[1, 8, 3, 4, 6, 2, 5, 9, 7],[3, 5, 8, 7, 4, 9, 2, 1, 6],[2, 6, 4, 8, 3, 1, 9, 7, 5],[9, 7, 1, 2, 5, 6, 4, 3, 8]]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 958,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "644014bdea63e83b3ccd68dea8e00a2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "8]]) should return [[8, 1, 9, 6, 7, 5, 3, 2, 4],[6, 4, 2, 9, 8, 3, 7, 5, 1],[5, 3, 7, 1, 2, 4, 8, 6, 9],[4, 2, 6, 5, 9, 7, 1, 8, 3],[7, 9, 5, 3, 1, 8, 6, 4, 2],[1, 8, 3, 4, 6, 2, 5, 9, 7],[3, 5, 8, 7, 4, 9, 2, 1, 6],[2, 6, 4, 8, 3, 1, 9, 7, 5],[9, 7, 1, 2, 5, 6, 4, 3, 8]]js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "d17af8b4e14a2dfd837eb438a4162aee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return [[8, 1, 9, 6, 7, 5, 3, 2, 4],[6, 4, 2, 9, 8, 3, 7, 5, 1],[5, 3, 7, 1, 2, 4, 8, 6, 9],[4, 2, 6, 5, 9, 7, 1, 8, 3],[7, 9, 5, 3, 1, 8, 6, 4, 2],[1, 8, 3, 4, 6, 2, 5, 9, 7],[3, 5, 8, 7, 4, 9, 2, 1, 6],[2, 6, 4, 8, 3, 1, 9, 7, 5],[9, 7, 1, 2, 5, 6, 4, 3, 8]]js assertdeepEqual(\nsolveSudoku([\n[8, 1, 9, -1, -1, 5, -1, -1, -1],\n[-1, -1, 2, -1, -1, -1, 7, 5, -1],\n[-1, 3, 7, 1, -1, 4, -1, 6, -1],\n[4, -1, -1, 5, 9, -1, 1, -1, -1],\n[7, -1, -1, 3, -1, 8, -1, -1, 2],\n[-1, -1, 3, -1, 6, 2, -1, -1, 7],\n[-1, 5, -1, 7, -1, 9, 2, 1, -1],\n[-1, 6, 4, -1, -1, -1, 9, -1, -1],\n[-1, -1, -1, 2, -1, -1, 4, 3, 8]\n]),\n[\n[8, 1, 9, 6, 7, 5, 3, 2, 4],\n[6, 4, 2, 9, 8, 3, 7, 5, 1],\n[5, 3, 7, 1, 2, 4, 8, 6, 9],\n[4, 2, 6, 5, 9, 7, 1, 8, 3],\n[7, 9, 5, 3, 1, 8, 6, 4, 2],\n[1, 8, 3, 4, 6, 2, 5, 9, 7],\n[3, 5, 8, 7, 4, 9, 2, 1, 6],\n[2, 6, 4, 8, 3, 1, 9, 7, 5],\n[9, 7, 1, 2, 5, 6, 4, 3, 8]\n]\n);\nsolveSudoku([[5, 3, -1, -1, 2, 4, 7, -1, -1],[-1, -1, 2, -1, -1, -1, 8, -1, -1],[1, -1, -1, 7, -1, 3, 9, -1, 2],[-1, -1, 8, -1, 7, 2, -1, 4, 9],[-1, 2, -1, 9, 8, -1, -1, 7, -1],[7, 9, -1, -1, -1, -1, -1, 8, -1],[-1, -1, -1, -1, 3, -1, 5, -1, 6],[9, 6, -1, -1, 1, -1, 3, -1, -1],[-1, 5, -1, 6, 9, -1, -1, 1, -1]]) should return [[5, 3, 9, 8, 2, 4, 7, 6, 1],[6, 7, 2, 1, 5, 9, 8, 3, 4],[1, 8, 4, 7, 6, 3, 9, 5, 2],[3, 1, 8, 5, 7, 2, 6, 4, 9],[4, 2, 5, 9, 8, 6, 1, 7, 3],[7, 9, 6, 3, 4, 1, 2, 8, 5],[8, 4, 1, 2, 3, 7, 5, 9, 6],[9, 6, 7, 4, 1, 5, 3, 2, 8],[2, 5, 3, 6, 9, 8, 4, 1, 7]]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 1211,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "d6215b182ae3f3b9f11a34acee61d77e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "-1]]) should return [[5, 3, 9, 8, 2, 4, 7, 6, 1],[6, 7, 2, 1, 5, 9, 8, 3, 4],[1, 8, 4, 7, 6, 3, 9, 5, 2],[3, 1, 8, 5, 7, 2, 6, 4, 9],[4, 2, 5, 9, 8, 6, 1, 7, 3],[7, 9, 6, 3, 4, 1, 2, 8, 5],[8, 4, 1, 2, 3, 7, 5, 9, 6],[9, 6, 7, 4, 1, 5, 3, 2, 8],[2, 5, 3, 6, 9, 8, 4, 1, 7]]js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 243,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "b33d3d748b44e1184b90e67e2e6ca065",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return [[5, 3, 9, 8, 2, 4, 7, 6, 1],[6, 7, 2, 1, 5, 9, 8, 3, 4],[1, 8, 4, 7, 6, 3, 9, 5, 2],[3, 1, 8, 5, 7, 2, 6, 4, 9],[4, 2, 5, 9, 8, 6, 1, 7, 3],[7, 9, 6, 3, 4, 1, 2, 8, 5],[8, 4, 1, 2, 3, 7, 5, 9, 6],[9, 6, 7, 4, 1, 5, 3, 2, 8],[2, 5, 3, 6, 9, 8, 4, 1, 7]]js assertdeepEqual(\nsolveSudoku([\n[5, 3, -1, -1, 2, 4, 7, -1, -1],\n[-1, -1, 2, -1, -1, -1, 8, -1, -1],\n[1, -1, -1, 7, -1, 3, 9, -1, 2],\n[-1, -1, 8, -1, 7, 2, -1, 4, 9],\n[-1, 2, -1, 9, 8, -1, -1, 7, -1],\n[7, 9, -1, -1, -1, -1, -1, 8, -1],\n[-1, -1, -1, -1, 3, -1, 5, -1, 6],\n[9, 6, -1, -1, 1, -1, 3, -1, -1],\n[-1, 5, -1, 6, 9, -1, -1, 1, -1]\n]),\n[\n[5, 3, 9, 8, 2, 4, 7, 6, 1],\n[6, 7, 2, 1, 5, 9, 8, 3, 4],\n[1, 8, 4, 7, 6, 3, 9, 5, 2],\n[3, 1, 8, 5, 7, 2, 6, 4, 9],\n[4, 2, 5, 9, 8, 6, 1, 7, 3],\n[7, 9, 6, 3, 4, 1, 2, 8, 5],\n[8, 4, 1, 2, 3, 7, 5, 9, 6],\n[9, 6, 7, 4, 1, 5, 3, 2, 8],\n[2, 5, 3, 6, 9, 8, 4, 1, 7]\n]\n);\nsolveSudoku([[-1, -1, 3, -1, 2, -1, 6, -1, -1],[9, -1, -1, 3, -1, 5, -1, -1, 1],[-1, -1, 1, 8, -1, 6, 4, -1, -1],[-1, -1, 8, 1, -1, 2, 9, -1, -1],[7, -1, -1, -1, -1, -1, -1, -1, 8],[-1, -1, 6, 7, -1, 8, 2, -1, -1],[-1, -1, 2, 6, -1, 9, 5, -1, -1],[8, -1, -1, 2, -1, 3, -1, -1, 9],[-1, -1, 5, -1, 1, -1, 3, -1, -1]]) should return [[4, 8, 3, 9, 2, 1, 6, 5, 7],[9, 6, 7, 3, 4, 5, 8, 2, 1],[2, 5, 1, 8, 7, 6, 4, 9, 3],[5, 4, 8, 1, 3, 2, 9, 7, 6],[7, 2, 9, 5, 6, 4, 1, 3, 8],[1, 3, 6, 7, 9, 8, 2, 4, 5],[3, 7, 2, 6, 8, 9, 5, 1, 4],[8, 1, 4, 2, 5, 3, 7, 6, 9],[6, 9, 5, 4, 1, 7, 3, 8, 2]]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 1212,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "a920ff0bd42f242bf7cd0acb10208264",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "-1]]) should return [[4, 8, 3, 9, 2, 1, 6, 5, 7],[9, 6, 7, 3, 4, 5, 8, 2, 1],[2, 5, 1, 8, 7, 6, 4, 9, 3],[5, 4, 8, 1, 3, 2, 9, 7, 6],[7, 2, 9, 5, 6, 4, 1, 3, 8],[1, 3, 6, 7, 9, 8, 2, 4, 5],[3, 7, 2, 6, 8, 9, 5, 1, 4],[8, 1, 4, 2, 5, 3, 7, 6, 9],[6, 9, 5, 4, 1, 7, 3, 8, 2]]js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 243,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "4ebbde080a29481b54be5f1f4f037465",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return [[4, 8, 3, 9, 2, 1, 6, 5, 7],[9, 6, 7, 3, 4, 5, 8, 2, 1],[2, 5, 1, 8, 7, 6, 4, 9, 3],[5, 4, 8, 1, 3, 2, 9, 7, 6],[7, 2, 9, 5, 6, 4, 1, 3, 8],[1, 3, 6, 7, 9, 8, 2, 4, 5],[3, 7, 2, 6, 8, 9, 5, 1, 4],[8, 1, 4, 2, 5, 3, 7, 6, 9],[6, 9, 5, 4, 1, 7, 3, 8, 2]]js assertdeepEqual(\nsolveSudoku([\n[-1, -1, 3, -1, 2, -1, 6, -1, -1],\n[9, -1, -1, 3, -1, 5, -1, -1, 1],\n[-1, -1, 1, 8, -1, 6, 4, -1, -1],\n[-1, -1, 8, 1, -1, 2, 9, -1, -1],\n[7, -1, -1, -1, -1, -1, -1, -1, 8],\n[-1, -1, 6, 7, -1, 8, 2, -1, -1],\n[-1, -1, 2, 6, -1, 9, 5, -1, -1],\n[8, -1, -1, 2, -1, 3, -1, -1, 9],\n[-1, -1, 5, -1, 1, -1, 3, -1, -1]\n]),\n[\n[4, 8, 3, 9, 2, 1, 6, 5, 7],\n[9, 6, 7, 3, 4, 5, 8, 2, 1],\n[2, 5, 1, 8, 7, 6, 4, 9, 3],\n[5, 4, 8, 1, 3, 2, 9, 7, 6],\n[7, 2, 9, 5, 6, 4, 1, 3, 8],\n[1, 3, 6, 7, 9, 8, 2, 4, 5],\n[3, 7, 2, 6, 8, 9, 5, 1, 4],\n[8, 1, 4, 2, 5, 3, 7, 6, 9],\n[6, 9, 5, 4, 1, 7, 3, 8, 2]\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction solveSudoku(puzzle) {\n}\n```\n--solutions--\n```js\nfunction solveSudoku(puzzle) {\nvar solution;\nclass DoX {\nconstructor(V, H) {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 787,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "74bc6b1f0850619aa69ed6a48c2d7a0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "8, 1, 3, 2, 9, 7, 6], [7, 2, 9, 5, 6, 4, 1, 3, 8], [1, 3, 6, 7, 9, 8, 2, 4, 5], [3, 7, 2, 6, 8, 9, 5, 1, 4], [8, 1, 4, 2, 5, 3, 7, 6, 9], [6, 9, 5, 4, 1, 7, 3, 8, 2] ] ); --seed-- --seed-contents-- ```js function solveSudoku(puzzle) { } ``` --solutions-- ```js function solveSudoku(puzzle) { var solution; class DoX { constructor(V, H) { thisV = V;\nthis L = this;\nthis R = this;\nthis U = this;\nthis D = this;\nthis S = 1;\nthis H = H || this;\nH && (H S += 1);\n}\n}\nconst addRight = (e, n) => {\nn R = e R;\nn L = e;\ne R L = n;\nreturn (e R = n);\n};\nconst addBelow = (e, n) => {\nn D = e D;\nn U = e;\ne D U = n;\nreturn (e D = n);\n};\nconst search = function(h, s) {\nif (h R == h) {\nprintSol(s);\n} else {\nlet c = chooseColumn(h);\ncover(c);\nfor (let r = c D; r = c; r = r D) {\ns push(r);\nfor (let j = r R; r = j; j = j R) {\ncover(j H);\n}\nsearch(h, s);\nr = s pop();\nfor (let j = r R; j = r; j = j R) {\nuncover(j H);\n}\n}\nuncover(c);\n}\n};\nconst chooseColumn = h => {\nlet s = Number POSITIVE_INFINITY;\nlet c = h;\nfor (let j = h R; j = h; j = j R) {\nif (j S < s) {\nc = j;\ns = j",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "3a2d3b3b3381dbf7cfe6a77dc5df659f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "j = j R) { cover(j H); } search(h, s); r = s pop(); for (let j = r R; j = r; j = j R) { uncover(j H); } } uncover(c); } }; const chooseColumn = h => { let s = Number POSITIVE_INFINITY; let c = h; for (let j = h R; j = h; j = j R) { if (j S < s) { c = j; s = jS;\n}\n}\nreturn c;\n};\nconst cover = c => {\nc L R = c R;\nc R L = c L;\nfor (let i = c D; i = c; i = i D) {\nfor (let j = i R; j = i; j = j R) {\nj U D = j D;\nj D U = j U;\nj H S = j H S - 1;\n}\n}\n};\nconst uncover = c => {\nfor (let i = c U; i = c; i = i U) {\nfor (let j = i L; i = j; j = j L) {\nj H S = j H S + 1;\nj U D = j;\nj D U = j;\n}\n}\nc L R = c;\nc R L = c;\n};\nconst printSol = a => {\nsolution = a reduce((p, c) => {\nlet [i, v] = c V split(':');\np[i * 1] = v;\nreturn p;\n}, new Array(a length) fill(' '));\n};\nconst gridMeta = s => {\nconst g = s split('');\nconst cellCount = g length;\nconst tokenCount = Math sqrt(cellCount);\nconst N = Math sqrt(tokenCount);\nconst g2D = g map(e =>\nisNaN(e * 1) new Array(tokenCount) fill(1) map((_, i) => i + 1)\n: [e * 1]\n);\nreturn [cellCount, N, tokenCount, g2D];\n};\nconst indexesN = n => i => {\nlet c = Math floor(i / (n * n));\ni %= n * n;\nreturn [c, i, Math floor(c / n) * n + Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "cd913991712395cccbd20fecf2ba9245",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "cellCount = g length; const tokenCount = Math sqrt(cellCount); const N = Math sqrt(tokenCount); const g2D = g map(e => isNaN(e * 1) new Array(tokenCount) fill(1) map((_, i) => i + 1) : [e * 1] ); return [cellCount, N, tokenCount, g2D]; }; const indexesN = n => i => { let c = Math floor(i / (n * n)); i %= n * n; return [c, i, Math floor(c / n) * n + Mathfloor(i / n)];\n};\nconst reduceGrid = puzString => {\nconst [\nnumCells, // The total number of cells in a grid (81 for a 9x9 grid)\nN, // the 'n' value of the grid (3 for a 9x9 grid)\nU, // The total number of unique tokens to be placed g2D // A 2D array representation of the grid, with each element\n// being an array of candidates for a cell Known cells are\n// single element arrays ] = gridMeta(puzString);\nconst getIndex = indexesN(N);\nconst headRow = new Array(4 * numCells) fill('') map((_, i) => new DoX(`H${i}`));\nlet H = new DoX('ROOT');\nheadRow reduce((p, c) => addRight(p, c), H);\nfor (let i = 0; i < numCells; i++) {\nconst [ri, ci, bi] = getIndex(i);\ng2D[i] forEach(num => {\nlet id = `${i}:${num}`;\nlet candIdx = num - 1;\n// The 4 columns that we will populate const A = headRow[i];\nconst B = headRow[numCells + candIdx + ri * U];\nconst C = headRow[numCells * 2 + candIdx + ci * U];\nconst D = headRow[numCells * 3 + candIdx + bi * U];\n// The Row-Column Constraint\nlet rcc = addBelow(A U, new DoX(id, A));\n// The Row-Number Constraint\nlet rnc = addBelow(B U, addRight(rcc, new DoX(id, B)));\n// The Column-Number Constraint\nlet cnc = addBelow(C",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "f2de72fba69dabb4e35f6a030575e117",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "columns that we will populate const A = headRow[i]; const B = headRow[numCells + candIdx + ri * U]; const C = headRow[numCells * 2 + candIdx + ci * U]; const D = headRow[numCells * 3 + candIdx + bi * U]; // The Row-Column Constraint let rcc = addBelow(A U, new DoX(id, A)); // The Row-Number Constraint let rnc = addBelow(B U, addRight(rcc, new DoX(id, B))); // The Column-Number Constraint let cnc = addBelow(CU, addRight(rnc, new DoX(id, C)));\n// The Block-Number Constraint\naddBelow(D U, addRight(cnc, new DoX(id, D)));\n});\n}\nsearch(H, []);\n};\nvar stringPuzzle = '';\nfor (var i = 0; i < puzzle length; i++) {\npuzzle[i] forEach(function(e) {\nif (e == -1) stringPuzzle += ' ';\nelse stringPuzzle += e;\n});\n}\nreduceGrid(stringPuzzle);\nvar result = [];\nfor (var i = 0; i < 9; i++) {\nresult push(solution slice(i * 9, (i + 1) * 9) map(e => parseInt(e)));\n}\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\sudoku.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "6116412131d4e36542a1b094d68df911",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\tokenize-a-string-with-escaping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594faaab4e2a8626833e9c3d\ntitle: Tokenize a string with escaping\nchallengeType: 1\nforumTopicId: 302338\ndashedName: tokenize-a-string-with-escaping\n--description--\nWrite a function or program that can split a string at each non-escaped occurrence of a separator character It should accept three input parameters:\nThe string\nThe separator character\nThe escape character\nIt should output a list of strings Rules for splitting:\nThe fields that were separated by the separators, become the elements of the output list Empty fields should be preserved, even at the start and end Rules for escaping:\n\"Escaped\" means preceded by an occurrence of the escape character that is not already escaped itself When the escape character precedes a character that has no special meaning, it still counts as an escape (but does not do anything special) Each occurrences of the escape character that was used to escape something, should not become part of the output Demonstrate that your function satisfies the following test-case:\nGiven the string\none^|uno||three^^^^|four^^^|^cuatro|\nand using | as a separator and ^ as escape character, your function should output the following array:\n['one|uno', '', 'three^^', 'four^|cuatro', '']\n--hints--\ntokenize should be a function js\nassert(typeof tokenize === 'function');\ntokenize should return an array js\nassert(typeof tokenize('a', 'b', 'c') === 'object');\ntokenize('one^|uno||three^^^^|four^^^|^cuatro|', '|', '^') should return ['one|uno', '', 'three^^', 'four^|cuatro', '']\njs\nassert deepEqual(tokenize(testStr1, '|', '^'), res1);\ntokenize('a@&bcd&ef&&@@hi', '&', '@') should return ['a&bcd', 'ef', '', '@hi']\njs\nassert deepEqual(tokenize(testStr2, '&', '@'), res2);\ntokenize('hello^|world|how^are^you^|', '|', '^') should return ['hello|world', 'howareyou|']\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3207,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\tokenize-a-string-with-escaping.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2d8c53ae07e4a1fc0e05e591fdf52a73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\tokenize-a-string-with-escaping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "character, your function should output the following array: ['one|uno', '', 'three^^', 'four^|cuatro', ''] --hints-- tokenize should be a function js assert(typeof tokenize === 'function'); tokenize should return an array js assert(typeof tokenize('a', 'b', 'c') === 'object'); tokenize('one^|uno||three^^^^|four^^^|^cuatro|', '|', '^') should return ['one|uno', '', 'three^^', 'four^|cuatro', ''] js assert deepEqual(tokenize(testStr1, '|', '^'), res1); tokenize('a@&bcd&ef&&@@hi', '&', '@') should return ['a&bcd', 'ef', '', '@hi'] js assert deepEqual(tokenize(testStr2, '&', '@'), res2); tokenize('hello^|world|how^are^you^|', '|', '^') should return ['hello|world', 'howareyou|'] js assertdeepEqual(tokenize(testStr3, '|', '^'), res3);\n--seed--\n--after-user-code--\n```js\nconst testStr1 = 'one^|uno||three^^^^|four^^^|^cuatro|';\nconst res1 = ['one|uno', '', 'three^^', 'four^|cuatro', ''];\nconst testStr2 = 'a@&bcd&ef&&@@hi';\nconst res2 = ['a&bcd', 'ef', '', '@hi'];\nconst testStr3 = 'hello^|world|how^are^you^|';\nconst res3 = ['hello|world', 'howareyou|'];\n```\n--seed-contents--\njs\nfunction tokenize(str, sep, esc) {\nreturn true;\n}\n--solutions--\n```js\n// tokenize :: String -> Character -> Character -> [String]\nfunction tokenize(str, charDelim, charEsc) {\nconst dctParse = str split('') reduce((a, x) => {\nconst blnEsc = a esc;\nconst blnBreak = blnEsc && x === charDelim;\nconst blnEscChar = blnEsc && x === charEsc;\nreturn {\nesc: blnEscChar,\ntoken: blnBreak '' : (\na token + (blnEscChar '' : x)\n),\nlist: a list concat(blnBreak a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3207,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\tokenize-a-string-with-escaping.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e7413f717f1361db3fb67baeb2c4c020",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\tokenize-a-string-with-escaping.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "tokenize(str, sep, esc) { return true; } --solutions-- ```js // tokenize :: String -> Character -> Character -> [String] function tokenize(str, charDelim, charEsc) { const dctParse = str split('') reduce((a, x) => { const blnEsc = a esc; const blnBreak = blnEsc && x === charDelim; const blnEscChar = blnEsc && x === charEsc; return { esc: blnEscChar, token: blnBreak '' : ( a token + (blnEscChar '' : x) ), list: a list concat(blnBreak atoken : [])\n};\n}, {\nesc: false,\ntoken: '',\nlist: []\n});\nreturn dctParse list concat(\ndctParse token\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3207,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\tokenize-a-string-with-escaping.md",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5bd54f6388879d4f2d2986d3b87a02ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\vector-cross-product.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad2\ntitle: Vector cross product\nchallengeType: 1\nforumTopicId: 302342\ndashedName: vector-cross-product\n--description--\nA vector is defined as having three dimensions as being represented by an ordered collection of three numbers: (X, Y, Z).\n--instructions--\nWrite a function that takes two vectors (arrays) as input and computes their cross product. Your function should return null on invalid inputs such as vectors of different lengths.\n--hints--\ncrossProduct should be a function.\njs\nassert.equal(typeof crossProduct, 'function');\ncrossProduct() should return null.\njs\nassert.equal(crossProduct(), null);\ncrossProduct([1, 2, 3], [4, 5, 6]) should return [-3, 6, -3].\njs\nassert.deepEqual(res12, exp12);\n--seed--\n--after-user-code--\njs\nconst tv1 = [1, 2, 3];\nconst tv2 = [4, 5, 6];\nconst res12 = crossProduct(tv1, tv2);\nconst exp12 = [-3, 6, -3];\n--seed-contents--\n```js\nfunction crossProduct(a, b) {\n}\n```\n--solutions--\n```js\nfunction crossProduct(a, b) {\nif (!a || !b) {\nreturn null;\n}\n// Check lengths\nif (a.length !== 3 || b.length !== 3) {\nreturn null;\n}\nreturn [\n(a[1] * b[2]) - (a[2] * b[1]),\n(a[2] * b[0]) - (a[0] * b[2]),\n(a[0] * b[1]) - (a[1] * b[0])\n];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1313,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\vector-cross-product.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "215d112358d65952bf2a41ce0a15f67b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\vector-dot-product.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad3\ntitle: Vector dot product\nchallengeType: 1\nforumTopicId: 302343\ndashedName: vector-dot-product\n--description--\nA vector can have one or more values represented by an ordered collection Examples could be (x), (x, y), or (x, y, z) --instructions--\nWrite a function that takes two vectors (represented as one-dimensional arrays) as input and computes their dot product Your function should return null on invalid inputs such as vectors of different lengths or passing anything other than two vectors --hints--\ndotProduct should be a function js\nassert equal(typeof dotProduct, 'function');\ndotProduct() should return null js\nassert equal(dotProduct(), null);\ndotProduct([1], [1]) should return 1 js\nassert equal(dotProduct([1], [1]), 1);\ndotProduct([1], [1, 2]) should return null js\nassert equal(dotProduct([1], [1, 2]), null);\ndotProduct([1, 3, -5], [4, -2, -1]) should return 3 js\nassert equal(dotProduct([1, 3, -5], [4, -2, -1]), 3);\ndotProduct([3, 2, 1], [2, 4, 2], [5, 3, 1]) should return null js\nassert equal(dotProduct([3, 2, 1], [2, 4, 2], [5, 3, 1]), null);\ndotProduct([ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ]) should return 360 js\nassert equal(dotProduct([ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ]), 360);\n--seed--\n--seed-contents--\n```js\nfunction dotProduct( vectors) {\n}\n```\n--solutions--\n```js\nfunction dotProduct( vectors) {\nif ( vectors || vectors length || vectors length > 2 || vectors[0] length == vectors[1] length) {\nreturn null;\n}\nconst vectorLen = vectors[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\vector-dot-product.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a355a6ec5f8e8a75370146aff17c2c45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\vector-dot-product.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1]), null); dotProduct([ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ]) should return 360 js assert equal(dotProduct([ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ]), 360); --seed-- --seed-contents-- ```js function dotProduct( vectors) { } ``` --solutions-- ```js function dotProduct( vectors) { if ( vectors || vectors length || vectors length > 2 || vectors[0] length == vectors[1] length) { return null; } const vectorLen = vectors[0]length;\nlet prod = 0;\nlet sum = 0;\nlet j = vectorLen;\nlet i = 2;\n// Sum terms\nwhile (j--) {\ni = 2;\nprod = 1;\nwhile (i--) {\nprod *= vectors[i][j];\n}\nsum += prod;\n}\nreturn sum;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\vector-dot-product.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "95adc693739978c5c50c7ace8bc85bf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\towers-of-hanoi.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5951ed8945deab770972ae56\ntitle: Towers of Hanoi\nchallengeType: 1\nforumTopicId: 302341\ndashedName: towers-of-hanoi\n--description--\nSolve the Towers of Hanoi problem The number of objects will be given as the first parameter, followed by the strings used to identify each stack of objects Create a nested array containing the list of moves, [\"source\", \"destination\"] For example, the parameters (4, 'A', 'B', 'C'), will result in nested array of moves [['A', 'C'], ['B', 'A']], indicating that the 1st move was to move an object from stack A to C and the 2nd move was to move an object from stack B to A --instructions--\nWrite a function that returns the moves to stack the objects in a nested array --hints--\ntowerOfHanoi should be a function js\nassert(typeof towerOfHanoi === 'function');\ntowerOfHanoi(3, ) should return 7 moves js\nassert(res3 length === 7);\ntowerOfHanoi(3, 'A', 'B', 'C') should return [['A','B'], ['A','C'], ['B','C'], ['A','B'], ['C','A'], ['C','B'], ['A','B']] js\nassert deepEqual(towerOfHanoi(3, 'A', 'B', 'C'), res3Moves);\ntowerOfHanoi(5, \"X\", \"Y\", \"Z\") 10th move should be Y -> X js\nassert deepEqual(res5[9], ['Y', 'X']);\ntowerOfHanoi(7, 'A', 'B', 'C') first ten moves should be [['A','B'], ['A','C'], ['B','C'], ['A','B'], ['C','A'], ['C','B'], ['A','B'], ['A','C'], ['B','C'], ['B','A']]\njs\nassert deepEqual(towerOfHanoi(7, 'A', 'B', 'C')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\towers-of-hanoi.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "64abe922e5b903cbffbd18568f842da4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\towers-of-hanoi.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert(typeof towerOfHanoi === 'function'); towerOfHanoi(3, ) should return 7 moves js assert(res3 length === 7); towerOfHanoi(3, 'A', 'B', 'C') should return [['A','B'], ['A','C'], ['B','C'], ['A','B'], ['C','A'], ['C','B'], ['A','B']] js assert deepEqual(towerOfHanoi(3, 'A', 'B', 'C'), res3Moves); towerOfHanoi(5, \"X\", \"Y\", \"Z\") 10th move should be Y -> X js assert deepEqual(res5[9], ['Y', 'X']); towerOfHanoi(7, 'A', 'B', 'C') first ten moves should be [['A','B'], ['A','C'], ['B','C'], ['A','B'], ['C','A'], ['C','B'], ['A','B'], ['A','C'], ['B','C'], ['B','A']] js assert deepEqual(towerOfHanoi(7, 'A', 'B', 'C')slice(0, 10), res7First10Moves);\n--seed--\n--after-user-code--\njs\nconst res3 = towerOfHanoi(3, 'A', 'B', 'C');\nconst res3Moves = [['A', 'B'], ['A', 'C'], ['B', 'C'], ['A', 'B'], ['C', 'A'], ['C', 'B'], ['A', 'B']];\nconst res5 = towerOfHanoi(5, 'X', 'Y', 'Z');\nconst res7First10Moves = [['A', 'B'], ['A', 'C'], ['B', 'C'], ['A', 'B'], ['C', 'A'], ['C', 'B'], ['A', 'B'], ['A', 'C'], ['B', 'C'], ['B', 'A']];\n--seed-contents--\n```js\nfunction towerOfHanoi(n, a, b, c) {\nreturn [[]];\n}\n```\n--solutions--\n```js\nfunction towerOfHanoi(n, a, b, c) {\nconst res = [];\ntowerOfHanoiHelper(n, a, c, b, res);\nreturn res;\n}\nfunction towerOfHanoiHelper(n, a, b, c, res) {\nif (n > 0) {\ntowerOfHanoiHelper(n - 1, a, c, b, res);\nres",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\towers-of-hanoi.md",
      "source_type": "git_repo"
    },
    "token_count": 535,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3cc4012e3f885f8c4570212fc1677ba2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\towers-of-hanoi.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Z'); const res7First10Moves = [['A', 'B'], ['A', 'C'], ['B', 'C'], ['A', 'B'], ['C', 'A'], ['C', 'B'], ['A', 'B'], ['A', 'C'], ['B', 'C'], ['B', 'A']]; --seed-contents-- ```js function towerOfHanoi(n, a, b, c) { return [[]]; } ``` --solutions-- ```js function towerOfHanoi(n, a, b, c) { const res = []; towerOfHanoiHelper(n, a, c, b, res); return res; } function towerOfHanoiHelper(n, a, b, c, res) { if (n > 0) { towerOfHanoiHelper(n - 1, a, c, b, res); respush([a, c]);\ntowerOfHanoiHelper(n - 1, b, a, c, res);\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\towers-of-hanoi.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a92e6c4bb701f2e82a450695d5a2c4d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 595011cba5a81735713873bd\ntitle: Top rank per group\nchallengeType: 1\nforumTopicId: 302339\ndashedName: top-rank-per-group\n--description--\nFind the top n ranked data in each group, where n is provided as a parameter Name of the rank and the group are also provided as parameter",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 77,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "178c9b3209dff04b06d43d42ae5711a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 595011cba5a81735713873bd\ntitle: Top rank per group\nchallengeType: 1\nforumTopicId: 302339\ndashedName: top-rank-per-group\n--description--\nFind the top n ranked data in each group, where n is provided as a parameter Name of the rank and the group are also provided as parameterGiven the following data:\njs\ntestData1 = [\n{ name: 'Tyler Bennett', id: 'E10297', salary: 32000, dept: 'D101' },\n{ name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050' },\n{ name: 'George Woltman', id: 'E00127', salary: 53500, dept: 'D101' },\n{ name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' },\n{ name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D202' },\n{ name: 'David McClellan', id: 'E04242', salary: 41500, dept: 'D101' },\n{ name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D202' },\n{ name: 'Nathan Adams', id: 'E41298', salary: 21900, dept: 'D050' },\n{ name: 'Richard Potter', id: 'E43128', salary: 15900, dept: 'D101' },\n{ name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' },\n{ name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' },\n{ name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' },\n{ name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' }\n];\nOne could rank top 10 employees in each department by calling:\njs\ntopRankPerGroup(10, testData1, 'dept', 'salary')\nGiven the following data:\njs\ntestData2 = [\n{ name: 'Friday 13th', genre: 'horror', rating: 9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 518,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "bb990846437d9981364d9160f8d6d959",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' }, { name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' }, { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' }, { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' } ]; One could rank top 10 employees in each department by calling: js topRankPerGroup(10, testData1, 'dept', 'salary') Given the following data: js testData2 = [ { name: 'Friday 13th', genre: 'horror', rating: 99 },\n{ name: \"Nightmare on Elm's Street\", genre: 'horror', rating: 5 7 },\n{ name: 'Titanic', genre: 'drama', rating: 7 3 },\n{ name: 'Maze Runner', genre: 'scifi', rating: 7 1 },\n{ name: 'Blade runner', genre: 'scifi', rating: 8 9 }\n];\nOne could rank the top-rated movie in each genre by calling:\njs\ntopRankPerGroup(1, testData2, 'genre', 'rating')\nThe function should return an array with an array for each group containing the top n objects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "d296c4856e3ee8d30d89c4afd3068f17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}, { name: \"Nightmare on Elm's Street\", genre: 'horror', rating: 5 7 }, { name: 'Titanic', genre: 'drama', rating: 7 3 }, { name: 'Maze Runner', genre: 'scifi', rating: 7 1 }, { name: 'Blade runner', genre: 'scifi', rating: 8 9 } ]; One could rank the top-rated movie in each genre by calling: js topRankPerGroup(1, testData2, 'genre', 'rating') The function should return an array with an array for each group containing the top n objectsFor example, given data:\njs\n[\n{ name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D101' },\n{ name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D050' },\n{ name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D050' },\n{ name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' },\n{ name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D050' },\n{ name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D101' }\n];\nTop two ranking employees in each department by salary would be:\njs\n[ [ { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D050' },\n{ name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D050' } ],\n[ { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D101' },\n{ name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D101' } ] ]\n--hints--\ntopRankPerGroup should be a function js\nassert(typeof topRankPerGroup === 'function');\ntopRankPerGroup should return undefined on negative n values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "6db107e3e17381660e9108bc8fb9c30a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "each department by salary would be: js [ [ { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D050' }, { name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D050' } ], [ { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D101' }, { name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D101' } ] ] --hints-- topRankPerGroup should be a function js assert(typeof topRankPerGroup === 'function'); topRankPerGroup should return undefined on negative n valuesjs\nassert(typeof topRankPerGroup(-1, []) === 'undefined');\nFor topRankPerGroup(10, testData1, 'dept', 'salary'), the first result in the first group should be { name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050'} js\nassert deepEqual(res1[0][0], { name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050'});\nFor topRankPerGroup(10, testData1, 'dept', 'salary'), the last result in the last group should be { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' } js\nassert deepEqual(res1[3][3], { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' });\ntopRankPerGroup(1, ) should return only top ranking result per group js\nassert equal(res2[2] length, 1);\ntopRankPerGroup(2, ) should return two ranking results per group js\nassert equal(res3[2][1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "7ecb44b4dfaedd6435038831d6e5e7bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050'}); For topRankPerGroup(10, testData1, 'dept', 'salary'), the last result in the last group should be { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' } js assert deepEqual(res1[3][3], { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' }); topRankPerGroup(1, ) should return only top ranking result per group js assert equal(res2[2] length, 1); topRankPerGroup(2, ) should return two ranking results per group js assert equal(res3[2][1]name, 'Maze Runner');\n--seed--\n--after-user-code--\n```js\nconst testData1 = [\n{ name: 'Tyler Bennett', id: 'E10297', salary: 32000, dept: 'D101' },\n{ name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050' },\n{ name: 'George Woltman', id: 'E00127', salary: 53500, dept: 'D101' },\n{ name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' },\n{ name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D202' },\n{ name: 'David McClellan', id: 'E04242', salary: 41500, dept: 'D101' },\n{ name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D202' },\n{ name: 'Nathan Adams', id: 'E41298', salary: 21900, dept: 'D050' },\n{ name: 'Richard Potter', id: 'E43128', salary: 15900, dept: 'D101' },\n{ name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' },\n{ name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' },\n{ name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' },\n{ name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' }\n];\nconst res1 = topRankPerGroup(10, testData1, 'dept', 'salary');\nconst testData2 = [\n{ name: 'Friday 13th', genre: 'horror', rating: 9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 607,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "09f4d7e9d99af79e5917ff6e6d048688",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}, { name: 'Richard Potter', id: 'E43128', salary: 15900, dept: 'D101' }, { name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' }, { name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' }, { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' }, { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' } ]; const res1 = topRankPerGroup(10, testData1, 'dept', 'salary'); const testData2 = [ { name: 'Friday 13th', genre: 'horror', rating: 99 },\n{ name: \"Nightmare on Elm's Street\", genre: 'horror', rating: 5 7 },\n{ name: 'Titanic', genre: 'drama', rating: 7 3 },\n{ name: 'Maze Runner', genre: 'scifi', rating: 7 1 },\n{ name: 'Blade runner', genre: 'scifi', rating: 8 9 }\n];\nconst res2 = topRankPerGroup(1, testData2, 'genre', 'rating');\nconst res3 = topRankPerGroup(2, testData2, 'genre', 'rating');\n```\n--seed-contents--\n```js\nfunction topRankPerGroup(n, data, groupName, rankName) {\nreturn true;\n}\n```\n--solutions--\n```js\nconst collectDept = function (arrOfObj, groupName) {\nconst collect = arrOfObj reduce((rtnObj, obj) => {\nif (rtnObj[obj[groupName]] === undefined) {\nrtnObj[obj[groupName]] = [];\n}\nrtnObj[obj[groupName]] push(obj);\nreturn rtnObj;\n}, {} // initial value to reduce\n);\nreturn Object keys(collect) sort() map(key => collect[key]);\n};\nconst sortRank = function (arrOfRankArrs, rankName) {\nreturn arrOfRankArrs map(item => item",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "eb61c57ba102e1c2443751f44e4a10b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= topRankPerGroup(2, testData2, 'genre', 'rating'); ``` --seed-contents-- ```js function topRankPerGroup(n, data, groupName, rankName) { return true; } ``` --solutions-- ```js const collectDept = function (arrOfObj, groupName) { const collect = arrOfObj reduce((rtnObj, obj) => { if (rtnObj[obj[groupName]] === undefined) { rtnObj[obj[groupName]] = []; } rtnObj[obj[groupName]] push(obj); return rtnObj; }, {} // initial value to reduce ); return Object keys(collect) sort() map(key => collect[key]); }; const sortRank = function (arrOfRankArrs, rankName) { return arrOfRankArrs map(item => itemsort((a, b) => {\nif (a[rankName] > b[rankName]) { return -1; }\nif (a[rankName] < b[rankName]) { return 1; }\nreturn 0;\n}));\n};\nfunction topRankPerGroup(n, data, groupName, rankName) {\nif (n < 0) { return; }\nreturn sortRank(collectDept(data, groupName),\nrankName) map(list => list slice(0, n));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6280,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\top-rank-per-group.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "f24ff26313e69597c2b13a3a1d4a0031",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-wrap.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad4\ntitle: Word wrap\nchallengeType: 1\nforumTopicId: 302344\ndashedName: word-wrap\n--description--\nEven today, with proportional fonts and complex layouts, there are still cases where you need to wrap text at a specified column The basic task is to wrap a paragraph of text in a simple way --instructions--\nWrite a function that can wrap this text to any number of characters Note that the input text already contains line breaks, which your function should handle appropriately As an example, the text wrapped to 80 characters should look like the following:\nWrap text using a more sophisticated algorithm such as the Knuth and Plass TeX\nalgorithm If your language provides this, you get easy extra credit, but you\nmust reference documentation indicating that the algorithm is something better\nthan a simple minimum length algorithm --hints--\nwrap should be a function js\nassert equal(typeof wrap, 'function');\nwrap should return a string js\nassert equal(typeof wrap('abc', 10), 'string');\nwrap(text,80) should return 4 lines js\nassert(wrapped80 split('\\n') length === 4);\nYour wrap function should return the expected text js\nassert equal(wrapped80 split('\\n')[0], firstRow80);\nwrap(text,42) should return 7 lines js\nassert(wrapped42 split('\\n') length === 7);\nYour wrap function should return the expected text js\nassert equal(wrapped42 split('\\n')[0], firstRow42);\n--seed--\n--after-user-code--\n``js\nconst text =Wrap text using a more sophisticated algorithm such as the Knuth and Plass TeX algorithm If your language provides this, you get easy extra credit,\nbut you ''must reference documentation'' indicating that the algorithm\nis something better than a simple minimum length algorithm `;\nconst wrapped80 = wrap(text, 80);\nconst wrapped42 = wrap(text, 42);\nconst firstRow80 =\n'Wrap text using a more sophisticated algorithm such as the Knuth and Plass TeX';\nconst firstRow42 = 'Wrap text using a more sophisticated';\n```\n--seed-contents--\njs\nfunction wrap(text, limit) {\nreturn text;\n}\n--solutions--\njs\nfunction wrap(text, limit) {\nconst noNewlines = text replace('\\n', '');\nif (noNewlines",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-wrap.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a58118e75c7b1c9d1ba9dd9abdd90ffc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-wrap.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "reference documentation'' indicating that the algorithm is something better than a simple minimum length algorithm `; const wrapped80 = wrap(text, 80); const wrapped42 = wrap(text, 42); const firstRow80 = 'Wrap text using a more sophisticated algorithm such as the Knuth and Plass TeX'; const firstRow42 = 'Wrap text using a more sophisticated'; ``` --seed-contents-- js function wrap(text, limit) { return text; } --solutions-- js function wrap(text, limit) { const noNewlines = text replace('\\n', ''); if (noNewlineslength > limit) {\n// find the last space within limit\nconst edge = noNewlines slice(0, limit) lastIndexOf(' ');\nif (edge > 0) {\nconst line = noNewlines slice(0, edge);\nconst remainder = noNewlines slice(edge + 1);\nreturn line + '\\n' + wrap(remainder, limit);\n}\n}\nreturn text;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-wrap.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "755469ab5c9accf141e118b9d8dc6053",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594fa2746886f41f7d8bf225\ntitle: Topological sort\nchallengeType: 1\nforumTopicId: 302340\ndashedName: topological-sort\n--description--\nGiven a mapping between items, and items they depend on, a topological sort orders items so that no item precedes an item it depends upon There are two popular algorithms for topological sorting: Kahn's (1962) topological sort and depth-first search --instructions--\nWrite a function that will return a list with valid compile order of libraries from their dependencies Assume library names are single words Items mentioned as only dependents have no dependents of their own, but their order of compiling must be given Any self dependencies should be ignored Any un-orderable dependencies should be ignored Use the following data as an example:\nLIBRARY          LIBRARY DEPENDENCIES\n=======          ====================\ndes_system_lib   std synopsys std_cell_lib des_system_lib dw02 dw01 ramlib ieee\ndw01             ieee dw01 dware gtech\ndw02             ieee dw02 dware\ndw03             std synopsys dware dw03 dw02 dw01 ieee gtech\ndw04             dw04 ieee dw01 dware gtech\ndw05             dw05 ieee dware\ndw06             dw06 ieee dware\ndw07             ieee dware\ndware            ieee dware\ngtech            ieee gtech\nramlib           std ieee\nstd_cell_lib     ieee std_cell_lib\nsynopsys\nThe compiling of a library in the VHDL language has the constraint that a library must be compiled after any library it depends on The above data would be un-orderable if, for example, dw04 is added to the list of dependencies of dw01 The input of the function will be a multiline string, each line will consist of the name of the library, followed by its dependencies (if exist) For example:\njs\nconst libsSimple =\n`aaa bbb\nbbb`;\n--hints--\ntopologicalSort should be a function js\nassert(typeof topologicalSort === 'function');\ntopologicalSort(libsSimple) should return an array js\nassert(Array isArray(topologicalSort(libsSimple)));\ntopologicalSort(libsSimple) should return ['bbb', 'aaa'] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d8aee49e50eec934862f673e9f3b979c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be un-orderable if, for example, dw04 is added to the list of dependencies of dw01 The input of the function will be a multiline string, each line will consist of the name of the library, followed by its dependencies (if exist) For example: js const libsSimple = `aaa bbb bbb`; --hints-- topologicalSort should be a function js assert(typeof topologicalSort === 'function'); topologicalSort(libsSimple) should return an array js assert(Array isArray(topologicalSort(libsSimple))); topologicalSort(libsSimple) should return ['bbb', 'aaa'] js assertdeepEqual(topologicalSort(libsSimple), ['bbb', 'aaa']);\ntopologicalSort(libsVHDL) should return ['ieee', 'std_cell_lib', 'gtech', 'dware', 'dw07', 'dw06', 'dw05', 'dw02', 'dw01', 'dw04', 'std', 'ramlib', 'synopsys', 'dw03', 'des_system_lib'] js\nassert deepEqual(topologicalSort(libsVHDL), ['ieee', 'std_cell_lib', 'gtech', 'dware', 'dw07', 'dw06', 'dw05', 'dw02', 'dw01', 'dw04', 'std', 'ramlib', 'synopsys', 'dw03', 'des_system_lib']);\ntopologicalSort(libsCustom) should return ['base', 'c', 'd', 'b', 'a'] js\nassert deepEqual(topologicalSort(libsCustom), ['base', 'c', 'd', 'b', 'a']);\ntopologicalSort should ignore unorderable dependencies js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "a887f8567f8b7273610ac89590fd2ce8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "topologicalSort(libsSimple) should return an array js assert(Array isArray(topologicalSort(libsSimple))); topologicalSort(libsSimple) should return ['bbb', 'aaa'] js assertdeepEqual(topologicalSort(libsSimple), ['bbb', 'aaa']); topologicalSort(libsVHDL) should return ['ieee', 'std_cell_lib', 'gtech', 'dware', 'dw07', 'dw06', 'dw05', 'dw02', 'dw01', 'dw04', 'std', 'ramlib', 'synopsys', 'dw03', 'des_system_lib'] js assert deepEqual(topologicalSort(libsVHDL), ['ieee', 'std_cell_lib', 'gtech', 'dware', 'dw07', 'dw06', 'dw05', 'dw02', 'dw01', 'dw04', 'std', 'ramlib', 'synopsys', 'dw03', 'des_system_lib']); topologicalSort(libsCustom) should return ['base', 'c', 'd', 'b', 'a'] js assert deepEqual(topologicalSort(libsCustom), ['base', 'c', 'd', 'b', 'a']); topologicalSort should ignore unorderable dependencies js assertdeepEqual(topologicalSort(libsUnorderable), ['Base']);\n--seed--\n--after-user-code--\n``js\nconst libsSimple =aaa bbb\nbbb`;\nconst libsVHDL =\ndes_system_lib   std synopsys std_cell_lib des_system_lib dw02 dw01 ramlib ieee\ndw01             ieee dw01 dware gtech\ndw02             ieee dw02 dware\ndw03             std synopsys dware dw03 dw02 dw01 ieee gtech\ndw04             dw04 ieee dw01 dware gtech\ndw05             dw05 ieee dware\ndw06             dw06 ieee dware\ndw07             ieee dware\ndware            ieee dware\ngtech            ieee gtech\nramlib           std ieee\nstd_cell_lib     ieee std_cell_lib\nsynopsys;\nconst libsCustom =\na b c d\nb c d\nd c\nc base\nbase;\nconst libsUnorderable =\nTestLib Base MainLib\nMainLib TestLib\nBase;\n```\n--seed-contents--\n```js\nfunction topologicalSort(libs) {\nreturn true;\n}\n```\n--solutions--\n```js\nfunction topologicalSort(libs) {\n// A map of the input data, with the keys as the packages, and the values as\n// and array of packages on which it depends",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 542,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "f3cebca9d132d05c3279638c2b343df0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dware gtech ieee gtech ramlib std ieee std_cell_lib ieee std_cell_lib synopsys; const libsCustom = a b c d b c d d c c base base; const libsUnorderable = TestLib Base MainLib MainLib TestLib Base; ``` --seed-contents-- ```js function topologicalSort(libs) { return true; } ``` --solutions-- ```js function topologicalSort(libs) { // A map of the input data, with the keys as the packages, and the values as // and array of packages on which it dependsconst D = libs split('\\n') map(e => e split(' ') filter(ep => ep == '')) reduce((p, c) =>\np set(c[0], c filter((e, i) => (i > 0 && e == c[0] e : null))), new Map());\n[] concat( D values()) forEach(e => {\nD set(e, D get(e) || []);\n});\n// The above map rotated so that it represents a DAG of the form\n// Map {\n//    A => [ A, B, C],\n//    B => [C],\n//    C => []\n// }\n// where each key represents a node, and the array contains the edges const G = [ D keys()] reduce((p, c) =>\np set(\nc,\n[ D keys()] filter(e => D get(e) includes(c))),\nnew Map()\n);\n// An array of leaf nodes; nodes with 0 in degrees const Q = [ D keys()] filter(e => D get(e) length === 0);\n// The result array const S = [];\nwhile (Q length) {\nconst u = Q pop();\nS push(u);\nG get(u) forEach(v => {\nD set(v, D get(v) filter(e => e == u));\nif (D get(v) length === 0) {\nQ push(v);\n}\n});\n}\nreturn S;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\topological-sort.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "74b2059d191abc87383e032b448918e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\y-combinator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad5\ntitle: Y combinator\nchallengeType: 1\nforumTopicId: 302345\ndashedName: y-combinator\n--description--\nIn strict functional programming and the lambda calculus, functions (lambda expressions) don't have state and are only allowed to refer to arguments of enclosing functions. This rules out the usual definition of a recursive function wherein a function is associated with the state of a variable and this variable's state is used in the body of the function.\nThe Y combinator is itself a stateless function that, when applied to another stateless function, returns a recursive version of the function. The Y combinator is the simplest of the class of such functions, called fixed-point combinators.\n--instructions--\nDefine the stateless Y combinator function and use it to compute the factorials. The factorial(N) function is already given to you.\n--hints--\nY should return a function.\njs\nassert.equal(typeof Y((f) => (n) => n), 'function');\nfactorial(1) should return 1.\njs\nassert.equal(factorial(1), 1);\nfactorial(2) should return 2.\njs\nassert.equal(factorial(2), 2);\nfactorial(3) should return 6.\njs\nassert.equal(factorial(3), 6);\nfactorial(4) should return 24.\njs\nassert.equal(factorial(4), 24);\nfactorial(10) should return 3628800.\njs\nassert.equal(factorial(10), 3628800);\n--seed--\n--after-user-code--\njs\nvar factorial = Y(f => n => (n > 1 ? n * f(n - 1) : 1));\n--seed-contents--\n```js\nfunction Y(f) {\nreturn function() {\n};\n}\nvar factorial = Y(function(f) {\nreturn function (n) {\nreturn n > 1 ? n * f(n - 1) : 1;\n};\n});\n```\n--solutions--\njs\nvar Y = f => (x => x(x))(y => f(x => y(y)(x)));",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1885,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\y-combinator.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e68936a3387c98a518d9f7083d107793",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e94a54cc7b022105bf0fd2c\ntitle: Word frequency\nchallengeType: 1\nforumTopicId: 393913\ndashedName: word-frequency\n--description--\nGiven a text string and an integer n, return the n most common words in the file (and the number of their occurrences) in decreasing frequency --instructions--\nWrite a function to count the occurrences of each word and return the n most commons words along with the number of their occurrences in decreasing frequency The function should return a 2D array with each of the elements in the following form: [word, freq] word should be the lowercase version of the word and freq the number denoting the count The function should return an empty array, if no string is provided The function should be case insensitive, for example, the strings \"Hello\" and \"hello\" should be treated the same You can treat words that have special characters such as underscores, dashes, apostrophes, commas, etc , as distinct words For example, given the string \"Hello hello goodbye\", your function should return [['hello', 2], ['goodbye', 1]] --hints--\nwordFrequency should be a function js\nassert isFunction(wordFrequency);\nwordFrequency should return an array js\nassert isArray(wordFrequency('test'));\nwordFrequency(\"Hello hello world\", 2) should return [['hello', 2], ['world', 1]]\n```js\nconst example_1 = 'Hello hello world';\nconst example_1_solution = [['hello', 2], ['world', 1]];\nassert deepEqual(wordFrequency(example_1, 2), example_1_solution);\n```\nwordFrequency(\"The quick brown fox jumped over the lazy dog\", 1) should return [['the', 2]]\n```js\nconst example_2 = 'The quick brown fox jumped over the lazy dog';\nconst example_2_solution = [['the', 2]];\nassert deepEqual(wordFrequency(example_2, 1), example_2_solution);\n```\nwordFrequency(\"Opensource opensource open-source open source\", 1) should return [['opensource', 2]]\n```js\nconst example_3 = 'Opensource opensource open-source open source';\nconst example_3_solution = [['opensource', 2]];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "20cd372dc4bb3bb45b13b8990a061532",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "hello world'; const example_1_solution = [['hello', 2], ['world', 1]]; assert deepEqual(wordFrequency(example_1, 2), example_1_solution); ``` wordFrequency(\"The quick brown fox jumped over the lazy dog\", 1) should return [['the', 2]] ```js const example_2 = 'The quick brown fox jumped over the lazy dog'; const example_2_solution = [['the', 2]]; assert deepEqual(wordFrequency(example_2, 1), example_2_solution); ``` wordFrequency(\"Opensource opensource open-source open source\", 1) should return [['opensource', 2]] ```js const example_3 = 'Opensource opensource open-source open source'; const example_3_solution = [['opensource', 2]]; assertdeepEqual(wordFrequency(example_3, 1), example_3_solution);\n```\nwordFrequency(\"Apple App apply aPP aPPlE\", 3) should return [['app', 2], ['apple', 2], ['apply', 1]] or [['apple', 2], ['app', 2], ['apply', 1]]\n```js\nconst example_4 = 'Apple App apply aPP aPPlE';\nconst example_4_solution = [[\"app\", 2],[\"apple\", 2],[\"apply\", 1]];\nconst arr = wordFrequency(example_4, 3);\nassert includeDeepMembers(arr, example_4_solution);\n```\nwordFrequency(\"c d a d c a b d d c\", 4) should return [['d', 4], ['c', 3], ['a', 2], ['b', 1]]\n```js\nconst example_5 = 'c d a d c a b d d c';\nconst example_5_solution = [['d', 4], ['c', 3], ['a', 2], ['b', 1]];\nassert deepEqual(wordFrequency(example_5, 4), example_5_solution);\n```\nwordFrequency(\"\", 5) should return []\n```js\nconst example_6 = '';\nconst example_6_solution = [];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "caa5493ead44ce5b526412bac10a7003",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-frequency.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1]]; const arr = wordFrequency(example_4, 3); assert includeDeepMembers(arr, example_4_solution); ``` wordFrequency(\"c d a d c a b d d c\", 4) should return [['d', 4], ['c', 3], ['a', 2], ['b', 1]] ```js const example_5 = 'c d a d c a b d d c'; const example_5_solution = [['d', 4], ['c', 3], ['a', 2], ['b', 1]]; assert deepEqual(wordFrequency(example_5, 4), example_5_solution); ``` wordFrequency(\"\", 5) should return [] ```js const example_6 = ''; const example_6_solution = []; assertdeepEqual(wordFrequency(example_6, 5), example_6_solution);\n```\n--seed--\n--seed-contents--\n```js\nfunction wordFrequency(txt, n) {\n}\n```\n--solutions--\n```js\nfunction wordFrequency(txt, n) {\nvar words = txt split(/\\s+/);\nvar wordCount = {};\nwords forEach(word => {\nif (word == '') {\nreturn;\n}\nconst lowerWord = word toLowerCase();\nwordCount[lowerWord] =\nlowerWord in wordCount wordCount[lowerWord] + 1 : 1;\n});\nvar wordsArray = [];\nfor (let [word, count] of Object entries(wordCount)) {\nwordsArray push([word, count]);\n}\nwordsArray sort((a, b) => {\nif (a[1] == b[1]) {\nreturn b[1] - a[1];\n} else if (a[0] == b[0]) {\nreturn a[0] < b[0] -1 : 1;\n}\nreturn 0;\n});\nreturn wordsArray slice(0, n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\word-frequency.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3cecd484b06bfbed3a0d40cf375b6167",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\a2-english-for-developers-certification-exam\\6721db5d9f0c116e6a0fe25a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6721db5d9f0c116e6a0fe25a\ntitle: A2 English for Developers Certification Exam\nchallengeType: 24\ndashedName: a2-english-for-developers-certification-exam\nprerequisites: []\n--description--\nStart your exam in the exam environment app.\n--instructions--\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\a2-english-for-developers-certification-exam\\6721db5d9f0c116e6a0fe25a.md",
      "source_type": "git_repo"
    },
    "token_count": 82,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "25b8cf777099643acf3da9dc8fe8053d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zig-zag-matrix.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad8\ntitle: Zig-zag matrix\nchallengeType: 1\nforumTopicId: 302348\ndashedName: zig-zag-matrix\n--description--\nA 'zig-zag' array is a square arrangement of the first $N^2$ integers, where the numbers increase sequentially as you zig-zag along the array's anti-diagonals For example, for the input 5, the following result should be produced:\n0  1  5  6 14\n2  4  7 13 15\n3  8 12 16 21\n9 11 17 20 22\n10 18 19 23 24\n--instructions--\nWrite a function that takes the size of the zig-zag matrix, and returns the corresponding matrix as two-dimensional array --hints--\nZigZagMatrix should be a function js\nassert equal(typeof ZigZagMatrix, 'function');\nZigZagMatrix should return array js\nassert equal(typeof ZigZagMatrix(1), 'object');\nZigZagMatrix should return an array of nested arrays js\nassert equal(typeof ZigZagMatrix(1)[0], 'object');\nZigZagMatrix(1) should return [[0]] js\nassert deepEqual(ZigZagMatrix(1), zm1);\nZigZagMatrix(2) should return [[0, 1], [2, 3]] js\nassert deepEqual(ZigZagMatrix(2), zm2);\nZigZagMatrix(5) should return specified matrix js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zig-zag-matrix.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cedcb44cdaac1c8608b709066f108386",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zig-zag-matrix.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "function that takes the size of the zig-zag matrix, and returns the corresponding matrix as two-dimensional array --hints-- ZigZagMatrix should be a function js assert equal(typeof ZigZagMatrix, 'function'); ZigZagMatrix should return array js assert equal(typeof ZigZagMatrix(1), 'object'); ZigZagMatrix should return an array of nested arrays js assert equal(typeof ZigZagMatrix(1)[0], 'object'); ZigZagMatrix(1) should return [[0]] js assert deepEqual(ZigZagMatrix(1), zm1); ZigZagMatrix(2) should return [[0, 1], [2, 3]] js assert deepEqual(ZigZagMatrix(2), zm2); ZigZagMatrix(5) should return specified matrix js assertdeepEqual(ZigZagMatrix(5), zm5);\n--seed--\n--after-user-code--\njs\nconst zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n[0, 1, 5, 6, 14],\n[2, 4, 7, 13, 15],\n[3, 8, 12, 16, 21],\n[9, 11, 17, 20, 22],\n[10, 18, 19, 23, 24]\n];\n--seed-contents--\n```js\nfunction ZigZagMatrix(n) {\nreturn [[], []];\n}\n```\n--solutions--\n```js\nfunction ZigZagMatrix(n) {\nconst mtx = [];\nfor (let i = 0; i < n; i++) {\nmtx[i] = [];\n}\nlet i = 1;\nlet j = 1;\nfor (let e = 0; e < n * n; e++) {\nmtx[i - 1][j - 1] = e;\nif ((i + j) % 2 === 0) {\n// Even stripes\nif (j < n) j++;\nelse i += 2;\nif (i > 1) i--;\n} else {\n// Odd stripes\nif (i < n) i++;\nelse j += 2;\nif (j > 1) j--;\n}\n}\nreturn mtx;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zig-zag-matrix.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9958ec8e1cd1a16f7169d348c0e637f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b05367b59300bcb5f18ef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b05367b59300bcb5f18ef\ntitle: Task 1\nchallengeType: 22\ndashedName: task-1\n--description--\nIn English, you can use the verb to be to ask questions about feelings, states, or conditions.\nWhen you want to ask such questions, you just swap the positions of the subject (like you or he) and the verb to be (like are or is). For example, to turn this sentence You are a developer. into a question, you switch you and are:\nAre you a developer? Notice how the order changes to ask a question.\nHere are some more examples of turning statements into questions using to be:\n| Affirmative | Interrogative |\n| --- | --- |\n| He is here. | Is he here? |\n| They are ready. | Are they ready? |\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHi, Tom! BLANK you happy with the workplace so far?\n--blanks--\nAre\n--feedback--\nYou use this form of to be when asking about more than one person or directly to someone as you.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 2.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"Hi, Tom. Are you happy with the workplace so far?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1802,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b05367b59300bcb5f18ef.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5bce8980c75c4fdce5ee967615c60c36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad6\ntitle: Zeckendorf number representation\nchallengeType: 1\nforumTopicId: 302346\ndashedName: zeckendorf-number-representation\n--description--\nJust as numbers can be represented in a positional notation as sums of multiples of the powers of ten (decimal) or two (binary); all the positive integers can be represented as the sum of one or zero times the distinct members of the Fibonacci series Recall that the first six distinct Fibonacci numbers are: 1, 2, 3, 5, 8, 13 The decimal number eleven can be written as 0*13 + 1*8 + 0*5 + 1*3 + 0*2 + 0*1 or 010100 in positional notation where the columns represent multiplication by a particular member of the sequence Leading zeroes are dropped so that 11 decimal becomes 10100 10100 is not the only way to make 11 from the Fibonacci numbers however 0*13 + 1*8 + 0*5 + 0*3 + 1*2 + 1*1 or 010011 would also represent decimal 11 For a true Zeckendorf number there is the added restriction that no two consecutive Fibonacci numbers can be used which leads to the former unique solution --instructions--\nWrite a function that generates and returns the Zeckendorf number representation of n --hints--\nzeckendorf should be a function js\nassert equal(typeof zeckendorf, 'function');\nzeckendorf(0) should return 0 ```js\nassert equal(zeckendorf(0), 0);\n```\nzeckendorf(1) should return 1 js\nassert equal(zeckendorf(1), 1);\nzeckendorf(2) should return 10 js\nassert equal(zeckendorf(2), 10);\nzeckendorf(3) should return 100 js\nassert equal(zeckendorf(3), 100);\nzeckendorf(4) should return 101 js\nassert equal(zeckendorf(4), 101);\nzeckendorf(5) should return 1000 js\nassert equal(zeckendorf(5), 1000);\nzeckendorf(6) should return 1001",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "22df5878313a426d18665e0e6aa02692",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a function that generates and returns the Zeckendorf number representation of n --hints-- zeckendorf should be a function js assert equal(typeof zeckendorf, 'function'); zeckendorf(0) should return 0 ```js assert equal(zeckendorf(0), 0); ``` zeckendorf(1) should return 1 js assert equal(zeckendorf(1), 1); zeckendorf(2) should return 10 js assert equal(zeckendorf(2), 10); zeckendorf(3) should return 100 js assert equal(zeckendorf(3), 100); zeckendorf(4) should return 101 js assert equal(zeckendorf(4), 101); zeckendorf(5) should return 1000 js assert equal(zeckendorf(5), 1000); zeckendorf(6) should return 1001js\nassert equal(zeckendorf(6), 1001);\nzeckendorf(7) should return 1010 js\nassert equal(zeckendorf(7), 1010);\nzeckendorf(8) should return 10000 js\nassert equal(zeckendorf(8), 10000);\nzeckendorf(9) should return 10001 js\nassert equal(zeckendorf(9), 10001);\nzeckendorf(10) should return 10010 js\nassert equal(zeckendorf(10), 10010);\nzeckendorf(11) should return 10100 js\nassert equal(zeckendorf(11), 10100);\nzeckendorf(12) should return 10101 js\nassert equal(zeckendorf(12), 10101);\nzeckendorf(13) should return 100000 js\nassert equal(zeckendorf(13), 100000);\nzeckendorf(14) should return 100001 js\nassert equal(zeckendorf(14), 100001);\nzeckendorf(15) should return 100010 js\nassert equal(zeckendorf(15), 100010);\nzeckendorf(16) should return 100100 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "ea01507334edf3a48822ac6299474f24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return 1010 js assert equal(zeckendorf(7), 1010); zeckendorf(8) should return 10000 js assert equal(zeckendorf(8), 10000); zeckendorf(9) should return 10001 js assert equal(zeckendorf(9), 10001); zeckendorf(10) should return 10010 js assert equal(zeckendorf(10), 10010); zeckendorf(11) should return 10100 js assert equal(zeckendorf(11), 10100); zeckendorf(12) should return 10101 js assert equal(zeckendorf(12), 10101); zeckendorf(13) should return 100000 js assert equal(zeckendorf(13), 100000); zeckendorf(14) should return 100001 js assert equal(zeckendorf(14), 100001); zeckendorf(15) should return 100010 js assert equal(zeckendorf(15), 100010); zeckendorf(16) should return 100100 js assertequal(zeckendorf(16), 100100);\nzeckendorf(17) should return 100101 js\nassert equal(zeckendorf(17), 100101);\nzeckendorf(18) should return 101000 js\nassert equal(zeckendorf(18), 101000);\nzeckendorf(19) should return 101001 js\nassert equal(zeckendorf(19), 101001);\nzeckendorf(20) should return 101010 js\nassert equal(zeckendorf(20), 101010);\n--seed--\n--seed-contents--\n```js\nfunction zeckendorf(n) {\n}\n```\n--solutions--\n```js\n// zeckendorf :: Int -> Int\nfunction zeckendorf(n) {\nconst f = (m, x) => (m < x [m, 0] : [m - x, 1]);\nreturn parseInt((n === 0 ([0]) :\nmapAccumL(f, n, reverse(\ntail(fibUntil(n))\n))[1])",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8418888bd11d09d56b99c914964d83b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return 100101 js assert equal(zeckendorf(17), 100101); zeckendorf(18) should return 101000 js assert equal(zeckendorf(18), 101000); zeckendorf(19) should return 101001 js assert equal(zeckendorf(19), 101001); zeckendorf(20) should return 101010 js assert equal(zeckendorf(20), 101010); --seed-- --seed-contents-- ```js function zeckendorf(n) { } ``` --solutions-- ```js // zeckendorf :: Int -> Int function zeckendorf(n) { const f = (m, x) => (m < x [m, 0] : [m - x, 1]); return parseInt((n === 0 ([0]) : mapAccumL(f, n, reverse( tail(fibUntil(n)) ))[1])join(''));\n}\n// fibUntil :: Int -> [Int]\nlet fibUntil = n => {\nconst xs = [];\nuntil(\n([a]) => a > n,\n([a, b]) => (xs push(a), [b, a + b]), [1, 1]\n);\nreturn xs;\n};\nlet mapAccumL = (f, acc, xs) => (\nxs reduce((a, x) => {\nconst pair = f(a[0], x);\nreturn [pair[0], a[1] concat(pair[1])];\n}, [acc, []])\n);\nlet until = (p, f, x) => {\nlet v = x;\nwhile ( p(v)) v = f(v);\nreturn v;\n};\nconst tail = xs => (\nxs length xs slice(1) : undefined\n);\nconst reverse = xs => xs slice(0) reverse();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zeckendorf-number-representation.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "dd2e378ea50c965a4370918f0a9c8cf1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b068e28a3bd135ced0042.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b068e28a3bd135ced0042\ntitle: Task 2\nchallengeType: 19\ndashedName: task-2\n--description--\nThe term so far means up to this moment or until now. It is used when talking about a time that started in the past and continues to the present. If someone asks, Are you happy with the workplace so far? They want to know if you liked your workplace from the first day up to today.\nAnother example: if you say, The project is good so far, it means from the beginning of the project until now, everything is good.\nIn our dialogue, Sarah asks Tom if he is happy with his new job so far. She is asking about his time at the job from the beginning until their conversation.\n--questions--\n--text--\nWhat does so far mean in Sarah's question to Tom?\n--answers--\nIt asks for Tom's complete opinion about the workplace.\n--feedback--\nSo far talks about the time from the start up to now.\nIt asks about what Tom thinks will happen at the workplace in the future.\n--feedback--\nIt does not ask about the future or what Tom expects.\nIt asks about Tom's feelings from his first day to the present time.\nIt asks only about Tom's first day at the workplace.\n--feedback--\nIt is about Tom's experience until the time he is asked.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 2.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"Hi, Tom. Are you happy with the workplace so far?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b068e28a3bd135ced0042.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0282a7b27a0489fd4273768fc23daddc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 651dd5ae6ffb500e3f2ce47c\ntitle: \"Dialogue 1: Small Talk\"\nchallengeType: 21\ndashedName: dialogue-1-small-talk\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 3-1 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1 0,\n\"finishTime\": 3 7,\n\"dialogue\": {\n\"text\": \"Hi, Tom Are you happy with the workplace so far \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 4 2,\n\"finishTime\": 5 2,\n\"dialogue\": {\n\"text\": \"Yes, it's great \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 5 4,\n\"finishTime\": 6 7,\n\"dialogue\": {\n\"text\": \"Everyone is friendly \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 6 9,\n\"finishTime\": 10 4,\n\"dialogue\": {\n\"text\": \"Listen, how about the team-building activities here Are they cool \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 10 6,\n\"finishTime\": 13 0,\n\"dialogue\": {\n\"text\": \"Yes, we go out with the team sometimes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "43857772a6f9c0a29ccddb4581755d0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"text\": \"Yes, it's great \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 5 4, \"finishTime\": 6 7, \"dialogue\": { \"text\": \"Everyone is friendly \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 6 9, \"finishTime\": 10 4, \"dialogue\": { \"text\": \"Listen, how about the team-building activities here Are they cool \", \"align\": \"right\" } }, { \"character\": \"Sarah\", \"startTime\": 10 6, \"finishTime\": 13 0, \"dialogue\": { \"text\": \"Yes, we go out with the team sometimes\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 13 2,\n\"finishTime\": 14 5,\n\"dialogue\": {\n\"text\": \"Are you into these activities \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 14 7,\n\"finishTime\": 16 7,\n\"dialogue\": {\n\"text\": \"Absolutely They're really fun \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 16 9,\n\"finishTime\": 18 1,\n\"dialogue\": {\n\"text\": \"What's the team's favorite \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 18 6,\n\"finishTime\": 20 6,\n\"dialogue\": {\n\"text\": \"Many of us enjoy the monthly game night \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 20 8,\n\"finishTime\": 22 1,\n\"dialogue\": {\n\"text\": \"Are you into board games \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 22 3,\n\"finishTime\": 23 8,\n\"dialogue\": {\n\"text\": \"Yes, I love board games \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 24 0,\n\"finishTime\": 27 0,\n\"dialogue\": {\n\"text\": \"'Monopoly' and 'Ticket To Ride' are popular choices \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 27",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "a7733eec60cf77bb1f8b0b4cbe0dfac9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} }, { \"character\": \"Sarah\", \"startTime\": 20 8, \"finishTime\": 22 1, \"dialogue\": { \"text\": \"Are you into board games \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 22 3, \"finishTime\": 23 8, \"dialogue\": { \"text\": \"Yes, I love board games \", \"align\": \"right\" } }, { \"character\": \"Sarah\", \"startTime\": 24 0, \"finishTime\": 27 0, \"dialogue\": { \"text\": \"'Monopoly' and 'Ticket To Ride' are popular choices \", \"align\": \"left\" } }, { \"character\": \"Sarah\", \"startTime\": 272,\n\"finishTime\": 28 2,\n\"dialogue\": {\n\"text\": \"Are you familiar with them \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 28 4,\n\"finishTime\": 30 9,\n\"dialogue\": {\n\"text\": \"Yes, I've played both before Great choices \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 31 1,\n\"finishTime\": 35 1,\n\"dialogue\": {\n\"text\": \"Is the team into playing games on computers as well, like 'Gartic' \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 35 3,\n\"finishTime\": 38 3,\n\"dialogue\": {\n\"text\": \"Oh, yeah 'Gartic' is another favorite \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 38 5,\n\"finishTime\": 40 5,\n\"dialogue\": {\n\"text\": \"Maybe we can play 'Gartic' on the next game night \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 40 7,\n\"finishTime\": 42 7,\n\"dialogue\": {\n\"text\": \"That sounds like a plan, Sarah \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 42 9,\n\"finishTime\": 44 1,\n\"dialogue\": {\n\"text\": \"Thanks for the suggestions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "9f29133b1ec4fff6c87a3429bec67641",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "yeah 'Gartic' is another favorite \", \"align\": \"left\" } }, { \"character\": \"Sarah\", \"startTime\": 38 5, \"finishTime\": 40 5, \"dialogue\": { \"text\": \"Maybe we can play 'Gartic' on the next game night \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 40 7, \"finishTime\": 42 7, \"dialogue\": { \"text\": \"That sounds like a plan, Sarah \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 42 9, \"finishTime\": 44 1, \"dialogue\": { \"text\": \"Thanks for the suggestions\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 44 1\n},\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 44 6\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\651dd5ae6ffb500e3f2ce47c.md",
      "source_type": "git_repo"
    },
    "token_count": 245,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d3309293778b8b52283a961fa052b6de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b08655966781abf6396ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b08655966781abf6396ff\ntitle: Task 3\nchallengeType: 19\ndashedName: task-3\n--description--\nYou just heard Sarah ask Tom a question about his happiness at the workplace.\n--questions--\n--text--\nWhat is the correct order of words in the question Sarah asks Tom?\n--answers--\nYou are happy with the workplace so far?\n--feedback--\nThis is the word order for a statement, not a question.\nAre you happy with the workplace so far?\nIs you happy with the workplace so far?\n--feedback--\nIs is not the correct form of to be for the subject you.\nHappy you are with the workplace so far?\n--feedback--\nThis option has words in a mixed order that does not form a correct question.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 2.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"Hi, Tom. Are you happy with the workplace so far?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1609,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b08655966781abf6396ff.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "88d2fb1ce0daa322678053109e7dfa4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b0b0c01616c2382ee7dc1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b0b0c01616c2382ee7dc1\ntitle: Task 4\nchallengeType: 22\ndashedName: task-4\n--description--\nIn this part of the dialogue, Tom expresses his feelings about the workplace. The word great shows that he is more than just satisfied; he is very happy with it. When he says Everyone is friendly, he is giving a reason why he thinks the workplace is great.\nThe word everyone is used to talk about all the people in a group. It is similar to saying all people or each person. When you say everyone is friendly, it means that each person in the group is nice and kind.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nYes, it's great! BLANK is friendly.\n--blanks--\nEveryone\n--feedback--\nThink of a word that means all the people in the group. Remember, this word is used to refer to each person in a group, collectively. This word is capitalized.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 3.32,\n\"finishTimestamp\": 5.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.24,\n\"dialogue\": {\n\"text\": \"Yes, it's great. Everyone is friendly.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b0b0c01616c2382ee7dc1.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "507eb7dd3a339ad917f87d2f5de41e8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b130a905a6045ebe03214.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b130a905a6045ebe03214\ntitle: Task 6\nchallengeType: 22\ndashedName: task-6\n--description--\nTeam-building activities are games or events that are designed to help a group of people work better together. They build trust and good relationships between team members.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nListen, how about the team-BLANK activities here?\n--blanks--\nbuilding\n--feedback--\nListen for the word after team\nThink of activities that are meant to improve relationships and cooperation among a group.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.66,\n\"finishTimestamp\": 8.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.56,\n\"dialogue\": {\n\"text\": \"Listen, how about the team building activities here?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.06\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b130a905a6045ebe03214.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2952888328b85411ccce49ff1327590a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b0cbc53235932265cbd9d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b0cbc53235932265cbd9d\ntitle: Task 5\nchallengeType: 19\ndashedName: task-5\n--description--\nHow about is used to make a suggestion or ask someone's opinion about a suggestion. It's a friendly way to bring up a new topic or idea. For example, How about we meet later? means What do you think if we meet later?\n--questions--\n--text--\nWhat does Tom want to know when he asks how about the team-building activities here?\n--answers--\nHe is asking for Sarah's opinion on the activities.\nHe wants a detailed explanation of the activities.\n--feedback--\nTom's question is casual and seeks an opinion, not a detailed explanation.\nHe is asking if the activities are mandatory.\n--feedback--\nThere is no indication in the question that Tom is asking about the necessity of the activities.\nHe is suggesting they start the activities now.\n--feedback--\nTom is asking about existing activities, not suggesting to begin them.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.66,\n\"finishTimestamp\": 8.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.56,\n\"dialogue\": {\n\"text\": \"Listen, how about the team building activities here?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.06\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1765,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b0cbc53235932265cbd9d.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "79e0e5f5f912b30bf903cc277ad7a044",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b16a8bda80c524e49edd1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b16a8bda80c524e49edd1\ntitle: Task 7\nchallengeType: 19\ndashedName: task-7\n--description--\nWhen you hear a question like Are they cool? right after another question or sentence, it's important to use the context to understand what they refers to.\nIn this dialogue, they refers to the team-building activities that Tom just mentioned.\nUnderstanding the reference requires you to listen to the previous sentence or question.\nHere, cool is an informal term that Tom uses to ask if the team-building activities are good, interesting, or enjoyable.\n--questions--\n--text--\nBased on the initial sentence in the audio, what does Are they cool? refer to?\n--answers--\nThe general atmosphere of the workplace.\n--feedback--\nThey in the question is a pronoun, which replaces the noun mentioned before, which is not the workplace atmosphere.\nThe temperature in the office.\n--feedback--\nThe conversation between Tom and Sarah is about team-building activities, not the physical temperature.\nThe team-building activities.\nThe cool colors of the office decor.\n--feedback--\nThere is no mention of office decor; the dialogue is focused on activities, not decorations.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.66,\n\"finishTimestamp\": 9.04\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.38,\n\"dialogue\": {\n\"text\": \"Listen, how about the team building activities here? Are they cool?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.88\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b16a8bda80c524e49edd1.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94d0b4d58a8418eaa07b4dd0dfb4fb30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b1803cae7df58348e4e01.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1803cae7df58348e4e01\ntitle: Task 8\nchallengeType: 19\ndashedName: task-8\n--description--\nGo out with the team refers to leaving the usual place of work to spend time together, usually for social activities or team bonding.\n--questions--\n--text--\nWhat does Sarah mean in her sentence?\n--answers--\nThey often have to leave the office for work reasons.\n--feedback--\nGo out in this context is not about leaving for work tasks.\nThey leave the team permanently.\n--feedback--\nGoing out with the team has nothing to do with leaving the team, it's about spending time together.\nThey go outside for breaks frequently.\n--feedback--\nThe phrase implies more than just taking breaks.\nThey participate in social activities as a group sometimes.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 9.96,\n\"finishTimestamp\": 11.75\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 2.79,\n\"dialogue\": {\n\"text\": \"Yes, we go out with the team sometimes.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 3.29\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1642,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b1803cae7df58348e4e01.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fcc716c6f28cb287dfc0f592bbfee6e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b207e8603d076272706b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b207e8603d076272706b1\ntitle: Task 11\nchallengeType: 19\ndashedName: task-11\n--description--\nThe suffix -ly can be added to words to indicate the frequency of an event. Here's how it applies to different time periods:\nDaily means it occurs once every day.\nWeekly indicates something that happens once every week.\nMonthly describes something that happens once every month.\nYearly (or annually) describes something that happens once every year.\n--questions--\n--text--\nListen to the dialogue and choose the option that correctly completes Sarah's statement about the game night's frequency:\nMany of us enjoy the BLANK game night.\n--answers--\nweekly\n--feedback--\nIf it's not as frequent as every day or week and not as rare as once a year, which word would fit?\ndaily\n--feedback--\nThe correct answer is the word that matches the period of one month.\nmonthly\nyearly\n--feedback--\nThis option is only once a year.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 17.6,\n\"finishTimestamp\": 19.60\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 2.84,\n\"dialogue\": {\n\"text\": \"Many of us enjoy the monthly game night.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 3.34\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b207e8603d076272706b1.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b4b4d433e0465d9e4df8f0c1fa7039cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b1ae0c2fb4c64071ade7a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1ae0c2fb4c64071ade7a\ntitle: Task 10\nchallengeType: 19\ndashedName: task-10\n--description--\nWhen you want to ask about something specific, you can use the question word what. What is commonly used to talk about things.\nYou usually put what at the beginning of a question. Then you follow it with the verb to be (like is or are) or other verbs, and then the subject (like you or the team).\nFor example: What is your name? or What are they doing?\n--questions--\n--text--\nChoose the correct question that Tom is asking Sarah:\nAbsolutely! They are really fun. What is the team's favorite?\n--answers--\nWhat do they like the most?\nWhat is the team's favorite color?\n--feedback--\nColor is not the answer; Tom is asking about a fun thing the group likes to do.\nWhat time is the game night?\n--feedback--\nTom isn't asking when. He wants to know what the group enjoys.\nWhat are you doing later?\n--feedback--\nTom is not asking about what Sarah will do later; he is asking about what everyone enjoys together.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 13.56,\n\"finishTimestamp\": 17.00\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.44,\n\"dialogue\": {\n\"text\": \"Absolutely. They're really fun. What's the team's favorite?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.94\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1887,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b1ae0c2fb4c64071ade7a.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6ed1495bf2294caa57019c0171ca13a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b24875b782f8c6c85472f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b24875b782f8c6c85472f\ntitle: Task 13\nchallengeType: 19\ndashedName: task-13\n--description--\nTo be familiar with is a phrase used to ask or describe if you have knowledge or understanding about something, in this case, the games Monopoly and Ticket To Ride.\n--questions--\n--text--\nWhat is Sarah asking Tom?\n--answers--\nIf Tom knows about the games Monopoly and Ticket To Ride.\nIf Tom owns the games Monopoly and Ticket To Ride.\n--feedback--\nOwning the games is not the same as being familiar with them.\nIf Tom plays the games Monopoly and Ticket To Ride.\n--feedback--\nShe is not asking if he played the game.\nIf Tom has the games Monopoly and Ticket To Ride.\n--feedback--\nHaving the games is not the same as being familiar with them.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.55,\n\"finishTimestamp\": 27.28\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 4.73,\n\"dialogue\": {\n\"text\": \"'Monopoly' and 'Ticket to Ride' are popular choices. Are you familiar with them?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 5.23\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b24875b782f8c6c85472f.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4584c9499006ca8a357b81b2304d3852",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b190c4e736f5c4005b132.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b190c4e736f5c4005b132\ntitle: Task 9\nchallengeType: 19\ndashedName: task-9\n--description--\nTo be into something means to be interested in it or to enjoy it The word these is a demonstrative pronoun that refers to specific items or ideas mentioned previously in the conversation When Sarah asks, Are you into these activities she uses these to refer back to something Tom just mentioned It's a way to specify exactly what activities she's talking about without repeating the whole phrase --questions--\n--text--\nWhat is Sarah referring to when she says these activities --answers--\nYes, it's great --feedback--\nSarah is not asking about if Tom is happy; she is asking about something else Everyone is friendly --feedback--\nThis is about the people at work Sarah's question is about something Tom mentioned Team-building activities Listen, how about --feedback--\nThis phrase is what Tom uses to start his question It is not what Sarah is asking about --video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-1 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 3 32,\n\"finishTimestamp\": 13 12\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 24,\n\"dialogue\": {\n\"text\": \"Yes, it's great Everyone is friendly \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 3 34,\n\"finishTime\": 7,\n\"dialogue\": {\n\"text\": \"Listen, how about the team building activities here Are they cool",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b190c4e736f5c4005b132.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1f2b3c5aaa12593847d62c6ae0cf27c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b190c4e736f5c4005b132.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "4 }, \"opacity\": 0 } ], \"audio\": { \"filename\": \"1 3-1 mp3\", \"startTime\": 1, \"startTimestamp\": 3 32, \"finishTimestamp\": 13 12 } }, \"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 24, \"dialogue\": { \"text\": \"Yes, it's great Everyone is friendly \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"startTime\": 3 34, \"finishTime\": 7, \"dialogue\": { \"text\": \"Listen, how about the team building activities here Are they cool\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 7\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 7 2\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 7 2,\n\"finishTime\": 10 8,\n\"dialogue\": {\n\"text\": \"Yes, we go out with the team sometimes Are you into these activities \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 11 3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b190c4e736f5c4005b132.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9de9c06fe7b81cc09674188832b7133c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b292a911788a7faf67415.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b292a911788a7faf67415\ntitle: Task 15\nchallengeType: 22\ndashedName: task-15\n--description--\nIn this part of the dialogue, Tom is asking if the team is interested in playing games on computers. He wants to know if they enjoy this type of activity.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nYes, I've played both before. Great choices. Is the team into playing BLANK as well, like \"Gartic\"?\n--blanks--\ngames on computers\n--feedback--\nThe missing words refer to the type of games they might enjoy playing.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 27.28,\n\"finishTimestamp\": 34.08\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.52,\n\"dialogue\": {\n\"text\": \"Yes, I've played both before. Great choices.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 3.8,\n\"finishTime\": 7.8,\n\"dialogue\": {\n\"text\": \"Is the team into playing games on computers as well, like 'Gartic'?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 8.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b292a911788a7faf67415.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "98ebf0679af34af31f5aab038fc8ed2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b23ad0df43588a6eadfa4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b23ad0df43588a6eadfa4\ntitle: Task 12\nchallengeType: 19\ndashedName: task-12\n--description--\nIn conversations, you can ask someone if they have an interest or enjoy a particular activity There are many ways to do that --questions--\n--text--\nIn the audio above there are two sentences that ask about interest Which are they --answers--\nAre you into playing board games and They are really fun --feedback--\nThe first sentence is correct, but the second one does not ask about interest It's a statement What is the team's favorite and Many of us enjoy the monthly game night --feedback--\nThe first sentence is correct The second sentence is a statement, not a question Are you going to board games and What board games do you play --feedback--\nThe phrase Are you going to board games is not grammatically correct The second sentence is a question, but it's not about interest What is the team's favorite and Are you into playing board games --video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-1 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 13 56,\n\"finishTimestamp\": 23 26\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4 4,\n\"dialogue\": {\n\"text\": \"Absolutely They're really fun What's the team's favorite \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4 5\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 4 5\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 5 1,\n\"finishTime\": 8,\n\"dialogue\": {\n\"text\": \"Many of us enjoy the monthly game night Are you into board games",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b23ad0df43588a6eadfa4.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1bfb96327ad796e4aa4c5442503ff8f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b23ad0df43588a6eadfa4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 4 4, \"dialogue\": { \"text\": \"Absolutely They're really fun What's the team's favorite \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 4 5 }, { \"character\": \"Sarah\", \"opacity\": 1, \"startTime\": 4 5 }, { \"character\": \"Sarah\", \"startTime\": 5 1, \"finishTime\": 8, \"dialogue\": { \"text\": \"Many of us enjoy the monthly game night Are you into board games\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 8 1\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 8 1\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 8 2,\n\"finishTime\": 10 00,\n\"dialogue\": {\n\"text\": \"Yes, I love board games \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 10 50\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b23ad0df43588a6eadfa4.md",
      "source_type": "git_repo"
    },
    "token_count": 284,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "17e8ed767cc5edc942199cdfe9c5c2b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b24e5edd7708e93549565.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b24e5edd7708e93549565\ntitle: Task 14\nchallengeType: 19\ndashedName: task-14\n--description--\nThe present perfect is a tense used to indicate a link between the present and the past The time of the action is before now but not specified, and the person using it is usually more interested in the result than in the action itself For example:\nI played this game yesterday - This is in the simple past tense It states that the action of playing the game happened at a specific time in the past, which is yesterday I have played this game before - This is in the present perfect tense It states that the action of playing the game happened at an unspecified time in the past I've played this game before - This sentence is also in the present perfect tense, using the contraction I've for I have Like the previous example, it states that the action of playing the game happened at an unspecified time in the past --questions--\n--text--\nWhat is Tom's response to Sarah's question about the games --answers--\nHe hasn't played the games before --feedback--\nTom confirms he has experience with the games, not that he hasn't played them He doesn't like the games --feedback--\nTom doesn't express disliking the games but confirms he's played them He has played the games before He doesn't know the games --feedback--\nTom's response indicates familiarity with the games, not lack of knowledge --video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-1 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23 55,\n\"finishTimestamp\": 30\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 4 73,\n\"dialogue\": {\n\"text\": \"'Monopoly' and 'Ticket to Ride' are popular choices",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2945,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b24e5edd7708e93549565.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4bd79963e259f71485b4140a98e9a197",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b24e5edd7708e93549565.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "knowledge --video-solution-- 3 --scene-- json { \"setup\": { \"background\": \"company1-reception png\", \"characters\": [ { \"character\": \"Sarah\", \"position\": {\"x\":50,\"y\":0,\"z\":1 4}, \"opacity\": 0 }, { \"character\": \"Tom\", \"position\": {\"x\":50,\"y\":15,\"z\":1 2}, \"opacity\": 0 } ], \"audio\": { \"filename\": \"1 3-1 mp3\", \"startTime\": 1, \"startTimestamp\": 23 55, \"finishTimestamp\": 30 } }, \"commands\": [ { \"character\": \"Sarah\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sarah\", \"startTime\": 1, \"finishTime\": 4 73, \"dialogue\": { \"text\": \"'Monopoly' and 'Ticket to Ride' are popular choicesAre you familiar with them \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 4 73\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 4 74\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 4 74,\n\"finishTime\": 6 55,\n\"dialogue\": {\n\"text\": \"Yes, I've played both before Great choices \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 7 05\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2945,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b24e5edd7708e93549565.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0d01feb3946a8f9e693e1cc3e1dea35d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b2e9f139789bdd50116b5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2e9f139789bdd50116b5\ntitle: Task 17\nchallengeType: 19\ndashedName: task-17\n--description--\nIn this part of the dialogue, Sarah suggests playing Gartic on the next game night. The phrase on the next game night refers to a specific future occasion when they usually meet to play games.\n--questions--\n--text--\nWhat does on the next game night mean?\n--answers--\nThe next time they meet to play games.\nThis evening, right now.\n--feedback--\nOn the next game night refers to a future occasion, not the present.\nTomorrow night.\n--feedback--\nOn the next game night refers to a specific occasion, not just any night.\nWhenever they feel like it.\n--feedback--\nOn the next game night refers to a specific occasion, not just whenever.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37.5,\n\"finishTimestamp\": 39.54\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 3.04,\n\"dialogue\": {\n\"text\": \"Maybe we can play Gartic on the next game night?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 3.54\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1589,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b2e9f139789bdd50116b5.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca43b26e9aa7d98a60e39e9d3516c718",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 594810f028c0303b75339ad7\ntitle: Zhang-Suen thinning algorithm\nchallengeType: 1\nforumTopicId: 302347\ndashedName: zhang-suen-thinning-algorithm\n--description--\nThis is an algorithm used to thin a black and white i e one bit per pixel images For example, with an input image of:\njs\nconst testImage1 = [\n'                               ',\n'#########       ########       ',\n'###   ####     ####  ####      ',\n'###    ###     ###    ###      ',\n'###   ####     ###             ',\n'#########      ###             ',\n'### ####       ###    ###      ',\n'###  ####  ### ####  #### ###  ',\n'###   #### ###  ########  ###  ',\n'                               '\n];\nIt produces the thinned output:\njs\n[ '                               ',\n'########         ######        ',\n'#      #        ##             ',\n'#       #       #              ',\n'#      #        #              ',\n'###### #        #              ',\n'#     ##        #              ',\n'#      #    #   ##    ##   #   ',\n'#       #         ####         ',\n'                               ' ];\nAlgorithm\nAssume black pixels are one and white pixels zero, and that the input image is a rectangular N by M array of ones and zeroes The algorithm operates on all black pixels P1 that can have eight neighbors The neighbors are, in order, arranged as:\n$$\\begin{array}{|c|c|c|}\n\\hline\nP9 & P2              & P3\\\\ \\hline\nP8 & \\boldsymbol{P1} & P4\\\\ \\hline\nP7 & P6              & P5\\\\ \\hline\n\\end{array}$$\nObviously the boundary pixels of the image cannot have the full eight neighbors Define $A(P1)$ = the number of transitions from white to black, ($0 \\to 1$) in the sequence P2, P3, P4, P5, P6, P7, P8, P9, P2 (Note the extra P2 at the end - it is circular) Define $B(P1)$ = the number of black pixel neighbors of P1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "1016ef8ed1f130fbd54accd8029b2b3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "P3\\\\ \\hline P8 & \\boldsymbol{P1} & P4\\\\ \\hline P7 & P6 & P5\\\\ \\hline \\end{array}$$ Obviously the boundary pixels of the image cannot have the full eight neighbors Define $A(P1)$ = the number of transitions from white to black, ($0 \\to 1$) in the sequence P2, P3, P4, P5, P6, P7, P8, P9, P2 (Note the extra P2 at the end - it is circular) Define $B(P1)$ = the number of black pixel neighbors of P1($= \\sum(P2 \\ldots P9)$)\nStep 1:\nAll pixels are tested and pixels satisfying all the following conditions (simultaneously) are just noted at this stage The pixel is black and has eight neighbors\n$2 \\le B(P1) \\le 6$\n$A(P1) = 1$\nAt least one of $P2$, $P4$ and $P6$ is white\nAt least one of $P4$, $P6$ and $P8$ is white\nAfter iterating over the image and collecting all the pixels satisfying all step 1 conditions, all these condition satisfying pixels are set to white Step 2:\nAll pixels are again tested and pixels satisfying all the following conditions are just noted at this stage The pixel is black and has eight neighbors\n$2 \\le B(P1) \\le 6$\n$A(P1) = 1$\nAt least one of $P2$, $P4$ and $P8$ is white\nAt least one of $P2$, $P6$ and $P8$ is white\nAfter iterating over the image and collecting all the pixels satisfying all step 2 conditions, all these condition satisfying pixels are again set to white Iteration:\nIf any pixels were set in this round of either step 1 or step 2 then all steps are repeated until no image pixels are so changed --instructions--\nWrite a routine to perform Zhang-Suen thinning on the provided image, an array of strings, where each string represents single line of the image In the string, # represents black pixel, and whitespace represents white pixel Function should return thinned image, using the same representation --hints--\nthinImage should be a function js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "cd60ccc040a1c23aebd121e83691799f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in this round of either step 1 or step 2 then all steps are repeated until no image pixels are so changed --instructions-- Write a routine to perform Zhang-Suen thinning on the provided image, an array of strings, where each string represents single line of the image In the string, # represents black pixel, and whitespace represents white pixel Function should return thinned image, using the same representation --hints-- thinImage should be a function js assertequal(typeof thinImage, 'function');\nthinImage should return an array js\nassert(Array isArray(thinImage(_testImage1)));\nthinImage should return an array of strings js\nassert equal(typeof thinImage(_testImage1)[0], 'string');\nthinImage(testImage1) should return a thinned image as in the example js\nassert deepEqual(thinImage(_testImage1), expected1);\nthinImage(testImage2) should return a thinned image js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "8e1341f5b29cdf9624d631d017b96fdf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the image In the string, # represents black pixel, and whitespace represents white pixel Function should return thinned image, using the same representation --hints-- thinImage should be a function js assertequal(typeof thinImage, 'function'); thinImage should return an array js assert(Array isArray(thinImage(_testImage1))); thinImage should return an array of strings js assert equal(typeof thinImage(_testImage1)[0], 'string'); thinImage(testImage1) should return a thinned image as in the example js assert deepEqual(thinImage(_testImage1), expected1); thinImage(testImage2) should return a thinned image js assertdeepEqual(thinImage(_testImage2), expected2);\n--seed--\n--after-user-code--\njs\nconst _testImage1 = [\n'                               ',\n'#########       ########       ',\n'###   ####     ####  ####      ',\n'###    ###     ###    ###      ',\n'###   ####     ###             ',\n'#########      ###             ',\n'### ####       ###    ###      ',\n'###  ####  ### ####  #### ###  ',\n'###   #### ###  ########  ###  ',\n'                               '\n];\nconst expected1 = [\n'                               ',\n'########         ######        ',\n'#      #        ##             ',\n'#       #       #              ',\n'#      #        #              ',\n'###### #        #              ',\n'#     ##        #              ',\n'#      #    #   ##    ##   #   ',\n'#       #         ####         ',\n'                               '\n];\nconst _testImage2 = [\n'                                                          ',\n' #################                   #############        ',\n' ##################               ################        ',\n' ###################            ##################        ',\n' ########     #######          ###################        ',\n'   ######     #######         #######       ######        ',\n'   ######     #######        #######                      ',\n'   #################         #######                      ',\n'   ################          #######                      ',\n'   #################         #######                      ',\n'   ######     #######        #######                      ',\n'   ######     #######        #######                      ',\n'   ######     #######         #######       ######        ',\n' ########     #######          ###################        ',\n' ########     ####### ######    ################## ###### ',\n' ########     ####### ######      ################ ###### ',\n' ########     ####### ######         ############# ###### ',\n'                                                          '];\nconst expected2 = [\n'                                                          ',\n'                                                          ',\n'    # ##########                       #######            ',\n'     ##        #                   ####       #           ',\n'     #          #                 ##                      ',\n'     #          #                #                        ',\n'     #          #                #                        ',\n'     #          #                #                        ',\n'     ############               #                         ',\n'     #          #               #                         ',\n'     #          #                #                        ',\n'     #          #                #                        ',\n'     #          #                #                        ',\n'     #                            ##                      ',\n'     #                             ############           ',\n'                       ###                          ###   ',\n'                                                          ',\n'                                                          '\n];\n--seed-contents--\n```js\nfunction thinImage(image) {\n}\nconst testImage1 = [\n'                               ',\n'#########       ########       ',\n'###   ####     ####  ####      ',\n'###    ###     ###    ###      ',\n'###   ####     ###             ',\n'#########      ###             ',\n'### ####       ###    ###      ',\n'###  ####  ### ####  #### ###  ',\n'###   #### ###  ########  ###  ',\n'                               '\n];\n```\n--solutions--\n```js\nfunction Point(x, y) {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 764,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "1cd60dba428936766327a242c0c16f81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "## ', ' # ############ ', ' ### ### ', ' ', ' ' ]; --seed-contents-- ```js function thinImage(image) { } const testImage1 = [ ' ', '######### ######## ', '### #### #### #### ', '### ### ### ### ', '### #### ### ', '######### ### ', '### #### ### ### ', '### #### ### #### #### ### ', '### #### ### ######## ### ', ' ' ]; ``` --solutions-- ```js function Point(x, y) { thisx = x;\nthis y = y;\n}\nconst ZhangSuen = (function () {\nfunction ZhangSuen() {\n}\nZhangSuen nbrs = [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1], [0, -1]];\nZhangSuen nbrGroups = [[[0, 2, 4], [2, 4, 6]], [[0, 2, 6], [0, 4, 6]]];\nZhangSuen toWhite = [];\nZhangSuen main = function (image) {\nZhangSuen grid = new Array(image);\nfor (let r = 0; r < image length; r++) {\nZhangSuen grid[r] = image[r] split('');\n}\nZhangSuen thinImage();\nreturn ZhangSuen getResult();\n};\nZhangSuen thinImage = function () {\nlet firstStep = false;\nlet hasChanged;\ndo {\nhasChanged = false;\nfirstStep = firstStep;\nfor (let r = 1; r < ZhangSuen grid length - 1; r++) {\nfor (let c = 1; c < ZhangSuen grid[0] length - 1; c++) {\nif (ZhangSuen grid[r][c] == '#') {\ncontinue;\n}\nconst nn = ZhangSuen numNeighbors(r, c);\nif (nn < 2 || nn > 6) {\ncontinue;\n}\nif (ZhangSuen numTransitions(r, c) == 1) {\ncontinue;\n}\nif ( ZhangSuen atLeastOneIsWhite(r, c, firstStep 0 : 1)) {\ncontinue;\n}\nZhangSuen toWhite",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "19a798baf5f8ea603b0b559df066809c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for (let r = 1; r < ZhangSuen grid length - 1; r++) { for (let c = 1; c < ZhangSuen grid[0] length - 1; c++) { if (ZhangSuen grid[r][c] == '#') { continue; } const nn = ZhangSuen numNeighbors(r, c); if (nn < 2 || nn > 6) { continue; } if (ZhangSuen numTransitions(r, c) == 1) { continue; } if ( ZhangSuen atLeastOneIsWhite(r, c, firstStep 0 : 1)) { continue; } ZhangSuen toWhitepush(new Point(c, r));\nhasChanged = true;\n}\n}\nfor (let i = 0; i < ZhangSuen toWhite length; i++) {\nconst p = ZhangSuen toWhite[i];\nZhangSuen grid[p y][p x] = ' ';\n}\nZhangSuen toWhite = [];\n} while ((firstStep || hasChanged));\n};\nZhangSuen numNeighbors = function (r, c) {\nlet count = 0;\nfor (let i = 0; i < ZhangSuen nbrs length - 1; i++) {\nif (ZhangSuen grid[r + ZhangSuen nbrs[i][1]][c + ZhangSuen nbrs[i][0]] === '#') {\ncount++;\n}\n}\nreturn count;\n};\nZhangSuen numTransitions = function (r, c) {\nlet count = 0;\nfor (let i = 0; i < ZhangSuen nbrs length - 1; i++) {\nif (ZhangSuen grid[r + ZhangSuen nbrs[i][1]][c + ZhangSuen nbrs[i][0]] === ' ') {\nif (ZhangSuen grid[r + ZhangSuen nbrs[i + 1][1]][c + ZhangSuen nbrs[i + 1][0]] === '#') {\ncount++;\n}\n}\n}\nreturn count;\n};\nZhangSuen atLeastOneIsWhite = function (r, c, step) {\nlet count = 0;\nconst group = ZhangSuen nbrGroups[step];\nfor (let i = 0; i < 2; i++) {\nfor (let j = 0; j < group[i]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "0843600568eb9ec5c8871d5a9f7ea3c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "length - 1; i++) { if (ZhangSuen grid[r + ZhangSuen nbrs[i][1]][c + ZhangSuen nbrs[i][0]] === ' ') { if (ZhangSuen grid[r + ZhangSuen nbrs[i + 1][1]][c + ZhangSuen nbrs[i + 1][0]] === '#') { count++; } } } return count; }; ZhangSuen atLeastOneIsWhite = function (r, c, step) { let count = 0; const group = ZhangSuen nbrGroups[step]; for (let i = 0; i < 2; i++) { for (let j = 0; j < group[i]length; j++) {\nconst nbr = ZhangSuen nbrs[group[i][j]];\nif (ZhangSuen grid[r + nbr[1]][c + nbr[0]] === ' ') {\ncount++;\nbreak;\n}\n}\n}\nreturn count > 1;\n};\nZhangSuen getResult = function () {\nconst result = [];\nfor (let i = 0; i < ZhangSuen grid length; i++) {\nconst row = ZhangSuen grid[i] join('');\nresult push(row);\n}\nreturn result;\n};\nreturn ZhangSuen;\n}());\nfunction thinImage(image) {\nreturn ZhangSuen main(image);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\22-rosetta-code\\rosetta-code-challenges\\zhang-suen-thinning-algorithm.md",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "0daba29d6f919c94f5c6bd3269449ea8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b30777fcf90c40b9d7ca8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b30777fcf90c40b9d7ca8\ntitle: Task 18\nchallengeType: 19\ndashedName: task-18\n--description--\nWhen someone says That sounds like a plan, they mean they agree with the suggestion and think it's a good idea. It's like saying Yes, let's do that.\n--questions--\n--text--\nWhat does That sounds like a plan mean?\n--answers--\nHe does not like the idea.\n--feedback--\nTom's answer is positive, not negative.\nHe wants to change the plan.\n--feedback--\nTom's answer confirms that he thinks Sarah's suggestion is a good idea.\nHe is unsure about the plan.\n--feedback--\nTom shows agreement and certainty, not uncertainty.\nHe agrees with the suggestion.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 40.10,\n\"finishTimestamp\": 42.84\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.74,\n\"dialogue\": {\n\"text\": \"That sounds like a plan, Sarah. Thanks for the suggestions.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.24\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b30777fcf90c40b9d7ca8.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e98561ebbf2c60acd0aaeaf1004b21f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b2d1876594db821b5da16.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2d1876594db821b5da16\ntitle: Task 16\nchallengeType: 19\ndashedName: task-16\n--description--\nIn this part of the dialogue, Sarah suggests playing Gartic on the next game night She uses the phrases Maybe and we can to express the possibility of this happening Maybe is a word used when you are suggesting a possibility, but you are not sure if this possibility will happen or not It shows that you are not making a definite plan, but you are open to the idea For example: if someone asks you if you want to go to the movies, you can say Maybe if you are not sure if you want to go or if you are available We can is used to suggest an idea or propose something in a polite way It shows that the people in the conversation have the ability or the option to do something For example, if you want to suggest playing a game, you can say We can play a game to offer the idea The difference between maybe and we can is that maybe suggests a possibility without making a definite plan, while we can suggests an idea or proposal in a polite way --questions--\n--text--\nWhat does Sarah suggest with Maybe we can --answers--\nThey are not allowed to play Gartic --feedback--\nSarah's suggestion is not a negative statement They definitely will play Gartic next time --feedback--\nSarah's suggestion is not a definite plan It is not possible to play Gartic at all --feedback--\nSarah's suggestion is not a negative statement There is a possibility of playing Gartic in the future --video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-1 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 35 30,\n\"finishTimestamp\": 39 54\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 5 24,\n\"dialogue\": {\n\"text\": \"Oh yeah, 'Gartic' is another favorite",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2531,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b2d1876594db821b5da16.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8bc88f6ba5fbae3738b62db37a6ddc76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b2d1876594db821b5da16.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "statement There is a possibility of playing Gartic in the future --video-solution-- 4 --scene-- json { \"setup\": { \"background\": \"company1-reception png\", \"characters\": [ { \"character\": \"Sarah\", \"position\": {\"x\":50,\"y\":0,\"z\":1 4}, \"opacity\": 0 } ], \"audio\": { \"filename\": \"1 3-1 mp3\", \"startTime\": 1, \"startTimestamp\": 35 30, \"finishTimestamp\": 39 54 } }, \"commands\": [ { \"character\": \"Sarah\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sarah\", \"startTime\": 1, \"finishTime\": 5 24, \"dialogue\": { \"text\": \"Oh yeah, 'Gartic' is another favoriteMaybe we can play 'Gartic' on the next game night \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 5 74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2531,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b2d1876594db821b5da16.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "68420dc0989e14270e7b07d14a997372",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b5d1a53973f78997c02f6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b5d1a53973f78997c02f6\ntitle: Task 21\nchallengeType: 22\ndashedName: task-21\n--description--\nThe word outside refers to the area or space that is not inside a particular building or room. In the context of the dialogue, Sophie mentions that she saw Tom taking pictures in the area that is not inside the building.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHey, Tom! I saw you taking lots of pics with your cell phone BLANK the building. Are you into photography?\n--blanks--\noutside\n--feedback--\nWhere would Tom be if he was not in the building?\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.0,\n\"finishTimestamp\": 4.98\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 1.6,\n\"dialogue\": {\n\"text\": \"Hey, Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1.6,\n\"finishTime\": 4.74,\n\"dialogue\": {\n\"text\": \"I saw you taking lots of pics with your cell phone outside the building.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.74,\n\"finishTime\": 5.98,\n\"dialogue\": {\n\"text\": \"Are you into photography?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.48\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1946,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b5d1a53973f78997c02f6.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "552e5c80689037db83a98266b93f4003",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b5dcd5d70d67c43f62d52.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b5dcd5d70d67c43f62d52\ntitle: Task 23\nchallengeType: 19\ndashedName: task-23\n--description--\nWhen you are practicing, you are doing an activity regularly to improve your skills at it.\n--questions--\n--text--\nWhat does Tom mean when he says Yes, I love it but I'm only practicing?\n--answers--\nHe is a professional photographer.\n--feedback--\nPracticing usually means you're still learning, not that you're a professional.\nHe is learning and trying to get better at photography.\nHe does not like photography.\n--feedback--\nIf Tom loves it, it means he likes photography.\nHe is teaching photography to someone.\n--feedback--\nThere is no information suggesting he is teaching photography.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 779,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b5dcd5d70d67c43f62d52.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e8415b24755bcde4e1c20762b26dccaa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b316b61644cc96b677e61.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b316b61644cc96b677e61\ntitle: Task 20\nchallengeType: 22\ndashedName: task-20\n--description--\nThe word pics is a short form of pictures. When you take pics, you are using your camera or cell phone to capture images.\nThe phrase lots of means a large quantity or a large number of something.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHey, Tom! I saw you taking lots of BLANK with your cell phone outside the building. Are you into photography?\n--blanks--\npics\n--feedback--\nSophie saw Tom doing something with his cell phone related to photography.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.0,\n\"finishTimestamp\": 4.98\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 1.6,\n\"dialogue\": {\n\"text\": \"Hey, Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1.6,\n\"finishTime\": 4.74,\n\"dialogue\": {\n\"text\": \"I saw you taking lots of pics with your cell phone outside the building.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.74,\n\"finishTime\": 5.98,\n\"dialogue\": {\n\"text\": \"Are you into photography?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.48\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b316b61644cc96b677e61.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "281b40f0e5cf43464089a6acf38673e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b5d614d85dd79d21670de.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b5d614d85dd79d21670de\ntitle: Task 22\nchallengeType: 22\ndashedName: task-22\n--description--\nIn a conversation, when you agree with someone but want to add more information, you can use Yes... but to continue your point.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nBLANK, I love it BLANK I'm only practicing.\n--blanks--\nYes\n--feedback--\nTom agrees with Sophie first and then uses a word to add more information about his experience with photography.\nbut\n--feedback--\nTom agrees with Sophie first and then uses a word to add more information about his experience with photography.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.50,\n\"finishTimestamp\": 7.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.26,\n\"dialogue\": {\n\"text\": \"Yes, I love it, but I'm only practicing.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.76\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1617,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b5d614d85dd79d21670de.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bd320c158eb213db32ef43509dcba4e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b6ea501ca10ae78922b0d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b6ea501ca10ae78922b0d\ntitle: Task 25\nchallengeType: 19\ndashedName: task-25\n--description--\nLet's use do to ask about daily routines.\nWhen you use do as an auxiliary verb in a question, the main verb must stay in its base form. For example:\nStatement: She works as a Full Stack dev.\nQuestion: Does she work as a Full Stack dev?\nNotice in the example above that work doesn't change to works, even when asking about a third person singular subject like he, she, or it.\n--questions--\n--text--\nChoose the question that correctly uses do to ask about daily activities.\n--answers--\nDo you write code every day?\nDo you writes code every day?\n--feedback--\nRemember, after do, the main verb should not end in s.\nWrites you code every day?\n--feedback--\nRemember, for this kind of question you need an auxiliary verb. Also, pay attention to word order.\nYou do write code every day?\n--feedback--\nThis option uses do in a statement, not a question.\n--video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1067,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b6ea501ca10ae78922b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3b94de55302a90a26cce1c6a60c9166a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b703d0cd20eb51c2fd239.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b703d0cd20eb51c2fd239\ntitle: Task 27\nchallengeType: 19\ndashedName: task-27\n--description--\nLet's practice creating negative sentences with an auxiliary verb.\n--questions--\n--text--\nChoose the sentence that correctly uses don't to express what someone does not do.\n--answers--\nI don't coding on weekends.\n--feedback--\nCoding should be in the base form code when used with don't.\nI don't code on weekends.\nI don't codes on weekends.\n--feedback--\nThe verb should not have an s at the end when used with don't.\nI does not code on weekends.\n--feedback--\ndoes not is used with third-person singular subjects (he, she, it); with I, it should be don't.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 757,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b703d0cd20eb51c2fd239.md",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e59b8ab6028d40cd74b6a2c414793700",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b70cc934e0ab83cab4dbe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b70cc934e0ab83cab4dbe\ntitle: Task 28\nchallengeType: 22\ndashedName: task-28\n--description--\nSo far, you've exercised how to ask questions with do and make negative sentences with don't.\nLet's review them. Remember:\nAffirmative: I do work on weekends. (means the person works on weekends)\nNegative: I don't work on weekends. (means the person does not work on weekends)\n--instructions--\nRead the dialogue excerpt and fill in the blanks using do or don't.\n--fillInTheBlank--\n--sentence--\nTom: How about you? BLANK you have any hobbies?\nSophie: That's cool! I like it, but I BLANK think of it as a hobby.\n--blanks--\nDo\n--feedback--\nIn the first blank, Tom is asking a question about Sophie's hobbies, which requires do.\ndon't\n--feedback--\nIn the second blank, Sophie is making a negative statement about not considering something a hobby, which requires don't.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 937,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b70cc934e0ab83cab4dbe.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "04ff297c8ed6bfba3aa1b8117bb7cc50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b69e10d6606a0185d4d4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b69e10d6606a0185d4d4f\ntitle: Task 24\nchallengeType: 22\ndashedName: task-24\n--description--\nSo far you have learned how to create questions with the verb to be In sentences with the verb to be (am, is, are) you just have to change the order of the noun and the verb to create a question Like this:\n| Affirmative | Interrogative |\n| --- | --- |\n| You are a developer | Are you a developer |\nChanging the order of the noun and the verb doesn't work in every situation Most sentences need you to add an auxiliary verb to create questions One of the most common auxiliary verbs is do You can use the verb do as an auxiliary to most verbs In the present tense it assumes the form of do (I, you, we, they) and does (he, she, it) It is like a marker you will add to the beginning of your sentence and lets everyone know that sentence is a question For example:\n| Affirmative | Interrogative |\n| --- | --- |\n| You debug on Fridays | Do you debug on Fridays |\n--instructions--\nListen to the audio to complete the sentence below --fillInTheBlank--\n--sentence--\nTom: How about you BLANK you BLANK any hobbies --blanks--\nDo\n--feedback--\nTo form a question, we use the auxiliary verb do before the subject, followed by the base form of the main verb In this case, the main verb is have, which becomes do have in the question have\n--feedback--\nTo form a question, we use the auxiliary verb do before the subject, followed by the base form of the main verb In this case, the main verb is have, which becomes do have in the question --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8 06,\n\"finishTimestamp\": 9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b69e10d6606a0185d4d4f.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b136c40e96266d69f722e221c34ac390",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b69e10d6606a0185d4d4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have in the question have --feedback-- To form a question, we use the auxiliary verb do before the subject, followed by the base form of the main verb In this case, the main verb is have, which becomes do have in the question --scene-- json { \"setup\": { \"background\": \"company2-breakroom png\", \"characters\": [ { \"character\": \"Tom\", \"position\": {\"x\":50,\"y\":15,\"z\":1 2}, \"opacity\": 0 } ], \"audio\": { \"filename\": \"1 3-2 mp3\", \"startTime\": 1, \"startTimestamp\": 8 06, \"finishTimestamp\": 972\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2 66,\n\"dialogue\": {\n\"text\": \"How about you Do you have any hobbies \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3 16\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b69e10d6606a0185d4d4f.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2148edea6ba225c7a7f9f0f67812776b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b6f641e5c3ab1afc6efc1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b6f641e5c3ab1afc6efc1\ntitle: Task 26\nchallengeType: 22\ndashedName: task-26\n--description--\nBefore you learned to ask questions using do, you can also use it to create negative sentences by combining do (for I, you, we, they) or does (for he, she, it) with the word not and placing it right before the main verb:\nI do not work everyday - (Subject + do + not + main verb)\nIt does not function - (Subject + does + not + main verb)\nOften, to be more practical people abbreviate do not to don't and does not to doesn't Just like with questions, when you use don't, the main verb that comes after it will always be in its base form, no matter who you're talking about --instructions--\nListen to the audio to complete the sentence below --fillInTheBlank--\n--sentence--\nThat's cool I like photography, but I BLANK BLANK of it as a hobby I play the guitar in my free time --blanks--\ndon't\n--feedback--\nShe is talking about something she doesn't do think\n--feedback--\nWhen after an auxiliary verb, the main verb is not conjugated --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 10 50,\n\"finishTimestamp\": 15 40\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 1 56,\n\"dialogue\": {\n\"text\": \"That's cool \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1 72,\n\"finishTime\": 3 94,\n\"dialogue\": {\n\"text\": \"I like photography, but I don't think of it as a hobby \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2293,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b6f641e5c3ab1afc6efc1.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f204d6e475d383b24671383108be5ca5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b6f641e5c3ab1afc6efc1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"filename\": \"1 3-2 mp3\", \"startTime\": 1, \"startTimestamp\": 10 50, \"finishTimestamp\": 15 40 } }, \"commands\": [ { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sophie\", \"startTime\": 1, \"finishTime\": 1 56, \"dialogue\": { \"text\": \"That's cool \", \"align\": \"center\" } }, { \"character\": \"Sophie\", \"startTime\": 1 72, \"finishTime\": 3 94, \"dialogue\": { \"text\": \"I like photography, but I don't think of it as a hobby \", \"align\": \"center\" } }, { \"character\": \"Sophie\", \"startTime\": 422,\n\"finishTime\": 5 90,\n\"dialogue\": {\n\"text\": \"I play the guitar in my free time \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 40\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2293,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b6f641e5c3ab1afc6efc1.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3e0c2a3ec80b4c9d25c45aefbe0751ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b73ad321867c36c1c621d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b73ad321867c36c1c621d\ntitle: Task 31\nchallengeType: 22\ndashedName: task-31\n--description--\nIn conversations, you might use certain phrases to show you agree or to go back to a topic that was mentioned before.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nElectric, BLANK! Back to your hobbies, though, do you have any favorite photography themes?\n--blanks--\nfor sure\n--feedback--\nListen for the two words Sophie uses to express strong agreement.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18.30,\n\"finishTimestamp\": 22.72\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.16,\n\"dialogue\": {\n\"text\": \"Electric for sure. Back to your hobbies, though.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3.16,\n\"finishTime\": 5.38,\n\"dialogue\": {\n\"text\": \"Do you have any favorite photography themes?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.88\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b73ad321867c36c1c621d.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "08f97c2b4eb5961cf32d7b7736a690e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b3136477b8ac802088c97\ntitle: \"Dialogue 2: New Hobbies\"\nchallengeType: 21\ndashedName: dialogue-2-new-hobbies\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1 0,\n\"finishTime\": 4 5,\n\"dialogue\": {\n\"text\": \"Hey, Tom I saw you taking lots of pics with your cell phone outside the building \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 7,\n\"finishTime\": 5 7,\n\"dialogue\": {\n\"text\": \"Are you into photography \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 5 9,\n\"finishTime\": 6 9,\n\"dialogue\": {\n\"text\": \"Yes, I love it \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 7 1,\n\"finishTime\": 8 6,\n\"dialogue\": {\n\"text\": \"But I'm only practicing \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 8 8,\n\"finishTime\": 10 8,\n\"dialogue\": {\n\"text\": \"How about you Do you have any hobbies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "faf782eca3f0c79b0d550a2662e8fd3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5 7, \"dialogue\": { \"text\": \"Are you into photography \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 5 9, \"finishTime\": 6 9, \"dialogue\": { \"text\": \"Yes, I love it \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 7 1, \"finishTime\": 8 6, \"dialogue\": { \"text\": \"But I'm only practicing \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 8 8, \"finishTime\": 10 8, \"dialogue\": { \"text\": \"How about you Do you have any hobbies\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 11 0,\n\"finishTime\": 12 0,\n\"dialogue\": {\n\"text\": \"That's cool \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 12 2,\n\"finishTime\": 14 2,\n\"dialogue\": {\n\"text\": \"I like photography, but I don't think of it as a hobby \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 14 4,\n\"finishTime\": 15 9,\n\"dialogue\": {\n\"text\": \"I play the guitar in my free time \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 16 1,\n\"finishTime\": 18 1,\n\"dialogue\": {\n\"text\": \"Wow Electric or acoustic \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 18 3,\n\"finishTime\": 19 9,\n\"dialogue\": {\n\"text\": \"Electric, for sure \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 20 1,\n\"finishTime\": 21 7,\n\"dialogue\": {\n\"text\": \"Back to your hobbies, though \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 21 9,\n\"finishTime\": 23 9,\n\"dialogue\": {\n\"text\": \"Do you have any favorite photography themes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8acf415cac4a0a9a2a33fd22aa21a099",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"finishTime\": 18 1, \"dialogue\": { \"text\": \"Wow Electric or acoustic \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 18 3, \"finishTime\": 19 9, \"dialogue\": { \"text\": \"Electric, for sure \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 20 1, \"finishTime\": 21 7, \"dialogue\": { \"text\": \"Back to your hobbies, though \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 21 9, \"finishTime\": 23 9, \"dialogue\": { \"text\": \"Do you have any favorite photography themes\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 24 1,\n\"finishTime\": 26 7,\n\"dialogue\": {\n\"text\": \"I like landscapes and street photography, mostly \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 26 9,\n\"finishTime\": 30 3,\n\"dialogue\": {\n\"text\": \"And you What kind of music do you like to play on your guitar \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 30 5,\n\"finishTime\": 32 5,\n\"dialogue\": {\n\"text\": \"I enjoy classic rock \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 32 7,\n\"finishTime\": 34 2,\n\"dialogue\": {\n\"text\": \"But any nice tune makes my day \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 34 7,\n\"finishTime\": 36 7,\n\"dialogue\": {\n\"text\": \"Cool I want to hear you play some day \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 36 9,\n\"finishTime\": 39 2,\n\"dialogue\": {\n\"text\": \"Only if you show me your favorite pics \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 39 4,\n\"finishTime\": 40 2,\n\"dialogue\": {\n\"text\": \"It's a deal",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "87765f9304113703678b952c466ab072",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "nice tune makes my day \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 34 7, \"finishTime\": 36 7, \"dialogue\": { \"text\": \"Cool I want to hear you play some day \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 36 9, \"finishTime\": 39 2, \"dialogue\": { \"text\": \"Only if you show me your favorite pics \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 39 4, \"finishTime\": 40 2, \"dialogue\": { \"text\": \"It's a deal\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 40 3\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 40 8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b3136477b8ac802088c97.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "359e82258154e64769eb9d6f5b71a7ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b72cbdef32ec0b1a24afb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b72cbdef32ec0b1a24afb\ntitle: Task 30\nchallengeType: 19\ndashedName: task-30\n--description--\nWhen you hear about different types of guitars, two common kinds might come up: electric and acoustic. Electric guitars usually need something called an amplifier to be loud enough to hear, while acoustic guitars can be heard without any extra equipment.\n--questions--\n--text--\nListen to the dialogue and choose the correct type of guitar Sophie prefers.\n--answers--\nElectric Guitar\nAcoustic Guitar\n--feedback--\nSophie makes it very clear which type of guitar she likes. Remember, the one she prefers needs an amplifier to be loud.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15.4,\n\"finishTimestamp\": 19.52\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1.1,\n\"finishTime\": 3.1,\n\"dialogue\": {\n\"text\": \"Wow! Electric or acoustic?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.2\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3.3\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3.3,\n\"finishTime\": 5.12,\n\"dialogue\": {\n\"text\": \"Electric for sure.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.62\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1991,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b72cbdef32ec0b1a24afb.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cb676b594e9f70a7986fee5066eb593c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7acdc06454fbb0152538.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b7acdc06454fbb0152538\ntitle: Task 32\nchallengeType: 22\ndashedName: task-32\n--description--\nIn conversations, you might use certain words to go back to a topic that was mentioned before.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nElectric, for sure! BLANK BLANK your hobbies, though, do you have any favorite photography themes?\n--blanks--\nBack\n--feedback--\nListen for the two words she uses to change conversation back to what Tom was talking about earlier.\nto\n--feedback--\nListen for the two words she uses to change conversation back to what Tom was talking about earlier.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18.34,\n\"finishTimestamp\": 22.72\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.16,\n\"dialogue\": {\n\"text\": \"Electric for sure. Back to your hobbies, though.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3.16,\n\"finishTime\": 5.38,\n\"dialogue\": {\n\"text\": \"Do you have any favorite photography themes?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.88\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7acdc06454fbb0152538.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "830db5370b0aa3991dc7e39645299b78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7bad0b215cff2128139a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b7bad0b215cff2128139a\ntitle: Task 33\nchallengeType: 19\ndashedName: task-33\n--description--\nPhotographers often have favorite themes or subjects they like to take pictures of, like big outdoor spaces or busy city streets.\n--questions--\n--text--\nChoose the photography themes that Tom likes from the dialogue.\n--answers--\nPhotos of food and restaurants.\n--feedback--\nThink about what you might see in a big open space outside the city, or what you would encounter walking through the city streets. These are the scenes Tom enjoys capturing in his photos.\nLandscapes and street photography.\nPictures of friends and family.\n--feedback--\nThink about what you might see in a big open space outside the city, or what you would encounter walking through the city streets. These are the scenes Tom enjoys capturing in his photos.\nPortraits in a studio.\n--feedback--\nThink about what you might see in a big open space outside the city, or what you would encounter walking through the city streets. These are the scenes Tom enjoys capturing in his photos.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.52,\n\"finishTimestamp\": 26.14\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.62,\n\"dialogue\": {\n\"text\": \"I like landscapes and street photography, mostly.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.12\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7bad0b215cff2128139a.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c0278994d13a1ad7b211540cb0de7436",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7d1aec6d4803cf02e84f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b7d1aec6d4803cf02e84f\ntitle: Task 34\nchallengeType: 22\ndashedName: task-34\n--description--\nPeople have different music preferences, and sometimes they might tell you about the kind of music they like to play or listen to.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nI enjoy classic BLANK, but any nice tune makes my day.\n--blanks--\nrock\n--feedback--\nSophie mentions a very energetic and popular genre of music. How do we call this music genre that includes electric guitars, drums, and often loud singing?\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 26.14,\n\"finishTimestamp\": 33.58\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.42,\n\"dialogue\": {\n\"text\": \"And you? What kind of music do you like to play on your guitar?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.43\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 4.6\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.98,\n\"finishTime\": 8.44,\n\"dialogue\": {\n\"text\": \"I enjoy classic rock, but any nice tune makes my day.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 8.94\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2039,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7d1aec6d4803cf02e84f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7b748e291fe4a61899629bfbd6af523a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7d76e9447705f7e5ceb8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b7d76e9447705f7e5ceb8\ntitle: Task 35\nchallengeType: 19\ndashedName: task-35\n--description--\nIn English, there's a phrase you might hear that means something makes you very happy or gives you a lot of pleasure: It makes my day. When someone says this, it means that a particular thing or event has made them feel really good.\n--questions--\n--text--\nWhat does Sophie mean when she says any nice tune makes my day?\n--answers--\nShe gets disappointed by nice music.\n--feedback--\nThe phrase makes my day is a positive expression. It's used when something has a very good impact on how you feel, not a negative one.\nNice music ruins her mood.\n--feedback--\nThe phrase makes my day is a positive expression. It's used when something has a very good impact on how you feel, not a negative one.\nNice music greatly improves her mood.\nNice music is something she never listens to.\n--feedback--\nThe phrase makes my day is a positive expression. It's used when something has a very good impact on how you feel, not a negative one.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 30.24,\n\"finishTimestamp\": 33.58\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.34,\n\"dialogue\": {\n\"text\": \"I enjoy classic rock, but any nice tune makes my day\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7d76e9447705f7e5ceb8.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca85380cbd0c04d8c28c4c02f36ed7ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8487605c881dc8ebde9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b8487605c881dc8ebde9e\ntitle: Task 38\nchallengeType: 22\ndashedName: task-38\n--description--\nDiscussing daily activities often includes talking about what you don't do.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nThat's cool! I like photography, but I BLANK think of it as a hobby. I play the guitar in my free time.\n--blanks--\ndon't\n--feedback--\nSophie is talking about an activity she does not consider a hobby, so the sentence should have a negative form.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 10.50,\n\"finishTimestamp\": 15.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.94,\n\"dialogue\": {\n\"text\": \"That's cool. I like photography, but I don't think of it as a hobby.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.22,\n\"finishTime\": 5.90,\n\"dialogue\": {\n\"text\": \"I play the guitar in my free time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.40\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1548,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8487605c881dc8ebde9e.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3193e7bf5a30b3dd910904a7cc03d293",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b718282cd56bb91a795de.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b718282cd56bb91a795de\ntitle: Task 29\nchallengeType: 19\ndashedName: task-29\n--description--\nIn English, some verbs are conjugated This means they change the form according to the person you are talking about For most verbs, when we talk about another person like he, she, or it, we add an -s or -es to the verb For example: If you talk about Tom and photography you can say: Tom takes photographs, not Tom take photographs This is how you show in your sentence that the action is done by Tom in the present tense For negative sentences, you can use doesn't followed by the base form of the verb You do not add -s or -es because does is already conjugated (do+es) For example, if Tom doesn't do video recording as a hobby, you can say, He doesn't record videos Understanding this difference is crucial for talking about habits and actions accurately Now, let's apply this understanding to what Sophie does in her free time --questions--\n--text--\nListen to what Sophie says about playing the guitar and pick the statement that is correct --answers--\nDoes Sophie play the guitar --feedback--\nThis is a question, not a statement You need to find the statement that correctly describes when Sophie plays the guitar Sophie doesn't play the guitar --feedback--\nThis statement is negative Does Sophie say she doesn't play the guitar, or is this not true Sophie play guitar in her free time --feedback--\nThis sentence is missing the third person s at the end of plays Remember the rule for verbs in the third person singular form Sophie plays the guitar in her free time --video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 10 50,\n\"finishTimestamp\": 15 40\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3005,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b718282cd56bb91a795de.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b9827d9415ed1a971bff19ff42922bbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b718282cd56bb91a795de.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of plays Remember the rule for verbs in the third person singular form Sophie plays the guitar in her free time --video-solution-- 4 --scene-- json { \"setup\": { \"background\": \"company2-breakroom png\", \"characters\": [ { \"character\": \"Sophie\", \"position\": {\"x\":50,\"y\":0,\"z\":1 4}, \"opacity\": 0 } ], \"audio\": { \"filename\": \"1 3-2 mp3\", \"startTime\": 1, \"startTimestamp\": 10 50, \"finishTimestamp\": 15 40 } }, \"commands\": [ { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sophie\", \"startTime\": 1, \"finishTime\": 156,\n\"dialogue\": {\n\"text\": \"That's cool \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1 72,\n\"finishTime\": 3 94,\n\"dialogue\": {\n\"text\": \"I like photography, but I don't think of it as a hobby \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 22,\n\"finishTime\": 5 90,\n\"dialogue\": {\n\"text\": \"I play the guitar in my free time \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 40\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3005,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b718282cd56bb91a795de.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "615188df4076b7d394b1e521344b1352",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8278a00d27196af26c6c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b8278a00d27196af26c6c\ntitle: Task 37\nchallengeType: 19\ndashedName: task-37\n--description--\nWhen elaborating questions about a third person singular (he, she or it) you might need to use the auxiliary verb does For example: If Alice is curious about Sophie's hobbies and wants to ask Tom, she can say, Does Sophie like hiking The word does is used here because the subject is Sophie, a third person singular Does is used to form questions in the present simple tense for he, she, or it --questions--\n--text--\nDoes Tom have a favorite photography theme --answers--\nYes, he does No, he doesn't --feedback--\nThe dialogue indicates Tom does have favorite themes Yes, he do --feedback--\nYes, he do is incorrect; it should be Yes, he does No, does he --feedback--\nNo, does he is not a statement but a question, and it implies doubt or surprise, not affirmation --video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 20 90,\n\"finishTimestamp\": 26 14\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2 82,\n\"dialogue\": {\n\"text\": \"Do you have any favorite photography themes \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 2 9\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 3\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 3 62,\n\"finishTime\": 6 24,\n\"dialogue\": {\n\"text\": \"I like landscapes and street photography, mostly",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2403,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8278a00d27196af26c6c.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "12450545cd5b7cf233739a862d468442",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8278a00d27196af26c6c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "20 90, \"finishTimestamp\": 26 14 } }, \"commands\": [ { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sophie\", \"startTime\": 1, \"finishTime\": 2 82, \"dialogue\": { \"text\": \"Do you have any favorite photography themes \", \"align\": \"center\" } }, { \"character\": \"Sophie\", \"opacity\": 0, \"startTime\": 2 9 }, { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 3 }, { \"character\": \"Tom\", \"startTime\": 3 62, \"finishTime\": 6 24, \"dialogue\": { \"text\": \"I like landscapes and street photography, mostly\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6 74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2403,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8278a00d27196af26c6c.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f36c2a0b6731f5070bc21c124e275079",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7e633c982f095101e6fe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b7e633c982f095101e6fe\ntitle: Task 36\nchallengeType: 19\ndashedName: task-36\n--description--\nSometimes you want to talk about what you or someone else enjoys For example, if your friend enjoys reading, you can say, My friend likes reading --questions--\n--text--\nWhich sentence is correct about Sophie's guitar preference --answers--\nSophie likes electric guitar Sophie like electric guitar --feedback--\nIn English, when we refer to he, she, or it, we need to add an s to the verb, making it likes For example, if your friend enjoys reading, you would say, She likes reading Sophie does likes electric guitar --feedback--\nDoes likes is incorrect; does should not be used together with likes Sophie liked electric guitar --feedback--\nLiked is past tense, but we are discussing her current preference --video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15 40,\n\"finishTimestamp\": 22 72\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 38,\n\"dialogue\": {\n\"text\": \"Wow Electric or acoustic \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3 39\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3 39\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3 94,\n\"finishTime\": 6 5,\n\"dialogue\": {\n\"text\": \"Electric, for sure Back to your hobbies, though \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 6 5,\n\"finishTime\": 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2528,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7e633c982f095101e6fe.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c0dced7ff929f4b6f0f82d60262cf9d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7e633c982f095101e6fe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 38, \"dialogue\": { \"text\": \"Wow Electric or acoustic \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 3 39 }, { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 3 39 }, { \"character\": \"Sophie\", \"startTime\": 3 94, \"finishTime\": 6 5, \"dialogue\": { \"text\": \"Electric, for sure Back to your hobbies, though \", \"align\": \"center\" } }, { \"character\": \"Sophie\", \"startTime\": 6 5, \"finishTime\": 832,\n\"dialogue\": {\n\"text\": \"Do you have any favorite photography themes \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 8 82\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2528,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b7e633c982f095101e6fe.md",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d05aaacd8b3bb8763d02197bf5faaa73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8597aaa5162475812ff8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b8597aaa5162475812ff8\ntitle: Task 39\nchallengeType: 19\ndashedName: task-39\n--description--\nWhen you want to talk about what someone hopes to do in the future, you can use want to to express desire or intention --questions--\n--text--\nDoes Tom want to hear Sophie play the guitar --answers--\nNo, he doesn't want to --feedback--\nListen again and pay attention to see if Tom is really using a negative sentence Yes, he wants to No, he don't want to --feedback--\nDon't is not correct with he; it should be doesn't Yes, he wanted to --feedback--\nWanted is past tense, but Tom is talking about the present --video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 30 24,\n\"finishTimestamp\": 36 1\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4 34,\n\"dialogue\": {\n\"text\": \"I enjoy classic rock, but any nice tune makes my day \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4 34\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 4 34\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 4 34,\n\"finishTime\": 6 86,\n\"dialogue\": {\n\"text\": \"Cool I want to hear you play someday\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 7 36\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2109,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b8597aaa5162475812ff8.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "78a3cfda89f6092defe5d4c68aeb204a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb542baf74594933c7ac9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cb542baf74594933c7ac9\ntitle: Task 43\nchallengeType: 19\ndashedName: task-43\n--description--\nTo look like is used to describe someone's or something's appearance, often implying a comparison.\nWhen you're curious about someone's physical characteristics, such as their hair color, height, or overall look, you might use expressions like:\nWhat does (he/she) look like? or What do they look like?\nThe choice between these depends on the number and gender of the person you're asking about. Use does with singular pronouns (he, she) when referring to one person and do with they when referring to someone whose gender might not be known or if referring to people in a non-binary or plural sense.\nNote: Remember that questions about a person's appearance can be sensitive. Some people may not feel comfortable discussing physical traits, and it's important to respect their feelings. Always use this question politely and in the right context, where it is appropriate to do so.\n--questions--\n--text--\nChoose the option that best explains when it is appropriate to ask about someone's physical appearance.\n--answers--\nAny time you are curious about how a person looks.\n--feedback--\nRemember to consider the feelings of others and the situation. Asking about someone's appearance should have a clear and respectful purpose.\nWhen you need to identify someone you are meeting for the first time.\nDuring casual conversations.\n--feedback--\nRemember to consider the feelings of others and the situation. Asking about someone's appearance should have a clear and respectful purpose.\nDuring a meeting.\n--feedback--\nRemember to consider the feelings of others and the situation. Asking about someone's appearance should have a clear and respectful purpose.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb542baf74594933c7ac9.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4452d98041766d853dd803ae9dd85e0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b971e15225e53da93afd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b971e15225e53da93afd3\ntitle: Task 41\nchallengeType: 22\ndashedName: task-41\n--description--\nWhen people confirm agreements informally, they often use this phrase This seals the agreement with mutual understanding and acceptance --instructions--\nListen to the audio to complete the sentence below --fillInTheBlank--\n--sentence--\nTom: Cool I want to hear you play some day Sophie: Only if you show me your favorite pics Tom: It's BLANK --blanks--\na deal\n--feedback--\nThis phrase is like a verbal nod, confirming that both sides are happy and agree There are two words --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 33 58,\n\"finishTimestamp\": 38 92\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 52,\n\"dialogue\": {\n\"text\": \"Cool I want to hear you play someday \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3 52\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3 52\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3 52,\n\"finishTime\": 5 42,\n\"dialogue\": {\n\"text\": \"Only if you show me your favorite pics \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5 42\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 5 42\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b971e15225e53da93afd3.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b78aca82d11e2505abef2e006345f097",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b971e15225e53da93afd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to hear you play someday \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 3 52 }, { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 3 52 }, { \"character\": \"Sophie\", \"startTime\": 3 52, \"finishTime\": 5 42, \"dialogue\": { \"text\": \"Only if you show me your favorite pics \", \"align\": \"center\" } }, { \"character\": \"Sophie\", \"opacity\": 0, \"startTime\": 5 42 }, { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 5 42 }, { \"character\": \"Tom\", \"startTime\": 578,\n\"finishTime\": 6 34,\n\"dialogue\": {\n\"text\": \"It's a deal\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6 84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b971e15225e53da93afd3.md",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "33f9b04d27c7e234ab7359ad6abe38e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb5dd956a8797462da793.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cb5dd956a8797462da793\ntitle: Task 44\nchallengeType: 19\ndashedName: task-44\n--description--\nWhen you want to know about someone's character or personality, you can ask, What is (he/she) like? or What are they like?.\nThis question is about the qualities of a person, not about their physical appearance. Example:\nImagine you meet a new student in your programming class and you want to know more about her. You can ask a classmate What is she like?.\nYou are not asking if the new student likes computers or games; you are asking about her personality. Maybe she's friendly, smart, or really good at coding.\n--questions--\n--text--\nChoose the correct question for asking about Maria's personality and character traits.\n--answers--\nWhat does she like?\n--feedback--\nWhat does she like? is used to ask about someone's preferences.\nWhat is she like?\nWhat does she look like?\n--feedback--\nWhat does she look like? is a question about someone's physical appearance, not their personality.\nWhat she is like?\n--feedback--\nThe word order is incorrect; the question should start with the auxiliary verb is.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb5dd956a8797462da793.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c7ca5cdcad16cb3eeece3ea3b1c6face",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb68bf15f349a744b5fba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cb68bf15f349a744b5fba\ntitle: Task 45\nchallengeType: 19\ndashedName: task-45\n--description--\nWhen you want to learn about a person's character or personality without specifying their gender, you can use they as a singular pronoun and ask, What are they like?.\nThis is a respectful and inclusive way to ask about someone. Using they in this way ensures that you don't make assumptions about people. Example:\nImagine there is a new team member joining your programming project, but you haven't met them yet. Instead of assuming their gender, you can ask your supervisor, What are they like?\nThis question helps you find out about the new member's personality, such as being organized, creative, or detail-oriented.\nNote: The question What are they like? can also refer to multiple people or a group. For example, if you're asking about a new team or a group of people you will be working with, you can use this question to learn about the group's personality or dynamic.\n--questions--\n--text--\nChoose the correct question for asking about a person's personality and character traits in a gender-neutral way.\n--answers--\nWhat do they like?\n--feedback--\nThis sentence is used to inquire about someone's preferences or interests.\nWhat is they like?\n--feedback--\nThis sentence is not grammatically correct in English.\nWhat are they like?\nWhat do they looks like?\n--feedback--\nThis sentence mixes up the structure for asking about personality with the structure for asking about physical appearance and also uses a plural verb looks with a singular pronoun they.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1679,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb68bf15f349a744b5fba.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3cfb72206015a6539bdc07d18731432c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b92b25858f24caf6894aa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b92b25858f24caf6894aa\ntitle: Task 40\nchallengeType: 19\ndashedName: task-40\n--description--\nThe expression only if is used to set a condition for something to happen It's like saying this will happen if that happens It's a way of making an agreement where one action depends on another For example: if your friend says, I'll go out only if it doesn't rain, it means they will go out but the weather must be good - no rain --questions--\n--text--\nWhat is Sophie's condition --answers--\nShe will play the guitar without any conditions --feedback--\nSophie mentioned a specific condition, so it's not without any conditions She will play the guitar but Tom has to show her some pictures She wants to show her pictures to Tom --feedback--\nThere is no mention of Sophie wanting to show pictures She doesn't want to hear Tom play --feedback--\nThe conversation is about Sophie playing the guitar, not Tom --video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 33 58,\n\"finishTimestamp\": 38 92\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 52,\n\"dialogue\": {\n\"text\": \"Cool I want to hear you play someday \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3 52\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3 52\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3 52,\n\"finishTime\": 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b92b25858f24caf6894aa.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0c65c601656092555d267fdf525901d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b92b25858f24caf6894aa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"audio\": { \"filename\": \"1 3-2 mp3\", \"startTime\": 1, \"startTimestamp\": 33 58, \"finishTimestamp\": 38 92 } }, \"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 52, \"dialogue\": { \"text\": \"Cool I want to hear you play someday \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 3 52 }, { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 3 52 }, { \"character\": \"Sophie\", \"startTime\": 3 52, \"finishTime\": 542,\n\"dialogue\": {\n\"text\": \"Only if you show me your favorite pics \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5 42\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 5 42\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 5 78,\n\"finishTime\": 6 34,\n\"dialogue\": {\n\"text\": \"It's a deal\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6 84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b92b25858f24caf6894aa.md",
      "source_type": "git_repo"
    },
    "token_count": 317,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0a49bd77b3f19608585ffa7ce3e130d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb91ed0a08ea3761c7407.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cb91ed0a08ea3761c7407\ntitle: Task 46\nchallengeType: 22\ndashedName: task-46\n--description--\nIn English, you ask two different questions when you want to know about someone's personality and someone's physical appearance. What is he/she like? is used to ask about personality traits, such as being kind, intelligent, or funny.\nOn the other hand, What does he/she look like? is the question you would ask if you want to know about how someone looks, for example, if they are tall, have blonde hair, or wear glasses.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHey, Sophie! Tell me about our team lead, Maria. BLANK?\n--blanks--\nWhat is she like\n--feedback--\nIs Tom asking about Maria's personality? Remember the correct structure of the question in English when deciding your answer.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 4.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.24,\n\"dialogue\": {\n\"text\": \"Hey Sophie, tell me about our team lead, Maria. What is she like?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1747,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cb91ed0a08ea3761c7407.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "60972ec35f285346b24ad5148a5af62f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbb578ed7f5a52420d274.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cbb578ed7f5a52420d274\ntitle: Task 47\nchallengeType: 19\ndashedName: task-47\n--description--\nWhen you want to describe someone's personality, you often use adjectives, which are words that describe or give more information about a noun or pronoun. In the dialogue, Sophie uses adjectives like proactive to describe Maria's personality.\nProactive means taking action by causing change and not only reacting to change when it happens.\n--questions--\n--text--\nWhich adjective describes someone who takes action and initiates change?\n--answers--\nproactive\ninactive\n--feedback--\nThis means not doing anything; not active.\nreactive\n--feedback--\nThis is the opposite of proactive; it means waiting for things to happen before responding.\npassive\n--feedback--\nA passive person allows things to happen or who accepts things without active response or resistance.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.36,\n\"finishTimestamp\": 8.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.88,\n\"dialogue\": {\n\"text\": \"Well, she's very proactive and she likes everything in order.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.38\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbb578ed7f5a52420d274.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "60ac998752b41a15138092902a632560",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbc6e9b4676aedfa305bc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cbc6e9b4676aedfa305bc\ntitle: Task 48\nchallengeType: 22\ndashedName: task-48\n--description--\nAdjectives can also describe how a person likes things to be done. In the dialogue, Sophie says Maria likes everything in order, which means she prefers things to be organized and arranged well.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nWell, she's very BLANK and she likes everything in BLANK.\n--blanks--\nproactive\n--feedback--\nHow would you describe someone who is taking action by causing change?\norder\n--feedback--\nTry to listen to the adjectives Sophie uses to describe Maria.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.36,\n\"finishTimestamp\": 8.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.88,\n\"dialogue\": {\n\"text\": \"Well, she's very proactive and she likes everything in order.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.38\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbc6e9b4676aedfa305bc.md",
      "source_type": "git_repo"
    },
    "token_count": 355,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8562b659e261b4bd70a243921ac13337",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbccfa92918b1037dbf60.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cbccfa92918b1037dbf60\ntitle: Task 49\nchallengeType: 19\ndashedName: task-49\n--description--\nThe word passion is a big feeling of love for something. When you have a passion for something, you really enjoy it and think it's very important.\nIf someone has a passion for music, it means they love music a lot. In the conversation, Sophie talks about Maria's passion for something.\n--questions--\n--text--\nListen again and choose what Maria loves a lot:\n--answers--\nMaking plans\n--feedback--\nPassion is a strong love for something. Which subject does Sophie say Maria loves?\nOrganizing tasks\n--feedback--\nPassion is a strong love for something. Which subject does Sophie say Maria loves?\nMeetings\n--feedback--\nPassion is a strong love for something. Which subject does Sophie say Maria loves?\nTechnology\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.36,\n\"finishTimestamp\": 11.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.88,\n\"dialogue\": {\n\"text\": \"Well, she's very proactive and she likes everything in order.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.14,\n\"finishTime\": 7.52,\n\"dialogue\": {\n\"text\": \"I think she has a passion for technology and she enjoys leading our team.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 8.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbccfa92918b1037dbf60.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3739afdb89ed4785632788aa0800a68c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbdc0c360a3b53767d73f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cbdc0c360a3b53767d73f\ntitle: Task 50\nchallengeType: 19\ndashedName: task-50\n--description--\nLeading a team means being in charge of a group of people and guiding them to achieve their goals. It's like being the captain of a ship.\n--questions--\n--text--\nWhat does leading a team mean?\n--answers--\nFollowing instructions\n--feedback--\nLeading is different from following. If you lead, you are the one giving instructions, not receiving them.\nGuiding the team\nDoing all the work alone\n--feedback--\nLeading involves working with the team, not doing everything alone. It's about managing and working together.\nAsking for help\n--feedback--\nWhile a good leader might ask for help, this choice doesn't capture the full responsibility of leading a team, which is about guiding and decision-making.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbdc0c360a3b53767d73f.md",
      "source_type": "git_repo"
    },
    "token_count": 192,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bfb83806b1e4bfa3b978db4d8a00804b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbef9aa43ceba8af6feb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cbef9aa43ceba8af6feb4\ntitle: Task 51\nchallengeType: 22\ndashedName: task-51\n--description--\nWhen you like doing something very much, you can say you enjoy it. It's a simple way to express that something makes you happy.\nFor example, you can say, I enjoy playing video games if playing video games is fun for you. In the dialogue, Sophie tells us something that Maria enjoys in her job.\n--fillInTheBlank--\n--sentence--\nI think she has a passion for technology and she BLANK leading our team.\n--blanks--\nenjoys\n--feedback--\nWhat word would you use to say that Maria finds happiness in guiding the team? It's the same word used when you have fun or like doing an activity.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.50,\n\"finishTimestamp\": 11.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.38,\n\"dialogue\": {\n\"text\": \"I think she has a passion for technology and she enjoys leading our team.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.88\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cbef9aa43ceba8af6feb4.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8ce6b81c67f6512325d423efc0ed2c04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cc1a2ced22ac3e7d57fd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cc1a2ced22ac3e7d57fd3\ntitle: Task 52\nchallengeType: 22\ndashedName: task-52\n--description--\nImagine you're pointing to something that is not right next to you but a little far away; you use those. If something is very close to you, like the book in your hands, you use these.\nIn the dialogue, Tom says Those are great traits... because he's talking about the traits Sophie mentioned just a moment ago. He's not talking about traits that are being shown to him right this second.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nBLANK are great traits for someone in her position, I think.\n--blanks--\nThose\n--feedback--\nUse this word when the things you're talking about are close to you or are the main topic of the current conversation.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.30,\n\"finishTimestamp\": 16.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.58,\n\"dialogue\": {\n\"text\": \"Those are great traits for someone in her position, I think. What does she do as the team lead?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.08\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1762,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cc1a2ced22ac3e7d57fd3.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "869ddc350f6bd0c277d81636eb6f0927",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cc2b9cc9e97c7bd862273.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cc2b9cc9e97c7bd862273\ntitle: Task 53\nchallengeType: 22\ndashedName: task-53\n--description--\nThe phrase great traits means very good qualities or characteristics. When you talk about someone's position, you mean the job or role they have.\nBy saying great traits for someone in her position, Tom is saying that the qualities Sophie described are very good for the job that Maria has as a team lead.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nThe qualities of being proactive and organized are BLANK BLANK for a team leader.\n--blanks--\ngreat\n--feedback--\nThink of two words that mean very good qualities. Tom uses these words to say that Maria's qualities are very suitable for her role or job.\ntraits\n--feedback--\nThink of two words that mean very good qualities. Tom uses these words to say that Maria's qualities are very suitable for her role or job.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.30,\n\"finishTimestamp\": 16.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.58,\n\"dialogue\": {\n\"text\": \"Those are great traits for someone in her position, I think. What does she do as the team lead?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.08\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cc2b9cc9e97c7bd862273.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "081885a77686121aa274ba25e9be8795",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd0e53b947df11ce91026.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cd0e53b947df11ce91026\ntitle: Task 54\nchallengeType: 19\ndashedName: task-54\n--description--\nYou use phrases like in her position to connect someone's qualities to their job or role. When Tom talks about great traits for someone in her position, he means that Maria's qualities are perfect for the responsibilities and tasks she has as a team lead.\n--questions--\n--text--\nWhich sentence shows that certain qualities are perfect for the job someone is doing?\n--answers--\nGreat traits are important for everybody.\n--feedback--\nThis option says that good qualities are important but doesn't link them to a specific job or role.\nShe has traits in her position.\n--feedback--\nThis option mentions traits and position but doesn't clearly connect the quality of the traits to the suitability for the position.\nThose traits are useful for the work.\n--feedback--\nWhile this option talks about traits being useful, it doesn't specifically say that the traits are excellent for the person's job or role.\nThose are great traits for someone in her position.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.30,\n\"finishTimestamp\": 16.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.58,\n\"dialogue\": {\n\"text\": \"Those are great traits for someone in her position, I think. What does she do as the team lead?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.08\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1940,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd0e53b947df11ce91026.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "24341104812b2853fd720a7d7640cf2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd143f74299f36a624c7a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cd143f74299f36a624c7a\ntitle: Task 55\nchallengeType: 22\ndashedName: task-55\n--description--\nYou learned that do is an auxiliary verb that helps ask questions. You have also learned that when you want to ask about something specific, you can use the question word what.\nWhen you want to ask about someone's job or role, you use what with do to form a question.\nFor example, you ask What do you do? to mean What is your job?\nWhen talking about another person like Maria, you say What does she do? because she is a third person singular (she, he, it), and with these subjects, do changes to does.\n--instructions--\nFill in the blanks to create a question about someone's job using the auxiliary verb do.\n--fillInTheBlank--\n--sentence--\nWhat BLANK Maria BLANK?\n--blanks--\ndoes\n--feedback--\nRemember, when asking about another person's job, you change do to does after what.\ndo\n--feedback--\nYou also need the main verb do after the subject she to ask about her job activities.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1067,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd143f74299f36a624c7a.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e1bef61e1f3694471961410239f30d73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd1925ac059f5034286c3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cd1925ac059f5034286c3\ntitle: Task 56\nchallengeType: 19\ndashedName: task-56\n--description--\nUsing the auxiliary verb do can be tricky when the main verb in the sentence is also do.\nBut remember, do helps in asking questions, and when it's about someone else, like he or she, it changes to does. The question What does she/he do? is asking for information about a person's job.\n--questions--\n--text--\nWhich question is correct for asking about a person's job?\n--answers--\nWhat do she does as the team lead?\n--feedback--\nThe structure do she does is not correct in English. When asking a question about another person, you use does only once.\nWhat does he does as the team lead?\n--feedback--\nYou don't need to use does twice.\nWhat do he does as the team lead?\n--feedback--\nThink about the correct auxiliary verb to use with he.\nWhat does she do as the team lead?\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 984,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd1925ac059f5034286c3.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ec86f7c359a96f4d0466088d9f97ac8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b97be2621d55d1b8dc9a1\ntitle: \"Dialogue 3: Tom Asks About the Team Lead\"\nchallengeType: 21\ndashedName: dialogue-3-tom-asks-about-the-team-lead\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 3-3 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1 0,\n\"finishTime\": 3 8,\n\"dialogue\": {\n\"text\": \"Hey, Sophie Tell me about our team lead, Maria \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 4 0,\n\"finishTime\": 5 0,\n\"dialogue\": {\n\"text\": \"What is she like \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5 2,\n\"finishTime\": 8 8,\n\"dialogue\": {\n\"text\": \"Well, she's very proactive and she likes everything in order \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 9 0,\n\"finishTime\": 12 5,\n\"dialogue\": {\n\"text\": \"I think she has a passion for technology, and she enjoys leading our team \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 12 7,\n\"finishTime\": 15",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "bda80edc6cc6635532183ddc1f85b9f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"text\": \"What is she like \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 5 2, \"finishTime\": 8 8, \"dialogue\": { \"text\": \"Well, she's very proactive and she likes everything in order \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 9 0, \"finishTime\": 12 5, \"dialogue\": { \"text\": \"I think she has a passion for technology, and she enjoys leading our team \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 12 7, \"finishTime\": 157,\n\"dialogue\": {\n\"text\": \"Those are great traits for someone in her position, I think \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 15 9,\n\"finishTime\": 17 7,\n\"dialogue\": {\n\"text\": \"What does she do as the team lead \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 17 9,\n\"finishTime\": 20 4,\n\"dialogue\": {\n\"text\": \"Maria coordinates our projects \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 20 6,\n\"finishTime\": 23 6,\n\"dialogue\": {\n\"text\": \"She assigns tasks and makes sure everything runs well \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 23 8,\n\"finishTime\": 27 3,\n\"dialogue\": {\n\"text\": \"That sounds important Where does she usually work from \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 27 5,\n\"finishTime\": 31 5,\n\"dialogue\": {\n\"text\": \"She works from her office most of the time, but she's also in meetings a lot \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 31 7,\n\"finishTime\": 34 7,\n\"dialogue\": {\n\"text\": \"I see When does she usually hold team meetings \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 34 9,\n\"finishTime\": 38",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "046c32ba9186f5b999be5bb74f1ca155",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "she usually work from \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 27 5, \"finishTime\": 31 5, \"dialogue\": { \"text\": \"She works from her office most of the time, but she's also in meetings a lot \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 31 7, \"finishTime\": 34 7, \"dialogue\": { \"text\": \"I see When does she usually hold team meetings \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 34 9, \"finishTime\": 384,\n\"dialogue\": {\n\"text\": \"She schedules team meetings every Monday morning to plan the week ahead \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 38 6,\n\"finishTime\": 42 1,\n\"dialogue\": {\n\"text\": \"Got it How does she handle challenges in our projects \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 42 3,\n\"finishTime\": 47 3,\n\"dialogue\": {\n\"text\": \"Maria thinks challenges are positive She encourages us to find solutions together \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 47 5,\n\"finishTime\": 50 5,\n\"dialogue\": {\n\"text\": \"Great And do you enjoy working with her \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 50 7,\n\"finishTime\": 53 7,\n\"dialogue\": {\n\"text\": \"I do She's supportive and she helps us a lot \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 53 9,\n\"finishTime\": 56 4,\n\"dialogue\": {\n\"text\": \"Nice Thanks for the information, Sophie \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 56 6,\n\"finishTime\": 61 6,\n\"dialogue\": {\n\"text\": \"You're welcome Maria is a fantastic leader to have I think you're in good hands",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "c9d858228f026a1c860f6c29d4d7c3a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"character\": \"Sophie\", \"startTime\": 50 7, \"finishTime\": 53 7, \"dialogue\": { \"text\": \"I do She's supportive and she helps us a lot \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 53 9, \"finishTime\": 56 4, \"dialogue\": { \"text\": \"Nice Thanks for the information, Sophie \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 56 6, \"finishTime\": 61 6, \"dialogue\": { \"text\": \"You're welcome Maria is a fantastic leader to have I think you're in good hands\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 61 6\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 62 1\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657b97be2621d55d1b8dc9a1.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "21a0d8cbc5886ddddbd05843ac74c96f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd2dce697d2feacf7620d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cd2dce697d2feacf7620d\ntitle: Task 57\nchallengeType: 22\ndashedName: task-57\n--description--\nNow you will practice listening for the correct form of do. Listen carefully to how Tom asks about Maria's job as a team lead.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nThose are great traits for someone in her position, I think. What BLANK she BLANK as the team lead?\n--blanks--\ndoes\n--feedback--\nYou're looking for the correct auxiliary verb that goes with she when asking a question. Remember, she requires a different form of do than I or you.\ndo\n--feedback--\nYou're looking for the main verb do to inquire about her job activities\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.30,\n\"finishTimestamp\": 16.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.58,\n\"dialogue\": {\n\"text\": \"Those are great traits for someone in her position, I think. What does she do as the team lead?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.08\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1679,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd2dce697d2feacf7620d.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "089e4c3aa9705162bf2c65ad2105b05f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd962b45f48127c183d7b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cd962b45f48127c183d7b\ntitle: Task 58\nchallengeType: 19\ndashedName: task-58\n--description--\nWhen you speak about what another person does every day, like your friend or a teacher, and you use he, she, or it you will often need to conjugate the verb of your sentence.\nAs you already studied, for most verbs conjugation can be simple. You just  add s or es to the end of the verb.\nFor example:\nVerb to talk conjugation:\nI talk, you talk, we talk, and they talk.\nHe talks, she talks, and it talks.\nVerb to do conjugation:\nI do, you do, we do, and they do.\nHe does, she does, and it does.\n--questions--\n--text--\nWhich is the right way to say to coordinate when talking about one person like Maria?\n--answers--\nMaria coordinate projects\n--feedback--\nCoordinate is what you say for I, you, we, or they.\nMaria coordinating projects\n--feedback--\nCoordinating is used when something is happening right now.\nMaria coordinates projects\nMaria coordinated projects\n--feedback--\nCoordinated is used for something that happened already, not what happens every day.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1218,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cd962b45f48127c183d7b.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "38d99274c6f3156553f22f9904e06ae2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cdaeee8cc4517f84911a2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cdaeee8cc4517f84911a2\ntitle: Task 59\nchallengeType: 22\ndashedName: task-59\n--description--\nAssign means to give tasks to other people.\nMake sure is a phrase used to express that you want to confirm something is done the right way.\nRun well is used when something is functioning well or is successful.\n--instructions--\nFill in the blanks with the correct verbs based on their meanings.\n--fillInTheBlank--\n--sentence--\nA team lead BLANK different tasks to the team members.\nIt's the manager's job to BLANK that all the work is done correctly.\nA well-organized project will BLANK without any issues.\n--blanks--\nassigns\n--feedback--\nThink about what a leader must do when they have several tasks that need to be done by different people. This verb refers to a third person, consider conjugating it.\nmake sure\n--feedback--\nConsider what a person does when they need to check that everything is in order and no mistakes are made.\nrun well\n--feedback--\nImagine a machine or a system operating without stopping or having any problems—that's what you want a project to do.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1155,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cdaeee8cc4517f84911a2.md",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d145cad09875ef680f0b8483618d5da7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cdc5a8e30191d1abec8b7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cdc5a8e30191d1abec8b7\ntitle: Task 60\nchallengeType: 22\ndashedName: task-60\n--description--\nLet's practice listening to verbs conjugated in the third person.\n--fillInTheBlank--\n--sentence--\nMaria coordinates our projects. She BLANK tasks and BLANK sure everything BLANK well.\n--blanks--\nassigns\n--feedback--\nRemember, when speaking about another person's regular actions, you need to use the correct verb form for the third person singular.\nmakes\n--feedback--\nRemember, when speaking about another person's regular actions, you need to use the correct verb form for the third person singular.\nruns\n--feedback--\nRemember, when speaking about another person's regular actions, you need to use the correct verb form for the third person singular.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18.10,\n\"finishTimestamp\": 22.74\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.64,\n\"dialogue\": {\n\"text\": \"Maria coordinates our projects. She assigns tasks and makes sure everything runs well.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.14\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1729,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cdc5a8e30191d1abec8b7.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "16a0df1dca35ebe475a1143af50da964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cdd8bd3ebae2165d46a99.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cdd8bd3ebae2165d46a99\ntitle: Task 61\nchallengeType: 19\ndashedName: task-61\n--description--\nIn English, the verb sound means to give an impression of something when heard or described. When talking about how something seems, based on what you have heard, you use sounds for the third person singular (it).\nIn the dialogue, Tom uses sounds after hearing Sophie's description of Maria's responsibilities. This form is correct because Tom is talking about one specific thing (Maria's role), which is considered a singular subject.\nThat is why he says \"That sounds important\" instead of \"that sound important\".\n--questions--\n--text--\nChoose the correct sentence that uses the verb sound appropriately.\n--answers--\nIt sounds like a good idea.\nHe sound very smart.\n--feedback--\nHe is a singular subject, so the verb should be sounds with an s at the end to match the third person singular form in the present tense. The correct sentence is He sounds very smart.\nYou sounds very organized.\n--feedback--\nYou uses the base form of the verb without an s, even when it's singular. The correct sentence is You sound very organized.\nThey sounds ready for the project.\n--feedback--\nThey is a plural subject, and the verb should match the plural form without an s at the end. The correct sentence is They sound ready for the project.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.48,\n\"finishTimestamp\": 24.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 1.98,\n\"dialogue\": {\n\"text\": \"That sounds important.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 2.48\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2181,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cdd8bd3ebae2165d46a99.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1710ee53ea37552d83765403309abed2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce061cda4a42a99c65d89.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ce061cda4a42a99c65d89\ntitle: Task 62\nchallengeType: 19\ndashedName: task-62\n--description--\nWhere is a question word used when you want to know about a place or location.\n--questions--\n--text--\nChoose the correct question for asking about someone's usual work location.\n--answers--\nWhere do she work from?\n--feedback--\nRemember, when making questions with does, use the base form of the main verb without s.\nWhere does he works from?\n--feedback--\nRemember, when making questions with does, use the base form of the main verb without s.\nWhere does she work from?\nWhere she does work from?\n--feedback--\nRemember, when making questions with does, use the base form of the main verb without s.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 805,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce061cda4a42a99c65d89.md",
      "source_type": "git_repo"
    },
    "token_count": 176,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5a087bba80e4dd956834943800b7fbbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce0bbf16c312c8dcc8dff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ce0bbf16c312c8dcc8dff\ntitle: Task 63\nchallengeType: 19\ndashedName: task-63\n--description--\nThere are some words you can use in your sentence to express how often something happens. They are called adverbs of frequency.\nUsually is a word that suggests that something happens more often than not but is not constant.\nWhen usually is used with the verb to be, it is placed after the verb.\nShe is usually on time for meetings.\nWith other verbs, usually comes before the main verb, for example:\nHe usually works late.\n--questions--\n--text--\nChoose the sentence that correctly uses the adverb usually.\n--answers--\nShe usually is very careful with her work.\n--feedback--\nUsually should come before the main verb when not using to be. The correct sentence is She is usually very careful with her work.\nHe is usually the last one to leave the office.\nThey plays usually together on weekends.\n--feedback--\nUsually should come before the main verb in standard sentences. The correct sentence is They usually play together on weekends.\nWe usually are happy to help out with new projects.\n--feedback--\nWith the verb to be, usually comes after. The correct sentence is We are usually happy to help out with new projects.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1346,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce0bbf16c312c8dcc8dff.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f9e504af1905ecbc10de7797f34053ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce1f82fbe552fcba96375.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ce1f82fbe552fcba96375\ntitle: Task 64\nchallengeType: 22\ndashedName: task-64\n--description--\nThe phrase most of the time means usually or very often.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nShe works from her office BLANK of the time, but she's also in meetings a lot.\n--blanks--\nmost\n--feedback--\nThis phrase is used to describe something that happens frequently but not always.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 26.82,\n\"finishTimestamp\": 30.36\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.54,\n\"dialogue\": {\n\"text\": \"She works from her office most of the time, but she's also in meetings a lot.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.04\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce1f82fbe552fcba96375.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6ef9a61e3de33f980671cea247fb5ec3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce9e5593ae449e7ae6073.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ce9e5593ae449e7ae6073\ntitle: Task 66\nchallengeType: 19\ndashedName: task-66\n--description--\nThe sentence describes where Maria usually works and adds that she has meetings often.\n--questions--\n--text--\nWhat does the sentence tell us about Maria's work habits?\n--answers--\nShe works from home and has meetings.\n--feedback--\nThere is no mention of Maria working from home, only from her office.\nShe is always in her office.\n--feedback--\nThe sentence specifically states most of the time, which implies that there are times when she is not in her office.\nShe is usually in meetings a lot.\n--feedback--\nMaria also spends a significant amount of time working from her office, not just in meetings.\nShe usually works from her office but often has meetings.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 26.82,\n\"finishTimestamp\": 30.36\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.54,\n\"dialogue\": {\n\"text\": \"She works from her office most of the time, but she's also in meetings a lot.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.04\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1745,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce9e5593ae449e7ae6073.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6d256436f30200a98a85defb53e3e41d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce22e1bdf763280ae1e2b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ce22e1bdf763280ae1e2b\ntitle: Task 65\nchallengeType: 19\ndashedName: task-65\n--description--\nIn the sentence Where does she usually work from?, the word where asks for a place or location. Does is used as an auxiliary verb to form a question in the simple present tense, and usually is an adverb of frequency that indicates something that happens most of the time. Tom is asking for the regular place where Maria performs her work.\n--instructions--\nRead the question below and choose the answer that best explains what information the question is seeking.\n--questions--\n--text--\nWhere does she usually work from?\n--answers--\nWhat she likes to do.\n--feedback--\nThe question does not ask about preferences or likes, but about a location.\nThe time she works.\n--feedback--\nThe question does not concern the time of work, but the place.\nWhere she typically does her work.\nWho she works with.\n--feedback--\nThe question is about a place, not about the people she works with.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 24.78,\n\"finishTimestamp\": 26.26\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.48,\n\"dialogue\": {\n\"text\": \"Where does she usually work from?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 2.98\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ce22e1bdf763280ae1e2b.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9f9a8cb44c949e4abb28b9982fe0fb97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cea90396c694e4fdcaeba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cea90396c694e4fdcaeba\ntitle: Task 67\nchallengeType: 22\ndashedName: task-67\n--description--\nYou use when to ask about the time or date something happens. It's like asking, When is your birthday? or When do we have lunch?\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nBLANK does she often hold team meetings?\n--blanks--\nWhen\n--feedback--\nThe word you need is a question word that asks about time. It's used at the beginning of a question when you want to know the time something happens.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 30.78,\n\"finishTimestamp\": 33.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.84,\n\"dialogue\": {\n\"text\": \"I see. When does she usually hold team meetings?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.34\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cea90396c694e4fdcaeba.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "be7a619bc8c088a0e31237ea0ad12d07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ceafb64fd6a5076b32c8b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ceafb64fd6a5076b32c8b\ntitle: Task 68\nchallengeType: 22\ndashedName: task-68\n--description--\nWhen you use the verb hold in the context of meetings, it means to have or conduct a meeting. Like saying, Our school holds an assembly every Friday. It means this school has assemblies every Friday.\n--fillInTheBlank--\n--sentence--\nWhen does she often BLANK team meetings?\n--blanks--\nhold\n--feedback--\nThe verb hold is used when someone organizes or carries out a meeting or an event. It's not about physically holding something, but about managing an event.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 599,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ceafb64fd6a5076b32c8b.md",
      "source_type": "git_repo"
    },
    "token_count": 140,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1d5c207aa280e092e288acbf2b6d6a0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cebddc542e05459add214.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cebddc542e05459add214\ntitle: Task 69\nchallengeType: 22\ndashedName: task-69\n--description--\nTo schedule means to arrange for an event or activity to take place at a specific time. It's like making an appointment or setting up a time for something.\nFor example: I schedule my doctor's appointments for the first thing in the morning.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nShe BLANK team meetings every Monday morning to plan the week ahead.\n--blanks--\nschedules\n--feedback--\nThis verb is used to talk about planning or arranging a meeting or event for a certain time. It's like making a plan for when something will happen.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 34.34,\n\"finishTimestamp\": 37.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.08,\n\"dialogue\": {\n\"text\": \"She schedules team meetings every Monday morning to plan the week ahead.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.58\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1625,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cebddc542e05459add214.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f2b15bd855269ae615fefc9f470f8270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cec5d8f35ab56c672b561.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cec5d8f35ab56c672b561\ntitle: Task 70\nchallengeType: 19\ndashedName: task-70\n--description--\nWhen you want to talk about something that happens regularly on a specific day of the week, you use the expression every followed by the day.\nFor example, I go to the gym every Tuesday.\n--questions--\n--text--\nWhat does every Monday mean?\n--answers--\nOnly on the next Monday.\n--feedback--\nThis option would mean just the coming Monday.\nOn Monday, one time.\n--feedback--\nThis choice would suggest it happens once, which is not what a regular meeting does.\nOn Mondays, sometimes.\n--feedback--\nSometimes means not every time.\nOn Mondays, every week.\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cec5d8f35ab56c672b561.md",
      "source_type": "git_repo"
    },
    "token_count": 164,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d089bf3c2fd6799bdd304dfedf152df5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cece074e011590731dee2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cece074e011590731dee2\ntitle: Task 71\nchallengeType: 19\ndashedName: task-71\n--description--\nWhen you have meetings to plan ahead, it means you discuss and decide on things that will happen in the future. It helps everyone know what to do before things happen. Like saying, We have a family meeting to plan our vacation.\n--questions--\n--text--\nWhy does Maria hold team meetings on Mondays according to Sophie?\n--answers--\nTo plan the past week.\n--feedback--\nTo plan the past week would be looking back, not planning for what is coming.\nTo plan a break.\n--feedback--\nA meeting to plan a break is not about planning work.\nTo plan the work for the coming week.\nTo start work late on Mondays.\n--feedback--\nStarting work late is not related to planning or meetings.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 34.34,\n\"finishTimestamp\": 37.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.08,\n\"dialogue\": {\n\"text\": \"She schedules team meetings every Monday morning to plan the week ahead.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.58\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1750,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cece074e011590731dee2.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d226d3aeabefaf2d8f2d2605dc426659",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ced2d5ea0ae5baac42551.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ced2d5ea0ae5baac42551\ntitle: Task 72\nchallengeType: 19\ndashedName: task-72\n--description--\nTo handle something in English means to manage or deal with a situation. When it comes to pressure, handling pressure means dealing with stress or difficult situations in a calm and effective way.\n--questions--\n--text--\nWhat does it mean to handle pressure in a project?\n--answers--\nTo ignore the problems.\n--feedback--\nIgnoring problems usually makes the situation worse, not better.\nTo manage stress and challenges well.\nTo let others solve the issues.\n--feedback--\nHanding over issues to others does not mean you are handling them yourself.\nTo increase the difficulty.\n--feedback--\nHandling pressure is about managing, not increasing difficulty.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 38.76,\n\"finishTimestamp\": 41.08\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.32,\n\"dialogue\": {\n\"text\": \"How does she handle challenges in our projects?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.82\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1592,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ced2d5ea0ae5baac42551.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3bcb5e15243022e120ae1c905719a753",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ced8b322c055e500c2d23.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ced8b322c055e500c2d23\ntitle: Task 73\nchallengeType: 22\ndashedName: task-73\n--description--\nThe verb to think is used to express an opinion or belief about something. It is what you do with your mind when you consider or have an opinion on something.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nMaria BLANK challenges are positive\n--blanks--\nthinks\n--feedback--\nRemember to conjugate the verb. This verb is about using your mind to form opinions or beliefs. It is not about seeing with your eyes or feeling with your hands.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 41.96,\n\"finishTimestamp\": 46.26\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.30,\n\"dialogue\": {\n\"text\": \"Maria thinks challenges are positive. She encourages us to find solutions together.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.80\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1538,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ced8b322c055e500c2d23.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "96f92ea7bd8f7eb0de3dd1c41811aa4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfddfaca4b58b1279aaf9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cfddfaca4b58b1279aaf9\ntitle: Task 74\nchallengeType: 22\ndashedName: task-74\n--description--\nTo encourage means to give support, confidence, or hope to someone. It's what a good coach does to motivate their team to do their best.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nMaria thinks challenges are positive. She BLANK us to find solutions together.\n--blanks--\nencourages\n--feedback--\nRemember to conjugate the verb. The verb you need is about motivating or inspiring someone to do something. It's similar to cheering someone on.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 41.96,\n\"finishTimestamp\": 46.26\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.30,\n\"dialogue\": {\n\"text\": \"Maria thinks challenges are positive. She encourages us to find solutions together.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.80\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1548,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfddfaca4b58b1279aaf9.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fe6770efc216d9b7a82771d769d5134d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfe38b7aa33903ac91d6d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cfe38b7aa33903ac91d6d\ntitle: Task 75\nchallengeType: 19\ndashedName: task-75\n--description--\nThe adjective supportive is used to describe someone who provides encouragement or assistance to others. Think of it like a strong pillar that holds up a building - a supportive person helps to hold you up when you need it.\n--questions--\n--text--\nWhat does supportive mean when talking about a person?\n--answers--\nThey make things difficult for others.\n--feedback--\nMaking things difficult is the opposite of being supportive.\nThey give help and encouragement.\nThey are always asking for help.\n--feedback--\nAsking for help is not related to being supportive to others.\nThey ignore others' needs.\n--feedback--\nIgnoring others' needs is not a characteristic of a supportive person.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 51.02,\n\"finishTimestamp\": 53.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.00,\n\"dialogue\": {\n\"text\": \"She's supportive and she helps us a lot.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.50\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1625,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfe38b7aa33903ac91d6d.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "87dd5ee46c985e09c7979831031a83bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfeeeabb34d946d437dc7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cfeeeabb34d946d437dc7\ntitle: Task 77\nchallengeType: 19\ndashedName: task-77\n--description--\nThe expression to be in good hands means that someone is being taken care of by a competent or capable person.\nIt's like saying you can relax because you trust the person helping or looking after you.\n--questions--\n--text--\nWhat does Sophie mean when she says I think you are in good hands?\n--answers--\nTom needs good hands.\n--feedback--\nThe phrase doesn't refer to physically handling an object.\nTom is holding something good.\n--feedback--\nIt is not about holding something in your hands.\nMaria is a capable leader.\nTom is in trouble.\n--feedback--\nThe phrase suggests that Tom is indeed being helped, and well.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 57.46,\n\"finishTimestamp\": 60.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.94,\n\"dialogue\": {\n\"text\": \"Maria is a fantastic leader to have. I think you're in good hands.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.44\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1695,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfeeeabb34d946d437dc7.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "70ee138bc31ac8229e2ec3bca167b4cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cff86dd812f98672e2649.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cff86dd812f98672e2649\ntitle: Task 78\nchallengeType: 19\ndashedName: task-78\n--description--\nThis part of the conversation is to check if you understand what Sophie says about Maria. It is not just about the words, but the meaning behind them.\n--questions--\n--text--\nWhat does Sophie think about Maria as a leader?\n--answers--\nShe thinks Maria is not a good leader.\n--feedback--\nSophie uses positive words to describe Maria, not negative.\nShe believes Maria is an average leader.\n--feedback--\nSophie's words are very positive, more than just average.\nShe is unsure about Maria's leadership skills.\n--feedback--\nSophie does not express doubt; she is quite positive about Maria.\nShe feels that Maria is an excellent leader.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 57.36,\n\"finishTimestamp\": 60.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.04,\n\"dialogue\": {\n\"text\": \"Maria is a fantastic leader to have. I think you're in good hands.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.54\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cff86dd812f98672e2649.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6ec5604274ed0499744601d8c100ba2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbd1ebf21b2096966fe0d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dbd1ebf21b2096966fe0d\ntitle: Task 80\nchallengeType: 19\ndashedName: task-80\n--description--\nRemember, the auxiliary verb do is used to form questions in the present simple tense.\n--questions--\n--text--\nWhich question is asking about the regular occurrence of team meetings?\n--answers--\nMeetings happen every week?\n--feedback--\nThis is a statement, not a question.\nHappen meetings every week?\n--feedback--\nThe order of words is not correct for a question in English.\nDo meetings happen every week?\nDoes meetings every week?\n--feedback--\nDoes is used with he, she, or it, not they.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 3.70\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.70,\n\"dialogue\": {\n\"text\": \"Tell me about our team meetings, Sophie. Do they happen every week?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.20\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbd1ebf21b2096966fe0d.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8b7225ac59bc2f3df4bbeb2521e1d3a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbdae2bd6f60bda3226cc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dbdae2bd6f60bda3226cc\ntitle: Task 81\nchallengeType: 22\ndashedName: task-81\n--description--\nWhen you want to know how often something happens, you can use every followed by a time period like day, week, or year. In this dialogue, Tom is asking about the frequency of the team meetings.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nTell me about our team meetings, Sophie. Do they happen BLANK week?\n--blanks--\nevery\n--feedback--\nTom is asking if the meetings happen every week.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 3.70\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.70,\n\"dialogue\": {\n\"text\": \"Tell me about our team meetings, Sophie. Do they happen every week?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.20\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1518,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbdae2bd6f60bda3226cc.md",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b47471f96efe33422f4627c1a8a895fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbe6c256e75101aa95abb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dbe6c256e75101aa95abb\ntitle: Task 82\nchallengeType: 22\ndashedName: task-82\n--description--\nTo confirm information, especially in answers to yes/no questions, we often use the auxiliary verb do for emphasis. It reinforces that something is indeed true.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nYes, they BLANK. We have meetings on Monday mornings.\n--blanks--\ndo\n--feedback--\nSophie is confirming Tom's question positively, so she repeats the auxiliary verb do used in Tom's question.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.0,\n\"finishTimestamp\": 6.86\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.7,\n\"dialogue\": {\n\"text\": \"Tell me about our team meetings, Sophie. Do they happen every week?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.8\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 4.8\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5.54,\n\"finishTime\": 7.86,\n\"dialogue\": {\n\"text\": \"Yes, they do. We have meetings on Monday mornings.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 8.36\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2025,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbe6c256e75101aa95abb.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6296b9d8f590ecdadd62e3167d968ed9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfe92331ff7926a65dc47.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cfe92331ff7926a65dc47\ntitle: Task 76\nchallengeType: 19\ndashedName: task-76\n--description--\nIn this dialogue, Sophie says she likes working with Maria, their team lead Tom asks: Do you enjoy working with her To say yes to a question that starts with do, you can say Yes, I do or simply I do To say no, you can say No, I don't or I don't --questions--\n--text--\nWhat is Sophie's response to whether she enjoys working with Maria --answers--\nNo, she does not like it --feedback--\nSophie's response is positive, not negative She does not know Maria --feedback--\nSophie talks about Maria in a way that shows she knows her well Yes, she enjoys it She has never worked with her --feedback--\nThe conversation shows that Sophie does work with Maria and likes it --video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-3 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 47 62,\n\"finishTimestamp\": 53 02\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2 82,\n\"dialogue\": {\n\"text\": \"And do you enjoy working with her \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3 56,\n\"finishTime\": 6 4,\n\"dialogue\": {\n\"text\": \"I do She's supportive and she helps us a lot",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfe92331ff7926a65dc47.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3ad283a9f90606e74f732abf9648bf74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfe92331ff7926a65dc47.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"finishTimestamp\": 53 02 } }, \"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 2 82, \"dialogue\": { \"text\": \"And do you enjoy working with her \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 3 }, { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 3 }, { \"character\": \"Sophie\", \"startTime\": 3 56, \"finishTime\": 6 4, \"dialogue\": { \"text\": \"I do She's supportive and she helps us a lot\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 9\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfe92331ff7926a65dc47.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "51c70e01bc4d5653f6866d357acd48fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbeb6e94406122619ecad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dbeb6e94406122619ecad\ntitle: Task 83\nchallengeType: 19\ndashedName: task-83\n--description--\nThe word on is a preposition that you can use to talk about specific days of the week when something takes place. In this case, Sophie uses it to say exactly when the team meetings are scheduled.\n--questions--\n--text--\nWhat does Sophie say about the team meetings?\n--answers--\nWe have meetings on Monday mornings.\nWe have meetings at Monday mornings.\n--feedback--\nThe preposition at is not usually used with days.\nWe have meetings in Monday mornings.\n--feedback--\nWe don't use in with days of the week when talking about schedules.\nWe have meetings by Monday mornings.\n--feedback--\nBy indicates a deadline, not a regular meeting time.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.44,\n\"finishTimestamp\": 6.86\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.42,\n\"dialogue\": {\n\"text\": \"Yes, they do. We have meetings on Monday mornings.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.92\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbeb6e94406122619ecad.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a3c642af953e732a2a4a616a231bb710",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbfb128eaef185f5fb51b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dbfb128eaef185f5fb51b\ntitle: Task 84\nchallengeType: 19\ndashedName: task-84\n--description--\nThe word ongoing describes something that is currently in progress, continuing, or not yet finished.\n--questions--\n--text--\nWhat does ongoing mean in the context of projects?\n--answers--\nProjects that are in progress.\nProjects that are finished.\n--feedback--\nOngoing is the opposite of finished.\nProjects that are not started.\n--feedback--\nIf a project has not started, it cannot be ongoing.\nProjects that are postponed.\n--feedback--\nPostponed means delayed, which is not the same as ongoing.\n--video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dbfb128eaef185f5fb51b.md",
      "source_type": "git_repo"
    },
    "token_count": 147,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "69624e453e29089859892588d98b4dc1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc02d216cf41afa064333.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc02d216cf41afa064333\ntitle: Task 85\nchallengeType: 22\ndashedName: task-85\n--description--\nWhen you talk about going over details or talking about specific topics in a meeting, you use the verb discuss. It means to talk about something with someone.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nTom: Hmm… Do we BLANK all our ongoing projects in these meetings?\n--blanks--\ndiscuss\n--feedback--\nTom is asking if they talk about all the different projects they are working on during the meetings.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7.44,\n\"finishTimestamp\": 16.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.76,\n\"dialogue\": {\n\"text\": \"Hmm. Do we discuss all our ongoing projects in these meetings?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.77\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 5.77\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 6.57,\n\"finishTime\": 9.88,\n\"dialogue\": {\n\"text\": \"We do. It's a chance to update everyone on project progress.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 10.38\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2050,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc02d216cf41afa064333.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b3db713b9d3ce787f219bfc7a212099d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc0e16fb76f1f02a0c02a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc0e16fb76f1f02a0c02a\ntitle: Task 87\nchallengeType: 22\ndashedName: task-87\n--description--\nAn update is new information or the latest news about something. When you update someone, you are giving them the most recent information.\nThe phrase updates on project progress means giving new information about the present projects.\nThe preposition on in this context links the updates to the specific subject they are about - the project progress.\nIn English, you use on when you're talking about the topic of communication, like a presentation on science or an update on work. It shows a direct relationship between the communication and the topic.\n--fillInTheBlank--\n--sentence--\nIt's a chance to BLANK everyone BLANK project progress.\n--blanks--\nupdate\n--feedback--\nSophie is talking about sharing information to the team about projects.\non\n--feedback--\nSophie is talking about sharing information to the team about projects.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc0e16fb76f1f02a0c02a.md",
      "source_type": "git_repo"
    },
    "token_count": 206,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "aaf1df17dadcce5424f1c84d52736550",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc06c17779b1c77b8fccf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc06c17779b1c77b8fccf\ntitle: Task 86\nchallengeType: 19\ndashedName: task-86\n--description--\nThe word everyone is used to refer to all people in a group. The opposite of everyone is no one and nobody\nNo one and nobody both mean not a single person.\n--questions--\n--text--\nWho does Sophie say will be updated during the meetings?\n--answers--\nNo one from the team.\n--feedback--\nNo one means zero people, but Sophie says everyone will be updated, which is the opposite.\nOnly new team members.\n--feedback--\nSophie mentions everyone, which means not just new members, but all members, including those who have been on the team for a while.\nNobody from the team.\n--feedback--\nNobody is like saying no one, which again is the opposite of everyone that Sophie uses.\nAll the team members.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 13.00,\n\"finishTimestamp\": 16.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.32,\n\"dialogue\": {\n\"text\": \"We do. It's a chance to update everyone on project progress.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.82\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1761,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc06c17779b1c77b8fccf.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a4b3b8076b19fefeef2080d8a7e8afbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc130b35c3a20c8908eb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc130b35c3a20c8908eb1\ntitle: Task 88\nchallengeType: 22\ndashedName: task-88\n--description--\nWhen you talk about how much time an event or activity lasts, you are talking about its duration from start to finish. If something does not last long, it means it doesn't take a lot of time.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nTom: Awesome! Do they usually BLANK long?\nSophie: Not too long. They usually take about 30 to 45 minutes.\n--blanks--\nlast\n--feedback--\nThe phrase Tom uses is asking about the duration of the meetings.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.82,\n\"finishTimestamp\": 19.14\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.32,\n\"dialogue\": {\n\"text\": \"Awesome. Do they usually last long?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.82\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc130b35c3a20c8908eb1.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ea8ec048f2085a4289215620d7b15394",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc16b741b3a22902989b8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc16b741b3a22902989b8\ntitle: Task 89\nchallengeType: 19\ndashedName: task-89\n--description--\nThe phrase too long is used when something takes more time than is necessary or desired. For example, The meeting lasted four hours. Four hours is too long for a meeting!\nIt's different from so long, which is often used to express that something takes a significant amount of time, but it doesn't necessarily mean it's more than what is wanted.\n--questions--\n--text--\nWhich phrase means that the meetings take more time than desired?\n--answers--\nso long\n--feedback--\nSo long is not necessarily negative; it just indicates a period is lengthy.\nlong enough\n--feedback--\nLong enough suggests the time is sufficient but not excessive.\njust long\n--feedback--\nJust long is not a common phrase to describe duration and does not imply excess.\ntoo long\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.86,\n\"finishTimestamp\": 22.72\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.86,\n\"dialogue\": {\n\"text\": \"Not too long. They usually take about 30 to 45 minutes.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.36\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1721,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc16b741b3a22902989b8.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "69ebc9353eaad80674bd8ca2446e0c7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc1d18a0a6f25302badba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc1d18a0a6f25302badba\ntitle: Task 90\nchallengeType: 19\ndashedName: task-90\n--description--\nThe word reasonable means something is fair, makes sense, or is acceptable in a certain situation. For example, The price of the ticket is reasonable means the price is not too high and feels fair.\n--questions--\n--text--\nWhat does that's reasonable mean?\n--answers--\nToo late\n--feedback--\nReasonable is not about being too late; it means just right or enough.\nFair and acceptable\nToo long\n--feedback--\nIf something is reasonable, it's not too much. It is a good amount.\nUnplanned\n--feedback--\nReasonable is about being fair, not about planning.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 20.62,\n\"finishTimestamp\": 24.00\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.3,\n\"dialogue\": {\n\"text\": \"They usually take about 30 to 45 minutes.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.3\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 3.3\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 3.5,\n\"finishTime\": 4.38,\n\"dialogue\": {\n\"text\": \"That's reasonable.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.88\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc1d18a0a6f25302badba.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7a63901f2e24315f62f7b0fca8b3ebf2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfff65708189adb524933.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657cfff65708189adb524933\ntitle: \"Dialogue 4: Talking About the Monday Meetings\"\nchallengeType: 21\ndashedName: dialogue-4-talking-about-the-monday-meetings\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 3-4 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1 0,\n\"finishTime\": 4 4,\n\"dialogue\": {\n\"text\": \"Tell me about our team meetings, Sophie Do they happen every week \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 5,\n\"finishTime\": 7 5,\n\"dialogue\": {\n\"text\": \"Yes, they do We have meetings on Monday mornings \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 7 7,\n\"finishTime\": 13 2,\n\"dialogue\": {\n\"text\": \"Hmm… Do we discuss all our ongoing projects in these meetings \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 13 4,\n\"finishTime\": 17 4,\n\"dialogue\": {\n\"text\": \"We do It's a chance to update everyone on project progress \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 17 6,\n\"finishTime\": 20 1,\n\"dialogue\": {\n\"text\": \"Awesome",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4849,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfff65708189adb524933.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1b5cac66448287980ed800481b67d979",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfff65708189adb524933.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Monday mornings \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 7 7, \"finishTime\": 13 2, \"dialogue\": { \"text\": \"Hmm… Do we discuss all our ongoing projects in these meetings \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 13 4, \"finishTime\": 17 4, \"dialogue\": { \"text\": \"We do It's a chance to update everyone on project progress \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 17 6, \"finishTime\": 20 1, \"dialogue\": { \"text\": \"AwesomeDo they usually last long \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 20 8,\n\"finishTime\": 23 8,\n\"dialogue\": {\n\"text\": \"Not too long They usually take about 30 to 45 minutes \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 24 0,\n\"finishTime\": 27 5,\n\"dialogue\": {\n\"text\": \"That's reasonable Do we have an agenda for each meeting \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 27 7,\n\"finishTime\": 31 2,\n\"dialogue\": {\n\"text\": \"Yes, we do Maria prepares the agenda in advance \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 31 4,\n\"finishTime\": 35 2,\n\"dialogue\": {\n\"text\": \"Good to know Do the meetings involve everyone on the team \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 35 4,\n\"finishTime\": 38 7,\n\"dialogue\": {\n\"text\": \"Absolutely All the team members have a chance to speak,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 38 7,\n\"finishTime\": 40 4,\n\"dialogue\": {\n\"text\": \"so everyone knows what the others are doing \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 40 6,\n\"finishTime\": 45",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4849,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfff65708189adb524933.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8813282b2900db8a5bfc828a193327d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfff65708189adb524933.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"text\": \"Good to know Do the meetings involve everyone on the team \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 35 4, \"finishTime\": 38 7, \"dialogue\": { \"text\": \"Absolutely All the team members have a chance to speak,\", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 38 7, \"finishTime\": 40 4, \"dialogue\": { \"text\": \"so everyone knows what the others are doing \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 40 6, \"finishTime\": 451,\n\"dialogue\": {\n\"text\": \"That's important Does Maria assign tasks during these meetings \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 45 3,\n\"finishTime\": 49 3,\n\"dialogue\": {\n\"text\": \"Sometimes, but we normally discuss tasks we plan on tackling for the week \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 49 5,\n\"finishTime\": 52 0,\n\"dialogue\": {\n\"text\": \"Does this include brainstorming sessions \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 52 2,\n\"finishTime\": 55 2,\n\"dialogue\": {\n\"text\": \"Occasionally, yeah It depends on the project's needs \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 55 5,\n\"finishTime\": 58 3,\n\"dialogue\": {\n\"text\": \"I can't wait for the first meeting I'll attend \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 58 5,\n\"finishTime\": 59 5,\n\"dialogue\": {\n\"text\": \"Probably next Monday \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 60 5\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 61\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4849,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657cfff65708189adb524933.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b08b2ee38fe8115b01b102a84f5c0799",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc2fb63bc6c2b596dd6e4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc2fb63bc6c2b596dd6e4\ntitle: Task 92\nchallengeType: 22\ndashedName: task-92\n--description--\nListen to what Tom says to Sophie.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nThat's BLANK. Do we have an agenda for each meeting?\n--blanks--\nreasonable\n--feedback--\nThis word means something is good and makes sense. Tom thinks the meeting time is okay.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.14,\n\"finishTimestamp\": 26.52\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.38,\n\"dialogue\": {\n\"text\": \"That's reasonable. Do we have an agenda for each meeting?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.88\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1292,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc2fb63bc6c2b596dd6e4.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "508646c5d47939f0451b768088971490",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc263516a5127ce677b8b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc263516a5127ce677b8b\ntitle: Task 91\nchallengeType: 19\ndashedName: task-91\n--description--\nWhen talking about the duration of time something requires, you use the word take. For example, you can say, It takes me 10 minutes to get to the subway.\nWhen expressing opinions about time, phrases like too long or not too long are used. Too long suggests that the time is more than what is preferred, while not too long suggests that the time is just right or reasonable.\n--questions--\n--text--\nWhat is Sophie's opinion about the length of the meetings?\n--answers--\nThey are too long.\n--feedback--\nSophie indicates that the duration of the meetings is reasonable, not excessive.\nThey are not too long.\nThey are shorter than necessary.\n--feedback--\nThere's no mention of the meetings being shorter than necessary, only that they don't last too long.\nThey are exactly 45 minutes.\n--feedback--\nSophie gives a range of time, not an exact duration, for the meetings.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.86,\n\"finishTimestamp\": 22.72\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.86,\n\"dialogue\": {\n\"text\": \"Not too long. They usually take about 30 to 45 minutes.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.36\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1914,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc263516a5127ce677b8b.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3cf8adf0d3a5159664e3f7adb0adb753",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc3509f7c712df6a1c673.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc3509f7c712df6a1c673\ntitle: Task 93\nchallengeType: 22\ndashedName: task-93\n--description--\nAn agenda is a list of topics to be discussed or things to be done at a meeting. Having an agenda helps to organize the meeting and make sure important points are covered.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nThat's reasonable. Do we have an BLANK for each meeting?\n--blanks--\nagenda\n--feedback--\nThis word is used for a plan or a list that guides the meeting. It tells you what will be talked about.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 24.70,\n\"finishTimestamp\": 26.52\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.82,\n\"dialogue\": {\n\"text\": \"Do we have an agenda for each meeting?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.32\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc3509f7c712df6a1c673.md",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fa2fb4136d5d11a25c0167b261c164b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc40e8ceee1310ef482d1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc40e8ceee1310ef482d1\ntitle: Task 94\nchallengeType: 19\ndashedName: task-94\n--description--\nTo prepare in advance means to get something ready before the time it is needed. This helps meetings to go smoothly because everyone knows what will be discussed.\n--questions--\n--text--\nWhat does Maria prepares the agenda in advance mean?\n--answers--\nMaria makes the agenda during the meeting.\n--feedback--\nIn advance means to do something ahead of time, not during.\nMaria thinks about the agenda but doesn't write it down.\n--feedback--\nPrepares means to actually create or put together, not just think about.\nMaria gets the agenda ready before the meeting happens.\nMaria forgets to make the agenda.\n--feedback--\nPreparing in advance is the opposite of forgetting; it shows Maria is responsible.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.18,\n\"finishTimestamp\": 30.48\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.30,\n\"dialogue\": {\n\"text\": \"Maria prepares the agenda in advance.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.80\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1642,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc40e8ceee1310ef482d1.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a8c33522111d4ea2ca566c68664b63b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc45d37cb4a32eae1fd7a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc45d37cb4a32eae1fd7a\ntitle: Task 95\nchallengeType: 19\ndashedName: task-95\n--description--\nTry to remember what you have learned about a certain preposition.\n--instructions--\nChoose the standard preposition to complete the sentence about inclusion in a group.\n--questions--\n--text--\nDo the meetings involve everyone BLANK the team?\n--answers--\nin\n--feedback--\nIn the team is less commonly used and sounds less natural in this context.\non\nat\n--feedback--\nAt the team is not grammatically correct for indicating membership.\ninto\n--feedback--\nInto the team suggests movement or transition, not belonging.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 30.64,\n\"finishTimestamp\": 34.44\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.80,\n\"dialogue\": {\n\"text\": \"Good to know. Do the meetings involve everyone on the team?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.30\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc45d37cb4a32eae1fd7a.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "45dbe7652bb7c1881b7b8164bf2b7a03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc4c403f74135e0a8c7be.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc4c403f74135e0a8c7be\ntitle: Task 96\nchallengeType: 19\ndashedName: task-96\n--description--\nThe phrase have a chance to speak implies that everyone is given the opportunity to contribute to the conversation.\n--questions--\n--text--\nWhat does it mean when all the team members have a chance to speak?\n--answers--\nEveryone has the opportunity to express their thoughts.\nOnly certain members are allowed to talk.\n--feedback--\nChance here means the possibility for everyone, not just select individuals.\nTeam members can speak whenever they want, without order.\n--feedback--\nWhile everyone has a chance, it is implied that there is an order in the context of a meeting.\nNo one is allowed to speak during the meeting.\n--feedback--\nThe statement clearly says that all members have the opportunity, so it cannot mean that no one can speak.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 35.04,\n\"finishTimestamp\": 37.84\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.80,\n\"dialogue\": {\n\"text\": \"Absolutely. All the team members have a chance to speak\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.30\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1702,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc4c403f74135e0a8c7be.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cab129e7003ca065f35dd9290368112c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc50830f9be380105f1ee.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc50830f9be380105f1ee\ntitle: Task 97\nchallengeType: 19\ndashedName: task-97\n--description--\nIn English, the verb know is conjugated to knows when the subject is singular and in third person.\nEveryone refers to a group but it is treated as a singular noun, that's why in English the correct form is everyone knows.\n--questions--\n--text--\nWhy is the verb know used as knows after everyone?\n--answers--\nBecause everyone is considered a plural noun.\n--feedback--\nEveryone sounds plural but grammatically functions as a singular noun.\nBecause everyone is considered a singular noun.\nBecause the subject of the sentence is plural.\n--feedback--\nEven though team members is plural, everyone is the subject here.\nBecause it is referring to team members in the past tense.\n--feedback--\nThe tense of the verb is present, not past, as indicated by the context of the sentence.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 36.06,\n\"finishTimestamp\": 39.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.72,\n\"dialogue\": {\n\"text\": \"All the team members have a chance to speak, so everyone knows what the others are doing.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.22\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1790,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc50830f9be380105f1ee.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "03b6066dc54209c70989460077bc1d7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc5b1c14b693ce0584837.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc5b1c14b693ce0584837\ntitle: Task 99\nchallengeType: 19\ndashedName: task-99\n--description--\nSophie responds affirmatively about the team meetings.\n--questions--\n--text--\nWhat does Sophie confirm about the team members during the meetings?\n--answers--\nOnly some team members can speak.\n--feedback--\nThe word all means everyone is included, not just some people.\nTeam members must speak in a specific order.\n--feedback--\nThere's no mention of a specific speaking order in Sophie's response.\nSpeaking is restricted to senior team members only.\n--feedback--\nSophie doesn't say that only people with more experience can speak.\nEvery team member gets an opportunity to express themselves.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 35.04,\n\"finishTimestamp\": 39.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.74,\n\"dialogue\": {\n\"text\": \"Absolutely. All the team members have a chance to speak, so everyone knows what the others are doing.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.24\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1723,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc5b1c14b693ce0584837.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e58a34410fd40308b5ae81ea0065f07d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc568fe84e53acc962fc3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc568fe84e53acc962fc3\ntitle: Task 98\nchallengeType: 19\ndashedName: task-98\n--description--\nListen carefully to Tom's question about the team meetings.\n--questions--\n--text--\nWhat is Tom asking about in the meeting's context?\n--answers--\nThe duration of the meetings.\n--feedback--\nTom's question isn't about how much time the meetings take.\nThe location of the meetings.\n--feedback--\nHe doesn't mention where the meetings are held.\nThe involvement of team members.\nThe frequency of the meetings.\n--feedback--\nHe is not asking about how often the meetings occur; he knows they are weekly.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 27.34,\n\"finishTimestamp\": 34.44\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.14,\n\"dialogue\": {\n\"text\": \"Yes, we do. Maria prepares the agenda in advance.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.15\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 4.15\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 4.34,\n\"finishTime\": 8.10,\n\"dialogue\": {\n\"text\": \"Good to know. Do the meetings involve everyone on the team?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 8.60\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc568fe84e53acc962fc3.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0bd37f9b745351aca35e616ca3d192f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc5ff02128e3ed5ae3740.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc5ff02128e3ed5ae3740\ntitle: Task 100\nchallengeType: 19\ndashedName: task-100\n--description--\nSophie makes a statement about the outcome of team members having a chance to speak.\n--questions--\n--text--\nWhat is the result of all team members having the chance to speak, according to Sophie?\n--answers--\nNo one understands the projects.\n--feedback--\nSophie indicates that understanding is shared, not lacking.\nThere is confusion about tasks.\n--feedback--\nShe doesn't mention any confusion; she talks about sharing information.\nEach person is aware of the others' tasks.\nThe projects are often delayed.\n--feedback--\nDelay in projects is not mentioned as part of her statement.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 36.06,\n\"finishTimestamp\": 39.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.72,\n\"dialogue\": {\n\"text\": \"All the team members have a chance to speak, so everyone knows what the others are doing.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.22\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc5ff02128e3ed5ae3740.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4669d9076340d64b3adcd5cf2b8bbc5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc65ba83c584136bea3e4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc65ba83c584136bea3e4\ntitle: Task 101\nchallengeType: 19\ndashedName: task-101\n--description--\nTo assign tasks means to give specific work or duties to someone. For example, a teacher assigns homework to students.\n--questions--\n--text--\nChoose the sentence that correctly uses to assign tasks:\n--answers--\nMaria assigns the meeting room.\n--feedback--\nAssign tasks means to give work or jobs to do.\nMaria assigns jobs to the team.\nMaria assigns the meeting time.\n--feedback--\nAssign tasks means to give work or jobs to do.\nMaria assigns break times.\n--feedback--\nAssign tasks means to give work or jobs to do.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 41.48,\n\"finishTimestamp\": 48.72\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.72,\n\"dialogue\": {\n\"text\": \"Does Maria assign tasks during these meetings?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 4\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.52,\n\"finishTime\": 8.24,\n\"dialogue\": {\n\"text\": \"Sometimes, but we normally discuss tasks we plan on tackling for the week.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 8.74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1982,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc65ba83c584136bea3e4.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bbf99f918b0b1cf3e1effdc0f0823e15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc81ff9e4eb5177179dd0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc81ff9e4eb5177179dd0\ntitle: Task 105\nchallengeType: 19\ndashedName: task-105\n--description--\nOccasionally means something happens now and then. It is not all the time, and not never, but somewhere in between. If you occasionally get a bug in your code, it means it happens sometimes, but not too often.\nTake a look at these adverbs, and the frequency they usually represent.\n| Adverb       | Frequency | Adverb    | Frequency |\n| ------------ | --------- | --------- | --------- |\n| Never        | 0%        | Often     | 70%       |\n| Rarely       | 5%        | Generally | 80%       |\n| Seldom       | 15%       | Usually   | 90%       |\n| Occasionally | 30%       | Always    | 100%      |\n| Sometimes    | 50%       |           |           |\n--questions--\n--text--\nChoose the word that has a similar meaning to occasionally.\n--answers--\nFrequently\n--feedback--\nFrequently means it happens often, which is more than occasionally.\nRarely\n--feedback--\nRarely means it almost never happens, which is less than occasionally.\nSometimes\nAlways\n--feedback--\nAlways means it happens every time, which is not similar to occasionally.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc81ff9e4eb5177179dd0.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "16e7b09bb9da1a056722feacaa5da3c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc71c76da6e475ad4eb4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc71c76da6e475ad4eb4f\ntitle: Task 103\nchallengeType: 19\ndashedName: task-103\n--description--\nTo tackle tasks refers to trying to finish tasks as best as possible For example, programmers usually have to tackle coding tasks --questions--\n--text--\nWhat does the team do in the meetings --answers--\nThey do all the special tasks given by Maria --feedback--\nThe conversation suggests that tasks are shared among team members, not just given to Maria They discuss the tasks the team intends to finish They have fun activities like playing games --feedback--\nWhile programming can be enjoyable, in the meeting, they discuss work-related tasks, not leisure activities They comment on the people who are not on time for the meetings --feedback--\nThere's no mention of punctuality in the conversation --video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 41 48,\n\"finishTimestamp\": 48 72\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 72,\n\"dialogue\": {\n\"text\": \"Does Maria assign tasks during these meetings \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 4\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 52,\n\"finishTime\": 8 24,\n\"dialogue\": {\n\"text\": \"Sometimes, but we normally discuss tasks we plan on tackling for the week \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 8 74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2341,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc71c76da6e475ad4eb4f.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "13339b7c0d7a573d85dbe60187492238",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc6a58ec0be432655eaf5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc6a58ec0be432655eaf5\ntitle: Task 102\nchallengeType: 22\ndashedName: task-102\n--description--\nIn English, words like sometimes, always, and never are used to describe the frequency of an action Sometimes is used when an action happens on certain occasions but not every time For example, I sometimes have coffee for breakfast It indicates possibility but not certainty Always is used when an action happens every single time without fail For instance, The sun always rises in the east It shows a consistent or habitual action Never means an action does not happen at any time For example, She never eats meat, indicating a complete absence of the action --instructions--\nListen to the audio, understand the context and complete this sentence with the\ncorrect adverb of frequency --fillInTheBlank--\n--sentence--\nMaria BLANK assigns tasks during the meetings --blanks--\nsometimes\n--feedback--\nSophie indicates that assigning tasks is not a consistent action --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 41 48,\n\"finishTimestamp\": 48 72\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 72,\n\"dialogue\": {\n\"text\": \"Does Maria assign tasks during these meetings \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 4\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 52,\n\"finishTime\": 8 24,\n\"dialogue\": {\n\"text\": \"Sometimes, but we normally discuss tasks we plan on tackling for the week",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc6a58ec0be432655eaf5.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d8d030fb948acd15e040c9addd94a749",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc6a58ec0be432655eaf5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} }, \"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 72, \"dialogue\": { \"text\": \"Does Maria assign tasks during these meetings \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 4 }, { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 4 }, { \"character\": \"Sophie\", \"startTime\": 4 52, \"finishTime\": 8 24, \"dialogue\": { \"text\": \"Sometimes, but we normally discuss tasks we plan on tackling for the week\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 8 74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc6a58ec0be432655eaf5.md",
      "source_type": "git_repo"
    },
    "token_count": 193,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ee999439e81e1de25bf0f3824c9c0b80",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc7a30bfd894f0ed12a4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc7a30bfd894f0ed12a4f\ntitle: Task 104\nchallengeType: 19\ndashedName: task-104\n--description--\nA brainstorming session is a meeting where people come together to think of new ideas or solve problems In a programming team, it might be a time when everyone suggests different ways to tackle a coding challenge --questions--\n--text--\nWhen do brainstorming sessions happen according to the conversation --answers--\nAlways when tasks are assigned --feedback--\nBrainstorming is not just for when we decide who does what When the client needs it --feedback--\nClient needs don't always lead to brainstorming When they are included in the meeting --feedback--\nJust because there is a meeting doesn't mean they will brainstorm When the project needs it --video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 49 2,\n\"finishTimestamp\": 54 56\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 04,\n\"dialogue\": {\n\"text\": \"Does this include brainstorming sessions \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3 1\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3 1\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3 1,\n\"finishTime\": 6 36,\n\"dialogue\": {\n\"text\": \"Occasionally, yeah It depends on the project's needs \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 86\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc7a30bfd894f0ed12a4f.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9d2bd535a3cff4989232282c1cb27347",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9e7b97f2c5b00f67b2f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc9e7b97f2c5b00f67b2f\ntitle: Task 108\nchallengeType: 19\ndashedName: task-108\n--description--\nProject's needs are the requirements or things that a project must have or achieve. In programming, this could include specific features, functions, or performance targets.\n--questions--\n--text--\nWhat determines the topics for meetings according to the conversation?\n--answers--\nThe manager's mood.\n--feedback--\nThe mood of a manager isn't a professional way to decide project actions.\nThe latest technology trends.\n--feedback--\nWhile trends can influence, they don't specifically dictate project needs.\nThe goals for the week.\n--feedback--\nWeekly goals may be part of it, but the overarching determinant is the project's needs.\nWhat the project requires.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 51.82,\n\"finishTimestamp\": 54.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.74,\n\"dialogue\": {\n\"text\": \"Occasionally, yeah. It depends on the project's needs.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.24\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1696,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9e7b97f2c5b00f67b2f.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "619a7244be6602db5952c26ea4454696",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9946a177a5938ad3854.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc9946a177a5938ad3854\ntitle: Task 107\nchallengeType: 22\ndashedName: task-107\n--description--\nIt depends on is used to say that the answer to a question can change based on different things. For example:\nHow long it takes to make a website depends on how big or small the job is.\nChoosing the coding language depends on the computer or system we use.\nNotice that after depends there's always the preposition on.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nOccasionally, yeah. It depends BLANK the project's needs.\n--blanks--\non\n--feedback--\nThe missing word is not of, in, or at, which are also prepositions but don't fit in this phrase.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 51.82,\n\"finishTimestamp\": 54.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.74,\n\"dialogue\": {\n\"text\": \"Occasionally, yeah. It depends on the project's needs.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.24\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1606,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9946a177a5938ad3854.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "451fc1d60fbc63ceecc9f84333ba6300",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dca3c709bf15dd0572a6b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dca3c709bf15dd0572a6b\ntitle: Task 109\nchallengeType: 22\ndashedName: task-109\n--description--\nTo attend means to go to an event, meeting, or class. For example, a programmer attends a team meeting to discuss the week's tasks.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nI can't wait for the first meeting I'll BLANK.\n--blanks--\nattend\n--feedback--\nTom is talking about going to the meeting.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 55.22,\n\"finishTimestamp\": 57.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.18,\n\"dialogue\": {\n\"text\": \"I can't wait for the first meeting I'll attend.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.68\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1318,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dca3c709bf15dd0572a6b.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "57fc059c0b38724ad5a19b8215e270b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcd1ade6c116a0bc7c9b2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dcd1ade6c116a0bc7c9b2\ntitle: Task 112\nchallengeType: 22\ndashedName: task-112\n--description--\nWhen you move to a new place or visit somewhere for the first time, you might spend time learning about what's around you, like the shops, streets, and services. This is called getting to know the area. It's a way to become more familiar with the nearby places and how to find them.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHi Maria! I'm still BLANK to know the area. Is there an ATM nearby?\n--blanks--\ngetting\n--feedback--\nTom is talking about learning more about what's close to him in the new place.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 2.50\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.50,\n\"dialogue\": {\n\"text\": \"Hi Maria. I'm still getting to know the area.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.00\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcd1ade6c116a0bc7c9b2.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5f8388368d8ace391ee4d6fd61e28ef6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dca763bc23c5fc3398d95.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dca763bc23c5fc3398d95\ntitle: Task 110\nchallengeType: 19\ndashedName: task-110\n--description--\nProbably is used when you think something is likely to happen, but you're not 100% sure For example, you could say: The code will probably run without errors after the update, because you believe that, but there's still a small chance of an issue --questions--\n--text--\nWhen does Sophie think Tom will attend his first meeting --answers--\nDefinitely next Monday --feedback--\nSophie says probably, which does not imply anything definite Maybe in two weeks --feedback--\nSophie uses probably, which suggests a greater level of certainty than maybe Next Monday, most likely On Friday --feedback--\nFriday was not mentioned in the dialog It has to do with another day of the week --video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 55 22,\n\"finishTimestamp\": 58 68\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 18,\n\"dialogue\": {\n\"text\": \"I can't wait for the first meeting I'll attend \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3 18\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3 18\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3 18,\n\"finishTime\": 4 46,\n\"dialogue\": {\n\"text\": \"Probably next Monday",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dca763bc23c5fc3398d95.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b3eef196ba8e37294feefbe59600b1c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dca763bc23c5fc3398d95.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"startTimestamp\": 55 22, \"finishTimestamp\": 58 68 } }, \"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 18, \"dialogue\": { \"text\": \"I can't wait for the first meeting I'll attend \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 3 18 }, { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 3 18 }, { \"character\": \"Sophie\", \"startTime\": 3 18, \"finishTime\": 4 46, \"dialogue\": { \"text\": \"Probably next Monday\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4 96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dca763bc23c5fc3398d95.md",
      "source_type": "git_repo"
    },
    "token_count": 207,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3e3dad7520223ed0850df77968e8d190",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcd54267f5d6bc85bd788.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dcd54267f5d6bc85bd788\ntitle: Task 113\nchallengeType: 22\ndashedName: task-113\n--description--\nIf you need to get some money and are looking for a machine that gives out cash, you can ask, Is there an ATM nearby?\nAn ATM, which stands for Automated Teller Machine, is a machine where you can use a bank card to take out cash.\nThe word nearby means it's not far from you, maybe a short walk away. It's a handy word to use when you need to find something quickly in a new place.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHi Maria! I'm still getting to know the area. Is there an BLANK BLANK?\n--blanks--\nATM\n--feedback--\nTom is asking about a specific machine to withdraw money, which is often found close to or inside a bank.\nnearby\n--feedback--\nTom is asking if something is not far, maybe a short walking distance.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 4.26\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.26,\n\"dialogue\": {\n\"text\": \"Hi Maria. I'm still getting to know the area. Is there an ATM nearby?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.76\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1803,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcd54267f5d6bc85bd788.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1ec08b7fe8a024caab48b1051402da40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9004d076d55baf36323.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dc9004d076d55baf36323\ntitle: Task 106\nchallengeType: 19\ndashedName: task-106\n--description--\nRemember, occasionally means something happens sometimes, but not regularly or often It's less frequent than sometimes and more frequent than rarely Here is the adverb frequency chart from the last challenge, for your convenience | Adverb       | Frequency | Adverb    | Frequency |\n| ------------ | --------- | --------- | --------- |\n| Never        | 0%        | Often     | 70%       |\n| Rarely       | 5%        | Generally | 80%       |\n| Seldom       | 15%       | Usually   | 90%       |\n| Occasionally | 30%       | Always    | 100%      |\n| Sometimes    | 50%       |           |           |\n--questions--\n--text--\nHow often do brainstorming sessions happen according to Sophie --answers--\nAt every meeting --feedback--\nIf it happened every meeting, Sophie would use always, not occasionally Now and then Almost never --feedback--\nOccasionally is more frequent than almost never After every project --feedback--\nAfter every project would be too frequent to match occasionally --video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 49 2,\n\"finishTimestamp\": 54 56\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 04,\n\"dialogue\": {\n\"text\": \"Does this include brainstorming sessions \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9004d076d55baf36323.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f16949bb6960fd0d14319e6628aeb7f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9004d076d55baf36323.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2 }, \"opacity\": 0 }, { \"character\": \"Sophie\", \"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 }, \"opacity\": 0 } ], \"audio\": { \"filename\": \"1 3-4 mp3\", \"startTime\": 1, \"startTimestamp\": 49 2, \"finishTimestamp\": 54 56 } }, \"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 04, \"dialogue\": { \"text\": \"Does this include brainstorming sessions \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 31\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 3 1\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 3 1,\n\"finishTime\": 6 36,\n\"dialogue\": {\n\"text\": \"Occasionally, yeah It depends on the project's needs \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 86\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dc9004d076d55baf36323.md",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1e2a5df1c97bf68e3042ebfb19ad2d7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcdb62814646de1b051c0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dcdb62814646de1b051c0\ntitle: Task 114\nchallengeType: 19\ndashedName: task-114\n--description--\nThe phrase there is is used to state the existence of something in a certain place. Maria uses this structure to inform Tom about the location of the bank.\n--questions--\n--text--\nWhat does Maria say is just a few blocks away?\n--answers--\nA shopping mall.\n--feedback--\nTom didn't ask about a shopping mall; he asked about a place to get money.\nA park.\n--feedback--\nMaria mentioned this place as a response to a question about an ATM, not a park.\nA gym.\n--feedback--\nThis location is typically related to ATMs and financial services, not a gym.\nA bank.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.48,\n\"finishTimestamp\": 7.66\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.18,\n\"dialogue\": {\n\"text\": \"Yes, there's a bank just a few blocks away.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.68\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcdb62814646de1b051c0.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "62c233b1bc0c69153cc57021c334c370",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dce8ff35869721311a5e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dce8ff35869721311a5e3\ntitle: Task 115\nchallengeType: 19\ndashedName: task-115\n--description--\nThere is is used for singular nouns when talking about the existence of one thing or place. It helps to describe what can be found in a particular location.\n--questions--\n--text--\nWhich sentence is correct for describing one place near you?\n--answers--\nThere are a bank just a few blocks away.\n--feedback--\nThere are is used for plural nouns, and bank is singular. You'll learn about there are in the next few lessons.\nIs there a bank just a few blocks away?\n--feedback--\nThis option is a question form, not a statement. You'll learn about questions later.\nThere is a bank just a few blocks away.\nThere is banks just a few blocks away.\n--feedback--\nBanks is plural, so it doesn't match there is.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dce8ff35869721311a5e3.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b997389d2a77591632814a86aa2ecd69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcee413423174ca3747f5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dcee413423174ca3747f5\ntitle: Task 116\nchallengeType: 22\ndashedName: task-116\n--description--\nTo elaborate a question using there is you just need to change the order of the verb to be, like so:\n| Affirmative | Interrogative |\n| --- | --- |\n| There is an ATM nearby. | Is there an ATM nearby? |\nThis form is useful when you're not sure if the place or item exists in that area and you want to ask about it.\n--instructions--\nComplete the sentence below.\n--fillInTheBlank--\n--sentence--\nHi Maria! I'm still getting to know the area. BLANK there an ATM nearby?\n--blanks--\nIs\n--feedback--\nTom is asking a question, so he needs to start with the correct question word order.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 725,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcee413423174ca3747f5.md",
      "source_type": "git_repo"
    },
    "token_count": 178,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ebba352410638d0835b47bccf38dd31c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcf46fdf3f37766568bed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dcf46fdf3f37766568bed\ntitle: Task 117\nchallengeType: 19\ndashedName: task-117\n--description--\nThere are is used when talking about the existence of multiple things or places in a particular location.\nFor example: There are many programming languages in the market.\n--questions--\n--text--\nWhat phrase does Maria use to indicate the existence of multiple parks near here?\n--answers--\nThere is a park.\n--feedback--\nThere is is used for singular nouns, not plural.\nThey are parks.\n--feedback--\nWhile they are is correct, it's not the phrase used in this context.\nThere are a park.\n--feedback--\nThere are is the correct phrase for indicating the existence of multiple parks near here.\nThere are parks.\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 810,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcf46fdf3f37766568bed.md",
      "source_type": "git_repo"
    },
    "token_count": 169,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "56e73bd101693675487105519877d7e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcf9f7d5c747a19a36c9c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dcf9f7d5c747a19a36c9c\ntitle: Task 118\nchallengeType: 22\ndashedName: task-118\n--description--\nWhen you want to ask about the existence of specific places or things in your current location, you can use the question structure Are there any... around here?.\nThe phrase around here refers to the immediate vicinity or nearby area.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nThat's good to know. BLANK there any parks BLANK here?\n--blanks--\nAre\n--feedback--\nWhich question word is Tom using?\naround\n--feedback--\nTom is asking Maria about places where people can relax or play outside.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.06,\n\"finishTimestamp\": 10.96\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.90,\n\"dialogue\": {\n\"text\": \"That's good to know. Are there any parks around here?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.40\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcf9f7d5c747a19a36c9c.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7cd2f02a41c9b62df76470701bf8059b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dcafa1e1a4a62dc03cb76\ntitle: \"Dialogue 5: Knowing the Area Around the Company\"\nchallengeType: 21\ndashedName: dialogue-5-knowing-the-area-around-the-company\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 3-5 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1 0,\n\"finishTime\": 3 2,\n\"dialogue\": {\n\"text\": \"Hi Maria I'm still getting to know the area \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 3 4,\n\"finishTime\": 4 9,\n\"dialogue\": {\n\"text\": \"Is there an ATM nearby \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 5 7,\n\"finishTime\": 8 2,\n\"dialogue\": {\n\"text\": \"Yes, there is a bank just a few blocks away \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 8 4,\n\"finishTime\": 9 7,\n\"dialogue\": {\n\"text\": \"That's good to know \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 9 9,\n\"finishTime\": 11 5,\n\"dialogue\": {\n\"text\": \"Are there any parks around here",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "bfbdc7d2299cb20e99e784ee10c7f909",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Is there an ATM nearby \", \"align\": \"left\" } }, { \"character\": \"Maria\", \"startTime\": 5 7, \"finishTime\": 8 2, \"dialogue\": { \"text\": \"Yes, there is a bank just a few blocks away \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 8 4, \"finishTime\": 9 7, \"dialogue\": { \"text\": \"That's good to know \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 9 9, \"finishTime\": 11 5, \"dialogue\": { \"text\": \"Are there any parks around here\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 11 7,\n\"finishTime\": 14 2,\n\"dialogue\": {\n\"text\": \"Yes, there are a couple of parks near here \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 14 4,\n\"finishTime\": 15 7,\n\"dialogue\": {\n\"text\": \"They're great for a break \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 15 9,\n\"finishTime\": 17 1,\n\"dialogue\": {\n\"text\": \"How about restaurants \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 17 3,\n\"finishTime\": 19 3,\n\"dialogue\": {\n\"text\": \"Are there any good restaurants in this neighborhood \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 19 5,\n\"finishTime\": 22 5,\n\"dialogue\": {\n\"text\": \"Yes, there are many restaurants within walking distance \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 22 7,\n\"finishTime\": 26 7,\n\"dialogue\": {\n\"text\": \"Fantastic Is there anything else interesting to check out \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 26 9,\n\"finishTime\": 28 7,\n\"dialogue\": {\n\"text\": \"Absolutely There's a gym \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 28",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "9cdabc67ed2c0adea8ffcdac722ecd62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"character\": \"Maria\", \"startTime\": 19 5, \"finishTime\": 22 5, \"dialogue\": { \"text\": \"Yes, there are many restaurants within walking distance \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 22 7, \"finishTime\": 26 7, \"dialogue\": { \"text\": \"Fantastic Is there anything else interesting to check out \", \"align\": \"left\" } }, { \"character\": \"Maria\", \"startTime\": 26 9, \"finishTime\": 28 7, \"dialogue\": { \"text\": \"Absolutely There's a gym \", \"align\": \"right\" } }, { \"character\": \"Maria\", \"startTime\": 289,\n\"finishTime\": 31 7,\n\"dialogue\": {\n\"text\": \"There are also great coffee shops not too far away \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 31 9,\n\"finishTime\": 34 4,\n\"dialogue\": {\n\"text\": \"How about bookstores or theaters \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 34 9,\n\"finishTime\": 38 4,\n\"dialogue\": {\n\"text\": \"Hmm… there isn't any theater around here that I know of \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 38 9,\n\"finishTime\": 40 9,\n\"dialogue\": {\n\"text\": \"The bookstores I remember are all downtown \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 41 1,\n\"finishTime\": 43 1,\n\"dialogue\": {\n\"text\": \"There's a bus that stops two blocks away \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 43 3,\n\"finishTime\": 45 3,\n\"dialogue\": {\n\"text\": \"Oh, how about a shopping mall \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 45 5,\n\"finishTime\": 47 5,\n\"dialogue\": {\n\"text\": \"Malls are everywhere \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 47 7,\n\"finishTime\": 49",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "43ea11c0bc1d6f2f840da88c53111fea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ \"character\": \"Maria\", \"startTime\": 41 1, \"finishTime\": 43 1, \"dialogue\": { \"text\": \"There's a bus that stops two blocks away \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 43 3, \"finishTime\": 45 3, \"dialogue\": { \"text\": \"Oh, how about a shopping mall \", \"align\": \"left\" } }, { \"character\": \"Maria\", \"startTime\": 45 5, \"finishTime\": 47 5, \"dialogue\": { \"text\": \"Malls are everywhere \", \"align\": \"right\" } }, { \"character\": \"Maria\", \"startTime\": 47 7, \"finishTime\": 497,\n\"dialogue\": {\n\"text\": \"I'm sure you can find them just by walking around a bit \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 49 9,\n\"finishTime\": 51 4,\n\"dialogue\": {\n\"text\": \"Thanks for your help, Maria \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 51 9,\n\"finishTime\": 52 7,\n\"dialogue\": {\n\"text\": \"You're welcome, Tom \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 52 8\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 53 3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dcafa1e1a4a62dc03cb76.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4a5cd6febff2c7324009e852f9357aa0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd09e586b597fe5cd0d3d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd09e586b597fe5cd0d3d\ntitle: Task 120\nchallengeType: 22\ndashedName: task-120\n--description--\nThey're is a contraction of they are.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nYes, there are a couple of parks near here. BLANK great for a break.\n--blanks--\nThey're\n--feedback--\nMaria is using a contraction to say that the parks are great for taking a break.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.56,\n\"finishTimestamp\": 14.68\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 4.12,\n\"dialogue\": {\n\"text\": \"Yes, there are a couple of parks near here. They're great for a break.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 4.62\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd09e586b597fe5cd0d3d.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a8091d90dd077210f9939fafc9e18c54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd047e755e37d58f5084f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd047e755e37d58f5084f\ntitle: Task 119\nchallengeType: 19\ndashedName: task-119\n--description--\nA couple of is a casual way of saying two or a small number of. It's often used in conversation to indicate a small quantity of something.\n--questions--\n--text--\nHow many parks are near here, according to Maria?\n--answers--\nOne park.\n--feedback--\nA couple of implies more than one.\nAbsence of parks.\n--feedback--\nA couple of suggests that there are some parks.\nSome parks, maybe two or three.\nMany parks.\n--feedback--\nA couple of indicates a small quantity, which doesn't match this answer.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.56,\n\"finishTimestamp\": 13.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.76,\n\"dialogue\": {\n\"text\": \"Yes, there are a couple of parks near here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1514,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd047e755e37d58f5084f.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "233b9dc64963dc42a4d82540498df5ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd46946896b8d19484e26.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd46946896b8d19484e26\ntitle: Task 122\nchallengeType: 22\ndashedName: task-122\n--description--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHow about restaurants? Are there BLANK good restaurants in this neighborhood?\n--blanks--\nany\n--feedback--\nThis word is often used in questions to ask if something exists or is available, without specifying a quantity.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15.06,\n\"finishTimestamp\": 18.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.36,\n\"dialogue\": {\n\"text\": \"How about restaurants? Are there any good restaurants in this neighborhood?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.86\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1316,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd46946896b8d19484e26.md",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "44a628a0fb2ee6a6edb3b9e6a303b651",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd5864c6f0e91483cc03b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd5864c6f0e91483cc03b\ntitle: Task 123\nchallengeType: 19\ndashedName: task-123\n--description--\nDescribing how close or far something is can be useful when discussing the location of places. The expression within walking distance means that the place is close enough to walk to comfortably.\n--questions--\n--text--\nWhat does Maria mean when she says the restaurants are within walking distance?\n--answers--\nThey are very far away.\n--feedback--\nWalking distance suggests nearness, not being far.\nThey require a bus ride.\n--feedback--\nIf something is within walking distance, you don't need to take a bus.\nThey are not accessible right now.\n--feedback--\nAccessibility isn't addressed by the term walking distance.\nThey are close enough to walk to.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.44,\n\"finishTimestamp\": 21.84\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.40,\n\"dialogue\": {\n\"text\": \"Yes, there are many restaurants within walking distance.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.90\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1694,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd5864c6f0e91483cc03b.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7e4d8c0d58f9edd9edbfd968d4af1028",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd5ff705f8b94667b03a8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd5ff705f8b94667b03a8\ntitle: Task 124\nchallengeType: 19\ndashedName: task-124\n--description--\nA gym is a place where people go to exercise.\n--questions--\n--text--\nWhat is Maria saying?\n--answers--\nIs there a gym?\n--feedback--\nThis choice is a question, but Maria is making a statement.\nThere are gym.\n--feedback--\nThis choice has a grammatical error; it should be There is a gym for singular.\nThere is gyms.\n--feedback--\nThis choice has a grammatical error; gyms is plural, so it should be There are gyms.\nThere is a gym.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 22.58,\n\"finishTimestamp\": 30.92\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.76,\n\"dialogue\": {\n\"text\": \"Fantastic. Is there anything else interesting to check out?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.76\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 3.76\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 4.36,\n\"finishTime\": 9.34,\n\"dialogue\": {\n\"text\": \"Absolutely. There's a gym. There are also great coffee shops not too far away.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 9.84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2102,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd5ff705f8b94667b03a8.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "54f288a9812977908e12465f9e59e071",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd6d4bd7e3b98294dd4a5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd6d4bd7e3b98294dd4a5\ntitle: Task 125\nchallengeType: 22\ndashedName: task-125\n--description--\nCoffee shops are cozy spots where people can purchase coffee and small bites to eat. They are also places where many like to sit to do some work or catch up with friends.\nWhen you hear the phrase not too far away, it means the coffee shops are at a good distance — they're easy to get to, but not right next door.\n--fillInTheBlank--\n--sentence--\nAbsolutely! There is a gym. There are also great BLANK not too far away.\n--blanks--\ncoffee shops\n--feedback--\nMaria is referring to places where you can get a coffee and often sit to enjoy your drink or meet with friends.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 710,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd6d4bd7e3b98294dd4a5.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0430b65bf2e2d8a39ab1c4173e8e02cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ddcd61f516cacdc7a04ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ddcd61f516cacdc7a04ca\ntitle: Task 128\nchallengeType: 19\ndashedName: task-128\n--description--\nMaria informs Tom about public transportation options, specifically mentioning a transportation that stops nearby. This is important for getting around the city, especially to places that are not within walking distance.\nTwo blocks away means that you need to walk past two street corners to get to a place. It's a short walk in a city.\nDowntown is the heart of a city where there are many shops, restaurants, and usually tall buildings.\n--questions--\n--text--\nWhat does Maria say stops two blocks away?\n--answers--\nA taxi.\n--feedback--\nMaria mentions a public transportation option, not a private service.\nA train.\n--feedback--\nTrains don't typically stop at blocks; they stop at stations.\nA bus.\nA bicycle rental.\n--feedback--\nRentals are usually stationary services, not something that stops.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37.92,\n\"finishTimestamp\": 42.38\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 5.46,\n\"dialogue\": {\n\"text\": \"The bookstores I remember are all downtown, but there's a bus that stops two blocks away.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 5.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1902,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ddcd61f516cacdc7a04ca.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0ae91565e88e7a597d68f0278d45c9fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd4012bce1081c8d8c934.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd4012bce1081c8d8c934\ntitle: Task 121\nchallengeType: 19\ndashedName: task-121\n--description--\nThe word any is often used in questions to ask if something exists or is available, without specifying a quantity It's useful when you don't know if there is something or how much there is and you want to find out For example: Are there any updates The word any is used to ask if there are updates without specifying a number Any is often used in questions and negative statements to mean some or even a little Here's how you might use it in different contexts:\nIn questions: Do you have any questions (It doesn't matter if there are many questions or just one; you're asking if there are questions at all )\nIn negative sentences: I don't have any money (I have zero money )\nWith offers and requests: Could I have any of these cookies (It doesn't matter which cookie; any cookie will do )\n--questions--\n--text--\nWhat does Tom want to know about the neighborhood --answers--\nIf there are good places to eat If it has good transportation --feedback--\nTom's question is specifically about places to eat, not transportation If there are entertainment places --feedback--\nRestaurants are places to eat, which is not the same as entertainment like theaters If there are shopping centers --feedback--\nShopping centers are not mentioned in this part of the conversation --video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-5 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15 06,\n\"finishTimestamp\": 18 42\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4 36,\n\"dialogue\": {\n\"text\": \"How about restaurants Are there any good restaurants in this neighborhood \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4 86\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2367,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd4012bce1081c8d8c934.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "17ddf201318f82c2f73c0b528fd508dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ddaaf8d89b4a56e3fdf78.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ddaaf8d89b4a56e3fdf78\ntitle: Task 127\nchallengeType: 22\ndashedName: task-127\n--description--\nMaria mentions that she doesn't know of any theater in the area. When you want to express that something does not exist or is not present somewhere, you use there isn't for singular nouns or there aren't for plural nouns.\nThere isn't is a contraction of there is not.\nThere aren't is a contraction of there are not.\n--instructions--\nListen to the audio to complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHmm….. BLANK any theater around here that I know of. The bookstores I remember are all downtown.\n--blanks--\nThere isn't\n--feedback--\nMaria is talking about one type of place for watching plays or movies, so you need the singular form here.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.5 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 34.7,\n\"finishTimestamp\": 40.0\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 6.3,\n\"dialogue\": {\n\"text\": \"There isn't any theater around here that I know of. The bookstores I remember are all downtown.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 6.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1750,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ddaaf8d89b4a56e3fdf78.md",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "21023282672630bb48c447b9eecf9ec0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd74fb90e759a783f4b9a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dd74fb90e759a783f4b9a\ntitle: Task 126\nchallengeType: 22\ndashedName: task-126\n--description--\nBookstores are shops that sell books, and theaters are places where you can watch live performances or movies When Tom asks about places for reading and watching performances, he uses the plural forms bookstores and theaters just by adding an s at the end of the word This is how you make most nouns plural in English --fillInTheBlank--\n--sentence--\nTom: How about BLANK or theaters Maria: Hmm… there isn't any BLANK around here that I know of The bookstores I remember are all downtown --blanks--\nbookstores\n--feedback--\nThe first word is related to places that sell books theater\n--feedback--\nThe second word is about a place where you can watch movies --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 3-5 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 31 28,\n\"finishTimestamp\": 40 0\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 02,\n\"dialogue\": {\n\"text\": \"How about bookstores or theaters \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3 02\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 3 02\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 4 4,\n\"finishTime\": 6 02,\n\"dialogue\": {\n\"text\": \"There isn't any theater around here that I know of \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 6 02,\n\"finishTime\": 9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2291,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd74fb90e759a783f4b9a.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "120f65bf14f7ee0ca8e4b2d5fb1bd7c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd74fb90e759a783f4b9a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 02, \"dialogue\": { \"text\": \"How about bookstores or theaters \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 3 02 }, { \"character\": \"Maria\", \"opacity\": 1, \"startTime\": 3 02 }, { \"character\": \"Maria\", \"startTime\": 4 4, \"finishTime\": 6 02, \"dialogue\": { \"text\": \"There isn't any theater around here that I know of \", \"align\": \"center\" } }, { \"character\": \"Maria\", \"startTime\": 6 02, \"finishTime\": 972,\n\"dialogue\": {\n\"text\": \"The bookstores I remember are all downtown \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 10 22\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2291,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dd74fb90e759a783f4b9a.md",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ba185000842e73ee2c08f4c8b4221cf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ddd7d4fc512b03741d9a3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657ddd7d4fc512b03741d9a3\ntitle: Task 129\nchallengeType: 19\ndashedName: task-129\n--description--\nShopping malls are large buildings with lots of different stores, and they're common in cities.\n--questions--\n--text--\nWhich sentence correctly describes the presence of shopping malls according to Maria?\n--answers--\nThere are closed malls.\n--feedback--\nThey don't discuss the opening hours of malls.\nThere aren't any malls.\n--feedback--\nMalls are easy to locate.\nMalls aren't very common in this area.\n--feedback--\nMalls are common in the area.\nThere are malls everywhere.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 42.84,\n\"finishTimestamp\": 46.28\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.86,\n\"dialogue\": {\n\"text\": \"Oh, how about a shopping mall?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 2.86\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 2.86\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 3.26,\n\"finishTime\": 4.44,\n\"dialogue\": {\n\"text\": \"Malls are everywhere.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 4.94\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657ddd7d4fc512b03741d9a3.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2f538e1d8133ba7f00786136f38c4d23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dde3c405eaab3e21b38bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657dde3c405eaab3e21b38bf\ntitle: Task 130\nchallengeType: 22\ndashedName: task-130\n--description--\nIt's polite to thank someone who helps you, and it's also polite to acknowledge their thanks. Maria uses a common expression to respond to Tom's gratitude.\n--instructions--\nComplete the sentence below.\n--fillInTheBlank--\n--sentence--\nBLANK welcome, Tom.\n--blanks--\nYou're\n--feedback--\nMaria is responding to Tom's thanks with a common two-word phrase that acknowledges his gratitude.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.3-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 50.70,\n\"finishTimestamp\": 51.54\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 1.84,\n\"dialogue\": {\n\"text\": \"You're welcome, Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 2.34\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\657dde3c405eaab3e21b38bf.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "49af76fb61171beb9c5c213c0a7adca6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c87473ff77dd52aa48dfb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c87473ff77dd52aa48dfb1\ntitle: Task 42\nchallengeType: 22\ndashedName: task-42\n--description--\nThis is a review of the entire dialogue you just studied --instructions--\nWrite the following words or phrases in the correct spot:\nOnly if, mostly, I saw you, It's a deal, I don't think, Back to, and How about you --fillInTheBlank--\n--sentence--\nSophie: Hey, Tom BLANK taking lots of pics with your cell phone outside the building Are you into photography Tom: Yes, I love it But I'm only practicing BLANK Do you have any hobbies Sophie: That's cool I like photography, but BLANK of it as a hobby I play the guitar in my free time Tom: Wow Electric or acoustic Sophie: Electric, for sure BLANK your hobbies, though Do you have any favorite photography themes Tom: I like landscapes and street photography, BLANK And you What kind of music do you like to play on your guitar Sophie: I enjoy classic rock But any nice tune makes my day Tom: Cool I want to hear you play some day Sophie: BLANK you show me your favorite pics Tom: BLANK --blanks--\nI saw you\n--feedback--\nThis indicates that the speaker noticed someone's actions earlier It begins with a pronoun followed by a verb in the past tense and then a pronoun How about you\n--feedback--\nThis is used to return a question to the other person It begins with an adverb, followed by a preposition, and then a pronoun I don't think\n--feedback--\nThis expresses doubt or negation about a belief It begins with a pronoun followed by an auxiliary verb, and then the main verb, which has a similar meaning to \"believe\" Back to\n--feedback--\nThis is used to redirect the conversation to a previous topic It begins with an adverb followed by a preposition mostly\n--feedback--\nThis describes the largest part of something, meaning \"mainly\" or \"primarily\" Only if\n--feedback--\nThis introduces a condition that must be met for something to happen It begins with an adverb followed by a conjunction It's a deal\n--feedback--\nThis confirms an agreement It begins with a contraction between a pronoun and a verb followed by a noun meaning \"an arrangement\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2356,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c87473ff77dd52aa48dfb1.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "41bec98688bdfa29920ab1f53f1531db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c872930067445099cc5a17.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c872930067445099cc5a17\ntitle: Task 19\nchallengeType: 22\ndashedName: task-19\n--description--\nThis is a review of the entire dialogue you just studied --instructions--\nWrite the following words or phrases in the correct spot:\nsounds like, Are you familiar, Is the team, Are you into, What's, how about, and Are you happy --fillInTheBlank--\n--sentence--\nSarah: Hi, Tom BLANK with the workplace so far Tom: Yes, it's great Everyone is friendly Listen, BLANK the team-building activities here Are they cool Sarah: Yes, we go out with the team sometimes BLANK these activities Tom: Absolutely They’re really fun BLANK the team’s favorite Sarah: Many of us enjoy the monthly game night Are you into board games Tom: Yes, I love board games Sarah: \"Monopoly\" and \"Ticket To Ride\" are popular choices BLANK with them Tom: Yes, I've played both before Great choices BLANK into playing games on computers as well, like \"Gartic\" Sarah: Oh, yeah \"Gartic\" is another favorite Maybe we can play some \"Gartic\" on the next game night Tom: That BLANK a plan, Sarah Thanks for the suggestions --blanks--\nAre you happy\n--feedback--\nThis forms a question asking if someone is satisfied or content It begins with an auxiliary verb and a pronoun followed by an adjective meaning \"pleased\" or \"satisfied\" how about\n--feedback--\nThis introduces a suggestion or ask about a different topic It begins with an adverb followed by a preposition Are you into\n--feedback--\nThis forms a question asking if someone is interested in a topic It begins with an auxiliary verb and a pronoun followed by a preposition What's\n--feedback--\nThis contraction of what and is is used to ask for information The apostrophe is a straight ' Don't forget to capitalize it Are you familiar\n--feedback--\nThis forms a question asking if someone knows or recognizes something It begins with an auxiliary verb and a pronoun, followed by an adjective meaning \"aware\" Is the team\n--feedback--\nThis forms a question about the preferences or opinions of a group It begins with a verb followed by a definite article and then a noun sounds like\n--feedback--\nThis indicates that something appears to be a good idea",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c872930067445099cc5a17.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "aad5e7c0d27a32c6e8276e4bee60f904",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c872930067445099cc5a17.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to capitalize it Are you familiar --feedback-- This forms a question asking if someone knows or recognizes something It begins with an auxiliary verb and a pronoun, followed by an adjective meaning \"aware\" Is the team --feedback-- This forms a question about the preferences or opinions of a group It begins with a verb followed by a definite article and then a noun sounds like --feedback-- This indicates that something appears to be a good ideaIt begins with a verb followed by a preposition meaning \"similar to\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c872930067445099cc5a17.md",
      "source_type": "git_repo"
    },
    "token_count": 101,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "378e647b046d1740e3af1768ba5f6e2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c879a63750f3579ad5f4c8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c879a63750f3579ad5f4c8\ntitle: Task 111\nchallengeType: 22\ndashedName: task-111\n--description--\nThis is a review of the entire dialogue you just studied --instructions--\nWrite the following words or phrases in the correct spot:\nlast long, Occasionally, have a chance, Do they happen, in advance, and ongoing --fillInTheBlank--\n--sentence--\nTom: Tell me about our team meetings, Sophie BLANK every week Sophie: Yes, they do We have meetings on Monday mornings Tom: Hmm… Do we discuss all our BLANK projects in these meetings Sophie: We do It's a chance to update everyone on project progress Tom: Awesome Do they usually BLANK Sophie: Not too long They usually take about 30 to 45 minutes Tom: That's reasonable Do we have an agenda for each meeting Sophie: Yes, we do Maria prepares the agenda BLANK Tom: Good to know Do the meetings involve everyone on the team Sophie: Absolutely All the team members BLANK to speak, so everyone knows what the others are doing Tom: That's important Does Maria assign tasks during these meetings Sophie: Sometimes, but we normally discuss tasks we plan on tackling for the week Tom: Does this include brainstorming sessions Sophie: BLANK, yeah It depends on the project's needs Tom: I can't wait for the first meeting I'll attend Sophie: Probably next Monday --blanks--\nDo they happen\n--feedback--\nThis forms a question asking if something occurs It begins with an auxiliary verb, followed by a pronoun and then a verb meaning \"to take place\" ongoing\n--feedback--\nThis describes something that is continuing or in progress last long\n--feedback--\nThis asks about the duration of something It begins with a verb meaning \"to continue\" followed by an adjective meaning \"for a significant time\" in advance\n--feedback--\nThis indicates that something is prepared or done ahead of time It begins with a preposition followed by a noun that means the same as beforehand have a chance\n--feedback--\nThis describes an opportunity to do something It begins with a verb meaning \"to possess\" followed by an article and then a noun meaning \"an opportunity\" Occasionally\n--feedback--\nThis means \"sometimes\", describing something that happens from time to time but not regularly",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c879a63750f3579ad5f4c8.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "930e6d184f81006fcd15ed262a16cc96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c877d423d7f1557758b79b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c877d423d7f1557758b79b\ntitle: Task 79\nchallengeType: 22\ndashedName: task-79\n--description--\nThis is a review of the entire dialogue you just studied --instructions--\nWrite the following words or phrases in the correct spot:\nassigns tasks, How does she, our team lead, her position, she likes, helps us, and usually hold --fillInTheBlank--\n--sentence--\nTom: Hey, Sophie Tell me about BLANK, Maria What is she like Sophie: Well, she's very proactive and BLANK everything in order I think she has a passion for technology and she enjoys leading our team Tom: Those are great traits for someone in BLANK, I think What does she do as the team lead Sophie: Maria coordinates our projects She BLANK and makes sure everything runs well Tom: That sounds important Where does she usually work from Sophie: She works from her office most of the time, but she's also in meetings a lot Tom: I see When does she BLANK team meetings Sophie: She schedules team meetings every Monday morning to plan the week ahead Tom: Got it BLANK handle challenges in our projects Sophie: Maria thinks challenges are positive She encourages us to find solutions together Tom: Great And do you enjoy working with her Sophie: I do She’s supportive and she BLANK a lot Tom: Nice Thanks for the information, Sophie Sophie: You're welcome Maria is a fantastic leader to have I think you’re in good hands --blanks--\nour team lead\n--feedback--\nThis refers to the person in charge of a team It begins with a possessive adjective followed by a noun meaning \"group\" and then a noun referring to a leadership role she likes\n--feedback--\nThis describes something someone enjoys doing It begins with a pronoun followed by a verb her position\n--feedback--\nThis refers to someone's job role It begins with a possessive adjective followed by a noun assigns tasks\n--feedback--\nThis describes the act of giving responsibilities to others It begins with a verb followed by a noun usually hold\n--feedback--\nThis describes how often an event is organized It begins with an adverb meaning \"most of the time\" followed by a verb How does she\n--feedback--\nThis introduces a question about the way someone handles something It begins with an adverb followed by auxiliary verb and then a pronoun",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2714,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c877d423d7f1557758b79b.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "48b2470ec7081f803191ed8d6c795640",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c877d423d7f1557758b79b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "by a noun assigns tasks --feedback-- This describes the act of giving responsibilities to others It begins with a verb followed by a noun usually hold --feedback-- This describes how often an event is organized It begins with an adverb meaning \"most of the time\" followed by a verb How does she --feedback-- This introduces a question about the way someone handles something It begins with an adverb followed by auxiliary verb and then a pronounhelps us\n--feedback--\nThis describes someone providing assistance It begins with a verb meaning \"to support\" followed by a pronoun referring to a group including the speaker",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2714,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c877d423d7f1557758b79b.md",
      "source_type": "git_repo"
    },
    "token_count": 121,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ca6a312cf1ccc03ab93d21bd5d59acac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd5296ffb500e3f2ce479.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 651dd5296ffb500e3f2ce479\ntitle: Task 1\nchallengeType: 22\ndashedName: task-1\n--description--\nIn English, contractions are commonly used to make speech sound more natural and fluent. You're is a contraction of you are.\nThis contraction is a combination of the pronoun you and the verb are, which is part of the verb to be. Are is used here in the present affirmative to make a statement or ask a question. This is a typical way to confirm someone's role or identity in English.\n--fillInTheBlank--\n--sentence--\nHello. BLANK the new graphic designer, right?\n--blanks--\nYou're\n--feedback--\nYou're is used, which is a contraction of you are. The verb to be is irregular. When conjugated with you, it becomes are, as in You are an English learner. Here, you're expresses the same meaning.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 2.38\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.88,\n\"dialogue\": {\n\"text\": \"Hello. You're the new graphic designer, right?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.38\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1683,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd5296ffb500e3f2ce479.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6a88a56825bc3dfb5969dd11a4a9809d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd5386ffb500e3f2ce47a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 651dd5386ffb500e3f2ce47a\ntitle: Task 2\nchallengeType: 22\ndashedName: task-2\n--description--\nIn English, to check or confirm something people sometimes use tag questions. For example, You're a programmer, right? Here, right? is used as a tag to check or confirm the previous statement.\n--fillInTheBlank--\n--sentence--\nHello. You're the new graphic designer, BLANK?\n--blanks--\nright\n--feedback--\nPay attention to the last word Maria says.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 2.38\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.88,\n\"dialogue\": {\n\"text\": \"Hello. You're the new graphic designer, right?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.38\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1315,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd5386ffb500e3f2ce47a.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6bdddc4075fc7624b40ae8300a2748e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543aa3df5f028dba112f275.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6543aa3df5f028dba112f275\ntitle: Task 4\nchallengeType: 22\ndashedName: task-4\n--description--\nA team lead is a person who leads or manages a team. In the dialogue, Maria introduces herself as the team lead, meaning she has a leadership role.\n--fillInTheBlank--\n--sentence--\nI'm Maria, the BLANK BLANK.\n--blanks--\nteam\n--feedback--\nFocus on the term Maria used to describe herself.\nlead\n--feedback--\nFocus on the term Maria used to describe herself.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.5 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 2.6,\n\"finishTimestamp\": 4\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.2,\n\"dialogue\": {\n\"text\": \"I'm Maria, the team lead.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 2.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1346,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543aa3df5f028dba112f275.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f7bac84a5a15c7e3a4bd40f447c30ec0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6537e6ece93e5724eeb27c54.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6537e6ece93e5724eeb27c54\ntitle: Task 3\nchallengeType: 19\ndashedName: task-3\n--description--\nIn English, we often mention our job or role in a company by saying, I'm [name], the [job title]. Name refers to the person's name, and job title is their occupation. This lets others know our position or role.\n--questions--\n--text--\nWhat is Maria's job role at the company?\n--answers--\nGraphic Designer\n--feedback--\nFocus on the term Maria used to describe herself.\nTeam Member\n--feedback--\nFocus on the term Maria used to describe herself.\nTeam Lead\nCEO\n--feedback--\nFocus on the term Maria used to describe herself.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.5 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 2.6,\n\"finishTimestamp\": 4\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.2,\n\"dialogue\": {\n\"text\": \"I'm Maria, the team lead.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 2.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6537e6ece93e5724eeb27c54.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fbb641eaf970078a272d2028ad1ae09a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c87a97b9e56a58fac4a7c6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c87a97b9e56a58fac4a7c6\ntitle: Task 131\nchallengeType: 22\ndashedName: task-131\n--description--\nThis is a review of the entire dialogue you just studied --instructions--\nWrite the following words or phrases in the correct spot:\nthere isn't any, getting to know, find them, not too far, a couple of, check out, and neighborhood --fillInTheBlank--\n--sentence--\nTom: Hi Maria I'm still BLANK the area Is there an ATM nearby Maria: Yes, there is a bank just a few blocks away Tom: That's good to know Are there any parks around here Maria: Yes, there are BLANK parks near here They're great for a break Tom: How about restaurants Are there any good restaurants in this BLANK Maria: Yes, there are many restaurants within walking distance Tom: Fantastic Is there anything else interesting to BLANK Maria: Absolutely There’s a gym There are also great coffee shops BLANK away Tom: How about bookstores or theaters Maria: Hmm… BLANK theater around here that I know of The bookstores I remember are all downtown There’s a bus that stops two blocks away Tom: Oh, how about a shopping mall Maria: Malls are everywhere I'm sure you can BLANK just by walking around a bit Tom: Thanks for your help, Maria Maria: You're welcome, Tom --blanks--\ngetting to know\n--feedback--\nThe process of becoming familiar with something It begins with a verb in the -ing form followed by a preposition and then a verb meaning \"to become familiar with\" a couple of\n--feedback--\nThis indicates a small number of something It begins with an article followed by a noun meaning \"two\" or \"a few\" and then a preposition neighborhood\n--feedback--\nThis refers to a specific area or district within a town or city It means \"a local community or surroundings\" check out\n--feedback--\nThis means to examine or explore something It begins with a verb meaning \"to inspect\" followed by a preposition meaning \"to look at\" not too far\n--feedback--\nThis describes something that is a short distance away It begins with an adverb of negation, followed by an adverb meaning \"a little\" and then an adjective meaning \"distant\" there isn't any\n--feedback--\nThis indicates that something does not exist",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c87a97b9e56a58fac4a7c6.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c32833c2444c02a0728b2f096126aa34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c87a97b9e56a58fac4a7c6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "means \"a local community or surroundings\" check out --feedback-- This means to examine or explore something It begins with a verb meaning \"to inspect\" followed by a preposition meaning \"to look at\" not too far --feedback-- This describes something that is a short distance away It begins with an adverb of negation, followed by an adverb meaning \"a little\" and then an adjective meaning \"distant\" there isn't any --feedback-- This indicates that something does not existIt begins with an adverb followed by a verb in the negative form and then a pronoun meaning \"none\" find them\n--feedback--\nThis indicates the ability to locate something It begins with a verb meaning \"to discover\" followed by a pronoun referring to multiple things",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-conversation-starters-in-the-break-room\\67c87a97b9e56a58fac4a7c6.md",
      "source_type": "git_repo"
    },
    "token_count": 154,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cf082339f640db1f4af504e6823970f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543aaa9f5f028dba112f276.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6543aaa9f5f028dba112f276\ntitle: Task 5\nchallengeType: 19\ndashedName: task-5\n--description--\nWhen someone makes a correct assumption or guess about you, you can confirm it using phrases like that's right. It's a way of agreeing or saying yes to what is said.\n--questions--\n--text--\nWhich phrase does Tom use to confirm Maria's statement about him?\n--answers--\nthat's wrong\n--feedback--\nThat's wrong is used to disagree.\nthat's okay\n--feedback--\nthat's okay usually shows acceptance, not confirmation.\nthat's right\nthat's left\n--feedback--\nthat's left refers to a direction, not confirmation.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.62,\n\"finishTimestamp\": 8.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.34,\n\"dialogue\": {\n\"text\": \"Hi, that's right. I'm Tom McKenzie. It's a pleasure to meet you.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1562,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543aaa9f5f028dba112f276.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "679e66c0b765f258517d34e9e25a357e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543aae6f5f028dba112f277.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6543aae6f5f028dba112f277\ntitle: Task 6\nchallengeType: 22\ndashedName: task-6\n--description--\nListen to the audio and complete the sentence below.\n--fillInTheBlank--\n--sentence--\nHi, BLANK BLANK! I'm Tom McKenzie. It's a pleasure to meet you.\n--blanks--\nthat's\nright\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.62,\n\"finishTimestamp\": 8.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.34,\n\"dialogue\": {\n\"text\": \"Hi, that's right. I'm Tom McKenzie. It's a pleasure to meet you.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543aae6f5f028dba112f277.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d69577e46b205338d50a444e8d666ca8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543abeff5f028dba112f278.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6543abeff5f028dba112f278\ntitle: Task 7\nchallengeType: 19\ndashedName: task-7\n--description--\nIn English, the verb to be is used to talk about identities, characteristics, and more. The contraction I'm is a combination of I and am. Here, Tom uses it to introduce himself.\n--questions--\n--text--\nWhich operation correctly expands the contraction I'm?\n--answers--\nI is\n--feedback--\nThink about which verb form would correctly fit with I to talk about oneself in the present.\nI am\nI was\n--feedback--\nThink about which verb form would correctly fit with I to talk about oneself in the present.\nI have\n--feedback--\nThink about which verb form would correctly fit with I to talk about oneself in the present.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.5,\n\"finishTimestamp\": 7\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.3,\n\"dialogue\": {\n\"text\": \"Hi, that's right. I'm Tom McKenzie.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543abeff5f028dba112f278.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eaf00d6b896c5ffabe31fec121091fd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543abf5f5f028dba112f279.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6543abf5f5f028dba112f279\ntitle: Task 8\nchallengeType: 22\ndashedName: task-8\n--description--\nThe word I'm is a contraction of I am. Contractions are a way to shorten common combinations of words, especially with verbs.\n--fillInTheBlank--\n--sentence--\nHi, that's right! BLANK Tom McKenzie.\n--blanks--\nI'm\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.5,\n\"finishTimestamp\": 7\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.3,\n\"dialogue\": {\n\"text\": \"Hi, that's right. I'm Tom McKenzie.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1140,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6543abf5f5f028dba112f279.md",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8d55646b1ca222681acf728f9d65ac0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd3e06ffb500e3f2ce478.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 651dd3e06ffb500e3f2ce478\ntitle: 'Dialogue 1: Maria Introduces Herself to Tom'\nchallengeType: 21\ndashedName: dialogue-1-maria-introduces-herself-to-tom\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 1-1 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 4 65,\n\"dialogue\": {\n\"text\": \"Hello You're the new graphic designer, right I'm Maria, the team lead \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 5 1,\n\"finishTime\": 9 1,\n\"dialogue\": {\n\"text\": \"Hi, that's right I'm Tom McKenzie It's a pleasure to meet you \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 9 7,\n\"finishTime\": 12 6,\n\"dialogue\": {\n\"text\": \"Welcome aboard, Tom How do you like California so far \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 12 7,\n\"finishTime\": 15 7,\n\"dialogue\": {\n\"text\": \"I like it It's different from Texas, but I like it here \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 16",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3061,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd3e06ffb500e3f2ce478.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "197a28e759acbd8bf079b0e65bad6ccd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd3e06ffb500e3f2ce478.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "right I'm Tom McKenzie It's a pleasure to meet you \", \"align\": \"right\" } }, { \"character\": \"Maria\", \"startTime\": 9 7, \"finishTime\": 12 6, \"dialogue\": { \"text\": \"Welcome aboard, Tom How do you like California so far \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 12 7, \"finishTime\": 15 7, \"dialogue\": { \"text\": \"I like it It's different from Texas, but I like it here \", \"align\": \"right\" } }, { \"character\": \"Maria\", \"startTime\": 162,\n\"finishTime\": 18 5,\n\"dialogue\": {\n\"text\": \"Great Let me show you to your desk \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 18 7,\n\"finishTime\": 21 2,\n\"dialogue\": {\n\"text\": \"Do you see the desk with a drawing tablet and a computer \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 21 4,\n\"finishTime\": 22 6,\n\"dialogue\": {\n\"text\": \"That's your workspace \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 22 8,\n\"finishTime\": 24 5,\n\"dialogue\": {\n\"text\": \"Everything looks great \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 24 5,\n\"finishTime\": 26 1,\n\"dialogue\": {\n\"text\": \"Thanks for showing me around the place, Maria \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 26 6\n},\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 27 1\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3061,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\651dd3e06ffb500e3f2ce478.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a3fecf17ad9eb38aedeffe89b3ab7b89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\655283c039eb38f51e0e6f7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 655283c039eb38f51e0e6f7e\ntitle: Task 9\nchallengeType: 19\ndashedName: task-9\n--description--\nTom is introducing himself using a full name.\n--questions--\n--text--\nWhich option is Tom using to formally introduce himself?\n--answers--\nI'm Tom McKenzie.\nCall me Tom.\n--feedback--\nTom is providing both his first name and surname in a formal way. Choose the option that reflects this.\nIt's a pleasure to meet you.\n--feedback--\nTom is providing both his first name and surname in a formal way. Choose the option that reflects this.\nIt's me, Tom.\n--feedback--\nTom is providing both his first name and surname in a formal way. Choose the option that reflects this.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.5,\n\"finishTimestamp\": 7\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.3,\n\"dialogue\": {\n\"text\": \"Hi, that's right. I'm Tom McKenzie.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\655283c039eb38f51e0e6f7e.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "57f7a061c2bcbff2c5c969e0e6bac710",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568bf620d3e770ea770123f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568bf620d3e770ea770123f\ntitle: Task 13\nchallengeType: 22\ndashedName: task-13\n--description--\nThe phrase so far is used in English to indicate the time up to the present moment or up to a certain point. Maria is asking Tom about his feelings or impressions of California from the time he arrived up until now.\n--fillInTheBlank--\n--sentence--\nHow do you like California BLANK BLANK?\n--blanks--\nso\n--feedback--\nThe phrase in the blanks refers to a period of time up to the present moment.\nfar\n--feedback--\nThe phrase in the blanks refers to a period of time up to the present moment.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.5 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.46,\n\"finishTimestamp\": 11.85\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.89,\n\"dialogue\": {\n\"text\": \"Welcome aboard, Tom. How do you like California so far?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 4.39\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1500,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568bf620d3e770ea770123f.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6e5c0ef81eb774a213bd634c01612e16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\65528a7c39eb38f51e0e6f7f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 65528a7c39eb38f51e0e6f7f\ntitle: Task 10\nchallengeType: 19\ndashedName: task-10\n--description--\nExpressions like It's a pleasure to meet you are commonly used when meeting someone for the first time as a polite way to greet someone.\n--questions--\n--text--\nWhat does Tom say to indicate he is happy to meet Maria?\n--answers--\nIt's a pleasure to see you\n--feedback--\nTom is being introduced to Maria for the first time. Listen to his choice of words!\nIt's a pleasure to meet you\nIt's a pleasure to know you\n--feedback--\nTom is being introduced to Maria for the first time. Listen to his choice of words!\nIt's a pleasure to call you\n--feedback--\nTom is being introduced to Maria for the first time. Listen to his choice of words!\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7,\n\"finishTimestamp\": 8.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.34,\n\"dialogue\": {\n\"text\": \"It's a pleasure to meet you.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 2.84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\65528a7c39eb38f51e0e6f7f.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e33107aedbd6aadddc929cdd62f5999e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6552939414fdaa21fc734788.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6552939414fdaa21fc734788\ntitle: Task 11\nchallengeType: 19\ndashedName: task-11\n--description--\nThe expression Welcome aboard is used to greet someone who has just joined a group, team, or organization. It's a warm way of saying \"We're glad you're here with us now\".\n--questions--\n--text--\nListen to the dialogue and select the correct meaning of Welcome aboard.\n--answers--\nMaria is happy Tom visited California.\n--feedback--\nThe phrase doesn't comment on Tom's visit to California.\nMaria is greeting Tom on a boat.\n--feedback--\nThe dialogue isn't about being on a boat.\nMaria is welcoming Tom to the team.\nMaria is introducing Tom to the board of directors.\n--feedback--\nMaria isn't introducing Tom to any board of directors.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.5 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.46,\n\"finishTimestamp\": 11.85\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.89,\n\"dialogue\": {\n\"text\": \"Welcome aboard, Tom. How do you like California so far?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 4.39\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1684,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6552939414fdaa21fc734788.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bded3e74f75e5c38eca73309268cfb16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c0f3792d990efe47949e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568c0f3792d990efe47949e\ntitle: Task 14\nchallengeType: 22\ndashedName: task-14\n--description--\nMaria wants to know about Tom's experience in California from when he arrived up until the current moment.\n--instructions--\nFill in the blanks with the appropriate words.\n--fillInTheBlank--\n--sentence--\nHow do you like California BLANK BLANK?\n--blanks--\nso\n--feedback--\nConsider a phrase that inquires about experiences up to the present moment.\nfar\n--feedback--\nConsider a phrase that inquires about experiences up to the present moment.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c0f3792d990efe47949e.md",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c24fdac23225663b9b180da32c5c517a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\65529784e7cb6e24eb03a1af.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 65529784e7cb6e24eb03a1af\ntitle: Task 12\nchallengeType: 22\ndashedName: task-12\n--description--\nWhen you want to ask someone for their opinion or feelings about something, especially a place or an experience, you can use the phrase How do you like.\nMaria is asking Tom about his impressions of California.\n--fillInTheBlank--\n--sentence--\nWelcome aboard, Tom! How do you BLANK California so far?\n--blanks--\nlike\n--feedback--\nThe verb in the blank refers to a way of asking someone's opinion or feelings about something.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.5 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.46,\n\"finishTimestamp\": 11.85\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.89,\n\"dialogue\": {\n\"text\": \"Welcome aboard, Tom. How do you like California so far?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 4.39\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1422,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\65529784e7cb6e24eb03a1af.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "280b920e4a15521c1a2fa813ba215302",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c181c8a1420f262b698b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568c181c8a1420f262b698b\ntitle: Task 15\nchallengeType: 22\ndashedName: task-15\n--description--\nWhen talking about preferences or feelings towards something, the phrase I like it is often used. Tom uses this phrase to express his positive feelings towards California.\n--fillInTheBlank--\n--sentence--\nBLANK like BLANK. It's different from Texas, but I like it here.\n--blanks--\nI\nit\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.9,\n\"finishTimestamp\": 15.18\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"I like it. It's different from Texas, but I like it here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1273,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c181c8a1420f262b698b.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "40a5fb26ff2cb150875e51aed700ef83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c3539307ad0f902d20e7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568c3539307ad0f902d20e7\ntitle: Task 16\nchallengeType: 19\ndashedName: task-16\n--description--\nTom is comparing his experience in California to his previous experience in Texas. When you want to highlight differences between two things, you can use the phrase different from.\n--questions--\n--text--\nWhich state is Tom comparing California to?\n--answers--\nTexas\nWashington\n--feedback--\nListen again.\nCalifornia\n--feedback--\nListen again.\nAlaska\n--feedback--\nListen again.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.9,\n\"finishTimestamp\": 15.18\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"I like it. It's different from Texas, but I like it here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c3539307ad0f902d20e7.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "79fb425ac32d00febe91e61cb7e2bf30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c618310cf51076e23d33.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568c618310cf51076e23d33\ntitle: Task 18\nchallengeType: 22\ndashedName: task-18\n--description--\nIn the dialogue, Tom uses It's as a contraction of It and is. This contraction is often used in spoken English to express feelings or opinions about something. You'll learn more about it in the next challenge.\n--fillInTheBlank--\n--sentence--\nI like it. BLANK different from Texas, but I like it here.\n--blanks--\nIt's\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.9,\n\"finishTimestamp\": 15.18\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"I like it. It's different from Texas, but I like it here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c618310cf51076e23d33.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e9e3842ef9a94d091beaf74cd2c1c8cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c3d772f1460fc81f40e9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568c3d772f1460fc81f40e9\ntitle: Task 17\nchallengeType: 22\ndashedName: task-17\n--description--\nWe often compare things using different from. It helps to describe how one thing is not the same as another.\n--fillInTheBlank--\n--sentence--\nIt's BLANK BLANK Texas, but I like it here.\n--blanks--\ndifferent\n--feedback--\nWhat words does Tom use to compare California and Texas?\nfrom\n--feedback--\nWhat words does Tom use to compare California and Texas?\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.9,\n\"finishTimestamp\": 15.18\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"I like it. It's different from Texas, but I like it here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1340,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c3d772f1460fc81f40e9.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d9a8f3fe766c0292a1b461b46ba52594",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c68b92a63810a57cffaf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568c68b92a63810a57cffaf\ntitle: Task 19\nchallengeType: 19\ndashedName: task-19\n--description--\nInstead of saying California is different from Texas, Tom says: It's different from Texas. Tom uses It's as a contraction of It and is. In this context, It refers to California.\nWhen talking about places or things, especially when comparing or describing them, it's serves as a subject and verb starter for the sentence.\n--questions--\n--text--\nIn the sentence It's different from Texas, what does It's refer to?\n--answers--\nTexas\n--feedback--\nIt's isn't referring to Texas but is rather being compared to it.\nThe weather\n--feedback--\nWhile the weather might be a factor, the dialogue does not specify this.\nThe food\n--feedback--\nThere's no mention of food in the dialogue.\nCalifornia\n--feedback--\nIn this context, It's refers to California, which Tom is describing in relation to Texas.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.9,\n\"finishTimestamp\": 15.18\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"I like it. It's different from Texas, but I like it here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1854,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c68b92a63810a57cffaf.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0e455a5a72718562eaebf28e936aeacd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c759cb59e810dfaa1506.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6568c759cb59e810dfaa1506\ntitle: Task 20\nchallengeType: 19\ndashedName: task-20\n--description--\nWhen expressing a positive feeling about a place, one might use the phrase I like it here. Tom is indicating that he has a positive feeling about California.\n--questions--\n--text--\nIn the dialogue, what does Tom's statement, I like it here, indicate?\n--answers--\nHe feels out of place in California.\n--feedback--\nI like it here shows a positive feeling, not feeling out of place.\nHe misses Texas a lot.\n--feedback--\nWhile Tom acknowledges differences from Texas, he doesn't explicitly express missing it in this line.\nHe is content and feels positive about California.\n--feedback--\nI like it here indicates contentment and positivity about the place.\nHe is neutral and has no strong feelings about California.\n--feedback--\nThe phrase I like it here shows a definite positive sentiment, not neutrality.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.9,\n\"finishTimestamp\": 15.18\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"I like it. It's different from Texas, but I like it here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1854,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\6568c759cb59e810dfaa1506.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a3ed1af0ab81cc9961f30542e24afcc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0dde6087df0dd5729d6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a0dde6087df0dd5729d6e\ntitle: Task 22\nchallengeType: 22\ndashedName: task-22\n--description--\nWhen someone wants to guide or direct another person somewhere, they can use let me show you to your [place], place being the destination.\n--fillInTheBlank--\n--sentence--\nLet me BLANK you to your BLANK.\n--blanks--\nshow\n--feedback--\nMaria wants to guide Tom to a place in the office.\ndesk\n--feedback--\nMaria wants to guide Tom to a place in the office.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15.5,\n\"finishTimestamp\": 17.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.5,\n\"dialogue\": {\n\"text\": \"Great. Let me show you to your desk.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1310,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0dde6087df0dd5729d6e.md",
      "source_type": "git_repo"
    },
    "token_count": 317,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "29d3b7d2be702f1b51465d32b25fce62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0d0e74f6a40d87328d38.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a0d0e74f6a40d87328d38\ntitle: Task 21\nchallengeType: 19\ndashedName: task-21\n--description--\nThe phrase I like it here is commonly used to express positive feelings about a current location or environment. When someone says this, they are often commenting on their general comfort, happiness, or satisfaction with the place they are in. In this dialogue, Tom is emphasizing his contentment in California, despite it being different from Texas.\n--questions--\n--text--\nWhat does Tom say to express he feels positively about his current location?\n--answers--\nI feel it here.\n--feedback--\nListen again. Focus on the word Tom uses after I and before here.\nI line it here.\n--feedback--\nListen again. Focus on the word Tom uses after I and before here.\nI live it here.\n--feedback--\nListen again. Focus on the word Tom uses after I and before here.\nI like it here.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.9,\n\"finishTimestamp\": 15.18\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.78,\n\"dialogue\": {\n\"text\": \"I like it. It's different from Texas, but I like it here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1822,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0d0e74f6a40d87328d38.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b99fcfbf367df048fdb0eb8d6fd8e80b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0eaf7d37610e43662464.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a0eaf7d37610e43662464\ntitle: Task 23\nchallengeType: 19\ndashedName: task-23\n--description--\nThe phrase let me show you is an offer of assistance or guidance. It expresses the speaker's intention to demonstrate or direct something to the listener.\n--questions--\n--text--\nWhich of the following best describes the meaning of let me show you?\n--answers--\nI don't know where it is.\n--feedback--\nThis phrase is about demonstrating or guiding, not hiding or buying.\nI will display or guide you to something.\nLet's buy this together.\n--feedback--\nThis phrase is about demonstrating or guiding, not hiding or buying.\nI'll hide this from you.\n--feedback--\nThis phrase is about demonstrating or guiding, not hiding or buying.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15.5,\n\"finishTimestamp\": 17.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.5,\n\"dialogue\": {\n\"text\": \"Great. Let me show you to your desk.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0eaf7d37610e43662464.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0c95baaa74ba8b27ac0f08e5a5c5f747",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0f4f303dce0e865e746b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a0f4f303dce0e865e746b\ntitle: Task 24\nchallengeType: 19\ndashedName: task-24\n--description--\nThe phrase let me show you can be used to direct attention and introduce something. For example:\nThis is the main office area. Let me show you to the conference room.\n--questions--\n--text--\nWhat is Maria directing attention to?\n--answers--\nMain office area\n--feedback--\nPay attention to the place mentioned after let me show you.\nKitchen\n--feedback--\nPay attention to the place mentioned after let me show you.\nDesk\nElevator\n--feedback--\nPay attention to the place mentioned after let me show you.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15.5,\n\"finishTimestamp\": 17.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.5,\n\"dialogue\": {\n\"text\": \"Great. Let me show you to your desk.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1437,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a0f4f303dce0e865e746b.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "10fd35617d2f5213528e6208d7f122c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a10141825a30eb81ff4db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a10141825a30eb81ff4db\ntitle: Task 25\nchallengeType: 19\ndashedName: task-25\n--description--\nA desk is often the central part of one's workspace, especially in an office setting. People typically use it to set up their computers, write, read, and do other work-related tasks.\n--questions--\n--text--\nWhat is a common activity people might do with their desk at the start of a workday?\n--answers--\nWater it like a plant\n--feedback--\nDesks are not plants. They don't need water to grow. Try it again!\nOrganize and tidy it\n--feedback--\nTo organize means to arrange things in a structured manner or specific order. Tidy up means to make something neat and orderly. Both these actions are commonly done to a workspace or desk to prepare for tasks. Well done!\nCook food on it\n--feedback--\nDesks are for working, not for cooking. They aren't heat-resistant like stovetops. Try it again!\nWear it like clothing\n--feedback--\nDesks are furniture items, not wearable objects. You can't put on a desk like a shirt or pants. Try it again!\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15.5,\n\"finishTimestamp\": 17.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 2.5,\n\"dialogue\": {\n\"text\": \"Great. Let me show you to your desk.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a10141825a30eb81ff4db.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "539bc8de2652d78400ef8ce336d87ed8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a1298f2a0400f56b31e25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a1298f2a0400f56b31e25\ntitle: Task 27\nchallengeType: 22\ndashedName: task-27\n--description--\nMaria is directing Tom to his workspace and describing certain items on his desk.\n--fillInTheBlank--\n--sentence--\nDo you see the desk with a BLANK BLANK and a computer?\n--blanks--\ndrawing\n--feedback--\nListen to the sentence.\ntablet\n--feedback--\nListen to the sentence.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 17.75,\n\"finishTimestamp\": 20.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.4,\n\"dialogue\": {\n\"text\": \"Do you see the desk with a drawing tablet and a computer?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.9\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1334,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a1298f2a0400f56b31e25.md",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "47cd24a5b948244609fd139876b46d24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a10aaa023200eddd09d88.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a10aaa023200eddd09d88\ntitle: Task 26\nchallengeType: 19\ndashedName: task-26\n--description--\nA drawing tablet is a tool that people use with computers to draw or design things.\n--questions--\n--text--\nWhat is a drawing tablet?\n--answers--\nA book to draw in.\n--feedback--\nThis is a sketchbook, not a drawing tablet.\nA tool for painting walls.\n--feedback--\nWe use brushes or rollers for this, not drawing tablets.\nA tool used with computers to draw.\n--feedback--\nYes! Drawing tablets connect to computers.\nA kind of chair.\n--feedback--\nWe don't draw with chairs. Think about a tool used with computers.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 17.75,\n\"finishTimestamp\": 20.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.4,\n\"dialogue\": {\n\"text\": \"Do you see the desk with a drawing tablet and a computer?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.9\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a10aaa023200eddd09d88.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f8b36d0e85195b90811a5a1251dc0325",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a137523a9bc0f9d3bae01.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a137523a9bc0f9d3bae01\ntitle: Task 29\nchallengeType: 19\ndashedName: task-29\n--description--\nThe term workspace is often used to describe the area where someone works, especially in an office environment.\n--questions--\n--text--\nWhat is Maria referring to when she says workspace?\n--answers--\nTom's home\n--feedback--\nThink about where Tom will be doing his work.\nThe cafeteria\n--feedback--\nThink about where Tom will be doing his work.\nTom's area to work at in the office\nThe meeting room\n--feedback--\nThink about where Tom will be doing his work.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 17.75,\n\"finishTimestamp\": 21.5\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 4.8,\n\"dialogue\": {\n\"text\": \"Do you see the desk with a drawing tablet and a computer? That's your workspace.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 5.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a137523a9bc0f9d3bae01.md",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "62e08c14d3c1ae4e50531dc38f872552",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a14b0e1c43d0ffabd15a9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a14b0e1c43d0ffabd15a9\ntitle: Task 31\nchallengeType: 19\ndashedName: task-31\n--description--\nExpressing gratitude is common in the workplace, especially when someone helps you. Tom thanks Maria for something specific.\n--questions--\n--text--\nWhat is Tom thanking Maria for?\n--answers--\nIntroducing him to the team.\n--feedback--\nTom is expressing gratitude for a specific action Maria did in the workplace. Listen again!\nShowing him his workspace.\nGiving him a computer.\n--feedback--\nTom is expressing gratitude for a specific action Maria did in the workplace. Listen again!\nTelling him about California.\n--feedback--\nTom is expressing gratitude for a specific action Maria did in the workplace. Listen again!\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 22,\n\"finishTimestamp\": 25.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.8,\n\"dialogue\": {\n\"text\": \"Everything looks great. Thanks for showing me around the place, Maria.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a14b0e1c43d0ffabd15a9.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "55675318180f82ab0cff2322445871e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a13f01a59cb0fc9d52149.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a13f01a59cb0fc9d52149\ntitle: Task 30\nchallengeType: 19\ndashedName: task-30\n--description--\nExpressing satisfaction or contentment in English can be done using various expressions. Everything looks great is one way to show that you are pleased or satisfied with something.\n--questions--\n--text--\nWhat is Tom expressing with Everything looks great?\n--answers--\nDissatisfaction\n--feedback--\nDoes Tom sound happy or unhappy with his new workspace?\nCuriosity\n--feedback--\nDoes Tom sound happy or unhappy with his new workspace?\nSatisfaction\nConfusion\n--feedback--\nDoes Tom sound happy or unhappy with his new workspace?\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 22,\n\"finishTimestamp\": 25.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.8,\n\"dialogue\": {\n\"text\": \"Everything looks great. Thanks for showing me around the place, Maria.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1546,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a13f01a59cb0fc9d52149.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bf847ab2b5a031fa6fdca7f3ad826b1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a18189b21f51037e518b4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a18189b21f51037e518b4\ntitle: Task 32\nchallengeType: 22\ndashedName: task-32\n--description--\nWhen expressing gratitude, we sometimes mention the action for which we are thankful. Here, Tom is specifically thanking Maria for something she did.\n--fillInTheBlank--\n--sentence--\nEverything looks great. Thanks for BLANK me around the BLANK, Maria.\n--blanks--\nshowing\n--feedback--\nWhat did Maria do for Tom that he's expressing gratitude for?\nplace\n--feedback--\nWhat did Maria do for Tom that he's expressing gratitude for?\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 22,\n\"finishTimestamp\": 25.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.8,\n\"dialogue\": {\n\"text\": \"Everything looks great. Thanks for showing me around the place, Maria.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1445,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a18189b21f51037e518b4.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ff287d01c5fa3bc4a01620785fbd54e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2b1c7216c026fcd156c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a2b1c7216c026fcd156c7\ntitle: Task 34\nchallengeType: 22\ndashedName: task-34\n--description--\nWhen greeting someone casually or for the first time, Hi there is a friendly way to say hello. It's often used in informal situations or to greet someone you might not know very well.\n--fillInTheBlank--\n--sentence--\nBLANK BLANK. I'm Tom.\n--blanks--\nHi\n--feedback--\nThink about a common casual greeting.\nthere\n--feedback--\nThink about a common casual greeting.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.52\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.15,\n\"dialogue\": {\n\"text\": \"Hi there. I'm Tom. I'm the new graphic designer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1315,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2b1c7216c026fcd156c7.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "68eb2fd3a7ebe5f899b92c90cba0f0cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2bfbfc3336274c874bed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a2bfbfc3336274c874bed\ntitle: Task 35\nchallengeType: 19\ndashedName: task-35\n--description--\nOccupations or professions are roles people have in their jobs. In this dialogue, Tom introduces himself with his profession.\n--questions--\n--text--\nWhat is Tom's profession?\n--answers--\nDeveloper\n--feedback--\nTom clearly states his job title after introducing himself.\nManager\n--feedback--\nTom clearly states his job title after introducing himself.\nGraphic Designer\nEngineer\n--feedback--\nTom clearly states his job title after introducing himself.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.52\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.15,\n\"dialogue\": {\n\"text\": \"Hi there. I'm Tom. I'm the new graphic designer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2bfbfc3336274c874bed.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "037ee3f2067d7ee900062f75db8cafc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a3f5be79ce02dcc157d6b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a3f5be79ce02dcc157d6b\ntitle: Task 36\nchallengeType: 22\ndashedName: task-36\n--description--\nUsing the correct articles (a, an, the) is crucial in English. Here, Tom is introducing himself and specifying his role at the new place.\n--instructions--\nWhat is the best article to show that Tom is the only new graphic designer in the sentence below?\n--fillInTheBlank--\n--sentence--\nI'm BLANK new graphic designer.\n--blanks--\nthe\n--feedback--\nWhen specifying a unique role or position, think about which article would be the most appropriate.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.52\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.15,\n\"dialogue\": {\n\"text\": \"Hi there. I'm Tom. I'm the new graphic designer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1343,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a3f5be79ce02dcc157d6b.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "da97a04b34011d6601caff508f44ea50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a3fd085a6e92dfbaee96a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a3fd085a6e92dfbaee96a\ntitle: Task 37\nchallengeType: 19\ndashedName: task-37\n--description--\nOccupations are jobs or professions people have. In conversations, it's common to introduce oneself with their profession.\n--questions--\n--text--\nWhat is Sophie's profession?\n--answers--\nA designer\n--feedback--\nSophie introduces herself with her job title in the dialogue.\nA developer\nA manager\n--feedback--\nSophie introduces herself with her job title in the dialogue.\nA marketer\n--feedback--\nSophie introduces herself with her job title in the dialogue.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.2,\n\"finishTimestamp\": 6.66\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.46,\n\"dialogue\": {\n\"text\": \"Oh, hi, Tom. I'm Sophie. I'm a developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1511,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a3fd085a6e92dfbaee96a.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dfc12ceaea0e44b483a9dd040dda176f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a401d1b00af2e25b0fd8b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a401d1b00af2e25b0fd8b\ntitle: Task 38\nchallengeType: 19\ndashedName: task-38\n--description--\nUsing a or an before a title indicates that the role isn't unique and there might be others with the same title.\n--questions--\n--text--\nIs Sophie likely to be the only developer from the company?\n--answers--\nYes\nNo\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.2,\n\"finishTimestamp\": 6.66\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.46,\n\"dialogue\": {\n\"text\": \"Oh, hi, Tom. I'm Sophie. I'm a developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a401d1b00af2e25b0fd8b.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "25ba4dd0f30f5c7acfd069171fb25f09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a417f7f9daf2e9aae6831.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a417f7f9daf2e9aae6831\ntitle: Task 39\nchallengeType: 19\ndashedName: task-39\n--description--\nIdentify how articles change the context of a sentence. Articles, like the and a, can change the meaning of a sentence. The talks about something specific. A talks about something in general.\nFor Example:\nTom is a graphic designer in our company means there are many graphic designers and Tom is one of them.\nTom is the graphic designer of our company means there is only one person in the company matching this description (that's Tom).\nNotice that, after graphic designer, there are details that made the situation more specific. In this company, there's only one person that could fit the profile - Tom.\n--questions--\n--text--\nIn which statement does the term CEO refer to a specific person known to both the speaker and the listener?\n--answers--\nI talked to the CEO about our project.\nI talked to a CEO at the business fair.\n--feedback--\na CEO means it could be any CEO, not someone they both know.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.2,\n\"finishTimestamp\": 6.66\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.46,\n\"dialogue\": {\n\"text\": \"Oh, hi, Tom. I'm Sophie. I'm a developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a417f7f9daf2e9aae6831.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "469061250097893de2f9e3b8f477a3af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a421a905e792eca05d447.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a421a905e792eca05d447\ntitle: Task 40\nchallengeType: 19\ndashedName: task-40\n--description--\nWhen you want to know about someone's origin or the place they grew up, you can ask Where are you from?. This question is a common way to know more about a person's background.\n--questions--\n--text--\nWhat does Sophie ask Tom to know about his origin?\n--answers--\nHow are you from?\n--feedback--\nListen again.\nWhere you go?\n--feedback--\nListen again.\nWhy are you here?\n--feedback--\nListen again.\nWhere are you from?\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.98,\n\"finishTimestamp\": 7.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 1.9,\n\"dialogue\": {\n\"text\": \"Where are you from, Tom?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 2.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a421a905e792eca05d447.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "79f287bf55029fad1d64a4171edc9361",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4297fcc0d72ef9b60c21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a4297fcc0d72ef9b60c21\ntitle: Task 41\nchallengeType: 22\ndashedName: task-41\n--description--\nWhen you want to share where you were born or where you grew up, you can state your origin using I'm from [place of origin]. Place of origin is where you are from. After sharing your own origin, you can ask someone else about theirs with How about you?\n--fillInTheBlank--\n--sentence--\nI'm BLANK Texas. How about you?\n--blanks--\nfrom\n--feedback--\nThink about the common expression used to talk about one's origin.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 10.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.8,\n\"dialogue\": {\n\"text\": \"I'm from Texas. How about you?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1353,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4297fcc0d72ef9b60c21.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "89767ad1525439ef5b7eccc466216210",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4e97fa176a2fed5011fc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a4e97fa176a2fed5011fc\ntitle: Task 42\nchallengeType: 19\ndashedName: task-42\n--description--\nAfter stating your own origin or background, it's polite and engaging to ask the other person about theirs. This creates an opportunity for both to share more about themselves.\n--questions--\n--text--\nHow does Tom ask Sophie about her origin after stating his own?\n--answers--\nAnd you?\n--feedback--\nTom uses a common follow-up question after sharing his own origin.\nHow about you?\nWhat about you?\n--feedback--\nTom uses a common follow-up question after sharing his own origin.\nYou from where?\n--feedback--\nTom uses a common follow-up question after sharing his own origin.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 10.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.8,\n\"dialogue\": {\n\"text\": \"I'm from Texas. How about you?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1566,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4e97fa176a2fed5011fc.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "709fa6f0fd78bb33ee911a6ca438b8c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4ef5de14f8301be5764b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a4ef5de14f8301be5764b\ntitle: Task 43\nchallengeType: 22\ndashedName: task-43\n--description--\nI'm from... is a standard way to indicate where someone is originally from, be it a city, country, or any other place of origin.\n--fillInTheBlank--\n--sentence--\nBLANK from Texas. How about you?\n--blanks--\nI'm\n--feedback--\nThe blank is looking for a subject and a verb to indicate someone's origin.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 10.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.8,\n\"dialogue\": {\n\"text\": \"I'm from Texas. How about you?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1171,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4ef5de14f8301be5764b.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "96542a297971cde732b3c575db9d30fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4f714165773059ce7ad4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a4f714165773059ce7ad4\ntitle: Task 44\nchallengeType: 22\ndashedName: task-44\n--description--\nWhen someone asks you about your origin or where you are from, you can mention a specific place. If you are currently in the same location or state you're from, you can use here to indicate your current location or place.\nIn the context of the dialogue, here refers to the location of the speaker, pointing out the current place or situation they are in.\n--fillInTheBlank--\n--sentence--\nI'm from BLANK in California. Welcome aboard.\n--blanks--\nhere\n--feedback--\nSophie uses a word to indicate she's from the same location they are currently in.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 10.6,\n\"finishTimestamp\": 12.64\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.8,\n\"dialogue\": {\n\"text\": \"I'm from here in California. Welcome aboard.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4f714165773059ce7ad4.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "205272218b4ce64af2560807f58af884",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a503aa1f2c630b3951067.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a503aa1f2c630b3951067\ntitle: Task 46\nchallengeType: 19\ndashedName: task-46\n--description--\nIn conversations, people often refer to objects around them using demonstrative pronouns like this and those. Here, Tom is identifying a specific type of desk.\n--questions--\n--text--\nWhat type of desk is Tom asking about?\n--answers--\nErgonomic desk\n--feedback--\nTom refers to a specific kind of desk which allows people to work while standing up.\nSitting desk\n--feedback--\nTom refers to a specific kind of desk which allows people to work while standing up.\nStanding desk\nWooden desk\n--feedback--\nTom refers to a specific kind of desk which allows people to work while standing up.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.2,\n\"finishTimestamp\": 19.75\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.15,\n\"dialogue\": {\n\"text\": \"Hey, is this one of those standing desks? These are great.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1639,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a503aa1f2c630b3951067.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "880f231f1aaf64cb77c811f4e90e234d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4fcaa739b7308ad795bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a4fcaa739b7308ad795bf\ntitle: Task 45\nchallengeType: 22\ndashedName: task-45\n--description--\nWhen you want to talk about all the people in a particular group without exceptions, you use the word everybody. When combined with is, it means all the people in the group possess a particular characteristic. Here, Tom is saying all the people he met at the office are nice.\n--fillInTheBlank--\n--sentence--\nThanks. BLANK is so nice around here.\n--blanks--\nEverybody\n--feedback--\nThink about a word that includes all people in a group.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.85,\n\"finishTimestamp\": 15.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.25,\n\"dialogue\": {\n\"text\": \"Thanks. Everybody is so nice around here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.75\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1399,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a4fcaa739b7308ad795bf.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5ab98fb5dce18fe2ff1bb69b1dba73fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a509eeac7e030e2a16bab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a509eeac7e030e2a16bab\ntitle: Task 47\nchallengeType: 22\ndashedName: task-47\n--description--\nDemonstrative pronouns like this and those help to point to specific items, distinguishing them from others. Tom uses one to inquire about a particular type of desk he observes.\n--fillInTheBlank--\n--sentence--\nHey, is BLANK one of BLANK standing desks?\n--blanks--\nthis\n--feedback--\nListen again.\nthose\n--feedback--\nListen again.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.2,\n\"finishTimestamp\": 19.75\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.15,\n\"dialogue\": {\n\"text\": \"Hey, is this one of those standing desks? These are great.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1323,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a509eeac7e030e2a16bab.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bbd25f7230dd704a80a29d7766f61b74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a510695ccb03109117af0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a510695ccb03109117af0\ntitle: Task 48\nchallengeType: 19\ndashedName: task-48\n--description--\nThe demonstrative pronoun this is used to refer to a singular noun that is close to the speaker, both in terms of distance and in terms of the topic of conversation. It can refer to both tangible objects and intangible ideas or situations.\n--questions--\n--text--\nWhich sentence correctly uses the demonstrative pronoun this?\n--answers--\nThose is my pen on the table.\n--feedback--\nThis is used for singular nouns. Look for a sentence where \"this\" points to a single item or idea.\nThis are my books on the shelf.\n--feedback--\nThis is used for singular nouns. Look for a sentence where \"this\" points to a single item or idea.\nThis is my laptop.\nThis pencils are sharp.\n--feedback--\nThis is used for singular nouns. Look for a sentence where \"this\" points to a single item or idea.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a510695ccb03109117af0.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bcfc9dd158381547d705a9b1a0afe9ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a51895811ed31345b2eaf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a51895811ed31345b2eaf\ntitle: Task 49\nchallengeType: 19\ndashedName: task-49\n--description--\nThe demonstrative pronoun those refers to plural nouns that are further away from the speaker in terms of distance or not currently being handled or discussed.\n--questions--\n--text--\nWhich sentence correctly uses the demonstrative pronoun those?\n--answers--\nThose is far away.\n--feedback--\nThose is used for plural nouns. Identify a sentence where those points to more than one item.\nThis mountains are tall.\n--feedback--\nThose is used for plural nouns. Identify a sentence where those points to more than one item.\nThose books are mine.\nThis are my shoes.\n--feedback--\nThose is used for plural nouns. Identify a sentence where those points to more than one item.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 873,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a51895811ed31345b2eaf.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "310fa9e706edb613334829efc0d6489f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a52680e234b3191131cc5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a52680e234b3191131cc5\ntitle: Task 51\nchallengeType: 19\ndashedName: task-51\n--description--\nUnderstanding when to use this or those is crucial. Remember, this is for singular items close to you, and those is for plural items further away or not the main topic of discussion.\n--questions--\n--text--\nWhich sentence correctly uses both this and those?\n--answers--\nThis are my glasses and those is my hat.\n--feedback--\nRemember the context in which this and those are used. Look for a sentence that uses both pronouns appropriately.\nThis is my phone and those are my keys.\nThose is my notebook next to this pencils.\n--feedback--\nRemember the context in which this and those are used. Look for a sentence that uses both pronouns appropriately.\nThis trees are tall next to those building.\n--feedback--\nRemember the context in which this and those are used. Look for a sentence that uses both pronouns appropriately.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a52680e234b3191131cc5.md",
      "source_type": "git_repo"
    },
    "token_count": 213,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "31e9ad3280f0e42ace8392c0d6d1f645",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a51effc10b2316bad8479.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a51effc10b2316bad8479\ntitle: Task 50\nchallengeType: 22\ndashedName: task-50\n--description--\nThis and those are both demonstrative pronouns, but they are used in different contexts. This refers to a singular item close to the speaker, while those refers to plural items that are further away or not currently being discussed.\n--fillInTheBlank--\n--sentence--\nBLANK is my coffee mug right here on my desk. BLANK are my colleagues standing near the entrance.\n--blanks--\nThis\n--feedback--\nThink of a word that refers to a singular item that's close or currently being discussed. For multiple items or people, especially if they're at a distance, which word would you use?\nThose\n--feedback--\nThink of a word that refers to a singular item that's close or currently being discussed. For multiple items or people, especially if they're at a distance, which word would you use?",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a51effc10b2316bad8479.md",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b16ad7024ed17f66e9041bdf85fc0009",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a2a7b05241026c429e3f0\ntitle: \"Dialogue 2: Tom Meets the Coworker Next to Him\"\nchallengeType: 21\ndashedName: dialogue-2-tom-meets-the-coworker-next-to-him\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 1-2 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4 3,\n\"dialogue\": {\n\"text\": \"Hi there I'm Tom I'm the new graphic designer \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 9,\n\"finishTime\": 7 7,\n\"dialogue\": {\n\"text\": \"Oh, hi Tom I'm Sophie I'm a developer \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 7 8,\n\"finishTime\": 8 8,\n\"dialogue\": {\n\"text\": \"Where are you from, Tom \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 8 9,\n\"finishTime\": 11 1,\n\"dialogue\": {\n\"text\": \"I'm from Texas How about you \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 11 5,\n\"finishTime\": 13",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5189,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8020afa86607ddd0f98c708fc4e613d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Sophie\", \"startTime\": 4 9, \"finishTime\": 7 7, \"dialogue\": { \"text\": \"Oh, hi Tom I'm Sophie I'm a developer \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 7 8, \"finishTime\": 8 8, \"dialogue\": { \"text\": \"Where are you from, Tom \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 8 9, \"finishTime\": 11 1, \"dialogue\": { \"text\": \"I'm from Texas How about you \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 11 5, \"finishTime\": 133,\n\"dialogue\": {\n\"text\": \"I'm from here in California Welcome aboard \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 13 7,\n\"finishTime\": 16 4,\n\"dialogue\": {\n\"text\": \"Thanks Everybody is so nice around here \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 16 6,\n\"finishTime\": 20 6,\n\"dialogue\": {\n\"text\": \"Hey, is this one of those standing desks These are great \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 20 7,\n\"finishTime\": 23 7,\n\"dialogue\": {\n\"text\": \"It's good to stand up a little instead of just sitting all the time \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 23 9,\n\"finishTime\": 27 3,\n\"dialogue\": {\n\"text\": \"That's so true I'm a bit inactive, sitting all the time \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 27 6,\n\"finishTime\": 29 1,\n\"dialogue\": {\n\"text\": \"This is a good alternative for me \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 29 7,\n\"finishTime\": 32 6,\n\"dialogue\": {\n\"text\": \"But hey, now your desk is just like my desk You're in luck",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5189,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "382d2ef6e071070f75a0135b4b5133c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"character\": \"Sophie\", \"startTime\": 23 9, \"finishTime\": 27 3, \"dialogue\": { \"text\": \"That's so true I'm a bit inactive, sitting all the time \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 27 6, \"finishTime\": 29 1, \"dialogue\": { \"text\": \"This is a good alternative for me \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 29 7, \"finishTime\": 32 6, \"dialogue\": { \"text\": \"But hey, now your desk is just like my desk You're in luck\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 33,\n\"finishTime\": 36 5,\n\"dialogue\": {\n\"text\": \"Oh, awesome My computer and drawing tablet are great, too \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 37 5,\n\"finishTime\": 40 4,\n\"dialogue\": {\n\"text\": \"Yeah At this company, they're very attentive to these details \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 40 4,\n\"finishTime\": 44 4,\n\"dialogue\": {\n\"text\": \"You're going to like it here if you're into cutting-edge gadgets \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 44 5,\n\"finishTime\": 50 2,\n\"dialogue\": {\n\"text\": \"This is so cool A standing desk, an ergonomic chair and an ergonomic mouse \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 50 2,\n\"finishTime\": 53 7,\n\"dialogue\": {\n\"text\": \"Man, everything is perfect I'm in love with this place \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 53 8,\n\"finishTime\": 56 8,\n\"dialogue\": {\n\"text\": \"So nice to have someone so energetic like you in the team \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 56",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5189,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "1b6697e0f59ed082fc0a52c50e8fce89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "A standing desk, an ergonomic chair and an ergonomic mouse \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 50 2, \"finishTime\": 53 7, \"dialogue\": { \"text\": \"Man, everything is perfect I'm in love with this place \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 53 8, \"finishTime\": 56 8, \"dialogue\": { \"text\": \"So nice to have someone so energetic like you in the team \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 568,\n\"finishTime\": 58,\n\"dialogue\": {\n\"text\": \"Are you ready to begin \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 58,\n\"finishTime\": 60,\n\"dialogue\": {\n\"text\": \"Yes, I sure am \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 60 5\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 61\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5189,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a2a7b05241026c429e3f0.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "f742e136553c707ee4463e1e3631f651",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a52da3392f631b9f3e022.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a52da3392f631b9f3e022\ntitle: Task 52\nchallengeType: 22\ndashedName: task-52\n--description--\nIn workplaces, especially in offices, there's a focus on ergonomics and health. One popular discussion is about the benefits of standing instead of sitting continuously. Stand up refers to the action of rising from a sitting position, while sitting means being in a position where one's weight is supported by one's buttocks rather than one's feet.\n--fillInTheBlank--\n--sentence--\nIt is good to BLANK BLANK a little instead of just BLANK all the time.\n--blanks--\nstand\n--feedback--\nThink of the two actions that are commonly contrasted in discussions about office ergonomics.\nup\n--feedback--\nThink of the two actions that are commonly contrasted in discussions about office ergonomics.\nsitting\n--feedback--\nThink of the two actions that are commonly contrasted in discussions about office ergonomics.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.96,\n\"finishTimestamp\": 22.92\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.46,\n\"dialogue\": {\n\"text\": \"It's good to stand up a little instead of just sitting all the time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1865,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a52da3392f631b9f3e022.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c67cbf6c0c026e7ff87c3b3d2c933626",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a533c5a7e5231e15b93b4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a533c5a7e5231e15b93b4\ntitle: Task 53\nchallengeType: 19\ndashedName: task-53\n--description--\nIt's common to discuss habits and practices that can benefit one's health during work, especially in an office setting. Tom is expressing his preference in the dialogue.\n--questions--\n--text--\nWhat does Tom suggest is a good thing to do occasionally?\n--answers--\nSit down\n--feedback--\nTom is talking about an alternative to sitting continuously at the workplace.\nLay down\n--feedback--\nTom is talking about an alternative to sitting continuously at the workplace.\nRun around\n--feedback--\nTom is talking about an alternative to sitting continuously at the workplace.\nStand up\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.96,\n\"finishTimestamp\": 22.92\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.46,\n\"dialogue\": {\n\"text\": \"It's good to stand up a little instead of just sitting all the time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1660,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a533c5a7e5231e15b93b4.md",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "22226b393cbc841aa0ea78008a712204",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a54278a4df6323549e8f9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a54278a4df6323549e8f9\ntitle: Task 55\nchallengeType: 19\ndashedName: task-55\n--description--\nThe word that points to something a bit far from you. Imagine you're in a shop looking at gadgets.\n--questions--\n--text--\nYou see a tablet far away and say: BLANK is the tablet I want.\n--answers--\nThis\n--feedback--\nThis is for things close to you.\nThese\n--feedback--\nTablet is one thing, not many.\nThat\n--feedback--\nFeedback3.\nThose\n--feedback--\nThose is for many things far from you.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a54278a4df6323549e8f9.md",
      "source_type": "git_repo"
    },
    "token_count": 144,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a405d4271b753e81d7f314c71f7cc07b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a549c4d9b91326cfe1863.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a549c4d9b91326cfe1863\ntitle: Task 56\nchallengeType: 22\ndashedName: task-56\n--description--\nUse this for something close and that for something a bit far.\n--fillInTheBlank--\n--sentence--\nBLANK printer right here is fast. Can you fix BLANK computer over there?\n--blanks--\nThis\n--feedback--\nWhat word do you use for something right next to you?\nthat\n--feedback--\nIf you're pointing to something a little far, which word fits?",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 483,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a549c4d9b91326cfe1863.md",
      "source_type": "git_repo"
    },
    "token_count": 119,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cec06571e3faa79ede2a4946273047b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a538cc4109d3209f5f536.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a538cc4109d3209f5f536\ntitle: Task 54\nchallengeType: 22\ndashedName: task-54\n--description--\nWhen you want to express agreement or affirmation to what someone has just said, you can use phrases like That's so true or That is true. It's a way to show you are in alignment with the previous statement.\n--fillInTheBlank--\n--sentence--\nBLANK so true.\n--blanks--\nThat's\n--feedback--\nThink of a term that indicates agreement with a prior statement.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.22,\n\"finishTimestamp\": 26.48\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.76,\n\"dialogue\": {\n\"text\": \"That's so true. I'm a bit inactive sitting all the time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1315,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a538cc4109d3209f5f536.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c02f93f3e64cc6e72dbf0b83bd39a70d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a554956201b329a0d182a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a554956201b329a0d182a\ntitle: Task 57\nchallengeType: 19\ndashedName: task-57\n--description--\nWhen talking about devices or tools, this and that help you show which one.\n--questions--\n--text--\nPick the sentence that uses this and that correctly.\n--answers--\nThis mouse here works well, but that one over there doesn't.\n--feedback--\nThis is for the mouse close by, and that for the one farther away.\nThat is my phone on this table, but this is my charger in that room.\n--feedback--\nThe sentence structure is awkward. Normally, this and that are not used in this manner, and the words room and table make the locations confusing.\nThat are the wires we need.\n--feedback--\nWires is plural, so the correct form should be these are, not that are.\nThis app on my phone, and that games on my computer.\n--feedback--\nThe sentence is incomplete. Additionally, games is plural, so those games would be correct.\n--video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1034,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a554956201b329a0d182a.md",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "161831b6ae477aff11961d2786ee70d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a575febfa2c333c495c2f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a575febfa2c333c495c2f\ntitle: Task 60\nchallengeType: 22\ndashedName: task-60\n--description--\nWhen faced with a situation or habit that is not ideal, people often look for an alternative. In this context, Sophie is discussing a better option for her compared to her usual routine.\n--fillInTheBlank--\n--sentence--\nBLANK is a good BLANK for me.\n--blanks--\nThis\n--feedback--\nListen again.\nalternative\n--feedback--\nListen again.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 26.78,\n\"finishTimestamp\": 28.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.34,\n\"dialogue\": {\n\"text\": \"This is a good alternative for me.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 2.84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a575febfa2c333c495c2f.md",
      "source_type": "git_repo"
    },
    "token_count": 317,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3038d5280d6489e39e53231a44bc9433",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a55ea17414032d482d278.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a55ea17414032d482d278\ntitle: Task 58\nchallengeType: 19\ndashedName: task-58\n--description--\nPeople sometimes describe how active or inactive they are during their daily routines. In this case, Sophie is commenting on her own activity level at work.\n--questions--\n--text--\nHow does Sophie describe her activity level when she's working?\n--answers--\nactive\n--feedback--\nSophie comments on how much she sits during work. Which word would best describe someone who sits a lot?\nalternative\n--feedback--\nSophie comments on how much she sits during work. Which word would best describe someone who sits a lot?\ninactive\ncommenting\n--feedback--\nSophie comments on how much she sits during work. Which word would best describe someone who sits a lot?\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.22,\n\"finishTimestamp\": 26.48\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.76,\n\"dialogue\": {\n\"text\": \"That's so true. I'm a bit inactive sitting all the time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1806,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a55ea17414032d482d278.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ea1f2b6bedca55f53502ec2dafdceebb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a56f89acf253314e9f6d6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a56f89acf253314e9f6d6\ntitle: Task 59\nchallengeType: 19\ndashedName: task-59\n--description--\nThe word inactive is used to describe a state of not being active or engaged in physical movement. It can refer to a lack of physical activity or any kind of action.\n--questions--\n--text--\nWhat does inactive mean in the context of the dialogue?\n--answers--\nVery active and always moving\n--feedback--\nThis is the opposite of inactive. Inactive means not being active.\nNot taking any actions\n--feedback--\nWhile this can be a form of inactivity, in the context, Sophie is talking about physical activity.\nNot being physically active\nWorking without breaks\n--feedback--\nThis doesn't necessarily mean inactivity. Sophie specifically refers to her lack of movement.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.22,\n\"finishTimestamp\": 26.48\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.76,\n\"dialogue\": {\n\"text\": \"That's so true. I'm a bit inactive sitting all the time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1632,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a56f89acf253314e9f6d6.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1f6ceba60ba7fdab229d8b540f0dd1ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a57d2c0603e33638c7770.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a57d2c0603e33638c7770\ntitle: Task 61\nchallengeType: 19\ndashedName: task-61\n--description--\nAn alternative refers to another option or solution that is different from the one currently in use or being considered.\n--questions--\n--text--\nWhat does alternative mean in the dialogue?\n--answers--\nThe same choice\n--feedback--\nAn alternative means a different choice, not the same one.\nA different option or choice\nThe only option\n--feedback--\nAlternative suggests there are other options available, not just one.\nA mistake\n--feedback--\nThis doesn't relate to the context of the dialogue or the meaning of alternative.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 26.78,\n\"finishTimestamp\": 28.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.34,\n\"dialogue\": {\n\"text\": \"This is a good alternative for me.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 2.84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1473,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a57d2c0603e33638c7770.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "087605c2fb4a126e98f1c318c50d9e88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a58b31bc9f233debc2bc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a58b31bc9f233debc2bc9\ntitle: Task 63\nchallengeType: 22\ndashedName: task-63\n--description--\nCertain expressions in English convey meanings that are not immediately clear from the individual words. You're in luck is one such expression.\nIt expresses that someone is fortunate or has good luck in a situation. Sophie uses such a phrase when talking to Tom.\n--fillInTheBlank--\n--sentence--\nBLANK in BLANK.\n--blanks--\nYou're\n--feedback--\nListen again.\nluck\n--feedback--\nListen again.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.62,\n\"finishTimestamp\": 32.08\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.96,\n\"dialogue\": {\n\"text\": \"But hey, now your desk is just like my desk. You're in luck.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.46\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1413,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a58b31bc9f233debc2bc9.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "98bf4fcc7e55837aa7c6e46008aa646c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a584f57a1a9338e3cb347.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656a584f57a1a9338e3cb347\ntitle: Task 62\nchallengeType: 22\ndashedName: task-62\n--description--\nWords like your and my are used to show possession. Your refers to something belonging to the person you are speaking to, while my refers to something that belongs to you.\n--fillInTheBlank--\n--sentence--\nBut hey, now BLANK desk is just like BLANK desk.\n--blanks--\nyour\n--feedback--\nYour indicates possession for the listener, while my indicates possession for the speaker. In this dialogue, Sophie is making a comparison between Tom's desk (the listener's) and her own desk (the speaker's).\nmy\n--feedback--\nYour indicates possession for the listener, while my indicates possession for the speaker. In this dialogue, Sophie is making a comparison between Tom's desk (the listener's) and her own desk (the speaker's).\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.62,\n\"finishTimestamp\": 32.08\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.96,\n\"dialogue\": {\n\"text\": \"But hey, now your desk is just like my desk. You're in luck.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.46\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656a584f57a1a9338e3cb347.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4f7c5b5c9a75da9fa8a4ce9c9148d4dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab3bfc9e49d4841672043.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab3bfc9e49d4841672043\ntitle: Task 65\nchallengeType: 19\ndashedName: task-65\n--description--\nWhen someone says too at the end of a sentence, they mean also or as well. For example, I like it too means I also like it.  Adding too at the end of a statement implies agreement or adds emphasis that a similar condition or fact applies to what's being discussed.\n--questions--\n--text--\nWhat is Tom implying with are great, too? Why does Tom say are great, too?\n--answers--\nHe doesn't like his computer.\n--feedback--\nToo means also. Think about what else Tom thinks is good.\nHe only likes his drawing tablet.\n--feedback--\nToo means also. Think about what else Tom thinks is good.\nHe thinks both his computer and drawing tablet are good, like something else he talked about.\nHe doesn't think they're good.\n--feedback--\nToo means also. Think about what else Tom thinks is good.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 32.3,\n\"finishTimestamp\": 36\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.25,\n\"dialogue\": {\n\"text\": \"Awesome. My computer and drawing tablet are great too.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.75\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab3bfc9e49d4841672043.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ab6d286af1ef6f2bc0ba2abb7b43dbf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab31ebccec247fde7cee4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab31ebccec247fde7cee4\ntitle: Task 64\nchallengeType: 22\ndashedName: task-64\n--description--\nAwesome is a word people use when they really like something. It's like saying very good! It's an informal way to show approval or admiration.\n--fillInTheBlank--\n--sentence--\nBLANK. My computer and drawing tablet are great, too.\n--blanks--\nAwesome\n--feedback--\nListen for a word that means very good or I really like it.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 32.3,\n\"finishTimestamp\": 36\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.25,\n\"dialogue\": {\n\"text\": \"Awesome. My computer and drawing tablet are great too.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.75\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab31ebccec247fde7cee4.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9c7c9262a4ffa29e9fef1d9c2c785b6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab48697d63748952254a4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab48697d63748952254a4\ntitle: Task 67\nchallengeType: 22\ndashedName: task-67\n--description--\nThe pronoun they is often used to refer to a group of people or entities. In this context, they refers to the people responsible within the company. Are is the verb to be conjugated to agree with the plural pronoun they.\n--fillInTheBlank--\n--sentence--\nYeah, at this company, BLANK BLANK very attentive to these details.\n--blanks--\nthey\n--feedback--\nThink about a pronoun that represents a group of people and the appropriate verb to be form to go with it.\nare\n--feedback--\nThink about a pronoun that represents a group of people and the appropriate verb to be form to go with it.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37,\n\"finishTimestamp\": 40.2\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Yeah, at this company, they're very attentive to these details.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1628,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab48697d63748952254a4.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "799fd177bc063296c44929ba57d821bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab5a3ee689949124d2e39.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab5a3ee689949124d2e39\ntitle: Task 69\nchallengeType: 19\ndashedName: task-69\n--description--\nIn English, the pronoun they is used for multiple people or things. When talking about the present, they is often paired with are.\n--questions--\n--text--\nWhich of these sentences uses they are correctly?\n--answers--\nThey are my best friends.\n--feedback--\nAll the options show instances where they is used to represent multiple people or things in the present.\nI think they are going to the party later.\n--feedback--\nAll the options show instances where they is used to represent multiple people or things in the present.\nMy favorite colors? They are blue and green.\n--feedback--\nAll the options show instances where they is used to represent multiple people or things in the present.\nAll of the above.\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab5a3ee689949124d2e39.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3ad10ae0ed9c0589ee83c406efccc03e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab4205a4054486ef3b691.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab4205a4054486ef3b691\ntitle: Task 66\nchallengeType: 22\ndashedName: task-66\n--description--\nTom is saying that he likes his things. He uses words to show he's happy with them.\n--fillInTheBlank--\n--sentence--\nAwesome. My computer and drawing tablet BLANK BLANK, too.\n--blanks--\nare\n--feedback--\nTom is using words to say his things are good. What words show that he thinks they're good?\ngreat\n--feedback--\nTom is using words to say his things are good. What words show that he thinks they're good?\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 32.3,\n\"finishTimestamp\": 36\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.25,\n\"dialogue\": {\n\"text\": \"Awesome. My computer and drawing tablet are great too.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.75\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1406,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab4205a4054486ef3b691.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "40a0ac19c94e8b9fa463a70ac3671ef2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab50005c38348b94da7a3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab50005c38348b94da7a3\ntitle: Task 68\nchallengeType: 22\ndashedName: task-68\n--description--\nWhen referring to a group of people or things, we often use they as the subject. Usually after a subject there's a verb. When they is followed by the verb to be in the present simple, it is conjugated as are. Example: They are my colleagues.\n--fillInTheBlank--\n--sentence--\nBLANK BLANK very friendly clients. I love those templates! BLANK BLANK just my style.\n--blanks--\nThey\n--feedback--\nConsider which pronoun you'd use to represent a group or multiple items and match it with the appropriate verb form.\nare\n--feedback--\nConsider which pronoun you'd use to represent a group or multiple items and match it with the appropriate verb form.\nThey\n--feedback--\nConsider which pronoun you'd use to represent a group or multiple items and match it with the appropriate verb form.\nare\n--feedback--\nConsider which pronoun you'd use to represent a group or multiple items and match it with the appropriate verb form.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1094,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab50005c38348b94da7a3.md",
      "source_type": "git_repo"
    },
    "token_count": 240,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bca501ddabc8d37401f45cc657c0de47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab66db70b464974489b79.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab66db70b464974489b79\ntitle: Task 71\nchallengeType: 22\ndashedName: task-71\n--description--\nContractions make speech sound more natural and informal. They're is the contracted form of they are.\n--fillInTheBlank--\n--sentence--\nIn the tech department, BLANK always working on exciting projects.\n--blanks--\nthey're\n--feedback--\nThink about the contraction that represents they are.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 426,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab66db70b464974489b79.md",
      "source_type": "git_repo"
    },
    "token_count": 98,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "edb77b028e12ce0420206ac892d35caf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab61f20aa9d494cee5466.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab61f20aa9d494cee5466\ntitle: Task 70\nchallengeType: 19\ndashedName: task-70\n--description--\nIn English, people often use contraction to make speech or writing more concise. They are can be abbreviated to form a contraction.\n--questions--\n--text--\nWhich of the following is the correct contraction for they are?\n--answers--\nthey're\ntheir\n--feedback--\nThis is a possessive adjective and is not an contraction for they are.\ntheres\n--feedback--\nThis is not a standard contraction in English.\nthey\n--feedback--\nWithout the apostrophe and re, this is just the pronoun without the verb.\n--video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab61f20aa9d494cee5466.md",
      "source_type": "git_repo"
    },
    "token_count": 151,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bed84ae50ba001c845480381c390bd0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab6f67515b149a377009d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab6f67515b149a377009d\ntitle: Task 72\nchallengeType: 19\ndashedName: task-72\n--description--\nThey're, their, and there sound similar but have different meanings. They're is a contraction of they are, their is a possessive pronoun of they, and there refers to a place or introduces a sentence or clause.\n--questions--\n--text--\nWhich of the following sentences uses they're correctly?\n--answers--\nI left my keys over they're.\n--feedback--\nThe correct word here should be there, referring to a place.\nThey're shoes are brand new.\n--feedback--\nThe correct word should be their to indicate possession.\nThey're going to the concert tonight.\nThe books are over they're.\n--feedback--\nAgain, the correct word to refer to a location would be there.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 863,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab6f67515b149a377009d.md",
      "source_type": "git_repo"
    },
    "token_count": 186,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e16bd8e9576f9c7ce1c67d73614b268f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab76473a1ee49d537698d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab76473a1ee49d537698d\ntitle: Task 73\nchallengeType: 19\ndashedName: task-73\n--description--\nBeing attentive means paying careful attention or listening carefully.\n--questions--\n--text--\nWhat does attentive mean in the context of the text below?\n--answers--\nNot paying attention\n--feedback--\nThis is the opposite of being attentive.\nLooking somewhere else\n--feedback--\nBeing attentive means you are focusing, not looking away.\nListening carefully\nNot listening\n--feedback--\nWhen you're attentive, you are listening or paying attention, not ignoring.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37,\n\"finishTimestamp\": 40.2\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Yeah, at this company, they're very attentive to these details.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1428,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab76473a1ee49d537698d.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e13d09ff85279751c70ed2fbd151394",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab828bd06214a51193f3d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab828bd06214a51193f3d\ntitle: Task 75\nchallengeType: 22\ndashedName: task-75\n--description--\nWhen you want to say that you have a strong interest in something, you can use the phrase I am into it. This phrase shows what someone likes or enjoys.\n--fillInTheBlank--\n--sentence--\nI really like playing the guitar. I BLANK BLANK it.\n--blanks--\nam\n--feedback--\nThink of a casual phrase that means you really like or are interested in something.\ninto\n--feedback--\nThink of a casual phrase that means you really like or are interested in something.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab828bd06214a51193f3d.md",
      "source_type": "git_repo"
    },
    "token_count": 140,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7ed38a12b7b1378dc6e637531db5556b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab7e9be47c04a2518dbed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab7e9be47c04a2518dbed\ntitle: Task 74\nchallengeType: 19\ndashedName: task-74\n--description--\nThe phrase you are into is an informal way to say that someone really likes something or is interested in a particular activity or topic.\n--questions--\n--text--\nWhat does the phrase you are into mean?\n--answers--\nTo go inside\n--feedback--\nThis is a literal interpretation, but you are into is more about liking or being interested in something.\nTo not like\n--feedback--\nThis is the opposite of the expression's meaning.\nTo be interested in or really like\nTo be on top of\n--feedback--\nThis is another literal interpretation. Think about showing interest or liking.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 40.25,\n\"finishTimestamp\": 43.05\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.5,\n\"dialogue\": {\n\"text\": \"You're going to like it here if you're into cutting-edge gadgets.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1539,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab7e9be47c04a2518dbed.md",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e6d2af6d51ff4ed3575856005ace06cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab8a1d294e14a920320d2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ab8a1d294e14a920320d2\ntitle: Task 76\nchallengeType: 19\ndashedName: task-76\n--description--\nCutting-edge refers to the most advanced stage of development of something. Gadgets are small tools or devices with a particular function. Thus, cutting-edge gadgets are the latest and most advanced tools or devices.\n--questions--\n--text--\nWhat are cutting-edge gadgets?\n--answers--\nOutdated tools\n--feedback--\nThe term cutting-edge means the opposite of outdated.\nThe most modern and advanced devices\nSimple and basic devices\n--feedback--\nCutting-edge implies the latest technology, not basic or simple.\nLarge machines\n--feedback--\nGadgets typically refer to smaller devices, not large machines.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 40.25,\n\"finishTimestamp\": 43.05\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.5,\n\"dialogue\": {\n\"text\": \"You're going to like it here if you're into cutting-edge gadgets.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ab8a1d294e14a920320d2.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8cf5b6f26fea1644708bea0346b2199c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abac861f4a04b312b0421.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656abac861f4a04b312b0421\ntitle: Task 78\nchallengeType: 22\ndashedName: task-78\n--description--\nThe demonstrative pronoun these points to specific items or details that are close in context or proximity. It is used to emphasize or clarify something that is currently being discussed.\n--fillInTheBlank--\n--sentence--\nYeah, at this company, they're very attentive to BLANK details.\n--blanks--\nthese\n--feedback--\nThink of a demonstrative pronoun that can be used to highlight specific details or items being discussed, especially when they are near in context or location.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37,\n\"finishTimestamp\": 43.05\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Yeah, at this company, they're very attentive to these details.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.45,\n\"finishTime\": 7.1,\n\"dialogue\": {\n\"text\": \"You're going to like it here if you're into cutting-edge gadgets.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7.6\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abac861f4a04b312b0421.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d6329f7a84f342bda2f08bde015da910",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656aba8d560d3c4b069ae7a8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656aba8d560d3c4b069ae7a8\ntitle: Task 77\nchallengeType: 22\ndashedName: task-77\n--description--\nCutting-edge gadgets refers to the most recent and advanced devices. Listening carefully to conversations can help you complete sentences that discuss such topics.\n--fillInTheBlank--\n--sentence--\nYeah, at this company, they're very BLANK to these BLANK. You are going to like it here if you are into BLANK gadgets.\n--blanks--\nattentive\n--feedback--\nListen carefully to the dialogue and focus on the words that describe the company's approach to gadgets and the type of gadgets mentioned.\ndetails\n--feedback--\nListen carefully to the dialogue and focus on the words that describe the company's approach to gadgets and the type of gadgets mentioned.\ncutting-edge\n--feedback--\nListen carefully to the dialogue and focus on the words that describe the company's approach to gadgets and the type of gadgets mentioned.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37,\n\"finishTimestamp\": 43.05\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Yeah, at this company, they're very attentive to these details.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.45,\n\"finishTime\": 7.1,\n\"dialogue\": {\n\"text\": \"You're going to like it here if you're into cutting-edge gadgets.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7.6\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2161,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656aba8d560d3c4b069ae7a8.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "49fb36fec69d1a162dad66ce2f05ad07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abb977f9ecf4b821aed11.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656abb977f9ecf4b821aed11\ntitle: Task 79\nchallengeType: 19\ndashedName: task-79\n--description--\nThe demonstrative pronoun these is used to refer to specific items or details that are close in proximity or context. It's plural and indicates multiple items that are nearby or currently being discussed.\n--questions--\n--text--\nIn the dialogue, what is Sophie using these to refer to?\n--answers--\nThe company's policies\n--feedback--\nWhile related, Sophie specifically mentions details which is broader.\nThe cutting-edge gadgets\n--feedback--\nSophie mentions gadgets later in her statement, but these directly refers to details.\nThe details the company pays attention to\nThe people in the company\n--feedback--\nThe context doesn't suggest that Sophie is discussing people when mentioning these details.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37,\n\"finishTimestamp\": 43.05\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Yeah, at this company, they're very attentive to these details.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.45,\n\"finishTime\": 7.1,\n\"dialogue\": {\n\"text\": \"You're going to like it here if you're into cutting-edge gadgets.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7.6\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abb977f9ecf4b821aed11.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1381751309f3d159d3bc4e7ce302c4aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abcd4cccfc84bf50f861b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656abcd4cccfc84bf50f861b\ntitle: Task 80\nchallengeType: 19\ndashedName: task-80\n--description--\nIn an office setting, it's common to point out items using these and those. Remember, these points to items near you, while those points to items further away.\n--questions--\n--text--\nWhich sentence correctly differentiates between these and those?\n--answers--\nThese is my monitor and those is my speakers.\n--feedback--\nLook for a sentence that uses these for multiple items nearby and those for multiple items at a distance or not being directly addressed.\nThose are my papers on the table, and these is my stapler.\n--feedback--\nLook for a sentence that uses these for multiple items nearby and those for multiple items at a distance or not being directly addressed.\nThese are my folders, and those are my files in the cabinet.\nThose are my phone, and these are my charger on the shelf.\n--feedback--\nLook for a sentence that uses these for multiple items nearby and those for multiple items at a distance or not being directly addressed.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1155,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abcd4cccfc84bf50f861b.md",
      "source_type": "git_repo"
    },
    "token_count": 234,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "923118d67e859b0e0f7f0c44cd407cb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abd3412f31c4c2483de5c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656abd3412f31c4c2483de5c\ntitle: Task 81\nchallengeType: 19\ndashedName: task-81\n--description--\nDemonstrative pronouns this, these, and those are used to point out specific things. This refers to a singular item nearby, these to multiple items nearby, and those to items further away.\n--questions--\n--text--\nWhich sentence uses the demonstrative pronouns correctly?\n--answers--\nThis are my shoes.\n--feedback--\nRemember to match the number (singular/plural) of the noun with the appropriate demonstrative pronoun. Also, consider the implied distance or immediacy of the items being talked about.\nThose is my hat over there.\n--feedback--\nRemember to match the number (singular/plural) of the noun with the appropriate demonstrative pronoun. Also, consider the implied distance or immediacy of the items being talked about.\nThese are my glasses on the table.\nThis keys belong to me.\n--feedback--\nRemember to match the number (singular/plural) of the noun with the appropriate demonstrative pronoun. Also, consider the implied distance or immediacy of the items being talked about.\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1187,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abd3412f31c4c2483de5c.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c484ca54f84c83ca2adbf407e4bb056e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abe0ac290774c4de173d4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656abe0ac290774c4de173d4\ntitle: Task 82\nchallengeType: 22\ndashedName: task-82\n--description--\nPeople often refer to items around them using this, that, these, and those. Your task is to identify the correct demonstrative pronouns to complete the sentences. Pay attention to the context, which will give you clues about proximity and number.\n--instructions--\nFill in the blanks with This, That, These, and Those.\n--fillInTheBlank--\n--sentence--\nBLANK is the computer right next to me. BLANK printer across the room is broken. BLANK are the chairs around the nearby table. BLANK files in the distant cabinet are archived.\n--blanks--\nThis\n--feedback--\nThe computer is singular and right next to the speaker, indicating immediacy.\nThat\n--feedback--\nPrinter is singular, but it's across the room, indicating it's farther away.\nThese\n--feedback--\nChairs are plural and located around a nearby table, indicating closeness.\nThose\n--feedback--\nFiles are plural, and they're in a distant cabinet, showing they're not close.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1115,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656abe0ac290774c4de173d4.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "67161d01612d1c98ba47a77990a98906",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656caf2085b7ab04ff9a6b3f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656caf2085b7ab04ff9a6b3f\ntitle: Task 85\nchallengeType: 22\ndashedName: task-85\n--description--\nThe articles a and an are both used to indicate a singular, non-specific noun. The choice between them depends on the sound that follows. If the next word begins with a consonant sound, we use a. If it starts with a vowel sound, we use an. For example:\nQuincy is a teacher at freeCodeCamp.\nThe word following the article is teacher. As it starts with the sound of a consonant, the article a is the appropriate choice.\nJake is an information security analyst.\nThe word following the article is information. As it starts with the sound of a vowel, the article an is the appropriate choice.\n--fillInTheBlank--\n--sentence--\nThis is so cool. BLANK standing desk, an ergonomic chair and BLANK ergonomic mouse.\n--blanks--\nA\n--feedback--\nA should be used if the word following it starts with a consonant sound.\nan\n--feedback--\nan should be used if the word following it starts with a vowel sound.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 43.68,\n\"finishTimestamp\": 49.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 6.15,\n\"dialogue\": {\n\"text\": \"This is so cool. A standing desk, an ergonomic chair, and an ergonomic mouse.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1962,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656caf2085b7ab04ff9a6b3f.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ba3360aaeb7b0ec3f105f441d6a28239",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cad88af98af049df17177.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cad88af98af049df17177\ntitle: Task 83\nchallengeType: 19\ndashedName: task-83\n--description--\nExpressions like This is so cool are informal ways to show admiration or excitement about something.\n--questions--\n--text--\nWhat does Tom mean by saying This is so cool?\n--answers--\nHe thinks the temperature is very cold.\n--feedback--\nThe phrase isn't about the actual temperature.\nHe doesn't like what he sees.\n--feedback--\nTom's reaction is positive, not negative.\nHe is very excited and impressed.\nHe is feeling relaxed.\n--feedback--\nThe phrase indicates excitement more than relaxation.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 43.68,\n\"finishTimestamp\": 49.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 6.15,\n\"dialogue\": {\n\"text\": \"This is so cool. A standing desk, an ergonomic chair, and an ergonomic mouse.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cad88af98af049df17177.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a3799e8cebfe429d71d415e269896705",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656caddea3aba304c6172571.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656caddea3aba304c6172571\ntitle: Task 84\nchallengeType: 22\ndashedName: task-84\n--description--\nErgonomic refers to the design of products intended to provide optimum comfort and to avoid stress or injury.\n--fillInTheBlank--\n--sentence--\nA standing desk, an BLANK chair and an BLANK mouse.\n--blanks--\nergonomic\n--feedback--\nListen to the audio and try to locate a word that relates to comfort and design in the workplace, especially used to prevent strains or injuries.\nergonomic\n--feedback--\nListen to the audio and try to locate a word that relates to comfort and design in the workplace, especially used to prevent strains or injuries.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 43.68,\n\"finishTimestamp\": 49.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 6.15,\n\"dialogue\": {\n\"text\": \"This is so cool. A standing desk, an ergonomic chair, and an ergonomic mouse.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1589,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656caddea3aba304c6172571.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "420a1d4e753c308a1b46792a9d016544",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656caf89ead43c0523378566.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656caf89ead43c0523378566\ntitle: Task 86\nchallengeType: 19\ndashedName: task-86\n--description--\nIn English, a and an are indefinite articles. A is used before words that begin with a consonant sound, and an is used before words that begin with a vowel sound.\n--questions--\n--text--\nWhich sentence uses the indefinite articles correctly?\n--answers--\nA ergonomic chair and a mouse.\n--feedback--\nConsider the sound that starts the noun after the article. A is used before consonant sounds and an before vowel sounds.\nA ergonomic chair and an mouse.\n--feedback--\nConsider the sound that starts the noun after the article. A is used before consonant sounds and an before vowel sounds.\nAn ergonomic chair and a mouse.\nAn ergonomic chair and an mouse.\n--feedback--\nConsider the sound that starts the noun after the article. A is used before consonant sounds and an before vowel sounds.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 43.68,\n\"finishTimestamp\": 49.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 6.15,\n\"dialogue\": {\n\"text\": \"This is so cool. A standing desk, an ergonomic chair, and an ergonomic mouse.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6.65\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656caf89ead43c0523378566.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d0c21a82661558daa92e14a1633f6284",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb0b3e4e30f0550131acd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cb0b3e4e30f0550131acd\ntitle: Task 87\nchallengeType: 22\ndashedName: task-87\n--description--\nRemember that articles show if we are talking about something specific or something general.\n--fillInTheBlank--\n--sentence--\nWe are looking for BLANK project manager to join our team.\n--blanks--\na\n--feedback--\nThe word project starts with a consonant sounds. A should be used for before words that start with a consonant sound.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 465,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb0b3e4e30f0550131acd.md",
      "source_type": "git_repo"
    },
    "token_count": 111,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cdb02cecf88d234406563341aafa8f10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb18802ef22057a58db13.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cb18802ef22057a58db13\ntitle: Task 88\nchallengeType: 19\ndashedName: task-88\n--description--\nIn English, we use names to directly refer to specific people. See this example:\nHello! You're Amy, correct?\nIn English, names directly refer to specific people. Saying Amy identifies a particular person with that name. Using the or an before a name, like the Amy or an Amy, sounds unusual because names are already unique and specific.\nThink of names as unique labels for people. So, you don't need a, an, or the before a person's name. Just use the name by itself!\n--instructions--\nHow would you complete the following sentence.\n--questions--\n--text--\nWhich article would you use in place of the blank in this sentence: You must be BLANK Sofia, the project manager.\n--answers--\nan\n--feedback--\nYou don't need an before a person's name.\na\n--feedback--\nYou don't need a before a person's name.\nthe\n--feedback--\nYou don't need the before a person's name.\nNo article should be used.\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1107,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb18802ef22057a58db13.md",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e65ae993546a303ebd8bb905eec3a5e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb2526a741405b2b34870.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cb2526a741405b2b34870\ntitle: Task 89\nchallengeType: 22\ndashedName: task-89\n--description--\nEverything is a way to mention all the things in a particular group. When Tom says everything is perfect, he means all aspects of his new workplace are perfect.\n--fillInTheBlank--\n--sentence--\nA standing desk, an ergonomic chair, and an ergonomic mouse. Man, BLANK BLANK perfect.\n--blanks--\neverything\n--feedback--\nListen to the audio again.\nis\n--feedback--\nListen to the audio again.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 45.02,\n\"finishTimestamp\": 50.86\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.8,\n\"dialogue\": {\n\"text\": \"A standing desk, an ergonomic chair, and an ergonomic mouse.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 5.1,\n\"finishTime\": 6.6,\n\"dialogue\": {\n\"text\": \"Man, everything is perfect.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 7.1\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1661,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb2526a741405b2b34870.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8c77da787c6214fa2df12f8f23f6c0b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb3592aa0460609993b10.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cb3592aa0460609993b10\ntitle: Task 91\nchallengeType: 19\ndashedName: task-91\n--description--\nThe word someone is used to refer to an unspecified individual or person without specifying exactly who.\n--questions--\n--text--\nWhat does Sophie mean by someone?\n--answers--\nA specific person she knows.\n--feedback--\nShe's talking about Tom but isn't naming him directly.\nAny person, not specified.\nA famous person.\n--feedback--\nThe context doesn't suggest fame.\nHerself.\n--feedback--\nShe's talking about Tom, not herself.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 53.22,\n\"finishTimestamp\": 55.86\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.3,\n\"dialogue\": {\n\"text\": \"So nice to have someone so energetic like you in the team.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1508,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb3592aa0460609993b10.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f349d99bf318f3d896d8b3c91201c2f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb39802398f062c461e2c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cb39802398f062c461e2c\ntitle: Task 92\nchallengeType: 22\ndashedName: task-92\n--description--\nBeing energetic means having a lot of energy, enthusiasm, and a readiness to act.\n--fillInTheBlank--\n--sentence--\nSo nice to have someone so BLANK like you in the team.\n--blanks--\nenergetic\n--feedback--\nThe adjective here points out a positive trait.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 53.22,\n\"finishTimestamp\": 55.86\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.3,\n\"dialogue\": {\n\"text\": \"So nice to have someone so energetic like you in the team.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb39802398f062c461e2c.md",
      "source_type": "git_repo"
    },
    "token_count": 304,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d3744d120ed0bb61621172bf0ab0c2b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb3f8df42660676854d29.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cb3f8df42660676854d29\ntitle: Task 93\nchallengeType: 19\ndashedName: task-93\n--description--\nAsking if someone is ready to begin is a way to check if the person is prepared or eager to start a particular activity.\n--questions--\n--text--\nWhat does Sophie ask Tom at the end?\n--answers--\nAre you ready to leave?\n--feedback--\nListen again. Sophie's question is about starting or commencing something, not about leaving, relaxing, or specifically working.\nAre you ready to relax?\n--feedback--\nListen again. Sophie's question is about starting or commencing something, not about leaving, relaxing, or specifically working.\nAre you ready to work?\n--feedback--\nListen again. Sophie's question is about starting or commencing something, not about leaving, relaxing, or specifically working.\nAre you ready to begin?\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 53.15,\n\"finishTimestamp\": 57.2\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.75,\n\"dialogue\": {\n\"text\": \"So nice to have someone so energetic like you and the team. Are you ready to begin?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.25\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1832,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb3f8df42660676854d29.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dbc6493f5500c5f8ad85fee3e8d2646b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc35036d0a00fe17e7cee.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc35036d0a00fe17e7cee\ntitle: Task 95\nchallengeType: 22\ndashedName: task-95\n--description--\nWhen you're very hungry, you can emphasize this feeling by using the word so before hungry. This way, you're expressing a stronger emotion or feeling about how hungry you are.\n--fillInTheBlank--\n--sentence--\nWow, I'm BLANK hungry.\n--blanks--\nso\n--feedback--\nTom is using a word to emphasize or increase the intensity of his feeling of hunger.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.9,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry. Is it lunchtime?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc35036d0a00fe17e7cee.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5a7bb2a06b854340aeb024965f1b4838",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb2ee9d60f205d362b1de.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cb2ee9d60f205d362b1de\ntitle: Task 90\nchallengeType: 19\ndashedName: task-90\n--description--\nIn workplaces, we often have items that help us do our job better Both Tom and Sophie talk about items at their desks which make their work more comfortable --instructions--\nListen to this part of Sophie and Tom's conversation and answer the question below --questions--\n--text--\nWhich of these is NOT a workplace item mentioned by Sophie and Tom --answers--\nStanding desk\n--feedback--\nTom mentions this workplace Item Ergonomic chair\n--feedback--\nTom mentions this workplace Item Ergonomic mouse\n--feedback--\nTom mentions this workplace Item Cutting-edge gadgets\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 75, \"y\": 0, \"z\": 1 25 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 40 35,\n\"finishTimestamp\": 49 1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3 7,\n\"dialogue\": {\n\"text\": \"You're going to like it here if you're into cutting-edge gadgets \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 4 2,\n\"finishTime\": 9 5,\n\"dialogue\": {\n\"text\": \"This is so cool A standing desk, an ergonomic chair, and an ergonomic mouse \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 10\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 10\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2379,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cb2ee9d60f205d362b1de.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f36fcf5d4db02cc99afa756e0606b2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc3b856f1d01011bfc027.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc3b856f1d01011bfc027\ntitle: Task 96\nchallengeType: 19\ndashedName: task-96\n--description--\nIn English, the three main meals of the day are breakfast, lunch, and dinner. Breakfast is typically eaten in the morning, lunch is around midday, and dinner is in the evening.\n--questions--\n--text--\nBased on the dialogue, at what approximate time of the day is the meal Tom is mentioning?\n--answers--\nMorning\n--feedback--\nBreakfast is the meal usually eaten in the morning.\nMidday\nAfternoon\n--feedback--\nLunch is before the afternoon begins.\nEvening\n--feedback--\nDinner is the meal usually eaten in the evening. Tom specifically mentioned lunch time, which is around midday.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.9,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry. Is it lunchtime?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc3b856f1d01011bfc027.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0f23c15b9095159b82ed16e47501ade8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc4aa4726711043189619.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc4aa4726711043189619\ntitle: Task 97\nchallengeType: 22\ndashedName: task-97\n--description--\nThe pronoun it is often used in English to talk about the weather, the time, dates, and distances. In this context, it refers to a specific time of the day, lunch time.\n--fillInTheBlank--\n--sentence--\nIs BLANK lunch time?\n--blanks--\nit\n--feedback--\nTom is asking about a specific time of the day. He uses a pronoun to refer to that time.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.9,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry. Is it lunchtime?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1285,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc4aa4726711043189619.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4066b18f084b38e4e2ed40352e3add5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc523e668741073c4e916.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc523e668741073c4e916\ntitle: Task 98\nchallengeType: 19\ndashedName: task-98\n--description--\nTo ask a question using it is, you change the order. Instead of it is, you say is it. This is how you turn a statement into a question in English.\n--questions--\n--text--\nWhich of the following is a correct form of a question?\n--answers--\nIt is lunch time?\n--feedback--\nThis sentence can be understood, but this is not the common way to form a question.\nLunch time it is?\n--feedback--\nThis order is not commonly used for questions.\nIs lunch time it?\n--feedback--\nThis order is incorrect for asking questions.\nIs it lunch time?\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.9,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry. Is it lunchtime?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1535,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc523e668741073c4e916.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fd4d1cab042811ab8911848b6819f82d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc5d403162710a3fae634.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc5d403162710a3fae634\ntitle: Task 99\nchallengeType: 19\ndashedName: task-99\n--description--\nIf a person asks you a direct question using is it For example: Is it true You can reply to this question with these short answers:\nYes, it is For affirmative No, it is not or No, it isn't For negative --questions--\n--text--\nWhich option below gives a correct positive answer to the question in the dialogue --answers--\nNo, It isn't --feedback--\nThis is the negative form, not affirmative Yes, It are --feedback--\nThis is grammatically incorrect Yes, it is No, Is it --feedback--\nThis is a question form, not a positive answer --video-solution--\n3\n--scene--\n```json\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 75, \"y\": 0, \"z\": 1 25 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-3 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 5 1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 9,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry Is it lunchtime \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 4,\n\"finishTime\": 5 5,\n\"dialogue\": {\n\"text\": \"Yes, it is \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6\n}\n]\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2019,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc5d403162710a3fae634.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "32a1c725f3e10b5168d8157c195db04c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc6259c711d10cde2c486.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc6259c711d10cde2c486\ntitle: Task 100\nchallengeType: 22\ndashedName: task-100\n--description--\nPay attention to what Sophie is replying to Tom.\n--fillInTheBlank--\n--sentence--\nYes, BLANK BLANK.\n--blanks--\nit\n--feedback--\nSophie is confirming or agreeing with Tom's question about lunch time. She uses an affirmative phrase to do so.\nis\n--feedback--\nSophie is confirming or agreeing with Tom's question about lunch time. She uses an affirmative phrase to do so.\n--scene--\n```json\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 75, \"y\": 0, \"z\": 1.25 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 5.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.9,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry. Is it lunchtime?\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.4,\n\"finishTime\": 5.5,\n\"dialogue\": {\n\"text\": \"Yes, it is.\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 6\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6\n}\n]\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1808,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc6259c711d10cde2c486.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1685ff7743fc72883e2d97ee2b08aa7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc6981cbf2711196a284f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc6981cbf2711196a284f\ntitle: Task 101\nchallengeType: 22\ndashedName: task-101\n--description--\nTo ask about someone's actions or plans in the present with the verb to be, you can use the structure are you at the beginning of the question. This combination of verb (are) and subject (you) helps form questions in the present simple tense.\n--fillInTheBlank--\n--sentence--\nBLANK you eating here or BLANK you going out?\n--blanks--\nAre\n--feedback--\nTom is asking Sophie about her plans. When forming questions in the present simple tense about someone's actions or choices, you start with are followed by you.\nare\n--feedback--\nTom is asking Sophie about her plans. When forming questions in the present simple tense about someone's actions or choices, you start with are followed by you.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.2,\n\"finishTimestamp\": 7.66\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.85,\n\"dialogue\": {\n\"text\": \"Are you eating here or are you going out?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc6981cbf2711196a284f.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a5d18668c5a2b721138a6a093a444d9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc6dd00af9f117f10446b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc6dd00af9f117f10446b\ntitle: Task 102\nchallengeType: 22\ndashedName: task-102\n--description--\nThe word here is an adverb that indicates a location or place. It refers to the current location of the speaker or the location they are talking about.\n--fillInTheBlank--\n--sentence--\nAre you eating BLANK or are you going out?\n--blanks--\nhere\n--feedback--\nTom is asking Sophie if she is eating in their current location or if she has plans to eat elsewhere.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.2,\n\"finishTimestamp\": 7.66\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.85,\n\"dialogue\": {\n\"text\": \"Are you eating here or are you going out?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1319,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc6dd00af9f117f10446b.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6e9e2ebc88f5cd50aa9ae329c01eeb46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc73e6b1c6811a73b04bb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc73e6b1c6811a73b04bb\ntitle: Task 103\nchallengeType: 19\ndashedName: task-103\n--description--\nGoing out refers to leaving a particular place, such as an office, to do an activity in another place, like eating. The opposite is eating here, which means stay and eat at the office.\n--questions--\n--text--\nWhat does going out mean in this context?\n--answers--\nExiting a building\n--feedback--\nWhile it can mean this, in the context it's more about where Sophie plans to eat.\nEating outside the office\nGoing to sleep\n--feedback--\nThis is not related to the phrase in this context.\nBeing in a romantic relationship\n--feedback--\nGoing out can mean this, but not in the context of the dialogue.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.2,\n\"finishTimestamp\": 7.66\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.85,\n\"dialogue\": {\n\"text\": \"Are you eating here or are you going out?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1611,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc73e6b1c6811a73b04bb.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c85e260c99b902281a4d6624eb838051",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cbad538b114095fb14c0e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cbad538b114095fb14c0e\ntitle: 'Dialogue 3: Tom and Sophie Take a Lunch Break'\nchallengeType: 21\ndashedName: dialogue-3-tom-and-sophie-take-a-lunch-break\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 1-3 mp3\",\n\"startTime\": 1 2\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4 4,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry Is it lunch time \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5,\n\"finishTime\": 6 4,\n\"dialogue\": {\n\"text\": \"Yes, it is \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 6 6,\n\"finishTime\": 8 5,\n\"dialogue\": {\n\"text\": \"Are you eating here or are you going out \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 9 1,\n\"finishTime\": 10 8,\n\"dialogue\": {\n\"text\": \"Today, I'm going out \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 11,\n\"finishTime\": 14,\n\"dialogue\": {\n\"text\": \"I can show you some places around here Are you interested",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cbad538b114095fb14c0e.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "04f9d67db83ccb7c6767a617475cc8c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cbad538b114095fb14c0e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Yes, it is \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 6 6, \"finishTime\": 8 5, \"dialogue\": { \"text\": \"Are you eating here or are you going out \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 9 1, \"finishTime\": 10 8, \"dialogue\": { \"text\": \"Today, I'm going out \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 11, \"finishTime\": 14, \"dialogue\": { \"text\": \"I can show you some places around here Are you interested\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 14,\n\"finishTime\": 17 2,\n\"dialogue\": {\n\"text\": \"Of course Any favorite lunch spot around here, Sophie \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 17 4,\n\"finishTime\": 20 5,\n\"dialogue\": {\n\"text\": \"I know a nice one It's a café right down the street \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 20 5,\n\"finishTime\": 21 3,\n\"dialogue\": {\n\"text\": \"Is that OK for you \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 21 5,\n\"finishTime\": 22 7,\n\"dialogue\": {\n\"text\": \"Sounds great \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 23 1,\n\"finishTime\": 25 2,\n\"dialogue\": {\n\"text\": \"Yeah It's nice to have a break from the office \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 25 4,\n\"finishTime\": 28 7,\n\"dialogue\": {\n\"text\": \"It is Is the café within walking distance \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 29 1,\n\"finishTime\": 30 4,\n\"dialogue\": {\n\"text\": \"Well, it's not far",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cbad538b114095fb14c0e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "82e664f1322200d0b2d59ece24ea6fbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cbad538b114095fb14c0e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"text\": \"Sounds great \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 23 1, \"finishTime\": 25 2, \"dialogue\": { \"text\": \"Yeah It's nice to have a break from the office \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 25 4, \"finishTime\": 28 7, \"dialogue\": { \"text\": \"It is Is the café within walking distance \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 29 1, \"finishTime\": 30 4, \"dialogue\": { \"text\": \"Well, it's not far\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 30 5,\n\"finishTime\": 32 1,\n\"dialogue\": {\n\"text\": \"Come on We can go together \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 32 6\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 33 1\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cbad538b114095fb14c0e.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "afa59b7453133472877ba9ad4984dd57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc7a3f479f511d56ab246.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc7a3f479f511d56ab246\ntitle: Task 104\nchallengeType: 22\ndashedName: task-104\n--description--\nToday is a word used to refer to the current day, the day that is happening now.\n--fillInTheBlank--\n--sentence--\nBLANK, I'm going out.\n--blanks--\nToday\n--feedback--\nSophie is talking about her plans for the current day.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 12.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Today, I'm going out. I can show you some places around here. Are you interested?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1320,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc7a3f479f511d56ab246.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8cedde9db3afabcb7f3e1cf94ce61390",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc833fe9c0611feeb5b26.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc833fe9c0611feeb5b26\ntitle: Task 105\nchallengeType: 19\ndashedName: task-105\n--description--\nCan is a modal verb used to express abilities or possibilities. It indicates what someone is capable of doing.\n--questions--\n--text--\nWhat does Sophie express with the word can?\n--answers--\nA request to show some places to Tom.\n--feedback--\nCan can be used for polite requests, but in this context, Sophie is expressing her ability.\nAn obligation to show some places to Tom.\n--feedback--\nCan doesn't express obligation.\nAn ability to show some places to Tom.\nA past action\n--feedback--\nCan is used to talk about abilities or possibilities in the present, not the past.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 12.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Today, I'm going out. I can show you some places around here. Are you interested?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1682,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc833fe9c0611feeb5b26.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "72afc53f526e683567af1c009858decd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc86fc6a990122ac6c6a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc86fc6a990122ac6c6a1\ntitle: Task 106\nchallengeType: 22\ndashedName: task-106\n--description--\nCan is a modal verb that expresses the ability or capacity to do something.\n--fillInTheBlank--\n--sentence--\nToday, I'm going out. I BLANK show you some places around here.\n--blanks--\ncan\n--feedback--\nSophie is expressing her capability or possibility of showing Tom some places.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 12.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Today, I'm going out. I can show you some places around here. Are you interested?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc86fc6a990122ac6c6a1.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "97d3eb7de77502e840a37f2d8592c427",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc8dafb6343124f729ec5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc8dafb6343124f729ec5\ntitle: Task 107\nchallengeType: 19\ndashedName: task-107\n--description--\nThe word some is often used to indicate an unspecified amount or number. In this context, there isn't a specific number of places Sophie will take Tom to visit.\n--questions--\n--text--\nWhat does some refer to in the dialogue?\n--answers--\nA specific number of places\n--feedback--\nSome doesn't specify an exact number.\nNo places\n--feedback--\nSome indicates there are places to be shown.\nAn unspecified number of places\nOne place\n--feedback--\nSome indicates more than one.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 12.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Today, I'm going out. I can show you some places around here. Are you interested?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1582,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc8dafb6343124f729ec5.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c70e0ac5dba19d9a603bc1a625e4916d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc98cfe781112ace7d3ee.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc98cfe781112ace7d3ee\ntitle: Task 109\nchallengeType: 22\ndashedName: task-109\n--description--\nListen to the audio and complete the sentence below.\n--fillInTheBlank--\n--sentence--\nI can show you BLANK BLANK BLANK here.\n--blanks--\nsome\n--feedback--\nSophie is offering to show Tom various locations near their current spot.\nplaces\n--feedback--\nSophie is offering to show Tom various locations near their current spot.\naround\n--feedback--\nSophie is offering to show Tom various locations near their current spot.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 12.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Today, I'm going out. I can show you some places around here. Are you interested?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1494,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc98cfe781112ace7d3ee.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dd37a55093bc21d99dcdb55b1b36ce6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc92ecdebaa1278505e87.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cc92ecdebaa1278505e87\ntitle: Task 108\nchallengeType: 19\ndashedName: task-108\n--description--\nPlaces around here refers to locations in the nearby vicinity or area.\n--questions--\n--text--\nWhat does places around here suggest?\n--answers--\nLocations far away\n--feedback--\naround here indicates nearby or in the vicinity.\nThe exact current location\n--feedback--\naround here suggests various locations in the surrounding area.\nNearby locations\nImaginary places\n--feedback--\nSophie is talking about real locations near their current spot.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 12.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Today, I'm going out. I can show you some places around here. Are you interested?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1551,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cc92ecdebaa1278505e87.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f1b8a19927f3ca39f1a5dd1173706a57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cca6bb44ce5130a759829.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cca6bb44ce5130a759829\ntitle: Task 111\nchallengeType: 19\ndashedName: task-111\n--description--\nOf course is a phrase used to express strong agreement or to indicate that something is obvious.\n--questions--\n--text--\nWhat does Tom mean when he says Of course?\n--answers--\nHe is not sure.\n--feedback--\nOf course indicates certainty.\nHe is disagreeing.\n--feedback--\nOf course is an affirmation or agreement.\nHe strongly agrees.\nHe needs more information.\n--feedback--\nTom is expressing strong agreement, not asking for clarification.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.85,\n\"finishTimestamp\": 16.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Of course. Any favorite lunch spot around here, Sophie?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cca6bb44ce5130a759829.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dc8ea5b3318676b8ec5abceab2069dc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cca055e5d1912d9784ce1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cca055e5d1912d9784ce1\ntitle: Task 110\nchallengeType: 19\ndashedName: task-110\n--description--\nAre you interested? is a way of asking someone if they want to know more or participate in something.\n--questions--\n--text--\nWhat is Sophie asking Tom with Are you interested?\n--answers--\nIf he is going with her.\n--feedback--\nThe question is more about Tom's feelings towards the idea.\nIf he finds the idea appealing.\nIf he has been to those places before.\n--feedback--\nSophie is asking about his interest, not his past experiences.\nIf he knows other places.\n--feedback--\nSophie is offering to show places, not asking for suggestions.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.2,\n\"finishTimestamp\": 12.7\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Today, I'm going out. I can show you some places around here. Are you interested?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1642,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cca055e5d1912d9784ce1.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0dd6b8dd48343ca9a1f53943b3a9d13b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccd12c27bf013529db8ce.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ccd12c27bf013529db8ce\ntitle: Task 112\nchallengeType: 19\ndashedName: task-112\n--description--\nIn questions, any is often used to inquire if there is at least one of something.\n--questions--\n--text--\nIn the phrase Any favorite lunch spot?, what is Tom asking Sophie?\n--answers--\nIf she dislikes all lunch spots.\n--feedback--\nAny in the context doesn't indicate dislike.\nIf there is a specific lunch spot she prefers.\nIf she knows all the lunch spots.\n--feedback--\nTom is not asking about all spots, but about a preferred one.\nIf she never goes for lunch.\n--feedback--\nTom is specifically asking about a preferred spot, not Sophie's lunch habits.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.85,\n\"finishTimestamp\": 16.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Of course. Any favorite lunch spot around here, Sophie?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccd12c27bf013529db8ce.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d6956e53cea30b6b51ef76a35de7de1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccd8bafe46d138451d176.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ccd8bafe46d138451d176\ntitle: Task 113\nchallengeType: 22\ndashedName: task-113\n--description--\nA favorite lunch spot refers to a preferred place where someone likes to have their lunch.\n--fillInTheBlank--\n--sentence--\nAny BLANK BLANK BLANK around here, Sophie?\n--blanks--\nfavorite\n--feedback--\nListen to how Tom asks Sophie about a place she prefers to eat lunch.\nlunch\n--feedback--\nListen to how Tom asks Sophie about a place she prefers to eat lunch.\nspot\n--feedback--\nListen to how Tom asks Sophie about a place she prefers to eat lunch.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.85,\n\"finishTimestamp\": 16.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.85,\n\"dialogue\": {\n\"text\": \"Of course. Any favorite lunch spot around here, Sophie?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccd8bafe46d138451d176.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "faa9d5651cbed5282af8ec86de4680a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccde87f42ec13b19c5dab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ccde87f42ec13b19c5dab\ntitle: Task 114\nchallengeType: 19\ndashedName: task-114\n--description--\nA café is a place where you can buy and drink coffee, often with light meals and snacks.\n--questions--\n--text--\nWhich of the following best describes a café?\n--answers--\nA place to buy books.\n--feedback--\nWhile some cafes might have books, they are primarily for beverages and food.\nA place to drink coffee and eat light meals.\nA music performance area.\n--feedback--\nSome cafes might have music, but their main purpose is food and drinks.\nA clothing store.\n--feedback--\nCafés are related to food and beverages, not clothes.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.74,\n\"finishTimestamp\": 20.34\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.3,\n\"dialogue\": {\n\"text\": \"I know a nice one. It's a café right down the street. Is that okay for you?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccde87f42ec13b19c5dab.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d024e36ddb6d4ab7d1c82735e1e6a89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cce9ebec3c01412c0e564.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cce9ebec3c01412c0e564\ntitle: Task 116\nchallengeType: 19\ndashedName: task-116\n--description--\nDown the street means further along the street or a short distance away on the same street.\n--questions--\n--text--\nWhat does Sophie mean by down the street?\n--answers--\nThe café is underground.\n--feedback--\nDown in this context does not refer to being underground.\nThe café is on another street.\n--feedback--\nDown the street refers to a location on the same street.\nThe café is a short distance away on the same street.\nThe café is in a building.\n--feedback--\nThe phrase doesn't specify the café's position in or outside a building.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.74,\n\"finishTimestamp\": 20.34\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.3,\n\"dialogue\": {\n\"text\": \"I know a nice one. It's a café right down the street. Is that okay for you?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cce9ebec3c01412c0e564.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6c6fb6ab3f404537f26f48bd8dde001b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cce4130c4d313e92ed22e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cce4130c4d313e92ed22e\ntitle: Task 115\nchallengeType: 19\ndashedName: task-115\n--description--\nSophie is suggesting a place for lunch and is asking Tom if he's okay with her choice.\n--questions--\n--text--\nWhere is the café Sophie is suggesting?\n--answers--\nAcross the town.\n--feedback--\nListen closely to where Sophie says the café is located.\nUp the hill.\n--feedback--\nListen closely to where Sophie says the café is located.\nRight down the street.\nNext to the office.\n--feedback--\nListen closely to where Sophie says the café is located.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.74,\n\"finishTimestamp\": 20.34\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.3,\n\"dialogue\": {\n\"text\": \"I know a nice one. It's a café right down the street. Is that okay for you?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cce4130c4d313e92ed22e.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8cec3ff1465d675880a68c84286a1010",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccf01c07406143b90ff84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ccf01c07406143b90ff84\ntitle: Task 117\nchallengeType: 19\ndashedName: task-117\n--description--\nThe phrase Is that ok for you? is used to ask if someone agrees with or accepts a suggestion or situation.\n--questions--\n--text--\nWhat is Sophie trying to know when she asks Is that ok for you?\n--answers--\nIf Tom knows the café.\n--feedback--\nSophie is not inquiring about Tom's knowledge of the café.\nIf Tom agrees with the café choice.\nIf Tom dislikes coffee.\n--feedback--\nThe question doesn't specify anything about liking or disliking coffee.\nIf Tom owns the café.\n--feedback--\nSophie is inquiring about Tom's preference, not ownership.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.74,\n\"finishTimestamp\": 20.34\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.3,\n\"dialogue\": {\n\"text\": \"I know a nice one. It's a café right down the street. Is that okay for you?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccf01c07406143b90ff84.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4ec611d989e606a9802ca95c4679a735",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccf6255561e1467afd1c6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ccf6255561e1467afd1c6\ntitle: Task 118\nchallengeType: 19\ndashedName: task-118\n--description--\nWhen someone says Sounds great!, they are expressing agreement or enthusiasm about what has been said.\n--questions--\n--text--\nWhat does Tom mean by Sounds great!?\n--answers--\nHe doesn't like the idea.\n--feedback--\nSounds great! is a positive expression.\nHe is asking a question.\n--feedback--\nTom is making a statement, not asking a question.\nHe agrees and is excited about the idea.\nHe didn't hear Sophie.\n--feedback--\nTom is responding directly to Sophie's suggestion.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 20.4,\n\"finishTimestamp\": 21.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 1.55,\n\"dialogue\": {\n\"text\": \"Sounds great.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 2.05\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1432,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccf6255561e1467afd1c6.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2b2ccfb18cca960ae176fe6f7a8f8c86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd00707c0d614c38e7416.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd00707c0d614c38e7416\ntitle: Task 120\nchallengeType: 19\ndashedName: task-120\n--description--\nTo have a break means to take a short rest or pause from what you are doing.\n--questions--\n--text--\nWhat does have a break mean?\n--answers--\nTo break something.\n--feedback--\nThe phrase is not about damaging anything.\nTo continue working non-stop.\n--feedback--\nHaving a break is the opposite of working continuously.\nTo take a short rest.\nTo start a new task.\n--feedback--\nThe phrase refers to pausing or resting, not beginning a new task.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 21.9,\n\"finishTimestamp\": 24.04\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.85,\n\"dialogue\": {\n\"text\": \"Yeah, it's nice to have a break from the office.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd00707c0d614c38e7416.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7ee5c2a348f99446db3c48c86a022465",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccfb763eddb149831854d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656ccfb763eddb149831854d\ntitle: Task 119\nchallengeType: 22\ndashedName: task-119\n--description--\nWhen someone hears something they like or agree with, they might respond with a positive expression to show enthusiasm or agreement.\n--instructions--\nWhat does Tom say in the dialogue?\n--fillInTheBlank--\n--sentence--\nBLANK BLANK.\n--blanks--\nSounds\n--feedback--\nTom is expressing his agreement and excitement about the idea.\ngreat\n--feedback--\nTom is expressing his agreement and excitement about the idea.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 20.4,\n\"finishTimestamp\": 21.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 1.55,\n\"dialogue\": {\n\"text\": \"Sounds great.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 2.05\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1328,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656ccfb763eddb149831854d.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a977325e953f18c87c1cf535249b00a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd061eb49fb14f672f77f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd061eb49fb14f672f77f\ntitle: Task 121\nchallengeType: 22\ndashedName: task-121\n--description--\nSometimes, people need to pause or rest from their activities. There's a common phrase to describe this short pause or rest.\n--fillInTheBlank--\n--sentence--\nIt is nice to BLANK BLANK BLANK from the office.\n--blanks--\nhave\n--feedback--\nSophie is talking about taking a short rest or pause from the office work.\na\n--feedback--\nSophie is talking about taking a short rest or pause from the office work.\nbreak\n--feedback--\nSophie is talking about taking a short rest or pause from the office work.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 21.9,\n\"finishTimestamp\": 24.04\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.85,\n\"dialogue\": {\n\"text\": \"Yeah, it's nice to have a break from the office.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.35\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd061eb49fb14f672f77f.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3c0c1f0ef49c249d546790a185a69a5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd0c550a08915211f32ce.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd0c550a08915211f32ce\ntitle: Task 122\nchallengeType: 19\ndashedName: task-122\n--description--\nIf a place is within walking distance, it means it's close enough to reach by walking and you don't need to use a vehicle.\n--questions--\n--text--\nWhat does within walking distance mean?\n--answers--\nYou need a car to get there.\n--feedback--\nWithin walking distance suggests no vehicle is needed.\nIt's too far to walk.\n--feedback--\nThe phrase means the opposite.\nIt's close enough to walk to.\nYou need a bus to reach it.\n--feedback--\nAgain, the phrase indicates that walking is sufficient.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 25.65,\n\"finishTimestamp\": 27.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.55,\n\"dialogue\": {\n\"text\": \"Is the cafe within walking distance?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.05\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd0c550a08915211f32ce.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94f2283269183f641ad9c65b55a933df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd118ca4f1115500a4bf8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd118ca4f1115500a4bf8\ntitle: Task 123\nchallengeType: 22\ndashedName: task-123\n--description--\nWhen a place is close enough that you can easily get there by walking, a specific phrase describes this proximity.\n--fillInTheBlank--\n--sentence--\nIs the café BLANK walking BLANK?\n--blanks--\nwithin\n--feedback--\nTom is inquiring if the café is close enough to reach on foot without the need for transportation.\ndistance\n--feedback--\nTom is inquiring if the café is close enough to reach on foot without the need for transportation.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 25.65,\n\"finishTimestamp\": 27.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 2.55,\n\"dialogue\": {\n\"text\": \"Is the cafe within walking distance?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 3.05\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd118ca4f1115500a4bf8.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "79142d755960aa59a4383dc8ba7ccf3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd1ca72b3e615a33c05b6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd1ca72b3e615a33c05b6\ntitle: Task 125\nchallengeType: 22\ndashedName: task-125\n--description--\nIn English, you can use a certain structure to indicate that something is not in a particular state or condition in the present.\n--fillInTheBlank--\n--sentence--\nWell, BLANK BLANK far.\n--blanks--\nit's\n--feedback--\nSophie is negating or contradicting the idea that the café is at a significant distance.\nnot\n--feedback--\nSophie is negating or contradicting the idea that the café is at a significant distance.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28,\n\"finishTimestamp\": 30.65\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.2,\n\"dialogue\": {\n\"text\": \"Well, it's not far. Come on, we can go together.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1381,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd1ca72b3e615a33c05b6.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3c9f66317efc520bc3eedcd019893067",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd17584250515779ca7e5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd17584250515779ca7e5\ntitle: Task 124\nchallengeType: 19\ndashedName: task-124\n--description--\nYou can use it is not to make negative statements in the present simple. It negates or says something isn't a certain way. It's is a contraction of it and is.\n--questions--\n--text--\nHow does Sophie describe the distance to the café?\n--answers--\nIt is very far.\n--feedback--\nSophie states the opposite.\nIt is close.\nIt isn't close.\n--feedback--\nSophie's statement implies the café is near.\nShe doesn't know.\n--feedback--\nSophie provides information about the café's location.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28,\n\"finishTimestamp\": 30.65\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.2,\n\"dialogue\": {\n\"text\": \"Well, it's not far. Come on, we can go together.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1495,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd17584250515779ca7e5.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "35149278652f511606c95e30f78f1f61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd22d91db1915cb11f584.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd22d91db1915cb11f584\ntitle: Task 126\nchallengeType: 19\ndashedName: task-126\n--description--\nThe phrase go together is often used to suggest that two or more people accompany each other to a particular place or participate in an activity together.\n--questions--\n--text--\nWhat does Sophie suggest they do?\n--answers--\nGo in separate ways.\n--feedback--\nSophie's suggestion implies companionship, not separation.\nMeet at the café later.\n--feedback--\nSophie is suggesting they move now, not meet later.\nGo to the café with each other.\n--feedback--\nSophie is proposing they both head to the café as a pair.\nWait for someone else.\n--feedback--\nThere's no mention of waiting for a third person in the conversation.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28,\n\"finishTimestamp\": 30.65\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.2,\n\"dialogue\": {\n\"text\": \"Well, it's not far. Come on, we can go together.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd22d91db1915cb11f584.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "76029a91ecb7bb54d295a55a1293784b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd27f38f17f15f06f6ed6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd27f38f17f15f06f6ed6\ntitle: Task 127\nchallengeType: 22\ndashedName: task-127\n--description--\nWhen two or more people decide to accompany each other to a place or event, they use a phrase to indicate they'll be going as a group.\n--fillInTheBlank--\n--sentence--\nCome on, we can BLANK BLANK.\n--blanks--\ngo\n--feedback--\nSophie is suggesting that they both head to the café at the same time as a pair.\ntogether\n--feedback--\nSophie is suggesting that they both head to the café at the same time as a pair.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 29.2,\n\"finishTimestamp\": 30.65\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.4,\n\"dialogue\": {\n\"text\": \"Come on, we can go together.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 2.9\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1368,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd27f38f17f15f06f6ed6.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ea39db2964e149277e2d73b189228380",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd52f0f43551be96b4640.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd52f0f43551be96b4640\ntitle: Task 130\nchallengeType: 19\ndashedName: task-130\n--description--\nThe expression look who's here is often used when you notice someone arriving or entering a place, especially when it's unexpected or a pleasant surprise.\n--questions--\n--text--\nWhich of the following best describes the meaning of look who's here?\n--answers--\nTell me where that person is.\n--feedback--\nThe phrase is not about asking for someone's location.\nI see that person.\n--feedback--\nThis is partially correct. There is something more.\nI'm surprised to see that person here.\nI don't know that person.\n--feedback--\nIt's not about not knowing the person, but noticing them. Try again.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.52,\n\"dialogue\": {\n\"text\": \"Oh, look who's here! Hey, Brian. How is everything?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1540,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd52f0f43551be96b4640.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0a44c1c6f993f4a90017a0163aa4a626",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd63a45146d1c2c51e682.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd63a45146d1c2c51e682\ntitle: Task 132\nchallengeType: 19\ndashedName: task-132\n--description--\nThe question How is everything? is a way to ask someone how they are and how things are going in their life.\n--questions--\n--text--\nWhat does How is everything? mean?\n--answers--\nHow is your health?\n--feedback--\nIt's not just about health.\nHow is your work?\n--feedback--\nIt's not just about work.\nHow is your life?\nHow is your family?\n--feedback--\nIt's not just about family.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.52,\n\"dialogue\": {\n\"text\": \"Oh, look who's here! Hey, Brian. How is everything?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1325,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd63a45146d1c2c51e682.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "84277c3290cde44f12bf959a7829c1a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd6a37495961c5f242c5d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd6a37495961c5f242c5d\ntitle: Task 133\nchallengeType: 19\ndashedName: task-133\n--description--\nThere are some questions you can start a friendly conversation with. This is one of them.\n--questions--\n--text--\nWhat does Sophie ask Brian after greeting him?\n--answers--\nWhere have you been?\n--feedback--\nSophie doesn't ask about a place.\nHow is your family?\n--feedback--\nShe doesn't ask about his family.\nWhat are you doing here?\nHow is everything?\n--feedback--\nShe doesn't ask for reasons.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.52,\n\"dialogue\": {\n\"text\": \"Oh, look who's here! Hey, Brian. How is everything?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1436,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd6a37495961c5f242c5d.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "967e7ce6df18814de023abfb2dbe0bac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd7da364a181cb1038846.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd7da364a181cb1038846\ntitle: Task 134\nchallengeType: 22\ndashedName: task-134\n--description--\nHere, Brian is grateful to see Sophie. Listen to the video and fill in the blank below.\n--fillInTheBlank--\n--sentence--\nSophie! Great to see you BLANK.\n--blanks--\nhere\n--feedback--\nThe dialogue shows surprise, a friendly question and an answer.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 3.45,\n\"finishTimestamp\": 5.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 2.5,\n\"dialogue\": {\n\"text\": \"Sophie. Great to see you here!\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 3\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1238,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd7da364a181cb1038846.md",
      "source_type": "git_repo"
    },
    "token_count": 293,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ea017f683c92f7edd9f3aaec7b2bc6b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd83ad397f61ce1259ad6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd83ad397f61ce1259ad6\ntitle: Task 135\nchallengeType: 22\ndashedName: task-135\n--description--\nWhen you want to present one person to another, you can use the phrase let me introduce you to [name] (name being the person's name). For example: Let me introduce you to Daniel.\n--fillInTheBlank--\n--sentence--\nLet me BLANK you to Tom.\n--blanks--\nintroduce\n--feedback--\nSophie uses a phrase that suggests she's presenting Tom to Brian.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7,\n\"finishTimestamp\": 11.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.76,\n\"dialogue\": {\n\"text\": \"Brian, let me introduce you to Tom. Tom, this is Brian. He's a web developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1344,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd83ad397f61ce1259ad6.md",
      "source_type": "git_repo"
    },
    "token_count": 332,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3c6202d031755d042f4449ea2f2ef034",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd8d68948d11d201308d4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd8d68948d11d201308d4\ntitle: Task 136\nchallengeType: 19\ndashedName: task-136\n--description--\nThe phrase this is [name] is used to present someone in a conversation. Name refers to a person's name. It's a simple and direct way to make introductions. For example: Daniel, this is Carol.\nHere, you are telling Daniel about Carol and helping Daniel to know who Carol is.\n--questions--\n--text--\nWhat is Sophie doing?\n--answers--\nIntroducing Brian to Tom.\n--feedback--\nSophie is not inquiring about Brian's identity.\nAsking who Brian is.\n--feedback--\nSophie is introducing someone, not herself.\nSaying that she is Brian.\n--feedback--\nThe phrase this is is often used to introduce or present someone.\nAsking who Tom is.\n--feedback--\nSophie is doing the introduction, not asking Brian to do so.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7,\n\"finishTimestamp\": 11.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.76,\n\"dialogue\": {\n\"text\": \"Brian, let me introduce you to Tom. Tom, this is Brian. He's a web developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd8d68948d11d201308d4.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "363f0a9deb3c95ad515df260254417b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd4b014d03a1baf452429.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd4b014d03a1baf452429\ntitle: 'Dialogue 4: Sophie Introduces Brian to Tom'\nchallengeType: 21\ndashedName: dialogue-4-sophie-introduces-brian-to-tom\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\n```json\n{\n\"setup\": {\n\"background\": \"cafe png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 1-4 mp3\",\n\"startTime\": 1 3\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 40, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 3\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 75, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 7\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1 3,\n\"finishTime\": 4,\n\"dialogue\": {\n\"text\": \"Oh, look who's here Hey, Brian How is everything \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4 5,\n\"finishTime\": 6 4,\n\"dialogue\": {\n\"text\": \"Sophie Great to see you here \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 6 6,\n\"finishTime\": 9 8,\n\"dialogue\": {\n\"text\": \"You, too Brian, let me introduce you to Tom",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd4b014d03a1baf452429.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ba2661a96f996fc0cffcbd64c9c92f9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd4b014d03a1baf452429.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"z\": 1 }, \"startTime\": 0 7 }, { \"character\": \"Sophie\", \"startTime\": 1 3, \"finishTime\": 4, \"dialogue\": { \"text\": \"Oh, look who's here Hey, Brian How is everything \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 4 5, \"finishTime\": 6 4, \"dialogue\": { \"text\": \"Sophie Great to see you here \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 6 6, \"finishTime\": 9 8, \"dialogue\": { \"text\": \"You, too Brian, let me introduce you to Tom\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 9 9,\n\"finishTime\": 12 8,\n\"dialogue\": {\n\"text\": \"Tom, this is Brian He's a web developer \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 13,\n\"finishTime\": 17,\n\"dialogue\": {\n\"text\": \"Brian, this is Tom He's our new graphic designer and he is from Texas \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 17 2,\n\"finishTime\": 19 4,\n\"dialogue\": {\n\"text\": \"It is a pleasure to meet you, Tom \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 19 6,\n\"finishTime\": 23 6,\n\"dialogue\": {\n\"text\": \"Sophie is a great workmate She's very kind and helpful \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 23 9,\n\"finishTime\": 25 4,\n\"dialogue\": {\n\"text\": \"Oh, c'mon, Brian \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 25 8,\n\"finishTime\": 26 8,\n\"dialogue\": {\n\"text\": \"But it's true \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 27 1,\n\"finishTime\": 29",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd4b014d03a1baf452429.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "46afbcc251304074020d995c1ab86753",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd4b014d03a1baf452429.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}, { \"character\": \"Brian\", \"startTime\": 19 6, \"finishTime\": 23 6, \"dialogue\": { \"text\": \"Sophie is a great workmate She's very kind and helpful \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 23 9, \"finishTime\": 25 4, \"dialogue\": { \"text\": \"Oh, c'mon, Brian \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 25 8, \"finishTime\": 26 8, \"dialogue\": { \"text\": \"But it's true \", \"align\": \"right\" } }, { \"character\": \"Brian\", \"startTime\": 27 1, \"finishTime\": 294,\n\"dialogue\": {\n\"text\": \"She's the person to go to if you need help \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 29 9\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 30 2\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 30 6\n}\n]\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd4b014d03a1baf452429.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9077075cc6c69e6b7b5cb4c36a5cad56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd31045ce74162adef6c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd31045ce74162adef6c7\ntitle: Task 128\nchallengeType: 19\ndashedName: task-128\n--description--\nThis is the last task for this dialogue Listen to the whole conversation again and answer the question below --questions--\n--text--\nWhat are Tom and Sophie planning to do --answers--\nThey are planning to eat lunch at the office --feedback--\nThe discussion revolves around them leaving the office for lunch, not eating there They are discussing different cafés but haven't decided on one --feedback--\nSophie already has a specific café in mind that she mentions to Tom They are planning to eat at a café down the street together --feedback--\nSophie suggests a café down the street, and both seem eager to go there Sophie is going out for lunch, but Tom is eating at the office --feedback--\nBoth Tom and Sophie are planning to go to the café together --video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 1-3 mp3\",\n\"startTime\": 1 2\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4 4,\n\"dialogue\": {\n\"text\": \"Wow, I'm so hungry Is it lunch time \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5,\n\"finishTime\": 6 4,\n\"dialogue\": {\n\"text\": \"Yes, it is \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd31045ce74162adef6c7.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b06c028c213586be8589bf0c61ba688b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd31045ce74162adef6c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 }, \"startTime\": 0 }, { \"character\": \"Sophie\", \"position\": { \"x\": 70, \"y\": 0, \"z\": 1 }, \"startTime\": 0 5 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 4 4, \"dialogue\": { \"text\": \"Wow, I'm so hungry Is it lunch time \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 5, \"finishTime\": 6 4, \"dialogue\": { \"text\": \"Yes, it is \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 66,\n\"finishTime\": 8 5,\n\"dialogue\": {\n\"text\": \"Are you eating here or are you going out \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 9 1,\n\"finishTime\": 10 8,\n\"dialogue\": {\n\"text\": \"Today, I'm going out \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 11,\n\"finishTime\": 14,\n\"dialogue\": {\n\"text\": \"I can show you some places around here Are you interested \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 14,\n\"finishTime\": 17 2,\n\"dialogue\": {\n\"text\": \"Of course Any favorite lunch spot around here, Sophie \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 17 4,\n\"finishTime\": 20 5,\n\"dialogue\": {\n\"text\": \"I know a nice one It's a café right down the street \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 20 5,\n\"finishTime\": 21 3,\n\"dialogue\": {\n\"text\": \"Is that OK for you \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 21 5,\n\"finishTime\": 22 7,\n\"dialogue\": {\n\"text\": \"Sounds great",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd31045ce74162adef6c7.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "fa647442cd09077552fa6005ed5e7001",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd31045ce74162adef6c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "favorite lunch spot around here, Sophie \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 17 4, \"finishTime\": 20 5, \"dialogue\": { \"text\": \"I know a nice one It's a café right down the street \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 20 5, \"finishTime\": 21 3, \"dialogue\": { \"text\": \"Is that OK for you \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 21 5, \"finishTime\": 22 7, \"dialogue\": { \"text\": \"Sounds great\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 23 1,\n\"finishTime\": 25 2,\n\"dialogue\": {\n\"text\": \"Yeah It's nice to have a break from the office \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 25 4,\n\"finishTime\": 28 7,\n\"dialogue\": {\n\"text\": \"It is Is the café within walking distance \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 29 1,\n\"finishTime\": 30 4,\n\"dialogue\": {\n\"text\": \"Well, it's not far \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 30 5,\n\"finishTime\": 32 1,\n\"dialogue\": {\n\"text\": \"Come on We can go together \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 32 6\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 33 1\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd31045ce74162adef6c7.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0d7b7d8d654c96f6392f5dcbdd786a35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd9f4e30e6d1d81f0e62d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd9f4e30e6d1d81f0e62d\ntitle: Task 138\nchallengeType: 22\ndashedName: task-138\n--description--\nThe verb be has different forms based on the subject. For third person singular (he, she, it), the correct form is is.\n--fillInTheBlank--\n--sentence--\nThis is Brian. He BLANK a web developer. This is Tom. He BLANK from Texas.\n--blanks--\nis\n--feedback--\nFor third person singular (he, she, it), the verb be is conjugated as is.\nis\n--feedback--\nFor third person singular (he, she, it), the verb be is conjugated as is.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7,\n\"finishTimestamp\": 16.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.76,\n\"dialogue\": {\n\"text\": \"Brian, let me introduce you to Tom. Tom, this is Brian. He's a web developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5.8,\n\"finishTime\": 10,\n\"dialogue\": {\n\"text\": \"Brian, this is Tom. He's our new graphic designer and he is from Texas.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 10.5\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd9f4e30e6d1d81f0e62d.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "baa24e53ef31a6a2ce006f730e69aaed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cda3cd706aa1daa128704.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cda3cd706aa1daa128704\ntitle: Task 139\nchallengeType: 22\ndashedName: task-139\n--description--\nThe contraction he's is a combination of the pronoun he and the verb is. It is used to refer to a male person and describe something about him.\n--fillInTheBlank--\n--sentence--\nThis is Brian. BLANK a web developer.\n--blanks--\nHe's\n--feedback--\nThe contraction is used to describe a male person's occupation in this context.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 9.1,\n\"finishTimestamp\": 11.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.66,\n\"dialogue\": {\n\"text\": \"Tom, this is Brian. He's a web developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.16\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1287,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cda3cd706aa1daa128704.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "381c4bb67125187c2bc6acadb0501033",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cdab71161371dd6b0a401.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cdab71161371dd6b0a401\ntitle: Task 140\nchallengeType: 19\ndashedName: task-140\n--description--\nThe verb be in its different forms (am, are, is) is used to describe or identify. It's essential to pick the right form based on the subject.\n--questions--\n--text--\nWhich of the following sentences is correct?\n--answers--\nBrian is a web developer.\nTom am from Texas.\n--feedback--\nAm is used with the first person singular (I).\nBrian are a web developer.\n--feedback--\nAre is not the correct form for the third person singular (he, she, it).\nThey is our friends.\n--feedback--\nIs is not the correct form for plural subjects.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 9.1,\n\"finishTimestamp\": 11.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.66,\n\"dialogue\": {\n\"text\": \"Tom, this is Brian. He's a web developer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.16\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1490,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cdab71161371dd6b0a401.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d05c51d5a36c6d99e6511018b70a19a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cdb10b568061e0bd6757f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cdb10b568061e0bd6757f\ntitle: Task 141\nchallengeType: 22\ndashedName: task-141\n--description--\nThe word our is a possessive pronoun. It shows that something belongs to or is related to a group that includes the speaker. In the dialogue, Sophie uses our to talk about Tom and indicate that he is part of their company.\n--fillInTheBlank--\n--sentence--\nBrian, this is Tom. He's BLANK new graphic designer and he is from Texas.\n--blanks--\nour\n--feedback--\nThink about who Tom belongs to. Sophie is indicating that Tom is now part of a team or group that includes her.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.15,\n\"finishTimestamp\": 16.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.55,\n\"dialogue\": {\n\"text\": \"Brian, this is Tom. He's our new graphic designer and he is from Texas.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.05\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1391,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cdb10b568061e0bd6757f.md",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9eeecb4e998ae5784282f7e60e53bc8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1831a6a2fe0465ea9488.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d1831a6a2fe0465ea9488\ntitle: Task 143\nchallengeType: 19\ndashedName: task-143\n--description--\nTo show possession in English, you typically add 's to a name, like Sophie's desk. However, for names ending in s, you often just add an apostrophe '. For example: James' book. It means the book belongs to James.\n--questions--\n--text--\nChoose the correct possessive form for the nouns server and devices.\n--answers--\nServer maintenances, devices manual\n--feedback--\nServer maintenances and devices manual don't show possession. Remember that 's or an apostrophe is needed to indicate that something belongs to someone or something.\nServer's maintenance, devices' manual\nServer's maintenance, device's manual\n--feedback--\nServer's is correct for singular possession, but be careful with device's. Consider if device is singular or plural in the context.\nServers maintenance, devices' manuals\n--feedback--\nRemember the rule for singular nouns and plurals ending in s.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1089,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1831a6a2fe0465ea9488.md",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "82466974dd938236b1bf75763dbad99a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd983328ab41d5bd929d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cd983328ab41d5bd929d0\ntitle: Task 137\nchallengeType: 19\ndashedName: task-137\n--description--\nIn English, he is a pronoun used to refer to a male person Pronouns are useful to avoid repetition and make sentences clearer Notice this part of the dialogue:\nTom, this is Brian He's a web developer Brian, this is Tom He's our new graphic designer and he is from Texas In the dialogue, after introducing Brian, Sophie uses he to talk about Brian's job Later, she uses he again to talk about Tom and his job By using he, Sophie doesn't have to repeat the names Brian and Tom This is the power of the pronouns --questions--\n--text--\nIn the dialogue, which word is used to refer to Brian without repeating his name --answers--\nshe\n--feedback--\nShe is a pronoun that refers to a female it\n--feedback--\nIt typically refers to things or animals they\n--feedback--\nThey is plural and refers to more than one person he\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7,\n\"finishTimestamp\": 16 02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5 76,\n\"dialogue\": {\n\"text\": \"Brian, let me introduce you to Tom Tom, this is Brian He's a web developer \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5 8,\n\"finishTime\": 10,\n\"dialogue\": {\n\"text\": \"Brian, this is Tom He's our new graphic designer and he is from Texas \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 10 5\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2064,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cd983328ab41d5bd929d0.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dd27d84ab6c8a37c34eef5611932544f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cdcc291e5531ea11a8f2a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656cdcc291e5531ea11a8f2a\ntitle: Task 142\nchallengeType: 19\ndashedName: task-142\n--description--\nThe general rule for making something possessive in English is to add an apostrophe and the letter s ('s) to the end. For example, if a desk belongs to Sophie, you say Sophie's desk.\n--questions--\n--text--\nWhich of the following means that one computer belongs to John?\n--answers--\nJohn computers\n--feedback--\nThis sounds like multiple computers that relate to John, but doesn't show possession.\nJohn's computer\nComputer John\n--feedback--\nThis misses the possessive marker and is in the incorrect order.\nJohn computer\n--feedback--\nThis misses the possessive marker and sounds incomplete.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 789,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656cdcc291e5531ea11a8f2a.md",
      "source_type": "git_repo"
    },
    "token_count": 172,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3f32e70cde008ec3f75d757d51952fe0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d199a0d5c10050b7e8241.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d199a0d5c10050b7e8241\ntitle: Task 145\nchallengeType: 19\ndashedName: task-145\n--description--\nBeing kind means being friendly, generous, and considerate. It's a positive adjective you use to describe someone who shows goodness or compassion to others.\n--questions--\n--text--\nHow does Brian describe Sophie?\n--answers--\nShe is never kind.\n--feedback--\nBrian is giving a positive description of Sophie, not a negative one.\nShe is a kind.\n--feedback--\nThe word a isn't needed before kind. It's not grammatically correct in this context.\nShe is a little kind.\n--feedback--\nBrian is emphasizing how kind Sophie is, not downplaying it.\nShe is very kind.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18.75,\n\"finishTimestamp\": 22.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.5,\n\"dialogue\": {\n\"text\": \"Sophie is a great workmate. She's very kind and helpful.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1606,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d199a0d5c10050b7e8241.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "573e68c8ee771162bcbca6cb9b98a255",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1936ab6cfb04e2ca6944.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d1936ab6cfb04e2ca6944\ntitle: Task 144\nchallengeType: 22\ndashedName: task-144\n--description--\nA workmate refers to someone you work with. It's another word for colleague or co-worker. This person is someone you probably see regularly at your job or workplace.\n--fillInTheBlank--\n--sentence--\nSophie is a great BLANK. She is very kind and helpful.\n--blanks--\nworkmate\n--feedback--\nBrian is talking about someone he and Tom both know from their job.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18.75,\n\"finishTimestamp\": 22.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.5,\n\"dialogue\": {\n\"text\": \"Sophie is a great workmate. She's very kind and helpful.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1936ab6cfb04e2ca6944.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e4d06da614c85b0ba31803ea2c378ee6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d19d9ab6e0c052edfb1e7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d19d9ab6e0c052edfb1e7\ntitle: Task 146\nchallengeType: 22\ndashedName: task-146\n--description--\nSomeone who is helpful is ready to give assistance or support. When you describe someone as helpful, you mean they offer help or provide solutions to problems you might face.\n--fillInTheBlank--\n--sentence--\nSophie is a great workmate. She is very kind and BLANK.\n--blanks--\nhelpful\n--feedback--\nBrian is describing Sophie's positive attributes. He's referring to her willingness to assist or support.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18.75,\n\"finishTimestamp\": 22.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.5,\n\"dialogue\": {\n\"text\": \"Sophie is a great workmate. She's very kind and helpful.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1397,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d19d9ab6e0c052edfb1e7.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "60dcc37a279840180c0a581005fcd100",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1c98a6bd5505fd346b50.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d1c98a6bd5505fd346b50\ntitle: Task 150\nchallengeType: 19\ndashedName: task-150\n--description--\nIn the dialogue, Brian uses the contraction She's instead of She is. It gives the sentence a better flow and sounds more natural in conversation.\n--questions--\n--text--\nWhich two words does the contraction She's in the dialogue stand for?\n--answers--\nShe was.\n--feedback--\nShe was doesn't fit the context of the dialogue.\nShe has.\n--feedback--\nShe has is a possible contraction for She's, but it doesn't fit this specific dialogue context.\nShe does.\n--feedback--\nShe does isn't represented by She's.\nShe is.\n--feedback--\nShe is is the correct expansion of the contraction She's in this context.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 24.9,\n\"finishTimestamp\": 28.16\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 3.76,\n\"dialogue\": {\n\"text\": \"But it's true. She's the person to go to if you need help.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 4.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1681,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1c98a6bd5505fd346b50.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e59d183545323af8db513f03c469c225",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1d1f46bc820629aecc0d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d1d1f46bc820629aecc0d\ntitle: Task 151\nchallengeType: 22\ndashedName: task-151\n--description--\nWatch the dialogue below and listen to how Brian refers to Sophie. Fill in the blanks below when you are done.\n--fillInTheBlank--\n--sentence--\nBut it is true. BLANK the person to go to if you need help!\n--blanks--\nShe's\n--feedback--\nThe contraction is used to describe a female person's characteristic.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 50, \"y\": 15, \"z\": 1.2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 24.9,\n\"finishTimestamp\": 28.16\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 3.76,\n\"dialogue\": {\n\"text\": \"But it's true. She's the person to go to if you need help.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 4.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1303,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1d1f46bc820629aecc0d.md",
      "source_type": "git_repo"
    },
    "token_count": 317,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "deefdb62a5737db23086740f460d3b60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1ad4fbdb51057f0f0714.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d1ad4fbdb51057f0f0714\ntitle: Task 148\nchallengeType: 19\ndashedName: task-148\n--description--\nThe phrase it is true is used to confirm or agree with what someone else said It means that something is correct or factual --questions--\n--text--\nIn the dialogue, how does Brian respond when Sophie says, Oh, come on, Brian --answers--\nHe disagrees --feedback--\nBrian doesn't show any sign of disagreement He says Sophie is wrong --feedback--\nBrian doesn't say Sophie is incorrect He confirms what he said --feedback--\nIt is true means Brian is standing by his previous statement He changes the topic --feedback--\nBrian continues on the same topic, praising Sophie --video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 75, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 22 84,\n\"finishTimestamp\": 28 16\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 1 44,\n\"dialogue\": {\n\"text\": \"Oh, come on, Brian \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 2,\n\"finishTime\": 7 25,\n\"dialogue\": {\n\"text\": \"But it's true She's the person to go to if you need help \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7 75\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 7 75\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2012,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1ad4fbdb51057f0f0714.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b40c037d76f2339835bd538aebb9fb21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1a520285050552702fc1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d1a520285050552702fc1\ntitle: Task 147\nchallengeType: 19\ndashedName: task-147\n--description--\nIn conversations, people sometimes use expressions to show modesty Sophie's answer is like that --questions--\n--text--\nWhy does Sophie say Oh, come on, Brian --answers--\nShe disagrees with Brian's statement --feedback--\nSophie isn't necessarily disagreeing, but she might feel the compliment is too much She feels Brian is exaggerating --feedback--\nOh, c'mon is an expression that often means someone thinks a statement is too much or exaggerated She wants Brian to stop talking --feedback--\nThe dialogue doesn't suggest that Sophie wants Brian to stop speaking entirely She is angry at Brian --feedback--\nSophie's response is playful and modest, not angry --video-solution--\n2\n--scene--\n```json\n{\n\"setup\": {\n\"background\": \"cafe png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 25, \"y\": 15, \"z\": 1 3 },\n\"opacity\": 0\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 75, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18 75,\n\"finishTimestamp\": 23 85\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4 5,\n\"dialogue\": {\n\"text\": \"Sophie is a great workmate She's very kind and helpful \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 75,\n\"finishTime\": 5 7,\n\"dialogue\": {\n\"text\": \"Oh, come on, Brian \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 2\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2227,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1a520285050552702fc1.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ef42b2e95234b960bc8a32d5bf037085",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1a520285050552702fc1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Brian\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Brian\", \"startTime\": 1, \"finishTime\": 4 5, \"dialogue\": { \"text\": \"Sophie is a great workmate She's very kind and helpful \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 4 75, \"finishTime\": 5 7, \"dialogue\": { \"text\": \"Oh, come on, Brian \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"opacity\": 0, \"startTime\": 6 2 }, { \"character\": \"Brian\", \"opacity\": 0, \"startTime\": 62\n}\n]\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2227,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1a520285050552702fc1.md",
      "source_type": "git_repo"
    },
    "token_count": 178,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "01a612662af057b7a01f62393c937fac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1becadf67d05d5b27bab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d1becadf67d05d5b27bab\ntitle: Task 149\nchallengeType: 19\ndashedName: task-149\n--description--\nJust like when you learned about the pronoun he, pronouns like she are used to refer to female individuals They help avoid repetition in conversation Look at this part of the dialogue:\nSophie: Oh, come on, Brian Brian: But it is true She's the person to go to if you need help Here, She is used by Brian to refer to Sophie Instead of repeating Sophie's name, Brian uses the pronoun she to make the conversation smoother and avoid redundancy --questions--\n--text--\nIn the dialogue, which word does Brian use to refer to Sophie without repeating her name --answers--\nhe\n--feedback--\nHe refers to a male they\n--feedback--\nThey is plural and refers to more than one person it\n--feedback--\nIt is usually used for things or animals she\n--feedback--\nShe refers to a female person --video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 3 },\n\"opacity\": 0\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 75, \"y\": 15, \"z\": 1 2 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 22 6,\n\"finishTimestamp\": 28 16\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2 4,\n\"dialogue\": {\n\"text\": \"Oh, come on, Brian \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 3 3,\n\"finishTime\": 6 35,\n\"dialogue\": {\n\"text\": \"But it's true She's the person to go to if you need help",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2245,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1becadf67d05d5b27bab.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3a956fefd64f62f32be481af9a07c646",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1becadf67d05d5b27bab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"1 1-4 mp3\", \"startTime\": 1, \"startTimestamp\": 22 6, \"finishTimestamp\": 28 16 } }, \"commands\": [ { \"character\": \"Sophie\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Brian\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sophie\", \"startTime\": 1, \"finishTime\": 2 4, \"dialogue\": { \"text\": \"Oh, come on, Brian \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 3 3, \"finishTime\": 6 35, \"dialogue\": { \"text\": \"But it's true She's the person to go to if you need help\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 85\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 6 85\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2245,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d1becadf67d05d5b27bab.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5951fd1432ad94acc48f8f55454eb645",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d25e0c5d5aa11ade33754.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d25e0c5d5aa11ade33754\ntitle: Task 153\nchallengeType: 19\ndashedName: task-153\n--description--\nIn the dialogue, Jake introduces himself to Sarah by saying I'm Jake, from Security. The word from is a preposition that shows the origin or source. In this context, from Security tells which department Jake works.\n--questions--\n--text--\nWhich of the following best describes Jake's role in the company?\n--answers--\nJake is a visitor from another company.\n--feedback--\nJake is introducing his department, not his company.\nJake works in the Security department.\nJake is from the city named Security.\n--feedback--\nThere's no indication that Security is a city's name.\nJake is guarding the premises.\n--feedback--\nWhile Jake may work in Security, he's not specifically a guard.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 3.94\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 4.94,\n\"dialogue\": {\n\"text\": \"Hey. You're Sarah, right? I'm Jake, from Security.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 5.44\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1626,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d25e0c5d5aa11ade33754.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1e0b73b29a964f7b5b61ad8ef4fe8f5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2600b0ffa811dac3853f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2600b0ffa811dac3853f\ntitle: Task 154\nchallengeType: 22\ndashedName: task-154\n--description--\nIn the dialogue, Jake mentions the department he belongs to. People often use terms related to their work to introduce themselves, and it helps others understand their role or purpose better.\n--fillInTheBlank--\n--sentence--\nHey. You're Sarah, right? I'm Jake, BLANK BLANK.\n--blanks--\nfrom\n--feedback--\nThink about where Jake works. It's a department responsible for safety.\nSecurity\n--feedback--\nThink about where Jake works. It's a department responsible for safety.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 3.94\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 4.94,\n\"dialogue\": {\n\"text\": \"Hey. You're Sarah, right? I'm Jake, from Security.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 5.44\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2600b0ffa811dac3853f.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "744fbd5a84b48d29d15f7399296b0a0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d26bc907ce0123546288a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d26bc907ce0123546288a\ntitle: Task 156\nchallengeType: 22\ndashedName: task-156\n--description--\nThe phrase I'm here to normally talks about purpose or intention. Jake uses this structure to explain why he's talking to Sarah.\n--fillInTheBlank--\n--sentence--\nI'm here to BLANK you your access card.\n--blanks--\ngive\n--feedback--\nFocus on why Jake is there.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.18,\n\"finishTimestamp\": 6.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2.75,\n\"dialogue\": {\n\"text\": \"I'm here to give you your access card.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 3.25\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1215,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d26bc907ce0123546288a.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5b54cc030982b45d991dd11df6f3f82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d266537ff53120d194ae8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d266537ff53120d194ae8\ntitle: Task 155\nchallengeType: 19\ndashedName: task-155\n--description--\nIn the dialogue, Jake says, I'm here to give you your access card. The verb give means to present or hand over something to someone. It's a crucial action in this context because Jake's main purpose is to hand over the access card to Sarah.\n--questions--\n--text--\nWhat does the verb give mean in the dialogue?\n--answers--\nTo sell something.\n--feedback--\nJake isn't selling the card to Sarah.\nTo show something.\n--feedback--\nHe's not just showing; he's handing it over.\nTo present or hand over something.\nTo lend something temporarily.\n--feedback--\nJake isn't lending; he's providing the card for Sarah's use.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.18,\n\"finishTimestamp\": 6.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2.75,\n\"dialogue\": {\n\"text\": \"I'm here to give you your access card.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 3.25\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d266537ff53120d194ae8.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca4e85a5cae5649fa9c8fa0ba524b612",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d27271410d4125ee2ad5a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d27271410d4125ee2ad5a\ntitle: Task 157\nchallengeType: 19\ndashedName: task-157\n--description--\nThe term access card refers to a card that gives the holder permission to enter or access a specific place. The word your before access card demonstrates that this card belongs to Sarah.\n--questions--\n--text--\nWhat is the purpose of the access card?\n--answers--\nTo show Sarah's identity.\n--feedback--\nIt doesn't specifically mention identification.\nTo allow Sarah to buy things.\n--feedback--\nThere's no mention of financial transactions.\nTo store Sarah's data.\n--feedback--\nIt doesn't talk about data storage.\nTo grant Sarah entry to certain areas.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4.18,\n\"finishTimestamp\": 6.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2.75,\n\"dialogue\": {\n\"text\": \"I'm here to give you your access card.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 3.25\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1491,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d27271410d4125ee2ad5a.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "964422380ee44643e4430b1c6edba8be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d27a603926f1288bafcc0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d27a603926f1288bafcc0\ntitle: Task 158\nchallengeType: 22\ndashedName: task-158\n--description--\nJake is explaining the purpose of his visit to Sarah. He's there to hand over something that Sarah needs, which will permit her access to certain areas.\n--fillInTheBlank--\n--sentence--\nHey. You're Sarah, right? I'm Jake, from Security. I'm here to give you BLANK BLANK BLANK.\n--blanks--\nyour\n--feedback--\nIt's an item often used for entry into secured areas.\naccess\n--feedback--\nThe item is specifically meant for Sarah.\ncard\n--feedback--\nThe item is specifically meant for Sarah.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 6.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 6.94,\n\"dialogue\": {\n\"text\": \"Hey. You're Sarah, right? I'm Jake, from Security. I'm here to give you your access card.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 7.44\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d27a603926f1288bafcc0.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "740958dfa8473866f9b53b280010a2f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d299e9d0027131875568f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d299e9d0027131875568f\ntitle: Task 161\nchallengeType: 19\ndashedName: task-161\n--description--\nJake refers to the swipe system as the good-old swipe. The term good-old is an informal expression suggesting something is reliable, familiar, or has been around for a while. It's like saying it's traditional or well-known.\n--questions--\n--text--\nWhich phrase means something is familiar and has been around for some time?\n--answers--\ngood-old\nbad-old\n--feedback--\nThis doesn't make sense in English.\nnew-new\n--feedback--\nNew means it's recent.\nold-bad\n--feedback--\nThis is a reversed and incorrect version of good-old.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 10.3,\n\"finishTimestamp\": 12.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2.9,\n\"dialogue\": {\n\"text\": \"It's the good-old swipe at the door.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 3.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d299e9d0027131875568f.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c8bb6c421e3ef6f831a3215d8b46bdb5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d23d22a488510bca0e418.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d23d22a488510bca0e418\ntitle: 'Dialogue 5: End of the First Day'\nchallengeType: 21\ndashedName: dialogue-5-end-of-the-first-day\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"1 1-5 mp3\",\n\"startTime\": 1 3\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": 30, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 7\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1 7,\n\"finishTime\": 3 5,\n\"dialogue\": {\n\"text\": \"Hey You're Sarah, right \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 3 6,\n\"finishTime\": 5 4,\n\"dialogue\": {\n\"text\": \"I'm Jake, from Security \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 5 5,\n\"finishTime\": 7 3,\n\"dialogue\": {\n\"text\": \"I'm here to give you your access card \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 7 7,\n\"finishTime\": 10,\n\"dialogue\": {\n\"text\": \"Thanks, Jake Is it contactless \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 10 2,\n\"finishTime\": 13 4,\n\"dialogue\": {\n\"text\": \"No, it isn't It's the good-old swipe at the door",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3669,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d23d22a488510bca0e418.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8f13f3a83fe61597552aa8672a9ee10a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d23d22a488510bca0e418.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Jake, from Security \", \"align\": \"left\" } }, { \"character\": \"Jake\", \"startTime\": 5 5, \"finishTime\": 7 3, \"dialogue\": { \"text\": \"I'm here to give you your access card \", \"align\": \"left\" } }, { \"character\": \"Sarah\", \"startTime\": 7 7, \"finishTime\": 10, \"dialogue\": { \"text\": \"Thanks, Jake Is it contactless \", \"align\": \"right\" } }, { \"character\": \"Jake\", \"startTime\": 10 2, \"finishTime\": 13 4, \"dialogue\": { \"text\": \"No, it isn't It's the good-old swipe at the door\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 13 5,\n\"finishTime\": 17,\n\"dialogue\": {\n\"text\": \"When you hear the click, it's unlocked, and you can get in or out \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 17 9,\n\"finishTime\": 19 4,\n\"dialogue\": {\n\"text\": \"Good to know Thank you \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 19 6,\n\"finishTime\": 22,\n\"dialogue\": {\n\"text\": \"Well, it's five o'clock \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 22 1,\n\"finishTime\": 24 2,\n\"dialogue\": {\n\"text\": \"I guess this is it for your first day \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 24 5,\n\"finishTime\": 25 5,\n\"dialogue\": {\n\"text\": \"How was it \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 25 9,\n\"finishTime\": 27 5,\n\"dialogue\": {\n\"text\": \"Good, really good \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 27 8,\n\"finishTime\": 28 8,\n\"dialogue\": {\n\"text\": \"See you tomorrow, then \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 29",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3669,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d23d22a488510bca0e418.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "74d117b126a76ef9ace1a84ee91cbe94",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d23d22a488510bca0e418.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "it for your first day \", \"align\": \"left\" } }, { \"character\": \"Jake\", \"startTime\": 24 5, \"finishTime\": 25 5, \"dialogue\": { \"text\": \"How was it \", \"align\": \"left\" } }, { \"character\": \"Sarah\", \"startTime\": 25 9, \"finishTime\": 27 5, \"dialogue\": { \"text\": \"Good, really good \", \"align\": \"right\" } }, { \"character\": \"Sarah\", \"startTime\": 27 8, \"finishTime\": 28 8, \"dialogue\": { \"text\": \"See you tomorrow, then \", \"align\": \"right\" } }, { \"character\": \"Jake\", \"startTime\": 290,\n\"finishTime\": 31 0,\n\"dialogue\": {\n\"text\": \"Sure Have a great evening See you \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 31 5\n},\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 32\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3669,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d23d22a488510bca0e418.md",
      "source_type": "git_repo"
    },
    "token_count": 274,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "483e70bee835205156a8d30b965ac297",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2a2ed95bfa1345fd9fd1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2a2ed95bfa1345fd9fd1\ntitle: Task 162\nchallengeType: 19\ndashedName: task-162\n--description--\nWhen Jake says swipe at the door, he means you have to move or swipe the access card close to a special reader at the door to open it.\n--questions--\n--text--\nWhat should Sarah do with the card at the door?\n--answers--\nIt is the door.\n--feedback--\nThis doesn't indicate an action.\nSwipe it\ngood-old door.\n--feedback--\nGood-old describes familiarity, but doesn't indicate an action.\nNo, it isn't\n--feedback--\nThis is a negation and not related to what to do with the card.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 10.3,\n\"finishTimestamp\": 12.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2.9,\n\"dialogue\": {\n\"text\": \"It's the good-old swipe at the door.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 3.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1507,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2a2ed95bfa1345fd9fd1.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e58242566316075ed8bc42fad7b98805",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2aee945ce2137bd8b8b8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2aee945ce2137bd8b8b8\ntitle: Task 163\nchallengeType: 19\ndashedName: task-163\n--description--\nIn many security systems, a sound is used to indicate a specific action.\nIn this dialogue, the click sound means that the door has been unlocked. The term lock refers to securing something, usually a door or a container, so that it cannot be opened without the correct key or combination. For example, you might lock your house when you leave to keep it safe.\nUnlock means to open a lock, allowing access. In some places, when a door is unlocked, it might make a click sound as an indicator.\n--questions--\n--text--\nWhat does the click sound indicate about the door in the dialogue above?\n--answers--\nIt is locked.\n--feedback--\nThe opposite of what the click indicates.\nIt is broken.\n--feedback--\nThere's no mention of anything being broken.\nIt is making music.\n--feedback--\nThe click is a simple sound, not a musical note.\nIt is unlocked.\n--feedback--\nThis is the correct interpretation of the click.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.24,\n\"finishTimestamp\": 16.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"When you hear the click, it's unlocked, and you can get in or out.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2039,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2aee945ce2137bd8b8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "143837a416d59cdb9652251369042249",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2914e7cfc312ea00c864.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2914e7cfc312ea00c864\ntitle: Task 160\nchallengeType: 22\ndashedName: task-160\n--description--\nJake provides an answer using it isn't, which is a contraction of it is not It's a way to negate or say no to a statement or question Contractions are a way to combine words for more fluid speech For example:\nIs the software updated No, it isn't (it is not) updated Jake also uses it's, the contraction for it is, when talking about the swipe card system Let's see how well you understand these in the context of the dialogue --fillInTheBlank--\n--sentence--\nNo, BLANK BLANK BLANK the good-old swipe at the door --blanks--\nit\n--feedback--\nThe first blank needs a negative contraction isn't\n--feedback--\nThe second blank is describing the card's functionality It's\n--feedback--\nThe third blank is describing the action needed to use the card --scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": 75, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-5 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7 54,\n\"finishTimestamp\": 12 24\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 2 3,\n\"dialogue\": {\n\"text\": \"Is it contactless \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 2 5,\n\"finishTime\": 5 2,\n\"dialogue\": {\n\"text\": \"No, it isn't It's the good-old swipe at the door",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2914e7cfc312ea00c864.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9dc7a1848bca3cb503f657a39e20d7f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2914e7cfc312ea00c864.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "], \"audio\": { \"filename\": \"1 1-5 mp3\", \"startTime\": 1, \"startTimestamp\": 7 54, \"finishTimestamp\": 12 24 } }, \"commands\": [ { \"character\": \"Jake\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sarah\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sarah\", \"startTime\": 1, \"finishTime\": 2 3, \"dialogue\": { \"text\": \"Is it contactless \", \"align\": \"right\" } }, { \"character\": \"Jake\", \"startTime\": 2 5, \"finishTime\": 5 2, \"dialogue\": { \"text\": \"No, it isn't It's the good-old swipe at the door\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 5 7\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 5 7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2914e7cfc312ea00c864.md",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6a1c57de731ec9d37c970991afbe8a01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d283b7ba56912bb2ceb06.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d283b7ba56912bb2ceb06\ntitle: Task 159\nchallengeType: 19\ndashedName: task-159\n--description--\nSarah's question Is it contactless refers to a specific item mentioned by Jake The word contactless usually describes a type of technology where you don't need to physically touch or swipe something For example, tapping a card against a scanner instead of inserting it Notice that Is it is used to ask for specific information about that item --questions--\n--text--\nWhat is Sarah referring to with it in her question Is it contactless --answers--\nJake\n--feedback--\nJake is a person, so contactless wouldn't apply to him The office\n--feedback--\nSarah is asking about a specific item he received The access card\n--feedback--\nSarah just received this from Jake The door\n--feedback--\nThe door is not the main subject of their conversation --video-solution--\n3\n--scene--\n```json\n{\n\"setup\": {\n\"background\": \"company1-reception png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n},\n{\n\"character\": \"Sarah\",\n\"position\": { \"x\": 75, \"y\": 0, \"z\": 1 4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1 1-5 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 4 18,\n\"finishTimestamp\": 8 96\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2 75,\n\"dialogue\": {\n\"text\": \"I'm here to give you your access card \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 3 2,\n\"finishTime\": 5 5,\n\"dialogue\": {\n\"text\": \"Thanks Jake Is it contactless",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2340,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d283b7ba56912bb2ceb06.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f423c22a7821103278623a1458900823",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d283b7ba56912bb2ceb06.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "], \"audio\": { \"filename\": \"1 1-5 mp3\", \"startTime\": 1, \"startTimestamp\": 4 18, \"finishTimestamp\": 8 96 } }, \"commands\": [ { \"character\": \"Jake\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Sarah\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Jake\", \"startTime\": 1, \"finishTime\": 2 75, \"dialogue\": { \"text\": \"I'm here to give you your access card \", \"align\": \"left\" } }, { \"character\": \"Sarah\", \"startTime\": 3 2, \"finishTime\": 5 5, \"dialogue\": { \"text\": \"Thanks Jake Is it contactless\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 6\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 6\n}\n]\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2340,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d283b7ba56912bb2ceb06.md",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f815edc2fbd1e4a87e9f317d9b723b5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2b6aaad95013a86cea6c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2b6aaad95013a86cea6c\ntitle: Task 164\nchallengeType: 19\ndashedName: task-164\n--description--\nGet in means to enter a place, while get out means to leave a place. For example, in the dialogue, Jake tells Sarah she can get in or out after she hears the door click, meaning she can enter or leave the building.\n--questions--\n--text--\nBased on the dialogue, what can Sarah do after the door is unlocked?\n--answers--\nClick and unlock.\n--feedback--\nThis sentence doesn't make sense.\nGet in or get out.\nLock the door.\n--feedback--\nThere's no mention of locking.\nKnock on the door.\n--feedback--\nThere's no need to knock; the door is unlocked.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.24,\n\"finishTimestamp\": 16.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"When you hear the click, it's unlocked, and you can get in or out.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 5.7\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2b6aaad95013a86cea6c.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "275caea360329b5233e8f559eb5ab593",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2bc10f29b413d1a843d5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2bc10f29b413d1a843d5\ntitle: Task 165\nchallengeType: 19\ndashedName: task-165\n--description--\nFive o'clock is a way of telling time. It refers to 5:00, which can be in the morning (AM) or evening (PM). This conversation happens at the end of the work day so it is fair to assume it is 5PM.\n--questions--\n--text--\nWhat does five o'clock mean?\n--answers--\nA time of the day.\nA person's name.\n--feedback--\nIt's not a name.\nA place.\n--feedback--\nWe are discussing time, not locations.\nA type of food.\n--feedback--\nYou don't eat time.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.1,\n\"finishTimestamp\": 20.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2.65,\n\"dialogue\": {\n\"text\": \"Well, it's five o'clock.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 3.15\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1374,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2bc10f29b413d1a843d5.md",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "589b8830bc2853083d9ee737156a5224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2c2fedbd5f14055b7e7b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2c2fedbd5f14055b7e7b\ntitle: Task 166\nchallengeType: 19\ndashedName: task-166\n--description--\nI guess is a phrase used when someone is not completely sure but wants to make an assumption or express an opinion.\n--questions--\n--text--\nIn the context of the audio, what does I guess mean?\n--answers--\nJake is absolutely certain.\n--feedback--\nGuess means there's some uncertainty.\nJake is not sure. He thinks what he is saying is true.\n--feedback--\nJake is making an assumption.\nJake disagrees with Sarah.\n--feedback--\nThe conversation is not about disagreement.\nJake can't remember something.\n--feedback--\nThe phrase isn't about forgetting.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 20.92,\n\"finishTimestamp\": 24.23\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 4.31,\n\"dialogue\": {\n\"text\": \"I guess this is it for your first day. How was it?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 4.81\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1613,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2c2fedbd5f14055b7e7b.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f118c02680cb1046639528bdb8366cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2d19c570e2146b5e8835.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2d19c570e2146b5e8835\ntitle: Task 168\nchallengeType: 19\ndashedName: task-168\n--description--\nSometimes, people use phrases to ask about experiences, feelings, or opinions. How was it? is a general way to ask about something that just happened.\n--questions--\n--text--\nBased on the audio, what does Jake want to know with How was it?\n--answers--\nWhat time is it?\n--feedback--\nJake already mentioned the time.\nWhat Sarah will do tomorrow.\n--feedback--\nHe didn't ask about future plans.\nHow was Sarah's first day in the office.\nWhere Sarah is going.\n--feedback--\nHe isn't asking about Sarah's location.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.1,\n\"finishTimestamp\": 24.23\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 6,\n\"dialogue\": {\n\"text\": \"Well, it's five o'clock. I guess this is it for your first day. How was it?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 6.5\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2d19c570e2146b5e8835.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f4b88a2d6a99cce0157c69628b5b4955",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2c94279eb6143485eac6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2c94279eb6143485eac6\ntitle: Task 167\nchallengeType: 22\ndashedName: task-167\n--description--\nJake uses an expression that indicates the end of something or that something is about to happen.\n--instructions--\nListen to the audio and find the expression.\n--fillInTheBlank--\n--sentence--\nWell, it's five o'clock. I guess BLANK BLANK BLANK for your first day. How was it?\n--blanks--\nthis\n--feedback--\nDemonstrative pronoun\nis\n--feedback--\nVerb to be in the third person\nit\n--feedback--\nIt is a pronoun!\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.1,\n\"finishTimestamp\": 24.23\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 6,\n\"dialogue\": {\n\"text\": \"Well, it's five o'clock. I guess this is it for your first day. How was it?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 6.5\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2c94279eb6143485eac6.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "509149e5d55150bbd8ed7b7fe7ed9c43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2d814b60b6149a03c699.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2d814b60b6149a03c699\ntitle: Task 169\nchallengeType: 19\ndashedName: task-169\n--description--\nSee you tomorrow is a casual way of saying goodbye and expressing the hope to meet the person the next day.\n--questions--\n--text--\nAfter answering Jake's question, Why does Sarah say See you tomorrow?\n--answers--\nThey will meet now.\n--feedback--\nIt's about the future, not now.\nThey will never meet again.\n--feedback--\nIt's a positive statement.\nShe hopes to see him tomorrow.\n--feedback--\nThis is about meeting again soon.\nShe doesn't want to see him.\n--feedback--\nIt's a friendly phrase.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Sarah\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 25.04,\n\"finishTimestamp\": 27.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Sarah\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sarah\",\n\"startTime\": 1,\n\"finishTime\": 3.3,\n\"dialogue\": {\n\"text\": \"Good, really good. See you tomorrow, then?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sarah\",\n\"opacity\": 0,\n\"startTime\": 3.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2d814b60b6149a03c699.md",
      "source_type": "git_repo"
    },
    "token_count": 355,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1401b60e4502e3c4942cb3282a1b68cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2f31f23860155477ca7b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656d2f31f23860155477ca7b\ntitle: Task 170\nchallengeType: 19\ndashedName: task-170\n--description--\nHave a great evening is a kind expression wishing someone a pleasant time for the rest of the day, specifically the evening.\nEvening is the time of day after afternoon and before night. When someone says Have a great evening, they hope you have a good time during that part of the day.\n--questions--\n--text--\nWhat does Jake wish for Sarah?\n--answers--\nA peaceful night.\n--feedback--\nJake doesn't talk about the night.\nA wonderful meal.\n--feedback--\nShe doesn't talk about food.\nA good rest.\n--feedback--\nThere's no mention of rest.\nA great evening.\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company1-reception.png\",\n\"characters\": [\n{\n\"character\": \"Jake\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 27.46,\n\"finishTimestamp\": 29.10\n}\n},\n\"commands\": [\n{\n\"character\": \"Jake\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Jake\",\n\"startTime\": 1,\n\"finishTime\": 2.64,\n\"dialogue\": {\n\"text\": \"Sure. Have a great evening.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Jake\",\n\"opacity\": 0,\n\"startTime\": 3.14\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\656d2f31f23860155477ca7b.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0dd2b9a6ad1505849aa1bc782b40ec1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c72ce3fb4541f6ebc8902b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c72ce3fb4541f6ebc8902b\ntitle: Task 33\nchallengeType: 22\ndashedName: task-33\n--description--\nThis is a review of the entire dialogue you just studied.\n--instructions--\nWrite the following words or phrases in the correct spot:\nme, You're, That's, do you, it, and It's\n--fillInTheBlank--\n--sentence--\nMaria: Hello! BLANK the new graphic designer, right? I'm Maria, the team lead.\nTom: Hi, that's right! I'm Tom McKenzie. BLANK a pleasure to meet you.\nMaria: Welcome aboard, Tom! How BLANK like California so far?\nTom: I like it. It's different from Texas, but I like BLANK here.\nMaria: Great! Let me show you to your desk. Do you see the desk with a drawing tablet and a computer? BLANK your workspace.\nTom: Everything looks great. Thanks for showing BLANK around the place, Maria.\n--blanks--\nYou're\n--feedback--\nThis is the contraction of the pronoun Youand the verb to be. The first letter is capitalized.\nIt's\n--feedback--\nThis is the contraction of the pronoun Itand the verb to be. The first letter is capitalized.\ndo you\n--feedback--\nThis is a question form. It begins with an auxiliary verb followed by a pronoun.\nit\n--feedback--\nThis pronoun refers to something already mentioned.\nThat's\n--feedback--\nThis is the contraction of That and the verb to be. The first letter is capitalized.\nme\n--feedback--\nThis pronoun is used when referring to oneself as the object of an action.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1554,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c72ce3fb4541f6ebc8902b.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c2e2c6d86cfd09b007db436b68ca420e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\657bcf58b87d01890f9bdc93.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657bcf58b87d01890f9bdc93\ntitle: Task 28\nchallengeType: 19\ndashedName: task-28\n--description--\nDescribing objects or places with their characteristics or things related to them helps the listener to identify them easily.\n--questions--\n--text--\nWhat does Maria use to describe Tom's desk?\n--answers--\nThe desk near the window\n--feedback--\nListen closely to the items Maria mentions.\nThe desk with a drawing tablet and a computer\nThe desk with a coffee mug on it\n--feedback--\nListen closely to the items Maria mentions.\nThe desk next to hers\n--feedback--\nListen closely to the items Maria mentions.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.5},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 17.75,\n\"finishTimestamp\": 20.3\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 1,\n\"finishTime\": 3.4,\n\"dialogue\": {\n\"text\": \"Do you see the desk with a drawing tablet and a computer?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.9\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1553,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\657bcf58b87d01890f9bdc93.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "15c80f143a02c4be795d89e7097e4faf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\657e0d0037192f3d9e3d5417.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657e0d0037192f3d9e3d5417\ntitle: Task 131\nchallengeType: 22\ndashedName: task-131\n--description--\nListen to the video and fill in the blank below.\n--fillInTheBlank--\n--sentence--\nOh, BLANK who's here! Hey, Brian. How is everything?\n--blanks--\nlook\n--feedback--\nSophie is expressing surprise. Enter the word Sophie uses in the blank.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"cafe.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.4 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 3.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.52,\n\"dialogue\": {\n\"text\": \"Oh, look who's here! Hey, Brian. How is everything?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1196,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\657e0d0037192f3d9e3d5417.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d84fc2628bc9266da46c9054ac9b842a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c732492b5772fe142caffa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c732492b5772fe142caffa\ntitle: Task 129\nchallengeType: 22\ndashedName: task-129\n--description--\nThis is a review of the entire dialogue you just studied.\n--instructions--\nWrite the following words or phrases in the correct spot:\nfavorite, down, have a break, it is, within, are you, and Is it\n--fillInTheBlank--\n--sentence--\nTom: Wow, I'm so hungry. BLANK lunch time?\nSophie: Yes, BLANK.\nTom: Are you eating here or BLANK going out?\nSophie: Today, I'm going out. I can show you some places around here. Are you interested?\nTom: Of course. Any BLANK lunch spot around here, Sophie?\nSophie: I know a nice one. It's a café right BLANK the street. Is that OK for you?\nTom: Sounds great!\nSophie: Yeah. It's nice to BLANK from the office.\nTom: It is. Is the café BLANK walking distance?\nSophie: Well, it's not far. Come on. We can go together.\n--blanks--\nIs it\n--feedback--\nThis forms a yes/no question asking for confirmation. It begins with a verb.\nit is\n--feedback--\nThis is an affirmative form that confirms something that was asked about. It begins with a pronoun.\nare you\n--feedback--\nThis starts a question directed at the listener. It begins with a verb.\nfavorite\n--feedback--\nThis adjective describes something that is preferred over others.\ndown\n--feedback--\nThis preposition means in a lower position or along a street.\nhave a break\n--feedback--\nTo take a short rest from work. The first word is a verb.\nwithin\n--feedback--\nThis preposition means inside a certain range or distance.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1742,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c732492b5772fe142caffa.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3d68d011b3fc782b1a6ba22ef32788db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c73596502237018582f2ed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c73596502237018582f2ed\ntitle: Task 152\nchallengeType: 22\ndashedName: task-152\n--description--\nThis is a review of the entire dialogue you just studied.\n--instructions--\nWrite the following words or phrases in the correct spot:\nintroduce, it's true, pleasure, who's, c'mon, workmate, and this is\n--fillInTheBlank--\n--sentence--\nSophie: Oh, look BLANK here! Hey, Brian! How is everything?\nBrian: Sophie! Great to see you here.\nSophie: You, too. Brian, let me BLANK you to Tom. Tom, this is Brian. He's a web developer. Brian, BLANK Tom. He's our new graphic designer and he is from Texas.\nBrian: It is a BLANK to meet you, Tom. Sophie is a great BLANK. She's very kind and helpful.\nSophie: Oh, BLANK, Brian!\nBrian: But BLANK. She's the person to go to if you need help!\n--blanks--\nwho's\n--feedback--\nThis is the contraction of who and is.\nintroduce\n--feedback--\nTo formally present one person to another.\nthis is\n--feedback--\nThis is used to introduce someone. It begins with a determiner.\npleasure\n--feedback--\nThis noun expresses enjoyment or politeness when meeting someone.\nworkmate\n--feedback--\nThis noun refers to a colleague or someone you work with.\nc'mon\n--feedback--\nThis is the contraction of come on, often used informally for encouragement or emphasis.\nit's true\n--feedback--\nAn expression to confirm a statement. It begins with the contraction of it and is, followed by an adjective that means \"correct\" or \"factual\".",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1664,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c73596502237018582f2ed.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fbb350879868808fe19280db9598f367",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c73d14d05f651ca7e0dca1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c73d14d05f651ca7e0dca1\ntitle: Task 171\nchallengeType: 22\ndashedName: task-171\n--description--\nThis is a review of the entire dialogue you just studied.\n--instructions--\nWrite the following words or phrases in the correct spot:\nit isn't, then, this is it, contactless, great evening, unlocked, and your access card\n--fillInTheBlank--\n--sentence--\nJake: Hey. You're Sarah, right? I'm Jake, from Security. I'm here to give you BLANK.\nSarah: Thanks, Jake. Is it BLANK?\nJake: No, BLANK. It's the good-old swipe at the door. When you hear the click, it's BLANK, and you can get in or out.\nSarah: Good to know. Thank you!\nJake: Well, it's five o'clock. I guess BLANK for your first day. How was it?\nSarah: Good, really good. See you tomorrow, BLANK?\nJake: Sure. Have a BLANK. See you!\n--blanks--\nyour access card\n--feedback--\nA keycard used for entering a building. A possessive adjective, a noun referring to permission, and an object used to unlock doors.\ncontactless\n--feedback--\nThis describes a type of technology that does not require physical touch to work. It is often used for payments or security access.\nit isn't\n--feedback--\nThis forms a negative response. It begins with a pronoun followed by the contraction of is and not. It is used to indicate that something is false.\nunlocked\n--feedback--\nThis describes a door that is open and not secured. It means the locking mechanism has been disabled.\nthis is it\n--feedback--\nThis signals that something has reached its conclusion or final point. It begins with a determiner followed by a verb and then a pronoun.\nthen\n--feedback--\nThis is used to indicate what happens next. It can also be used to summarize or conclude a statement.\ngreat evening\n--feedback--\nThis forms a polite farewell wish. It begins with an adjective expressing positivity followed by a noun referring to the time of day.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c73d14d05f651ca7e0dca1.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "333cdb6d0e30022a6bd97f76126f9a58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66066c563917c5874b792337.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66066c563917c5874b792337\ntitle: Task 1\nchallengeType: 22\ndashedName: task-1\n--description--\nAn API (Application Programming Interface) is a set of rules and tools for building software applications. It's like a bridge that allows different software programs to communicate with each other. For example, The weather app uses an API to get data from the weather service.\nAn approach is a way of considering or doing something. Like, Her approach to solving the problem was very creative.\n--fillInTheBlank--\n--sentence--\nI'm working with a new BLANK, and I'm not sure how to analyze its documentation effectively. What's the right BLANK, in your opinion?\n--blanks--\nAPI\n--feedback--\nIt means a set of rules and tools that allows different software to interact.\napproach\n--feedback--\nIt's a method or way of doing something. Sophie is asking for the best way to analyze the API's documentation.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 6.48\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.38,\n\"dialogue\": {\n\"text\": \"I'm working with a new API and I'm not sure how to analyze its documentation effectively.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5.84,\n\"finishTime\": 7.48,\n\"dialogue\": {\n\"text\": \"What's the right approach in your opinion?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7.98\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2171,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66066c563917c5874b792337.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d5354fb4e624208e530ce54b4da13e60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c72f8840fac4fa5c790c9f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c72f8840fac4fa5c790c9f\ntitle: Task 94\nchallengeType: 22\ndashedName: task-94\n--description--\nThis is a review of the entire dialogue you just studied --instructions--\nWrite the following words or phrases in the correct spot:\nsomeone, is this, from, a developer, your, new graphic designer, in, and they're\n--fillInTheBlank--\n--sentence--\nTom: Hi, there I'm Tom I'm the BLANK Sophie: Oh, hi Tom I'm Sophie I'm BLANK Where are you from, Tom Tom: I'm BLANK Texas How about you Sophie: I'm from here BLANK California Welcome aboard Tom: Thanks Everybody is so nice around here Hey, BLANK one of those standing desks These are great It's good to stand up a little instead of just sitting all the time Sophie: That's so true I'm a bit inactive, sitting all the time This is a good alternative for me But hey, now BLANK desk is just like my desk You're in luck Tom: Oh, awesome My computer and drawing tablet are great, too Sophie: Yeah At this company, BLANK very attentive to these details You're going to like it here if you're into cutting-edge gadgets Tom: This is so cool A standing desk, an ergonomic chair and an ergonomic mouse Man, everything is perfect I'm in love with this place Sophie: So nice to have BLANK so energetic like you in the team Are you ready to begin Tom: Yes, I sure am --blanks--\nnew graphic designer\n--feedback--\nThis indicates someone who recently joined a company The last two words describe the job title itself a developer\n--feedback--\nA job title in programming or software development from\n--feedback--\nThis preposition indicates the place of origin in\n--feedback--\nThis preposition is used to describe location within a place is this\n--feedback--\nThis forms a question, asking for confirmation about an object your\n--feedback--\nThis possessive adjective shows that something belongs to the person being spoken to they're\n--feedback--\nThis is the contraction of they and the verb to be someone\n--feedback--\nThis pronoun refers to an unspecified person",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-greetings-in-your-first-day-at-the-office\\67c72f8840fac4fa5c790c9f.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c102272352d348743497f23197cda746",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660681a717d84e89da14f6f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660681a717d84e89da14f6f4\ntitle: Task 2\nchallengeType: 19\ndashedName: task-2\n--description--\nAnother way of saying that you are not sure about something is to say that you are unsure about it. It means not being certain or having confidence about something.\n--questions--\n--text--\nWhat is Sophie unsure about, and what does she want to know from Brian?\n--answers--\nAbout the purpose of the API\n--feedback--\nIt isn't about the API's purpose.\nAbout coding in general\n--feedback--\nSophie's question is not about coding in general.\nAbout analyzing effectively the API's documentation\nAbout knowing how to install the API\n--feedback--\nSophie's concern is not about installing the API.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 6.48\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.38,\n\"dialogue\": {\n\"text\": \"I'm working with a new API and I'm not sure how to analyze its documentation effectively.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5.84,\n\"finishTime\": 7.48,\n\"dialogue\": {\n\"text\": \"What's the right approach in your opinion?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7.98\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1995,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660681a717d84e89da14f6f4.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7325abe492b2e730fc7a130eb1a0f12e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660682b572c0bb8aa3075feb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660682b572c0bb8aa3075feb\ntitle: Task 3\nchallengeType: 22\ndashedName: task-3\n--description--\nAn endpoint in an API is a specific location where you can request certain data or service. For example, The API endpoint for weather data retrieves the latest forecasts.\nTo offer means to provide or make available. For instance, This service offers real-time updates.\nA route is a path defined in the API that determines how requests are handled. Like, The login route verifies user credentials.\n--fillInTheBlank--\n--sentence--\nYou should begin by checking the BLANK and BLANK provided in the documentation. This can give you a clear idea of what the API BLANK.\n--blanks--\nendpoints\n--feedback--\nThey are specific locations in an API where requests for data or services are made.\nroutes\n--feedback--\nThey define the paths for handling requests in an API, determining how different requests are processed.\noffers\n--feedback--\nIt refers to what the API provides or makes available, like data or functionalities.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.96,\n\"finishTimestamp\": 14.26\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 5.12,\n\"dialogue\": {\n\"text\": \"You should begin by checking the endpoints and the routes provided in the documentation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 5.46,\n\"finishTime\": 8.3,\n\"dialogue\": {\n\"text\": \"This can give you a clear idea of what the API offers.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 8.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660682b572c0bb8aa3075feb.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "10bf880cf77c0dc62255e1a9812fbe2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068414094b3a8c10a4770d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068414094b3a8c10a4770d\ntitle: Task 6\nchallengeType: 22\ndashedName: task-6\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\n--sentence--\nOnce BLANK identified the endpoints, BLANK the descriptions and examples for each one. This can help you BLANK how to use the BLANK in your project.\n--blanks--\nyou've\n--feedback--\nIt is short for you have. It's used here to mean once Sophie has identified the endpoints.\nread\n--feedback--\nIt means to look at words and understand what they mean.\nunderstand\n--feedback--\nIt means to grasp the meaning or significance of something. Brian wants Sophie to grasp how the API works.\nAPI\n--feedback--\nIt stands for Application Programming Interface, a tool that allows software to interact.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.84,\n\"finishTimestamp\": 24.5\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Once you've identified the endpoints, read the descriptions and examples for each one.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 5.54,\n\"finishTime\": 8.66,\n\"dialogue\": {\n\"text\": \"This can help you understand how to use the API in your project.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 9.16\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2090,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068414094b3a8c10a4770d.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9fb94687de1e38bd7458476d65df3a69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606838ecf64478b53a51496.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6606838ecf64478b53a51496\ntitle: Task 4\nchallengeType: 19\ndashedName: task-4\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nAccording to Brian, what should Sophie do first to understand what the API offers?\n--answers--\nBegin by checking the endpoints and routes in the documentation\nStart by writing a summary of the entire documentation\n--feedback--\nWhile summarizing can be helpful, Brian specifically advises beginning with checking the endpoints and routes, not summarizing the documentation.\nImmediately implement the API in a project\n--feedback--\nBrian suggests beginning with understanding the API's offerings by checking endpoints and routes, not immediately implementing it.\nFocus on the API's security features first\n--feedback--\nBrian's initial recommendation is about understanding the API's functionalities.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.96,\n\"finishTimestamp\": 14.26\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 5.12,\n\"dialogue\": {\n\"text\": \"You should begin by checking the endpoints and the routes provided in the documentation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 5.46,\n\"finishTime\": 8.3,\n\"dialogue\": {\n\"text\": \"This can give you a clear idea of what the API offers.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 8.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2179,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606838ecf64478b53a51496.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "789d21166ca038b959a7459e33bb41a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660683e649f8fa8bbd5baac5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660683e649f8fa8bbd5baac5\ntitle: Task 5\nchallengeType: 22\ndashedName: task-5\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\n--sentence--\nOkay, and what BLANK I do next?\n--blanks--\nshould\n--feedback--\nIt is used here to ask for advice or a recommendation about the next step to take.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 14.76,\n\"finishTimestamp\": 16.36\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.6,\n\"dialogue\": {\n\"text\": \"Okay, and what should I do next?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.1\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660683e649f8fa8bbd5baac5.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "92718c59fc8ecc350b6f8e4b643efde5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606682f3fbb93838673920d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6606682f3fbb93838673920d\ntitle: \"Dialogue 1: Analyzing API Documentation\"\nchallengeType: 21\ndashedName: dialogue-1-analyzing-api-documentation\n--description--\nWatch the video to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"7 3-1 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5 38,\n\"dialogue\": {\n\"text\": \"I'm working with a new API and I'm not sure how to analyze its documentation effectively \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5 84,\n\"finishTime\": 7 48,\n\"dialogue\": {\n\"text\": \"What's the right approach in your opinion \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 8 16,\n\"finishTime\": 12 08,\n\"dialogue\": {\n\"text\": \"You should begin by checking the endpoints and the routes provided in the documentation \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 12 42,\n\"finishTime\": 15 26,\n\"dialogue\": {\n\"text\": \"This can give you a clear idea of what the API offers \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 15 96,\n\"finishTime\": 17",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2972,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606682f3fbb93838673920d.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0ae347661ac10e57f9021bde8dc3d19d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606682f3fbb93838673920d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in your opinion \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 8 16, \"finishTime\": 12 08, \"dialogue\": { \"text\": \"You should begin by checking the endpoints and the routes provided in the documentation \", \"align\": \"right\" } }, { \"character\": \"Brian\", \"startTime\": 12 42, \"finishTime\": 15 26, \"dialogue\": { \"text\": \"This can give you a clear idea of what the API offers \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 15 96, \"finishTime\": 1736,\n\"dialogue\": {\n\"text\": \"Okay, and what should I do next \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 17 84,\n\"finishTime\": 22 04,\n\"dialogue\": {\n\"text\": \"Once you've identified the endpoints, read the descriptions and examples for each one \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 22 38,\n\"finishTime\": 25 5,\n\"dialogue\": {\n\"text\": \"This can help you understand how to use the API in your project \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 26 06,\n\"finishTime\": 27 28,\n\"dialogue\": {\n\"text\": \"Thanks, I'll give it a shot \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 27 78\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 28 28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2972,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606682f3fbb93838673920d.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "169c8cd834afdf499c6ce2d7dfa9fcf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660684bfc24bf48cfaaf9cfa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660684bfc24bf48cfaaf9cfa\ntitle: Task 8\nchallengeType: 22\ndashedName: task-8\n--description--\nGive it a shot means to try doing something. It's like saying Try it.\nFor example, if your friend is hesitant about joining a coding class because they think it might be too difficult, you could say Why not give it a shot? You might enjoy it more than you think. to encourage them to try joining this class.\n--fillInTheBlank--\n--sentence--\nThanks, BLANK give it a BLANK.\n--blanks--\nI'll\n--feedback--\nIt is short for I will. Sophie is expressing her decision to try what Brian suggested.\nshot\n--feedback--\nIn this context, it means an attempt or try at doing something. Sophie is saying she will try what Brian has recommended.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 24.86,\n\"finishTimestamp\": 26.28\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 2.42,\n\"dialogue\": {\n\"text\": \"Thanks, I'll give it a shot.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 2.92\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1628,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660684bfc24bf48cfaaf9cfa.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1ba0e34be0d0bbc92d1bda0567e31a03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606846eba453e8c7bacb2f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6606846eba453e8c7bacb2f7\ntitle: Task 7\nchallengeType: 19\ndashedName: task-7\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nWhat is the order of actions Brian suggests Sophie should follow?\n--answers--\nFirst, use the API in a project, then read the descriptions and examples.\n--feedback--\nBrian's advice starts with identifying endpoints, not using the API in a project first.\nFirst, identify the endpoints, then read their descriptions and examples.\nRead the descriptions and examples first, then identify the endpoints.\n--feedback--\nBrian suggests identifying the endpoints first, before reading their descriptions and examples.\nIgnore the endpoints and focus only on the examples.\n--feedback--\nBrian emphasizes the importance of both identifying the endpoints and reading their descriptions and examples, not ignoring them.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.84,\n\"finishTimestamp\": 24.5\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 5.2,\n\"dialogue\": {\n\"text\": \"Once you've identified the endpoints, read the descriptions and examples for each one.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 5.54,\n\"finishTime\": 8.66,\n\"dialogue\": {\n\"text\": \"This can help you understand how to use the API in your project.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 9.16\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2206,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606846eba453e8c7bacb2f7.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "15bfeceb949297d18dec6de65adb7214",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660686845b5e788def3527ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660686845b5e788def3527ca\ntitle: Task 9\nchallengeType: 22\ndashedName: task-9\n--description--\nThis is a review of the entire dialogue you just studied.\n--instructions--\nWrite the following words or phrases in the correct spot:\nAPI, identified, by checking, analyze, routes, and examples for.\n--fillInTheBlank--\n--sentence--\nSophie: I'm working with a new BLANK and I'm not sure how to BLANK its documentation effectively. What's the right approach in your opinion?\nBrian: You should begin BLANK the endpoints and the BLANK provided in the documentation. This can give you a clear idea of what the API offers.\nSophie: Okay, and what should I do next?\nBrian: Once you've BLANK the endpoints, read the descriptions and BLANK each one. This can help you understand how to use the API in your project.\nSophie: Thanks, I'll give it a shot.\n--blanks--\nAPI\n--feedback--\nA set of tools that lets programs talk to each other.\nanalyze\n--feedback--\nTo study something carefully to understand it better.\nby checking\n--feedback--\nLooking at something to find out more or confirm it.\nroutes\n--feedback--\nPaths that show how data moves in a web app or API.\nidentified\n--feedback--\nFound or recognized something.\nexamples for\n--feedback--\nSample cases that show how to use or do something.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1426,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660686845b5e788def3527ca.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f6e9bdea15fb23468a334400ef7cd329",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068ad667567091500128c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068ad667567091500128c5\ntitle: Task 10\nchallengeType: 22\ndashedName: task-10\n--description--\nA library is like a big bookshelf with lots of code that programmers can use. Think of it like a cookbook with many recipes (functions) you can use to cook (program) different dishes (projects).\nFor example, a library in programming might have a function to make charts. Instead of writing code from scratch, you can use this function, like following a recipe to make a cake.\n--fillInTheBlank--\n--sentence--\nThis BLANK has so BLANK functions. How can I effectively analyze the documentation for BLANK?\n--blanks--\nlibrary\n--feedback--\nThis word in programming is like a collection of code, similar to how a library is a collection of books.\nmany\n--feedback--\nIt is used to describe a large number of something. In this case, it refers to the numerous functions in the library.\nthem\n--feedback--\nIt is a pronoun used to refer to multiple things. Here, it refers to the functions in the library.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 5.4\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 6.4,\n\"dialogue\": {\n\"text\": \"This library has so many functions. How can I effectively analyze the documentation for them?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6.9\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2026,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068ad667567091500128c5.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6acaea79c2707406deade090c7523a3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068bf9c9046292705b856d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068bf9c9046292705b856d\ntitle: Task 12\nchallengeType: 19\ndashedName: task-12\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nWhat does the function's signature tell people about the function?\n--answers--\nHow long the function will take to execute\n--feedback--\nThe signature doesn't tell people about the time it takes to run the function.\nThe color of the function's text in the code\n--feedback--\nThe signature doesn't give information about the appearance of the function in the code.\nThe function's name, parameters, and return type\nWho wrote the function\n--feedback--\nThe signature shows the function's details, not the information about its author.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.02,\n\"finishTimestamp\": 13.68\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.14,\n\"dialogue\": {\n\"text\": \"When dealing with functions, start by looking at the function's signature.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4.44,\n\"finishTime\": 8.66,\n\"dialogue\": {\n\"text\": \"It can provide information about the function's name, parameters, and return type.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 9.16\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2043,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068bf9c9046292705b856d.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b5c25afde594a39f5d09009c1a254b6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068c5cfc7a4992f2574ab2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068c5cfc7a4992f2574ab2\ntitle: Task 13\nchallengeType: 22\ndashedName: task-13\n--description--\nMake sense means to be understandable or logical.\nFor example, if you're learning a new programming language and finally understand how a function works, you might say, Oh, now it makes sense! Here, makes sense is used to express that the concept of how a function works in the programming language is now clear and understandable.\n--fillInTheBlank--\n--sentence--\nThat makes BLANK. What's the next step? What should I do BLANK?\n--blanks--\nsense\n--feedback--\nIt means understanding or clarity, showing Sophie understands what was explained before.\nthen\n--feedback--\nIt is used to ask about what should happen next or afterwards. Sophie is asking about the next step after understanding the previous one.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 14.34,\n\"finishTimestamp\": 17.1\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.76,\n\"dialogue\": {\n\"text\": \"That makes sense. What's the next step? What should I do then?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 4.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068c5cfc7a4992f2574ab2.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "24830a68cd9e3e3c34855edf398c72c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068a6d0bb2aa90f0d93979.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068a6d0bb2aa90f0d93979\ntitle: \"Dialogue 2: Analyzing Code Documentation for Functions\"\nchallengeType: 21\ndashedName: dialogue-2-analyzing-code-documentation-for-functions\n--description--\nWatch the video to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"7 3-2 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 6 4,\n\"dialogue\": {\n\"text\": \"This library has so many functions How can I effectively analyze the documentation for them \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 7 02,\n\"finishTime\": 10 16,\n\"dialogue\": {\n\"text\": \"When dealing with functions, start by looking at the function's signature \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 10 46,\n\"finishTime\": 14 68,\n\"dialogue\": {\n\"text\": \"It can provide information about the function's name, parameters, and return type \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 15 34,\n\"finishTime\": 18 1,\n\"dialogue\": {\n\"text\": \"That makes sense What's the next step What should I do then \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 18",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068a6d0bb2aa90f0d93979.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "27e7764542c6bf65153d15998c5fb08d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068a6d0bb2aa90f0d93979.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "functions, start by looking at the function's signature \", \"align\": \"right\" } }, { \"character\": \"Brian\", \"startTime\": 10 46, \"finishTime\": 14 68, \"dialogue\": { \"text\": \"It can provide information about the function's name, parameters, and return type \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 15 34, \"finishTime\": 18 1, \"dialogue\": { \"text\": \"That makes sense What's the next step What should I do then \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 187,\n\"finishTime\": 22 04,\n\"dialogue\": {\n\"text\": \"Next, you should examine the function's description in the documentation \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 22 34,\n\"finishTime\": 25 94,\n\"dialogue\": {\n\"text\": \"It can explain what the function does and provide usage examples \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 26 72,\n\"finishTime\": 29 2,\n\"dialogue\": {\n\"text\": \"Thanks I'll make sure to follow these steps for each function \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 29 7\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 30 2\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068a6d0bb2aa90f0d93979.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cdbe96963e82720ef85a160edb705c0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068f5b2b7dda9450a7cc2c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068f5b2b7dda9450a7cc2c\ntitle: Task 15\nchallengeType: 19\ndashedName: task-15\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nWhat is Brian's advice on using programming documentation?\n--answers--\nExamine the function's description in the documentation for explanations and usage examples\nMemorize the function's code\n--feedback--\nWhile memorizing code can be helpful, Brian specifically mentions examining the documentation, not memorizing the code.\nChange the function's code\n--feedback--\nBrian suggests understanding the function through its documentation, not altering its code.\nIgnore the documentation\n--feedback--\nIgnoring the documentation goes against Brian's advice, which is to examine it for a better understanding of the function.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 17.5,\n\"finishTimestamp\": 24.94\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.54,\n\"dialogue\": {\n\"text\": \"Next, you should examine the function's description in the documentation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4.84,\n\"finishTime\": 8.44,\n\"dialogue\": {\n\"text\": \"It can explain what the function does and provide usage examples.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 8.94\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068f5b2b7dda9450a7cc2c.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bd934b77df6f223095690daddbc2973e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068b650b681c91de9e19a0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068b650b681c91de9e19a0\ntitle: Task 11\nchallengeType: 22\ndashedName: task-11\n--description--\nThe possessive 's shows something belongs to someone or something, like in Brian's book, meaning the book belongs to Brian Dealing means managing or handling something For example, When dealing with homework, it's important to be focused A function's signature in programming is like an ID card for a function It tells you the function's name, what it needs (parameters), and what it gives back (return type) The return type of a function is what the function gives back after it runs, like a vending machine returning a soda after you put in money --fillInTheBlank--\n--sentence--\nWhen BLANK with functions, start by looking at the BLANK signature It can BLANK information about the function's name, parameters, and return BLANK --blanks--\ndealing\n--feedback--\nIt refers to how you manage or work with something, like functions in programming function's\n--feedback--\nIt shows that the signature belongs to the function Remember, 's is used to show possession provide\n--feedback--\nIt means to give or supply In this context, it refers to the signature giving information type\n--feedback--\nIt refers to the kind of value a function returns after it finishes running --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1 2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7 3-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6 02,\n\"finishTimestamp\": 13 68\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4 14,\n\"dialogue\": {\n\"text\": \"When dealing with functions, start by looking at the function's signature \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4 44,\n\"finishTime\": 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2635,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068b650b681c91de9e19a0.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c47d82b1c536b0d04385100c6c9865e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068b650b681c91de9e19a0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Brian\", \"position\": { \"x\": 50, \"y\": 15, \"z\": 1 2 }, \"opacity\": 0 } ], \"audio\": { \"filename\": \"7 3-2 mp3\", \"startTime\": 1, \"startTimestamp\": 6 02, \"finishTimestamp\": 13 68 } }, \"commands\": [ { \"character\": \"Brian\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Brian\", \"startTime\": 1, \"finishTime\": 4 14, \"dialogue\": { \"text\": \"When dealing with functions, start by looking at the function's signature \", \"align\": \"center\" } }, { \"character\": \"Brian\", \"startTime\": 4 44, \"finishTime\": 866,\n\"dialogue\": {\n\"text\": \"It can provide information about the function's name, parameters, and return type \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 9 16\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2635,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068b650b681c91de9e19a0.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "72c688c44de227c97ca83d5d3bbb0fc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068d4033a07d9393291ef0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068d4033a07d9393291ef0\ntitle: Task 14\nchallengeType: 22\ndashedName: task-14\n--description--\nUsage examples show how something is used.\n--fillInTheBlank--\n--sentence--\nNext, you should BLANK the function's description in the documentation. It can BLANK what the function does and BLANK BLANK examples.\n--blanks--\nexamine\n--feedback--\nIt means to look at something carefully. Brian suggests looking closely at the function's description.\nexplain\n--feedback--\nIt means to make something clear.\nprovide\n--feedback--\nIt means to give or supply. The documentation gives examples of how to use the function.\nusage\n--feedback--\nThese examples show how to use something, like the function in this context.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 17.5,\n\"finishTimestamp\": 24.94\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.54,\n\"dialogue\": {\n\"text\": \"Next, you should examine the function's description in the documentation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4.84,\n\"finishTime\": 8.44,\n\"dialogue\": {\n\"text\": \"It can explain what the function does and provide usage examples.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 8.94\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068d4033a07d9393291ef0.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "731a976e79dc4dd6f601c98e43478ea6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068fc7aa2fe094c5cb84bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66068fc7aa2fe094c5cb84bd\ntitle: Task 16\nchallengeType: 22\ndashedName: task-16\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\n--sentence--\nThanks. BLANK make sure to follow BLANK steps for BLANK function.\n--blanks--\nI'll\n--feedback--\nIt is a contraction of I will. Sophie is making a promise or plan to follow the steps.\nthese\n--feedback--\nIt refers to specific things, in this case, the steps mentioned earlier in the conversation.\neach\n--feedback--\nIt is used for individual items. Sophie plans to follow the steps for every single function, one by one.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 25.72,\n\"finishTimestamp\": 28.2\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.48,\n\"dialogue\": {\n\"text\": \"Thanks. I'll make sure to follow these steps for each function.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.98\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1572,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66068fc7aa2fe094c5cb84bd.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3969a408f9b37857c72460451c7f009f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606906b3f31fc953f1ee3b6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6606906b3f31fc953f1ee3b6\ntitle: Task 17\nchallengeType: 22\ndashedName: task-17\n--description--\nThis is a review of the entire dialogue you just studied.\n--instructions--\nWrite the following words or phrases in the correct spot:\neffectively, return type, usage examples, examine, signature, and library.\n--fillInTheBlank--\n--sentence--\nSophie: This BLANK has so many functions. How can I BLANK analyze the documentation for them?\nBrian: When dealing with functions, start by looking at the function's BLANK. It can provide information about the function's name, parameters, and BLANK.\nSophie: That makes sense. What's the next step? What should I do then?\nBrian: Next, you should BLANK the function's description in the documentation. It can explain what the function does and provide BLANK.\nSophie: Thanks. I'll make sure to follow these steps for each function.\n--blanks--\nlibrary\n--feedback--\nA collection of ready-made code you can use in your program.\neffectively\n--feedback--\nIn a way that works well or gets good results.\nsignature\n--feedback--\nThe name, parameters, and return type of a function.\nreturn type\n--feedback--\nThe kind of value a function gives back after it runs.\nexamine\n--feedback--\nTo look at something carefully to understand it.\nusage examples\n--feedback--\nSample code that shows how to use a function or tool.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1490,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606906b3f31fc953f1ee3b6.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "27ee0d0580a4b8beca4d70f998342ddc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660695c672854899d6862834.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660695c672854899d6862834\ntitle: Task 19\nchallengeType: 19\ndashedName: task-19\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nWhat is Sophie's problem in this dialogue?\n--answers--\nShe is happy with the class and finds the documentation easy\n--feedback--\nSophie finds the class complex and the documentation confusing, not easy.\nShe finds the class complex and the documentation confusing\nShe wants to quit the class\n--feedback--\nSophie expresses difficulty with the class but does not mention wanting to quit.\nShe is looking for a new class\n--feedback--\nSophie talks about her current class being complex, not about searching for a new one.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 5.96\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4,\n\"dialogue\": {\n\"text\": \"Ugh, this class I'm working with is really complex.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.42,\n\"finishTime\": 6.96,\n\"dialogue\": {\n\"text\": \"The documentation looks confusing. What should I do?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7.46\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1923,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660695c672854899d6862834.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "42d210c54068d6f7980a9e0e87419ef8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660696292c16659a5e9ccf81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660696292c16659a5e9ccf81\ntitle: Task 20\nchallengeType: 22\ndashedName: task-20\n--description--\nRemember: its is a possessive pronoun used for things or animals, not people. It shows that something belongs to or is part of something else.\n--fillInTheBlank--\n--sentence--\nWhen BLANK dealing with classes, begin by checking the BLANK name and properties. This will give you an idea of BLANK purpose and BLANK structure.\n--blanks--\nyou're\n--feedback--\nIt is a contraction of you are, used here to describe an action you are doing.\nclass's\n--feedback--\nIt is a possessive form, showing that the name and properties belong to the class.\nits\n--feedback--\nThis word refers to something belonging to the class, in this case, the class's purpose.\nits\n--feedback--\nThis word refers to something belonging to the class, here specifying the class's structure.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.48,\n\"finishTimestamp\": 13.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.82,\n\"dialogue\": {\n\"text\": \"When you're dealing with classes, begin by checking the class's name and properties.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 5.2,\n\"finishTime\": 8.3,\n\"dialogue\": {\n\"text\": \"This will give you an idea of its purpose and its structure.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 8.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2168,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660696292c16659a5e9ccf81.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4f584aea6c84e4a4c7a44d1748039a25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660696cce3e4e79af4612466.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660696cce3e4e79af4612466\ntitle: Task 21\nchallengeType: 19\ndashedName: task-21\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nWhat does Brian suggest doing first when dealing with classes?\n--answers--\nWrite new properties for the class\n--feedback--\nBrian's advice is to begin by understanding the class, not by writing new properties.\nChange the class's name\n--feedback--\nBrian does not suggest changing the name but rather checking the existing name and properties.\nDiscuss the class with a colleague\n--feedback--\nWhile discussing with a colleague can be helpful, Brian specifically advises to start by checking the class's name and properties.\nCheck the class's name and properties\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.48,\n\"finishTimestamp\": 13.78\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.82,\n\"dialogue\": {\n\"text\": \"When you're dealing with classes, begin by checking the class's name and properties.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 5.2,\n\"finishTime\": 8.3,\n\"dialogue\": {\n\"text\": \"This will give you an idea of its purpose and its structure.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 8.8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2046,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660696cce3e4e79af4612466.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5471f4de229daf1940ea3b77ad974cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606952c28640e9941c8fa29.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6606952c28640e9941c8fa29\ntitle: Task 18\nchallengeType: 22\ndashedName: task-18\n--description--\nUsually, with is used to show connection or use For example, I write with a pen However, in some sentences, with comes after the word it is used with This usually happens when you want to emphasize the object or thing someone is using or dealing with, especially in questions or statements about technology or work For instance, in tech, you might say, This program I work with is challenging Here, with is used at the end to emphasize the program that is challenging to work with Another example could be a question like, What else is he working with where with at the end asks about other tools or technologies being used --fillInTheBlank--\n--sentence--\nUgh, this class I'm working BLANK is really BLANK The documentation BLANK confusing What should I do --blanks--\nwith\n--feedback--\nIt emphasizes the object of use or concern, in this case, the class Sophie is working with complex\n--feedback--\nIt means something is complicated or has many parts looks\n--feedback--\nIt is used to describe the appearance or impression of something --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1 4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7 3-3 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0,\n\"finishTimestamp\": 5 96\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4,\n\"dialogue\": {\n\"text\": \"Ugh, this class I'm working with is really complex \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 42,\n\"finishTime\": 6 96,\n\"dialogue\": {\n\"text\": \"The documentation looks confusing What should I do \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7 46\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2378,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606952c28640e9941c8fa29.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f37bec7fdf0a75c67a05a33ea2c5ce78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66069719acca7d9b59499ce9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66069719acca7d9b59499ce9\ntitle: Task 22\nchallengeType: 22\ndashedName: task-22\n--description--\nAchieve means to successfully reach a goal or complete a task. In programming, it can refer to what you can accomplish with a class or method. Like saying, With this code, I can achieve a fast calculation.\n--fillInTheBlank--\n--sentence--\nAfter that, you should read the BLANK and functions BLANK with the class. These can BLANK how to interact with the class and what you can BLANK using it.\n--blanks--\nmethods\n--feedback--\nIt is a specific function or action that is part of a class in programming.\nassociated\n--feedback--\nIt refers to things that are connected or linked, like methods and functions that are part of a class.\nexplain\n--feedback--\nThis word means to describe or make clear. Here, it's about making clear how to use the class.\nachieve\n--feedback--\nIt means to successfully complete or reach a goal. In this context, it refers to what you can do with the class.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.2,\n\"finishTimestamp\": 24.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.58,\n\"dialogue\": {\n\"text\": \"After that, you should read the methods and functions associated with the class.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4.96,\n\"finishTime\": 9.26,\n\"dialogue\": {\n\"text\": \"These can explain how to interact with the class and what you can achieve using it.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 9.76\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\66069719acca7d9b59499ce9.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "48af0c8f9a684b7d34c1445852613729",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606977e8f0b509bdac39012.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6606977e8f0b509bdac39012\ntitle: Task 23\nchallengeType: 19\ndashedName: task-23\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nWhat does Brian recommend doing next after checking the class's name and properties?\n--answers--\nStart writing new functions immediately\n--feedback--\nBrian suggests reading existing methods and functions first, not writing new ones immediately.\nRead the methods and functions associated with the class\nChange the methods of the class\n--feedback--\nBrian advises reading and understanding the methods, not changing them at this stage.\nIgnore the class's methods and functions\n--feedback--\nIgnoring the methods and functions goes against Brian's advice. He emphasizes the importance of reading them.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\n\"x\": 50,\n\"y\": 15,\n\"z\": 1.2\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.2,\n\"finishTimestamp\": 24.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.58,\n\"dialogue\": {\n\"text\": \"After that, you should read the methods and functions associated with the class.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4.96,\n\"finishTime\": 9.26,\n\"dialogue\": {\n\"text\": \"These can explain how to interact with the class and what you can achieve using it.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 9.76\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2126,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606977e8f0b509bdac39012.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0a0806cf05f7c5096e319d0d15de4a11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660694cf7803c598ce999171.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660694cf7803c598ce999171\ntitle: \"Dialogue 3: Analyzing Code Documentation for Classes and Objects\"\nchallengeType: 21\ndashedName: dialogue-3-analyzing-code-documentation-for-classes-and-objects\n--description--\nWatch the video to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"7 3-3 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4,\n\"dialogue\": {\n\"text\": \"Ugh, this class I'm working with is really complex \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4 42,\n\"finishTime\": 6 96,\n\"dialogue\": {\n\"text\": \"The documentation looks confusing What should I do \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 7 48,\n\"finishTime\": 11 3,\n\"dialogue\": {\n\"text\": \"When you're dealing with classes, begin by checking the class's name and properties \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 11 68,\n\"finishTime\": 14 78,\n\"dialogue\": {\n\"text\": \"This will give you an idea of its purpose and its structure \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 15 54,\n\"finishTime\": 16",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660694cf7803c598ce999171.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2418ddc37436251145371551c1ffea8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660694cf7803c598ce999171.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "What should I do \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 7 48, \"finishTime\": 11 3, \"dialogue\": { \"text\": \"When you're dealing with classes, begin by checking the class's name and properties \", \"align\": \"right\" } }, { \"character\": \"Brian\", \"startTime\": 11 68, \"finishTime\": 14 78, \"dialogue\": { \"text\": \"This will give you an idea of its purpose and its structure \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 15 54, \"finishTime\": 1642,\n\"dialogue\": {\n\"text\": \"Okay, what else \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 17 2,\n\"finishTime\": 20 78,\n\"dialogue\": {\n\"text\": \"After that, you should read the methods and functions associated with the class \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 21 16,\n\"finishTime\": 25 46,\n\"dialogue\": {\n\"text\": \"These can explain how to interact with the class and what you can achieve using it \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 25 98,\n\"finishTime\": 28 62,\n\"dialogue\": {\n\"text\": \"I'll try to calm down and read the documentation more carefully \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 28 86,\n\"finishTime\": 29 72,\n\"dialogue\": {\n\"text\": \"Thanks for the tips \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 30 22\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 30 72\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660694cf7803c598ce999171.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b7fb6deac378ed747fe3fa45947c76d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660697f307c6559c60e976f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 660697f307c6559c60e976f7\ntitle: Task 24\nchallengeType: 22\ndashedName: task-24\n--description--\nTo calm down means to relax or become less worried. For example, If you are stressed about a coding error, you might take a deep breath to calm down.\nCareful is an adjective that describes being cautious or paying attention to details. Like saying, Be careful with that function.\nCarefully is an adverb, describing how an action is done. For instance, Read the code carefully means to read the code with attention and in a detailed way.\n--fillInTheBlank--\n--sentence--\nI'll try to calm BLANK and read the documentation more BLANK. Thanks for the tips.\n--blanks--\ndown\n--feedback--\nCalm down means to become less anxious or stressed. Sophie is trying to relax to focus better on her reading.\ncarefully\n--feedback--\nThis word is used to describe reading in a detailed and cautious way. Sophie wants to pay close attention to the documentation.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\n\"x\": 50,\n\"y\": 0,\n\"z\": 1.4\n},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"7.3-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 24.98,\n\"finishTimestamp\": 28.92\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.84,\n\"dialogue\": {\n\"text\": \"I'll try to calm down and read the documentation more carefully.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.08,\n\"finishTime\": 4.94,\n\"dialogue\": {\n\"text\": \"Thanks for the tips.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.44\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2129,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\660697f307c6559c60e976f7.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6da9ce87b47c3f2ef86aa1e6109330cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606989c34f0be9d141130b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6606989c34f0be9d141130b1\ntitle: Task 25\nchallengeType: 22\ndashedName: task-25\n--description--\nThis is a review of the entire dialogue you just studied.\n--instructions--\nWrite the following words or phrases in the correct spot:\nconfusing, class, structure, properties, interact with, and associated with.\n--fillInTheBlank--\n--sentence--\nSophie: Ugh, this BLANK I'm working with is really complex. The documentation looks BLANK. What should I do?\nBrian: When you're dealing with classes, begin by checking the class's name and BLANK. This will give you an idea of its purpose and its BLANK.\nSophie: Okay, what else?\nBrian: After that, you should read the methods and functions BLANK the class. These can explain how to BLANK the class and what you can achieve using it.\nSophie: I'll try to calm down and read the documentation more carefully. Thanks for the tips.\n--blanks--\nclass\n--feedback--\nA blueprint in code used to create objects with the same properties and actions.\nconfusing\n--feedback--\nHard to understand or not clear.\nproperties\n--feedback--\nValues or data that belong to an object or class.\nstructure\n--feedback--\nThe way something is organized or built.\nassociated with\n--feedback--\nConnected to or related to something.\ninteract with\n--feedback--\nTo do something with or use something, like a program or object.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-analyze-code-documentation\\6606989c34f0be9d141130b1.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b0e745f0167f89774ef4274970df9f88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b0f0be03b2137ed88b36c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b0f0be03b2137ed88b36c\ntitle: Task 1\nchallengeType: 19\ndashedName: task-1\n--description--\nAn interview is a formal meeting where someone asks questions to learn about another person's experience, skills, or opinions. In job interviews, like in the dialogue, the interviewer asks about the candidate's previous job experiences.\n--questions--\n--text--\nWhat is the purpose of Anna's meeting with the candidate?\n--answers--\nTo discuss a new project at Acme Tech\n--feedback--\nThe dialogue is about an interview, not a project discussion.\nTo give a presentation on web development\n--feedback--\nThe dialogue focuses on an interview, not a presentation.\nTo have a casual conversation about programming\n--feedback--\nThis is a formal interview, not a casual conversation.\nTo conduct an interview about the candidate's job experience\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 5.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 6.32,\n\"dialogue\": {\n\"text\": \"Good afternoon. Thanks for coming in for this interview. Can you tell me about your previous job experiences?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.82\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1815,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b0f0be03b2137ed88b36c.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9ee8aee72d7e187a41af7c785b4b0a1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b106ced8c653be6b3218f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b106ced8c653be6b3218f\ntitle: Task 2\nchallengeType: 22\ndashedName: task-2\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\n--sentence--\nGood afternoon! Thanks for coming in for this interview. BLANK you BLANK me about your BLANK job experiences?\n--blanks--\nCan\n--feedback--\nThis word is used to ask if someone is able to do something.\ntell\n--feedback--\nThis word is used when asking someone to give information.\nprevious\n--feedback--\nThis word is used to describe something that happened before now.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 5.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 6.32,\n\"dialogue\": {\n\"text\": \"Good afternoon. Thanks for coming in for this interview. Can you tell me about your previous job experiences?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.82\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1553,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b106ced8c653be6b3218f.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b288bcf7a76d9082c5bc22254a8ebb30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b108cf870283d22b21e8e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b108cf870283d22b21e8e\ntitle: Task 3\nchallengeType: 19\ndashedName: task-3\n--description--\nIn English, the simple present tense is used to describe habitual or usual actions. However, when you are talking about past roles or experiences, like in an interview, you should use the simple past tense.\nThe simple past tense often involves changing verbs. For example, is becomes was for singular subjects and are becomes were for plural subjects.\nFor example, I am a teacher in the present becomes I was a teacher for past experiences. Similarly, They are engineers changes to They were engineers when speaking about the past.\n--questions--\n--text--\nWhat was the candidate's position at Acme Tech?\n--answers--\nA project manager\n--feedback--\nThe candidate stated they were a programmer, not a project manager.\nA database analyst\n--feedback--\nThe candidate mentioned being a programmer, which is different from a database analyst.\nA programmer\nA software tester\n--feedback--\nThe candidate specifically mentioned their role as a programmer, not a software tester.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.90,\n\"finishTimestamp\": 9.38\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 4.48,\n\"dialogue\": {\n\"text\": \"Good afternoon. Sure. I was a programmer in Acme Tech.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 4.98\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b108cf870283d22b21e8e.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b67a3a3900e797fd8ad36baa57a84133",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b110ad8afcc3f8e586362.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b110ad8afcc3f8e586362\ntitle: Task 4\nchallengeType: 22\ndashedName: task-4\n--description--\nThe simple past tense in English is used for actions or situations that have been completed in the past. It involves changing verbs to show that the action happened before now. In this challenge, you'll practice using the simple past form of verb to be.\n--fillInTheBlank--\n--sentence--\nI BLANK there for three years. I BLANK responsible for developing web applications and maintaining the company's database.\n--blanks--\nwas\n--feedback--\nThe first was indicates the completion of the time period the candidate spent at their previous job.\nwas\n--feedback--\nThe second was is used to describe past responsibility, indicating what the candidate used to do in their previous job.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 9.92,\n\"finishTimestamp\": 16.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 7.30,\n\"dialogue\": {\n\"text\": \"I was there for three years. I was responsible for developing web applications and maintaining the company's database.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 7.80\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1819,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b110ad8afcc3f8e586362.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c3922c57fb6d0b663eb9467cd74170a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b115008a62d41c0d7482f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b115008a62d41c0d7482f\ntitle: Task 5\nchallengeType: 19\ndashedName: task-5\n--description--\nIn the context of programming and technology, the term web applications refers to software programs that run on a web server and are accessed through a web browser. They are an essential part of modern technology, allowing users to perform functions or access services over the internet.\n--questions--\n--text--\nWhat does web applications refer to in the context of programming?\n--answers--\nMobile apps that are downloaded from app stores\n--feedback--\nWhile mobile apps are a type of application, web applications specifically refer to those accessed through a web browser.\nPrograms that run on a web server and are accessed via a web browser\nPhysical hardware used in networking\n--feedback--\nWeb applications are software, not physical hardware.\nWebsites that only provide information without user interaction\n--feedback--\nWeb applications are interactive and functional, not just informational.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 9.92,\n\"finishTimestamp\": 16.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 7.30,\n\"dialogue\": {\n\"text\": \"I was there for three years. I was responsible for developing web applications and maintaining the company's database.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 7.80\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b115008a62d41c0d7482f.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fdae26c7f526cac3ba23eba468ef7d46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b119f0ce64343420bb850.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b119f0ce64343420bb850\ntitle: Task 6\nchallengeType: 19\ndashedName: task-6\n--description--\nA database is a structured collection of data, typically stored electronically in a computer system. It is used to organize, store, and retrieve large amounts of information efficiently. In programming, a database is essential for managing data that applications need to function.\n--questions--\n--text--\nWhat is a database in the context of programming?\n--answers--\nA structured collection of data stored electronically\nA tool for designing websites\n--feedback--\nWhile important in web development, a database is not a tool for designing websites, but for storing data.\nA programming language used to create applications\n--feedback--\nA database is not a programming language; it's a system for storing and managing data.\nA type of computer virus\n--feedback--\nA database is a safe and structured way to store data, not a computer virus.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 9.92,\n\"finishTimestamp\": 16.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 7.30,\n\"dialogue\": {\n\"text\": \"I was there for three years. I was responsible for developing web applications and maintaining the company's database.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 7.80\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2018,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b119f0ce64343420bb850.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "473179aed5fff911e750e9245c305eb3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b11e082e48a44eb4bfc09.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b11e082e48a44eb4bfc09\ntitle: Task 7\nchallengeType: 22\ndashedName: task-7\n--description--\nListen to the candidate's response and fill in the missing words.\n--fillInTheBlank--\n--sentence--\nI BLANK also part of the BLANK update team.\n--blanks--\nwas\n--feedback--\nThis word is a past tense verb. You use it to talk about something that happened in the past.\nsoftware\n--feedback--\nThis word refers to computer programs. It's an important term in technology and programming.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 16.70,\n\"finishTimestamp\": 19.00\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 3.30,\n\"dialogue\": {\n\"text\": \"I was also a part of the software update team.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 3.80\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1372,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b11e082e48a44eb4bfc09.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ee8a0c2fb50a220e28c4083e41d3a740",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1240ef768447b80817ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1240ef768447b80817ad\ntitle: Task 9\nchallengeType: 19\ndashedName: task-9\n--description--\nThe simple past tense, as reviewed earlier, is used for actions completed in the past. In this context, we were involved in combines the simple past tense (were) with the expression involved in, which means being a part of something, especially in an active or important role. For example, They were involved in organizing the event means they played an important role in organizing it.\n--questions--\n--text--\nHow does the candidate describe their role in the project?\n--answers--\nWe had involvement in the development of the e-commerce platform.\n--feedback--\nAlthough this phrase communicates involvement, the more common expression in English is were involved in.\nWe were engaged in the development of the e-commerce platform.\n--feedback--\nengaged in is similar but not the exact phrase used by the candidate. Involved in specifically indicates an active participation.\nWe were involved in the development of the e-commerce platform.\nWe participated in the development of the e-commerce platform.\n--feedback--\nWhile participated in suggests involvement, the specific phrase used here is involved in.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 25.14,\n\"finishTimestamp\": 33.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 9.26,\n\"dialogue\": {\n\"text\": \"We were involved in the development of an e-commerce platform. We were responsible for the checkout process and it was a successful implementation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 9.76\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2353,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1240ef768447b80817ad.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b2a9361ad205399e12f62544f842e77b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b11f87368cf463ea4fe46.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b11f87368cf463ea4fe46\ntitle: Task 8\nchallengeType: 19\ndashedName: task-8\n--description--\nQuestions in the past tense with the verb to be are very similar to how you do it in the present tense. The only difference is that you need to remember to conjugate the verb to were or was, followed by the subject and then the main verb. For example:\nWere you at the meeting yesterday? Notice how were comes before you to form a question.\nWhat was my assignment? For a specific question, notice how was comes after what and before my.\n--questions--\n--text--\nHow does Anna ask about specific projects in the past tense?\n--answers--\nWhere there any specific projects you'd like to mention?\n--feedback--\nWhere is used for locations. The correct form for asking about past events is Were.\nWere there any specific projects you'd like to mention?\nWas there any specific projects you'd like to mention?\n--feedback--\nWas is used with singular nouns. Since projects is plural, Were is the correct choice.\nAre there any specific projects you'd like to mention?\n--feedback--\nAre is present tense. The question is about past projects, so Were is needed.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19.64,\n\"finishTimestamp\": 22.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 3.92,\n\"dialogue\": {\n\"text\": \"That's excellent. Were there any specific projects you'd like to mention?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 4.42\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2153,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b11f87368cf463ea4fe46.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ee297e9ce62b11212484d00dca30bb5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b12ae08dd7049b300c901.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b12ae08dd7049b300c901\ntitle: Task 10\nchallengeType: 19\ndashedName: task-10\n--description--\nAn e-commerce platform refers to a software application that allows businesses to manage their online sales operations. It typically includes features for displaying products, processing orders, and handling customer transactions. This term is essential in the world of online business, as it enables companies to sell goods and services over the internet.\n--questions--\n--text--\nWhat is an e-commerce platform in the context of online business?\n--answers--\nA platform for social media marketing\n--feedback--\nWhile e-commerce platforms may use social media for marketing, they are primarily used for online sales operations.\nA software application for managing online sales\nA tool for website design and development\n--feedback--\nAn e-commerce platform is specifically for managing online sales, not just website design.\nA system for email communication with customers\n--feedback--\nThough communication might be a feature, an e-commerce platform's main function is to manage online sales.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 25.14,\n\"finishTimestamp\": 33.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 9.26,\n\"dialogue\": {\n\"text\": \"We were involved in the development of an e-commerce platform. We were responsible for the checkout process and it was a successful implementation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 9.76\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2219,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b12ae08dd7049b300c901.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "76d531efa65fbc2af8b5a3e5fd3aad7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b12e7c306334b7c320221.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b12e7c306334b7c320221\ntitle: Task 11\nchallengeType: 22\ndashedName: task-11\n--description--\nListen to the candidate's statement and fill in the missing words.\n--fillInTheBlank--\n--sentence--\nWe BLANK responsible for the checkout process, and it BLANK a successful implementation.\n--blanks--\nwere\n--feedback--\nThis is the past tense of are used for plural subjects.\nwas\n--feedback--\nThis is the past tense of is used for singular subjects or situations.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.88,\n\"finishTimestamp\": 33.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.52,\n\"dialogue\": {\n\"text\": \"We were responsible for the checkout process and it was a successful implementation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 6.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b12e7c306334b7c320221.md",
      "source_type": "git_repo"
    },
    "token_count": 317,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7d3990c6dd767eff6db46fa0f744ce65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 655c0feadb1dd77f6cda623f\ntitle: \"Dialogue 1: A Job Interview\"\nchallengeType: 21\ndashedName: dialogue-1-a-job-interview\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3 png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Candidate\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"3 1-1 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 3 8,\n\"dialogue\": {\n\"text\": \"Good afternoon Thanks for coming in for this interview \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 4 1,\n\"finishTime\": 6 3,\n\"dialogue\": {\n\"text\": \"Can you tell me about your previous job experiences \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 7 1,\n\"finishTime\": 10 6,\n\"dialogue\": {\n\"text\": \"Good afternoon Sure, I was a programmer at Acme Tech \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 10 9,\n\"finishTime\": 12 3,\n\"dialogue\": {\n\"text\": \"I was there for three years \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 12 8,\n\"finishTime\": 15",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5435,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c586174d90574dc8cecaf8c4b8195a38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3, \"dialogue\": { \"text\": \"Can you tell me about your previous job experiences \", \"align\": \"left\" } }, { \"character\": \"Candidate\", \"startTime\": 7 1, \"finishTime\": 10 6, \"dialogue\": { \"text\": \"Good afternoon Sure, I was a programmer at Acme Tech \", \"align\": \"right\" } }, { \"character\": \"Candidate\", \"startTime\": 10 9, \"finishTime\": 12 3, \"dialogue\": { \"text\": \"I was there for three years \", \"align\": \"right\" } }, { \"character\": \"Candidate\", \"startTime\": 12 8, \"finishTime\": 152,\n\"dialogue\": {\n\"text\": \"I was responsible for developing web applications\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 15 3,\n\"finishTime\": 17 3,\n\"dialogue\": {\n\"text\": \"and maintaining the company's database \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 17 9,\n\"finishTime\": 19 9,\n\"dialogue\": {\n\"text\": \"I was also part of the software update team \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 20 6,\n\"finishTime\": 23 6,\n\"dialogue\": {\n\"text\": \"That's excellent Were there any specific projects you'd like to mention \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 23 9,\n\"finishTime\": 26 0,\n\"dialogue\": {\n\"text\": \"Yes, in one of my team's projects,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 26 1,\n\"finishTime\": 29 5,\n\"dialogue\": {\n\"text\": \"we were involved in the development of an e-commerce platform \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 29 8,\n\"finishTime\": 32 2,\n\"dialogue\": {\n\"text\": \"We were responsible for the checkout process,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 32 3,\n\"finishTime\": 34",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5435,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e372d2c1373197e2b089d0ace94de841",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "9, \"finishTime\": 26 0, \"dialogue\": { \"text\": \"Yes, in one of my team's projects,\", \"align\": \"right\" } }, { \"character\": \"Candidate\", \"startTime\": 26 1, \"finishTime\": 29 5, \"dialogue\": { \"text\": \"we were involved in the development of an e-commerce platform \", \"align\": \"right\" } }, { \"character\": \"Candidate\", \"startTime\": 29 8, \"finishTime\": 32 2, \"dialogue\": { \"text\": \"We were responsible for the checkout process,\", \"align\": \"right\" } }, { \"character\": \"Candidate\", \"startTime\": 32 3, \"finishTime\": 344,\n\"dialogue\": {\n\"text\": \"and it was a successful implementation \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 35 4,\n\"finishTime\": 37 1,\n\"dialogue\": {\n\"text\": \"Great Can you tell me about your qualifications \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 37 5,\n\"finishTime\": 39 1,\n\"dialogue\": {\n\"text\": \"Were you educated in computer science \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 40 1,\n\"finishTime\": 42 9,\n\"dialogue\": {\n\"text\": \"Yes I have a bachelor's degree in computer science\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 43,\n\"finishTime\": 45,\n\"dialogue\": {\n\"text\": \"from California State University \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 45 5,\n\"finishTime\": 49 2,\n\"dialogue\": {\n\"text\": \"During my studies, I was introduced to various programming languages\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 49 3,\n\"finishTime\": 51 5,\n\"dialogue\": {\n\"text\": \"and software development principles \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 52,\n\"finishTime\": 55 3,\n\"dialogue\": {\n\"text\": \"Wonderful We value candidates with a strong educational background",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5435,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "6c5fc1f1633a4c70af1811cfb5ac56f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"from California State University \", \"align\": \"right\" } }, { \"character\": \"Candidate\", \"startTime\": 45 5, \"finishTime\": 49 2, \"dialogue\": { \"text\": \"During my studies, I was introduced to various programming languages\", \"align\": \"right\" } }, { \"character\": \"Candidate\", \"startTime\": 49 3, \"finishTime\": 51 5, \"dialogue\": { \"text\": \"and software development principles \", \"align\": \"right\" } }, { \"character\": \"Anna\", \"startTime\": 52, \"finishTime\": 55 3, \"dialogue\": { \"text\": \"Wonderful We value candidates with a strong educational background\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 55 7,\n\"finishTime\": 57 6,\n\"dialogue\": {\n\"text\": \"Thank you for sharing your experiences with us \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 58 1\n},\n{\n\"character\": \"Anna\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 58 6\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5435,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\655c0feadb1dd77f6cda623f.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "acea868193ada69bd91509b00e84c944",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b133afcef714e542b557a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b133afcef714e542b557a\ntitle: Task 13\nchallengeType: 19\ndashedName: task-13\n--description--\nImplementation in a technical or business context refers to the process of putting a plan or design into effect. In software development, for instance, implementation involves the actual coding and setup of a software application based on designed specifications. It is a critical phase where ideas or plans are turned into a functioning reality.\n--questions--\n--text--\nWhat does implementation mean in a project context?\n--answers--\nThe planning stage of a project\n--feedback--\nPlanning is the phase where strategies are formed, not the actual execution or implementation of those plans.\nThe analysis of project results\n--feedback--\nAnalysis is about evaluating outcomes, whereas implementation is about executing or carrying out the project plans.\nThe process of team formation\n--feedback--\nTeam formation is part of project setup, but implementation specifically refers to executing the planned tasks of the project.\nThe execution of a plan or design\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.88,\n\"finishTimestamp\": 33.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.52,\n\"dialogue\": {\n\"text\": \"We were responsible for the checkout process and it was a successful implementation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 6.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b133afcef714e542b557a.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "17c5ac7260056363baf27acc5176cbfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b13088693ef4ce21ce0e4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b13088693ef4ce21ce0e4\ntitle: Task 12\nchallengeType: 19\ndashedName: task-12\n--description--\nThe term checkout process refers to the steps involved in completing a purchase, whether in a physical store or online. In a physical store, this usually involves taking items to a cashier, paying, and receiving a receipt. In online shopping, it includes adding items to a cart, entering shipping and payment details, and finalizing the order.\n--questions--\n--text--\nWhat does the checkout process typically involve?\n--answers--\nSigning up for a store's loyalty program\n--feedback--\nWhile loyalty programs are part of customer engagement, the checkout process is specifically about completing a transaction.\nArranging items on shelves in a store\n--feedback--\nArranging items is a part of store management, not related to the checkout process of completing a purchase.\nConducting market research\n--feedback--\nMarket research is important for business strategy, but it's separate from the checkout process, which is directly involved in sales transactions.\nCompleting a purchase through payment and receipt of goods\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.88,\n\"finishTimestamp\": 33.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.52,\n\"dialogue\": {\n\"text\": \"We were responsible for the checkout process and it was a successful implementation.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 6.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b13088693ef4ce21ce0e4.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "78c2b337cf9ceb8ce18b4b41c7e7a84d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1431076b365555784189.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1431076b365555784189\ntitle: Task 16\nchallengeType: 19\ndashedName: task-16\n--description--\nA bachelor's degree is an undergraduate academic degree awarded by colleges and universities upon completion of a course of study. In the term bachelor's degree, the use of the noun (bachelor) followed by the 's indicates possession or association. This form is commonly used to show that something belongs to or is related to the noun, as in today's news or teacher's guide.\n--questions--\n--text--\nWhat does bachelor's degree refer to?\n--answers--\nAn undergraduate academic degree\nA type of professional certification\n--feedback--\nA bachelor's degree is an academic qualification, not a professional certification.\nA high school diploma\n--feedback--\nA bachelor's degree is a higher education qualification, more advanced than a high school diploma.\nA master's program entry requirement\n--feedback--\nWhile a bachelor's degree may be required for a master's program, it itself refers to an undergraduate degree.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 39.56,\n\"finishTimestamp\": 44.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.46,\n\"dialogue\": {\n\"text\": \"I have a bachelor's degree in computer science from California State University.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 5.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2028,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1431076b365555784189.md",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "da3cd1529d6b11e4dd6df6a822be34ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b138d33db9e50f116b5f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b138d33db9e50f116b5f0\ntitle: Task 15\nchallengeType: 19\ndashedName: task-15\n--description--\nListen to the audio and answer the question.\n--questions--\n--text--\nHow does Anna ask about the candidate's educational background in computer science?\n--answers--\nAre you educated in computer science?\n--feedback--\nAre you is present tense, but Anna's question is about the candidate's past education.\nDo you study computer science?\n--feedback--\nDo you study is present tense. The question is about past education.\nWere you educated in computer science?\nHave you studied computer science?\n--feedback--\nHave you studied is a different form, asking if they have ever studied it at any time. Were you educated specifically asks about formal education in the past.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 34.10,\n\"finishTimestamp\": 38.20\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.10,\n\"dialogue\": {\n\"text\": \"Great. Can you tell me about your qualifications? Were you educated in computer science?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 5.60\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1772,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b138d33db9e50f116b5f0.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d3032b9d6808c2478069ed8ef677e06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b145976723b56a97b8dda.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b145976723b56a97b8dda\ntitle: Task 17\nchallengeType: 19\ndashedName: task-17\n--description--\nThe phrase I was introduced to uses the simple past tense form was of the verb be, combined with the past participle introduced. This structure, be followed by a verb suffixed with -ed, is often used to describe actions that happened to the subject in the past. For example:\nAt college, I was introduced to many programming languages\n--questions--\n--text--\nWhat does the candidate mean by saying I was introduced to various programming languages and software development principles?\n--answers--\nI taught myself various programming languages and principles\n--feedback--\nI was introduced to implies being formally taught or shown by someone else, not self-teaching.\nI learned about various programming languages and principles in my studies\nI have extensive experience with various programming languages and principles\n--feedback--\nThe phrase indicates initial exposure to these topics, not necessarily extensive experience.\nI developed various programming languages and principles\n--feedback--\nBeing introduced to something means learning about it for the first time, not creating or developing it.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 39.56,\n\"finishTimestamp\": 50.44\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.56,\n\"dialogue\": {\n\"text\": \"I have a bachelor's degree in computer science from California State University.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 6.06,\n\"finishTime\": 11.88,\n\"dialogue\": {\n\"text\": \"During my studies, I was introduced to various programming languages and software development principles.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 12.38\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b145976723b56a97b8dda.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d5856d839de9204e98946bd89b085c2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b149630b3ea5873269a38.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b149630b3ea5873269a38\ntitle: Task 18\nchallengeType: 19\ndashedName: task-18\n--description--\nThe word various is an adjective used to describe a number of different types or kinds of something, emphasizing diversity or variety. It is often used to indicate that there are several distinct items or examples being referred to. For example, saying various books means books of different kinds or genres.\n--questions--\n--text--\nWhat does various imply when talking about programming languages and software development principles?\n--answers--\nDifferent types or kinds\nA specific type or kind\n--feedback--\nThe term various implies diversity, not specificity.\nOnly one type\n--feedback--\nVarious indicates a number of different types, not just one.\nIrrelevant or unrelated types\n--feedback--\nVarious does mean different types, but these are usually relevant and related to the context.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 44.52,\n\"finishTimestamp\": 50.44\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 6.92,\n\"dialogue\": {\n\"text\": \"During my studies, I was introduced to various programming languages and software development principles.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 7.42\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b149630b3ea5873269a38.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "80aafd0eb9d828aa6c8bc3b0de7bc7dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b14d8353d665a187fe771.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b14d8353d665a187fe771\ntitle: Task 19\nchallengeType: 22\ndashedName: task-19\n--description--\nIn this challenge, you'll practice filling in key terms from the dialogue. These terms are commonly used in job interviews and are essential for understanding the context of the discussion.\n--fillInTheBlank--\n--sentence--\nI was a programmer at Acme Tech. I was there for three years. I was responsible for developing web BLANK and maintaining the company's BLANK. I was also a part of the software update team.\n--blanks--\napplications\n--feedback--\nThese are programs designed to perform specific tasks or functions.\ndatabase\n--feedback--\nThis is a collection of information organized for easy access, management, and updating.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 7.80,\n\"finishTimestamp\": 19.00\n}\n},\n\"commands\": [\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 1,\n\"finishTime\": 4.02,\n\"dialogue\": {\n\"text\": \"I was a programmer in Acme Tech. I was there for three years.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 4.6,\n\"finishTime\": 8.98,\n\"dialogue\": {\n\"text\": \"I was responsible for developing web applications and maintaining the company's database.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 9.46,\n\"finishTime\": 11.76,\n\"dialogue\": {\n\"text\": \"I was also a part of the software update team.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 12.36\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2266,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b14d8353d665a187fe771.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d893fd41d56eb346013043225d29db1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b153ac677705c7059530d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b153ac677705c7059530d\ntitle: Task 21\nchallengeType: 19\ndashedName: task-21\n--description--\nThe phrase could you tell me is a polite way to ask someone for information. It's commonly used in formal or professional situations, like job interviews or meetings.\nIn English, some verbs have irregular past forms, meaning they do not follow the regular pattern of adding -ed to make the past tense. Can is one such verb, and its irregular simple past form is could.\nThe existence of irregular forms, like could, often comes from the way language has evolved over time. These forms do not follow the regular patterns and need to be memorized.\nFor example:\nPresent: I can speak English.\nPast: I could speak English when I was six.\n--questions--\n--text--\nWhat does the phrase could you tell me in Anna's sentence express?\n--answers--\nA polite request for information\nA command to do something immediately\n--feedback--\nThe phrase could you tell me is used for polite requests, not direct commands.\nA suggestion for future action\n--feedback--\nThis phrase is asking for information now, not suggesting something for the future.\nAn offer to help someone\n--feedback--\nThis phrase is more about asking for information than offering help.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 4.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.76,\n\"dialogue\": {\n\"text\": \"Hello, thanks for coming in today. Could you tell me about your previous roles and responsibilities?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2276,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b153ac677705c7059530d.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7b8ba897fb8a9ef6613a72e78f80ff40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b135e9029fb4f8141e40c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b135e9029fb4f8141e40c\ntitle: Task 14\nchallengeType: 22\ndashedName: task-14\n--description--\nListen to the dialogue and fill in the blanks with the correct words This is a great way to practice and remember these words --fillInTheBlank--\n--sentence--\nAnna: That's excellent BLANK there any specific projects you'd like to mention Candidate: Yes, in one of my team's projects, we were BLANK in the development of an e-commerce platform We were responsible for the BLANK process, and it was a successful implementation --blanks--\nWere\n--feedback--\nThis is the past tense form of are The first letter should be capitalized involved\n--feedback--\nThis word means participating actively in something checkout\n--feedback--\nThis term refers to the process of completing a purchase --scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3 png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Candidate\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3 1-1 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 19 64,\n\"finishTimestamp\": 33 40\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 3 92,\n\"dialogue\": {\n\"text\": \"That's excellent Were there any specific projects you'd like to mention \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 4\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 1,\n\"startTime\": 4\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 4 28,\n\"finishTime\": 9 84,\n\"dialogue\": {\n\"text\": \"Yes In one of my team's projects, we were involved in the development of an e-commerce platform \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"startTime\": 10 24,\n\"finishTime\": 14",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2743,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b135e9029fb4f8141e40c.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "31a9b127d368f64c055279820204a5d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b135e9029fb4f8141e40c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ \"text\": \"That's excellent Were there any specific projects you'd like to mention \", \"align\": \"center\" } }, { \"character\": \"Anna\", \"opacity\": 0, \"startTime\": 4 }, { \"character\": \"Candidate\", \"opacity\": 1, \"startTime\": 4 }, { \"character\": \"Candidate\", \"startTime\": 4 28, \"finishTime\": 9 84, \"dialogue\": { \"text\": \"Yes In one of my team's projects, we were involved in the development of an e-commerce platform \", \"align\": \"center\" } }, { \"character\": \"Candidate\", \"startTime\": 10 24, \"finishTime\": 1476,\n\"dialogue\": {\n\"text\": \"We were responsible for the checkout process and it was a successful implementation \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Candidate\",\n\"opacity\": 0,\n\"startTime\": 15 26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2743,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b135e9029fb4f8141e40c.md",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "11e9e16d414c9eddafa153856bc8dee2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b15dbcafe4d5f39a5de82.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b15dbcafe4d5f39a5de82\ntitle: Task 22\nchallengeType: 19\ndashedName: task-22\n--description--\nThe word previous is used to describe something that happened before the current time or situation. It's often used to refer to past experiences, jobs, or events.\n--questions--\n--text--\nIn the context of Anna's question, what does previous refer to?\n--answers--\nPast roles and responsibilities\nFuture roles and responsibilities\n--feedback--\nPrevious refers to something that has already happened, not something in the future.\nCurrent roles and responsibilities\n--feedback--\nPrevious means something that happened before now, not what is happening currently.\nUnrelated roles and responsibilities\n--feedback--\nPrevious specifically relates to roles and responsibilities that were held before, not those unrelated.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 4.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.76,\n\"dialogue\": {\n\"text\": \"Hello, thanks for coming in today. Could you tell me about your previous roles and responsibilities?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.26\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1839,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b15dbcafe4d5f39a5de82.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ae94870469ff61fc952f420cff856c42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b163c9da40e62b904be1f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b163c9da40e62b904be1f\ntitle: Task 24\nchallengeType: 22\ndashedName: task-24\n--description--\nThis task is a review of the past simple interrogative. In questions, the simple past tense often begins with a past tense verb, followed by the subject and the rest of the sentence. This structure is used to ask about past events or states.\n--fillInTheBlank--\n--sentence--\nThat's great to hear. BLANK the members of the team BLANK BLANK any specific achievements or projects?\n--blanks--\nWere\n--feedback--\nThis is the past form of are used to ask about a past state or condition.\ninvolved\n--feedback--\nThink of a word that means participated in or engaged with.\nin\n--feedback--\nA preposition that often follows involved to indicate participation or inclusion.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.06,\n\"finishTimestamp\": 27.64\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.58,\n\"dialogue\": {\n\"text\": \"That's great to hear. Were the members of the team involved in any specific achievements or projects?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.08\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1765,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b163c9da40e62b904be1f.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5c7afc2ffbd76754e0e17bdf03e1b34e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b18e71067d6680b9ac5d3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b18e71067d6680b9ac5d3\ntitle: Task 25\nchallengeType: 19\ndashedName: task-25\n--description--\nThe word redesign means to design something again or differently. It's often used in the context of improving or updating the design of an existing product, service, or structure. In software and web development, redesigning is a common practice to enhance functionality, user experience, or aesthetics.\n--questions--\n--text--\nWhat does redesign imply in the Second Candidate's statement about the website project?\n--answers--\nTo design for the first time\n--feedback--\nRedesign implies working on something that already exists, not creating it for the first time.\nTo remove the design\n--feedback--\nRedesign means to change or improve the existing design, not to remove it.\nTo change or improve an existing design\nTo copy a design\n--feedback--\nRedesign involves making changes or improvements, not copying a design as it is.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.12,\n\"finishTimestamp\": 32.20\n}\n},\n\"commands\": [\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.08,\n\"dialogue\": {\n\"text\": \"Yes. Our team was involved in a project to redesign the company's website.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 5.58\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b18e71067d6680b9ac5d3.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "942ff0687b898adc437eef6e0d9c7b3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1985ae17886b05b382b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1985ae17886b05b382b1\ntitle: Task 27\nchallengeType: 19\ndashedName: task-27\n--description--\nThe term performance in a technical context often refers to how well a system or component operates, especially in terms of speed, efficiency, and reliability. For websites and software, performance can relate to how quickly pages load, the responsiveness of the application, or the stability of the system under various conditions.\n--questions--\n--text--\nWhat does performance refer to in the Second Candidate's statement about the website?\n--answers--\nA live presentation\n--feedback--\nWhile performance can mean a presentation, in this context, it relates to the functioning of the website.\nArtistic display\n--feedback--\nIn a technical context, performance refers to operational effectiveness, not an artistic aspect.\nFinancial success\n--feedback--\nPerformance in this context is about the website's operational aspects, not its financial success.\nHow well the website operates\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 32.70,\n\"finishTimestamp\": 37.84\n}\n},\n\"commands\": [\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 1,\n\"finishTime\": 6.14,\n\"dialogue\": {\n\"text\": \"We were responsible for implementing new features and ensuring that the website had fast performance.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 6.64\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1985ae17886b05b382b1.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "60ce3e87591cc80630905eef472abe4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b19bf7b32af6caf763ef7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b19bf7b32af6caf763ef7\ntitle: Task 28\nchallengeType: 19\ndashedName: task-28\n--description--\nThe term collaborative effort refers to a situation where people work together as a team to achieve a common goal. This kind of teamwork is essential in many work environments, especially on projects where different skills and perspectives are needed.\n--questions--\n--text--\nWhat does collaborative effort imply in the context of the Second Candidate's statement?\n--answers--\nWorking independently\n--feedback--\nCollaborative effort means working together as a team, not independently.\nTeamwork to achieve a goal\nAvoiding responsibility\n--feedback--\nCollaborative effort involves taking shared responsibility, not avoiding it.\nFocusing on individual skills\n--feedback--\nCollaborative effort emphasizes teamwork over individual skills.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 38.34,\n\"finishTimestamp\": 42.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.42,\n\"dialogue\": {\n\"text\": \"It was a collaborative effort and we were able to deliver the project on time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 5.92\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b19bf7b32af6caf763ef7.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "235f0de6ba67270c42e09d21c9a79d21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b160d6a8662610fe6a523.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b160d6a8662610fe6a523\ntitle: Task 23\nchallengeType: 22\ndashedName: task-23\n--description--\nThe simple past tense in English is used for actions or situations that were completed in the past Regular verbs in the past tense usually end with -ed, while irregular verbs have unique past forms For example, as you learned in previous tasks, was and were are the past forms of is and are Examples of simple past tense:\nI worked at a company (work becomes worked)\nI was happy (is becomes was)\nWe were busy (are becomes were)\n--fillInTheBlank--\n--sentence--\nHello Certainly I BLANK at Mock Corporation for five years I BLANK part of a team of software engineers, and we BLANK responsible for developing and maintaining various applications --blanks--\nworked\n--feedback--\nThink of the past tense of work, a regular verb that follows the usual -ed ending pattern was\n--feedback--\nRecall the past tense form of is, which changes to a completely different word in its irregular past form were\n--feedback--\nConsider the past tense of are, an irregular verb that also changes to a different word in the past --scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3 png\",\n\"characters\": [\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3 1-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5 96,\n\"finishTimestamp\": 18 22\n}\n},\n\"commands\": [\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5 96,\n\"dialogue\": {\n\"text\": \"Hello, certainly I worked at Mock Corporation for five years \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 6 34,\n\"finishTime\": 13 26,\n\"dialogue\": {\n\"text\": \"I was part of a team of software engineers and we were responsible for developing and maintaining various applications \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 13",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b160d6a8662610fe6a523.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1d4ce0baf0e97dd2a5882f9adda30a74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b160d6a8662610fe6a523.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1, \"startTime\": 0 }, { \"character\": \"Second Candidate\", \"startTime\": 1, \"finishTime\": 5 96, \"dialogue\": { \"text\": \"Hello, certainly I worked at Mock Corporation for five years \", \"align\": \"center\" } }, { \"character\": \"Second Candidate\", \"startTime\": 6 34, \"finishTime\": 13 26, \"dialogue\": { \"text\": \"I was part of a team of software engineers and we were responsible for developing and maintaining various applications \", \"align\": \"center\" } }, { \"character\": \"Second Candidate\", \"opacity\": 0, \"startTime\": 1376\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b160d6a8662610fe6a523.md",
      "source_type": "git_repo"
    },
    "token_count": 146,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d45f13486e570e6b134a986558d964c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a03df3ec46eca276046.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1a03df3ec46eca276046\ntitle: Task 26\nchallengeType: 22\ndashedName: task-26\n--description--\nListen to the dialogue and fill in the blanks with the correct words.\n--fillInTheBlank--\n--sentence--\nYes, our team BLANK involved in a project to BLANK the company's website.\n--blanks--\nwas\n--feedback--\nThis is the past tense form of is, used for singular subjects.\nredesign\n--feedback--\nThis word means to design something again in a different way.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 28.12,\n\"finishTimestamp\": 32.20\n}\n},\n\"commands\": [\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 1,\n\"finishTime\": 5.08,\n\"dialogue\": {\n\"text\": \"Yes, our team was involved in a project to redesign the company's website.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 5.58\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1442,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a03df3ec46eca276046.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2f4d386ed313a529738e350a4d280e20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a637e4dc571f8f4d3d7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1a637e4dc571f8f4d3d7\ntitle: Task 32\nchallengeType: 19\ndashedName: task-32\n--description--\nThe word appreciate is often used to express gratitude or to acknowledge the value or importance of something or someone's actions. It's a way of showing that you recognize and are thankful for someone's help, effort, or achievement.\n--questions--\n--text--\nIn a work meeting, your colleague says, I really appreciate your help on this project. What is your colleague expressing?\n--answers--\nDissatisfaction with your work\n--feedback--\nAppreciate means to be grateful or thankful, not to show dissatisfaction.\nIndifference to your contribution\n--feedback--\nAppreciate is used to express positive recognition, not indifference.\nGratitude for your contribution\nA need for more assistance\n--feedback--\nAppreciate here indicates satisfaction with the help received, not a request for more assistance.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 57.46,\n\"finishTimestamp\": 62.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.86,\n\"dialogue\": {\n\"text\": \"Impressive. We appreciate candidates with strong educational backgrounds and practical experience.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.36\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a637e4dc571f8f4d3d7.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ffcff673e535263cfbbf40279455ff5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a9581015573806e1e20.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1a9581015573806e1e20\ntitle: Task 29\nchallengeType: 22\ndashedName: task-29\n--description--\nListen to the dialogue and fill in the blanks with the correct words you learned.\n--fillInTheBlank--\n--sentence--\nWe BLANK responsible for implementing new features and ensuring the website had fast performance. It BLANK a BLANK effort, and we were able to deliver the project on time.\n--blanks--\nwere\n--feedback--\nThis is the past tense form of are, used for plural subjects.\nwas\n--feedback--\nThis is the past tense form of is, used for singular subjects.\ncollaborative\n--feedback--\nThis word means working together as a team.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 32.70,\n\"finishTimestamp\": 42.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 1,\n\"finishTime\": 6.14,\n\"dialogue\": {\n\"text\": \"We were responsible for implementing new features and ensuring that the website had fast performance.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 6.84,\n\"finishTime\": 11.06,\n\"dialogue\": {\n\"text\": \"It was a collaborative effort and we were able to deliver the project on time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 11.56\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2014,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a9581015573806e1e20.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "77e3ad29e72b5bd3bdb47d164636ef2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1cc072206e7ac3db88b8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1cc072206e7ac3db88b8\ntitle: Task 31\nchallengeType: 22\ndashedName: task-31\n--description--\nListen to the dialogue and fill in the missing words correctly. This is a great way to practice what you've learned.\n--fillInTheBlank--\n--sentence--\nI have a BLANK degree in computer science. My studies BLANK intensive, and I was introduced to many different methodologies.\n--blanks--\nmaster's\n--feedback--\nThis term, using the noun's noun structure, refers to an advanced academic degree.\nwere\n--feedback--\nThis is the past tense form of are used for plural subjects or things.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 49.38,\n\"finishTimestamp\": 56.76\n}\n},\n\"commands\": [\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 1,\n\"finishTime\": 8.38,\n\"dialogue\": {\n\"text\": \"I have a master's degree in computer science. My studies were intensive and I was introduced to many different methodologies.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 8.88\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1cc072206e7ac3db88b8.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8a3d9bfe47a590a5c92976605cb504b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d080265ba7c4f96bf79.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1d080265ba7c4f96bf79\ntitle: Task 33\nchallengeType: 22\ndashedName: task-33\n--description--\nThis task helps you review the word you learned. Listen to the dialogue and complete the sentence correctly.\n--fillInTheBlank--\n--sentence--\nImpressive! We BLANK candidates with strong educational backgrounds and practical experience.\n--blanks--\nappreciate\n--feedback--\nThis word means to recognize the value or importance of something or someone's actions.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-2.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 57.46,\n\"finishTimestamp\": 62.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.86,\n\"dialogue\": {\n\"text\": \"Impressive. We appreciate candidates with strong educational backgrounds and practical experience.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.36\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1421,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d080265ba7c4f96bf79.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "846b1d77a90474b664a4cd07abe146a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a27dc6daf6ffd52ff1f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1a27dc6daf6ffd52ff1f\ntitle: Task 30\nchallengeType: 19\ndashedName: task-30\n--description--\nIn English, the noun suffixed with 's followed by a second noun structure is used to show possession or belonging If the first noun is singular, as in Sarah's laptop, it indicates that the laptop belongs to Sarah However, if the first noun is plural, the structure changes to noun suffixed with ', as in teachers' office, indicating an office for teachers --questions--\n--text--\nWhat does master's degree in the context of the dialogue refer to --answers--\nA degree for school teachers\n--feedback--\nMaster's degree refers to an advanced academic degree, not specifically for teachers A primary level educational degree\n--feedback--\nMaster's degree is a higher education qualification, beyond the primary level A degree in mastering skills\n--feedback--\nWhile it implies expertise, master's degree specifically refers to an academic qualification An advanced academic degree\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"interview-room3 png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Second Candidate\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3 1-2 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 43 44,\n\"finishTimestamp\": 51 78\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5 72,\n\"dialogue\": {\n\"text\": \"Excellent Can you share details about your educational background Were you trained in a specific field \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 1,\n\"startTime\": 6\n},\n{\n\"character\": \"Second Candidate\",\n\"startTime\": 6 36,\n\"finishTime\": 9 34,\n\"dialogue\": {\n\"text\": \"Yes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2626,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a27dc6daf6ffd52ff1f.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "34b2416a80797ea485133ffc55813339",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a27dc6daf6ffd52ff1f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "78 } }, \"commands\": [ { \"character\": \"Anna\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Anna\", \"startTime\": 1, \"finishTime\": 5 72, \"dialogue\": { \"text\": \"Excellent Can you share details about your educational background Were you trained in a specific field \", \"align\": \"center\" } }, { \"character\": \"Anna\", \"opacity\": 0, \"startTime\": 6 }, { \"character\": \"Second Candidate\", \"opacity\": 1, \"startTime\": 6 }, { \"character\": \"Second Candidate\", \"startTime\": 6 36, \"finishTime\": 9 34, \"dialogue\": { \"text\": \"YesI have a master's degree in computer science \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Second Candidate\",\n\"opacity\": 0,\n\"startTime\": 9 84\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2626,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1a27dc6daf6ffd52ff1f.md",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a4576ad6773a2d3d71cf6e5adabe43d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1da0b27fef8117827ce5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1da0b27fef8117827ce5\ntitle: Task 35\nchallengeType: 19\ndashedName: task-35\n--description--\nYou've already learned about the simple past tense. Now, you can explore it further. The simple past tense is often formed by adding -ed to a verb. But, when a verb ends with an e, you just add a d. For example, notice becomes noticed.\n--questions--\n--text--\nWhat does noticed in Brian's sentence indicate?\n--answers--\nBrian observed something in the past\nBrian is planning to observe something\n--feedback--\nThe simple past tense noticed indicates a completed action in the past, not a future plan.\nBrian continuously observes something\n--feedback--\nThe simple past tense noticed is used for actions that were completed, not ongoing actions.\nBrian never observes anything\n--feedback--\nNoticed implies that Brian did observe something, not never observing.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 3.58\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.58,\n\"dialogue\": {\n\"text\": \"Hey, how's it going? I noticed you're relatively new here.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5.08\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1da0b27fef8117827ce5.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0e77e373ecb8353abd56509350f26468",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1dfec76149836ea5c7d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1dfec76149836ea5c7d0\ntitle: Task 40\nchallengeType: 22\ndashedName: task-40\n--description--\nThere are some verbs you can't use didn't to create negative sentences in the past. The verb to beis one of them.\nIf you want to create a negative sentence using the verb to be in the past, simply  add not after was or were. For example:\n| Affirmative | Negative |\n| --- | --- |\n| It was working normally. | It wasn't working normally. |\n| They were informed earlier. | They weren't informed earlier. |\nWasn't is the contraction of was not and weren't the contraction of were not.\n--fillInTheBlank--\n--sentence--\nIt BLANK exactly tech-related, but I learned a lot about problem-solving and critical thinking.\n--blanks--\nwasn't\n--feedback--\nThis word is used to make a negative statement in the past tense.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 13.22,\n\"finishTimestamp\": 17.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.18,\n\"dialogue\": {\n\"text\": \"It wasn't exactly tech related, but I learned a lot about problem solving and critical thinking.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.68\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1806,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1dfec76149836ea5c7d0.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fb3f1df52d85c3dacfb827324b687910",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1e2fad2ffe84ab420a56.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1e2fad2ffe84ab420a56\ntitle: Task 39\nchallengeType: 19\ndashedName: task-39\n--description--\nFor most verbs, if you want to make a negative sentence in the past tense, simply put didn't in front of the main verb.\nDidn't is short for did not.\nRemember that the main verb stays in its simple form. Only the auxiliary verb did is conjugated. For example:\nAffirmative sentence in the past: I worked yesterday - The Verb work is conjugated to the past.\nNegative sentence in the past: I didn't work yesterday - Only the auxiliary verb is conjugated to the past.\n--questions--\n--text--\nIf someone says that Sophie didn't study computer science, what could you understand from this sentence?\n--answers--\nSophie enjoyed the computer science degree\n--feedback--\nUsing didn't suggests she did not study it, contradicting the idea of enjoying it.\nComputer science is not something Sophie studied in college\nSophie always studies computer science\n--feedback--\nThis expression refers to a regular habit, not a specific event in the past.\nSophie is looking forward to studying computer science\n--feedback--\nThis option is about future anticipation.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.68,\n\"finishTimestamp\": 12.68\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5.00,\n\"dialogue\": {\n\"text\": \"I didn't study computer science at university, but I majored in electrical engineering.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 5.50\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2173,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1e2fad2ffe84ab420a56.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d81c7d592bf6ae48d72e1c1fd69ba3e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1e66159fec86336a737b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1e66159fec86336a737b\ntitle: Task 45\nchallengeType: 19\ndashedName: task-45\n--description--\nTypically, the simple past tense is formed by adding -ed to regular verbs. For instance, the verb play becomes played in the simple past. This tense is used to describe actions that were completed at a specific time in the past.\n--questions--\n--text--\nWhat does I played in Sophie's sentence suggest about her experience with coding?\n--answers--\nShe casually experimented with coding in the past\nShe is currently playing a coding game\n--feedback--\nPlayed is in the past tense, indicating a past action, not something happening currently.\nShe plans to start coding soon\n--feedback--\nPlayed implies she already has some experience with coding, not that she is planning to start.\nShe never tried coding\n--feedback--\nUsing played confirms she did engage in coding, contradicting the idea of never trying it.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 24.02,\n\"finishTimestamp\": 29.74\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 6.72,\n\"dialogue\": {\n\"text\": \"No, not really. I played around with coding, but most of my projects involved circuit designs and electrical systems.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 7.22\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1e66159fec86336a737b.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5028c3041621e980dc185800d837faf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1e9a62603587747f7f45.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1e9a62603587747f7f45\ntitle: Task 49\nchallengeType: 19\ndashedName: task-49\n--description--\nWhen you want to ask someone about their experiences related to a past event, you can say Did you enjoy...?\nThis is a simple way to ask about someone's preferences or satisfaction.\nEven if is used to introduce a condition or situation that contrasts with the main part of the question or statement. It helps to provide more context or specify conditions under which something occurred or was felt.\nFor example, Did you enjoy your vacation, even if it rained every day? adds a contrasting condition to the question about the vacation.\n--questions--\n--text--\nWhat does Brian want to know from Sophie?\n--answers--\nIf Sophie only did tech things\n--feedback--\nBrian knows Sophie's time was not all about tech.\nIf Sophie had a good time, even if it was not all about tech\nWhat tech things Sophie learned\n--feedback--\nBrian is asking about Sophie's feelings, not what she learned.\nIf Sophie will do more tech things later\n--feedback--\nBrian is asking about the past, not what Sophie will do.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 31.80,\n\"finishTimestamp\": 36.02\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 5.22,\n\"dialogue\": {\n\"text\": \"I see. Did you enjoy your time there, even if it wasn't entirely tech-focused?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5.72\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1e9a62603587747f7f45.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "70b9b72195354b7d258a8f3bf98cbe67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1f598f63008c8bdb20b8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1f598f63008c8bdb20b8\ntitle: Task 51\nchallengeType: 19\ndashedName: task-51\n--description--\nIn the simple past tense, some verbs are irregular and don't follow the regular -ed ending pattern. One example of this is the verb meet, which becomes met in the past tense. This is important to remember when talking about past events.\n--questions--\n--text--\nDuring a class reunion, an old friend tells you, We met for the first time in art class. What is your friend referring to with met?\n--answers--\nWe are meeting right now in art class\n--feedback--\nThe use of met indicates a past event, not something happening currently.\nOur first encounter was in the past, specifically in art class\nWe will meet for the first time soon\n--feedback--\nMet indicates a past action, not a future arrangement.\nWe have never been in art class together\n--feedback--\nMet suggests a past meeting.\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1f598f63008c8bdb20b8.md",
      "source_type": "git_repo"
    },
    "token_count": 215,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "994875f17221bd0563d6b33dbb2301c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1f981cd42e8dc3b282d9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1f981cd42e8dc3b282d9\ntitle: Task 52\nchallengeType: 19\ndashedName: task-52\n--description--\nYou'll learn another special case in this task. It's the past tense form of have. Unlike regular verbs that add -ed for the past tense, have becomes had. This irregular form is used for both singular and plural subjects in the past tense, making it a unique and important verb to remember.\n--questions--\n--text--\nWhat does had imply in a sentence like They had a meeting yesterday?\n--answers--\nThey possessed or experienced something in the past\nThey are having a meeting right now\n--feedback--\nHad is used for past actions, indicating the meeting occurred in the past, not at the present moment.\nThey will have a meeting tomorrow\n--feedback--\nHad indicates a past action, not a future plan.\nThey never have meetings\n--feedback--\nUsing had confirms that the meeting took place in the past.\n--video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1f981cd42e8dc3b282d9.md",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0fafcf6007968ccc51b348b3de87cf57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1fe950c0df90346e5d12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1fe950c0df90346e5d12\ntitle: Task 53\nchallengeType: 22\ndashedName: task-53\n--description--\nYou have already learned these words. Listen to the dialogue and fill in the blanks with the correct words.\n--fillInTheBlank--\n--sentence--\nI did. It was challenging, but I BLANK some fantastic people. We BLANK a bunch of fun coding marathons, although I BLANK always a very strong programmer.\n--blanks--\nmet\n--feedback--\nThis word is used here to describe encountering people in the past.\nhad\n--feedback--\nThis word is used to express possession or experiences in the past.\nwasn't\n--feedback--\nThis word is the negative form in the past tense, indicating something that was not the case.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 36.72,\n\"finishTimestamp\": 44.28\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 4.12,\n\"dialogue\": {\n\"text\": \"I did. It was challenging, but I met some fantastic people.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 4.74,\n\"finishTime\": 8.56,\n\"dialogue\": {\n\"text\": \"We had a bunch of fun coding marathons, although I wasn't always a very strong programmer.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 9.06\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1fe950c0df90346e5d12.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0d2992d863e3023b963d9207526ef0f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1f0585d48f8ac0b19654.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1f0585d48f8ac0b19654\ntitle: Task 50\nchallengeType: 22\ndashedName: task-50\n--description--\nWhen answering to a past simple interrogative (a question), you can answer affirmatively with did or negatively with didn't For example, Did you go to the party can be answered with I did (affirmative) or I didn't (negative) Listen to the dialogue and fill in the blanks correctly to practice this structure --fillInTheBlank--\n--sentence--\nBrian: I see BLANK you enjoy your time there, even if it wasn't entirely tech-focused Sophie: I BLANK --blanks--\nDid\n--feedback--\nThis word is used to form a past simple interrogative question The first letter should be capitalized did\n--feedback--\nThis response is an affirmative answer to the past simple interrogative question --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3 1-3 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 31 80,\n\"finishTimestamp\": 37 02\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 5 42,\n\"dialogue\": {\n\"text\": \"I see Did you enjoy your time there, even if it wasn't entirely tech focused \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5 45\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 5 45\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5 92,\n\"finishTime\": 6 22,\n\"dialogue\": {\n\"text\": \"I did \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 6 72\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2213,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1f0585d48f8ac0b19654.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5ce9fb2106a1c46ea3e3c304b86cea6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b201372864e91d4f5bb53.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b201372864e91d4f5bb53\ntitle: Task 54\nchallengeType: 22\ndashedName: task-54\n--description--\nThe rule for conjugating verbs in the past tense that end with y depends on the letter before the y. Here's how it works:\nIf the verb ends with a vowel followed by y simply add -ed to the end of the verb. For example: Stay becomes stayed.\nIf the verb ends with a consonant followed by y, change the y to i and add -ed. For example: study becomes studied.\n--fillInTheBlank--\n--sentence--\nI BLANK at a small college as well and BLANK in information technology.\n--blanks--\nstudied\n--feedback--\nThe past simple tense of study is formed by changing y to i and adding ed.\nmajored\n--feedback--\nThis word follows the regular past simple tense formation by just adding ed.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 47.08,\n\"finishTimestamp\": 51.16\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 5.08,\n\"dialogue\": {\n\"text\": \"I studied at a small college as well and majored in information technology.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5.58\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1744,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b201372864e91d4f5bb53.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ffd4cd68b44d3515dfca88ea7797ca0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b20338e0802931673c1e1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b20338e0802931673c1e1\ntitle: Task 55\nchallengeType: 22\ndashedName: task-55\n--description--\nRegular verbs that end with e have a simple rule for conjugating in the past tense. You just need to add a d to the end of the verb.\nThis rule helps to keep the pronunciation clear and avoids the addition of an extra syllable that could complicate the word's pronunciation.\nFor example:\nlive becomes lived.\n--fillInTheBlank--\n--sentence--\nIt was more hands-on, and I BLANK every bit of it.\n--blanks--\nloved\n--feedback--\nTo form the simple past, add d to the base form of the verb, love.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 51.72,\n\"finishTimestamp\": 54.64\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 3.92,\n\"dialogue\": {\n\"text\": \"It was more hands-on and I loved every bit of it.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 4.42\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1474,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b20338e0802931673c1e1.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "242bb6dc0644f889681e159153eec15a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b221b2ab0ac9e18a173ef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b221b2ab0ac9e18a173ef\ntitle: Task 61\nchallengeType: 22\ndashedName: task-61\n--description--\nLet's look at exactly and exact. You use exactly to show something is just right or very true. It is an adverb. For example, You did it exactly right!.\nExact is an adjective, and it describes something very correct or precise, like in the exact time.\n--fillInTheBlank--\n--sentence--\nShe knew the BLANK time of the meeting. She arrived BLANK at 3 pm.\n--blanks--\nexact\n--feedback--\nThis word is an adjective, describing the noun time.\nexactly\n--feedback--\nThis word is an adverb, showing that her arrival time was very precise.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b221b2ab0ac9e18a173ef.md",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bb0974e45e9bbb5dee5cc75410b3af7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b20985d315095e5c3851d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b20985d315095e5c3851d\ntitle: Task 57\nchallengeType: 19\ndashedName: task-57\n--description--\nGot is the past tense of get. Unlike regular verbs that typically add -ed for the past tense, get changes to got.\n--questions--\n--text--\nIn the context of Brian's statement, what does got imply about his experience?\n--answers--\nHe is getting the opportunity now\n--feedback--\nGot indicates a past opportunity, not something happening currently.\nHe had the opportunity in the past\nHe will get the opportunity in the future\n--feedback--\nGot refers to a past experience, not a future possibility.\nHe never gets such opportunities\n--feedback--\nGot in this context suggests he had, in fact, this opportunity.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 57.24,\n\"finishTimestamp\": 60.92\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4.68,\n\"dialogue\": {\n\"text\": \"I got to build and maintain networks and manage a few small projects.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 5.18\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1683,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b20985d315095e5c3851d.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d7d978591349ac5ff526831a498971f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b21e28a01039cb27b4f13.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b21e28a01039cb27b4f13\ntitle: Task 60\nchallengeType: 19\ndashedName: task-60\n--description--\nThe word exactly is used to emphasize the truth or accuracy of a statement or description. It can mean precisely or just. For example, if someone says, It's exactly what I needed, they mean that it is precisely or perfectly what was required. Exactly often highlights that something is correct in every detail.\n--questions--\n--text--\nWhat does exactly imply in a sentence like This is exactly the kind of work I enjoy?\n--answers--\nThis is somewhat similar to the work I enjoy\n--feedback--\nExactly indicates a perfect match, not just a similarity.\nThis is the opposite of the work I enjoy\n--feedback--\nExactly implies a perfect match, not an opposite.\nI am not sure if this is the work I enjoy\n--feedback--\nUsing exactly shows certainty, not uncertainty.\nThis is precisely the type of work that I find enjoyable\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1016,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b21e28a01039cb27b4f13.md",
      "source_type": "git_repo"
    },
    "token_count": 217,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5bd4c5794ce35aa02063a5c15c077a13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b223e41ce6b9f9a01d214.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b223e41ce6b9f9a01d214\ntitle: Task 62\nchallengeType: 22\ndashedName: task-62\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\n--sentence--\nThey BLANK BLANK big projects.\n--blanks--\nweren't\n--feedback--\nIt's the negative form of were in the past tense, used to say something was not true or did not happen.\nexactly\n--feedback--\nThis word is used to emphasize the statement, suggesting the projects were not precisely big.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 66.00,\n\"finishTimestamp\": 67.74\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 2.74,\n\"dialogue\": {\n\"text\": \"They weren't exactly big projects.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 3.24\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1318,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b223e41ce6b9f9a01d214.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "05cdc6b5508411486ecd2eb9d8fff025",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2340be1593a6517fe77b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2340be1593a6517fe77b\ntitle: Task 69\nchallengeType: 22\ndashedName: task-69\n--description--\nIn this dialogue, Alice is describing her educational background related to technology. Listen to the dialogue and complete the sentence.\n--fillInTheBlank--\n--sentence--\nI BLANK BLANK tech at a traditional university.\n--blanks--\ndidn't\n--feedback--\nThis contraction is used in the past simple negative to indicate that an action was not done.\nstudy\n--feedback--\nThe base form of the verb is used after the contraction in negative past simple sentences.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.20,\n\"finishTimestamp\": 7.52\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 3.32,\n\"dialogue\": {\n\"text\": \"I didn't study tech at a traditional university.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 3.82\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1435,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2340be1593a6517fe77b.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cc889f94cc4afd3ad65da96f9320ebdf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b1d4ec0e2587e8bcc95f7\ntitle: \"Dialogue 3: Two Workmates Talk About Their Backgrounds\"\nchallengeType: 21\ndashedName: dialogue-3-two-workmates-talk-about-their-backgrounds\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"3 1-3 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 4 88,\n\"dialogue\": {\n\"text\": \"Hey, how's it going I noticed you're relatively new here \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 4 96,\n\"finishTime\": 6 3,\n\"dialogue\": {\n\"text\": \"What's your background in tech \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 7,\n\"finishTime\": 9 3,\n\"dialogue\": {\n\"text\": \"Hey Yeah, I joined the team a few months ago \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 9 7,\n\"finishTime\": 11 84,\n\"dialogue\": {\n\"text\": \"I didn't study computer science at university,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 11 86,\n\"finishTime\": 13",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7824,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "af41fe0231b61504a1540bed4e8d3e3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"startTime\": 4 96, \"finishTime\": 6 3, \"dialogue\": { \"text\": \"What's your background in tech \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 7, \"finishTime\": 9 3, \"dialogue\": { \"text\": \"Hey Yeah, I joined the team a few months ago \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 9 7, \"finishTime\": 11 84, \"dialogue\": { \"text\": \"I didn't study computer science at university,\", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 11 86, \"finishTime\": 137,\n\"dialogue\": {\n\"text\": \"but I majored in electrical engineering \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 14 4,\n\"finishTime\": 16 40,\n\"dialogue\": {\n\"text\": \"It wasn't exactly tech-related, but I learned a lot\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 16 44,\n\"finishTime\": 18 4,\n\"dialogue\": {\n\"text\": \"about problem-solving and critical thinking \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 18 9,\n\"finishTime\": 19 5,\n\"dialogue\": {\n\"text\": \"That's interesting \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 20 1,\n\"finishTime\": 23 06,\n\"dialogue\": {\n\"text\": \"So, you didn't work on many programming projects\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 23 1,\n\"finishTime\": 24 2,\n\"dialogue\": {\n\"text\": \"during your studies, did you \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 25,\n\"finishTime\": 25 8,\n\"dialogue\": {\n\"text\": \"No, not really",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7824,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "c83749f548edc3eb7375d9ef01bc0a6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"startTime\": 18 9, \"finishTime\": 19 5, \"dialogue\": { \"text\": \"That's interesting \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 20 1, \"finishTime\": 23 06, \"dialogue\": { \"text\": \"So, you didn't work on many programming projects\", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 23 1, \"finishTime\": 24 2, \"dialogue\": { \"text\": \"during your studies, did you \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 25, \"finishTime\": 25 8, \"dialogue\": { \"text\": \"No, not really\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 26,\n\"finishTime\": 29,\n\"dialogue\": {\n\"text\": \"I played around with coding, but most of my projects involved\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 29 5,\n\"finishTime\": 31,\n\"dialogue\": {\n\"text\": \"circuit designs and electrical systems \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 31 2,\n\"finishTime\": 32 2,\n\"dialogue\": {\n\"text\": \"It was a bit different \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 33,\n\"finishTime\": 34 9,\n\"dialogue\": {\n\"text\": \"I see Did you enjoy your time there,\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 35,\n\"finishTime\": 37 2,\n\"dialogue\": {\n\"text\": \"even if it wasn't entirely tech-focused \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 37 7,\n\"finishTime\": 40 8,\n\"dialogue\": {\n\"text\": \"I did It was challenging, but I met some fantastic people \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 41 4,\n\"finishTime\": 43",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7824,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "93c2e46fc853d3a2a0e77153e94272fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"finishTime\": 34 9, \"dialogue\": { \"text\": \"I see Did you enjoy your time there,\", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 35, \"finishTime\": 37 2, \"dialogue\": { \"text\": \"even if it wasn't entirely tech-focused \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 37 7, \"finishTime\": 40 8, \"dialogue\": { \"text\": \"I did It was challenging, but I met some fantastic people \", \"align\": \"right\" } }, { \"character\": \"Sophie\", \"startTime\": 41 4, \"finishTime\": 434,\n\"dialogue\": {\n\"text\": \"We had a bunch of fun coding marathons,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 43 5,\n\"finishTime\": 45 3,\n\"dialogue\": {\n\"text\": \"although I wasn't always a very strong programmer \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 45 9,\n\"finishTime\": 47 5,\n\"dialogue\": {\n\"text\": \"Well, we all have different journeys \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 48,\n\"finishTime\": 52 2,\n\"dialogue\": {\n\"text\": \"I studied at a small college as well and majored in information technology \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 52 7,\n\"finishTime\": 55 6,\n\"dialogue\": {\n\"text\": \"It was more hands-on, and I loved every bit of it \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 55 9,\n\"finishTime\": 57 7,\n\"dialogue\": {\n\"text\": \"We didn't have to wear too many hats,\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 58,\n\"finishTime\": 59 8,\n\"dialogue\": {\n\"text\": \"but I got to build and maintain networks\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 59",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7824,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "25b2186160b510a43a735e4a17710adf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "52 7, \"finishTime\": 55 6, \"dialogue\": { \"text\": \"It was more hands-on, and I loved every bit of it \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 55 9, \"finishTime\": 57 7, \"dialogue\": { \"text\": \"We didn't have to wear too many hats,\", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 58, \"finishTime\": 59 8, \"dialogue\": { \"text\": \"but I got to build and maintain networks\", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 599,\n\"finishTime\": 61 9,\n\"dialogue\": {\n\"text\": \"and manage a few small projects \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 62 5,\n\"finishTime\": 63 4,\n\"dialogue\": {\n\"text\": \"That sounds cool \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 63 7,\n\"finishTime\": 66,\n\"dialogue\": {\n\"text\": \"Did you ever work on any big projects during your studies \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 67,\n\"finishTime\": 68 8,\n\"dialogue\": {\n\"text\": \"They weren't exactly big projects \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 69 2,\n\"finishTime\": 72 9,\n\"dialogue\": {\n\"text\": \"Most of them were smaller scale But it was a great learning experience \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 73 4,\n\"finishTime\": 76 7,\n\"dialogue\": {\n\"text\": \"It's fascinating to me how we all take different paths\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 76 8,\n\"finishTime\": 79 4,\n\"dialogue\": {\n\"text\": \"but end up in the same tech world, right \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 80 2,\n\"finishTime\": 82",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7824,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "fa3f65ccf515831bd0bb754f4beb8ee6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "them were smaller scale But it was a great learning experience \", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 73 4, \"finishTime\": 76 7, \"dialogue\": { \"text\": \"It's fascinating to me how we all take different paths\", \"align\": \"left\" } }, { \"character\": \"Brian\", \"startTime\": 76 8, \"finishTime\": 79 4, \"dialogue\": { \"text\": \"but end up in the same tech world, right \", \"align\": \"left\" } }, { \"character\": \"Sophie\", \"startTime\": 80 2, \"finishTime\": 828,\n\"dialogue\": {\n\"text\": \"Absolutely Let's grab a coffee sometime and chat more \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 83 3\n},\n{\n\"character\": \"Brian\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 83 8\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7824,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b1d4ec0e2587e8bcc95f7.md",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "8605c4c8718c169a6cfbfa9728043e08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2310b8cd52a4f15c1818.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2310b8cd52a4f15c1818\ntitle: Task 68\nchallengeType: 19\ndashedName: task-68\n--description--\nThe word unconventional is used to describe something that's not based on or conforming to what is generally done or believed It often implies a method or approach that is different from the norm --questions--\n--text--\nWhat does unconventional imply about Alice's background in tech --answers--\nHer background is different from the usual way people get into tech\nHer background is exactly the same as most people in tech\n--feedback--\nUnconventional means not following the usual conventions, which contradicts being the same as most people She doesn't have any background in tech\n--feedback--\nUnconventional suggests a different approach, not the absence of a background She followed a very traditional path into tech\n--feedback--\nUnconventional indicates a non-traditional path, not a very traditional one --video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1 4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3 1-4 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0 00,\n\"finishTimestamp\": 5 08\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 82,\n\"dialogue\": {\n\"text\": \"Hey, Alice, how did you get into tech \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 4\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 4 5,\n\"finishTime\": 6 08,\n\"dialogue\": {\n\"text\": \"My background is a bit unconventional",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2349,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2310b8cd52a4f15c1818.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "73515bbcb29d97c702012d2e461daf7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2310b8cd52a4f15c1818.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"startTimestamp\": 0 00, \"finishTimestamp\": 5 08 } }, \"commands\": [ { \"character\": \"Tom\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"Tom\", \"startTime\": 1, \"finishTime\": 3 82, \"dialogue\": { \"text\": \"Hey, Alice, how did you get into tech \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 4 }, { \"character\": \"Alice\", \"opacity\": 1, \"startTime\": 4 }, { \"character\": \"Alice\", \"startTime\": 4 5, \"finishTime\": 6 08, \"dialogue\": { \"text\": \"My background is a bit unconventional\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 6 58\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2349,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2310b8cd52a4f15c1818.md",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7e77dcbd4b8ff1f42672f312d9231f48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b23a413d28da927e087ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b23a413d28da927e087ca\ntitle: Task 71\nchallengeType: 22\ndashedName: task-71\n--description--\nMost is an adjective you can use when to talk about the biggest part of something. For example:\nWe completed most of our work before lunch, it means a group finished the biggest part of their work.\nMostly is an adverb. You use it to talk about what something is like most of the time. For example:\nThe office is mostly quiet in the mornings, means that usually, in the mornings, the office is quiet.\nSo, most talks about a big part of something, and mostly tells you what usually happens or what something is like most of the time.\n--fillInTheBlank--\n--sentence--\nI'm BLANK self-taught, and I took a lot of online courses.\n--blanks--\nmostly\n--feedback--\nThis word is used as an adverb to describe the main way Alice learned how to code.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.00,\n\"finishTimestamp\": 10.82\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 3.82,\n\"dialogue\": {\n\"text\": \"I'm mostly self-taught and I took a lot of online courses.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 4.32\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1745,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b23a413d28da927e087ca.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "221c9cd8b64fff44af9c94e1c5088947",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b236aa1eb9fa7b209aa03.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b236aa1eb9fa7b209aa03\ntitle: Task 70\nchallengeType: 19\ndashedName: task-70\n--description--\nThe word mostly is used to indicate that something is true to a large extent but not completely. It suggests that while other factors or methods may be involved, the primary aspect is what is mentioned.\n--questions--\n--text--\nIn Alice's statement, what does mostly suggest about her way of learning?\n--answers--\nShe only learned through formal education\n--feedback--\nMostly implies a greater emphasis on self-teaching rather than exclusive formal education.\nShe didn't learn anything on her own\n--feedback--\nThe use of mostly indicates a significant amount of self-learning, not an absence of it.\nShe learned equally through self-teaching and formal courses\n--feedback--\nMostly suggests a greater emphasis on one method over an equal balance.\nHer learning was primarily through her own efforts, with some formal courses\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.00,\n\"finishTimestamp\": 10.82\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 3.82,\n\"dialogue\": {\n\"text\": \"I'm mostly self-taught and I took a lot of online courses.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 4.32\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1872,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b236aa1eb9fa7b209aa03.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9776d48a97cec1977caa55063efeaadf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b23f03b449aac2c517089.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b23f03b449aac2c517089\ntitle: Task 73\nchallengeType: 22\ndashedName: task-73\n--description--\nThe word took is what you use instead of take when you're talking about something that happened in the past, like yesterday or last year.\nMost verbs get -ed added to them for the past tense, like play becomes played. But take is different; it changes to took.\n--fillInTheBlank--\n--sentence--\nI'm mostly self-taught, and I BLANK a lot of online courses.\n--blanks--\ntook\n--feedback--\nThis word is the past tense form of take. It's used to talk about actions that happened in the past.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.00,\n\"finishTimestamp\": 10.82\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 3.82,\n\"dialogue\": {\n\"text\": \"I'm mostly self-taught and I took a lot of online courses.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 4.32\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1406,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b23f03b449aac2c517089.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9f23af260bc89dc2933ddd161a6d144f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b242d06512dadaea55056.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b242d06512dadaea55056\ntitle: Task 75\nchallengeType: 19\ndashedName: task-75\n--description--\nThe verb attend means to be present at an event or place. It's often used regarding schools, colleges, meetings, or events. It implies regular participation or presence at a specific place or event.\n--questions--\n--text--\nIf a friend tells you, I'm going to attend the new art workshop, what are they planning to do?\n--answers--\nThey are planning to teach at the art workshop\n--feedback--\nAttend suggests participating as a learner or member, not as a teacher.\nThey might visit the workshop once\n--feedback--\nAttend implies regular or scheduled participation, not a one-time visit.\nThey are not interested in art workshops\n--feedback--\nSaying they will attend indicates interest and intent to participate, not a lack of interest.\nThey plan to participate in the art workshop\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b242d06512dadaea55056.md",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b79a3feeed0deb12b26d9c8f25d02f69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b23bc0e32f9aa9c62eb82.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b23bc0e32f9aa9c62eb82\ntitle: Task 72\nchallengeType: 19\ndashedName: task-72\n--description--\nThe word self-taught means learning things by yourself, not from a school or teacher. It's when you learn something on your own.\nThe word taught is from teach, which means to give someone knowledge or to show how to do something. So, if you are self-taught, you have learned something by yourself.\n--questions--\n--text--\nWhat does self-taught imply when someone says, I am self-taught in programming?\n--answers--\nThey were taught programming by a professional teacher\n--feedback--\nSelf-taught indicates learning independently, not being taught by a professional teacher.\nThey have no knowledge of programming\n--feedback--\nSelf-taught means they have acquired knowledge or skills, not that they lack them.\nThey learned programming on their own, without formal education\nThey are planning to learn programming in the future\n--feedback--\nSelf-taught refers to learning that has already taken place, not future plans.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.00,\n\"finishTimestamp\": 10.82\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 3.82,\n\"dialogue\": {\n\"text\": \"I'm mostly self-taught and I took a lot of online courses.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 4.32\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1976,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b23bc0e32f9aa9c62eb82.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "02ff788254c49a1788055ccd8a869665",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b227f7ad32ea17e2cdf28\ntitle: \"Dialogue 4: A Developer with a Different Background\"\nchallengeType: 21\ndashedName: dialogue-4-a-developer-with-a-different-background\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Alice\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"3 1-4 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 8,\n\"dialogue\": {\n\"text\": \"Hey, Alice How did you get into tech \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 4 5,\n\"finishTime\": 6,\n\"dialogue\": {\n\"text\": \"My background is a bit unconventional \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 6 2,\n\"finishTime\": 8 7,\n\"dialogue\": {\n\"text\": \"I didn't study tech at a traditional university \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 9 2,\n\"finishTime\": 11 8,\n\"dialogue\": {\n\"text\": \"I'm mostly self-taught, and I took a lot of online courses \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 12 1,\n\"finishTime\": 12",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b0a32714de6ed8b7d5719e83791711b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "6, \"dialogue\": { \"text\": \"My background is a bit unconventional \", \"align\": \"right\" } }, { \"character\": \"Alice\", \"startTime\": 6 2, \"finishTime\": 8 7, \"dialogue\": { \"text\": \"I didn't study tech at a traditional university \", \"align\": \"right\" } }, { \"character\": \"Alice\", \"startTime\": 9 2, \"finishTime\": 11 8, \"dialogue\": { \"text\": \"I'm mostly self-taught, and I took a lot of online courses \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 12 1, \"finishTime\": 129,\n\"dialogue\": {\n\"text\": \"That's interesting \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 13 3,\n\"finishTime\": 16 5,\n\"dialogue\": {\n\"text\": \"So, you didn't attend a regular college or anything like that \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 16 8,\n\"finishTime\": 17 7,\n\"dialogue\": {\n\"text\": \"No, not at all \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 17 9,\n\"finishTime\": 19,\n\"dialogue\": {\n\"text\": \"I was at a different job,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 19 1,\n\"finishTime\": 21 3,\n\"dialogue\": {\n\"text\": \"but I got really interested in programming and tech,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 21 5,\n\"finishTime\": 23 3,\n\"dialogue\": {\n\"text\": \"so I started learning in my free time \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 23 7,\n\"finishTime\": 26 5,\n\"dialogue\": {\n\"text\": \"That's impressive Did you enjoy learning on your own \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 27 1,\n\"finishTime\": 29 8,\n\"dialogue\": {\n\"text\": \"Absolutely",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "84b9a87666aeac72cdc8d7c6747574e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "I got really interested in programming and tech,\", \"align\": \"right\" } }, { \"character\": \"Alice\", \"startTime\": 21 5, \"finishTime\": 23 3, \"dialogue\": { \"text\": \"so I started learning in my free time \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 23 7, \"finishTime\": 26 5, \"dialogue\": { \"text\": \"That's impressive Did you enjoy learning on your own \", \"align\": \"left\" } }, { \"character\": \"Alice\", \"startTime\": 27 1, \"finishTime\": 29 8, \"dialogue\": { \"text\": \"AbsolutelyIt was challenging, but I loved it \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 29 8,\n\"finishTime\": 32,\n\"dialogue\": {\n\"text\": \"The flexibility of online learning allowed me\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 32 1,\n\"finishTime\": 33 8,\n\"dialogue\": {\n\"text\": \"to balance my job and my studies \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 34 6,\n\"finishTime\": 37 1,\n\"dialogue\": {\n\"text\": \"Did you work on any projects during your self-study \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 37 5,\n\"finishTime\": 41 2,\n\"dialogue\": {\n\"text\": \"Yes, I did I built a few small web applications, just to practice \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 41 6,\n\"finishTime\": 43 6,\n\"dialogue\": {\n\"text\": \"It was a great way to apply what I learned \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 44 3,\n\"finishTime\": 45 5,\n\"dialogue\": {\n\"text\": \"I admire your dedication \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 46,\n\"finishTime\": 48 6,\n\"dialogue\": {\n\"text\": \"It is amazing how far you got studying by yourself",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "1d41b7e0a473acf0d3010f20b2fe86f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to practice \", \"align\": \"right\" } }, { \"character\": \"Alice\", \"startTime\": 41 6, \"finishTime\": 43 6, \"dialogue\": { \"text\": \"It was a great way to apply what I learned \", \"align\": \"right\" } }, { \"character\": \"Tom\", \"startTime\": 44 3, \"finishTime\": 45 5, \"dialogue\": { \"text\": \"I admire your dedication \", \"align\": \"left\" } }, { \"character\": \"Tom\", \"startTime\": 46, \"finishTime\": 48 6, \"dialogue\": { \"text\": \"It is amazing how far you got studying by yourself\",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Alice\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 49 1\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 49 6\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b227f7ad32ea17e2cdf28.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b07649cc1c5092003334f36457b3fac3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b24542024c8af092cd6c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b24542024c8af092cd6c4\ntitle: Task 76\nchallengeType: 22\ndashedName: task-76\n--description--\nListen to the dialogue and fill in the blanks with the missing words.\n--fillInTheBlank--\n--sentence--\nSo, you BLANK BLANK a regular college or anything like that?\n--blanks--\ndidn't\n--feedback--\nThis contraction is used to form a negative statement in the past tense.\nattend\n--feedback--\nThe word means being present at an event or place.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 12.16,\n\"finishTimestamp\": 15.32\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 4.16,\n\"dialogue\": {\n\"text\": \"So you didn't attend a regular college or anything like that?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.66\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1340,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b24542024c8af092cd6c4.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c46dc2b5c5531f09c8e70a786d980dc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b24774d8cdab052ffe2a6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b24774d8cdab052ffe2a6\ntitle: Task 74\nchallengeType: 22\ndashedName: task-74\n--description--\nListen to the audio and fill in the blanks correctly.\n--fillInTheBlank--\n--sentence--\nI BLANK study tech at a traditional university. I'm mostly BLANK, and I BLANK a lot of online courses.\n--blanks--\ndidn't\n--feedback--\nThis word is used to form a negative statement in the past tense.\nself-taught\n--feedback--\nThis word describes acquiring knowledge or skills independently. It's made of two parts: the first means own or personal, and the second is related to learning or education.\ntook\n--feedback--\nThis word is the past tense form of a verb meaning to have completed an action.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.20,\n\"finishTimestamp\": 10.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 3.52,\n\"dialogue\": {\n\"text\": \"I didn't study tech at a traditional university.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 4,\n\"finishTime\": 6.42,\n\"dialogue\": {\n\"text\": \"I'm mostly self-taught and I took a lot of online courses.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 6.92\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1865,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b24774d8cdab052ffe2a6.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1c194d5c4f118bea548a3165f088652c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b24a500800cb1c6945da9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b24a500800cb1c6945da9\ntitle: Task 77\nchallengeType: 22\ndashedName: task-77\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\n--sentence--\nNo, not at all. I BLANK at a different job, but I got really interested in programming and tech, so I BLANK learning in my free time.\n--blanks--\nwas\n--feedback--\nUse to be in the past tense.\nstarted\n--feedback--\nUse the verb startin the past tense.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 15.62,\n\"finishTimestamp\": 22.08\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 5.5,\n\"dialogue\": {\n\"text\": \"No, not at all. I was at a different job, but I got really interested in programming and tech.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 5.72,\n\"finishTime\": 7.46,\n\"dialogue\": {\n\"text\": \"So I started learning in my free time.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 7.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b24a500800cb1c6945da9.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9030d8003a865f035401194180172982",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2be1b19500c63fc1a467.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2be1b19500c63fc1a467\ntitle: Task 78\nchallengeType: 22\ndashedName: task-78\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\n--sentence--\nBLANK you BLANK on any projects during your self-study?\n--blanks--\nDid\n--feedback--\nAuxiliary verb for questions in the past. This word should be capitalized.\nwork\n--feedback--\nA verb used to describe an activity related to earning a living.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 33.46,\n\"finishTimestamp\": 35.98\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3.52,\n\"dialogue\": {\n\"text\": \"Did you work on any projects during your self-study?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 4.02\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1304,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2be1b19500c63fc1a467.md",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e538f646c58b0386de0b5ed5765b4b46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2c040bb5f6c77fa5df80.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2c040bb5f6c77fa5df80\ntitle: Task 79\nchallengeType: 22\ndashedName: task-79\n--description--\nThis task is a review exercise. You'll be filling in blanks with words you're already familiar with.\n--fillInTheBlank--\n--sentence--\nAbsolutely. It BLANK challenging, but I BLANK it.\n--blanks--\nwas\n--feedback--\nThis is the past tense form of the verb to be, used for singular subjects.\nloved\n--feedback--\nThis is the past tense form of a verb expressing a strong liking or enjoyment.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 25.96,\n\"finishTimestamp\": 28.42\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 3.46,\n\"dialogue\": {\n\"text\": \"Absolutely. It was challenging, but I loved it.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 3.96\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2c040bb5f6c77fa5df80.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9ae24248e5daaca705359c1a9b6e1401",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2d618b8851cc5baf9490.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2d618b8851cc5baf9490\ntitle: Task 80\nchallengeType: 22\ndashedName: task-80\n--description--\nListen to the audio and complete the sentence.\n--fillInTheBlank--\nFill in the blank with correct words.\n--sentence--\nYes, I did. I built a few small web applications, just to practice. It BLANK a great way to apply what I BLANK.\n--blanks--\nwas\n--feedback--\nThis is the past tense form of to be, used here for a singular subject.\nlearned\n--feedback--\nThis is the past tense form of learn, indicating the acquisition of knowledge or skills in the past.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Alice\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 36.54,\n\"finishTimestamp\": 42.54\n}\n},\n\"commands\": [\n{\n\"character\": \"Alice\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Alice\",\n\"startTime\": 1,\n\"finishTime\": 7.00,\n\"dialogue\": {\n\"text\": \"Yes, I did. I built a few small web applications just to practice. It was a great way to apply what I learned.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Alice\",\n\"opacity\": 0,\n\"startTime\": 7.50\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1566,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2d618b8851cc5baf9490.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "48f36271d0194aff5f18dd5bae424ae2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2d9cb974dace59024964.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2d9cb974dace59024964\ntitle: Task 81\nchallengeType: 19\ndashedName: task-81\n--description--\nThe word got in this context is a versatile term and can have several meanings. In its simplest form, it's the past tense of get, which can mean to receive, arrive, become, or reach, depending on the context. In Tom's statement, got refers to the progress or level Alice reached through self-study.\n--questions--\n--text--\nWhat does got imply in Tom's statement about Alice's progress?\n--answers--\nShe received something while studying\n--feedback--\nWhile got can mean receiving, in this context it refers to the extent or level of progress.\nShe achieved or reached a significant level in her studies\nShe needs to get more resources for studying\n--feedback--\nGot here refers to past progress, not a current need for more resources.\nShe didn't make any progress in her studies\n--feedback--\nGot in this sentence clearly indicates significant progress, not a lack of it.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-breakroom.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-4.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 43.10,\n\"finishTimestamp\": 47.46\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.36,\n\"dialogue\": {\n\"text\": \"I admire your dedication. It's amazing how far you got studying by yourself.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.86\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2d9cb974dace59024964.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "178b8e1224f1595dde97565381d8c5ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2ec6c054efd71e503a27.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2ec6c054efd71e503a27\ntitle: Task 84\nchallengeType: 19\ndashedName: task-84\n--description--\nThe word actually is used when you want to tell the real fact about something, especially if it's different from what someone thought or said. It's like saying, No, this is how it really is. You use actually to make your point stronger or to correct what someone else said.\n--questions--\n--text--\nWhat does actually imply in a sentence like I actually prefer working remotely?\n--answers--\nThe truth is contrary to what might have been assumed or stated before\nI never work remotely\n--feedback--\nActually in this context is used to express a real preference.\nI always work in an office setting\n--feedback--\nUsing actually here is meant to reveal a preference for remote work, not office work.\nI don't have any work preferences\n--feedback--\nActually suggests a specific preference, contradicting the idea of having none.\n--video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2ec6c054efd71e503a27.md",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a0cfb2576e722198fbaa500ffafb5b4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2eeb31e435d89ecce6f3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2eeb31e435d89ecce6f3\ntitle: Task 85\nchallengeType: 22\ndashedName: task-85\n--description--\nIn this task, you'll learn about the word actual. It's an adjective, which is a type of word that describes something. When you say actual, you're talking about what something is really like. For instance, when you talk about the actual color, you mean the real color of something.\nOften, you can add -ly to an adjective to make it an adverb. Adverbs are words that tell us how something is said or done. So, when you add -ly to actual, you get actually, which is an adverb.\nRead the sentence below and place the words actualand actually in the correct place.\n--fillInTheBlank--\n--sentence--\nThe BLANK size of the room was quite small. She BLANK likes small cozy spaces.\n--blanks--\nactual\n--feedback--\nThis word describes the real size of the room.\nactually\n--feedback--\nThis word is used to say she really likes small spaces.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 994,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2eeb31e435d89ecce6f3.md",
      "source_type": "git_repo"
    },
    "token_count": 233,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c664114b7e1621111c580c23c9a488b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2e0666d4a9d1b851f90e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2e0666d4a9d1b851f90e\ntitle: Task 83\nchallengeType: 19\ndashedName: task-83\n--description--\nThe term tech recruiter refers to a professional role focused on recruiting candidates for technology-related positions. This role involves understanding the tech industry, identifying qualified candidates, and matching them with suitable tech job openings.\n--questions--\n--text--\nWhat is Tom asking about when he mentions Tech recruiter in his question?\n--answers--\nThe technical skills needed to be a recruiter\n--feedback--\nTech recruiter here refers to the job role, not the specific skills required for the job.\nThe technology used by recruiters\n--feedback--\nWhile technology is involved, Tech recruiter refers to the profession itself, not the tools used.\nThe person's career path in becoming a technology recruitment specialist\nRecruiting people to learn technology\n--feedback--\nTech recruiter is about hiring for tech roles, not recruiting people to learn technology.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 4.16\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.16,\n\"dialogue\": {\n\"text\": \"Hey, I've been curious about your background. How did you end up as a tech recruiter?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.66\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1968,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2e0666d4a9d1b851f90e.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "17660e759ab517e203efeefef6823315",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2f0b3bcfe7d9f4151854.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2f0b3bcfe7d9f4151854\ntitle: Task 86\nchallengeType: 19\ndashedName: task-86\n--description--\nTherapist and counselor are words for people who help others with their feelings and thoughts. They give advice and support to those who are having a tough time with their emotions or mind.\n--questions--\n--text--\nIn Anna's statement, what does therapist or counselor refer to?\n--answers--\nJobs in the technology industry\n--feedback--\nTherapist or counselor refers to mental health and emotional support roles, not technology-related jobs.\nJobs in mental health and emotional support\nEducational courses she wanted to take\n--feedback--\nWhile these roles require education, the terms directly refer to the job roles, not the courses.\nHobbies that she was interested in\n--feedback--\nTherapist or counselor are professional career paths, not hobbies.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.96,\n\"finishTimestamp\": 11.36\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.40,\n\"dialogue\": {\n\"text\": \"I actually studied psychology in college. My plan was to become a therapist or counselor\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 5.90\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1853,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2f0b3bcfe7d9f4151854.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "25791c3e5a5a1ce64d13b497b70bd521",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2f6cb66826dcbac08094.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2f6cb66826dcbac08094\ntitle: Task 88\nchallengeType: 19\ndashedName: task-88\n--description--\nOrganizational psychology is a field of psychology that studies how people interact within groups, particularly in workplace settings. It focuses on understanding workplace dynamics, employee behavior, and organizational structure to improve the work environment and increase productivity.\n--questions--\n--text--\nWhat does organizational psychology typically involve?\n--answers--\nIt deals with organizing office spaces\n--feedback--\nWhile organization is a part of the field, organizational psychology primarily focuses on people and behavior, not physical space.\nIt's about the psychology of organizing events\n--feedback--\nOrganizational psychology is not specifically about event planning but rather about behavior in workplace groups.\nIt's the study of how people behave and interact in workplace groups\nIt focuses on individual psychological treatment\n--feedback--\nOrganizational psychology looks at group dynamics in workplaces, not individual therapy.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.86,\n\"finishTimestamp\": 14.98\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 4.12,\n\"dialogue\": {\n\"text\": \"During my last year, I took a course in organizational psychology.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 4.62\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2019,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2f6cb66826dcbac08094.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b599577c6fdfa251b841dac161edaf43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2f3bf7a2cbdb58d959d5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2f3bf7a2cbdb58d959d5\ntitle: Task 87\nchallengeType: 19\ndashedName: task-87\n--description--\nThe word last helps you talk about the time that just passed.\nWhen you say last year, it means the year that finished before this one.\nLast month is the month that ended before this one.\nAnd last week is the week that came before this week.\nUsing words like last year, last month, last week, or last day is a way to talk about things that happened not too long ago.\n--questions--\n--text--\nWhen someone mentions in a discussion about changes, I switched careers last year. What does last year indicate about the timing of their career change?\n--answers--\nThey are planning to switch careers in the near future\n--feedback--\nThis suggests a future action, but last year indicates the change already occurred in the past.\nThey have been considering a career change for a long time\n--feedback--\nThough they might have considered it for a long time, last year specifically identifies when the change took place.\nThe career change is happening currently\n--feedback--\nLast year refers to a completed action in the past, not something happening in the present.\nThe career switch happened in the previous year\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 11.86,\n\"finishTimestamp\": 14.98\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 4.12,\n\"dialogue\": {\n\"text\": \"During my last year, I took a course in organizational psychology.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 4.62\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2184,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2f3bf7a2cbdb58d959d5.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6a2c6be43f9a3eca11b8efff72ba36df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2fa89ddc20de629ca21f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2fa89ddc20de629ca21f\ntitle: Task 89\nchallengeType: 22\ndashedName: task-89\n--description--\nThis task is a review exercise. You will fill in the blanks with words you have already learned.\n--fillInTheBlank--\n--sentence--\nI BLANK studied psychology in college. My plan was to become a BLANK or counselor.\n--blanks--\nactually\n--feedback--\nThis word is used to emphasize the accuracy or truth of a statement.\ntherapist\n--feedback--\nThis word refers to a professional role focused on mental health and emotional support.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.96,\n\"finishTimestamp\": 11.56\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.60,\n\"dialogue\": {\n\"text\": \"I actually studied psychology in college. My plan was to become a therapist or counselor.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.10\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2fa89ddc20de629ca21f.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "359ae48ecf83ca68b604da1bdeec127b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2fc9c0f96bdfddfce4d9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2fc9c0f96bdfddfce4d9\ntitle: Task 90\nchallengeType: 22\ndashedName: task-90\n--description--\nIn this exercise, you will explore the phrase pique one's interest. This phrase means to stimulate or arouse someone's curiosity or interest in something. It's often used when something catches your attention and makes you want to learn more about it. Alongside this phrase, you will fill in the blanks with familiar words that you've already learned.\n--fillInTheBlank--\n--sentence--\nI BLANK a course in organizational BLANK, and it BLANK my interest in the workplace and employee dynamics.\n--blanks--\ntook\n--feedback--\nThis word refers to the action of participating in or completing a course.\npsychology\n--feedback--\nThis word describes the study of the mind and behavior, particularly in a workplace setting in this context.\npiqued\n--feedback--\nThis word means to arouse or stimulate interest or curiosity. You should correctly use its simple past tense.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 13.14,\n\"finishTimestamp\": 18.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 6.48,\n\"dialogue\": {\n\"text\": \"I took a course in organizational psychology and it piqued my interest in the workplace and employee dynamics.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.98\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2fc9c0f96bdfddfce4d9.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "83a871c8b46eab6bfdde85d54853c65b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b3026ff79fbe2dda6cb39.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b3026ff79fbe2dda6cb39\ntitle: Task 92\nchallengeType: 19\ndashedName: task-92\n--description--\nThe phrase That's a cool twist is often used to express that something is interestingly unexpected or surprisingly different. The word twist here refers to a change or development in a situation or story that is unusual or unexpected. Cool in this context means it's positively received.\n--questions--\n--text--\nWhat is Tom expressing when he says That's a cool twist?\n--answers--\nHe finds the unexpected change or development interesting\nHe thinks the situation is confusing\n--feedback--\nWhile a twist can be surprising, Tom's use of cool suggests he finds it interesting rather than confusing.\nHe is unhappy with the new development\n--feedback--\nCool twist usually indicates a positive reaction, not dissatisfaction.\nHe expected the development all along\n--feedback--\nThe term twist implies that the development was unexpected.\n--video-solution--\n1\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18.82,\n\"finishTimestamp\": 23.06\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5.24,\n\"dialogue\": {\n\"text\": \"That's a cool twist. Did you immediately start working as a tech recruiter after college?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5.74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1938,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b3026ff79fbe2dda6cb39.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "39aa2b0262982e7cbc4cd671ca7fdc50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2fea728c2be14a8a98c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2fea728c2be14a8a98c4\ntitle: Task 91\nchallengeType: 19\ndashedName: task-91\n--description--\nEmployee dynamics refers to the way employees interact and work together in a workplace. It's an example of using one noun (employee) to describe another noun (dynamics). This type of descriptive noun helps give more specific information about the subject. Other examples include race car, where race describes the type of car, and garden hose, where garden describes the type of hose.\n--questions--\n--text--\nWhat does employee dynamics refer to in a workplace context?\n--answers--\nThe dynamics of machines used by employees\n--feedback--\nEmployee dynamics specifically refers to interactions and relationships among employees, not machinery.\nThe interactions and relationships among employees\nThe employment status of workers\n--feedback--\nEmployee dynamics is about how employees work together, not their employment status.\nThe dynamics of hiring new employees\n--feedback--\nEmployee dynamics refers to existing employee interactions, not the hiring process.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 13.14,\n\"finishTimestamp\": 18.62\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 6.48,\n\"dialogue\": {\n\"text\": \"I took a course in organizational psychology and it piqued my interest in the workplace and employee dynamics.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 6.98\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2121,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2fea728c2be14a8a98c4.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "38c815e202ba1ca65f598e5f8d885a3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b306fe94f29e4b4aa9105.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b306fe94f29e4b4aa9105\ntitle: Task 93\nchallengeType: 19\ndashedName: task-93\n--description--\nThe phrase not right away is used to indicate that something didn't happen immediately or at the earliest opportunity. It suggests that there was a delay or a period before the action or change took place. This phrase helps to set the timeline of events or actions.\n--questions--\n--text--\nWhat does Anna mean when she says not right away?\n--answers--\nShe immediately started working in HR at a tech company\n--feedback--\nNot right away indicates a delay or period before taking action, not immediate action.\nShe started working in a different role before moving to HR at a tech company\nShe has never worked in HR\n--feedback--\nThe statement implies she did work in HR, just not immediately.\nShe was always focused on training and development\n--feedback--\nNot right away suggests a progression or change over time, not a constant focus.\n--video-solution--\n2\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 23.66,\n\"finishTimestamp\": 30.24\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 7.58,\n\"dialogue\": {\n\"text\": \"Not right away. I worked in a general HR role at a non-tech company first, focusing on training and development.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 8.08\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b306fe94f29e4b4aa9105.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e0cdcfbc8801c1394d7a277d07139c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2dd7745fdcd03e5160f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b2dd7745fdcd03e5160f4\ntitle: \"Dialogue 5: Anna Talks About her Experience\"\nchallengeType: 21\ndashedName: dialogue-5-anna-talks-about-her-experience\n--description--\nWatch the video below to understand the context of the upcoming lessons --assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 }\n},\n{\n\"character\": \"Anna\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 }\n}\n],\n\"audio\": {\n\"filename\": \"3 1-5 mp3\",\n\"startTime\": 1\n},\n\"alwaysShowDialogue\": true\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": 25, \"y\": 0, \"z\": 1 },\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"position\": { \"x\": 70, \"y\": 0, \"z\": 1 },\n\"startTime\": 0 5\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 3 36,\n\"dialogue\": {\n\"text\": \"Hey, I've been curious about your background \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 3 6,\n\"finishTime\": 5 16,\n\"dialogue\": {\n\"text\": \"How did you end up as a Tech recruiter \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 6,\n\"finishTime\": 7 6,\n\"dialogue\": {\n\"text\": \"Hey It's an interesting story \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 7 9,\n\"finishTime\": 10 2,\n\"dialogue\": {\n\"text\": \"I actually studied psychology in college \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 10 3,\n\"finishTime\": 12 55,\n\"dialogue\": {\n\"text\": \"My plan was to become a therapist or counselor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2dd7745fdcd03e5160f4.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "55cdbb724097bf27cf90bb3fc37b744b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2dd7745fdcd03e5160f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "end up as a Tech recruiter \", \"align\": \"left\" } }, { \"character\": \"Anna\", \"startTime\": 6, \"finishTime\": 7 6, \"dialogue\": { \"text\": \"Hey It's an interesting story \", \"align\": \"right\" } }, { \"character\": \"Anna\", \"startTime\": 7 9, \"finishTime\": 10 2, \"dialogue\": { \"text\": \"I actually studied psychology in college \", \"align\": \"right\" } }, { \"character\": \"Anna\", \"startTime\": 10 3, \"finishTime\": 12 55, \"dialogue\": { \"text\": \"My plan was to become a therapist or counselor\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 12 6,\n\"finishTime\": 16 3,\n\"dialogue\": {\n\"text\": \"But during my last year, I took a course in organizational psychology,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 16 4,\n\"finishTime\": 19 6,\n\"dialogue\": {\n\"text\": \"and it piqued my interest in the workplace and employee dynamics \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 20,\n\"finishTime\": 21,\n\"dialogue\": {\n\"text\": \"That's a cool twist \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 21 3,\n\"finishTime\": 24 3,\n\"dialogue\": {\n\"text\": \"Did you immediately start working as a tech recruiter after college \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 24 6,\n\"finishTime\": 25 4,\n\"dialogue\": {\n\"text\": \"Not right away \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 25 7,\n\"finishTime\": 29,\n\"dialogue\": {\n\"text\": \"I worked in a general HR role at a non-tech company first,\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 29 1,\n\"finishTime\": 31 3,\n\"dialogue\": {\n\"text\": \"focusing on training and development",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2dd7745fdcd03e5160f4.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e737028e9af7ba64dc9c96540eeb4bbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2dd7745fdcd03e5160f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "working as a tech recruiter after college \", \"align\": \"left\" } }, { \"character\": \"Anna\", \"startTime\": 24 6, \"finishTime\": 25 4, \"dialogue\": { \"text\": \"Not right away \", \"align\": \"right\" } }, { \"character\": \"Anna\", \"startTime\": 25 7, \"finishTime\": 29, \"dialogue\": { \"text\": \"I worked in a general HR role at a non-tech company first,\", \"align\": \"right\" } }, { \"character\": \"Anna\", \"startTime\": 29 1, \"finishTime\": 31 3, \"dialogue\": { \"text\": \"focusing on training and development\",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 31 7,\n\"finishTime\": 33 4,\n\"dialogue\": {\n\"text\": \"What made you make the jump to tech \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 34 3,\n\"finishTime\": 38 2,\n\"dialogue\": {\n\"text\": \"I saw that tech companies appreciate innovation and care for the employees' well-being \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 38 9,\n\"finishTime\": 42,\n\"dialogue\": {\n\"text\": \"This is directly related to what made me want to become a psychologist \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 42 5,\n\"finishTime\": 44 2,\n\"dialogue\": {\n\"text\": \"So basically, that's what brought me here \",\n\"align\": \"right\"\n}\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 44 8,\n\"finishTime\": 47 4,\n\"dialogue\": {\n\"text\": \"Awesome It was great to get to know you better \",\n\"align\": \"left\"\n}\n},\n{\n\"character\": \"Anna\",\n\"position\": { \"x\": 125, \"y\": 0, \"z\": 1 },\n\"startTime\": 47 9\n},\n{\n\"character\": \"Tom\",\n\"position\": { \"x\": -25, \"y\": 0, \"z\": 1 },\n\"startTime\": 48 4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b2dd7745fdcd03e5160f4.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "31fafe6597518558060c82e1bd6192a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b30e1b9f035e7e656fd01.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b30e1b9f035e7e656fd01\ntitle: Task 95\nchallengeType: 19\ndashedName: task-95\n--description--\nAn employee is a person who works for a company or another person. Talking about employees' well-being means you're discussing the health and happiness of the people working at a place. The ' after employees shows that the well-being belongs to them. For example:\nThe project's code, means the code belongs to one project. If you're talking about several projects and say the projects' code, it means the code belongs to more than one project.\n--questions--\n--text--\nWhat does Anna mean by saying employees' well-being.\n--answers--\nIt's about the health of the company\n--feedback--\nEmployees' means the people who work, not the company.\nOne worker's health and happiness\n--feedback--\nEmployees' with an s' shows it's about all workers, not just one.\nWhere the employees work\n--feedback--\nWell-being is about health and happiness, not a place.\nThe health and happiness of all the workers\n--video-solution--\n4\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 33.10,\n\"finishTimestamp\": 37.22\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 5.12,\n\"dialogue\": {\n\"text\": \"I saw that tech companies appreciate innovation and care for their employees' well-being.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 5.62\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b30e1b9f035e7e656fd01.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4b4d80a392bb5687a57a8afd8a6afdcf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b315533e4edeba65111b8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b315533e4edeba65111b8\ntitle: Task 96\nchallengeType: 19\ndashedName: task-96\n--description--\nA psychologist is a professional who studies the human mind and behavior. They often help people understand and manage their emotions, behaviors, and mental processes. In Anna's statement, she refers to becoming a psychologist, indicating her professional choice related to studying and working with psychology.\n--questions--\n--text--\nWhat does psychologist mean in Anna's statement?\n--answers--\nIt means someone who studies physics\n--feedback--\nPsychologist refers to a person who studies the mind and behavior, not physics.\nIt's a type of medical doctor\n--feedback--\nWhile related to health, a psychologist is different from a medical doctor and focuses on mental processes.\nA professional who studies and works with the human mind and behavior\nA teacher at a school\n--feedback--\nA psychologist may teach, but their primary role is studying and working with the mind and behavior, not general teaching.\n--video-solution--\n3\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking.png\",\n\"characters\": [\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-5.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 37.70,\n\"finishTimestamp\": 40.88\n}\n},\n\"commands\": [\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 1,\n\"finishTime\": 4.18,\n\"dialogue\": {\n\"text\": \"This is directly related to what made me want to become a psychologist.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 4.68\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1967,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b315533e4edeba65111b8.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bae7e727dbf54e98f4bf0241bba891c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b30ac03b523e6640deaf1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657b30ac03b523e6640deaf1\ntitle: Task 94\nchallengeType: 22\ndashedName: task-94\n--description--\nThis task is a review exercise You will practice filling in the blanks with words that you have already learned --fillInTheBlank--\n--sentence--\nTom: That's a cool BLANK BLANK you immediately start working as a tech recruiter after college Anna: Not right away I BLANK in a general HR role at a non-tech company first, focusing on training and development --blanks--\ntwist\n--feedback--\nIt refers to an interesting or unexpected change in a situation Did\n--feedback--\nThe auxiliary verb used to form a question in the past simple tense The first letter should be capitalized worked\n--feedback--\nPast tense form of work, indicating an action completed in the past --scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-parking png\",\n\"characters\": [\n{\n\"character\": \"Tom\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n},\n{\n\"character\": \"Anna\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1 2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3 1-5 mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 18 82,\n\"finishTimestamp\": 30 24\n}\n},\n\"commands\": [\n{\n\"character\": \"Tom\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Tom\",\n\"startTime\": 1,\n\"finishTime\": 5 44,\n\"dialogue\": {\n\"text\": \"That's a cool twist Did you immediately start working as a tech recruiter after college \",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 5 5\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 1,\n\"startTime\": 5 5\n},\n{\n\"character\": \"Anna\",\n\"startTime\": 5 84,\n\"finishTime\": 12 42,\n\"dialogue\": {\n\"text\": \"Not right away I worked in a general HR role at a non-tech company first, focusing on training and development",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2428,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b30ac03b523e6640deaf1.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a21a435e2153017094855cc46417dded",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b30ac03b523e6640deaf1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"finishTime\": 5 44, \"dialogue\": { \"text\": \"That's a cool twist Did you immediately start working as a tech recruiter after college \", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 5 5 }, { \"character\": \"Anna\", \"opacity\": 1, \"startTime\": 5 5 }, { \"character\": \"Anna\", \"startTime\": 5 84, \"finishTime\": 12 42, \"dialogue\": { \"text\": \"Not right away I worked in a general HR role at a non-tech company first, focusing on training and development\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Anna\",\n\"opacity\": 0,\n\"startTime\": 12 92\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2428,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\657b30ac03b523e6640deaf1.md",
      "source_type": "git_repo"
    },
    "token_count": 173,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0c5d56a6b6eff0b55f43804311c19788",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\65f22f7d84784d8bd129c9a4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 65f22f7d84784d8bd129c9a4\ntitle: Task 36\nchallengeType: 22\ndashedName: task-36\n--description--\nListen to the audio and complete the missing words.\n--fillInTheBlank--\n--sentence--\nHey, how's it going? I BLANK you're relatively new here. What's your BLANK in tech?\n--blanks--\nnoticed\n--feedback--\nThis word is used when someone sees or becomes aware of something.\nbackground\n--feedback--\nThis word refers to your previous experiences, education, or skills in a particular area.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Brian\",\n\"position\": {\"x\":50,\"y\":15,\"z\":1.2},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 0.00,\n\"finishTimestamp\": 5.36\n}\n},\n\"commands\": [\n{\n\"character\": \"Brian\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Brian\",\n\"startTime\": 1,\n\"finishTime\": 6.36,\n\"dialogue\": {\n\"text\": \"Hey, how's it going? I noticed you're relatively new here. What's your background in tech?\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Brian\",\n\"opacity\": 0,\n\"startTime\": 6.86\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1445,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\65f22f7d84784d8bd129c9a4.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3c2e8922a0147675c562d47ab79b9e7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\65f230854698ec8c68b67fa4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 65f230854698ec8c68b67fa4\ntitle: Task 37\nchallengeType: 22\ndashedName: task-37\n--description--\nThe verb join is used when you become a part of a group, team, or organization.\nFor example, if you say I joined the basketball team, it means you became a member of the basketball team.\n--fillInTheBlank--\n--sentence--\nHey! Yeah, I BLANK the team a BLANK months ago.\n--blanks--\njoined\n--feedback--\nThis verb is conjugated in the past try adding -ed to it.\nfew\n--feedback--\nThis word is used to describe a small number of something. In this context, it refers to a small number of months.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 6.06,\n\"finishTimestamp\": 8.30\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 3.24,\n\"dialogue\": {\n\"text\": \"Hey, yeah, I joined the team a few months ago.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 3.74\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\65f230854698ec8c68b67fa4.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "650d32949cb2163414e754ab683999b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\65f31898ad2ed9c3b1a4c9b3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 65f31898ad2ed9c3b1a4c9b3\ntitle: Task 42\nchallengeType: 22\ndashedName: task-42\n--description--\nIn everyday conversations, you can use a structure where you start with a statement, and then use but to show contrast. This can be especially useful when you want to show how you've turned challenges into learning opportunities.\nFor example, you can say, I didn't have much experience in this field, but I learned a lot about consistency in my previous job.\n--fillInTheBlank--\n--sentence--\nI didn't study computer science at university, BLANK I majored in electrical engineering. It wasn't exactly tech-related, BLANK I learned a lot about problem-solving and critical thinking.\n--blanks--\nbut\n--feedback--\nIt shows there is something more to say that might surprise you. It connects two ideas.\nbut\n--feedback--\nUsing this word here means there is a good side to the story. It connects two parts of what you are saying.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Sophie\",\n\"position\": {\"x\":50,\"y\":0,\"z\":1.4},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"3.1-3.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 8.68,\n\"finishTimestamp\": 17.40\n}\n},\n\"commands\": [\n{\n\"character\": \"Sophie\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 1,\n\"finishTime\": 5,\n\"dialogue\": {\n\"text\": \"I didn't study computer science at university, but I majored in electrical engineering.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"startTime\": 5.74,\n\"finishTime\": 9.72,\n\"dialogue\": {\n\"text\": \"It wasn't exactly tech-related, but I learned a lot about problem solving and critical thinking.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Sophie\",\n\"opacity\": 0,\n\"startTime\": 10.22\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\21-a2-english-for-developers\\learn-how-to-ask-and-share-about-educational-and-professional-background\\65f31898ad2ed9c3b1a4c9b3.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 1
  }
]