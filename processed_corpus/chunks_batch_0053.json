[
  {
    "id": "f744a3a730b51019af8572b0cec06b1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-if-and-else-to-add-logic-to-your-styles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dbe367417b2b2512bb8\ntitle: Use @if and @else to Add Logic To Your Styles\nchallengeType: 0\nforumTopicId: 301463\ndashedName: use-if-and-else-to-add-logic-to-your-styles\n--description--\nThe @if directive in Sass is useful to test for a specific case - it works just like the if statement in JavaScript scss\n@mixin make-bold($bool) {\n@if $bool == true {\nfont-weight: bold;\n}\n}\nAnd just like in JavaScript, the @else if and @else directives test for more conditions:\nscss\n@mixin text-effect($val) {\n@if $val == danger {\ncolor: red;\n}\n@else if $val == alert {\ncolor: yellow;\n}\n@else if $val == success {\ncolor: green;\n}\n@else {\ncolor: black;\n}\n}\n--instructions--\nCreate a mixin called border-stroke that takes a parameter $val The mixin should check for the following conditions using @if, @else if, and @else directives:\nscss\nlight - 1px solid black\nmedium - 3px solid black\nheavy - 6px solid black\nIf the $val parameter value is not light, medium, or heavy, then the border property should be set to none --hints--\nYour code should declare a mixin named border-stroke which has a parameter named $val js\nassert(code match(/@mixin\\s+ border-stroke\\s* \\(\\s* \\$val\\s* \\)\\s* {/gi));\nYour mixin should have an @if statement to check if $val is light, and to set the border to 1px solid black js\nassert(\ncode match(\n/@if\\s+ \\$val\\s* === \\s* light\\s* {\\s* border\\s* :\\s* 1px\\s+ solid\\s+ black\\s* ;\\s* }/gi\n)\n);\nYour mixin should have an @else if statement to check if $val is medium, and to set the border to 3px solid black js\nassert(\ncode match(\n/@else\\s+ if\\s+ \\$val\\s* === \\s* medium\\s* {\\s* border\\s* :\\s* 3px\\s+ solid\\s+ black\\s* ;\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2946,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-if-and-else-to-add-logic-to-your-styles.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d43c11b71bb6da9654554418059c2714",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-if-and-else-to-add-logic-to-your-styles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "@if statement to check if $val is light, and to set the border to 1px solid black js assert( code match( /@if\\s+ \\$val\\s* === \\s* light\\s* {\\s* border\\s* :\\s* 1px\\s+ solid\\s+ black\\s* ;\\s* }/gi ) ); Your mixin should have an @else if statement to check if $val is medium, and to set the border to 3px solid black js assert( code match( /@else\\s+ if\\s+ \\$val\\s* === \\s* medium\\s* {\\s* border\\s* :\\s* 3px\\s+ solid\\s+ black\\s* ;\\s*}/gi\n)\n);\nYour mixin should have an @else if statement to check if $val is heavy, and to set the border to 6px solid black js\nassert(\ncode match(\n/@else\\s+ if\\s+ \\$val\\s* === \\s* heavy\\s* {\\s* border\\s* :\\s* 6px\\s+ solid\\s+ black\\s* ;\\s* }/gi\n)\n);\nYour mixin should have an @else statement to set the border to none js\nassert(code match(/@else\\s* {\\s* border\\s* :\\s* none\\s* ;\\s* }/gi));\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2946,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-if-and-else-to-add-logic-to-your-styles.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "80ec70821ac835604a5e5905988914bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-for-to-create-a-sass-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dbe367417b2b2512bb9\ntitle: Use @for to Create a Sass Loop\nchallengeType: 0\nforumTopicId: 301462\ndashedName: use-for-to-create-a-sass-loop\n--description--\nThe @for directive adds styles in a loop, very similar to a for loop in JavaScript @for is used in two ways: \"start through end\" or \"start to end\" The main difference is that the \"start to end\" excludes the end number as part of the count, and \"start through end\" includes the end number as part of the count Here's a start through end example:\nscss\n@for $i from 1 through 12 { col-#{$i} { width: 100%/12 * $i; }\n}\nThe #{$i} part is the syntax to combine a variable (i) with text to make a string When the Sass file is converted to CSS, it looks like this:\n```scss col-1 {\nwidth: 8 33333%;\n} col-2 {\nwidth: 16 66667%;\n} col-12 {\nwidth: 100%;\n}\n```\nThis is a powerful way to create a grid layout Now you have twelve options for column widths available as CSS classes --instructions--\nWrite a @for directive that takes a variable $j that goes from 1 to 6 It should create 5 classes called text-1 to text-5 where each has a font-size set to 15px multiplied by the index --hints--\nYour code should use the @for directive js\nassert(code match(/@for /g));\nYour text-1 class should have a font-size of 15px js\nassert($(' text-1') css('font-size') == '15px');\nYour text-2 class should have a font-size of 30px js\nassert($(' text-2') css('font-size') == '30px');\nYour text-3 class should have a font-size of 45px js\nassert($(' text-3') css('font-size') == '45px');\nYour text-4 class should have a font-size of 60px js\nassert($(' text-4') css('font-size') == '60px');\nYour text-5 class should have a font-size of 75px js\nassert($(' text-5')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-for-to-create-a-sass-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fd63bf9aceed08a7aff8a15dbd35acf0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-for-to-create-a-sass-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert(code match(/@for /g)); Your text-1 class should have a font-size of 15px js assert($(' text-1') css('font-size') == '15px'); Your text-2 class should have a font-size of 30px js assert($(' text-2') css('font-size') == '30px'); Your text-3 class should have a font-size of 45px js assert($(' text-3') css('font-size') == '45px'); Your text-4 class should have a font-size of 60px js assert($(' text-4') css('font-size') == '60px'); Your text-5 class should have a font-size of 75px js assert($(' text-5')css('font-size') == '75px');\n--seed--\n--seed-contents--\n```html\nHello\nHello\nHello\nHello\nHello\n```\n--solutions--\n```html\nHello\nHello\nHello\nHello\nHello\n```\n```html\nHello\nHello\nHello\nHello\nHello\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\03-front-end-development-libraries\\sass\\use-for-to-create-a-sass-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2f84b7a95a4cdfaf290e436a615e7773",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\convert-celsius-to-fahrenheit.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b3\ntitle: Convert Celsius to Fahrenheit\nchallengeType: 1\nforumTopicId: 16806\ndashedName: convert-celsius-to-fahrenheit\n--description--\nThe formula to convert from Celsius to Fahrenheit is the temperature in Celsius times 9/5, plus 32.\nYou are given a variable celsius representing a temperature in Celsius. Use the variable fahrenheit already defined and assign it the Fahrenheit temperature equivalent to the given Celsius temperature. Use the formula mentioned above to help convert the Celsius temperature to Fahrenheit.\n--hints--\nconvertCtoF(0) should return a number\njs\nassert.isNumber(convertCtoF(0));\nconvertCtoF(-30) should return a value of -22\njs\nassert.strictEqual(convertCtoF(-30), -22);\nconvertCtoF(-10) should return a value of 14\njs\nassert.strictEqual(convertCtoF(-10), 14);\nconvertCtoF(0) should return a value of 32\njs\nassert.strictEqual(convertCtoF(0), 32);\nconvertCtoF(20) should return a value of 68\njs\nassert.strictEqual(convertCtoF(20), 68);\nconvertCtoF(30) should return a value of 86\njs\nassert.strictEqual(convertCtoF(30), 86);\n--seed--\n--seed-contents--\n```js\nfunction convertCtoF(celsius) {\nlet fahrenheit;\nreturn fahrenheit;\n}\nconvertCtoF(30);\n```\n--solutions--\n```js\nfunction convertCtoF(celsius) {\nlet fahrenheit = celsius * (9 / 5) + 32;\nreturn fahrenheit;\n}\nconvertCtoF(30);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1458,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\convert-celsius-to-fahrenheit.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e06db591046101681bf12eb04f04bad0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\factorialize-a-number.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a302f7aae1aa3152a5b413bc\ntitle: Factorialize a Number\nchallengeType: 1\nforumTopicId: 16013\ndashedName: factorialize-a-number\n--description--\nReturn the factorial of the provided integer.\nIf the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.\nFactorials are often represented with the shorthand notation n!\nFor example: 5! = 1 * 2 * 3 * 4 * 5 = 120\nOnly integers greater than or equal to zero will be supplied to the function.\n--hints--\nfactorialize(5) should return a number.\njs\nassert.isNumber(factorialize(5));\nfactorialize(5) should return 120.\njs\nassert.strictEqual(factorialize(5), 120);\nfactorialize(10) should return 3628800.\njs\nassert.strictEqual(factorialize(10), 3628800);\nfactorialize(20) should return 2432902008176640000.\njs\nassert.strictEqual(factorialize(20), 2432902008176640000);\nfactorialize(0) should return 1.\njs\nassert.strictEqual(factorialize(0), 1);\n--seed--\n--seed-contents--\n```js\nfunction factorialize(num) {\nreturn num;\n}\nfactorialize(5);\n```\n--solutions--\n```js\nfunction factorialize(num) {\nreturn num < 1 ? 1 : num * factorialize(num - 1);\n}\nfactorialize(5);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1275,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\factorialize-a-number.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5b23d7abed0a44bf5c606ef7d5a70ecb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\confirm-the-ending.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: acda2fb1324d9b0fa741e6b5\ntitle: Confirm the Ending\nchallengeType: 1\nforumTopicId: 16006\ndashedName: confirm-the-ending\n--description--\nCheck if a string (first argument, str) ends with the given target string (second argument, target) This challenge can be solved with the endsWith() method, which was introduced in ES2015 But for the purpose of this challenge, we would like you to use one of the JavaScript substring methods instead --hints--\nconfirmEnding(\"Bastian\", \"n\") should return true js\nassert isTrue(confirmEnding('Bastian', 'n'));\nconfirmEnding(\"Congratulation\", \"on\") should return true js\nassert isTrue(confirmEnding('Congratulation', 'on'));\nconfirmEnding(\"Connor\", \"n\") should return false js\nassert isFalse(confirmEnding('Connor', 'n'));\nconfirmEnding(\"Walking on water and developing software from a specification are easy if both are frozen\", \"specification\") should return false js\nassert isFalse(\nconfirmEnding(\n'Walking on water and developing software from a specification are easy if both are frozen',\n'specification'\n)\n);\nconfirmEnding(\"He has to give me a new name\", \"name\") should return true js\nassert isTrue(confirmEnding('He has to give me a new name', 'name'));\nconfirmEnding(\"Open sesame\", \"same\") should return true js\nassert isTrue(confirmEnding('Open sesame', 'same'));\nconfirmEnding(\"Open sesame\", \"sage\") should return false js\nassert isFalse(confirmEnding('Open sesame', 'sage'));\nconfirmEnding(\"Open sesame\", \"game\") should return false js\nassert isFalse(confirmEnding('Open sesame', 'game'));\nconfirmEnding(\"If you want to save our world, you must hurry We dont know how much longer we can withstand the nothing\", \"mountain\") should return false js\nassert isFalse(\nconfirmEnding(\n'If you want to save our world, you must hurry We dont know how much longer we can withstand the nothing',\n'mountain'\n)\n);\nconfirmEnding(\"Abstraction\", \"action\") should return true js\nassert isTrue(confirmEnding('Abstraction', 'action'));\nYour code should not use the built-in method endsWith() to solve the challenge js\nassert notMatch(__helpers removeJSComments(code), /\\ endsWith\\( *",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2693,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\confirm-the-ending.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "de192924a5812aea1923f15afb352933",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\confirm-the-ending.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "world, you must hurry We dont know how much longer we can withstand the nothing\", \"mountain\") should return false js assert isFalse( confirmEnding( 'If you want to save our world, you must hurry We dont know how much longer we can withstand the nothing', 'mountain' ) ); confirmEnding(\"Abstraction\", \"action\") should return true js assert isTrue(confirmEnding('Abstraction', 'action')); Your code should not use the built-in method endsWith() to solve the challenge js assert notMatch(__helpers removeJSComments(code), /\\ endsWith\\( *\\)\\s* ; /);\nassert notMatch(__helpers removeJSComments(code), /\\['endsWith'\\]/);\n--seed--\n--seed-contents--\n```js\nfunction confirmEnding(str, target) {\nreturn str;\n}\nconfirmEnding('Bastian', 'n');\n```\n--solutions--\n```js\nfunction confirmEnding(str, target) {\nreturn str substring(str length - target length) === target;\n}\nconfirmEnding('Bastian', 'n');\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2693,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\confirm-the-ending.md",
      "source_type": "git_repo"
    },
    "token_count": 215,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "20b4cf21b1926ce4197b9180e906584b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\falsy-bouncer.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: adf08ec01beb4f99fc7a68f2\ntitle: Falsy Bouncer\nchallengeType: 1\nforumTopicId: 16014\ndashedName: falsy-bouncer\n--description--\nRemove all falsy values from an array. Return a new array; do not mutate the original array.\nFalsy values in JavaScript are false, null, 0, \"\", undefined, and NaN.\nHint: Try converting each value to a Boolean.\n--hints--\nbouncer([7, \"ate\", \"\", false, 9]) should return [7, \"ate\", 9].\njs\nassert.deepEqual(bouncer([7, 'ate', '', false, 9]), [7, 'ate', 9]);\nbouncer([\"a\", \"b\", \"c\"]) should return [\"a\", \"b\", \"c\"].\njs\nassert.deepEqual(bouncer(['a', 'b', 'c']), ['a', 'b', 'c']);\nbouncer([false, null, 0, NaN, undefined, \"\"]) should return [].\njs\nassert.deepEqual(bouncer([false, null, 0, NaN, undefined, '']), []);\nbouncer([null, NaN, 1, 2, undefined]) should return [1, 2].\njs\nassert.deepEqual(bouncer([null, NaN, 1, 2, undefined]), [1, 2]);\nYou should not mutate arr.\njs\nconst arr = ['a', false, 0, 'Naomi'];\nbouncer(arr);\nassert.deepEqual(arr, ['a', false, 0, 'Naomi']);\n--seed--\n--seed-contents--\n```js\nfunction bouncer(arr) {\nreturn arr;\n}\nbouncer([7, 'ate', '', false, 9]);\n```\n--solutions--\n```js\nfunction bouncer(arr) {\nreturn arr.filter(e => e);\n}\nbouncer([7, 'ate', '', false, 9]);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1330,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\falsy-bouncer.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "54bac9489b41966c47fdad5142d21f27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\chunky-monkey.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a9bd25c716030ec90084d8a1\ntitle: Chunky Monkey\nchallengeType: 1\nforumTopicId: 16005\ndashedName: chunky-monkey\n--description--\nWrite a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a two-dimensional array --hints--\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2) should return [[\"a\", \"b\"], [\"c\", \"d\"]] js\nassert deepEqual(chunkArrayInGroups(['a', 'b', 'c', 'd'], 2), [\n['a', 'b'],\n['c', 'd']\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 3) should return [[0, 1, 2], [3, 4, 5]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 3), [\n[0, 1, 2],\n[3, 4, 5]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 2) should return [[0, 1], [2, 3], [4, 5]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2), [\n[0, 1],\n[2, 3],\n[4, 5]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 4) should return [[0, 1, 2, 3], [4, 5]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4), [\n[0, 1, 2, 3],\n[4, 5]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3) should return [[0, 1, 2], [3, 4, 5], [6]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\chunky-monkey.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9d914700adbe7ce5dd871e7c2558d63c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\chunky-monkey.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return [[0, 1], [2, 3], [4, 5]] js assert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2), [ [0, 1], [2, 3], [4, 5] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4) should return [[0, 1, 2, 3], [4, 5]] js assert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4), [ [0, 1, 2, 3], [4, 5] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3) should return [[0, 1, 2], [3, 4, 5], [6]] js assertdeepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3), [\n[0, 1, 2],\n[3, 4, 5],\n[6]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4) should return [[0, 1, 2, 3], [4, 5, 6, 7], [8]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4), [\n[0, 1, 2, 3],\n[4, 5, 6, 7],\n[8]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2) should return [[0, 1], [2, 3], [4, 5], [6, 7], [8]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\chunky-monkey.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "22c8818ff5c943baca04838c39a2d80d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\chunky-monkey.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[ [0, 1, 2], [3, 4, 5], [6] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4) should return [[0, 1, 2, 3], [4, 5, 6, 7], [8]] js assert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4), [ [0, 1, 2, 3], [4, 5, 6, 7], [8] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2) should return [[0, 1], [2, 3], [4, 5], [6, 7], [8]] js assertdeepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2), [\n[0, 1],\n[2, 3],\n[4, 5],\n[6, 7],\n[8]\n]);\n--seed--\n--seed-contents--\n```js\nfunction chunkArrayInGroups(arr, size) {\nreturn arr;\n}\nchunkArrayInGroups(['a', 'b', 'c', 'd'], 2);\n```\n--solutions--\n```js\nfunction chunkArrayInGroups(arr, size) {\nlet out = [];\nfor (let i = 0; i < arr length; i += size) {\nout push(arr slice(i, i + size));\n}\nreturn out;\n}\nchunkArrayInGroups(['a', 'b', 'c', 'd'], 2);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\chunky-monkey.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "88d368888cfc202a11799365c082555e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\find-the-longest-word-in-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a26cbbe9ad8655a977e1ceb5\ntitle: Find the Longest Word in a String\nchallengeType: 1\nforumTopicId: 16015\ndashedName: find-the-longest-word-in-a-string\n--description--\nReturn the length of the longest word in the provided sentence.\nYour response should be a number.\n--hints--\nfindLongestWordLength(\"The quick brown fox jumped over the lazy dog\") should return a number.\njs\nassert.isNumber(\nfindLongestWordLength('The quick brown fox jumped over the lazy dog')\n);\nfindLongestWordLength(\"The quick brown fox jumped over the lazy dog\") should return 6.\njs\nassert.strictEqual(\nfindLongestWordLength('The quick brown fox jumped over the lazy dog'),\n6\n);\nfindLongestWordLength(\"May the force be with you\") should return 5.\njs\nassert.strictEqual(findLongestWordLength('May the force be with you'), 5);\nfindLongestWordLength(\"Google do a barrel roll\") should return 6.\njs\nassert.strictEqual(findLongestWordLength('Google do a barrel roll'), 6);\nfindLongestWordLength(\"What is the average airspeed velocity of an unladen swallow\") should return 8.\njs\nassert.strictEqual(\nfindLongestWordLength(\n'What is the average airspeed velocity of an unladen swallow'\n),\n8\n);\nfindLongestWordLength(\"What if we try a super-long word such as otorhinolaryngology\") should return 19.\njs\nassert.strictEqual(\nfindLongestWordLength(\n'What if we try a super-long word such as otorhinolaryngology'\n),\n19\n);\n--seed--\n--seed-contents--\n```js\nfunction findLongestWordLength(str) {\nreturn str.length;\n}\nfindLongestWordLength('The quick brown fox jumped over the lazy dog');\n```\n--solutions--\n```js\nfunction findLongestWordLength(str) {\nreturn str.split(' ').sort((a, b) => b.length - a.length)[0].length;\n}\nfindLongestWordLength('The quick brown fox jumped over the lazy dog');\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1885,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\find-the-longest-word-in-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9a22fd8443215c67ce34c18bebaedb2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\finders-keepers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a6e40f1041b06c996f7b2406\ntitle: Finders Keepers\nchallengeType: 1\nforumTopicId: 16016\ndashedName: finders-keepers\n--description--\nCreate a function that looks through an array arr and returns the first element in it that passes a 'truth test'. This means that given an element x, the 'truth test' is passed if func(x) is true. If no element passes the test, return undefined.\n--hints--\nfindElement([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; }) should return 8.\njs\nassert.strictEqual(\nfindElement([1, 3, 5, 8, 9, 10], function (num) {\nreturn num % 2 === 0;\n}),\n8\n);\nfindElement([1, 3, 5, 9], function(num) { return num % 2 === 0; }) should return undefined.\njs\nassert.strictEqual(\nfindElement([1, 3, 5, 9], function (num) {\nreturn num % 2 === 0;\n}),\nundefined\n);\n--seed--\n--seed-contents--\n```js\nfunction findElement(arr, func) {\nlet num = 0;\nreturn num;\n}\nfindElement([1, 2, 3, 4], num => num % 2 === 0);\n```\n--solutions--\n```js\nfunction findElement(arr, func) {\nreturn arr.filter(func)[0];\n}\nfindElement([1, 2, 3, 4], num => num % 2 === 0);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1156,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\finders-keepers.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8472075dab8e23b515246fdaad52b819",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\repeat-a-string-repeat-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: afcc8d540bea9ea2669306b6\ntitle: Repeat a String Repeat a String\nchallengeType: 1\nforumTopicId: 16041\ndashedName: repeat-a-string-repeat-a-string\n--description--\nRepeat a given string str (first argument) for num times (second argument). Return an empty string if num is not a positive number. For the purpose of this challenge, do not use the built-in .repeat() method.\n--hints--\nrepeatStringNumTimes(\"*\", 3) should return the string ***.\njs\nassert.strictEqual(repeatStringNumTimes('*', 3), '***');\nrepeatStringNumTimes(\"abc\", 3) should return the string abcabcabc.\njs\nassert.strictEqual(repeatStringNumTimes('abc', 3), 'abcabcabc');\nrepeatStringNumTimes(\"abc\", 4) should return the string abcabcabcabc.\njs\nassert.strictEqual(repeatStringNumTimes('abc', 4), 'abcabcabcabc');\nrepeatStringNumTimes(\"abc\", 1) should return the string abc.\njs\nassert.strictEqual(repeatStringNumTimes('abc', 1), 'abc');\nrepeatStringNumTimes(\"*\", 8) should return the string ********.\njs\nassert.strictEqual(repeatStringNumTimes('*', 8), '********');\nrepeatStringNumTimes(\"abc\", -2) should return an empty string (\"\").\njs\nassert.isEmpty(repeatStringNumTimes('abc', -2));\nThe built-in repeat() method should not be used.\njs\nassert.notMatch(__helpers.removeJSComments(code), /\\.repeat/g);\nrepeatStringNumTimes(\"abc\", 0) should return \"\".\njs\nassert.isEmpty(repeatStringNumTimes('abc', 0));\n--seed--\n--seed-contents--\n```js\nfunction repeatStringNumTimes(str, num) {\nreturn str;\n}\nrepeatStringNumTimes('abc', 3);\n```\n--solutions--\n```js\nfunction repeatStringNumTimes(str, num) {\nif (num < 1) return '';\nreturn num === 1 ? str : str + repeatStringNumTimes(str, num - 1);\n}\nrepeatStringNumTimes('abc', 3);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1830,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\repeat-a-string-repeat-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d6351d1d4fed2606af38eb783b02f71d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\reverse-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a202eed8fc186c8434cb6d61\ntitle: Reverse a String\nchallengeType: 1\nforumTopicId: 16043\ndashedName: reverse-a-string\n--description--\nReverse the provided string and return the reversed string.\nFor example, \"hello\" should become \"olleh\".\n--hints--\nreverseString(\"hello\") should return a string.\njs\nassert.isString(reverseString('hello'));\nreverseString(\"hello\") should return the string olleh.\njs\nassert.strictEqual(reverseString('hello'), 'olleh');\nreverseString(\"Howdy\") should return the string ydwoH.\njs\nassert.strictEqual(reverseString('Howdy'), 'ydwoH');\nreverseString(\"Greetings from Earth\") should return the string htraE morf sgniteerG.\njs\nassert.strictEqual(\nreverseString('Greetings from Earth'),\n'htraE morf sgniteerG'\n);\n--seed--\n--seed-contents--\n```js\nfunction reverseString(str) {\nreturn str;\n}\nreverseString('hello');\n```\n--solutions--\n```js\nfunction reverseString(str) {\nreturn str.split('').reverse().join('');\n}\nreverseString('hello');\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1053,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\reverse-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "98a0d21d2d3b09a0bdb56f5f5dca5c96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\title-case-a-sentence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: ab6137d4e35944e21037b769\ntitle: Title Case a Sentence\nchallengeType: 1\nforumTopicId: 16088\ndashedName: title-case-a-sentence\n--description--\nReturn the provided string with the first letter of each word capitalized. Make sure the rest of the word is in lower case.\nFor the purpose of this exercise, you should also capitalize connecting words like the and of.\n--hints--\ntitleCase(\"I'm a little tea pot\") should return a string.\njs\nassert.isString(titleCase(\"I'm a little tea pot\"));\ntitleCase(\"I'm a little tea pot\") should return the string I'm A Little Tea Pot.\njs\nassert.strictEqual(titleCase(\"I'm a little tea pot\"), \"I'm A Little Tea Pot\");\ntitleCase(\"sHoRt AnD sToUt\") should return the string Short And Stout.\njs\nassert.strictEqual(titleCase('sHoRt AnD sToUt'), 'Short And Stout');\ntitleCase(\"HERE IS MY HANDLE HERE IS MY SPOUT\") should return the string Here Is My Handle Here Is My Spout.\njs\nassert.strictEqual(\ntitleCase('HERE IS MY HANDLE HERE IS MY SPOUT'),\n'Here Is My Handle Here Is My Spout'\n);\n--seed--\n--seed-contents--\n```js\nfunction titleCase(str) {\nreturn str;\n}\ntitleCase(\"I'm a little tea pot\");\n```\n--solutions--\n```js\nfunction titleCase(str) {\nreturn str\n.split(' ')\n.map(word => word.charAt(0).toUpperCase() + word.substring(1).toLowerCase())\n.join(' ');\n}\ntitleCase(\"I'm a little tea pot\");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\title-case-a-sentence.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ae04a36a54fa23fccb986e0839e0bee2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\mutations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: af2170cad53daa0770fabdea\ntitle: Mutations\nchallengeType: 1\nforumTopicId: 16025\ndashedName: mutations\n--description--\nReturn true if the string in the first element of the array contains all of the letters of the string in the second element of the array For example, [\"hello\", \"Hello\"], should return true because all of the letters in the second string are present in the first, ignoring case The arguments [\"hello\", \"hey\"] should return false because the string hello does not contain a y Lastly, [\"Alien\", \"line\"], should return true because all of the letters in line are present in Alien --hints--\nmutation([\"hello\", \"hey\"]) should return false js\nassert isFalse(mutation(['hello', 'hey']));\nmutation([\"hello\", \"Hello\"]) should return true js\nassert isTrue(mutation(['hello', 'Hello']));\nmutation([\"zyxwvutsrqponmlkjihgfedcba\", \"qrstu\"]) should return true js\nassert isTrue(mutation(['zyxwvutsrqponmlkjihgfedcba', 'qrstu']));\nmutation([\"Mary\", \"Army\"]) should return true js\nassert isTrue(mutation(['Mary', 'Army']));\nmutation([\"Mary\", \"Aarmy\"]) should return true js\nassert isTrue(mutation(['Mary', 'Aarmy']));\nmutation([\"Alien\", \"line\"]) should return true js\nassert isTrue(mutation(['Alien', 'line']));\nmutation([\"floor\", \"for\"]) should return true js\nassert isTrue(mutation(['floor', 'for']));\nmutation([\"hello\", \"neo\"]) should return false js\nassert isFalse(mutation(['hello', 'neo']));\nmutation([\"voodoo\", \"no\"]) should return false js\nassert isFalse(mutation(['voodoo', 'no']));\nmutation([\"ate\", \"date\"]) should return false js\nassert isFalse(mutation(['ate', 'date']));\nmutation([\"Tiger\", \"Zebra\"]) should return false js\nassert isFalse(mutation(['Tiger', 'Zebra']));\nmutation([\"Noel\", \"Ole\"]) should return true js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2388,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\mutations.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3df5a5556e4840c40769b798858b4784",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\mutations.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return true js assert isTrue(mutation(['Mary', 'Army'])); mutation([\"Mary\", \"Aarmy\"]) should return true js assert isTrue(mutation(['Mary', 'Aarmy'])); mutation([\"Alien\", \"line\"]) should return true js assert isTrue(mutation(['Alien', 'line'])); mutation([\"floor\", \"for\"]) should return true js assert isTrue(mutation(['floor', 'for'])); mutation([\"hello\", \"neo\"]) should return false js assert isFalse(mutation(['hello', 'neo'])); mutation([\"voodoo\", \"no\"]) should return false js assert isFalse(mutation(['voodoo', 'no'])); mutation([\"ate\", \"date\"]) should return false js assert isFalse(mutation(['ate', 'date'])); mutation([\"Tiger\", \"Zebra\"]) should return false js assert isFalse(mutation(['Tiger', 'Zebra'])); mutation([\"Noel\", \"Ole\"]) should return true js assertisTrue(mutation(['Noel', 'Ole']));\n--seed--\n--seed-contents--\n```js\nfunction mutation(arr) {\nreturn arr;\n}\nmutation(['hello', 'hey']);\n```\n--solutions--\n```js\nfunction mutation(arr) {\nlet hash = Object create(null);\narr[0] toLowerCase() split('') forEach(c => (hash[c] = true));\nreturn arr[1] toLowerCase() split('') filter(c => hash[c]) length;\n}\nmutation(['hello', 'hey']);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2388,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\mutations.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5d719a29682fc88b440f6327ed041b88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\slice-and-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 579e2a2c335b9d72dd32e05c\ntitle: Slice and Splice\nchallengeType: 1\nforumTopicId: 301148\ndashedName: slice-and-splice\n--description--\nYou are given two arrays and an index Copy each element of the first array into the second array, in order Begin inserting elements at index n of the second array Return the resulting array The input arrays should remain the same after the function runs --hints--\nfrankenSplice([1, 2, 3], [4, 5], 1) should return [4, 1, 2, 3, 5] js\nassert deepEqual(frankenSplice([1, 2, 3], [4, 5], 1), [4, 1, 2, 3, 5]);\nfrankenSplice([1, 2], [\"a\", \"b\"], 1) should return [\"a\", 1, 2, \"b\"] js\nlet testArr1 = [1, 2];\nlet testArr2 = ['a', 'b'];\nassert deepEqual(frankenSplice(testArr1, testArr2, 1), ['a', 1, 2, 'b']);\nfrankenSplice([\"claw\", \"tentacle\"], [\"head\", \"shoulders\", \"knees\", \"toes\"], 2) should return [\"head\", \"shoulders\", \"claw\", \"tentacle\", \"knees\", \"toes\"] js\nassert deepEqual(\nfrankenSplice(\n['claw', 'tentacle'],\n['head', 'shoulders', 'knees', 'toes'],\n2\n),\n['head', 'shoulders', 'claw', 'tentacle', 'knees', 'toes']\n);\nAll elements from the first array should be added to the second array in their original order frankenSplice([1, 2, 3, 4], [], 0) should return [1, 2, 3, 4] js\nassert deepEqual(frankenSplice([1, 2, 3, 4], [], 0), [1, 2, 3, 4]);\nThe first array should remain the same after the function runs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2195,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\slice-and-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "270d4d29e4d255192ae8e82dcbd0ec8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\slice-and-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"shoulders\", \"claw\", \"tentacle\", \"knees\", \"toes\"] js assert deepEqual( frankenSplice( ['claw', 'tentacle'], ['head', 'shoulders', 'knees', 'toes'], 2 ), ['head', 'shoulders', 'claw', 'tentacle', 'knees', 'toes'] ); All elements from the first array should be added to the second array in their original order frankenSplice([1, 2, 3, 4], [], 0) should return [1, 2, 3, 4] js assert deepEqual(frankenSplice([1, 2, 3, 4], [], 0), [1, 2, 3, 4]); The first array should remain the same after the function runsjs\nlet testArr1 = [1, 2];\nlet testArr2 = ['a', 'b'];\nfrankenSplice(testArr1, testArr2, 1);\nassert deepEqual(testArr1, [1, 2]);\nThe second array should remain the same after the function runs js\nlet testArr1 = [1, 2];\nlet testArr2 = ['a', 'b'];\nfrankenSplice(testArr1, testArr2, 1);\nassert deepEqual(testArr2, ['a', 'b']);\n--seed--\n--seed-contents--\n```js\nfunction frankenSplice(arr1, arr2, n) {\nreturn arr2;\n}\nfrankenSplice([1, 2, 3], [4, 5, 6], 1);\n```\n--solutions--\n```js\nfunction frankenSplice(arr1, arr2, n) {\n// It's alive It's alive let result = arr2 slice();\nfor (let i = 0; i < arr1 length; i++) {\nresult splice(n + i, 0, arr1[i]);\n}\nreturn result;\n}\nfrankenSplice([1, 2, 3], [4, 5], 1);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2195,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\slice-and-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a677408c15ac0c98335be8b0a7002226",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\return-largest-numbers-in-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a789b3483989747d63b0e427\ntitle: Return Largest Numbers in Arrays\nchallengeType: 1\nforumTopicId: 16042\ndashedName: return-largest-numbers-in-arrays\n--description--\nReturn an array consisting of the largest number from each provided sub-array For simplicity, the provided array will contain exactly 4 sub-arrays Remember, you can iterate through an array with a simple for loop, and access each member with array syntax arr[i] --hints--\nlargestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return an array js\nassert isArray(\nlargestOfFour([\n[4, 5, 1, 3],\n[13, 27, 18, 26],\n[32, 35, 37, 39],\n[1000, 1001, 857, 1]\n])\n);\nlargestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return [27, 5, 39, 1001] js\nassert deepEqual(\nlargestOfFour([\n[13, 27, 18, 26],\n[4, 5, 1, 3],\n[32, 35, 37, 39],\n[1000, 1001, 857, 1]\n]),\n[27, 5, 39, 1001]\n);\nlargestOfFour([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]]) should return [9, 35, 97, 1000000] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2005,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\return-largest-numbers-in-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "25d184daa9a854c23af6982a469ff6d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\return-largest-numbers-in-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "857, 1] ]) ); largestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return [27, 5, 39, 1001] js assert deepEqual( largestOfFour([ [13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1] ]), [27, 5, 39, 1001] ); largestOfFour([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]]) should return [9, 35, 97, 1000000] js assertdeepEqual(\nlargestOfFour([\n[4, 9, 1, 3],\n[13, 35, 18, 26],\n[32, 35, 97, 39],\n[1000000, 1001, 857, 1]\n]),\n[9, 35, 97, 1000000]\n);\nlargestOfFour([[17, 23, 25, 12], [25, 7, 34, 48], [4, -10, 18, 21], [-72, -3, -17, -10]]) should return [25, 48, 21, -3] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2005,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\return-largest-numbers-in-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a3469d549aa9e6d742d20f19f6fc9c1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\return-largest-numbers-in-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[27, 5, 39, 1001] ); largestOfFour([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]]) should return [9, 35, 97, 1000000] js assertdeepEqual( largestOfFour([ [4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1] ]), [9, 35, 97, 1000000] ); largestOfFour([[17, 23, 25, 12], [25, 7, 34, 48], [4, -10, 18, 21], [-72, -3, -17, -10]]) should return [25, 48, 21, -3] js assertdeepEqual(\nlargestOfFour([\n[17, 23, 25, 12],\n[25, 7, 34, 48],\n[4, -10, 18, 21],\n[-72, -3, -17, -10]\n]),\n[25, 48, 21, -3]\n);\n--seed--\n--seed-contents--\n```js\nfunction largestOfFour(arr) {\nreturn arr;\n}\nlargestOfFour([\n[4, 5, 1, 3],\n[13, 27, 18, 26],\n[32, 35, 37, 39],\n[1000, 1001, 857, 1]\n]);\n```\n--solutions--\n```js\nfunction largestOfFour(arr) {\nreturn arr map(subArr => Math max apply(null, subArr));\n}\nlargestOfFour([\n[4, 5, 1, 3],\n[13, 27, 18, 26],\n[32, 35, 37, 39],\n[1000, 1001, 857, 1]\n]);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2005,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\return-largest-numbers-in-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "150a820a3b33afbd7c4ba1e02097680c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\truncate-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: ac6993d51946422351508a41\ntitle: Truncate a String\nchallengeType: 1\nforumTopicId: 16089\ndashedName: truncate-a-string\n--description--\nTruncate a string (first argument) if it is longer than the given maximum string length (second argument) Return the truncated string with a ending --hints--\ntruncateString(\"A-tisket a-tasket A green and yellow basket\", 8) should return the string A-tisket js\nassert strictEqual(\ntruncateString('A-tisket a-tasket A green and yellow basket', 8),\n'A-tisket '\n);\ntruncateString(\"Peter Piper picked a peck of pickled peppers\", 11) should return the string Peter Piper js\nassert strictEqual(\ntruncateString('Peter Piper picked a peck of pickled peppers', 11),\n'Peter Piper '\n);\ntruncateString(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\" length) should return the string A-tisket a-tasket A green and yellow basket js\nassert strictEqual(\ntruncateString(\n'A-tisket a-tasket A green and yellow basket',\n'A-tisket a-tasket A green and yellow basket' length\n),\n'A-tisket a-tasket A green and yellow basket'\n);\ntruncateString(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\" length + 2) should return the string A-tisket a-tasket A green and yellow basket js\nassert strictEqual(\ntruncateString(\n'A-tisket a-tasket A green and yellow basket',\n'A-tisket a-tasket A green and yellow basket' length + 2\n),\n'A-tisket a-tasket A green and yellow basket'\n);\ntruncateString(\"A-\", 1) should return the string A js\nassert strictEqual(truncateString('A-', 1), 'A ');\ntruncateString(\"Absolutely Longer\", 2) should return the string Ab js\nassert strictEqual(truncateString('Absolutely Longer', 2), 'Ab",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\truncate-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "11e10bced803f3c9f87cd650c317da67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\truncate-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "A green and yellow basket\" length + 2) should return the string A-tisket a-tasket A green and yellow basket js assert strictEqual( truncateString( 'A-tisket a-tasket A green and yellow basket', 'A-tisket a-tasket A green and yellow basket' length + 2 ), 'A-tisket a-tasket A green and yellow basket' ); truncateString(\"A-\", 1) should return the string A js assert strictEqual(truncateString('A-', 1), 'A '); truncateString(\"Absolutely Longer\", 2) should return the string Ab js assert strictEqual(truncateString('Absolutely Longer', 2), 'Ab');\n--seed--\n--seed-contents--\n```js\nfunction truncateString(str, num) {\nreturn str;\n}\ntruncateString('A-tisket a-tasket A green and yellow basket', 8);\n```\n--solutions--\n```js\nfunction truncateString(str, num) {\nif (num >= str length) {\nreturn str;\n}\nreturn str slice(0, num) + ' ';\n}\ntruncateString('A-tisket a-tasket A green and yellow basket', 8);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\truncate-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2cf28525ad3680a23d079e4b2b81007d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-an-arrays-contents-using-bracket-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a661e0f1068aca922b3ef17\ntitle: Access an Array's Contents Using Bracket Notation\nchallengeType: 1\nforumTopicId: 301149\ndashedName: access-an-arrays-contents-using-bracket-notation\n--description--\nThe fundamental feature of any data structure is, of course, the ability to not only store data, but to be able to retrieve that data on command So, now that we've learned how to create an array, let's begin to think about how we can access that array's information When we define a simple array as seen below, there are 3 items in it:\njs\nlet ourArray = [\"a\", \"b\", \"c\"];\nIn an array, each array item has an index This index doubles as the position of that item in the array, and how you reference it However, it is important to note, that JavaScript arrays are zero-indexed, meaning that the first element of an array is actually at the zeroth position, not the first In order to retrieve an element from an array we can enclose an index in brackets and append it to the end of an array, or more commonly, to a variable which references an array object This is known as bracket notation For example, if we want to retrieve the a from ourArray and assign it to a variable, we can do so with the following code:\njs\nlet ourVariable = ourArray[0];\nNow ourVariable has the value of a In addition to accessing the value associated with an index, you can also set an index to a value using the same notation:\njs\nourArray[1] = \"not b anymore\";\nUsing bracket notation, we have now reset the item at index 1 from the string b, to not b anymore Now ourArray is [\"a\", \"not b anymore\", \"c\"] --instructions--\nIn order to complete this challenge, set the 2nd position (index 1) of myArray to anything you want, besides the letter b --hints--\nmyArray[0] should be equal to the letter a\njs\nassert strictEqual(myArray[0], 'a');\nmyArray[1] should not be equal to the letter b\njs\nassert notStrictEqual(myArray[1], 'b');\nmyArray[2] should be equal to the letter c\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-an-arrays-contents-using-bracket-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "41681a4d53e9ee4e8b30f0e60e56742d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-an-arrays-contents-using-bracket-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1 from the string b, to not b anymore Now ourArray is [\"a\", \"not b anymore\", \"c\"] --instructions-- In order to complete this challenge, set the 2nd position (index 1) of myArray to anything you want, besides the letter b --hints-- myArray[0] should be equal to the letter a js assert strictEqual(myArray[0], 'a'); myArray[1] should not be equal to the letter b js assert notStrictEqual(myArray[1], 'b'); myArray[2] should be equal to the letter c js assertstrictEqual(myArray[2], 'c');\nmyArray[3] should be equal to the letter d\njs\nassert strictEqual(myArray[3], 'd');\n--seed--\n--seed-contents--\n```js\nlet myArray = [\"a\", \"b\", \"c\", \"d\"];\n// Only change code below this line\n// Only change code above this line\nconsole log(myArray);\n```\n--solutions--\njs\nlet myArray = [\"a\", \"b\", \"c\", \"d\"];\nmyArray[1] = \"e\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-an-arrays-contents-using-bracket-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e000dd02a963fd326f7ba14817306428",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-property-names-with-bracket-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7c367417b2b2512b1a\ntitle: Access Property Names with Bracket Notation\nchallengeType: 1\nforumTopicId: 301150\ndashedName: access-property-names-with-bracket-notation\n--description--\nIn the first object challenge we mentioned the use of bracket notation as a way to access property values using the evaluation of a variable For instance, imagine that our foods object is being used in a program for a supermarket cash register We have some function that sets the selectedFood and we want to check our foods object for the presence of that food This might look like:\njs\nlet selectedFood = getCurrentFood(scannedItem);\nlet inventory = foods[selectedFood];\nThis code will evaluate the value stored in the selectedFood variable and return the value of that key in the foods object, or undefined if it is not present Bracket notation is very useful because sometimes object properties are not known before runtime or we need to access them in a more dynamic way --instructions--\nWe've defined a function, checkInventory, which receives a scanned item as an argument Return the current value of the scannedItem key in the foods object You can assume that only valid keys will be provided as an argument to checkInventory --hints--\ncheckInventory should be a function js\nassert strictEqual(typeof checkInventory, 'function');\nThe foods object should have only the following key-value pairs: apples: 25, oranges: 32, plums: 28, bananas: 13, grapes: 35, strawberries: 27 js\nassert deepEqual(foods, {\napples: 25,\noranges: 32,\nplums: 28,\nbananas: 13,\ngrapes: 35,\nstrawberries: 27\n});\ncheckInventory(\"apples\") should return 25 js\nassert strictEqual(checkInventory('apples'), 25);\ncheckInventory(\"bananas\") should return 13 js\nassert strictEqual(checkInventory('bananas'), 13);\ncheckInventory(\"strawberries\") should return 27 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2542,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-property-names-with-bracket-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "03a1dbb0f9f27f328ad62d3fcb2febf0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-property-names-with-bracket-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an argument to checkInventory --hints-- checkInventory should be a function js assert strictEqual(typeof checkInventory, 'function'); The foods object should have only the following key-value pairs: apples: 25, oranges: 32, plums: 28, bananas: 13, grapes: 35, strawberries: 27 js assert deepEqual(foods, { apples: 25, oranges: 32, plums: 28, bananas: 13, grapes: 35, strawberries: 27 }); checkInventory(\"apples\") should return 25 js assert strictEqual(checkInventory('apples'), 25); checkInventory(\"bananas\") should return 13 js assert strictEqual(checkInventory('bananas'), 13); checkInventory(\"strawberries\") should return 27 js assertstrictEqual(checkInventory('strawberries'), 27);\n--seed--\n--seed-contents--\n```js\nlet foods = {\napples: 25,\noranges: 32,\nplums: 28,\nbananas: 13,\ngrapes: 35,\nstrawberries: 27\n};\nfunction checkInventory(scannedItem) {\n// Only change code below this line\n// Only change code above this line\n}\nconsole log(checkInventory(\"apples\"));\n```\n--solutions--\n```js\nlet foods = {\napples: 25,\noranges: 32,\nplums: 28,\nbananas: 13,\ngrapes: 35,\nstrawberries: 27\n};\nfunction checkInventory(scannedItem) {\nreturn foods[scannedItem];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2542,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\access-property-names-with-bracket-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "97d6149184584778e8ac2453cd5c2480",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\where-do-i-belong.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a24c1a4622e3c05097f71d67\ntitle: Where do I Belong\nchallengeType: 1\nforumTopicId: 16094\ndashedName: where-do-i-belong\n--description--\nReturn the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted The returned value should be a number For example, getIndexToIns([1,2,3,4], 1 5) should return 1 because it is greater than 1 (index 0), but less than 2 (index 1) Likewise, getIndexToIns([20,3,5], 19) should return 2 because once the array has been sorted it will look like [3,5,20] and 19 is less than 20 (index 2) and greater than 5 (index 1) --hints--\ngetIndexToIns([10, 20, 30, 40, 50], 35) should return a number js\nassert isNumber(getIndexToIns([10, 20, 30, 40, 50], 35));\ngetIndexToIns([10, 20, 30, 40, 50], 35) should return 3 js\nassert strictEqual(getIndexToIns([10, 20, 30, 40, 50], 35), 3);\ngetIndexToIns([10, 20, 30, 40, 50], 30) should return a number js\nassert isNumber(getIndexToIns([10, 20, 30, 40, 50], 30));\ngetIndexToIns([10, 20, 30, 40, 50], 30) should return 2 js\nassert strictEqual(getIndexToIns([10, 20, 30, 40, 50], 30), 2);\ngetIndexToIns([40, 60], 50) should return a number js\nassert isNumber(getIndexToIns([40, 60], 50));\ngetIndexToIns([40, 60], 50) should return 1 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2945,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\where-do-i-belong.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "35a171352146ecd157ccc6cc49a1c46f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\where-do-i-belong.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "50], 35)); getIndexToIns([10, 20, 30, 40, 50], 35) should return 3 js assert strictEqual(getIndexToIns([10, 20, 30, 40, 50], 35), 3); getIndexToIns([10, 20, 30, 40, 50], 30) should return a number js assert isNumber(getIndexToIns([10, 20, 30, 40, 50], 30)); getIndexToIns([10, 20, 30, 40, 50], 30) should return 2 js assert strictEqual(getIndexToIns([10, 20, 30, 40, 50], 30), 2); getIndexToIns([40, 60], 50) should return a number js assert isNumber(getIndexToIns([40, 60], 50)); getIndexToIns([40, 60], 50) should return 1 js assertstrictEqual(getIndexToIns([40, 60], 50), 1);\ngetIndexToIns([3, 10, 5], 3) should return a number js\nassert isNumber(getIndexToIns([3, 10, 5], 3));\ngetIndexToIns([3, 10, 5], 3) should return 0 js\nassert strictEqual(getIndexToIns([3, 10, 5], 3), 0);\ngetIndexToIns([5, 3, 20, 3], 5) should return a number js\nassert isNumber(getIndexToIns([5, 3, 20, 3], 5));\ngetIndexToIns([5, 3, 20, 3], 5) should return 2 js\nassert strictEqual(getIndexToIns([5, 3, 20, 3], 5), 2);\ngetIndexToIns([2, 20, 10], 19) should return 2 js\nassert strictEqual(getIndexToIns([2, 20, 10], 19), 2);\ngetIndexToIns([2, 20, 10], 19) should return a number js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2945,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\where-do-i-belong.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f8b9881172615cd50dd47a14551c82b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\where-do-i-belong.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert isNumber(getIndexToIns([3, 10, 5], 3)); getIndexToIns([3, 10, 5], 3) should return 0 js assert strictEqual(getIndexToIns([3, 10, 5], 3), 0); getIndexToIns([5, 3, 20, 3], 5) should return a number js assert isNumber(getIndexToIns([5, 3, 20, 3], 5)); getIndexToIns([5, 3, 20, 3], 5) should return 2 js assert strictEqual(getIndexToIns([5, 3, 20, 3], 5), 2); getIndexToIns([2, 20, 10], 19) should return 2 js assert strictEqual(getIndexToIns([2, 20, 10], 19), 2); getIndexToIns([2, 20, 10], 19) should return a number js assertisNumber(getIndexToIns([2, 20, 10], 19));\ngetIndexToIns([2, 5, 10], 15) should return 3 js\nassert strictEqual(getIndexToIns([2, 5, 10], 15), 3);\ngetIndexToIns([2, 5, 10], 15) should return a number js\nassert isNumber(getIndexToIns([2, 5, 10], 15));\ngetIndexToIns([], 1) should return a number js\nassert isNumber(getIndexToIns([], 1));\ngetIndexToIns([], 1) should return 0 js\nassert strictEqual(getIndexToIns([], 1), 0);\n--seed--\n--seed-contents--\n```js\nfunction getIndexToIns(arr, num) {\nreturn num;\n}\ngetIndexToIns([40, 60], 50);\n```\n--solutions--\n```js\nfunction getIndexToIns(arr, num) {\narr = arr sort((a, b) => a - b);\nfor (let i = 0; i < arr length; i++) {\nif (arr[i] >= num) {\nreturn i;\n}\n}\nreturn arr length;\n}\ngetIndexToIns([40, 60], 50);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2945,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-algorithm-scripting\\where-do-i-belong.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8a06d9571e68cf8d6c1dca5a2d8cf3d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-using-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b3367417b2b2512b11\ntitle: Add Items Using splice()\nchallengeType: 1\nforumTopicId: 301152\ndashedName: add-items-using-splice\n--description--\nRemember in the last challenge we mentioned that splice() can take up to three parameters Well, you can use the third parameter, comprised of one or more element(s), to add to the array This can be incredibly useful for quickly switching out an element, or a set of elements, for another ```js\nconst numbers = [10, 11, 12, 12, 15];\nconst startIndex = 3;\nconst amountToDelete = 1;\nnumbers splice(startIndex, amountToDelete, 13, 14);\nconsole log(numbers);\n```\nThe second occurrence of 12 is removed, and we add 13 and 14 at the same index The numbers array would now be [ 10, 11, 12, 13, 14, 15 ] Here, we begin with an array of numbers Then, we pass the following to splice(): The index at which to begin deleting elements (3), the number of elements to be deleted (1), and the remaining arguments (13, 14) will be inserted starting at that same index Note that there can be any number of elements (separated by commas) following amountToDelete, each of which gets inserted --instructions--\nWe have defined a function, htmlColorNames, which takes an array of HTML colors as an argument Modify the function using splice() to remove the first two elements of the array and add 'DarkSalmon' and 'BlanchedAlmond' in their respective places --hints--\nhtmlColorNames should return [\"DarkSalmon\", \"BlanchedAlmond\", \"LavenderBlush\", \"PaleTurquoise\", \"FireBrick\"]\njs\nassert deepEqual(\nhtmlColorNames([\n'DarkGoldenRod',\n'WhiteSmoke',\n'LavenderBlush',\n'PaleTurquoise',\n'FireBrick'\n]),\n[\n'DarkSalmon',\n'BlanchedAlmond',\n'LavenderBlush',\n'PaleTurquoise',\n'FireBrick'\n]\n);\nThe htmlColorNames function should utilize the splice() method\njs\nassert(/ splice/ test(__helpers removeJSComments(code)));\nYou should not use shift() or unshift() js\nassert( /shift|unshift/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2606,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-using-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "96c96f36a9df354f8ccd43f866e48ed8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-using-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as an argument Modify the function using splice() to remove the first two elements of the array and add 'DarkSalmon' and 'BlanchedAlmond' in their respective places --hints-- htmlColorNames should return [\"DarkSalmon\", \"BlanchedAlmond\", \"LavenderBlush\", \"PaleTurquoise\", \"FireBrick\"] js assert deepEqual( htmlColorNames([ 'DarkGoldenRod', 'WhiteSmoke', 'LavenderBlush', 'PaleTurquoise', 'FireBrick' ]), [ 'DarkSalmon', 'BlanchedAlmond', 'LavenderBlush', 'PaleTurquoise', 'FireBrick' ] ); The htmlColorNames function should utilize the splice() method js assert(/ splice/ test(__helpers removeJSComments(code))); You should not use shift() or unshift() js assert( /shift|unshift/test(__helpers removeJSComments(code)));\nYou should not use array bracket notation js\nassert( /\\[\\d\\]\\s*=/ test(__helpers removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction htmlColorNames(arr) {\n// Only change code below this line\n// Only change code above this line\nreturn arr;\n}\nconsole log(htmlColorNames(['DarkGoldenRod', 'WhiteSmoke', 'LavenderBlush', 'PaleTurquoise', 'FireBrick']));\n```\n--solutions--\njs\nfunction htmlColorNames(arr) {\narr splice(0,2,'DarkSalmon', 'BlanchedAlmond');\nreturn arr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2606,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-using-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b06943863e355d085444731e9493c77f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-to-an-array-with-push-and-unshift.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b2367417b2b2512b0e\ntitle: Add Items to an Array with push() and unshift()\nchallengeType: 1\nforumTopicId: 301151\ndashedName: add-items-to-an-array-with-push-and-unshift\n--description--\nAn array's length, like the data types it can contain, is not fixed Arrays can be defined with a length of any number of elements, and elements can be added or removed over time; in other words, arrays are mutable In this challenge, we will look at two methods with which we can programmatically modify an array: Array push() and Array unshift() Both methods take one or more elements as parameters and add those elements to the array the method is being called on; the push() method adds elements to the end of an array, and unshift() adds elements to the beginning Consider the following:\n```js\nlet twentyThree = 'XXIII';\nlet romanNumerals = ['XXI', 'XXII'];\nromanNumerals unshift('XIX', 'XX');\n```\nromanNumerals would have the value ['XIX', 'XX', 'XXI', 'XXII'] js\nromanNumerals push(twentyThree);\nromanNumerals would have the value ['XIX', 'XX', 'XXI', 'XXII', 'XXIII'] Notice that we can also pass variables, which allows us even greater flexibility in dynamically modifying our array's data --instructions--\nWe have defined a function, mixedNumbers, which we are passing an array as an argument Modify the function by using push() and unshift() to add 'I', 2, 'three' to the beginning of the array and 7, 'VIII', 9 to the end so that the returned array contains representations of the numbers 1-9 in order --hints--\nmixedNumbers([\"IV\", 5, \"six\"]) should now return [\"I\", 2, \"three\", \"IV\", 5, \"six\", 7, \"VIII\", 9]\njs\nassert deepEqual(mixedNumbers(['IV', 5, 'six']), [\n'I',\n2,\n'three',\n'IV',\n5,\n'six',\n7,\n'VIII',\n9\n]);\nThe mixedNumbers function should utilize the push() method\njs\nassert(mixedNumbers toString() match(/\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-to-an-array-with-push-and-unshift.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ce5f50e3c3e9dd3ef8c4829e87feb49c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-to-an-array-with-push-and-unshift.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "unshift() to add 'I', 2, 'three' to the beginning of the array and 7, 'VIII', 9 to the end so that the returned array contains representations of the numbers 1-9 in order --hints-- mixedNumbers([\"IV\", 5, \"six\"]) should now return [\"I\", 2, \"three\", \"IV\", 5, \"six\", 7, \"VIII\", 9] js assert deepEqual(mixedNumbers(['IV', 5, 'six']), [ 'I', 2, 'three', 'IV', 5, 'six', 7, 'VIII', 9 ]); The mixedNumbers function should utilize the push() method js assert(mixedNumbers toString() match(/\\push/));\nThe mixedNumbers function should utilize the unshift() method\njs\nassert(mixedNumbers toString() match(/\\ unshift/));\n--seed--\n--seed-contents--\n```js\nfunction mixedNumbers(arr) {\n// Only change code below this line\n// Only change code above this line\nreturn arr;\n}\nconsole log(mixedNumbers(['IV', 5, 'six']));\n```\n--solutions--\njs\nfunction mixedNumbers(arr) {\narr push(7,'VIII',9);\narr unshift('I',2,'three');\nreturn arr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-items-to-an-array-with-push-and-unshift.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5b1c144f9d4e68ab17da6135f6aa34ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\combine-arrays-with-the-spread-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7b367417b2b2512b17\ntitle: Combine Arrays with the Spread Operator\nchallengeType: 1\nforumTopicId: 301156\ndashedName: combine-arrays-with-the-spread-operator\n--description--\nAnother huge advantage of the spread operator is the ability to combine arrays, or to insert all the elements of one array into another, at any index. With more traditional syntaxes, we can concatenate arrays, but this only allows us to combine arrays at the end of one, and at the start of another. Spread syntax makes the following operation extremely simple:\n```js\nlet thisArray = ['sage', 'rosemary', 'parsley', 'thyme'];\nlet thatArray = ['basil', 'cilantro', ...thisArray, 'coriander'];\n```\nthatArray would have the value ['basil', 'cilantro', 'sage', 'rosemary', 'parsley', 'thyme', 'coriander'].\nUsing spread syntax, we have just achieved an operation that would have been more complex and more verbose had we used traditional methods.\n--instructions--\nWe have defined a function spreadOut that returns the variable sentence. Modify the function using the spread operator so that it returns the array ['learning', 'to', 'code', 'is', 'fun'].\n--hints--\nspreadOut should return [\"learning\", \"to\", \"code\", \"is\", \"fun\"]\njs\nassert.deepEqual(spreadOut(), ['learning', 'to', 'code', 'is', 'fun']);\nThe spreadOut function should utilize spread syntax\njs\nassert.notStrictEqual(spreadOut.toString().search(/[...]/), -1);\n--seed--\n--seed-contents--\n```js\nfunction spreadOut() {\nlet fragment = ['to', 'code'];\nlet sentence; // Change this line\nreturn sentence;\n}\nconsole.log(spreadOut());\n```\n--solutions--\njs\nfunction spreadOut() {\nlet fragment = ['to', 'code'];\nlet sentence = ['learning', ...fragment, 'is', 'fun'];\nreturn sentence;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1826,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\combine-arrays-with-the-spread-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4573ee24bcf5017a208da9e21c91bf9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-if-an-object-has-a-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7d367417b2b2512b1c\ntitle: Check if an Object has a Property\nchallengeType: 1\nforumTopicId: 301155\ndashedName: check-if-an-object-has-a-property\n--description--\nNow we can add, modify, and remove keys from objects But what if we just wanted to know if an object has a specific property JavaScript provides us with two different ways to do this One uses the hasOwnProperty() method and the other uses the in keyword If we have an object users with a property of Alan, we could check for its presence in either of the following ways:\njs\nusers hasOwnProperty('Alan');\n'Alan' in users;\nBoth of these would return true --instructions--\nFinish writing the function so that it returns true if the object passed to it contains all four names, Alan, Jeff, Sarah and Ryan and returns false otherwise --hints--\nThe users object should not be accessed directly\n```js\nassert(__helpers removeJSComments(code) match(/users/gm) length <= 2)\n```\nThe users object should only contain the keys Alan, Jeff, Sarah, and Ryan\njs\nassert(\n'Alan' in users &&\n'Jeff' in users &&\n'Sarah' in users &&\n'Ryan' in users &&\nObject keys(users) length === 4\n);\nThe function isEveryoneHere should return true if Alan, Jeff, Sarah, and Ryan are properties on the object passed to it js\nassert(isEveryoneHere(users) === true);\nThe function isEveryoneHere should return false if Alan is not a property on the object passed to it js\nassert(\n(function () {\ndelete users Alan;\nreturn isEveryoneHere(users);\n})() === false\n);\nThe function isEveryoneHere should return false if Jeff is not a property on the object passed to it js\nassert(\n(function () {\ndelete users Jeff;\nreturn isEveryoneHere(users);\n})() === false\n);\nThe function isEveryoneHere should return false if Sarah is not a property on the object passed to it js\nassert(\n(function () {\ndelete users Sarah;\nreturn isEveryoneHere(users);\n})() === false\n);\nThe function isEveryoneHere should return false if Ryan is not a property on the object passed to it js\nassert(\n(function () {\ndelete users",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3115,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-if-an-object-has-a-property.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ffe3db8f33da581dff6fa6ecca605918",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-if-an-object-has-a-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the object passed to it js assert( (function () { delete users Jeff; return isEveryoneHere(users); })() === false ); The function isEveryoneHere should return false if Sarah is not a property on the object passed to it js assert( (function () { delete users Sarah; return isEveryoneHere(users); })() === false ); The function isEveryoneHere should return false if Ryan is not a property on the object passed to it js assert( (function () { delete usersRyan;\nreturn isEveryoneHere(users);\n})() === false\n);\n--seed--\n--seed-contents--\n```js\nlet users = {\nAlan: {\nage: 27,\nonline: true\n},\nJeff: {\nage: 32,\nonline: true\n},\nSarah: {\nage: 48,\nonline: true\n},\nRyan: {\nage: 19,\nonline: true\n}\n};\nfunction isEveryoneHere(userObj) {\n// Only change code below this line\n// Only change code above this line\n}\nconsole log(isEveryoneHere(users));\n```\n--solutions--\n```js\nlet users = {\nAlan: {\nage: 27,\nonline: true\n},\nJeff: {\nage: 32,\nonline: true\n},\nSarah: {\nage: 48,\nonline: true\n},\nRyan: {\nage: 19,\nonline: true\n}\n};\nfunction isEveryoneHere(userObj) {\nreturn [\n'Alan',\n'Jeff',\n'Sarah',\n'Ryan'\n] every(user => userObj hasOwnProperty(user));\n}\nconsole log(isEveryoneHere(users));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3115,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-if-an-object-has-a-property.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2e2a0af2277f6c6abe3d3ce4e090280b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-for-the-presence-of-an-element-with-indexof.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7b367417b2b2512b14\ntitle: Check For The Presence of an Element With indexOf()\nchallengeType: 1\nforumTopicId: 301154\ndashedName: check-for-the-presence-of-an-element-with-indexof\n--description--\nSince arrays can be changed, or mutated, at any time, there's no guarantee about where a particular piece of data will be on a given array, or if that element even still exists Luckily, JavaScript provides us with another built-in method, indexOf(), that allows us to quickly and easily check for the presence of an element on an array indexOf() takes an element as a parameter, and when called, it returns the position, or index, of that element, or -1 if the element does not exist on the array For example:\n```js\nlet fruits = ['apples', 'pears', 'oranges', 'peaches', 'pears'];\nfruits indexOf('dates');\nfruits indexOf('oranges');\nfruits indexOf('pears');\n```\nindexOf('dates') returns -1, indexOf('oranges') returns 2, and indexOf('pears') returns 1 (the first index at which each element exists) --instructions--\nindexOf() can be incredibly useful for quickly checking for the presence of an element on an array We have defined a function, quickCheck, that takes an array and an element as arguments Modify the function using indexOf() so that it returns true if the passed element exists on the array, and false if it does not --hints--\nThe quickCheck function should return a boolean (true or false), not a string (\"true\" or \"false\")\njs\nassert isBoolean(quickCheck(['squash', 'onions', 'shallots'], 'mushrooms'));\nquickCheck([\"squash\", \"onions\", \"shallots\"], \"mushrooms\") should return false\njs\nassert strictEqual(\nquickCheck(['squash', 'onions', 'shallots'], 'mushrooms'),\nfalse\n);\nquickCheck([\"onions\", \"squash\", \"shallots\"], \"onions\") should return true\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-for-the-presence-of-an-element-with-indexof.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "426f4fdbf1d59a7bd1adb95c24e1d6bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-for-the-presence-of-an-element-with-indexof.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an element as arguments Modify the function using indexOf() so that it returns true if the passed element exists on the array, and false if it does not --hints-- The quickCheck function should return a boolean (true or false), not a string (\"true\" or \"false\") js assert isBoolean(quickCheck(['squash', 'onions', 'shallots'], 'mushrooms')); quickCheck([\"squash\", \"onions\", \"shallots\"], \"mushrooms\") should return false js assert strictEqual( quickCheck(['squash', 'onions', 'shallots'], 'mushrooms'), false ); quickCheck([\"onions\", \"squash\", \"shallots\"], \"onions\") should return true js assertstrictEqual(\nquickCheck(['onions', 'squash', 'shallots'], 'onions'),\ntrue\n);\nquickCheck([3, 5, 9, 125, 45, 2], 125) should return true\njs\nassert strictEqual(quickCheck([3, 5, 9, 125, 45, 2], 125), true);\nquickCheck([true, false, false], undefined) should return false\njs\nassert strictEqual(quickCheck([true, false, false], undefined), false);\nThe quickCheck function should utilize the indexOf() method\njs\nassert notStrictEqual(quickCheck toString() search(/\\ indexOf\\(/), -1);\n--seed--\n--seed-contents--\n```js\nfunction quickCheck(arr, elem) {\n// Only change code below this line\n// Only change code above this line\n}\nconsole log(quickCheck(['squash', 'onions', 'shallots'], 'mushrooms'));\n```\n--solutions--\njs\nfunction quickCheck(arr, elem) {\nreturn arr indexOf(elem) >= 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\check-for-the-presence-of-an-element-with-indexof.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "04a9204b621d63e4e2c625d2a8922cae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-key-value-pairs-to-javascript-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7c367417b2b2512b18\ntitle: Add Key-Value Pairs to JavaScript Objects\nchallengeType: 1\nforumTopicId: 301153\ndashedName: add-key-value-pairs-to-javascript-objects\n--description--\nAt their most basic, objects are just collections of key-value pairs In other words, they are pieces of data (values) mapped to unique identifiers called properties (keys) Take a look at an example:\njs\nconst tekkenCharacter = {\nplayer: 'Hwoarang',\nfightingStyle: 'Tae Kwon Doe',\nhuman: true\n};\nThe above code defines a Tekken video game character object called tekkenCharacter It has three properties, each of which map to a specific value If you want to add an additional property, such as \"origin\", it can be done by assigning origin to the object:\njs\ntekkenCharacter origin = 'South Korea';\nThis uses dot notation If you were to observe the tekkenCharacter object, it will now include the origin property Hwoarang also had distinct orange hair You can add this property with bracket notation by doing:\njs\ntekkenCharacter['hair color'] = 'dyed orange';\nBracket notation is required if your property has a space in it or if you want to use a variable to name the property In the above case, the property is enclosed in quotes to denote it as a string and will be added exactly as shown Without quotes, it will be evaluated as a variable and the name of the property will be whatever value the variable is Here's an example with a variable:\n```js\nconst eyes = 'eye color';\ntekkenCharacter[eyes] = 'brown';\n```\nAfter adding all the examples, the object will look like this:\njs\n{\nplayer: 'Hwoarang',\nfightingStyle: 'Tae Kwon Doe',\nhuman: true,\norigin: 'South Korea',\n'hair color': 'dyed orange',\n'eye color': 'brown'\n};\n--instructions--\nA foods object has been created with three entries Using the syntax of your choice, add three more entries to it: bananas with a value of 13, grapes with a value of 35, and strawberries with a value of 27 --hints--\nfoods should be an object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-key-value-pairs-to-javascript-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "54dd16db1980e76e3fcbc42804c3845d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-key-value-pairs-to-javascript-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the examples, the object will look like this: js { player: 'Hwoarang', fightingStyle: 'Tae Kwon Doe', human: true, origin: 'South Korea', 'hair color': 'dyed orange', 'eye color': 'brown' }; --instructions-- A foods object has been created with three entries Using the syntax of your choice, add three more entries to it: bananas with a value of 13, grapes with a value of 35, and strawberries with a value of 27 --hints-- foods should be an objectjs\nassert(typeof foods === 'object');\nThe foods object should have a key bananas with a value of 13 js\nassert(foods bananas === 13);\nThe foods object should have a key grapes with a value of 35 js\nassert(foods grapes === 35);\nThe foods object should have a key strawberries with a value of 27 js\nassert(foods strawberries === 27);\nThe definition of the foods object should not be changed js\nassert(\n__helpers removeJSComments(code) search(/let foods/) === -1 &&\n__helpers removeJSComments(code) search(/const\\s+foods\\s*=\\s*{\\s*apples:\\s*25,\\s*oranges:\\s*32,\\s*plums:\\s*28\\s*};/\n) == -1\n);\n--seed--\n--seed-contents--\n```js\nconst foods = {\napples: 25,\noranges: 32,\nplums: 28\n};\n// Only change code below this line\n// Only change code above this line\nconsole log(foods);\n```\n--solutions--\n```js\nconst foods = {\napples: 25,\noranges: 32,\nplums: 28\n};\nfoods['bananas'] = 13;\nfoods['grapes']  = 35;\nfoods['strawberries'] = 27;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\add-key-value-pairs-to-javascript-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "64d1ccff093770dc431865e8b1984c84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\copy-array-items-using-slice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7a367417b2b2512b12\ntitle: Copy Array Items Using slice()\nchallengeType: 1\nforumTopicId: 301158\ndashedName: copy-array-items-using-slice\n--description--\nThe next method we will cover is slice(). Rather than modifying an array, slice() copies or extracts a given number of elements to a new array, leaving the array it is called upon untouched. slice() takes only 2 parameters — the first is the index at which to begin extraction, and the second is the index at which to stop extraction (extraction will occur up to, but not including the element at this index). Consider this:\n```js\nlet weatherConditions = ['rain', 'snow', 'sleet', 'hail', 'clear'];\nlet todaysWeather = weatherConditions.slice(1, 3);\n```\ntodaysWeather would have the value ['snow', 'sleet'], while weatherConditions would still have ['rain', 'snow', 'sleet', 'hail', 'clear'].\nIn effect, we have created a new array by extracting elements from an existing array.\n--instructions--\nWe have defined a function, forecast, that takes an array as an argument. Modify the function using slice() to extract information from the argument array and return a new array that contains the string elements warm and sunny.\n--hints--\nforecast should return [\"warm\", \"sunny\"]\njs\nassert.deepEqual(\nforecast(['cold', 'rainy', 'warm', 'sunny', 'cool', 'thunderstorms']),\n['warm', 'sunny']\n);\nThe forecast function should utilize the slice() method\njs\nassert(/\\.slice\\(/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction forecast(arr) {\n// Only change code below this line\nreturn arr;\n}\n// Only change code above this line\nconsole.log(forecast(['cold', 'rainy', 'warm', 'sunny', 'cool', 'thunderstorms']));\n```\n--solutions--\njs\nfunction forecast(arr) {\nreturn arr.slice(2,4);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1874,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\copy-array-items-using-slice.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "41a3b3bfac8c357d49c1eb9bfc49c2ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\copy-an-array-with-the-spread-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7b367417b2b2512b13\ntitle: Copy an Array with the Spread Operator\nchallengeType: 1\nforumTopicId: 301157\ndashedName: copy-an-array-with-the-spread-operator\n--description--\nWhile slice() allows us to be selective about what elements of an array to copy, among several other useful tasks, ES6's new spread operator allows us to easily copy all of an array's elements, in order, with a simple and highly readable syntax The spread syntax simply looks like this: In practice, we can use the spread operator to copy an array like so:\njs\nlet thisArray = [true, true, undefined, false, null];\nlet thatArray = [ thisArray];\nthatArray equals [true, true, undefined, false, null] thisArray remains unchanged and thatArray contains the same elements as thisArray --instructions--\nWe have defined a function, copyMachine which takes arr (an array) and num (a number) as arguments The function is supposed to return a new array made up of num copies of arr We have done most of the work for you, but it doesn't work quite right yet Modify the function using spread syntax so that it works correctly (hint: another method we have already covered might come in handy here ) --hints--\ncopyMachine([true, false, true], 2) should return [[true, false, true], [true, false, true]]\njs\nassert deepEqual(copyMachine([true, false, true], 2), [\n[true, false, true],\n[true, false, true]\n]);\ncopyMachine([1, 2, 3], 5) should return [[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]]\njs\nassert deepEqual(copyMachine([1, 2, 3], 5), [\n[1, 2, 3],\n[1, 2, 3],\n[1, 2, 3],\n[1, 2, 3],\n[1, 2, 3]\n]);\ncopyMachine([true, true, null], 1) should return [[true, true, null]]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2742,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\copy-an-array-with-the-spread-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4786445cd0e2c243ff9dcec6605f75ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\copy-an-array-with-the-spread-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return [[true, false, true], [true, false, true]] js assert deepEqual(copyMachine([true, false, true], 2), [ [true, false, true], [true, false, true] ]); copyMachine([1, 2, 3], 5) should return [[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]] js assert deepEqual(copyMachine([1, 2, 3], 5), [ [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3] ]); copyMachine([true, true, null], 1) should return [[true, true, null]] js assertdeepEqual(copyMachine([true, true, null], 1), [[true, true, null]]);\ncopyMachine([\"it works\"], 3) should return [[\"it works\"], [\"it works\"], [\"it works\"]]\njs\nassert deepEqual(copyMachine(['it works'], 3), [\n['it works'],\n['it works'],\n['it works']\n]);\nThe copyMachine function should utilize the spread operator with array arr\njs\nassert(__helpers removeJSComments(__helpers removeJSComments(code)) match(/\\ \\ \\ \\s*arr/));\n--seed--\n--seed-contents--\n```js\nfunction copyMachine(arr, num) {\nlet newArr = [];\nwhile (num >= 1) {\n// Only change code below this line\n// Only change code above this line\nnum--;\n}\nreturn newArr;\n}\nconsole log(copyMachine([true, false, true], 2));\n```\n--solutions--\njs\nfunction copyMachine(arr,num){\nlet newArr=[];\nwhile(num >=1){\nnewArr push([ arr]);\nnum--;\n}\nreturn newArr;\n}\nconsole log(copyMachine([true, false, true], 2));",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2742,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\copy-an-array-with-the-spread-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9763e973cbc41ce77d5090b11d274ba1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\generate-an-array-of-all-object-keys-with-object.keys.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7d367417b2b2512b1e\ntitle: Generate an Array of All Object Keys with Object keys()\nchallengeType: 1\nforumTopicId: 301160\ndashedName: generate-an-array-of-all-object-keys-with-object-keys\n--description--\nWe can also generate an array which contains all the keys stored in an object with the Object keys() method This method takes an object as the argument and returns an array of strings representing each property in the object Again, there will be no specific order to the entries in the array --instructions--\nFinish writing the getArrayOfUsers function so that it returns an array containing all the properties in the object it receives as an argument --hints--\nThe users object should only contain the keys Alan, Jeff, Sarah, and Ryan\njs\nassert(\n'Alan' in users &&\n'Jeff' in users &&\n'Sarah' in users &&\n'Ryan' in users &&\nObject keys(users) length === 4\n);\nThe getArrayOfUsers function should return an array which contains all the keys in the users object\njs\nassert(\n(function () {\nusers Sam = {};\nusers Lewis = {};\nlet R = getArrayOfUsers(users);\nreturn (\nR indexOf('Alan') == -1 &&\nR indexOf('Jeff') == -1 &&\nR indexOf('Sarah') == -1 &&\nR indexOf('Ryan') == -1 &&\nR indexOf('Sam') == -1 &&\nR indexOf('Lewis') == -1\n);\n})() === true\n);\n--seed--\n--seed-contents--\n```js\nlet users = {\nAlan: {\nage: 27,\nonline: false\n},\nJeff: {\nage: 32,\nonline: true\n},\nSarah: {\nage: 48,\nonline: false\n},\nRyan: {\nage: 19,\nonline: true\n}\n};\nfunction getArrayOfUsers(obj) {\n// Only change code below this line\n// Only change code above this line\n}\nconsole log(getArrayOfUsers(users));\n```\n--solutions--\n```js\nlet users = {\nAlan: {\nage: 27,\nonline: false\n},\nJeff: {\nage: 32,\nonline: true\n},\nSarah: {\nage: 48,\nonline: false\n},\nRyan: {\nage: 19,\nonline: true\n}\n};\nfunction getArrayOfUsers(obj) {\nreturn Object keys(obj);\n}\nconsole log(getArrayOfUsers(users));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2116,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\generate-an-array-of-all-object-keys-with-object.keys.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ec02f14d460599c627148b9159ddbad8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-the-keys-of-an-object-with-a-for...in-statement.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7d367417b2b2512b1d\ntitle: Iterate Through the Keys of an Object with a for in Statement\nchallengeType: 1\nforumTopicId: 301162\ndashedName: iterate-through-the-keys-of-an-object-with-a-for---in-statement\n--description--\nSometimes you need to iterate through all the keys within an object You can use a for in loop to do this The for in loop looks like:\n```javascript\nconst refrigerator = {\n'milk': 1,\n'eggs': 12,\n};\nfor (const food in refrigerator) {\nconsole log(food, refrigerator[food]);\n}\n```\nThis code logs milk 1  and eggs 12, with each key-value pair on its own line We defined the variable food in the loop head and this variable was set to each of the object's keys on each iteration, resulting in each food's name being printed to the console NOTE: Objects do not maintain an ordering to stored keys like arrays do; thus a key's position on an object, or the relative order in which it appears, is irrelevant when referencing or accessing that key --instructions--\nWe've defined a function countOnline which accepts one argument, allUsers Use a for in statement inside this function to loop through the allUsers object and return the number of users whose online property is set to true An example of an object which could be passed to countOnline is shown below Each user will have an online property set to either true or false js\n{\nAlan: {\nonline: false\n},\nJeff: {\nonline: true\n},\nSarah: {\nonline: false\n}\n}\n--hints--\nThe function countOnline should use a for in statement to iterate through the object keys of the object passed to it js\nassert match(\n__helpers removeJSComments(code),\n/for\\s*\\(\\s*(var|let|const)\\s+[a-zA-Z_$]\\w*\\s+in\\s+[a-zA-Z_$]\\w*\\s*\\)/\n);\nThe function countOnline should return 1 when the object { Alan: { online: false }, Jeff: { online: true }, Sarah: { online: false } } is passed to it\njs\nconst usersObj1 = {\nAlan: {\nonline: false\n},\nJeff: {\nonline: true\n},\nSarah: {\nonline: false\n}\n}\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3323,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-the-keys-of-an-object-with-a-for...in-statement.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4f9e55dc306ac2d7a4e68452f7f2ed1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-the-keys-of-an-object-with-a-for...in-statement.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "use a for in statement to iterate through the object keys of the object passed to it js assert match( __helpers removeJSComments(code), /for\\s*\\(\\s*(var|let|const)\\s+[a-zA-Z_$]\\w*\\s+in\\s+[a-zA-Z_$]\\w*\\s*\\)/ ); The function countOnline should return 1 when the object { Alan: { online: false }, Jeff: { online: true }, Sarah: { online: false } } is passed to it js const usersObj1 = { Alan: { online: false }, Jeff: { online: true }, Sarah: { online: false } } assertequal(countOnline(usersObj1), 1);\nThe function countOnline should return 2 when the object { Alan: { online: true }, Jeff: { online: false }, Sarah: { online: true } } is passed to it\njs\nconst usersObj2 = {\nAlan: {\nonline: true\n},\nJeff: {\nonline: false\n},\nSarah: {\nonline: true\n}\n}\nassert equal(countOnline(usersObj2), 2);\nThe function countOnline should return 0 when the object { Alan: { online: false }, Jeff: { online: false }, Sarah: { online: false } } is passed to it\njs\nconst usersObj3 = {\nAlan: {\nonline: false\n},\nJeff: {\nonline: false\n},\nSarah: {\nonline: false\n}\n}\nassert equal(countOnline(usersObj3), 0);\n--seed--\n--seed-contents--\n```js\nconst users = {\nAlan: {\nonline: false\n},\nJeff: {\nonline: true\n},\nSarah: {\nonline: false\n}\n}\nfunction countOnline(allUsers) {\n// Only change code below this line\n// Only change code above this line\n}\nconsole log(countOnline(users));\n```\n--solutions--\njs\nfunction countOnline(allUsers) {\nlet numOnline = 0;\nfor(const user in allUsers){\nif(allUsers[user] online) {\nnumOnline++;\n}\n}\nreturn numOnline;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3323,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-the-keys-of-an-object-with-a-for...in-statement.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5945cecbaa45f1f90206ba76a21db0b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-all-an-arrays-items-using-for-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7b367417b2b2512b15\ntitle: Iterate Through All an Array's Items Using For Loops\nchallengeType: 1\nforumTopicId: 301161\ndashedName: iterate-through-all-an-arrays-items-using-for-loops\n--description--\nSometimes when working with arrays, it is very handy to be able to iterate through each item to find one or more elements that we might need, or to manipulate an array based on which data items meet a certain set of criteria JavaScript offers several built in methods that each iterate over arrays in slightly different ways to achieve different results (such as every(), forEach(), map(), etc ), however the technique which is most flexible and offers us the greatest amount of control is a simple for loop Consider the following:\n```js\nfunction greaterThanTen(arr) {\nlet newArr = [];\nfor (let i = 0; i < arr length; i++) {\nif (arr[i] > 10) {\nnewArr push(arr[i]);\n}\n}\nreturn newArr;\n}\ngreaterThanTen([2, 12, 8, 14, 80, 0, 1]);\n```\nUsing a for loop, this function iterates through and accesses each element of the array, and subjects it to a simple test that we have created In this way, we have easily and programmatically determined which data items are greater than 10, and returned a new array, [12, 14, 80], containing those items --instructions--\nWe have defined a function, filteredArray, which takes arr, a nested array, and elem as arguments, and returns a new array elem represents an element that may or may not be present on one or more of the arrays nested within arr Modify the function, using a for loop, to return a filtered version of the passed array such that any array nested within arr containing elem has been removed --hints--\nfilteredArray([[10, 8, 3], [14, 6, 23], [3, 18, 6]], 18) should return [[10, 8, 3], [14, 6, 23]]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3424,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-all-an-arrays-items-using-for-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0930bb97e9501d100eb378bc0138c3f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-all-an-arrays-items-using-for-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "arguments, and returns a new array elem represents an element that may or may not be present on one or more of the arrays nested within arr Modify the function, using a for loop, to return a filtered version of the passed array such that any array nested within arr containing elem has been removed --hints-- filteredArray([[10, 8, 3], [14, 6, 23], [3, 18, 6]], 18) should return [[10, 8, 3], [14, 6, 23]] js assertdeepEqual(\nfilteredArray(\n[\n[10, 8, 3],\n[14, 6, 23],\n[3, 18, 6]\n],\n18\n),\n[\n[10, 8, 3],\n[14, 6, 23]\n]\n);\nfilteredArray([[\"trumpets\", 2], [\"flutes\", 4], [\"saxophones\", 2]], 2) should return [[\"flutes\", 4]]\njs\nassert deepEqual(\nfilteredArray(\n[\n['trumpets', 2],\n['flutes', 4],\n['saxophones', 2]\n],\n2\n),\n[['flutes', 4]]\n);\nfilteredArray([[\"amy\", \"beth\", \"sam\"], [\"dave\", \"sean\", \"peter\"]], \"peter\") should return [[\"amy\", \"beth\", \"sam\"]]\njs\nassert deepEqual(\nfilteredArray(\n[\n['amy', 'beth', 'sam'],\n['dave', 'sean', 'peter']\n],\n'peter'\n),\n[['amy', 'beth', 'sam']]\n);\nfilteredArray([[3, 2, 3], [1, 6, 3], [3, 13, 26], [19, 3, 9]], 3) should return []\njs\nassert deepEqual(\nfilteredArray(\n[\n[3, 2, 3],\n[1, 6, 3],\n[3, 13, 26],\n[19, 3, 9]\n],\n3\n),\n[]\n);\nThe filteredArray function should utilize a for loop\njs\nassert notStrictEqual(filteredArray toString()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3424,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-all-an-arrays-items-using-for-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1be57eeef4f44ce4edc362f3ffe37e6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-all-an-arrays-items-using-for-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"sean\", \"peter\"]], \"peter\") should return [[\"amy\", \"beth\", \"sam\"]] js assert deepEqual( filteredArray( [ ['amy', 'beth', 'sam'], ['dave', 'sean', 'peter'] ], 'peter' ), [['amy', 'beth', 'sam']] ); filteredArray([[3, 2, 3], [1, 6, 3], [3, 13, 26], [19, 3, 9]], 3) should return [] js assert deepEqual( filteredArray( [ [3, 2, 3], [1, 6, 3], [3, 13, 26], [19, 3, 9] ], 3 ), [] ); The filteredArray function should utilize a for loop js assert notStrictEqual(filteredArray toString()search(/for/), -1);\n--seed--\n--seed-contents--\n```js\nfunction filteredArray(arr, elem) {\nlet newArr = [];\n// Only change code below this line\n// Only change code above this line\nreturn newArr;\n}\nconsole log(filteredArray([[3, 2, 3], [1, 6, 3], [3, 13, 26], [19, 3, 9]], 3));\n```\n--solutions--\njs\nfunction filteredArray(arr, elem) {\nlet newArr = [];\nfor (let i = 0; i<arr length; i++) {\nif (arr[i] indexOf(elem) < 0) {\nnewArr push(arr[i]);\n}\n}\nreturn newArr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3424,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\iterate-through-all-an-arrays-items-using-for-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "84b704173c0dfbfc84cc160deb02016d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-from-an-array-with-pop-and-shift.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b2367417b2b2512b0f\ntitle: Remove Items from an Array with pop() and shift()\nchallengeType: 1\nforumTopicId: 301165\ndashedName: remove-items-from-an-array-with-pop-and-shift\n--description--\nBoth push() and unshift() have corresponding methods that are nearly functional opposites: pop() and shift() As you may have guessed by now, instead of adding, pop() removes an element from the end of an array, while shift() removes an element from the beginning The key difference between pop() and shift() and their cousins push() and unshift(), is that neither method takes parameters, and each only allows an array to be modified by a single element at a time Let's take a look:\n```js\nlet greetings = ['whats up ', 'hello', 'see ya '];\ngreetings pop();\n```\ngreetings would have the value ['whats up ', 'hello'] js\ngreetings shift();\ngreetings would have the value ['hello'] We can also return the value of the removed element with either method like this:\njs\nlet popped = greetings pop();\ngreetings would have the value [], and popped would have the value hello --instructions--\nWe have defined a function, popShift, which takes an array as an argument and returns a new array Modify the function, using pop() and shift(), to remove the first and last elements of the argument array, and assign the removed elements to their corresponding variables, so that the returned array contains their values --hints--\npopShift([\"challenge\", \"is\", \"not\", \"complete\"]) should return [\"challenge\", \"complete\"]\njs\nassert deepEqual(popShift(['challenge', 'is', 'not', 'complete']), [\n'challenge',\n'complete'\n]);\nThe popShift function should utilize the pop() method\njs\nassert notStrictEqual(popShift toString() search(/\\ pop\\(/), -1);\nThe popShift function should utilize the shift() method\njs\nassert notStrictEqual(popShift toString() search(/\\ shift\\(/), -1);\n--seed--\n--seed-contents--\n```js\nfunction popShift(arr) {\nlet popped; // Change this line\nlet shifted; // Change this line\nreturn [shifted, popped];\n}\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-from-an-array-with-pop-and-shift.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4c0b6a8cee6de9afb1d94fa055720ee1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-from-an-array-with-pop-and-shift.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "array contains their values --hints-- popShift([\"challenge\", \"is\", \"not\", \"complete\"]) should return [\"challenge\", \"complete\"] js assert deepEqual(popShift(['challenge', 'is', 'not', 'complete']), [ 'challenge', 'complete' ]); The popShift function should utilize the pop() method js assert notStrictEqual(popShift toString() search(/\\ pop\\(/), -1); The popShift function should utilize the shift() method js assert notStrictEqual(popShift toString() search(/\\ shift\\(/), -1); --seed-- --seed-contents-- ```js function popShift(arr) { let popped; // Change this line let shifted; // Change this line return [shifted, popped]; } consolelog(popShift(['challenge', 'is', 'not', 'complete']));\n```\n--solutions--\njs\nfunction popShift(arr) {\nlet popped = arr pop(); // Change this line\nlet shifted = arr shift(); // Change this line\nreturn [shifted, popped];\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-from-an-array-with-pop-and-shift.md",
      "source_type": "git_repo"
    },
    "token_count": 207,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "660693f4897e4f6c0e610a114f7cab2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-object-nested-within-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7c367417b2b2512b19\ntitle: Modify an Object Nested Within an Object\nchallengeType: 1\nforumTopicId: 301164\ndashedName: modify-an-object-nested-within-an-object\n--description--\nNow let's take a look at a slightly more complex object Object properties can be nested to an arbitrary depth, and their values can be any type of data supported by JavaScript, including arrays and even other objects Consider the following:\njs\nlet nestedObject = {\nid: 28802695164,\ndate: 'December 31, 2016',\ndata: {\ntotalUsers: 99,\nonline: 80,\nonlineStatus: {\nactive: 67,\naway: 13,\nbusy: 8\n}\n}\n};\nnestedObject has three properties: id (value is a number), date (value is a string), and data (value is an object with its nested structure) While structures can quickly become complex, we can still use the same notations to access the information we need To assign the value 10 to the busy property of the nested onlineStatus object, we use dot notation to reference the property:\njs\nnestedObject data onlineStatus busy = 10;\n--instructions--\nHere we've defined an object userActivity, which includes another object nested within it Set the value of the online key to 45 --hints--\nuserActivity should have id, date and data properties js\nassert(\n'id' in userActivity && 'date' in userActivity && 'data' in userActivity\n);\nuserActivity should have a data key set to an object with keys totalUsers and online js\nassert('totalUsers' in userActivity data && 'online' in userActivity data);\nThe online property nested in the data key of userActivity should be set to 45\njs\nassert(userActivity data online === 45);\nThe online property should be set using dot or bracket notation js\nassert strictEqual(__helpers removeJSComments(code) search(/online: 45/), -1);\n--seed--\n--seed-contents--\n```js\nlet userActivity = {\nid: 23894201352,\ndate: 'January 1, 2017',\ndata: {\ntotalUsers: 51,\nonline: 42\n}\n};\n// Only change code below this line\n// Only change code above this line\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2354,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-object-nested-within-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0db4a509292a1a31a1bc4e486b8940d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-object-nested-within-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "data); The online property nested in the data key of userActivity should be set to 45 js assert(userActivity data online === 45); The online property should be set using dot or bracket notation js assert strictEqual(__helpers removeJSComments(code) search(/online: 45/), -1); --seed-- --seed-contents-- ```js let userActivity = { id: 23894201352, date: 'January 1, 2017', data: { totalUsers: 51, online: 42 } }; // Only change code below this line // Only change code above this line consolelog(userActivity);\n```\n--solutions--\n```js\nlet userActivity = {\nid: 23894201352,\ndate: 'January 1, 2017',\ndata: {\ntotalUsers: 51,\nonline: 42\n}\n};\nuserActivity data online = 45;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2354,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-object-nested-within-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 188,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "14d9ab7825f05906b76f1729b18c5c4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-array-stored-in-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7d367417b2b2512b1f\ntitle: Modify an Array Stored in an Object\nchallengeType: 1\nforumTopicId: 301163\ndashedName: modify-an-array-stored-in-an-object\n--description--\nNow you've seen all the basic operations for JavaScript objects You can add, modify, and remove key-value pairs, check if keys exist, and iterate over all the keys in an object As you continue learning JavaScript you will see even more versatile applications of objects Additionally, the Data Structures lessons located in the Coding Interview Prep section of the curriculum also cover the ES6 Map and Set objects, both of which are similar to ordinary objects but provide some additional features Now that you've learned the basics of arrays and objects, you're fully prepared to begin tackling more complex problems using JavaScript --instructions--\nTake a look at the object we've provided in the code editor The user object contains three keys The data key contains five keys, one of which contains an array of friends From this, you can see how flexible objects are as data structures We've started writing a function addFriend Finish writing it so that it takes a user object and adds the name of the friend argument to the array stored in user data friends and returns that array --hints--\nThe user object should have name, age, and data keys js\nassert('name' in user && 'age' in user && 'data' in user);\nThe addFriend function should accept a user object and a friend string as arguments and add the friend to the array of friends in the user object js\nassert(\n(function () {\nlet L1 = user data friends length;\naddFriend(user, 'Sean');\nlet L2 = user data friends length;\nreturn L2 === L1 + 1;\n})()\n);\naddFriend(user, \"Pete\") should return [\"Sam\", \"Kira\", \"Tomo\", \"Pete\"] js\nassert deepEqual(\n(function () {\ndelete user data friends;\nuser data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-array-stored-in-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8da484f2b9eaecf22d6dbf474170fe38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-array-stored-in-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "The addFriend function should accept a user object and a friend string as arguments and add the friend to the array of friends in the user object js assert( (function () { let L1 = user data friends length; addFriend(user, 'Sean'); let L2 = user data friends length; return L2 === L1 + 1; })() ); addFriend(user, \"Pete\") should return [\"Sam\", \"Kira\", \"Tomo\", \"Pete\"] js assert deepEqual( (function () { delete user data friends; user datafriends = ['Sam', 'Kira', 'Tomo'];\nreturn addFriend(user, 'Pete');\n})(),\n['Sam', 'Kira', 'Tomo', 'Pete']\n);\n--seed--\n--seed-contents--\n```js\nlet user = {\nname: 'Kenneth',\nage: 28,\ndata: {\nusername: 'kennethCodesAllDay',\njoinDate: 'March 26, 2016',\norganization: 'freeCodeCamp',\nfriends: [\n'Sam',\n'Kira',\n'Tomo'\n],\nlocation: {\ncity: 'San Francisco',\nstate: 'CA',\ncountry: 'USA'\n}\n}\n};\nfunction addFriend(userObj, friend) {\n// Only change code below this line\n// Only change code above this line\n}\nconsole log(addFriend(user, 'Pete'));\n```\n--solutions--\n```js\nlet user = {\nname: 'Kenneth',\nage: 28,\ndata: {\nusername: 'kennethCodesAllDay',\njoinDate: 'March 26, 2016',\norganization: 'freeCodeCamp',\nfriends: [\n'Sam',\n'Kira',\n'Tomo'\n],\nlocation: {\ncity: 'San Francisco',\nstate: 'CA',\ncountry: 'USA'\n}\n}\n};\nfunction addFriend(userObj, friend) {\nuserObj data friends push(friend);\nreturn userObj data friends;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\modify-an-array-stored-in-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "871079e7b1b5934326cea65ba9a13a27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7b367417b2b2512b16\ntitle: Create complex multi-dimensional arrays\nchallengeType: 1\nforumTopicId: 301159\ndashedName: create-complex-multi-dimensional-arrays\n--description--\nAwesome You have just learned a ton about arrays This has been a fairly high level overview, and there is plenty more to learn about working with arrays, much of which you will see in later sections But before moving on to looking at Objects, let's take one more look, and see how arrays can become a bit more complex than what we have seen in previous challenges One of the most powerful features when thinking of arrays as data structures, is that arrays can contain, or even be completely made up of other arrays We have seen arrays that contain arrays in previous challenges, but fairly simple ones However, arrays can contain an infinite depth of arrays that can contain other arrays, each with their own arbitrary levels of depth, and so on In this way, an array can very quickly become a very complex data structure, known as a multi-dimensional, or nested array Consider the following example:\njs\nlet nestedArray = [\n['deep'],\n[\n['deeper'], ['deeper']\n],\n[\n[\n['deepest'], ['deepest']\n],\n[\n[\n['deepest-est ']\n]\n]\n]\n];\nThe deep array is nested 2 levels deep The deeper arrays are 3 levels deep The deepest arrays are 4 levels, and the deepest-est is 5 While this example may seem convoluted, this level of complexity is not unheard of, or even unusual, when dealing with large amounts of data However, we can still very easily access the deepest levels of an array this complex with bracket notation:\njs\nconsole log(nestedArray[2][1][0][0][0]);\nThis logs the string deepest-est And now that we know where that piece of data is, we can reset it if we need to:\n```js\nnestedArray[2][1][0][0][0] = 'deeper still';\nconsole log(nestedArray[2][1][0][0][0]);\n```\nNow it logs deeper still --instructions--\nWe have defined a variable, myNestedArray, set equal to an array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "a34b3ebe80945960f1834582c9a87389",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dealing with large amounts of data However, we can still very easily access the deepest levels of an array this complex with bracket notation: js console log(nestedArray[2][1][0][0][0]); This logs the string deepest-est And now that we know where that piece of data is, we can reset it if we need to: ```js nestedArray[2][1][0][0][0] = 'deeper still'; console log(nestedArray[2][1][0][0][0]); ``` Now it logs deeper still --instructions-- We have defined a variable, myNestedArray, set equal to an arrayModify myNestedArray, using any combination of strings, numbers, and booleans for data elements, so that it has exactly five levels of depth (remember, the outer-most array is level 1) Somewhere on the third level, include the string deep, on the fourth level, include the string deeper, and on the fifth level, include the string deepest --hints--\nmyNestedArray should contain only numbers, booleans, and strings as data elements\njs\nassert strictEqual(\n(function (arr) {\nlet flattened = (function flatten(arr) {\nconst flat = [] concat( arr);\nreturn flat some(Array isArray) flatten(flat) : flat;\n})(arr);\nfor (let i = 0; i < flattened length; i++) {\nif (\ntypeof flattened[i] == 'number' &&\ntypeof flattened[i] == 'string' &&\ntypeof flattened[i] == 'boolean'\n) {\nreturn false;\n}\n}\nreturn true;\n})(myNestedArray),\ntrue\n);\nmyNestedArray should have exactly 5 levels of depth\njs\nassert strictEqual(\n(function (arr) {\nlet depth = 0;\nfunction arrayDepth(array, i, d) {\nif (Array isArray(array[i])) {\narrayDepth(array[i], 0, d + 1);\n} else {\ndepth = d > depth d : depth;\n}\nif (i < array length) {\narrayDepth(array, i + 1, d);\n}\n}\narrayDepth(arr, 0, 0);\nreturn depth;\n})(myNestedArray),\n4\n);\nmyNestedArray should contain exactly one occurrence of the string deep on an array nested 3 levels deep\njs\nassert(\n(function howDeep(array, target, depth = 0) {\nreturn array reduce((combined, current) => {\nif (Array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "22ca33c3f86456428959a15583ffe631",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "if (Array isArray(array[i])) { arrayDepth(array[i], 0, d + 1); } else { depth = d > depth d : depth; } if (i < array length) { arrayDepth(array, i + 1, d); } } arrayDepth(arr, 0, 0); return depth; })(myNestedArray), 4 ); myNestedArray should contain exactly one occurrence of the string deep on an array nested 3 levels deep js assert( (function howDeep(array, target, depth = 0) { return array reduce((combined, current) => { if (ArrayisArray(current)) {\nreturn combined concat(howDeep(current, target, depth + 1));\n} else if (current === target) {\nreturn combined concat(depth);\n} else {\nreturn combined;\n}\n}, []);\n})(myNestedArray, 'deep') length === 1 &&\n(function howDeep(array, target, depth = 0) {\nreturn array reduce((combined, current) => {\nif (Array isArray(current)) {\nreturn combined concat(howDeep(current, target, depth + 1));\n} else if (current === target) {\nreturn combined concat(depth);\n} else {\nreturn combined;\n}\n}, []);\n})(myNestedArray, 'deep')[0] === 2\n);\nmyNestedArray should contain exactly one occurrence of the string deeper on an array nested 4 levels deep\njs\nassert(\n(function howDeep(array, target, depth = 0) {\nreturn array reduce((combined, current) => {\nif (Array isArray(current)) {\nreturn combined concat(howDeep(current, target, depth + 1));\n} else if (current === target) {\nreturn combined concat(depth);\n} else {\nreturn combined;\n}\n}, []);\n})(myNestedArray, 'deeper') length === 1 &&\n(function howDeep(array, target, depth = 0) {\nreturn array reduce((combined, current) => {\nif (Array isArray(current)) {\nreturn combined concat(howDeep(current, target, depth + 1));\n} else if (current === target) {\nreturn combined concat(depth);\n} else {\nreturn combined;\n}\n}, []);\n})(myNestedArray, 'deeper')[0] === 3\n);\nmyNestedArray should contain exactly one occurrence of the string deepest on an array nested 5 levels deep\njs\nassert(\n(function howDeep(array, target, depth = 0) {\nreturn array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "499caf7e9aeed342b8b83f1ef70ca538",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "&& (function howDeep(array, target, depth = 0) { return array reduce((combined, current) => { if (Array isArray(current)) { return combined concat(howDeep(current, target, depth + 1)); } else if (current === target) { return combined concat(depth); } else { return combined; } }, []); })(myNestedArray, 'deeper')[0] === 3 ); myNestedArray should contain exactly one occurrence of the string deepest on an array nested 5 levels deep js assert( (function howDeep(array, target, depth = 0) { return arrayreduce((combined, current) => {\nif (Array isArray(current)) {\nreturn combined concat(howDeep(current, target, depth + 1));\n} else if (current === target) {\nreturn combined concat(depth);\n} else {\nreturn combined;\n}\n}, []);\n})(myNestedArray, 'deepest') length === 1 &&\n(function howDeep(array, target, depth = 0) {\nreturn array reduce((combined, current) => {\nif (Array isArray(current)) {\nreturn combined concat(howDeep(current, target, depth + 1));\n} else if (current === target) {\nreturn combined concat(depth);\n} else {\nreturn combined;\n}\n}, []);\n})(myNestedArray, 'deepest')[0] === 4\n);\n--seed--\n--seed-contents--\njs\nlet myNestedArray = [\n// Only change code below this line\n['unshift', false, 1, 2, 3, 'complex', 'nested'],\n['loop', 'shift', 6, 7, 1000, 'method'],\n['concat', false, true, 'spread', 'array'],\n['mutate', 1327 98, 'splice', 'slice', 'push'],\n['iterate', 1 3849, 7, '8 4876', 'arbitrary', 'depth']\n// Only change code above this line\n];\n--solutions--\njs\nlet myNestedArray = [\n['unshift', ['deep', ['deeper', ['deepest']]],false, 1, 2, 3, 'complex', 'nested'],\n['loop', 'shift', 6, 7, 1000, 'method'],\n['concat', false, true, 'spread', 'array'],\n['mutate', 1327",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "03dd405c12ed5bf55bbcd20d0936a354",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[ // Only change code below this line ['unshift', false, 1, 2, 3, 'complex', 'nested'], ['loop', 'shift', 6, 7, 1000, 'method'], ['concat', false, true, 'spread', 'array'], ['mutate', 1327 98, 'splice', 'slice', 'push'], ['iterate', 1 3849, 7, '8 4876', 'arbitrary', 'depth'] // Only change code above this line ]; --solutions-- js let myNestedArray = [ ['unshift', ['deep', ['deeper', ['deepest']]],false, 1, 2, 3, 'complex', 'nested'], ['loop', 'shift', 6, 7, 1000, 'method'], ['concat', false, true, 'spread', 'array'], ['mutate', 132798, 'splice', 'slice', 'push'],\n['iterate', 1 3849, 7, '8 4876', 'arbitrary', 'depth']\n];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\create-complex-multi-dimensional-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 232,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "c1f87866523018be778074f97b15d1d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\access-array-data-with-indexes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392ca\ntitle: Access Array Data with Indexes\nchallengeType: 1\nforumTopicId: 16158\ndashedName: access-array-data-with-indexes\n--description--\nWe can access the data inside arrays using indexes.\nArray indexes are written in the same bracket notation that strings use, except that instead of specifying a character, they are specifying an entry in the array. Like strings, arrays use zero-based indexing, so the first element in an array has an index of 0.\nExample\njs\nconst array = [50, 60, 70];\nconsole.log(array[0]);\nconst data = array[1];\nThe console.log(array[0]) prints 50, and data has the value 60.\n--instructions--\nCreate a variable called myData and set it to equal the first value of myArray using bracket notation.\n--hints--\nThe variable myData should equal the first value of myArray.\njs\nassert(\n(function () {\nif (\ntypeof myArray !== 'undefined' &&\ntypeof myData !== 'undefined' &&\nmyArray[0] === myData\n) {\nreturn true;\n} else {\nreturn false;\n}\n})()\n);\nThe data in variable myArray should be accessed using bracket notation.\njs\nassert(\n(function () {\nif (__helpers.removeJSComments(code).match(/\\s*=\\s*myArray\\[0\\]/g)) {\nreturn true;\n} else {\nreturn false;\n}\n})()\n);\n--seed--\n--after-user-code--\njs\nif(typeof myArray !== \"undefined\" && typeof myData !== \"undefined\"){(function(y,z){return 'myArray = ' + JSON.stringify(y) + ', myData = ' + JSON.stringify(z);})(myArray, myData);}\n--seed-contents--\n```js\nconst myArray = [50, 60, 70];\n```\n--solutions--\njs\nconst myArray = [50, 60, 70];\nconst myData = myArray[0];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1756,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\access-array-data-with-indexes.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ff967142b734529beb3bd660ed411f44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\use-an-array-to-store-a-collection-of-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7e367417b2b2512b20\ntitle: Use an Array to Store a Collection of Data\nchallengeType: 1\nforumTopicId: 301167\ndashedName: use-an-array-to-store-a-collection-of-data\n--description--\nThe below is an example of the simplest implementation of an array data structure This is known as a one-dimensional array, meaning it only has one level, or that it does not have any other arrays nested within it Notice it contains booleans, strings, and numbers, among other valid JavaScript data types:\njs\nlet simpleArray = ['one', 2, 'three', true, false, undefined, null];\nconsole log(simpleArray length);\nThe console log call displays 7 All arrays have a length property, which as shown above, can be very easily accessed with the syntax Array length A more complex implementation of an array can be seen below This is known as a multi-dimensional array, or an array that contains other arrays Notice that this array also contains JavaScript objects, which we will examine very closely in our next section, but for now, all you need to know is that arrays are also capable of storing complex objects js\nlet complexArray = [\n[\n{\none: 1,\ntwo: 2\n},\n{\nthree: 3,\nfour: 4\n}\n],\n[\n{\na: \"a\",\nb: \"b\"\n},\n{\nc: \"c\",\nd: \"d\"\n}\n]\n];\n--instructions--\nWe have defined a variable called yourArray Complete the statement by assigning an array of at least 5 elements in length to the yourArray variable Your array should contain at least one string, one number, and one boolean --hints--\nyourArray should be an array js\nassert strictEqual(Array isArray(yourArray), true);\nyourArray should be at least 5 elements long js\nassert isAtLeast(yourArray length, 5);\nyourArray should contain at least one boolean js\nassert(yourArray filter((el) => typeof el === 'boolean') length >= 1);\nyourArray should contain at least one number js\nassert(yourArray filter((el) => typeof el === 'number') length >= 1);\nyourArray should contain at least one string js\nassert(yourArray filter((el) => typeof el === 'string')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\use-an-array-to-store-a-collection-of-data.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f6f46c9c53a28912fce351780e7fd528",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\use-an-array-to-store-a-collection-of-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "boolean --hints-- yourArray should be an array js assert strictEqual(Array isArray(yourArray), true); yourArray should be at least 5 elements long js assert isAtLeast(yourArray length, 5); yourArray should contain at least one boolean js assert(yourArray filter((el) => typeof el === 'boolean') length >= 1); yourArray should contain at least one number js assert(yourArray filter((el) => typeof el === 'number') length >= 1); yourArray should contain at least one string js assert(yourArray filter((el) => typeof el === 'string')length >= 1);\n--seed--\n--seed-contents--\njs\nlet yourArray; // Change this line\n--solutions--\njs\nlet yourArray = ['a string', 100, true, ['one', 2], 'another string'];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\use-an-array-to-store-a-collection-of-data.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bbbd30663ee4a7c4eac3344e4460f175",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\use-the-delete-keyword-to-remove-object-properties.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7c367417b2b2512b1b\ntitle: Use the delete Keyword to Remove Object Properties\nchallengeType: 1\nforumTopicId: 301168\ndashedName: use-the-delete-keyword-to-remove-object-properties\n--description--\nNow you know what objects are and their basic features and advantages In short, they are key-value stores which provide a flexible, intuitive way to structure data, and, they provide very fast lookup time Throughout the rest of these challenges, we will describe several common operations you can perform on objects so you can become comfortable applying these useful data structures in your programs In earlier challenges, we have both added to and modified an object's key-value pairs Here we will see how we can remove a key-value pair from an object Let's revisit our foods object example one last time If we wanted to remove the apples key, we can remove it by using the delete keyword like this:\njs\ndelete foods apples;\n--instructions--\nUse the delete keyword to remove the oranges, plums, and strawberries keys from the foods object --hints--\nThe foods object should only have three keys: apples, grapes, and bananas js\nassert( foods hasOwnProperty('oranges') && foods hasOwnProperty('plums') && foods hasOwnProperty('strawberries') &&\nObject keys(foods) length === 3\n);\nThe oranges, plums, and strawberries keys should be removed using delete js\nassert(\n__helpers removeJSComments(code) search(/oranges:/) == -1 &&\n__helpers removeJSComments(code) search(/plums:/) == -1 &&\n__helpers removeJSComments(code) search(/strawberries:/) == -1\n);\n--seed--\n--seed-contents--\n```js\nlet foods = {\napples: 25,\noranges: 32,\nplums: 28,\nbananas: 13,\ngrapes: 35,\nstrawberries: 27\n};\n// Only change code below this line\n// Only change code above this line\nconsole log(foods);\n```\n--solutions--\n```js\nlet foods = {\napples: 25,\noranges: 32,\nplums: 28,\nbananas: 13,\ngrapes: 35,\nstrawberries: 27\n};\ndelete foods oranges;\ndelete foods plums;\ndelete foods strawberries;\nconsole log(foods);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\use-the-delete-keyword-to-remove-object-properties.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "25e182a24d16eb7cc4e0909946d4c9e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-nested-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244cd\ntitle: Accessing Nested Arrays\nchallengeType: 1\nforumTopicId: 16160\ndashedName: accessing-nested-arrays\n--description--\nAs we have seen in earlier examples, objects can contain both nested objects and nested arrays. Similar to accessing nested objects, array bracket notation can be chained to access nested arrays.\nHere is an example of how to access a nested array:\n```js\nconst ourPets = [\n{\nanimalType: \"cat\",\nnames: [\n\"Meowzer\",\n\"Fluffy\",\n\"Kit-Cat\"\n]\n},\n{\nanimalType: \"dog\",\nnames: [\n\"Spot\",\n\"Bowser\",\n\"Frankie\"\n]\n}\n];\nourPets[0].names[1];\nourPets[1].names[0];\n```\nourPets[0].names[1] would be the string Fluffy, and ourPets[1].names[0] would be the string Spot.\n--instructions--\nUsing dot and bracket notation, set the variable secondTree to the second element in the list array from the second object in the myPlants array.\n--hints--\nsecondTree should equal the string pine.\njs\nassert(secondTree === 'pine');\nYour code should use dot and bracket notation to access myPlants.\njs\nassert(/=\\s*myPlants\\[1\\].list\\[1\\]/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(x) {\nif(typeof x != 'undefined') {\nreturn \"secondTree = \" + x;\n}\nreturn \"secondTree is undefined\";\n})(secondTree);\n--seed-contents--\n```js\nconst myPlants = [\n{\ntype: \"flowers\",\nlist: [\n\"rose\",\n\"tulip\",\n\"dandelion\"\n]\n},\n{\ntype: \"trees\",\nlist: [\n\"fir\",\n\"pine\",\n\"birch\"\n]\n}\n];\nconst secondTree = \"\";\n```\n--solutions--\n```js\nconst myPlants = [\n{\ntype: \"flowers\",\nlist: [\n\"rose\",\n\"tulip\",\n\"dandelion\"\n]\n},\n{\ntype: \"trees\",\nlist: [\n\"fir\",\n\"pine\",\n\"birch\"\n]\n}\n];\nconst secondTree = myPlants[1].list[1];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1934,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-nested-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f52dd54ef79ee539d6858caec74cd14d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-using-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b2367417b2b2512b10\ntitle: Remove Items Using splice()\nchallengeType: 1\nforumTopicId: 301166\ndashedName: remove-items-using-splice\n--description--\nOk, so we've learned how to remove elements from the beginning and end of arrays using shift() and pop(), but what if we want to remove an element from somewhere in the middle Or remove more than one element at once Well, that's where splice() comes in splice() allows us to do just that: remove any number of consecutive elements from anywhere in an array splice() can take up to 3 parameters, but for now, we'll focus on just the first 2 The first two parameters of splice() are integers which represent indexes, or positions, of items in the array that splice() is being called upon And remember, arrays are zero-indexed, so to indicate the first element of an array, we would use 0 splice()'s first parameter represents the index on the array from which to begin removing elements, while the second parameter indicates the number of elements to delete For example:\n```js\nlet array = ['today', 'was', 'not', 'so', 'great'];\narray splice(2, 2);\n```\nHere we remove 2 elements, beginning with the third element (at index 2) array would have the value ['today', 'was', 'great'] splice() not only modifies the array it's being called on, but it also returns a new array containing the value of the removed elements:\n```js\nlet array = ['I', 'am', 'feeling', 'really', 'happy'];\nlet newArray = array splice(3, 2);\n```\nnewArray has the value ['really', 'happy'] --instructions--\nWe've initialized an array arr Use splice() to remove elements from arr, so that it only contains elements that sum to the value of 10 --hints--\nYou should not change the original line of const arr = [2, 4, 5, 1, 7, 5, 2, 1]; js\nassert(\n__helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/constarr=\\[2,4,5,1,7,5,2,1\\]; /)\n);\narr should only contain elements that sum to 10 js\nassert strictEqual(\narr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-using-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cb595745989eacbab682ccdb890f1b94",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-using-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "splice(3, 2); ``` newArray has the value ['really', 'happy'] --instructions-- We've initialized an array arr Use splice() to remove elements from arr, so that it only contains elements that sum to the value of 10 --hints-- You should not change the original line of const arr = [2, 4, 5, 1, 7, 5, 2, 1]; js assert( __helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/constarr=\\[2,4,5,1,7,5,2,1\\]; /) ); arr should only contain elements that sum to 10 js assert strictEqual( arrreduce((a, b) => a + b),\n10\n);\nYour code should utilize the splice() method on arr js\nassert(__helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/arr\\ splice\\(/));\nThe splice should only remove elements from arr and not add any additional elements to arr js\nassert( __helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/arr\\ splice\\(\\d+,\\d+,\\d+ *\\)/g)\n);\n--seed--\n--seed-contents--\n```js\nconst arr = [2, 4, 5, 1, 7, 5, 2, 1];\n// Only change code below this line\n// Only change code above this line\nconsole log(arr);\n```\n--solutions--\njs\nconst arr = [2, 4, 5, 1, 7, 5, 2, 1];\narr splice(1, 4);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-data-structures\\remove-items-using-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ea80a0c94e158259e32a0c94793a3186",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\access-multi-dimensional-arrays-with-indexes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56592a60ddddeae28f7aa8e1\ntitle: Access Multi-Dimensional Arrays With Indexes\nchallengeType: 1\nforumTopicId: 16159\ndashedName: access-multi-dimensional-arrays-with-indexes\n--description--\nOne way to think of a multi-dimensional array, is as an array of arrays When you use brackets to access your array, the first set of brackets refers to the entries in the outermost (the first level) array, and each additional pair of brackets refers to the next level of entries inside Example\n```js\nconst arr = [\n[1, 2, 3],\n[4, 5, 6],\n[7, 8, 9],\n[[10, 11, 12], 13, 14]\n];\nconst subarray = arr[3];\nconst nestedSubarray = arr[3][0];\nconst element = arr[3][0][1];\n```\nIn this example, subarray has the value [[10, 11, 12], 13, 14],\nnestedSubarray has the value [10, 11, 12],   and element has the value 11 Note: There shouldn't be any spaces between the array name and the square brackets, like array [0][0] and even this array [0] [0] is not allowed Although JavaScript is able to process this correctly, this may confuse other programmers reading your code --instructions--\nUsing bracket notation select an element from myArray such that myData is equal to 8 --hints--\nmyData should be equal to 8 js\nassert(myData === 8);\nYou should be using bracket notation to read the correct value from myArray js\nassert(/myData=myArray\\[2\\]\\[1\\]/ test(__helpers removeWhiteSpace(__helpers removeJSComments(code))));\n--seed--\n--after-user-code--\njs\nif(typeof myArray == \"undefined\"){(function(){return \"myData: \" + myData + \" myArray: \" + JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\access-multi-dimensional-arrays-with-indexes.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e9e3a1d4f1e207441626af5d3324e0c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\access-multi-dimensional-arrays-with-indexes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is able to process this correctly, this may confuse other programmers reading your code --instructions-- Using bracket notation select an element from myArray such that myData is equal to 8 --hints-- myData should be equal to 8 js assert(myData === 8); You should be using bracket notation to read the correct value from myArray js assert(/myData=myArray\\[2\\]\\[1\\]/ test(__helpers removeWhiteSpace(__helpers removeJSComments(code)))); --seed-- --after-user-code-- js if(typeof myArray == \"undefined\"){(function(){return \"myData: \" + myData + \" myArray: \" + JSONstringify(myArray);})();}\n--seed-contents--\n```js\nconst myArray = [\n[1, 2, 3],\n[4, 5, 6],\n[7, 8, 9],\n[[10, 11, 12], 13, 14],\n];\nconst myData = myArray[0][0];\n```\n--solutions--\njs\nconst myArray = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [[10, 11, 12], 13, 14]];\nconst myData = myArray[2][1];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\access-multi-dimensional-arrays-with-indexes.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e3c9abf93f0713161291dbc0c4bd9967",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-nested-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244cc\ntitle: Accessing Nested Objects\nchallengeType: 1\nforumTopicId: 16161\ndashedName: accessing-nested-objects\n--description--\nThe sub-properties of objects can be accessed by chaining together the dot or bracket notation Here is a nested object:\n```js\nconst ourStorage = {\n\"desk\": {\n\"drawer\": \"stapler\"\n},\n\"cabinet\": {\n\"top drawer\": {\n\"folder1\": \"a file\",\n\"folder2\": \"secrets\"\n},\n\"bottom drawer\": \"soda\"\n}\n};\nourStorage cabinet[\"top drawer\"] folder2;\nourStorage desk drawer;\n```\nourStorage cabinet[\"top drawer\"] folder2 would be the string secrets, and ourStorage desk drawer would be the string stapler --instructions--\nAccess the myStorage object and assign the contents of the glove box property to the gloveBoxContents variable Use dot notation for all properties where possible, otherwise use bracket notation --hints--\ngloveBoxContents should equal the string maps js\nassert(gloveBoxContents === 'maps');\nYour code should use dot notation, where possible, to access myStorage js\nassert match(code, /myStorage\\ car\\ inside/);\ngloveBoxContents should still be declared with const js\nassert match(code, /const\\s+gloveBoxContents\\s*=/);\nYou should not change the myStorage object js\nconst expectedMyStorage = {\n\"car\":{\n\"inside\":{\n\"glove box\":\"maps\",\n\"passenger seat\":\"crumbs\"\n},\n\"outside\":{\n\"trunk\":\"jack\"\n}\n}\n};\nassert deepStrictEqual(myStorage, expectedMyStorage);\n--seed--\n--after-user-code--\njs\n(function(x) {\nif(typeof x",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-nested-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1b9e2182e041004c8db572e05d3a34bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-nested-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "use bracket notation --hints-- gloveBoxContents should equal the string maps js assert(gloveBoxContents === 'maps'); Your code should use dot notation, where possible, to access myStorage js assert match(code, /myStorage\\ car\\ inside/); gloveBoxContents should still be declared with const js assert match(code, /const\\s+gloveBoxContents\\s*=/); You should not change the myStorage object js const expectedMyStorage = { \"car\":{ \"inside\":{ \"glove box\":\"maps\", \"passenger seat\":\"crumbs\" }, \"outside\":{ \"trunk\":\"jack\" } } }; assert deepStrictEqual(myStorage, expectedMyStorage); --seed-- --after-user-code-- js (function(x) { if(typeof x= 'undefined') {\nreturn \"gloveBoxContents = \" + x;\n}\nreturn \"gloveBoxContents is undefined\";\n})(gloveBoxContents);\n--seed-contents--\n```js\nconst myStorage = {\n\"car\": {\n\"inside\": {\n\"glove box\": \"maps\",\n\"passenger seat\": \"crumbs\"\n},\n\"outside\": {\n\"trunk\": \"jack\"\n}\n}\n};\nconst gloveBoxContents = undefined;\n```\n--solutions--\njs\nconst myStorage = {\n\"car\":{\n\"inside\":{\n\"glove box\":\"maps\",\n\"passenger seat\":\"crumbs\"\n},\n\"outside\":{\n\"trunk\":\"jack\"\n}\n}\n};\nconst gloveBoxContents = myStorage car inside[\"glove box\"];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-nested-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "28be37c926af5105d39a17178886e3d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-bracket-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c8\ntitle: Accessing Object Properties with Bracket Notation\nchallengeType: 1\nforumTopicId: 16163\ndashedName: accessing-object-properties-with-bracket-notation\n--description--\nThe second way to access the properties of an object is bracket notation ([]) If the property of the object you are trying to access has a space in its name, you will need to use bracket notation However, you can still use bracket notation on object properties without spaces Here is a sample of using bracket notation to read an object's property:\n```js\nconst myObj = {\n\"Space Name\": \"Kirk\",\n\"More Space\": \"Spock\",\n\"NoSpace\": \"USS Enterprise\"\n};\nmyObj[\"Space Name\"];\nmyObj['More Space'];\nmyObj[\"NoSpace\"];\n```\nmyObj[\"Space Name\"] would be the string Kirk, myObj['More Space'] would be the string Spock, and myObj[\"NoSpace\"] would be the string USS Enterprise Note that property names with spaces in them must be in quotes (single or double) --instructions--\nRead the values of the properties an entree and the drink of testObj using bracket notation and assign them to entreeValue and drinkValue respectively --hints--\nentreeValue should be a string\njs\nassert(typeof entreeValue === 'string');\nThe value of entreeValue should be the string hamburger\njs\nassert(entreeValue === 'hamburger');\ndrinkValue should be a string\njs\nassert(typeof drinkValue === 'string');\nThe value of drinkValue should be the string water\njs\nassert(drinkValue === 'water');\nYou should use bracket notation twice\njs\nassert(__helpers removeJSComments(code) match(/testObj\\s* \\[('|\")[^'\"]+\\1\\]/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2340,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-bracket-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7ded13e34228e9e8c95b9829dcdfa2af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-bracket-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an entree and the drink of testObj using bracket notation and assign them to entreeValue and drinkValue respectively --hints-- entreeValue should be a string js assert(typeof entreeValue === 'string'); The value of entreeValue should be the string hamburger js assert(entreeValue === 'hamburger'); drinkValue should be a string js assert(typeof drinkValue === 'string'); The value of drinkValue should be the string water js assert(drinkValue === 'water'); You should use bracket notation twice js assert(__helpers removeJSComments(code) match(/testObj\\s* \\[('|\")[^'\"]+\\1\\]/g)length > 1);\n--seed--\n--after-user-code--\njs\n(function(a,b) { return \"entreeValue = '\" + a + \"', drinkValue = '\" + b + \"'\"; })(entreeValue,drinkValue);\n--seed-contents--\n```js\n// Setup\nconst testObj = {\n\"an entree\": \"hamburger\",\n\"my side\": \"veggies\",\n\"the drink\": \"water\"\n};\n// Only change code below this line\nconst entreeValue = testObj;   // Change this line\nconst drinkValue = testObj;    // Change this line\n```\n--solutions--\njs\nconst testObj = {\n\"an entree\": \"hamburger\",\n\"my side\": \"veggies\",\n\"the drink\": \"water\"\n};\nconst entreeValue = testObj[\"an entree\"];\nconst drinkValue = testObj['the drink'];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2340,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-bracket-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e99e35c826cdc561d62791b1993f727d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-dot-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c7\ntitle: Accessing Object Properties with Dot Notation\nchallengeType: 1\nforumTopicId: 16164\ndashedName: accessing-object-properties-with-dot-notation\n--description--\nThere are two ways to access the properties of an object: dot notation ( ) and bracket notation ([]), similar to an array Dot notation is what you use when you know the name of the property you're trying to access ahead of time Here is a sample of using dot notation ( ) to read an object's property:\n```js\nconst myObj = {\nprop1: \"val1\",\nprop2: \"val2\"\n};\nconst prop1val = myObj prop1;\nconst prop2val = myObj prop2;\n```\nprop1val would have a value of the string val1, and prop2val would have a value of the string val2 --instructions--\nRead in the property values of testObj using dot notation Set the variable hatValue equal to the object's property hat and set the variable shirtValue equal to the object's property shirt --hints--\nhatValue should be a string\njs\nassert(typeof hatValue === 'string');\nThe value of hatValue should be the string ballcap\njs\nassert(hatValue === 'ballcap');\nshirtValue should be a string\njs\nassert(typeof shirtValue === 'string');\nThe value of shirtValue should be the string jersey\njs\nassert(shirtValue === 'jersey');\nYou should use dot notation twice\njs\nassert(__helpers removeJSComments(code) match(/testObj\\ \\w+/g) length > 1);\n--seed--\n--after-user-code--\njs\n(function(a,b) { return \"hatValue = '\" + a + \"', shirtValue = '\" + b + \"'\"; })(hatValue,shirtValue);\n--seed-contents--\n```js\n// Setup\nconst testObj = {\nhat: \"ballcap\",\nshirt: \"jersey\",\nshoes: \"cleats\"\n};\n// Only change code below this line\nconst hatValue = testObj;      // Change this line\nconst shirtValue = testObj;    // Change this line\n```\n--solutions--\n```js\nconst testObj = {\nhat: \"ballcap\",\nshirt: \"jersey\",\nshoes: \"cleats\"\n};\nconst hatValue = testObj",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2043,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-dot-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ca123df423046d26200cfac1ae75dd9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-dot-notation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--after-user-code-- js (function(a,b) { return \"hatValue = '\" + a + \"', shirtValue = '\" + b + \"'\"; })(hatValue,shirtValue); --seed-contents-- ```js // Setup const testObj = { hat: \"ballcap\", shirt: \"jersey\", shoes: \"cleats\" }; // Only change code below this line const hatValue = testObj; // Change this line const shirtValue = testObj; // Change this line ``` --solutions-- ```js const testObj = { hat: \"ballcap\", shirt: \"jersey\", shoes: \"cleats\" }; const hatValue = testObjhat;\nconst shirtValue = testObj shirt;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2043,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-dot-notation.md",
      "source_type": "git_repo"
    },
    "token_count": 148,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "30632ccbbd175aca95dee87ea6eebbd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\add-new-properties-to-a-javascript-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392d2\ntitle: Add New Properties to a JavaScript Object\nchallengeType: 1\nforumTopicId: 301169\ndashedName: add-new-properties-to-a-javascript-object\n--description--\nYou can add new properties to existing JavaScript objects the same way you would modify them.\nHere's how we would add a bark property to ourDog:\njs\nourDog.bark = \"bow-wow\";\nor\njs\nourDog[\"bark\"] = \"bow-wow\";\nNow when we evaluate ourDog.bark, we'll get his bark, bow-wow.\nExample:\n```js\nconst ourDog = {\n\"name\": \"Camper\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"everything!\"]\n};\nourDog.bark = \"bow-wow\";\n```\n--instructions--\nAdd a bark property to myDog and set it to a dog sound, such as \"woof\". You may use either dot or bracket notation.\n--hints--\nYou should add the property bark to myDog.\njs\nassert(myDog.bark !== undefined);\nYou should not add bark to the initialization of myDog.\njs\nassert(!/bark[^\\n]:/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(z){return z;})(myDog);\n--seed-contents--\n```js\nconst myDog = {\n\"name\": \"Happy Coder\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"freeCodeCamp Campers\"]\n};\n```\n--solutions--\njs\nconst myDog = {\n\"name\": \"Happy Coder\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"freeCodeCamp Campers\"]\n};\nmyDog.bark = \"Woof Woof\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1406,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\add-new-properties-to-a-javascript-object.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2f71ece8ae0c3040d5b13da35fcfff70",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\add-two-numbers-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb3bdef\ntitle: Add Two Numbers with JavaScript\nchallengeType: 1\nforumTopicId: 16650\ndashedName: add-two-numbers-with-javascript\n--description--\nNumber is a data type in JavaScript which represents numeric data.\nNow let's try to add two numbers using JavaScript.\nJavaScript uses the + symbol as an addition operator when placed between two numbers.\nExample:\njs\nconst myVar = 5 + 10;\nmyVar now has the value 15.\n--instructions--\nChange the 0 so that sum will equal 20.\n--hints--\nsum should equal 20.\njs\nassert(sum === 20);\nYou should use the + operator.\njs\nassert(/\\+/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(z){return 'sum = '+z;})(sum);\n--seed-contents--\njs\nconst sum = 10 + 0;\n--solutions--\njs\nconst sum = 10 + 10;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 889,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\add-two-numbers-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fe75acb770ffea37eb63f25285f26924",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c9\ntitle: Accessing Object Properties with Variables\nchallengeType: 1\nforumTopicId: 16165\ndashedName: accessing-object-properties-with-variables\n--description--\nAnother use of bracket notation on objects is to access a property which is stored as the value of a variable This can be very useful for iterating through an object's properties or when accessing a lookup table Here is an example of using a variable to access a property:\n```js\nconst dogs = {\nFido: \"Mutt\",\nHunter: \"Doberman\",\nSnoopie: \"Beagle\"\n};\nconst myDog = \"Hunter\";\nconst myBreed = dogs[myDog];\nconsole log(myBreed);\n```\nThe string Doberman would be displayed in the console Note that we do not use quotes around the variable name when using it to access the property because we are using the value of the variable, not the name --instructions--\nSet the playerNumber variable to 16 Then, use the variable to look up the player's name and assign it to player --hints--\nplayerNumber should be a number\njs\nassert(typeof playerNumber === 'number');\nThe variable player should be a string\njs\nassert(typeof player === 'string');\nThe value of player should be the string Montana\njs\nassert(player === 'Montana');\nYou should use bracket notation to access testObj\njs\nassert(/testObj\\s* \\[ * \\]/ test(__helpers removeJSComments(code)));\nYou should not assign the value Montana to the variable player directly js\nassert( __helpers removeJSComments(code) match(/player\\s*=\\s*\"|\\'\\s*Montana\\s*\"|\\'\\s*;/gi));\nYou should be using the variable playerNumber in your bracket notation\njs\nassert(/testObj\\s* \\[\\s*playerNumber\\s*\\]/ test(__helpers removeJSComments(code)));\n--seed--\n--after-user-code--\njs\nif(typeof player",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "758848b00c17b60fa3cbf5c5b7a84e46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "player should be a string js assert(typeof player === 'string'); The value of player should be the string Montana js assert(player === 'Montana'); You should use bracket notation to access testObj js assert(/testObj\\s* \\[ * \\]/ test(__helpers removeJSComments(code))); You should not assign the value Montana to the variable player directly js assert( __helpers removeJSComments(code) match(/player\\s*=\\s*\"|\\'\\s*Montana\\s*\"|\\'\\s*;/gi)); You should be using the variable playerNumber in your bracket notation js assert(/testObj\\s* \\[\\s*playerNumber\\s*\\]/ test(__helpers removeJSComments(code))); --seed-- --after-user-code-- js if(typeof player== \"undefined\"){(function(v){return v;})(player);}\n--seed-contents--\n```js\n// Setup\nconst testObj = {\n12: \"Namath\",\n16: \"Montana\",\n19: \"Unitas\"\n};\n// Only change code below this line\nconst playerNumber = 42;  // Change this line\nconst player = testObj;   // Change this line\n```\n--solutions--\njs\nconst testObj = {\n12: \"Namath\",\n16: \"Montana\",\n19: \"Unitas\"\n};\nconst playerNumber = 16;\nconst player = testObj[playerNumber];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\accessing-object-properties-with-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "869667bd9ea64fe0b3789530bf29cba2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\assignment-with-a-returned-value.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c3\ntitle: Assignment with a Returned Value\nchallengeType: 1\nforumTopicId: 16658\ndashedName: assignment-with-a-returned-value\n--description--\nIf you'll recall from our discussion about Storing Values with the Assignment Operator, everything to the right of the equal sign is resolved before the value is assigned. This means we can take the return value of a function and assign it to a variable.\nAssume we have defined a function sum which adds two numbers together.\njs\nourSum = sum(5, 12);\nCalling the sum function with the arguments of 5 and 12 produces a return value of 17. This return value is assigned to the ourSum variable.\n--instructions--\nCall the processArg function with an argument of 7 and assign its return value to the variable processed.\n--hints--\nprocessed should have a value of 2\njs\nassert(processed === 2);\nYou should assign processArg to processed\njs\nassert(/processed\\s*=\\s*processArg\\(\\s*7\\s*\\)/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(){return \"processed = \" + processed})();\n--seed-contents--\n```js\n// Setup\nlet processed = 0;\nfunction processArg(num) {\nreturn (num + 3) / 5;\n}\n// Only change code below this line\n```\n--solutions--\n```js\nvar processed = 0;\nfunction processArg(num) {\nreturn (num + 3) / 5;\n}\nprocessed = processArg(7);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\assignment-with-a-returned-value.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d62b422875d5708c394fe0a56e506138",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\assigning-the-value-of-one-variable-to-another.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5ee127a03c3b35dd45426493\ntitle: Assigning the Value of One Variable to Another\nchallengeType: 1\nforumTopicId: 418265\ndashedName: assigning-the-value-of-one-variable-to-another\n--description--\nAfter a value is assigned to a variable using the assignment operator, you can assign the value of that variable to another variable using the assignment operator.\njs\nvar myVar;\nmyVar = 5;\nvar myNum;\nmyNum = myVar;\nThe above declares a myVar variable with no value, then assigns it the value 5. Next, a variable named myNum is declared with no value. Then, the contents of myVar (which is 5) is assigned to the variable myNum. Now, myNum also has the value of 5.\n--instructions--\nAssign the contents of a to variable b.\n--hints--\nYou should not change code above the specified comment.\njs\nassert(/var a;/.test(__helpers.removeJSComments(code)) && /a = 7;/.test(__helpers.removeJSComments(code)) && /var b;/.test(__helpers.removeJSComments(code)));\nb should have a value of 7.\njs\nassert(typeof b === 'number' && b === 7);\na should be assigned to b with =.\njs\nassert(/b\\s*=\\s*a\\s*/g.test(__helpers.removeJSComments(code)));\n--seed--\n--before-user-code--\njs\nif (typeof a != 'undefined') {\na = undefined;\n}\nif (typeof b != 'undefined') {\nb = undefined;\n}\n--after-user-code--\njs\n(function(a, b) {\nreturn 'a = ' + a + ', b = ' + b;\n})(a, b);\n--seed-contents--\n```js\n// Setup\nvar a;\na = 7;\nvar b;\n// Only change code below this line\n```\n--solutions--\njs\nvar a;\na = 7;\nvar b;\nb = a;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1628,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\assigning-the-value-of-one-variable-to-another.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "51e4f8ad199aaf7ed9b3a4a6127be57a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\appending-variables-to-strings.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244ed\ntitle: Appending Variables to Strings\nchallengeType: 1\nforumTopicId: 16656\ndashedName: appending-variables-to-strings\n--description--\nJust as we can build a string over multiple lines out of string literals, we can also append variables to a string using the plus equals (+=) operator.\nExample:\njs\nconst anAdjective = \"awesome!\";\nlet ourStr = \"freeCodeCamp is \";\nourStr += anAdjective;\nourStr would have the value freeCodeCamp is awesome!.\n--instructions--\nSet someAdjective to a string of at least 3 characters and append it to myStr using the += operator.\n--hints--\nsomeAdjective should be set to a string at least 3 characters long.\njs\nassert(typeof someAdjective !== 'undefined' && someAdjective.length > 2);\nYou should append someAdjective to myStr using the += operator.\njs\nassert(__helpers.removeJSComments(code).match(/myStr\\s*\\+=\\s*someAdjective\\s*/).length > 0);\n--seed--\n--after-user-code--\njs\n(function(){\nvar output = [];\nif(typeof someAdjective === 'string') {\noutput.push('someAdjective = \"' + someAdjective + '\"');\n} else {\noutput.push('someAdjective is not a string');\n}\nif(typeof myStr === 'string') {\noutput.push('myStr = \"' + myStr + '\"');\n} else {\noutput.push('myStr is not a string');\n}\nreturn output.join('\\n');\n})();\n--seed-contents--\njs\n// Change code below this line\nconst someAdjective = \"\";\nlet myStr = \"Learning to code is \";\n--solutions--\njs\nconst someAdjective = \"neat\";\nlet myStr = \"Learning to code is \";\nmyStr += someAdjective;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1639,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\appending-variables-to-strings.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1d09a538f10cc3bd8808ccb23d5d7a08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\adding-a-default-option-in-switch-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244de\ntitle: Adding a Default Option in Switch Statements\nchallengeType: 1\nforumTopicId: 16653\ndashedName: adding-a-default-option-in-switch-statements\n--description--\nIn a switch statement you may not be able to specify all possible values as case statements Instead, you can add the default statement which will be executed if no matching case statements are found Think of it like the final else statement in an if/else chain A default statement should be the last case js\nswitch (num) {\ncase value1:\nstatement1;\nbreak;\ncase value2:\nstatement2;\nbreak; default:\ndefaultStatement;\nbreak;\n}\n--instructions--\nWrite a switch statement to set answer for the following conditions:\na - apple\nb - bird\nc - cat\ndefault - stuff\n--hints--\nswitchOfStuff(\"a\") should return the string apple\njs\nassert(switchOfStuff('a') === 'apple');\nswitchOfStuff(\"b\") should return the string bird\njs\nassert(switchOfStuff('b') === 'bird');\nswitchOfStuff(\"c\") should return the string cat\njs\nassert(switchOfStuff('c') === 'cat');\nswitchOfStuff(\"d\") should return the string stuff\njs\nassert(switchOfStuff('d') === 'stuff');\nswitchOfStuff(4) should return the string stuff\njs\nassert(switchOfStuff(4) === 'stuff');\nYou should not use any if or else statements\njs\nassert( /else/g test(__helpers removeJSComments(code)) || /if/g test(__helpers removeJSComments(code)));\nYou should use a default statement\njs\nassert(switchOfStuff('string-to-trigger-default-case') === 'stuff');\nYou should have at least 3 break statements\njs\nassert(__helpers removeJSComments(code) match(/break/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\adding-a-default-option-in-switch-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7680fc0b02776ad496cf809eb3fd7dc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\adding-a-default-option-in-switch-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "string bird js assert(switchOfStuff('b') === 'bird'); switchOfStuff(\"c\") should return the string cat js assert(switchOfStuff('c') === 'cat'); switchOfStuff(\"d\") should return the string stuff js assert(switchOfStuff('d') === 'stuff'); switchOfStuff(4) should return the string stuff js assert(switchOfStuff(4) === 'stuff'); You should not use any if or else statements js assert( /else/g test(__helpers removeJSComments(code)) || /if/g test(__helpers removeJSComments(code))); You should use a default statement js assert(switchOfStuff('string-to-trigger-default-case') === 'stuff'); You should have at least 3 break statements js assert(__helpers removeJSComments(code) match(/break/g)length > 2);\n--seed--\n--seed-contents--\n```js\nfunction switchOfStuff(val) {\nlet answer = \"\";\n// Only change code below this line\n// Only change code above this line\nreturn answer;\n}\nswitchOfStuff(1);\n```\n--solutions--\n```js\nfunction switchOfStuff(val) {\nlet answer = \"\";\nswitch(val) {\ncase \"a\":\nanswer = \"apple\";\nbreak;\ncase \"b\":\nanswer = \"bird\";\nbreak;\ncase \"c\":\nanswer = \"cat\";\nbreak;\ndefault:\nanswer = \"stuff\";\n}\nreturn answer;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\adding-a-default-option-in-switch-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5006cc4b1a4b427c8b2ec8717eb031dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comment-your-javascript-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c441eddfaeb4bdef\ntitle: Comment Your JavaScript Code\nchallengeType: 1\nforumTopicId: 16783\ndashedName: comment-your-javascript-code\n--description--\nComments are lines of code that JavaScript will intentionally ignore. Comments are a great way to leave notes to yourself and to other people who will later need to figure out what that code does.\nThere are two ways to write comments in JavaScript:\nUsing // will tell JavaScript to ignore the remainder of the text on the current line. This is an in-line comment:\njs\n// This is an in-line comment.\nYou can make a multi-line comment beginning with /* and ending with */. This is a multi-line comment:\njs\n/* This is a\nmulti-line comment */\nNOTE: As you write code, you should regularly add comments to clarify the function of parts of your code. Good commenting can help communicate the intent of your code—both for others and for your future self.\n--instructions--\nTry creating one of each type of comment.\n--hints--\nYou should create a // style comment that contains at least five letters.\njs\nassert(code.match(/(\\/\\/)...../g));\nYou should create a /* */ style comment that contains at least five letters.\njs\nassert(code.match(/(\\/\\*)([^\\/]{5,})(?=\\*\\/)/gm));\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\njs\n// Fake Comment\n/* Another Comment */",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1406,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comment-your-javascript-code.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b1879c89e7344b8185c9ffa7033ba836",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\chaining-if-else-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244dc\ntitle: Chaining If Else Statements\nchallengeType: 1\nforumTopicId: 16772\ndashedName: chaining-if-else-statements\n--description--\nif/else statements can be chained together for complex logic Here is pseudocode of multiple chained if / else if statements:\njs\nif (condition1) {\nstatement1\n} else if (condition2) {\nstatement2\n} else if (condition3) {\nstatement3 } else {\nstatementN\n}\n--instructions--\nWrite chained if/else if statements to fulfill the following conditions:\nnum < 5 - return Tiny\nnum < 10 - return Small\nnum < 15 - return Medium\nnum < 20 - return Large\nnum >= 20 - return Huge\n--hints--\nYou should have at least four else statements\njs\nassert(__helpers removeJSComments(code) match(/else/g) length > 3);\nYou should have at least four if statements\njs\nassert(__helpers removeJSComments(code) match(/if/g) length > 3);\nYou should have at least one return statement\njs\nassert(__helpers removeJSComments(code) match(/return/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\chaining-if-else-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cd90c3a279f2455a4bc47a2e77182fa2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\chaining-if-else-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the following conditions: num < 5 - return Tiny num < 10 - return Small num < 15 - return Medium num < 20 - return Large num >= 20 - return Huge --hints-- You should have at least four else statements js assert(__helpers removeJSComments(code) match(/else/g) length > 3); You should have at least four if statements js assert(__helpers removeJSComments(code) match(/if/g) length > 3); You should have at least one return statement js assert(__helpers removeJSComments(code) match(/return/g)length >= 1);\ntestSize(0) should return the string Tiny\njs\nassert(testSize(0) === 'Tiny');\ntestSize(4) should return the string Tiny\njs\nassert(testSize(4) === 'Tiny');\ntestSize(5) should return the string Small\njs\nassert(testSize(5) === 'Small');\ntestSize(8) should return the string Small\njs\nassert(testSize(8) === 'Small');\ntestSize(10) should return the string Medium\njs\nassert(testSize(10) === 'Medium');\ntestSize(14) should return the string Medium\njs\nassert(testSize(14) === 'Medium');\ntestSize(15) should return the string Large\njs\nassert(testSize(15) === 'Large');\ntestSize(17) should return the string Large\njs\nassert(testSize(17) === 'Large');\ntestSize(20) should return the string Huge\njs\nassert(testSize(20) === 'Huge');\ntestSize(25) should return the string Huge\njs\nassert(testSize(25) === 'Huge');\n--seed--\n--seed-contents--\n```js\nfunction testSize(num) {\n// Only change code below this line\nreturn \"Change Me\";\n// Only change code above this line\n}\ntestSize(7);\n```\n--solutions--\njs\nfunction testSize(num) {\nif (num < 5) {\nreturn \"Tiny\";\n} else if (num < 10) {\nreturn \"Small\";\n} else if (num < 15) {\nreturn \"Medium\";\n} else if (num < 20) {\nreturn \"Large\";\n} else {\nreturn \"Huge\";\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\chaining-if-else-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f61cee26aa44f641e2d6f96e7d279588",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\build-javascript-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392d0\ntitle: Build JavaScript Objects\nchallengeType: 1\nforumTopicId: 16769\ndashedName: build-javascript-objects\n--description--\nYou may have heard the term object before Objects are similar to arrays, except that instead of using indexes to access and modify their data, you access the data in objects through what are called properties Objects are useful for storing data in a structured way, and can represent real world objects, like a cat Here's a sample cat object:\njs\nconst cat = {\n\"name\": \"Whiskers\",\n\"legs\": 4,\n\"tails\": 1,\n\"enemies\": [\"Water\", \"Dogs\"]\n};\nIn this example, all the properties are stored as strings, such as name, legs, and tails However, you can also use numbers as properties You can even omit the quotes for single-word string properties, as follows:\njs\nconst anotherObject = {\nmake: \"Ford\",\n5: \"five\",\n\"model\": \"focus\"\n};\nHowever, if your object has any non-string properties, JavaScript will automatically typecast them as strings --instructions--\nMake an object that represents a dog called myDog which contains the properties name (a string), legs, tails and friends You can set these object properties to whatever values you want, as long as name is a string, legs and tails are numbers, and friends is an array --hints--\nmyDog should contain the property name and it should be a string js\nassert(\n(function (z) {\nif (\nz hasOwnProperty('name') &&\nz name == undefined &&\ntypeof z name === 'string'\n) {\nreturn true;\n} else {\nreturn false;\n}\n})(myDog)\n);\nmyDog should contain the property legs and it should be a number js\nassert(\n(function (z) {\nif (\nz hasOwnProperty('legs') &&\nz legs == undefined &&\ntypeof z legs === 'number'\n) {\nreturn true;\n} else {\nreturn false;\n}\n})(myDog)\n);\nmyDog should contain the property tails and it should be a number js\nassert(\n(function (z) {\nif (\nz hasOwnProperty('tails') &&\nz tails == undefined &&\ntypeof z tails === 'number'\n) {\nreturn true;\n} else {\nreturn false;\n}\n})(myDog)\n);\nmyDog should contain the property friends and it should be an array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3047,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\build-javascript-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6b92026c38d113a39a4a0e0146647a58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\build-javascript-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "== undefined && typeof z legs === 'number' ) { return true; } else { return false; } })(myDog) ); myDog should contain the property tails and it should be a number js assert( (function (z) { if ( z hasOwnProperty('tails') && z tails == undefined && typeof z tails === 'number' ) { return true; } else { return false; } })(myDog) ); myDog should contain the property friends and it should be an arrayjs\nassert(\n(function (z) {\nif (\nz hasOwnProperty('friends') &&\nz friends == undefined &&\nArray isArray(z friends)\n) {\nreturn true;\n} else {\nreturn false;\n}\n})(myDog)\n);\nmyDog should only contain all the given properties js\nassert(\n(function (z) {\nreturn Object keys(z) length === 4;\n})(myDog)\n);\n--seed--\n--after-user-code--\njs\n(function(z){return z;})(myDog);\n--seed-contents--\n```js\nconst myDog = {\n// Only change code below this line\n// Only change code above this line\n};\n```\n--solutions--\njs\nconst myDog = {\n\"name\": \"Camper\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"everything \"]\n};",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3047,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\build-javascript-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "06162d4a274bbfa48c635942c2a5922d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-equality-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d0\ntitle: Comparison with the Equality Operator\nchallengeType: 1\nforumTopicId: 16784\ndashedName: comparison-with-the-equality-operator\n--description--\nThere are many comparison operators in JavaScript All of these operators return a boolean true or false value The most basic operator is the equality operator == The equality operator compares two values and returns true if they're equivalent or false if they are not Note that equality is different from assignment (=), which assigns the value on the right of the operator to a variable on the left js\nfunction equalityTest(myVal) {\nif (myVal == 10) {\nreturn \"Equal\";\n}\nreturn \"Not Equal\";\n}\nIf myVal is equal to 10, the equality operator returns true, so the code in the curly braces will execute, and the function will return Equal Otherwise, the function will return Not Equal In order for JavaScript to compare two different data types (for example, numbers and strings), it must convert one type to another This is known as Type Coercion Once it does, however, it can compare terms as follows:\njs\n1   ==  1  // true\n1   ==  2  // false\n1   == '1' // true\n\"3\" ==  3  // true\n--instructions--\nAdd the equality operator to the indicated line so that the function will return the string Equal when val is equivalent to 12 --hints--\ntestEqual(10) should return the string Not Equal\njs\nassert(testEqual(10) === 'Not Equal');\ntestEqual(12) should return the string Equal\njs\nassert(testEqual(12) === 'Equal');\ntestEqual(\"12\") should return the string Equal\njs\nassert(testEqual('12') === 'Equal');\nYou should use the == operator\njs\nassert(__helpers removeJSComments(code) match(/==/g) && __helpers removeJSComments(code) match(/===/g));\n--seed--\n--seed-contents--\n```js\n// Setup\nfunction testEqual(val) {\nif (val) { // Change this line\nreturn \"Equal\";\n}\nreturn \"Not Equal\";\n}\ntestEqual(10);\n```\n--solutions--\njs\nfunction testEqual(val) {\nif (val == 12) {\nreturn \"Equal\";\n}\nreturn \"Not Equal\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2171,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-equality-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4586bbc729817ff3dc05e92af3ba4191",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-inequality-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d2\ntitle: Comparison with the Inequality Operator\nchallengeType: 1\nforumTopicId: 16787\ndashedName: comparison-with-the-inequality-operator\n--description--\nThe inequality operator (!=) is the opposite of the equality operator. Inequality means not equal. The inequality operator returns false when the equality operator would return true and vice versa. Like the equality operator, the inequality operator will convert data types of values while comparing.\nExamples\njs\n1 !=  2    // true\n1 != \"1\"   // false\n1 != '1'   // false\n1 != true  // false\n0 != false // false\n--instructions--\nAdd the inequality operator != in the if statement so that the function will return the string Not Equal when val is not equivalent to 99.\n--hints--\ntestNotEqual(99) should return the string Equal\njs\nassert(testNotEqual(99) === 'Equal');\ntestNotEqual(\"99\") should return the string Equal\njs\nassert(testNotEqual('99') === 'Equal');\ntestNotEqual(12) should return the string Not Equal\njs\nassert(testNotEqual(12) === 'Not Equal');\ntestNotEqual(\"12\") should return the string Not Equal\njs\nassert(testNotEqual('12') === 'Not Equal');\ntestNotEqual(\"bob\") should return the string Not Equal\njs\nassert(testNotEqual('bob') === 'Not Equal');\nYou should use the != operator\njs\nassert(__helpers.removeJSComments(code).match(/(?!!==)!=/));\n--seed--\n--seed-contents--\n```js\n// Setup\nfunction testNotEqual(val) {\nif (val) { // Change this line\nreturn \"Not Equal\";\n}\nreturn \"Equal\";\n}\ntestNotEqual(10);\n```\n--solutions--\njs\nfunction testNotEqual(val) {\nif (val != 99) {\nreturn \"Not Equal\";\n}\nreturn \"Equal\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-inequality-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c3cea83b733ea1e3ff87e64263fd53ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-or-equal-to-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d5\ntitle: Comparison with the Greater Than Or Equal To Operator\nchallengeType: 1\nforumTopicId: 16785\ndashedName: comparison-with-the-greater-than-or-equal-to-operator\n--description--\nThe greater than or equal to operator (>=) compares the values of two numbers If the number to the left is greater than or equal to the number to the right, it returns true Otherwise, it returns false Like the equality operator, the greater than or equal to operator will convert data types while comparing Examples\njs\n6   >=  6  // true\n7   >= '3' // true\n2   >=  3  // false\n'7' >=  9  // false\n--instructions--\nAdd the greater than or equal to operator to the indicated lines so that the return statements make sense --hints--\ntestGreaterOrEqual(0) should return the string Less than 10\njs\nassert(testGreaterOrEqual(0) === 'Less than 10');\ntestGreaterOrEqual(9) should return the string Less than 10\njs\nassert(testGreaterOrEqual(9) === 'Less than 10');\ntestGreaterOrEqual(10) should return the string 10 or Over\njs\nassert(testGreaterOrEqual(10) === '10 or Over');\ntestGreaterOrEqual(11) should return the string 10 or Over\njs\nassert(testGreaterOrEqual(11) === '10 or Over');\ntestGreaterOrEqual(19) should return the string 10 or Over\njs\nassert(testGreaterOrEqual(19) === '10 or Over');\ntestGreaterOrEqual(100) should return the string 20 or Over\njs\nassert(testGreaterOrEqual(100) === '20 or Over');\ntestGreaterOrEqual(21) should return the string 20 or Over\njs\nassert(testGreaterOrEqual(21) === '20 or Over');\nYou should use the >= operator at least twice\njs\nassert(__helpers removeJSComments(code) match(/val\\s*>=\\s*('|\")*\\d+('|\")*/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-or-equal-to-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "06b392d05b725335182b720f3c0fea59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-or-equal-to-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Over js assert(testGreaterOrEqual(10) === '10 or Over'); testGreaterOrEqual(11) should return the string 10 or Over js assert(testGreaterOrEqual(11) === '10 or Over'); testGreaterOrEqual(19) should return the string 10 or Over js assert(testGreaterOrEqual(19) === '10 or Over'); testGreaterOrEqual(100) should return the string 20 or Over js assert(testGreaterOrEqual(100) === '20 or Over'); testGreaterOrEqual(21) should return the string 20 or Over js assert(testGreaterOrEqual(21) === '20 or Over'); You should use the >= operator at least twice js assert(__helpers removeJSComments(code) match(/val\\s*>=\\s*('|\")*\\d+('|\")*/g)length > 1);\n--seed--\n--seed-contents--\n```js\nfunction testGreaterOrEqual(val) {\nif (val) {  // Change this line\nreturn \"20 or Over\";\n}\nif (val) {  // Change this line\nreturn \"10 or Over\";\n}\nreturn \"Less than 10\";\n}\ntestGreaterOrEqual(10);\n```\n--solutions--\n```js\nfunction testGreaterOrEqual(val) {\nif (val >= 20) {  // Change this line\nreturn \"20 or Over\";\n}\nif (val >= 10) {  // Change this line\nreturn \"10 or Over\";\n}\nreturn \"Less than 10\";\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-or-equal-to-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "dcc8a7af0c5b41e8fd21f6772ef4e56e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d6\ntitle: Comparison with the Less Than Operator\nchallengeType: 1\nforumTopicId: 16789\ndashedName: comparison-with-the-less-than-operator\n--description--\nThe less than operator (<) compares the values of two numbers If the number to the left is less than the number to the right, it returns true Otherwise, it returns false Like the equality operator, the less than operator converts data types while comparing Examples\njs\n2   < 5 // true\n'3' < 7 // true\n5   < 5 // false\n3   < 2 // false\n'8' < 4 // false\n--instructions--\nAdd the less than operator to the indicated lines so that the return statements make sense --hints--\ntestLessThan(0) should return the string Under 25\njs\nassert(testLessThan(0) === 'Under 25');\ntestLessThan(24) should return the string Under 25\njs\nassert(testLessThan(24) === 'Under 25');\ntestLessThan(25) should return the string Under 55\njs\nassert(testLessThan(25) === 'Under 55');\ntestLessThan(54) should return the string Under 55\njs\nassert(testLessThan(54) === 'Under 55');\ntestLessThan(55) should return the string 55 or Over\njs\nassert(testLessThan(55) === '55 or Over');\ntestLessThan(99) should return the string 55 or Over\njs\nassert(testLessThan(99) === '55 or Over');\nYou should use the < operator at least twice\njs\nassert(__helpers removeJSComments(code) match(/val\\s*<\\s*('|\")*\\d+('|\")*/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1952,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f16a990f24cbda427b44b61bf14f3173",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return the string Under 25 js assert(testLessThan(24) === 'Under 25'); testLessThan(25) should return the string Under 55 js assert(testLessThan(25) === 'Under 55'); testLessThan(54) should return the string Under 55 js assert(testLessThan(54) === 'Under 55'); testLessThan(55) should return the string 55 or Over js assert(testLessThan(55) === '55 or Over'); testLessThan(99) should return the string 55 or Over js assert(testLessThan(99) === '55 or Over'); You should use the < operator at least twice js assert(__helpers removeJSComments(code) match(/val\\s*<\\s*('|\")*\\d+('|\")*/g)length > 1);\n--seed--\n--seed-contents--\n```js\nfunction testLessThan(val) {\nif (val) {  // Change this line\nreturn \"Under 25\";\n}\nif (val) {  // Change this line\nreturn \"Under 55\";\n}\nreturn \"55 or Over\";\n}\ntestLessThan(10);\n```\n--solutions--\n```js\nfunction testLessThan(val) {\nif (val < 25) {  // Change this line\nreturn \"Under 25\";\n}\nif (val < 55) {  // Change this line\nreturn \"Under 55\";\n}\nreturn \"55 or Over\";\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1952,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "14ed5bd0365b1abc126a2145f5d98db0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d4\ntitle: Comparison with the Greater Than Operator\nchallengeType: 1\nforumTopicId: 16786\ndashedName: comparison-with-the-greater-than-operator\n--description--\nThe greater than operator (>) compares the values of two numbers If the number to the left is greater than the number to the right, it returns true Otherwise, it returns false Like the equality operator, the greater than operator will convert data types of values while comparing Examples\njs\n5   >  3  // true\n7   > '3' // true\n2   >  3  // false\n'1' >  9  // false\n--instructions--\nAdd the greater than operator to the indicated lines so that the return statements make sense --hints--\ntestGreaterThan(0) should return the string 10 or Under\njs\nassert(testGreaterThan(0) === '10 or Under');\ntestGreaterThan(10) should return the string 10 or Under\njs\nassert(testGreaterThan(10) === '10 or Under');\ntestGreaterThan(11) should return the string Over 10\njs\nassert(testGreaterThan(11) === 'Over 10');\ntestGreaterThan(99) should return the string Over 10\njs\nassert(testGreaterThan(99) === 'Over 10');\ntestGreaterThan(100) should return the string Over 10\njs\nassert(testGreaterThan(100) === 'Over 10');\ntestGreaterThan(101) should return the string Over 100\njs\nassert(testGreaterThan(101) === 'Over 100');\ntestGreaterThan(150) should return the string Over 100\njs\nassert(testGreaterThan(150) === 'Over 100');\nYou should use the > operator at least twice\njs\nassert(__helpers removeJSComments(code) match(/val\\s*>\\s*('|\")*\\d+('|\")*/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2138,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e9b2770c1c7d7a5f27790cbb5efad5b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'10 or Under'); testGreaterThan(11) should return the string Over 10 js assert(testGreaterThan(11) === 'Over 10'); testGreaterThan(99) should return the string Over 10 js assert(testGreaterThan(99) === 'Over 10'); testGreaterThan(100) should return the string Over 10 js assert(testGreaterThan(100) === 'Over 10'); testGreaterThan(101) should return the string Over 100 js assert(testGreaterThan(101) === 'Over 100'); testGreaterThan(150) should return the string Over 100 js assert(testGreaterThan(150) === 'Over 100'); You should use the > operator at least twice js assert(__helpers removeJSComments(code) match(/val\\s*>\\s*('|\")*\\d+('|\")*/g)length > 1);\n--seed--\n--seed-contents--\n```js\nfunction testGreaterThan(val) {\nif (val) {  // Change this line\nreturn \"Over 100\";\n}\nif (val) {  // Change this line\nreturn \"Over 10\";\n}\nreturn \"10 or Under\";\n}\ntestGreaterThan(10);\n```\n--solutions--\njs\nfunction testGreaterThan(val) {\nif (val > 100) {  // Change this line\nreturn \"Over 100\";\n}\nif (val > 10) {  // Change this line\nreturn \"Over 10\";\n}\nreturn \"10 or Under\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2138,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-greater-than-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9f82a939207902cbc858f27ed5660967",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-strict-equality-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d1\ntitle: Comparison with the Strict Equality Operator\nchallengeType: 1\nforumTopicId: 16790\ndashedName: comparison-with-the-strict-equality-operator\n--description--\nStrict equality (===) is the counterpart to the equality operator (==). However, unlike the equality operator, which attempts to convert both values being compared to a common type, the strict equality operator does not perform a type conversion.\nIf the values being compared have different types, they are considered unequal, and the strict equality operator will return false.\nExamples\njs\n3 ===  3  // true\n3 === '3' // false\nIn the second example, 3 is a Number type and '3' is a String type.\n--instructions--\nUse the strict equality operator in the if statement so the function will return the string Equal when val is strictly equal to 7.\n--hints--\ntestStrict(10) should return the string Not Equal\njs\nassert(testStrict(10) === 'Not Equal');\ntestStrict(7) should return the string Equal\njs\nassert(testStrict(7) === 'Equal');\ntestStrict(\"7\") should return the string Not Equal\njs\nassert(testStrict('7') === 'Not Equal');\nYou should use the === operator\njs\nassert(__helpers.removeJSComments(code).match(/(val\\s*===\\s*\\d+)|(\\d+\\s*===\\s*val)/g).length > 0);\n--seed--\n--seed-contents--\n```js\n// Setup\nfunction testStrict(val) {\nif (val) { // Change this line\nreturn \"Equal\";\n}\nreturn \"Not Equal\";\n}\ntestStrict(10);\n```\n--solutions--\njs\nfunction testStrict(val) {\nif (val === 7) {\nreturn \"Equal\";\n}\nreturn \"Not Equal\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1655,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-strict-equality-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fc853f32e9ffdf8c721807721d0f84ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-or-equal-to-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d7\ntitle: Comparison with the Less Than Or Equal To Operator\nchallengeType: 1\nforumTopicId: 16788\ndashedName: comparison-with-the-less-than-or-equal-to-operator\n--description--\nThe less than or equal to operator (<=) compares the values of two numbers If the number to the left is less than or equal to the number to the right, it returns true If the number on the left is greater than the number on the right, it returns false Like the equality operator, the less than or equal to operator converts data types Examples\njs\n4   <= 5 // true\n'7' <= 7 // true\n5   <= 5 // true\n3   <= 2 // false\n'8' <= 4 // false\n--instructions--\nAdd the less than or equal to operator to the indicated lines so that the return statements make sense --hints--\ntestLessOrEqual(0) should return the string Smaller Than or Equal to 12\njs\nassert(testLessOrEqual(0) === 'Smaller Than or Equal to 12');\ntestLessOrEqual(11) should return the string Smaller Than or Equal to 12\njs\nassert(testLessOrEqual(11) === 'Smaller Than or Equal to 12');\ntestLessOrEqual(12) should return the string Smaller Than or Equal to 12\njs\nassert(testLessOrEqual(12) === 'Smaller Than or Equal to 12');\ntestLessOrEqual(23) should return the string Smaller Than or Equal to 24\njs\nassert(testLessOrEqual(23) === 'Smaller Than or Equal to 24');\ntestLessOrEqual(24) should return the string Smaller Than or Equal to 24\njs\nassert(testLessOrEqual(24) === 'Smaller Than or Equal to 24');\ntestLessOrEqual(25) should return the string More Than 24\njs\nassert(testLessOrEqual(25) === 'More Than 24');\ntestLessOrEqual(55) should return the string More Than 24\njs\nassert(testLessOrEqual(55) === 'More Than 24');\nYou should use the <= operator at least twice\njs\nassert(__helpers removeJSComments(code)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-or-equal-to-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "971471321d6aabe18fb142e2e9634552",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-or-equal-to-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "string Smaller Than or Equal to 24 js assert(testLessOrEqual(23) === 'Smaller Than or Equal to 24'); testLessOrEqual(24) should return the string Smaller Than or Equal to 24 js assert(testLessOrEqual(24) === 'Smaller Than or Equal to 24'); testLessOrEqual(25) should return the string More Than 24 js assert(testLessOrEqual(25) === 'More Than 24'); testLessOrEqual(55) should return the string More Than 24 js assert(testLessOrEqual(55) === 'More Than 24'); You should use the <= operator at least twice js assert(__helpers removeJSComments(code)match(/val\\s*<=\\s*('|\")*\\d+('|\")*/g) length > 1);\n--seed--\n--seed-contents--\n```js\nfunction testLessOrEqual(val) {\nif (val) {  // Change this line\nreturn \"Smaller Than or Equal to 12\";\n}\nif (val) {  // Change this line\nreturn \"Smaller Than or Equal to 24\";\n}\nreturn \"More Than 24\";\n}\ntestLessOrEqual(10);\n```\n--solutions--\n```js\nfunction testLessOrEqual(val) {\nif (val <= 12) {  // Change this line\nreturn \"Smaller Than or Equal to 12\";\n}\nif (val <= 24) {  // Change this line\nreturn \"Smaller Than or Equal to 24\";\n}\nreturn \"More Than 24\";\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-less-than-or-equal-to-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b94df13f5a06ffec5e487047087bba4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-strict-inequality-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d3\ntitle: Comparison with the Strict Inequality Operator\nchallengeType: 1\nforumTopicId: 16791\ndashedName: comparison-with-the-strict-inequality-operator\n--description--\nThe strict inequality operator (!==) is the logical opposite of the strict equality operator. It means \"Strictly Not Equal\" and returns false where strict equality would return true and vice versa. The strict inequality operator will not convert data types.\nExamples\njs\n3 !==  3  // false\n3 !== '3' // true\n4 !==  3  // true\n--instructions--\nAdd the strict inequality operator to the if statement so the function will return the string Not Equal when val is not strictly equal to 17\n--hints--\ntestStrictNotEqual(17) should return the string Equal\njs\nassert(testStrictNotEqual(17) === 'Equal');\ntestStrictNotEqual(\"17\") should return the string Not Equal\njs\nassert(testStrictNotEqual('17') === 'Not Equal');\ntestStrictNotEqual(12) should return the string Not Equal\njs\nassert(testStrictNotEqual(12) === 'Not Equal');\ntestStrictNotEqual(\"bob\") should return the string Not Equal\njs\nassert(testStrictNotEqual('bob') === 'Not Equal');\nYou should use the !== operator\njs\nassert(__helpers.removeJSComments(code).match(/(val\\s*!==\\s*\\d+)|(\\d+\\s*!==\\s*val)/g).length > 0);\n--seed--\n--seed-contents--\n```js\n// Setup\nfunction testStrictNotEqual(val) {\nif (val) { // Change this line\nreturn \"Not Equal\";\n}\nreturn \"Equal\";\n}\ntestStrictNotEqual(10);\n```\n--solutions--\njs\nfunction testStrictNotEqual(val) {\nif (val !== 17) {\nreturn \"Not Equal\";\n}\nreturn \"Equal\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1697,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparison-with-the-strict-inequality-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9cdfc9a0ff42faf2e346e5d0a38ee125",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-or-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d9\ntitle: Comparisons with the Logical Or Operator\nchallengeType: 1\nforumTopicId: 16800\ndashedName: comparisons-with-the-logical-or-operator\n--description--\nThe logical or operator (||) returns true if either of the operands is true Otherwise, it returns false The logical or operator is composed of two pipe symbols: (||) This can typically be found between your Backspace and Enter keys The pattern below should look familiar from prior waypoints js\nif (num > 10) {\nreturn \"No\";\n}\nif (num < 5) {\nreturn \"No\";\n}\nreturn \"Yes\";\nThis code will return Yes if num is between 5 and 10 (5 and 10 included) The same logic can be written with the logical or operator js\nif (num > 10 || num < 5) {\nreturn \"No\";\n}\nreturn \"Yes\";\n--instructions--\nCombine the two if statements into one statement which returns the string Outside if val is not between 10 and 20, inclusive Otherwise, return the string Inside --hints--\nYou should use the || operator once\njs\nassert(__helpers removeJSComments(code) match(/\\|\\|/g) length === 1);\nYou should only have one if statement\njs\nassert(__helpers removeJSComments(code) match(/if/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-or-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "84dd898766bd445d024af9d69e4c693f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-or-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be written with the logical or operator js if (num > 10 || num < 5) { return \"No\"; } return \"Yes\"; --instructions-- Combine the two if statements into one statement which returns the string Outside if val is not between 10 and 20, inclusive Otherwise, return the string Inside --hints-- You should use the || operator once js assert(__helpers removeJSComments(code) match(/\\|\\|/g) length === 1); You should only have one if statement js assert(__helpers removeJSComments(code) match(/if/g)length === 1);\ntestLogicalOr(0) should return the string Outside\njs\nassert(testLogicalOr(0) === 'Outside');\ntestLogicalOr(9) should return the string Outside\njs\nassert(testLogicalOr(9) === 'Outside');\ntestLogicalOr(10) should return the string Inside\njs\nassert(testLogicalOr(10) === 'Inside');\ntestLogicalOr(15) should return the string Inside\njs\nassert(testLogicalOr(15) === 'Inside');\ntestLogicalOr(19) should return the string Inside\njs\nassert(testLogicalOr(19) === 'Inside');\ntestLogicalOr(20) should return the string Inside\njs\nassert(testLogicalOr(20) === 'Inside');\ntestLogicalOr(21) should return the string Outside\njs\nassert(testLogicalOr(21) === 'Outside');\ntestLogicalOr(25) should return the string Outside\njs\nassert(testLogicalOr(25) === 'Outside');\n--seed--\n--seed-contents--\n```js\nfunction testLogicalOr(val) {\n// Only change code below this line\nif (val) {\nreturn \"Outside\";\n}\nif (val) {\nreturn \"Outside\";\n}\n// Only change code above this line\nreturn \"Inside\";\n}\ntestLogicalOr(15);\n```\n--solutions--\njs\nfunction testLogicalOr(val) {\nif (val < 10 || val > 20) {\nreturn \"Outside\";\n}\nreturn \"Inside\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-or-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e06ea244687cac39c1b277a3a2ba62f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-addition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244af\ntitle: Compound Assignment With Augmented Addition\nchallengeType: 1\nforumTopicId: 16661\ndashedName: compound-assignment-with-augmented-addition\n--description--\nIn programming, it is common to use assignments to modify the contents of a variable. Remember that everything to the right of the equals sign is evaluated first, so we can say:\njs\nmyVar = myVar + 5;\nto add 5 to myVar. Since this is such a common pattern, there are operators which do both a mathematical operation and assignment in one step.\nOne such operator is the += operator.\njs\nlet myVar = 1;\nmyVar += 5;\nconsole.log(myVar);\n6 would be displayed in the console.\n--instructions--\nConvert the assignments for a, b, and c to use the += operator.\n--hints--\na should equal 15.\njs\nassert(a === 15);\nb should equal 26.\njs\nassert(b === 26);\nc should equal 19.\njs\nassert(c === 19);\nYou should use the += operator for each variable.\njs\nassert(__helpers.removeJSComments(code).match(/\\+=/g).length === 3);\nYou should not modify the code above the specified comment.\njs\nassert(\n/let a = 3;/.test(__helpers.removeJSComments(code)) &&\n/let b = 17;/.test(__helpers.removeJSComments(code)) &&\n/let c = 12;/.test(__helpers.removeJSComments(code))\n);\n--seed--\n--after-user-code--\njs\n(function(a,b,c){ return \"a = \" + a + \", b = \" + b + \", c = \" + c; })(a,b,c);\n--seed-contents--\n```js\nlet a = 3;\nlet b = 17;\nlet c = 12;\n// Only change code below this line\na = a + 12;\nb = 9 + b;\nc = c + 7;\n```\n--solutions--\n```js\nlet a = 3;\nlet b = 17;\nlet c = 12;\na += 12;\nb += 9;\nc += 7;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1704,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-addition.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "769e7b30d5290e15fb7c36b6348d5c8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-division.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b2\ntitle: Compound Assignment With Augmented Division\nchallengeType: 1\nforumTopicId: 16659\ndashedName: compound-assignment-with-augmented-division\n--description--\nThe /= operator divides a variable by another number.\njs\nmyVar = myVar / 5;\nWill divide myVar by 5. This can be rewritten as:\njs\nmyVar /= 5;\n--instructions--\nConvert the assignments for a, b, and c to use the /= operator.\n--hints--\na should equal 4.\njs\nassert(a === 4);\nb should equal 27.\njs\nassert(b === 27);\nc should equal 3.\njs\nassert(c === 3);\nYou should use the /= operator for each variable.\njs\nassert(__helpers.removeJSComments(code).match(/\\/=/g).length === 3);\nYou should not modify the code above the specified comment.\njs\nassert(\n/let a = 48;/.test(__helpers.removeJSComments(code)) &&\n/let b = 108;/.test(__helpers.removeJSComments(code)) &&\n/let c = 33;/.test(__helpers.removeJSComments(code))\n);\n--seed--\n--after-user-code--\njs\n(function(a,b,c){ return \"a = \" + a + \", b = \" + b + \", c = \" + c; })(a,b,c);\n--seed-contents--\n```js\nlet a = 48;\nlet b = 108;\nlet c = 33;\n// Only change code below this line\na = a / 12;\nb = b / 4;\nc = c / 11;\n```\n--solutions--\n```js\nlet a = 48;\nlet b = 108;\nlet c = 33;\na /= 12;\nb /= 4;\nc /= 11;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1377,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-division.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "11e79aa72475e5affd0d67b637900a0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-multiplication.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b1\ntitle: Compound Assignment With Augmented Multiplication\nchallengeType: 1\nforumTopicId: 16662\ndashedName: compound-assignment-with-augmented-multiplication\n--description--\nThe *= operator multiplies a variable by a number.\njs\nmyVar = myVar * 5;\nwill multiply myVar by 5. This can be rewritten as:\njs\nmyVar *= 5;\n--instructions--\nConvert the assignments for a, b, and c to use the *= operator.\n--hints--\na should equal 25.\njs\nassert(a === 25);\nb should equal 36.\njs\nassert(b === 36);\nc should equal 46.\njs\nassert(c === 46);\nYou should use the *= operator for each variable.\njs\nassert(__helpers.removeJSComments(code).match(/\\*=/g).length === 3);\nYou should not modify the code above the specified comment.\njs\nassert(\n/let a = 5;/.test(__helpers.removeJSComments(code)) &&\n/let b = 12;/.test(__helpers.removeJSComments(code)) &&\n/let c = 4\\.6;/.test(__helpers.removeJSComments(code))\n);\n--seed--\n--after-user-code--\njs\n(function(a,b,c){ return \"a = \" + a + \", b = \" + b + \", c = \" + c; })(a,b,c);\n--seed-contents--\n```js\nlet a = 5;\nlet b = 12;\nlet c = 4.6;\n// Only change code below this line\na = a * 5;\nb = 3 * b;\nc = c * 10;\n```\n--solutions--\n```js\nlet a = 5;\nlet b = 12;\nlet c = 4.6;\na = 5;\nb = 3;\nc *= 10;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1388,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-multiplication.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bc597168eeaab4c5f36b093011f5a830",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-and-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244d8\ntitle: Comparisons with the Logical And Operator\nchallengeType: 1\nforumTopicId: 16799\ndashedName: comparisons-with-the-logical-and-operator\n--description--\nSometimes you will need to test more than one thing at a time The logical and operator (&&) returns true if and only if the operands to the left and right of it are true The same effect could be achieved by nesting an if statement inside another if js\nif (num > 5) {\nif (num < 10) {\nreturn \"Yes\";\n}\n}\nreturn \"No\";\nThis code will return Yes if num is greater than 5 and less than 10 The same logic can be written with the logical and operator js\nif (num > 5 && num < 10) {\nreturn \"Yes\";\n}\nreturn \"No\";\n--instructions--\nReplace the two if statements with one statement, using the && operator, which will return the string Yes if val is less than or equal to 50 and greater than or equal to 25 Otherwise, will return the string No --hints--\nYou should use the && operator once\njs\nassert(__helpers removeJSComments(code) match(/&&/g) length === 1);\nYou should only have one if statement\njs\nassert(__helpers removeJSComments(code) match(/if/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-and-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "df1f7b72fb27e0ba18b368f9fbf45512",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-and-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "num < 10) { return \"Yes\"; } return \"No\"; --instructions-- Replace the two if statements with one statement, using the && operator, which will return the string Yes if val is less than or equal to 50 and greater than or equal to 25 Otherwise, will return the string No --hints-- You should use the && operator once js assert(__helpers removeJSComments(code) match(/&&/g) length === 1); You should only have one if statement js assert(__helpers removeJSComments(code) match(/if/g)length === 1);\ntestLogicalAnd(0) should return the string No\njs\nassert(testLogicalAnd(0) === 'No');\ntestLogicalAnd(24) should return the string No\njs\nassert(testLogicalAnd(24) === 'No');\ntestLogicalAnd(25) should return the string Yes\njs\nassert(testLogicalAnd(25) === 'Yes');\ntestLogicalAnd(30) should return the string Yes\njs\nassert(testLogicalAnd(30) === 'Yes');\ntestLogicalAnd(50) should return the string Yes\njs\nassert(testLogicalAnd(50) === 'Yes');\ntestLogicalAnd(51) should return the string No\njs\nassert(testLogicalAnd(51) === 'No');\ntestLogicalAnd(75) should return the string No\njs\nassert(testLogicalAnd(75) === 'No');\ntestLogicalAnd(80) should return the string No\njs\nassert(testLogicalAnd(80) === 'No');\n--seed--\n--seed-contents--\n```js\nfunction testLogicalAnd(val) {\n// Only change code below this line\nif (val) {\nif (val) {\nreturn \"Yes\";\n}\n}\n// Only change code above this line\nreturn \"No\";\n}\ntestLogicalAnd(10);\n```\n--solutions--\njs\nfunction testLogicalAnd(val) {\nif (val >= 25 && val <= 50) {\nreturn \"Yes\";\n}\nreturn \"No\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\comparisons-with-the-logical-and-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "004dda8f0742756a8225e669a35c0133",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-subtraction.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b0\ntitle: Compound Assignment With Augmented Subtraction\nchallengeType: 1\nforumTopicId: 16660\ndashedName: compound-assignment-with-augmented-subtraction\n--description--\nLike the += operator, -= subtracts a number from a variable.\njs\nmyVar = myVar - 5;\nwill subtract 5 from myVar. This can be rewritten as:\njs\nmyVar -= 5;\n--instructions--\nConvert the assignments for a, b, and c to use the -= operator.\n--hints--\na should equal 5.\njs\nassert(a === 5);\nb should equal -6.\njs\nassert(b === -6);\nc should equal 2.\njs\nassert(c === 2);\nYou should use the -= operator for each variable.\njs\nassert(__helpers.removeJSComments(code).match(/-=/g).length === 3);\nYou should not modify the code above the specified comment.\njs\nassert(\n/let a = 11;/.test(__helpers.removeJSComments(code)) && /let b = 9;/.test(__helpers.removeJSComments(code)) && /let c = 3;/.test(__helpers.removeJSComments(code))\n);\n--seed--\n--after-user-code--\njs\n(function(a,b,c){ return \"a = \" + a + \", b = \" + b + \", c = \" + c; })(a,b,c);\n--seed-contents--\n```js\nlet a = 11;\nlet b = 9;\nlet c = 3;\n// Only change code below this line\na = a - 6;\nb = b - 15;\nc = c - 1;\n```\n--solutions--\n```js\nlet a = 11;\nlet b = 9;\nlet c = 3;\na -= 6;\nb -= 15;\nc -= 1;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\compound-assignment-with-augmented-subtraction.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8890347d1fda4fea00fcd8e1a104ac58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\concatenating-strings-with-the-plus-equals-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b8\ntitle: Concatenating Strings with the Plus Equals Operator\nchallengeType: 1\nforumTopicId: 16803\ndashedName: concatenating-strings-with-the-plus-equals-operator\n--description--\nWe can also use the += operator to concatenate a string onto the end of an existing string variable. This can be very helpful to break a long string over several lines.\nNote: Watch out for spaces. Concatenation does not add spaces between concatenated strings, so you'll need to add them yourself.\nExample:\njs\nlet ourStr = \"I come first. \";\nourStr += \"I come second.\";\nourStr now has a value of the string I come first. I come second..\n--instructions--\nBuild myStr over several lines by concatenating these two strings: This is the first sentence. and This is the second sentence. using the += operator. Use the += operator similar to how it is shown in the example and be sure to include a space between the two strings. Start by assigning the first string to myStr, then add on the second string.\n--hints--\nmyStr should have a single space character between the two strings.\njs\nassert(/sentence\\. This/.test(myStr));\nmyStr should have a value of the string This is the first sentence. This is the second sentence.\njs\nassert(myStr === 'This is the first sentence. This is the second sentence.');\nYou should use the += operator to build myStr.\njs\nassert(__helpers.removeJSComments(code).match(/myStr\\s*\\+=\\s*([\"']).*\\1/g));\n--seed--\n--after-user-code--\njs\n(function(){\nif(typeof myStr === 'string') {\nreturn 'myStr = \"' + myStr + '\"';\n} else {\nreturn 'myStr is not a string';\n}\n})();\n--seed-contents--\njs\nlet myStr;\n--solutions--\njs\nlet myStr = \"This is the first sentence. \";\nmyStr += \"This is the second sentence.\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1875,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\concatenating-strings-with-the-plus-equals-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "234452abcf43af8224aaf294a5a8cac4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\concatenating-strings-with-plus-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b7\ntitle: Concatenating Strings with Plus Operator\nchallengeType: 1\nforumTopicId: 16802\ndashedName: concatenating-strings-with-plus-operator\n--description--\nIn JavaScript, when the + operator is used with a String value, it is called the concatenation operator. You can build a new string out of other strings by concatenating them together.\nExample\njs\n'My name is Alan,' + ' I concatenate.'\nNote: Watch out for spaces. Concatenation does not add spaces between concatenated strings, so you'll need to add them yourself.\nExample:\njs\nconst ourStr = \"I come first. \" + \"I come second.\";\nThe string I come first. I come second. would be displayed in the console.\n--instructions--\nBuild myStr from the strings This is the start. and This is the end. using the + operator. Be sure to include a space between the two strings.\n--hints--\nmyStr should have a single space character between the two strings.\njs\nassert(/start\\. This/.test(myStr));\nmyStr should have a value of the string This is the start. This is the end.\njs\nassert(myStr === 'This is the start. This is the end.');\nYou should use the + operator to build myStr.\njs\nassert(__helpers.removeJSComments(code).match(/([\"']).*\\1\\s*\\+\\s*([\"']).*\\2/g));\nmyStr should be created using the const keyword.\njs\nassert(/const\\s+myStr/.test(__helpers.removeJSComments(code)));\nYou should assign the result to the myStr variable.\njs\nassert(/myStr\\s*=/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(){\nif(typeof myStr === 'string') {\nreturn 'myStr = \"' + myStr + '\"';\n} else {\nreturn 'myStr is not a string';\n}\n})();\n--seed-contents--\njs\nconst myStr = \"\"; // Change this line\n--solutions--\njs\nconst myStr = \"This is the start. \" + \"This is the end.\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1949,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\concatenating-strings-with-plus-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fe1ce75bc85d60092f58e9cb15f90b60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\constructing-strings-with-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b9\ntitle: Constructing Strings with Variables\nchallengeType: 1\nforumTopicId: 16805\ndashedName: constructing-strings-with-variables\n--description--\nSometimes you will need to build a string. By using the concatenation operator (+), you can insert one or more variables into a string you're building.\nExample:\njs\nconst ourName = \"freeCodeCamp\";\nconst ourStr = \"Hello, our name is \" + ourName + \", how are you?\";\nourStr would have a value of the string Hello, our name is freeCodeCamp, how are you?.\n--instructions--\nSet myName to a string equal to your name and build myStr with myName between the strings My name is and and I am well!\n--hints--\nmyName should be set to a string at least 3 characters long.\njs\nassert(typeof myName !== 'undefined' && myName.length > 2);\nYou should use two + operators to build myStr with myName inside it.\njs\nassert(__helpers.removeJSComments(code).match(/[\"']\\s*\\+\\s*myName\\s*\\+\\s*[\"']/g).length > 0);\n--seed--\n--after-user-code--\njs\n(function(){\nvar output = [];\nif(typeof myName === 'string') {\noutput.push('myName = \"' + myName + '\"');\n} else {\noutput.push('myName is not a string');\n}\nif(typeof myStr === 'string') {\noutput.push('myStr = \"' + myStr + '\"');\n} else {\noutput.push('myStr is not a string');\n}\nreturn output.join('\\n');\n})();\n--seed-contents--\njs\n// Only change code below this line\nconst myName = \"\";\nconst myStr = \"\";\n--solutions--\njs\nconst myName = \"Bob\";\nconst myStr = \"My name is \" + myName + \" and I am well!\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\constructing-strings-with-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "35796d04a366afc72f5d7adbd258f113",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\count-backwards-with-a-for-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56105e7b514f539506016a5e\ntitle: Count Backwards With a For Loop\nchallengeType: 1\nforumTopicId: 16808\ndashedName: count-backwards-with-a-for-loop\n--description--\nA for loop can also count backwards, so long as we can define the right conditions.\nIn order to decrement by two each iteration, we'll need to change our initialization, condition, and final expression.\nWe'll start at i = 10 and loop while i > 0. We'll decrement i by 2 each loop with i -= 2.\n```js\nconst ourArray = [];\nfor (let i = 10; i > 0; i -= 2) {\nourArray.push(i);\n}\n```\nourArray will now contain [10, 8, 6, 4, 2]. Let's change our initialization and final expression so we can count backwards by twos to create an array of descending odd numbers.\n--instructions--\nPush the odd numbers from 9 through 1 to myArray using a for loop.\n--hints--\nYou should be using a for loop for this.\njs\nassert(/for\\s*\\([^)]+?\\)/.test(__helpers.removeJSComments(code)));\nYou should be using the array method push.\njs\nassert(__helpers.removeJSComments(code).match(/myArray.push/));\nmyArray should equal [9, 7, 5, 3, 1].\njs\nassert.deepEqual(myArray, [9, 7, 5, 3, 1]);\n--seed--\n--after-user-code--\njs\nif(typeof myArray !== \"undefined\"){(function(){return myArray;})();}\n--seed-contents--\n```js\n// Setup\nconst myArray = [];\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [];\nfor (let i = 9; i > 0; i -= 2) {\nmyArray.push(i);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\count-backwards-with-a-for-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f005d18d9ca4b888df5b9eee3b98c738",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\create-decimal-numbers-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1391c1c11feddfaeb4bdef\ntitle: Create Decimal Numbers with JavaScript\nchallengeType: 1\nforumTopicId: 16826\ndashedName: create-decimal-numbers-with-javascript\n--description--\nWe can store decimal numbers in variables too. Decimal numbers are sometimes referred to as floating point numbers or floats.\nNote: when you compute numbers, they are computed with finite precision. Operations using floating points may lead to different results than the desired outcome. If you are getting one of these results, open a topic on the freeCodeCamp forum.\n--instructions--\nCreate a variable myDecimal and give it a decimal value with a fractional part (e.g. 5.7).\n--hints--\nmyDecimal should be a number.\njs\nassert(typeof myDecimal === 'number');\nmyDecimal should have a decimal point\njs\nassert(myDecimal % 1 != 0);\n--seed--\n--after-user-code--\njs\n(function(){if(typeof myDecimal !== \"undefined\"){return myDecimal;}})();\n--seed-contents--\n```js\nconst ourDecimal = 5.7;\n// Only change code below this line\n```\n--solutions--\njs\nconst myDecimal = 9.9;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1242,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\create-decimal-numbers-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fcaec949932d7512088a1955402d4663",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-string-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c444eddfaeb5bdef\ntitle: Declare String Variables\nchallengeType: 1\nforumTopicId: 17557\ndashedName: declare-string-variables\n--description--\nPreviously you used the following code to declare a variable:\njs\nvar myName;\nBut you can also declare a string variable like this:\njs\nvar myName = \"your name\";\n\"your name\" is called a string literal. A string literal, or string, is a series of zero or more characters enclosed in single or double quotes.\n--instructions--\nCreate two new string variables: myFirstName and myLastName and assign them the values of your first and last name, respectively.\n--hints--\nmyFirstName should be a string with at least one character in it.\njs\nassert(\n(function () {\nif (\ntypeof myFirstName !== 'undefined' &&\ntypeof myFirstName === 'string' &&\nmyFirstName.length > 0\n) {\nreturn true;\n} else {\nreturn false;\n}\n})()\n);\nmyLastName should be a string with at least one character in it.\njs\nassert(\n(function () {\nif (\ntypeof myLastName !== 'undefined' &&\ntypeof myLastName === 'string' &&\nmyLastName.length > 0\n) {\nreturn true;\n} else {\nreturn false;\n}\n})()\n);\n--seed--\n--after-user-code--\njs\nif(typeof myFirstName !== \"undefined\" && typeof myLastName !== \"undefined\"){(function(){return myFirstName + ', ' + myLastName;})();}\n--seed-contents--\n```js\n```\n--solutions--\njs\nvar myFirstName = \"Alan\";\nvar myLastName = \"Turing\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1578,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-string-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c8e2bde53b45e956228d0df22922b4f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-javascript-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c443eddfaeb5bdef\ntitle: Declare JavaScript Variables\nchallengeType: 1\nforumTopicId: 17556\ndashedName: declare-javascript-variables\n--description--\nIn computer science, data is anything that is meaningful to the computer. JavaScript provides eight different data types which are undefined, null, boolean, string, symbol, bigint, number, and object.\nFor example, computers distinguish between numbers, such as the number 12, and strings, such as \"12\", \"dog\", or \"123 cats\", which are collections of characters. Computers can perform mathematical operations on a number, but not on a string.\nVariables allow computers to store and manipulate data in a dynamic fashion. They do this by using a \"label\" to point to the data rather than using the data itself. Any of the eight data types may be stored in a variable.\nVariables are similar to the x and y variables you use in mathematics, which means they're a simple name to represent the data we want to refer to. Computer variables differ from mathematical variables in that they can store different values at different times.\nWe tell JavaScript to create or declare a variable by putting the keyword var in front of it, like so:\njs\nvar ourName;\ncreates a variable called ourName. In JavaScript we end statements with semicolons. Variable names can be made up of numbers, letters, and $ or _, but may not contain spaces or start with a number.\n--instructions--\nUse the var keyword to create a variable called myName.\nHint\nLook at the ourName example above if you get stuck.\n--hints--\nYou should declare myName with the var keyword, ending with a semicolon\njs\nassert(/var\\s+myName\\s*;/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\nif(typeof myName !== \"undefined\"){(function(v){return v;})(myName);}\n--seed-contents--\n```js\n```\n--solutions--\njs\nvar myName;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2010,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-javascript-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a172afb22dd38617f11671cfce62f596",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\delete-properties-from-a-javascript-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392d3\ntitle: Delete Properties from a JavaScript Object\nchallengeType: 1\nforumTopicId: 17560\ndashedName: delete-properties-from-a-javascript-object\n--description--\nWe can also delete properties from objects like this:\njs\ndelete ourDog.bark;\nExample:\n```js\nconst ourDog = {\n\"name\": \"Camper\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"everything!\"],\n\"bark\": \"bow-wow\"\n};\ndelete ourDog.bark;\n```\nAfter the last line shown above, ourDog looks like:\njs\n{\n\"name\": \"Camper\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"everything!\"]\n}\n--instructions--\nDelete the tails property from myDog. You may use either dot or bracket notation.\n--hints--\nYou should delete the property tails from myDog.\njs\nassert(typeof myDog === 'object' && myDog.tails === undefined);\nYou should not modify the myDog setup.\njs\nassert(__helpers.removeJSComments(code).match(/\"tails\": 1/g).length > 0);\n--seed--\n--after-user-code--\njs\n(function(z){return z;})(myDog);\n--seed-contents--\n```js\n// Setup\nconst myDog = {\n\"name\": \"Happy Coder\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"freeCodeCamp Campers\"],\n\"bark\": \"woof\"\n};\n// Only change code below this line\n```\n--solutions--\njs\nconst myDog = {\n\"name\": \"Happy Coder\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"freeCodeCamp Campers\"],\n\"bark\": \"woof\"\n};\ndelete myDog.tails;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1427,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\delete-properties-from-a-javascript-object.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b7e5c404ebb4236331be5d9a58f3a539",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\decrement-a-number-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244ad\ntitle: Decrement a Number with JavaScript\nchallengeType: 1\nforumTopicId: 17558\ndashedName: decrement-a-number-with-javascript\n--description--\nYou can easily decrement or decrease a variable by one with the -- operator.\njs\ni--;\nis the equivalent of\njs\ni = i - 1;\nNote: The entire line becomes i--;, eliminating the need for the equal sign.\n--instructions--\nChange the code to use the -- operator on myVar.\n--hints--\nmyVar should equal 10.\njs\nassert(myVar === 10);\nmyVar = myVar - 1; should be changed.\njs\nassert(!__helpers.removeJSComments(code).match(/myVar\\s*=\\s*myVar\\s*[-]\\s*1.*?;?/));\nYou should not assign myVar with 10.\njs\nassert(!__helpers.removeJSComments(code).match(/myVar\\s*=\\s*10.*?;?/));\nYou should use the -- operator on myVar.\njs\nassert(/[-]{2}\\s*myVar|myVar\\s*[-]{2}/.test(__helpers.removeJSComments(code)));\nYou should not change code above the specified comment.\njs\nassert(/let myVar = 11;/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(z){return 'myVar = ' + z;})(myVar);\n--seed-contents--\n```js\nlet myVar = 11;\n// Only change code below this line\nmyVar = myVar - 1;\n```\n--solutions--\njs\nlet myVar = 11;\nmyVar--;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1349,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\decrement-a-number-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "162d26eb46b9f40868398c3ffc0db82f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\counting-cards.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 565bbe00e9cc8ac0725390f4\ntitle: Counting Cards\nchallengeType: 1\nforumTopicId: 16809\ndashedName: counting-cards\n--description--\nIn the casino game Blackjack, a player can determine whether they have an advantage on the next hand over the house by keeping track of the relative number of high and low cards remaining in the deck This is called Card Counting Having more high cards remaining in the deck favors the player Each card is assigned a value according to the table below When the count is positive, the player should bet high When the count is zero or negative, the player should bet low Count ChangeCards+12, 3, 4, 5, 607, 8, 9-110, 'J', 'Q', 'K', 'A'\nYou will write a card counting function It will receive a card parameter, which can be a number or a string, and increment or decrement the global count variable according to the card's value (see table) The function will then return a string with the current count and the string Bet if the count is positive, or Hold if the count is zero or negative The current count and the player's decision (Bet or Hold) should be separated by a single space Example Outputs: -3 Hold or 5 Bet\nHint\nDo NOT reset count to 0 when value is 7, 8, or 9 Do NOT return an array Do NOT include quotes (single or double) in the output --hints--\nYour function should return a value for count and the text (Bet or Hold) with one space character between them js\nassert(//\n(function () {\ncount = 0;\nlet out = cc(10);\nconst hasSpace = /- \\d+ (Bet|Hold)/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\counting-cards.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ef0f2c7a5b6583b11e760cdf9cac6a33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\counting-cards.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "space Example Outputs: -3 Hold or 5 Bet Hint Do NOT reset count to 0 when value is 7, 8, or 9 Do NOT return an array Do NOT include quotes (single or double) in the output --hints-- Your function should return a value for count and the text (Bet or Hold) with one space character between them js assert(// (function () { count = 0; let out = cc(10); const hasSpace = /- \\d+ (Bet|Hold)/test('' + out);\nreturn hasSpace;\n})()\n);\nCards Sequence 2, 3, 4, 5, 6 should return the string 5 Bet\njs\nassert(\n(function () {\ncount = 0;\ncc(2);\ncc(3);\ncc(4);\ncc(5);\nvar out = cc(6);\nif (out === '5 Bet') {\nreturn true;\n}\nreturn false;\n})()\n);\nCards Sequence 7, 8, 9 should return the string 0 Hold\njs\nassert(\n(function () {\ncount = 0;\ncc(7);\ncc(8);\nvar out = cc(9);\nif (out === '0 Hold') {\nreturn true;\n}\nreturn false;\n})()\n);\nCards Sequence 10, J, Q, K, A should return the string -5 Hold\njs\nassert(\n(function () {\ncount = 0;\ncc(10);\ncc('J');\ncc('Q');\ncc('K');\nvar out = cc('A');\nif (out === '-5 Hold') {\nreturn true;\n}\nreturn false;\n})()\n);\nCards Sequence 3, 7, Q, 8, A should return the string -1 Hold\njs\nassert(\n(function () {\ncount = 0;\ncc(3);\ncc(7);\ncc('Q');\ncc(8);\nvar out = cc('A');\nif (out === '-1 Hold') {\nreturn true;\n}\nreturn false;\n})()\n);\nCards Sequence 2, J, 9, 2, 7 should return the string 1 Bet\njs\nassert(\n(function () {\ncount = 0;\ncc(2);\ncc('J');\ncc(9);\ncc(2);\nvar out = cc(7);\nif (out === '1 Bet') {\nreturn true;\n}\nreturn false;\n})()\n);\nCards Sequence 2, 2, 10 should return the string 1 Bet\njs\nassert(\n(function () {\ncount = 0;\ncc(2);\ncc(2);\nvar out = cc(10);\nif (out === '1 Bet') {\nreturn true;\n}\nreturn false;\n})()\n);\nCards Sequence 3, 2, A, 10, K should return the string -1 Hold\njs\nassert(\n(function () {\ncount = 0;\ncc(3);\ncc(2);\ncc('A');\ncc(10);\nvar out = cc('K');\nif (out === '-1 Hold') {\nreturn true;\n}\nreturn false;\n})()\n);\n--seed--\n--seed-contents--\n```js\nlet count = 0;\nfunction cc(card) {\n// Only change code below this line\nreturn \"Change Me\";\n// Only change code above this line\n}\ncc(2); cc(3); cc(7); cc('K'); cc('A');\n```\n--solutions--\njs\nlet count = 0;\nfunction cc(card) {\nswitch(card) {\ncase 2:\ncase 3:\ncase 4:\ncase 5:\ncase 6:\ncount++;\nbreak;\ncase 10:\ncase 'J':\ncase 'Q':\ncase 'K':\ncase 'A':\ncount--;\n}\nif(count > 0) {\nreturn count + \" Bet\";\n} else {\nreturn count + \" Hold\";\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\counting-cards.md",
      "source_type": "git_repo"
    },
    "token_count": 787,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "09998c0310eca700ac40ce51d15f3a4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\divide-one-decimal-by-another-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7993c9ca9feddfaeb7bdef\ntitle: Divide One Decimal by Another with JavaScript\nchallengeType: 1\nforumTopicId: 18255\ndashedName: divide-one-decimal-by-another-with-javascript\n--description--\nNow let's divide one decimal by another.\n--instructions--\nChange the 0.0 so that quotient will equal to 2.2.\n--hints--\nThe variable quotient should equal 2.2\njs\nassert(quotient === 2.2);\nYou should use the / operator to divide 4.4 by 2\njs\nassert(/4\\.40*\\s*\\/\\s*2\\.*0*/.test(__helpers.removeJSComments(code)));\nThe quotient variable should only be assigned once\njs\nassert(__helpers.removeJSComments(code).match(/quotient\\s*=/g).length === 1);\n--seed--\n--seed-contents--\njs\nconst quotient = 0.0 / 2.0; // Change this line\n--solutions--\njs\nconst quotient = 4.4 / 2.0;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 842,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\divide-one-decimal-by-another-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 236,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e84f9097da4322ccf0493119e417673e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-a-read-only-variable-with-the-const-keyword.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b87367417b2b2512b41\ntitle: Declare a Read-Only Variable with the const Keyword\nchallengeType: 1\nforumTopicId: 301201\ndashedName: declare-a-read-only-variable-with-the-const-keyword\n--description--\nThe keyword let is not the only new way to declare variables In ES6, you can also declare variables using the const keyword const has all the awesome features that let has, with the added bonus that variables declared using const are read-only They are a constant value, which means that once a variable is assigned with const, it cannot be reassigned:\njs\nconst FAV_PET = \"Cats\";\nFAV_PET = \"Dogs\";\nThe console will display an error due to reassigning the value of FAV_PET You should always name variables you don't want to reassign using the const keyword This helps when you accidentally attempt to reassign a variable that is meant to stay constant Note: It is common for developers to use uppercase variable identifiers for immutable values and lowercase or camelCase for mutable values (objects and arrays) You will learn more about objects, arrays, and immutable and mutable values in later challenges Also in later challenges, you will see examples of uppercase, lowercase, or camelCase variable identifiers --instructions--\nChange the code so that all variables are declared using let or const Use let when you want the variable to change, and const when you want the variable to remain constant Also, rename variables declared with const to conform to common practices Do not change the strings assigned to the variables --hints--\nvar should not exist in your code js\nassert notMatch(code, /var/g);\nYou should change fCC to all uppercase js\nassert match(code, /(FCC)/);\nassert notMatch(code, /(fCC)/);\nFCC should be a constant variable declared with const js\nassert match(code, /const\\s+FCC/);\nThe string assigned to FCC should not be changed js\nassert equal(FCC, 'freeCodeCamp');\nfact should be declared with let js\nassert match(code, /(let\\s+fact)/g);\nconsole log should be changed to print the FCC and fact variables js\nassert match(code, /console\\ log\\(\\s*FCC\\s*\\,\\s*fact\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-a-read-only-variable-with-the-const-keyword.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "360f2f7d842e23c4d62881f514ef7cdb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-a-read-only-variable-with-the-const-keyword.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "not exist in your code js assert notMatch(code, /var/g); You should change fCC to all uppercase js assert match(code, /(FCC)/); assert notMatch(code, /(fCC)/); FCC should be a constant variable declared with const js assert match(code, /const\\s+FCC/); The string assigned to FCC should not be changed js assert equal(FCC, 'freeCodeCamp'); fact should be declared with let js assert match(code, /(let\\s+fact)/g); console log should be changed to print the FCC and fact variables js assert match(code, /console\\ log\\(\\s*FCC\\s*\\,\\s*fact\\s*\\)\\s*;/g);\n--seed--\n--seed-contents--\njs\nvar fCC = \"freeCodeCamp\"; // Change this line\nvar fact = \"is cool \"; // Change this line\nfact = \"is awesome \";\nconsole log(fCC, fact); // Change this line\n--solutions--\n```js\nconst FCC = \"freeCodeCamp\";\nlet fact = \"is cool \";\nfact = \"is awesome \";\nconsole log(FCC, fact);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\declare-a-read-only-variable-with-the-const-keyword.md",
      "source_type": "git_repo"
    },
    "token_count": 234,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f69d07491407c9b0bf7441f662104c09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\divide-one-number-by-another-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb6bdef\ntitle: Divide One Number by Another with JavaScript\nchallengeType: 1\nforumTopicId: 17566\ndashedName: divide-one-number-by-another-with-javascript\n--description--\nWe can also divide one number by another.\nJavaScript uses the / symbol for division.\nExample\njs\nconst myVar = 16 / 2;\nmyVar now has the value 8.\n--instructions--\nChange the 0 so that the quotient is equal to 2.\n--hints--\nThe variable quotient should be equal to 2.\njs\nassert(quotient === 2);\nYou should use the / operator.\njs\nassert(/\\d+\\s*\\/\\s*\\d+/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(z){return 'quotient = '+z;})(quotient);\n--seed-contents--\njs\nconst quotient = 66 / 0;\n--solutions--\njs\nconst quotient = 66 / 33;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\divide-one-number-by-another-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2e61622dc59ecda10c4909742d7a3d2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\escape-sequences-in-strings.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b6\ntitle: Escape Sequences in Strings\nchallengeType: 1\nforumTopicId: 17567\ndashedName: escape-sequences-in-strings\n--description--\nQuotes are not the only characters that can be escaped inside a string. Escape sequences allow you to use characters you may not otherwise be able to use in a string.\nCodeOutput\\'single quote\\\"double quote\\\\backslash\\nnewline\\ttab\\rcarriage return\\bbackspace\\fform feed\nNote that the backslash itself must be escaped in order to display as a backslash.\n--instructions--\nAssign the following three lines of text into the single variable myStr using escape sequences.\nFirstLine\n\\SecondLine\nThirdLine\nYou will need to use escape sequences to insert special characters correctly. You will also need to follow the spacing as it looks above, with no spaces between escape sequences or words.\nNote: The indentation for SecondLine is achieved with the tab escape character, not spaces.\n--hints--\nmyStr should not contain any spaces\njs\nassert(!/ /.test(myStr));\nmyStr should contain the strings FirstLine, SecondLine and ThirdLine (remember case sensitivity)\njs\nassert(\n/FirstLine/.test(myStr) && /SecondLine/.test(myStr) && /ThirdLine/.test(myStr)\n);\nFirstLine should be followed by the newline character \\n\njs\nassert(/FirstLine\\n/.test(myStr));\nmyStr should contain a tab character \\t which follows a newline character\njs\nassert(/\\n\\t/.test(myStr));\nSecondLine should be preceded by the backslash character \\\njs\nassert(/\\\\SecondLine/.test(myStr));\nThere should be a newline character between SecondLine and ThirdLine\njs\nassert(/SecondLine\\nThirdLine/.test(myStr));\nmyStr should only contain characters shown in the instructions\njs\nassert(myStr === 'FirstLine\\n\\t\\\\SecondLine\\nThirdLine');\n--seed--\n--seed-contents--\njs\nconst myStr = \"\"; // Change this line\n--solutions--\njs\nconst myStr = \"FirstLine\\n\\t\\\\SecondLine\\nThirdLine\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\escape-sequences-in-strings.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8fd0bb3f8abeaea7949488e4fa7589de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\explore-differences-between-the-var-and-let-keywords.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b87367417b2b2512b3f\ntitle: Explore Differences Between the var and let Keywords\nchallengeType: 1\nforumTopicId: 301202\ndashedName: explore-differences-between-the-var-and-let-keywords\n--description--\nOne of the biggest problems with declaring variables with the var keyword is that you can easily overwrite variable declarations:\njs\nvar camper = \"James\";\nvar camper = \"David\";\nconsole.log(camper);\nIn the code above, the camper variable is originally declared as James, and is then overridden to be David. The console then displays the string David.\nIn a small application, you might not run into this type of problem. But as your codebase becomes larger, you might accidentally overwrite a variable that you did not intend to. Because this behavior does not throw an error, searching for and fixing bugs becomes more difficult.\nA keyword called let was introduced in ES6, a major update to JavaScript, to solve this potential issue with the var keyword. You'll learn about other ES6 features in later challenges.\nIf you replace var with let in the code above, it results in an error:\njs\nlet camper = \"James\";\nlet camper = \"David\";\nThe error can be seen in your browser console.\nSo unlike var, when you use let, a variable with the same name can only be declared once.\n--instructions--\nUpdate the code so it only uses the let keyword.\n--hints--\nvar should not exist in the code.\njs\nassert.notMatch(code, /var/g);\ncatName should be the string Oliver.\njs\nassert.equal(catName, 'Oliver');\ncatSound should be the string Meow!\njs\nassert.equal(catSound, 'Meow!');\n--seed--\n--seed-contents--\njs\nvar catName = \"Oliver\";\nvar catSound = \"Meow!\";\n--solutions--\njs\nlet catName = \"Oliver\";\nlet catSound = \"Meow!\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\explore-differences-between-the-var-and-let-keywords.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7cbb2d0736fdff3b6217db2e2f3dd143",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\find-the-length-of-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c448eddfaeb5bdef\ntitle: Find the Length of a String\nchallengeType: 1\nforumTopicId: 18182\ndashedName: find-the-length-of-a-string\n--description--\nYou can find the length of a String value by writing .length after the string variable or string literal.\njs\nconsole.log(\"Alan Peter\".length);\nThe value 10 would be displayed in the console. Note that the space character between \"Alan\" and \"Peter\" is also counted.\nFor example, if we created a variable const firstName = \"Ada\", we could find out how long the string Ada is by using the firstName.length property.\n--instructions--\nUse the .length property to set lastNameLength to the number of characters in lastName.\n--hints--\nYou should not change the variable declarations in the // Setup section.\njs\nassert(\n__helpers.removeJSComments(code).match(/let lastNameLength = 0;/) &&\n__helpers.removeJSComments(code).match(/const lastName = \"Lovelace\";/)\n);\nlastNameLength should be equal to eight.\njs\nassert(typeof lastNameLength !== 'undefined' && lastNameLength === 8);\nYou should be getting the length of lastName by using .length like this: lastName.length.\njs\nassert(__helpers.removeJSComments(code).match(/=\\s*lastName\\.length/g) && !__helpers.removeJSComments(code).match(/lastName\\s*=\\s*8/));\n--seed--\n--seed-contents--\n```js\n// Setup\nlet lastNameLength = 0;\nconst lastName = \"Lovelace\";\n// Only change code below this line\nlastNameLength = lastName;\n```\n--solutions--\njs\nlet lastNameLength = 0;\nconst lastName = \"Lovelace\";\nlastNameLength = lastName.length;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1632,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\find-the-length-of-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "61a15e6eb0340a32ed468d1ad5c561b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\escaping-literal-quotes-in-strings.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b5\ntitle: Escaping Literal Quotes in Strings\nchallengeType: 1\nforumTopicId: 17568\ndashedName: escaping-literal-quotes-in-strings\n--description--\nWhen you are defining a string you must start and end with a single or double quote. What happens when you need a literal quote: \" or ' inside of your string?\nIn JavaScript, you can escape a quote from considering it as an end of string quote by placing a backslash (\\) in front of the quote.\njs\nconst sampleStr = \"Alan said, \\\"Peter is learning JavaScript\\\".\";\nThis signals to JavaScript that the following quote is not the end of the string, but should instead appear inside the string. So if you were to print this to the console, you would get:\njs\nAlan said, \"Peter is learning JavaScript\".\n--instructions--\nUse backslashes to assign a string to the myStr variable so that if you were to print it to the console, you would see:\njs\nI am a \"double quoted\" string inside \"double quotes\".\n--hints--\nYou should use two double quotes (\") and four escaped double quotes (\\\").\njs\nassert(__helpers.removeJSComments(code).match(/\\\\\"/g).length === 4 && __helpers.removeJSComments(code).match(/[^\\\\]\"/g).length === 2);\nVariable myStr should contain the string: I am a \"double quoted\" string inside \"double quotes\".\njs\nassert(/I am a \"double quoted\" string inside \"double quotes(\\.\"|\"\\.)$/.test(myStr));\n--seed--\n--after-user-code--\njs\n(function(){\nif(typeof myStr === 'string') {\nconsole.log(\"myStr = \\\"\" + myStr + \"\\\"\");\n} else {\nconsole.log(\"myStr is undefined\");\n}\n})();\n--seed-contents--\njs\nconst myStr = \"\"; // Change this line\n--solutions--\njs\nconst myStr = \"I am a \\\"double quoted\\\" string inside \\\"double quotes\\\".\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\escaping-literal-quotes-in-strings.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f1bcdede67f0eb2eccb68ab8c8eccc7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\finding-a-remainder-in-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244ae\ntitle: Finding a Remainder in JavaScript\nchallengeType: 1\nforumTopicId: 18184\ndashedName: finding-a-remainder-in-javascript\n--description--\nThe remainder operator % gives the remainder of the division of two numbers.\nExample\n5 % 2 = 1\n5 / 2 = 2 remainder 1\n2 * 2 = 4\n5 - 4 = 1\nUsage\nIn mathematics, a number can be checked to be even or odd by checking the remainder of the division of the number by 2. Even numbers have a remainder of 0, while odd numbers a remainder of 1.\n17 % 2 = 1\n48 % 2 = 0\nNote: The remainder operator is sometimes incorrectly referred to as the modulus operator. It is very similar to modulus, but does not work properly with negative numbers.\n--instructions--\nSet remainder equal to the remainder of 11 divided by 3 using the remainder (%) operator.\n--hints--\nThe variable remainder should be initialized\njs\nassert(/(const|let|var)\\s+?remainder/.test(__helpers.removeJSComments(code)));\nThe value of remainder should be 2\njs\nassert(remainder === 2);\nYou should use the % operator\njs\nassert(/\\s+?remainder\\s*?=\\s*?.*%.*;?/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function (y) {\nreturn 'remainder = ' + y;\n})(remainder);\n--seed-contents--\njs\nconst remainder = 0;\n--solutions--\njs\nconst remainder = 11 % 3;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\finding-a-remainder-in-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca745442973886428a17ce1a127fd3b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-fractions-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb9bdef\ntitle: Generate Random Fractions with JavaScript\nchallengeType: 1\nforumTopicId: 18185\ndashedName: generate-random-fractions-with-javascript\n--description--\nRandom numbers are useful for creating random behavior.\nJavaScript has a Math.random() function that generates a random decimal number between 0 (inclusive) and 1 (exclusive). Thus Math.random() can return a 0 but never return a 1.\nNote: Like Storing Values with the Assignment Operator, all function calls will be resolved before the return executes, so we can return the value of the Math.random() function.\n--instructions--\nChange randomFraction to return a random number instead of returning 0.\n--hints--\nrandomFraction should return a random number.\njs\nassert(typeof randomFraction() === 'number');\nThe number returned by randomFraction should be a decimal.\njs\nassert((randomFraction() + '').match(/\\./g));\nYou should be using Math.random to generate the random decimal number.\njs\nassert(__helpers.removeJSComments(code).match(/Math\\.random/g).length >= 0);\n--seed--\n--after-user-code--\njs\n(function(){return randomFraction();})();\n--seed-contents--\n```js\nfunction randomFraction() {\n// Only change code below this line\nreturn 0;\n// Only change code above this line\n}\n```\n--solutions--\njs\nfunction randomFraction() {\nreturn Math.random();\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1628,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-fractions-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "da95161f7b91c1f023470c4ad87e9d6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\global-scope-and-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244be\ntitle: Global Scope and Functions\nchallengeType: 1\nforumTopicId: 18193\ndashedName: global-scope-and-functions\n--description--\nIn JavaScript, scope refers to the visibility of variables. Variables which are defined outside of a function block have Global scope. This means, they can be seen everywhere in your JavaScript code.\nVariables which are declared without the let or const keywords are automatically created in the global scope. This can create unintended consequences elsewhere in your code or when running a function again. You should always declare your variables with let or const.\n--instructions--\nUsing let or const, declare a global variable named myGlobal outside of any function. Initialize it with a value of 10.\nInside function fun1, assign 5 to oopsGlobal without using the var, let or const keywords.\n--before-each--\njs\nvar oopsGlobal;\n--hints--\nmyGlobal should be defined\njs\nassert(typeof myGlobal != 'undefined');\nmyGlobal should have a value of 10\njs\nassert(myGlobal === 10);\nmyGlobal should be declared using the let or const keywords\njs\nassert(/(let|const)\\s+myGlobal/.test(__helpers.removeJSComments(code)));\noopsGlobal should be a global variable and have a value of 5\njs\nfun1();\nassert(typeof oopsGlobal != 'undefined');\n--seed--\n--seed-contents--\n```js\n// Declare the myGlobal variable below this line\nfunction fun1() {\n// Assign 5 to oopsGlobal here\n}\n// Only change code above this line\nfunction fun2() {\nlet output = \"\";\nif (typeof myGlobal != \"undefined\") {\noutput += \"myGlobal: \" + myGlobal;\n}\nif (typeof oopsGlobal != \"undefined\") {\noutput += \" oopsGlobal: \" + oopsGlobal;\n}\nconsole.log(output);\n}\n```\n--solutions--\n```js\nconst myGlobal = 10;\nfunction fun1() {\noopsGlobal = 5;\n}\nfunction fun2() {\nlet output = \"\";\nif(typeof myGlobal != \"undefined\") {\noutput += \"myGlobal: \" + myGlobal;\n}\nif(typeof oopsGlobal != \"undefined\") {\noutput += \" oopsGlobal: \" + oopsGlobal;\n}\nconsole.log(output);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\global-scope-and-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "54f0e585b9feeed2e6954e14397349b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\global-vs.-local-scope-in-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c0\ntitle: Global vs. Local Scope in Functions\nchallengeType: 1\nforumTopicId: 18194\ndashedName: global-vs--local-scope-in-functions\n--description--\nIt is possible to have both local and global variables with the same name. When you do this, the local variable takes precedence over the global variable.\nIn this example:\n```js\nconst someVar = \"Hat\";\nfunction myFun() {\nconst someVar = \"Head\";\nreturn someVar;\n}\n```\nThe function myFun will return the string Head because the local version of the variable is present.\n--instructions--\nAdd a local variable to myOutfit function to override the value of outerWear with the string sweater.\n--hints--\nYou should not change the value of the global outerWear.\njs\nassert(outerWear === 'T-Shirt');\nmyOutfit should return the string sweater.\njs\nassert(myOutfit() === 'sweater');\nYou should not change the return statement.\njs\nassert(/return outerWear/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\n// Setup\nconst outerWear = \"T-Shirt\";\nfunction myOutfit() {\n// Only change code below this line\n// Only change code above this line\nreturn outerWear;\n}\nmyOutfit();\n```\n--solutions--\njs\nconst outerWear = \"T-Shirt\";\nfunction myOutfit() {\nconst outerWear = \"sweater\";\nreturn outerWear;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\global-vs.-local-scope-in-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1520547795cd99397d768a1bc23eb1ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-within-a-range.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c12feddfaeb2bdef\ntitle: Generate Random Whole Numbers within a Range\nchallengeType: 1\nforumTopicId: 18187\ndashedName: generate-random-whole-numbers-within-a-range\n--description--\nYou can generate a random whole number in the range from zero to a given number You can also pick a different lower number for this range You'll call your minimum number min and your maximum number max This formula gives a random whole number in the range from min to max Take a moment to read it and try to understand what this code is doing:\njs\nMath floor(Math random() * (max - min + 1)) + min\n--instructions--\nCreate a function called randomRange that takes a range myMin and myMax and returns a random whole number that's greater than or equal to myMin and less than or equal to myMax --hints--\nThe lowest random number that can be generated by randomRange should be equal to your minimum number, myMin js\nassert(calcMin === 5);\nThe highest random number that can be generated by randomRange should be equal to your maximum number, myMax js\nassert(calcMax === 15);\nThe random number generated by randomRange should be an integer, not a decimal js\nassert(randomRange(0, 1) % 1 === 0);\nrandomRange should use both myMax and myMin, and return a random number in your range js\nassert(\n(function () {\nif (\n__helpers removeJSComments(code) match(/myMax/g) length > 1 &&\n__helpers removeJSComments(code) match(/myMin/g) length > 2 &&\n__helpers removeJSComments(code) match(/Math floor/g) &&\n__helpers removeJSComments(code) match(/Math random/g)\n) {\nreturn true;\n} else {\nreturn false;\n}\n})()\n);\n--seed--\n--after-user-code--\njs\nvar calcMin = 100;\nvar calcMax = -100;\nfor(var i = 0; i < 100; i++) {\nvar result = randomRange(5,15);\ncalcMin = Math min(calcMin, result);\ncalcMax = Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2337,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-within-a-range.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6a6aeca0579d7609c73b5f8713ee3f06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-within-a-range.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "your range js assert( (function () { if ( __helpers removeJSComments(code) match(/myMax/g) length > 1 && __helpers removeJSComments(code) match(/myMin/g) length > 2 && __helpers removeJSComments(code) match(/Math floor/g) && __helpers removeJSComments(code) match(/Math random/g) ) { return true; } else { return false; } })() ); --seed-- --after-user-code-- js var calcMin = 100; var calcMax = -100; for(var i = 0; i < 100; i++) { var result = randomRange(5,15); calcMin = Math min(calcMin, result); calcMax = Mathmax(calcMax, result);\n}\n(function(){\nif(typeof myRandom === 'number') {\nreturn \"myRandom = \" + myRandom;\n} else {\nreturn \"myRandom undefined\";\n}\n})()\n--seed-contents--\njs\nfunction randomRange(myMin, myMax) {\nreturn 0;\n}\n--solutions--\njs\nfunction randomRange(myMin, myMax) {\nreturn Math floor(Math random() * (myMax - myMin + 1)) + myMin;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2337,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-within-a-range.md",
      "source_type": "git_repo"
    },
    "token_count": 251,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "68718fe62f533af37dbc203c2c43c643",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\increment-a-number-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244ac\ntitle: Increment a Number with JavaScript\nchallengeType: 1\nforumTopicId: 18201\ndashedName: increment-a-number-with-javascript\n--description--\nYou can easily increment or add one to a variable with the ++ operator.\njs\ni++;\nis the equivalent of\njs\ni = i + 1;\nNote: The entire line becomes i++;, eliminating the need for the equal sign.\n--instructions--\nChange the code to use the ++ operator on myVar.\n--hints--\nmyVar should equal 88.\njs\nassert(myVar === 88);\nYou should not use the assignment operator.\njs\nassert(\n/let\\s+myVar\\s*=\\s*87;\\s*\\/*.*\\s*([+]{2}\\s*myVar|myVar\\s*[+]{2})/.test(__helpers.removeJSComments(code))\n);\nYou should use the ++ operator.\njs\nassert(/[+]{2}\\s*myVar|myVar\\s*[+]{2}/.test(__helpers.removeJSComments(code)));\nYou should not change code above the specified comment.\njs\nassert(/let myVar = 87;/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(z){return 'myVar = ' + z;})(myVar);\n--seed-contents--\n```js\nlet myVar = 87;\n// Only change code below this line\nmyVar = myVar + 1;\n```\n--solutions--\njs\nlet myVar = 87;\nmyVar++;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1245,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\increment-a-number-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5dcd8b2270d0bbe743a736a41ccb52a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c12feddfaeb1bdef\ntitle: Generate Random Whole Numbers with JavaScript\nchallengeType: 1\nforumTopicId: 18186\ndashedName: generate-random-whole-numbers-with-javascript\n--description--\nYou can generate random decimal numbers with Math random(), but sometimes you need to generate random whole numbers The following process will give you a random whole number less than 20:\nUse Math random() to generate a random decimal number Multiply that random decimal number by 20 Use Math floor() to round this number down to its nearest whole number Remember that Math random() can never quite return a 1, so it's impossible to actually get 20 since you are rounding down with Math floor() This process will give you a random whole number in the range from 0 to 19 Putting everything together, this is what your code looks like:\njs\nMath floor(Math random() * 20);\nYou are calling Math random(), multiplying the result by 20, then passing the value to Math floor() to round the value down to the nearest whole number --instructions--\nUse this technique to generate and return a random whole number in the range from 0 to 9 --hints--\nThe result of randomWholeNum should be a whole number js\nassert(\ntypeof randomWholeNum() === 'number' &&\n(function () {\nvar r = randomWholeNum();\nreturn Math floor(r) === r;\n})()\n);\nYou should use Math random to generate a random number js\nassert(__helpers removeJSComments(code) match(/Math random/g) length >= 1);\nYou should have multiplied the result of Math random by 10 to make it a number in the range from zero to nine js\nassert(\n__helpers removeJSComments(code) match(/\\s* Math random\\s* \\(\\s* \\)\\s* \\*\\s* 10[\\D]\\s* /g) ||\n__helpers removeJSComments(code) match(/\\s* 10\\s* \\*\\s* Math random\\s* \\(\\s* \\)\\s* /g)\n);\nYou should use Math floor to remove the decimal part of the number js\nassert(__helpers removeJSComments(code) match(/Math floor/g) length >= 1);\n--seed--\n--after-user-code--\njs\n(function(){return randomWholeNum();})();\n--seed-contents--\njs\nfunction randomWholeNum() {\nreturn Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2325,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c8720a6c864cb201d551f317899ce366",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the result of Math random by 10 to make it a number in the range from zero to nine js assert( __helpers removeJSComments(code) match(/\\s* Math random\\s* \\(\\s* \\)\\s* \\*\\s* 10[\\D]\\s* /g) || __helpers removeJSComments(code) match(/\\s* 10\\s* \\*\\s* Math random\\s* \\(\\s* \\)\\s* /g) ); You should use Math floor to remove the decimal part of the number js assert(__helpers removeJSComments(code) match(/Math floor/g) length >= 1); --seed-- --after-user-code-- js (function(){return randomWholeNum();})(); --seed-contents-- js function randomWholeNum() { return Mathrandom();\n}\n--solutions--\njs\nfunction randomWholeNum() {\nreturn Math floor(Math random() * 10);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2325,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\generate-random-whole-numbers-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1d28fd1746b98b379b61579ee1ea5465",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\initializing-variables-with-the-assignment-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244a9\ntitle: Initializing Variables with the Assignment Operator\nchallengeType: 1\nforumTopicId: 301171\ndashedName: initializing-variables-with-the-assignment-operator\n--description--\nIt is common to initialize a variable to an initial value in the same line as it is declared.\njs\nvar myVar = 0;\nCreates a new variable called myVar and assigns it an initial value of 0.\n--instructions--\nDefine a variable a with var and initialize it to a value of 9.\n--hints--\nYou should initialize a to a value of 9.\njs\nassert(/var\\s+a\\s*=\\s*9(\\s*;?\\s*)$/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\njs\nvar a = 9;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 751,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\initializing-variables-with-the-assignment-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b71fac435468684921730488a228e887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\golf-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5664820f61c48e80c9fa476c\ntitle: Golf Code\nchallengeType: 1\nforumTopicId: 18195\ndashedName: golf-code\n--description--\nIn the game of Golf, each hole has a par, meaning, the average number of strokes a golfer is expected to make in order to sink the ball in the hole to complete the play Depending on how far above or below par your strokes are, there is a different nickname Your function will be passed par and strokes arguments Return the correct string according to this table which lists the strokes in order of priority; top (highest) to bottom (lowest):\nStrokesReturn1\"Hole-in-one \"<= par - 2\"Eagle\"par - 1\"Birdie\"par\"Par\"par + 1\"Bogey\"par + 2\"Double Bogey\">= par + 3\"Go Home \"\npar and strokes will always be numeric and positive We have added an array of all the names for your convenience --hints--\ngolfScore(4, 1) should return the string Hole-in-one js\nassert(golfScore(4, 1) === 'Hole-in-one ');\ngolfScore(4, 2) should return the string Eagle\njs\nassert(golfScore(4, 2) === 'Eagle');\ngolfScore(5, 2) should return the string Eagle\njs\nassert(golfScore(5, 2) === 'Eagle');\ngolfScore(4, 3) should return the string Birdie\njs\nassert(golfScore(4, 3) === 'Birdie');\ngolfScore(4, 4) should return the string Par\njs\nassert(golfScore(4, 4) === 'Par');\ngolfScore(1, 1) should return the string Hole-in-one js\nassert(golfScore(1, 1) === 'Hole-in-one",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\golf-code.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2d6498ff2f64c18327a8462ec0000129",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\golf-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "your convenience --hints-- golfScore(4, 1) should return the string Hole-in-one js assert(golfScore(4, 1) === 'Hole-in-one '); golfScore(4, 2) should return the string Eagle js assert(golfScore(4, 2) === 'Eagle'); golfScore(5, 2) should return the string Eagle js assert(golfScore(5, 2) === 'Eagle'); golfScore(4, 3) should return the string Birdie js assert(golfScore(4, 3) === 'Birdie'); golfScore(4, 4) should return the string Par js assert(golfScore(4, 4) === 'Par'); golfScore(1, 1) should return the string Hole-in-one js assert(golfScore(1, 1) === 'Hole-in-one');\ngolfScore(5, 5) should return the string Par\njs\nassert(golfScore(5, 5) === 'Par');\ngolfScore(4, 5) should return the string Bogey\njs\nassert(golfScore(4, 5) === 'Bogey');\ngolfScore(4, 6) should return the string Double Bogey\njs\nassert(golfScore(4, 6) === 'Double Bogey');\ngolfScore(4, 7) should return the string Go Home js\nassert(golfScore(4, 7) === 'Go Home ');\ngolfScore(5, 9) should return the string Go Home js\nassert(golfScore(5, 9) === 'Go Home ');\n--seed--\n--seed-contents--\n```js\nconst names = [\"Hole-in-one \", \"Eagle\", \"Birdie\", \"Par\", \"Bogey\", \"Double Bogey\", \"Go Home \"];\nfunction golfScore(par, strokes) {\n// Only change code below this line\nreturn \"Change Me\";\n// Only change code above this line\n}\ngolfScore(5, 4);\n```\n--solutions--\n```js\nfunction golfScore(par, strokes) {\nif (strokes === 1) {\nreturn \"Hole-in-one",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\golf-code.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2add8579b2bf49182ab353c9fc358ba4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\golf-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert(golfScore(4, 7) === 'Go Home '); golfScore(5, 9) should return the string Go Home js assert(golfScore(5, 9) === 'Go Home '); --seed-- --seed-contents-- ```js const names = [\"Hole-in-one \", \"Eagle\", \"Birdie\", \"Par\", \"Bogey\", \"Double Bogey\", \"Go Home \"]; function golfScore(par, strokes) { // Only change code below this line return \"Change Me\"; // Only change code above this line } golfScore(5, 4); ``` --solutions-- ```js function golfScore(par, strokes) { if (strokes === 1) { return \"Hole-in-one\";\n}\nif (strokes <= par - 2) {\nreturn \"Eagle\";\n}\nif (strokes === par - 1) {\nreturn \"Birdie\";\n}\nif (strokes === par) {\nreturn \"Par\";\n}\nif (strokes === par + 1) {\nreturn \"Bogey\";\n}\nif(strokes === par + 2) {\nreturn \"Double Bogey\";\n}\nreturn \"Go Home \";\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\golf-code.md",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f5cf2dbf4aafddd44c189f27299ec0ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\introducing-else-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244da\ntitle: Introducing Else Statements\nchallengeType: 1\nforumTopicId: 18207\ndashedName: introducing-else-statements\n--description--\nWhen a condition for an if statement is true, the block of code following it is executed. What about when that condition is false? Normally nothing would happen. With an else statement, an alternate block of code can be executed.\njs\nif (num > 10) {\nreturn \"Bigger than 10\";\n} else {\nreturn \"10 or Less\";\n}\n--instructions--\nCombine the if statements into a single if/else statement.\n--hints--\nYou should only have one if statement in the editor\njs\nassert(__helpers.removeJSComments(code).match(/if/g).length === 1);\nYou should use an else statement\njs\nassert(/else/g.test(__helpers.removeJSComments(code)));\ntestElse(4) should return the string 5 or Smaller\njs\nassert(testElse(4) === '5 or Smaller');\ntestElse(5) should return the string 5 or Smaller\njs\nassert(testElse(5) === '5 or Smaller');\ntestElse(6) should return the string Bigger than 5\njs\nassert(testElse(6) === 'Bigger than 5');\ntestElse(10) should return the string Bigger than 5\njs\nassert(testElse(10) === 'Bigger than 5');\nYou should not change the code above or below the specified comments.\njs\nassert(/let result = \"\";/.test(__helpers.removeJSComments(code)) && /return result;/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction testElse(val) {\nlet result = \"\";\n// Only change code below this line\nif (val > 5) {\nresult = \"Bigger than 5\";\n}\nif (val <= 5) {\nresult = \"5 or Smaller\";\n}\n// Only change code above this line\nreturn result;\n}\ntestElse(4);\n```\n--solutions--\njs\nfunction testElse(val) {\nlet result = \"\";\nif(val > 5) {\nresult = \"Bigger than 5\";\n} else {\nresult = \"5 or Smaller\";\n}\nreturn result;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\introducing-else-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "731769e721f02f24772b47ab2594b2d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-odd-numbers-with-a-for-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56104e9e514f539506016a5c\ntitle: Iterate Odd Numbers With a For Loop\nchallengeType: 1\nforumTopicId: 18212\ndashedName: iterate-odd-numbers-with-a-for-loop\n--description--\nFor loops don't have to iterate one at a time. By changing our final-expression, we can count by even numbers.\nWe'll start at i = 0 and loop while i < 10. We'll increment i by 2 each loop with i += 2.\n```js\nconst ourArray = [];\nfor (let i = 0; i < 10; i += 2) {\nourArray.push(i);\n}\n```\nourArray will now contain [0, 2, 4, 6, 8]. Let's change our initialization so we can count by odd numbers.\n--instructions--\nPush the odd numbers from 1 through 9 to myArray using a for loop.\n--hints--\nYou should be using a for loop for this.\njs\nassert(/for\\s*\\([^)]+?\\)/.test(__helpers.removeJSComments(code)));\nmyArray should equal [1, 3, 5, 7, 9].\njs\nassert.deepEqual(myArray, [1, 3, 5, 7, 9]);\n--seed--\n--after-user-code--\njs\nif(typeof myArray !== \"undefined\"){(function(){return myArray;})();}\n--seed-contents--\n```js\n// Setup\nconst myArray = [];\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [];\nfor (let i = 1; i < 10; i += 2) {\nmyArray.push(i);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1244,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-odd-numbers-with-a-for-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8fad16d728a710fea5e9b379505cfeb4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\introducing-else-if-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244db\ntitle: Introducing Else If Statements\nchallengeType: 1\nforumTopicId: 18206\ndashedName: introducing-else-if-statements\n--description--\nIf you have multiple conditions that need to be addressed, you can chain if statements together with else if statements js\nif (num > 15) {\nreturn \"Bigger than 15\";\n} else if (num < 5) {\nreturn \"Smaller than 5\";\n} else {\nreturn \"Between 5 and 15\";\n}\n--instructions--\nConvert the logic to use else if statements --hints--\nYou should have at least two else statements\njs\nassert(__helpers removeJSComments(code) match(/else/g) length > 1);\nYou should have at least two if statements\njs\nassert(__helpers removeJSComments(code) match(/if/g) length > 1);\nYou should have closing and opening curly braces for each if else code block js\nassert(\n__helpers removeJSComments(code) match(\n/if\\s*\\(( +)\\)\\s*\\{[\\s\\S]+\\}\\s*else\\s+if\\s*\\((",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2031,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\introducing-else-if-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "609e0ce253eac1f09f51e11e5b94493a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\introducing-else-if-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5) { return \"Smaller than 5\"; } else { return \"Between 5 and 15\"; } --instructions-- Convert the logic to use else if statements --hints-- You should have at least two else statements js assert(__helpers removeJSComments(code) match(/else/g) length > 1); You should have at least two if statements js assert(__helpers removeJSComments(code) match(/if/g) length > 1); You should have closing and opening curly braces for each if else code block js assert( __helpers removeJSComments(code) match( /if\\s*\\(( +)\\)\\s*\\{[\\s\\S]+\\}\\s*else\\s+if\\s*\\((+)\\)\\s*\\{[\\s\\S]+\\}\\s*else\\s*\\{[\\s\\S]+\\s*\\}/\n)\n);\ntestElseIf(0) should return the string Smaller than 5\njs\nassert(testElseIf(0) === 'Smaller than 5');\ntestElseIf(5) should return the string Between 5 and 10\njs\nassert(testElseIf(5) === 'Between 5 and 10');\ntestElseIf(7) should return the string Between 5 and 10\njs\nassert(testElseIf(7) === 'Between 5 and 10');\ntestElseIf(10) should return the string Between 5 and 10\njs\nassert(testElseIf(10) === 'Between 5 and 10');\ntestElseIf(12) should return the string Greater than 10\njs\nassert(testElseIf(12) === 'Greater than 10');\n--seed--\n--seed-contents--\n```js\nfunction testElseIf(val) {\nif (val > 10) {\nreturn \"Greater than 10\";\n}\nif (val < 5) {\nreturn \"Smaller than 5\";\n}\nreturn \"Between 5 and 10\";\n}\ntestElseIf(7);\n```\n--solutions--\njs\nfunction testElseIf(val) {\nif(val > 10) {\nreturn \"Greater than 10\";\n} else if(val < 5) {\nreturn \"Smaller than 5\";\n} else {\nreturn \"Between 5 and 10\";\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2031,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\introducing-else-if-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "869c80015490bce2e8ef0643c192f28f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-while-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb1bdef\ntitle: Iterate with JavaScript While Loops\nchallengeType: 1\nforumTopicId: 18220\ndashedName: iterate-with-javascript-while-loops\n--description--\nYou can run the same code multiple times by using a loop.\nThe first type of loop we will learn is called a while loop because it runs while a specified condition is true and stops once that condition is no longer true.\n```js\nconst ourArray = [];\nlet i = 0;\nwhile (i < 5) {\nourArray.push(i);\ni++;\n}\n```\nIn the code example above, the while loop will execute 5 times and append the numbers 0 through 4 to ourArray.\nLet's try getting a while loop to work by pushing values to an array.\n--instructions--\nAdd the numbers 5 through 0 (inclusive) in descending order to myArray using a while loop.\n--hints--\nYou should be using a while loop for this.\njs\nassert(__helpers.removeJSComments(code).match(/while/g));\nmyArray should equal [5, 4, 3, 2, 1, 0].\njs\nassert.deepEqual(myArray, [5, 4, 3, 2, 1, 0]);\n--seed--\n--after-user-code--\njs\nif(typeof myArray !== \"undefined\"){(function(){return myArray;})();}\n--seed-contents--\n```js\n// Setup\nconst myArray = [];\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [];\nlet i = 5;\nwhile (i >= 0) {\nmyArray.push(i);\ni--;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1351,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-while-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a99ed040aa766d3584786a4b27b0589f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-for-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb5bdef\ntitle: Iterate with JavaScript For Loops\nchallengeType: 1\nforumTopicId: 18219\ndashedName: iterate-with-javascript-for-loops\n--description--\nYou can run the same code multiple times by using a loop The most common type of JavaScript loop is called a for loop because it runs for a specific number of times For loops are declared with three optional expressions separated by semicolons:\nfor (a; b; c), where a is the initialization statement, b is the condition statement, and c is the final expression The initialization statement is executed one time only before the loop starts It is typically used to define and setup your loop variable The condition statement is evaluated at the beginning of every loop iteration and will continue as long as it evaluates to true When the condition is false at the start of the iteration, the loop will stop executing This means if the condition starts as false, your loop will never execute The final expression is executed at the end of each loop iteration, prior to the next condition check and is usually used to increment or decrement your loop counter In the following example we initialize with i = 0 and iterate while our condition i < 5 is true We'll increment i by 1 in each loop iteration with i++ as our final expression ```js\nconst ourArray = [];\nfor (let i = 0; i < 5; i++) {\nourArray push(i);\n}\n```\nourArray will now have the value [0, 1, 2, 3, 4] --instructions--\nUse a for loop to push the values 1 through 5 onto myArray --hints--\nYou should be using a for loop for this js\nassert(/for\\s*\\([^)]+ \\)/ test(__helpers removeJSComments(code)));\nmyArray should equal [1, 2, 3, 4, 5] js\nassert deepEqual(myArray, [1, 2, 3, 4, 5]);\n--seed--\n--after-user-code--\njs\nif (typeof myArray",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2127,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-for-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4e741ec9ae4a08131b35ce909e84fe3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-for-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for (let i = 0; i < 5; i++) { ourArray push(i); } ``` ourArray will now have the value [0, 1, 2, 3, 4] --instructions-- Use a for loop to push the values 1 through 5 onto myArray --hints-- You should be using a for loop for this js assert(/for\\s*\\([^)]+ \\)/ test(__helpers removeJSComments(code))); myArray should equal [1, 2, 3, 4, 5] js assert deepEqual(myArray, [1, 2, 3, 4, 5]); --seed-- --after-user-code-- js if (typeof myArray== \"undefined\"){(function(){return myArray;})();}\n--seed-contents--\n```js\n// Setup\nconst myArray = [];\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [];\nfor (let i = 1; i < 6; i++) {\nmyArray push(i);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2127,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-for-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c35391611e113b2cb49aaf89f0f12ca3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-through-an-array-with-a-for-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5675e877dbd60be8ad28edc6\ntitle: Iterate Through an Array with a For Loop\nchallengeType: 1\nforumTopicId: 18216\ndashedName: iterate-through-an-array-with-a-for-loop\n--description--\nA common task in JavaScript is to iterate through the contents of an array One way to do that is with a for loop This code will output each element of the array arr to the console:\n```js\nconst arr = [10, 9, 8, 7, 6];\nfor (let i = 0; i < arr length; i++) {\nconsole log(arr[i]);\n}\n```\nRemember that arrays have zero-based indexing, which means the last index of the array is length - 1 Our condition for this loop is i < arr length, which stops the loop when i is equal to length In this case the last iteration is i === 4 i e when i becomes equal to arr length - 1 and outputs 6 to the console Then i increases to 5, and the loop terminates because i < arr length is false --instructions--\nDeclare and initialize a variable total to 0 Use a for loop to add the value of each element of the myArr array to total --hints--\ntotal should be declared and initialized to 0 js\nassert(__helpers removeJSComments(code) match(/(var|let|const)\\s* total\\s*=\\s*0 * ; /));\ntotal should equal 20 js\nassert(total === 20);\nYou should use a for loop to iterate through myArr js\nassert(/for\\s*\\(/g test(__helpers removeJSComments(code)) && /myArr\\s*\\[/g test(__helpers removeJSComments(code)));\nYou should not attempt to directly assign the value 20 to total js\nassert( __helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/total[=+-]0*[1-9]+/gm));\n--seed--\n--after-user-code--\njs\n(function(){if(typeof total",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-through-an-array-with-a-for-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "42d78eb3d2708fdad0e52b22230e8d71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-through-an-array-with-a-for-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value of each element of the myArr array to total --hints-- total should be declared and initialized to 0 js assert(__helpers removeJSComments(code) match(/(var|let|const)\\s* total\\s*=\\s*0 * ; /)); total should equal 20 js assert(total === 20); You should use a for loop to iterate through myArr js assert(/for\\s*\\(/g test(__helpers removeJSComments(code)) && /myArr\\s*\\[/g test(__helpers removeJSComments(code))); You should not attempt to directly assign the value 20 to total js assert( __helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/total[=+-]0*[1-9]+/gm)); --seed-- --after-user-code-- js (function(){if(typeof total== 'undefined') { return \"total = \" + total; } else { return \"total is undefined\";}})()\n--seed-contents--\n```js\n// Setup\nconst myArr = [2, 3, 4, 5, 6];\n// Only change code below this line\n```\n--solutions--\n```js\nconst myArr = [2, 3, 4, 5, 6];\nlet total = 0;\nfor (let i = 0; i < myArr length; i++) {\ntotal += myArr[i];\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-through-an-array-with-a-for-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 289,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0b9ec81ecde2b0b05c182e9e41890150",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\local-scope-and-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244bf\ntitle: Local Scope and Functions\nchallengeType: 1\nforumTopicId: 18227\ndashedName: local-scope-and-functions\n--description--\nVariables which are declared within a function, as well as the function parameters, have local scope. That means they are only visible within that function.\nHere is a function myTest with a local variable called loc.\n```js\nfunction myTest() {\nconst loc = \"foo\";\nconsole.log(loc);\n}\nmyTest();\nconsole.log(loc);\n```\nThe myTest() function call will display the string foo in the console. The console.log(loc) line (outside of the myTest function) will throw an error, as loc is not defined outside of the function.\n--instructions--\nThe editor has two console.logs to help you see what is happening. Check the console as you code to see how it changes. Declare a local variable myVar inside myLocalScope and run the tests.\nNote: The console will still display ReferenceError: myVar is not defined, but this will not cause the tests to fail.\n--hints--\nThe code should not contain a global myVar variable.\n```js\nfunction declared() {\nmyVar;\n}\nassert.throws(declared, ReferenceError);\n```\nYou should add a local myVar variable.\njs\nassert(\n/functionmyLocalScope\\(\\)\\{.*(var|let|const)myVar[\\s\\S]*}/.test(\n__helpers.removeWhiteSpace(__helpers.removeJSComments(code))\n)\n);\n--seed--\n--seed-contents--\n```js\nfunction myLocalScope() {\n// Only change code below this line\nconsole.log('inside myLocalScope', myVar);\n}\nmyLocalScope();\n// Run and check the console\n// myVar is not defined outside of myLocalScope\nconsole.log('outside myLocalScope', myVar);\n```\n--solutions--\n```js\nfunction myLocalScope() {\n// Only change code below this line\nlet myVar;\nconsole.log('inside myLocalScope', myVar);\n}\nmyLocalScope();\n// Run and check the console\n// myVar is not defined outside of myLocalScope\nconsole.log('outside myLocalScope', myVar);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1992,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\local-scope-and-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "df4c1081142054ec1689e8cfb2681f39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-do...while-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a2efd662fb457916e1fe604\ntitle: Iterate with JavaScript Do While Loops\nchallengeType: 1\nforumTopicId: 301172\ndashedName: iterate-with-javascript-do---while-loops\n--description--\nThe next type of loop you will learn is called a do while loop It is called a do while loop because it will first do one pass of the code inside the loop no matter what, and then continue to run the loop while the specified condition evaluates to true ```js\nconst ourArray = [];\nlet i = 0;\ndo {\nourArray push(i);\ni++;\n} while (i < 5);\n```\nThe example above behaves similar to other types of loops, and the resulting array will look like [0, 1, 2, 3, 4] However, what makes the do while different from other loops is how it behaves when the condition fails on the first check Let's see this in action Here is a regular while loop that will run the code in the loop as long as i < 5:\n```js\nconst ourArray = [];\nlet i = 5;\nwhile (i < 5) {\nourArray push(i);\ni++;\n}\n```\nIn this example, we initialize the value of ourArray to an empty array and the value of i to 5 When we execute the while loop, the condition evaluates to false because i is not less than 5, so we do not execute the code inside the loop The result is that ourArray will end up with no values added to it, and it will still look like [] when all of the code in the example above has completed running Now, take a look at a do while loop:\n```js\nconst ourArray = [];\nlet i = 5;\ndo {\nourArray push(i);\ni++;\n} while (i < 5);\n```\nIn this case, we initialize the value of i to 5, just like we did with the while loop When we get to the next line, there is no condition to evaluate, so we go to the code inside the curly braces and execute it We will add a single element to the array and then increment i before we get to the condition check When we finally evaluate the condition i < 5 on the last line, we see that i is now 6, which fails the conditional check, so we exit the loop and are done",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-do...while-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "019c04d8ddeaf2e9fc1c42b0cdadfcbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-do...while-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to the next line, there is no condition to evaluate, so we go to the code inside the curly braces and execute it We will add a single element to the array and then increment i before we get to the condition check When we finally evaluate the condition i < 5 on the last line, we see that i is now 6, which fails the conditional check, so we exit the loop and are doneAt the end of the above example, the value of ourArray is [5] Essentially, a do while loop ensures that the code inside the loop will run at least once Let's try getting a do while loop to work by pushing values to an array --instructions--\nChange the while loop in the code to a do while loop so the loop will push only the number 10 to myArray, and i will be equal to 11 when your code has finished running --hints--\nYou should be using a do while loop for this exercise js\nassert(__helpers removeJSComments(code) match(/do/g));\nmyArray should equal [10] js\nassert deepEqual(myArray, [10]);\ni should equal 11\njs\nassert equal(i, 11);\n--seed--\n--after-user-code--\njs\nif(typeof myArray == \"undefined\"){(function(){return myArray;})();}\n--seed-contents--\n```js\n// Setup\nconst myArray = [];\nlet i = 10;\n// Only change code below this line\nwhile (i < 5) {\nmyArray push(i);\ni++;\n}\n```\n--solutions--\njs\nconst myArray = [];\nlet i = 10;\ndo {\nmyArray push(i);\ni++;\n} while (i < 5)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\iterate-with-javascript-do...while-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "827da47bfee22ce5a05672e39a732300",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-push.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392cb\ntitle: Manipulate Arrays With push Method\nchallengeType: 1\nforumTopicId: 18237\ndashedName: manipulate-arrays-with-push\n--description--\nAn easy way to append data to the end of an array is via the push() method.\nThe push() method takes one or more arguments and appends them to the end of the array, in the order in which they appear. It returns the new length of the array.\nExamples:\n```js\nconst arr1 = [1, 2, 3];\narr1.push(4, 5);\nconst arr2 = [\"Stimpson\", \"J\", \"cat\"];\narr2.push([\"happy\", \"joy\"]);\n```\narr1 now has the value [1, 2, 3, 4, 5] and arr2 has the value [\"Stimpson\", \"J\", \"cat\", [\"happy\", \"joy\"]].\n--instructions--\nPush [\"dog\", 3] onto the end of the myArray variable.\n--hints--\nmyArray should now equal [[\"John\", 23], [\"cat\", 2], [\"dog\", 3]].\njs\nassert(\n(function (d) {\nif (\nd[2] != undefined &&\nd[0][0] == 'John' &&\nd[0][1] === 23 &&\nd[2][0] == 'dog' &&\nd[2][1] === 3 &&\nd[2].length == 2\n) {\nreturn true;\n} else {\nreturn false;\n}\n})(myArray)\n);\n--seed--\n--after-user-code--\njs\n(function(z){return 'myArray = ' + JSON.stringify(z);})(myArray);\n--seed-contents--\n```js\n// Setup\nconst myArray = [[\"John\", 23], [\"cat\", 2]];\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [[\"John\", 23], [\"cat\", 2]];\nmyArray.push([\"dog\",3]);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-push.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5095a1be77d697db84f43eeae7d95e41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-shift.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392cd\ntitle: Manipulate Arrays With shift Method\nchallengeType: 1\nforumTopicId: 18238\ndashedName: manipulate-arrays-with-shift\n--description--\npop() always removes the last element of an array. What if you want to remove the first?\nThat's where .shift() comes in. It works just like .pop(), except it removes the first element instead of the last.\nExample:\njs\nconst ourArray = [\"Stimpson\", \"J\", [\"cat\"]];\nconst removedFromOurArray = ourArray.shift();\nremovedFromOurArray would have a value of the string Stimpson, and ourArray would have [\"J\", [\"cat\"]].\n--instructions--\nUse the .shift() function to remove the first item from myArray and assign the \"shifted off\" value to a new variable, removedFromMyArray.\n--hints--\nmyArray should now equal [[\"dog\", 3]].\njs\nassert(\n(function (d) {\nif (d[0][0] == 'dog' && d[0][1] === 3 && d[1] == undefined) {\nreturn true;\n} else {\nreturn false;\n}\n})(myArray)\n);\nremovedFromMyArray should contain [\"John\", 23].\njs\nassert(\n(function (d) {\nif (\nd[0] == 'John' &&\nd[1] === 23 &&\ntypeof removedFromMyArray === 'object'\n) {\nreturn true;\n} else {\nreturn false;\n}\n})(removedFromMyArray)\n);\n--seed--\n--after-user-code--\njs\nif (typeof removedFromMyArray !== 'undefined') (function(y, z){return 'myArray = ' + JSON.stringify(y) + ' & removedFromMyArray = ' + JSON.stringify(z);})(myArray, removedFromMyArray);\n--seed-contents--\n```js\n// Setup\nconst myArray = [[\"John\", 23], [\"dog\", 3]];\n// Only change code below this line\n```\n--solutions--\n```js\nconst myArray = [[\"John\", 23], [\"dog\", 3]];\n// Only change code below this line\nconst removedFromMyArray = myArray.shift();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1806,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-shift.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f5977ba5e79dd27c947e5dc65a343601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\logical-order-in-if-else-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5690307fddb111c6084545d7\ntitle: Logical Order in If Else Statements\nchallengeType: 1\nforumTopicId: 18228\ndashedName: logical-order-in-if-else-statements\n--description--\nOrder is important in if, else if statements The function is executed from top to bottom so you will want to be careful of what statement comes first Take these two functions as an example Here's the first:\njs\nfunction foo(x) {\nif (x < 1) {\nreturn \"Less than one\";\n} else if (x < 2) {\nreturn \"Less than two\";\n} else {\nreturn \"Greater than or equal to two\";\n}\n}\nAnd the second just switches the order of the statements:\njs\nfunction bar(x) {\nif (x < 2) {\nreturn \"Less than two\";\n} else if (x < 1) {\nreturn \"Less than one\";\n} else {\nreturn \"Greater than or equal to two\";\n}\n}\nWhile these two functions look nearly identical if we pass a number to both we get different outputs js\nfoo(0)\nbar(0)\nfoo(0) will return the string Less than one, and bar(0) will return the string Less than two --instructions--\nChange the order of logic in the function so that it will return the correct statements in all cases",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\logical-order-in-if-else-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7a8ca5143e897bda6ca3d7b03c893990",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\logical-order-in-if-else-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1) { return \"Less than one\"; } else { return \"Greater than or equal to two\"; } } While these two functions look nearly identical if we pass a number to both we get different outputs js foo(0) bar(0) foo(0) will return the string Less than one, and bar(0) will return the string Less than two --instructions-- Change the order of logic in the function so that it will return the correct statements in all cases--hints--\norderMyLogic(4) should return the string Less than 5\njs\nassert(orderMyLogic(4) === 'Less than 5');\norderMyLogic(6) should return the string Less than 10\njs\nassert(orderMyLogic(6) === 'Less than 10');\norderMyLogic(11) should return the string Greater than or equal to 10\njs\nassert(orderMyLogic(11) === 'Greater than or equal to 10');\n--seed--\n--seed-contents--\n```js\nfunction orderMyLogic(val) {\nif (val < 10) {\nreturn \"Less than 10\";\n} else if (val < 5) {\nreturn \"Less than 5\";\n} else {\nreturn \"Greater than or equal to 10\";\n}\n}\norderMyLogic(7);\n```\n--solutions--\njs\nfunction orderMyLogic(val) {\nif(val < 5) {\nreturn \"Less than 5\";\n} else if (val < 10) {\nreturn \"Less than 10\";\n} else {\nreturn \"Greater than or equal to 10\";\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\logical-order-in-if-else-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "06f6f029ab32c18b5404d7a68a347a2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-unshift.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392ce\ntitle: Manipulate Arrays With unshift Method\nchallengeType: 1\nforumTopicId: 18239\ndashedName: manipulate-arrays-with-unshift\n--description--\nNot only can you shift elements off of the beginning of an array, you can also unshift elements to the beginning of an array i.e. add elements in front of the array.\n.unshift() works exactly like .push(), but instead of adding the element at the end of the array, unshift() adds the element at the beginning of the array.\nExample:\njs\nconst ourArray = [\"Stimpson\", \"J\", \"cat\"];\nourArray.shift();\nourArray.unshift(\"Happy\");\nAfter the shift, ourArray would have the value [\"J\", \"cat\"]. After the unshift, ourArray would have the value [\"Happy\", \"J\", \"cat\"].\n--instructions--\nAdd [\"Paul\", 35] to the beginning of the myArray variable using unshift().\n--hints--\nmyArray should now have [[\"Paul\", 35], [\"dog\", 3]].\njs\nassert(\n(function (d) {\nif (\ntypeof d[0] === 'object' &&\nd[0][0] == 'Paul' &&\nd[0][1] === 35 &&\nd[1][0] != undefined &&\nd[1][0] == 'dog' &&\nd[1][1] != undefined &&\nd[1][1] == 3\n) {\nreturn true;\n} else {\nreturn false;\n}\n})(myArray)\n);\n--seed--\n--after-user-code--\njs\n(function(y, z){return 'myArray = ' + JSON.stringify(y);})(myArray);\n--seed-contents--\n```js\n// Setup\nconst myArray = [[\"John\", 23], [\"dog\", 3]];\nmyArray.shift();\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [[\"John\", 23], [\"dog\", 3]];\nmyArray.shift();\nmyArray.unshift([\"Paul\", 35]);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1638,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-unshift.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7970c1d456ee22bf1042dc88f4859339",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\modify-array-data-with-indexes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb8bdef\ntitle: Modify Array Data With Indexes\nchallengeType: 1\nforumTopicId: 18241\ndashedName: modify-array-data-with-indexes\n--description--\nUnlike strings, the entries of arrays are mutable and can be changed freely, even if the array was declared with const.\nExample\njs\nconst ourArray = [50, 40, 30];\nourArray[0] = 15;\nourArray now has the value [15, 40, 30].\nNote: There shouldn't be any spaces between the array name and the square brackets, like array [0]. Although JavaScript is able to process this correctly, this may confuse other programmers reading your code.\n--instructions--\nModify the data stored at index 0 of myArray to a value of 45.\n--hints--\nmyArray should now be [45, 64, 99].\njs\nassert(\n(function () {\nif (\ntypeof myArray != 'undefined' &&\nmyArray[0] == 45 &&\nmyArray[1] == 64 &&\nmyArray[2] == 99\n) {\nreturn true;\n} else {\nreturn false;\n}\n})()\n);\nYou should be using correct index to modify the value in myArray.\njs\nassert(\n(function () {\nif (__helpers.removeJSComments(code).match(/myArray\\[0\\]\\s*=\\s*/g)) {\nreturn true;\n} else {\nreturn false;\n}\n})()\n);\n--seed--\n--after-user-code--\njs\nif(typeof myArray !== \"undefined\"){(function(){return myArray;})();}\n--seed-contents--\n```js\n// Setup\nconst myArray = [18, 64, 99];\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [18, 64, 99];\nmyArray[0] = 45;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1570,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\modify-array-data-with-indexes.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e80dd19e3bf655a944dd054309156edb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-pop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392cc\ntitle: Manipulate Arrays With pop Method\nchallengeType: 1\nforumTopicId: 18236\ndashedName: manipulate-arrays-with-pop\n--description--\nAnother way to change the data in an array is with the pop() function pop() is used to pop a value off of the end of an array We can store this popped off value by assigning it to a variable In other words, pop() removes the last element from an array and returns that element Any type of entry can be popped off of an array - numbers, strings, even nested arrays js\nconst threeArr = [1, 4, 6];\nconst oneDown = threeArr pop();\nconsole log(oneDown);\nconsole log(threeArr);\nThe first console log will display the value 6, and the second will display the value [1, 4] --instructions--\nUse the pop() function to remove the last item from myArray and assign the popped off value to a new variable, removedFromMyArray --hints--\nmyArray should only contain [[\"John\", 23]] js\nassert(\n(function (d) {\nif (d[0][0] == 'John' && d[0][1] === 23 && d[1] == undefined) {\nreturn true;\n} else {\nreturn false;\n}\n})(myArray)\n);\nYou should use pop() on myArray js\nassert(/removedFromMyArray\\s*=\\s*myArray\\s* \\s*pop\\s*(\\s*)/ test(__helpers removeJSComments(code)));\nremovedFromMyArray should only contain [\"cat\", 2] js\nassert(\n(function (d) {\nif (d[0] == 'cat' && d[1] === 2 && d[2] == undefined) {\nreturn true;\n} else {\nreturn false;\n}\n})(removedFromMyArray)\n);\n--seed--\n--after-user-code--\njs\nif (typeof removedFromMyArray == 'undefined') (function(y, z){return 'myArray = ' + JSON stringify(y) + ' & removedFromMyArray = ' + JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2031,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-pop.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "473ff73c518015b0fe4638d6b3c852a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-pop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "else { return false; } })(myArray) ); You should use pop() on myArray js assert(/removedFromMyArray\\s*=\\s*myArray\\s* \\s*pop\\s*(\\s*)/ test(__helpers removeJSComments(code))); removedFromMyArray should only contain [\"cat\", 2] js assert( (function (d) { if (d[0] == 'cat' && d[1] === 2 && d[2] == undefined) { return true; } else { return false; } })(removedFromMyArray) ); --seed-- --after-user-code-- js if (typeof removedFromMyArray == 'undefined') (function(y, z){return 'myArray = ' + JSON stringify(y) + ' & removedFromMyArray = ' + JSONstringify(z);})(myArray, removedFromMyArray);\n--seed-contents--\n```js\n// Setup\nconst myArray = [[\"John\", 23], [\"cat\", 2]];\n// Only change code below this line\n```\n--solutions--\njs\nconst myArray = [[\"John\", 23], [\"cat\", 2]];\nconst removedFromMyArray = myArray pop();",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2031,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulate-arrays-with-pop.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8659c02191887fea6519f122bf6a53dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiply-two-numbers-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1231c1c11feddfaeb5bdef\ntitle: Multiply Two Numbers with JavaScript\nchallengeType: 1\nforumTopicId: 18243\ndashedName: multiply-two-numbers-with-javascript\n--description--\nWe can also multiply one number by another.\nJavaScript uses the * symbol for multiplication of two numbers.\nExample\njs\nconst myVar = 13 * 13;\nmyVar would have the value 169.\n--instructions--\nChange the 0 so that product will equal 80.\n--hints--\nThe variable product should be equal to 80.\njs\nassert(product === 80);\nYou should use the * operator.\njs\nassert(/\\*/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(z){return 'product = '+z;})(product);\n--seed-contents--\njs\nconst product = 8 * 0;\n--solutions--\njs\nconst product = 8 * 10;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 847,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiply-two-numbers-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 207,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "402243aac86b80cb6f0a5285399b44eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\nest-one-array-within-another-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb7bdef\ntitle: Nest one Array within Another Array\nchallengeType: 1\nforumTopicId: 18247\ndashedName: nest-one-array-within-another-array\n--description--\nYou can also nest arrays within other arrays, like below:\njs\nconst teams = [[\"Bulls\", 23], [\"White Sox\", 45]];\nThis is also called a multi-dimensional array.\n--instructions--\nCreate a nested array called myArray.\n--hints--\nmyArray should have at least one array nested within another array.\njs\nassert(Array.isArray(myArray) && myArray.some(Array.isArray));\n--seed--\n--after-user-code--\njs\nif(typeof myArray !== \"undefined\"){(function(){return myArray;})();}\n--seed-contents--\njs\n// Only change code below this line\nconst myArray = [];\n--solutions--\njs\nconst myArray = [[1, 2, 3]];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\nest-one-array-within-another-array.md",
      "source_type": "git_repo"
    },
    "token_count": 203,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cc5f5e543e6f92ad1cd068a6d4d467db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiply-two-decimals-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7993c9c69feddfaeb7bdef\ntitle: Multiply Two Decimals with JavaScript\nchallengeType: 1\nforumTopicId: 301173\ndashedName: multiply-two-decimals-with-javascript\n--description--\nIn JavaScript, you can also perform calculations with decimal numbers, just like whole numbers.\nLet's multiply two decimals together to get their product.\n--instructions--\nChange the 0.0 so that product will equal 5.0.\n--hints--\nThe variable product should equal 5.0.\njs\nassert(product === 5.0);\nYou should use the * operator\njs\nassert(/\\*/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(y){return 'product = '+y;})(product);\n--seed-contents--\njs\nconst product = 2.0 * 0.0;\n--solutions--\njs\nconst product = 2.0 * 2.5;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiply-two-decimals-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "542c71d462aa985837ab03b502b409d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiple-identical-options-in-switch-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244df\ntitle: Multiple Identical Options in Switch Statements\nchallengeType: 1\nforumTopicId: 18242\ndashedName: multiple-identical-options-in-switch-statements\n--description--\nIf the break statement is omitted from a switch statement's case, the following case statement(s) are executed until a break is encountered If you have multiple inputs with the same output, you can represent them in a switch statement like this:\njs\nlet result = \"\";\nswitch (val) {\ncase 1:\ncase 2:\ncase 3:\nresult = \"1, 2, or 3\";\nbreak;\ncase 4:\nresult = \"4 alone\";\n}\nCases for 1, 2, and 3 will all produce the same result --instructions--\nWrite a switch statement to set answer for the following ranges:\n1-3 - Low\n4-6 - Mid\n7-9 - High\nNote: You will need to have a case statement for each number in the range --hints--\nsequentialSizes(1) should return the string Low\njs\nassert(sequentialSizes(1) === 'Low');\nsequentialSizes(2) should return the string Low\njs\nassert(sequentialSizes(2) === 'Low');\nsequentialSizes(3) should return the string Low\njs\nassert(sequentialSizes(3) === 'Low');\nsequentialSizes(4) should return the string Mid\njs\nassert(sequentialSizes(4) === 'Mid');\nsequentialSizes(5) should return the string Mid\njs\nassert(sequentialSizes(5) === 'Mid');\nsequentialSizes(6) should return the string Mid\njs\nassert(sequentialSizes(6) === 'Mid');\nsequentialSizes(7) should return the string High\njs\nassert(sequentialSizes(7) === 'High');\nsequentialSizes(8) should return the string High\njs\nassert(sequentialSizes(8) === 'High');\nsequentialSizes(9) should return the string High\njs\nassert(sequentialSizes(9) === 'High');\nYou should not use any if or else statements\njs\nassert( /else/g test(__helpers removeJSComments(code)) || /if/g test(__helpers removeJSComments(code)));\nYou should have nine case statements\njs\nassert(__helpers removeJSComments(code) match(/case/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2653,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiple-identical-options-in-switch-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c5756f2500cb8a13f4a890ae828881f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiple-identical-options-in-switch-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return the string Mid js assert(sequentialSizes(5) === 'Mid'); sequentialSizes(6) should return the string Mid js assert(sequentialSizes(6) === 'Mid'); sequentialSizes(7) should return the string High js assert(sequentialSizes(7) === 'High'); sequentialSizes(8) should return the string High js assert(sequentialSizes(8) === 'High'); sequentialSizes(9) should return the string High js assert(sequentialSizes(9) === 'High'); You should not use any if or else statements js assert( /else/g test(__helpers removeJSComments(code)) || /if/g test(__helpers removeJSComments(code))); You should have nine case statements js assert(__helpers removeJSComments(code) match(/case/g)length === 9);\n--seed--\n--seed-contents--\n```js\nfunction sequentialSizes(val) {\nlet answer = \"\";\n// Only change code below this line\n// Only change code above this line\nreturn answer;\n}\nsequentialSizes(1);\n```\n--solutions--\n```js\nfunction sequentialSizes(val) {\nlet answer = \"\";\nswitch (val) {\ncase 1:\ncase 2:\ncase 3:\nanswer = \"Low\";\nbreak;\ncase 4:\ncase 5:\ncase 6:\nanswer = \"Mid\";\nbreak;\ncase 7:\ncase 8:\ncase 9:\nanswer = \"High\";\n}\nreturn answer;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2653,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\multiple-identical-options-in-switch-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0e79adcf3d4250da2b8237c8292ceed9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\practice-comparing-different-values.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 599a789b454f2bbd91a3ff4d\ntitle: Practice comparing different values\nchallengeType: 1\nforumTopicId: 301174\ndashedName: practice-comparing-different-values\n--description--\nIn the last two challenges, we learned about the equality operator (==) and the strict equality operator (===). Let's do a quick review and practice using these operators some more.\nIf the values being compared are not of the same type, the equality operator will perform a type conversion, and then evaluate the values. However, the strict equality operator will compare both the data type and value as-is, without converting one type to the other.\nExamples\n3 == '3' returns true because JavaScript performs type conversion from string to number. 3 === '3' returns false because the types are different and type conversion is not performed.\nNote: In JavaScript, you can determine the type of a variable or a value with the typeof operator, as follows:\njs\ntypeof 3\ntypeof '3'\ntypeof 3 returns the string number, and typeof '3' returns the string string.\n--instructions--\nThe compareEquality function in the editor compares two values using the equality operator. Modify the function so that it returns the string Equal only when the values are strictly equal.\n--hints--\ncompareEquality(10, \"10\") should return the string Not Equal\njs\nassert(compareEquality(10, '10') === 'Not Equal');\ncompareEquality(\"20\", 20) should return the string Not Equal\njs\nassert(compareEquality('20', 20) === 'Not Equal');\nYou should use the === operator\njs\nassert(__helpers.removeJSComments(code).match(/===/g));\n--seed--\n--seed-contents--\n```js\n// Setup\nfunction compareEquality(a, b) {\nif (a == b) { // Change this line\nreturn \"Equal\";\n}\nreturn \"Not Equal\";\n}\ncompareEquality(10, \"10\");\n```\n--solutions--\njs\nfunction compareEquality(a,b) {\nif (a === b) {\nreturn \"Equal\";\n}\nreturn \"Not Equal\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1992,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\practice-comparing-different-values.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7864f6d849b2122afef93eb4a190845c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\nesting-for-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244e1\ntitle: Nesting For Loops\nchallengeType: 1\nforumTopicId: 18248\ndashedName: nesting-for-loops\n--description--\nIf you have a multi-dimensional array, you can use the same logic as the prior waypoint to loop through both the array and any sub-arrays Here is an example:\n```js\nconst arr = [\n[1, 2], [3, 4], [5, 6]\n];\nfor (let i = 0; i < arr length; i++) {\nfor (let j = 0; j < arr[i] length; j++) {\nconsole log(arr[i][j]);\n}\n}\n```\nThis outputs each sub-element in arr one at a time Note that for the inner loop, we are checking the length of arr[i], since arr[i] is itself an array --instructions--\nModify function multiplyAll so that it returns the product of all the numbers in the sub-arrays of arr --hints--\nmultiplyAll([[1], [2], [3]]) should return 6\njs\nassert(multiplyAll([[1], [2], [3]]) === 6);\nmultiplyAll([[1, 2], [3, 4], [5, 6, 7]]) should return 5040\njs\nassert(\nmultiplyAll([\n[1, 2],\n[3, 4],\n[5, 6, 7]\n]) === 5040\n);\nmultiplyAll([[5, 1], [0 2, 4, 0 5], [3, 9]]) should return 54\njs\nassert(\nmultiplyAll([\n[5, 1],\n[0 2, 4, 0 5],\n[3, 9]\n]) === 54\n);\n--seed--\n--seed-contents--\n```js\nfunction multiplyAll(arr) {\nlet product = 1;\n// Only change code below this line\n// Only change code above this line\nreturn product;\n}\nmultiplyAll([[1, 2], [3, 4], [5, 6, 7]]);\n```\n--solutions--\njs\nfunction multiplyAll(arr) {\nlet product = 1;\nfor (let i = 0; i < arr length; i++) {\nfor (let j = 0; j < arr[i]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1655,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\nesting-for-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d60e5dbf3ae3065a1a3f9029f7a077c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\nesting-for-loops.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[5, 1], [0 2, 4, 0 5], [3, 9] ]) === 54 ); --seed-- --seed-contents-- ```js function multiplyAll(arr) { let product = 1; // Only change code below this line // Only change code above this line return product; } multiplyAll([[1, 2], [3, 4], [5, 6, 7]]); ``` --solutions-- js function multiplyAll(arr) { let product = 1; for (let i = 0; i < arr length; i++) { for (let j = 0; j < arr[i]length; j++) {\nproduct *= arr[i][j];\n}\n}\nreturn product;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1655,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\nesting-for-loops.md",
      "source_type": "git_repo"
    },
    "token_count": 159,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cd5c4184e5647ba7bdeed8c3c6947210",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulating-complex-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244cb\ntitle: Manipulating Complex Objects\nchallengeType: 1\nforumTopicId: 18208\ndashedName: manipulating-complex-objects\n--description--\nSometimes you may want to store data in a flexible Data Structure A JavaScript object is one way to handle flexible data They allow for arbitrary combinations of strings, numbers, booleans, arrays, functions, and objects Here's an example of a complex data structure:\njs\nconst ourMusic = [\n{\n\"artist\": \"Daft Punk\",\n\"title\": \"Homework\",\n\"release_year\": 1997,\n\"formats\": [\n\"CD\",\n\"Cassette\",\n\"LP\"\n],\n\"gold\": true\n}\n];\nThis is an array which contains one object inside The object has various pieces of metadata about an album It also has a nested formats array If you want to add more album records, you can do this by adding records to the top level array Objects hold data in a property, which has a key-value format In the example above, \"artist\": \"Daft Punk\" is a property that has a key of artist and a value of Daft Punk Note: You will need to place a comma after every object in the array, unless it is the last object in the array --instructions--\nAdd a new album to the myMusic array Add artist and title strings, release_year number, and a formats array of strings --hints--\nmyMusic should be an array\njs\nassert(Array isArray(myMusic));\nmyMusic should have at least two elements\njs\nassert(myMusic length > 1);\nThe elements in the myMusic array should be objects\njs\nmyMusic forEach(object => {assert typeOf(object, 'object')})\nYour object in myMusic should have at least 4 properties\njs\nmyMusic forEach(object => {assert(Object keys(object) length > 3); });\nYour object in myMusic should contain the property artist which is a string\njs\nmyMusic forEach(object => {\nassert containsAllKeys(object, ['artist']);\nassert typeOf(object artist, 'string')\n})\nYour object in myMusic should contain the property title which is a string\njs\nmyMusic forEach(object => {\nassert containsAllKeys(object, ['title']);\nassert typeOf(object title, 'string')\n})\nYour object in myMusic should contain the property release_year which is a number\njs\nmyMusic",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulating-complex-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "04d58010f1d240cece9b42482f812ae9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulating-complex-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "myMusic forEach(object => {assert(Object keys(object) length > 3); }); Your object in myMusic should contain the property artist which is a string js myMusic forEach(object => { assert containsAllKeys(object, ['artist']); assert typeOf(object artist, 'string') }) Your object in myMusic should contain the property title which is a string js myMusic forEach(object => { assert containsAllKeys(object, ['title']); assert typeOf(object title, 'string') }) Your object in myMusic should contain the property release_year which is a number js myMusicforEach(object => {\nassert containsAllKeys(object, ['release_year']);\nassert typeOf(object release_year, 'number')\n})\nYour object in myMusic should contain a formats property which is an array\njs\nmyMusic forEach(object => {\nassert containsAllKeys(object, ['formats']);\nassert typeOf(object formats, 'array')\n})\nformats should be an array of strings with at least two elements\njs\nmyMusic forEach(object => {\nobject formats forEach(format => {\nassert typeOf(format, 'string')\n});\nassert isAtLeast(object formats length, 2)\n})\n--seed--\n--after-user-code--\njs\n(function(x){ if (Array isArray(x)) { return JSON stringify(x); } return \"myMusic is not an array\"})(myMusic);\n--seed-contents--\njs\nconst myMusic = [\n{\n\"artist\": \"Billy Joel\",\n\"title\": \"Piano Man\",\n\"release_year\": 1973,\n\"formats\": [\n\"CD\",\n\"8T\",\n\"LP\"\n],\n\"gold\": true\n}\n];\n--solutions--\njs\nconst myMusic = [\n{\n\"artist\": \"Billy Joel\",\n\"title\": \"Piano Man\",\n\"release_year\": 1973,\n\"formats\": [\n\"CS\",\n\"8T\",\n\"LP\" ],\n\"gold\": true\n},\n{\n\"artist\": \"ABBA\",\n\"title\": \"Ring Ring\",\n\"release_year\": 1973,\n\"formats\": [\n\"CS\",\n\"8T\",\n\"LP\",\n\"CD\",\n]\n}\n];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\manipulating-complex-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d488c1b6f2c3c4215e056ced7c60e67e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\passing-values-to-functions-with-arguments.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244bd\ntitle: Passing Values to Functions with Arguments\nchallengeType: 1\nforumTopicId: 18254\ndashedName: passing-values-to-functions-with-arguments\n--description--\nParameters are variables that act as placeholders for the values that are to be input to a function when it is called When a function is defined, it is typically defined along with one or more parameters The actual values that are input (or \"passed\") into a function when it is called are known as arguments Here is a function with two parameters, param1 and param2:\njs\nfunction testFun(param1, param2) {\nconsole log(param1, param2);\n}\nThen we can call testFun like this: testFun(\"Hello\", \"World\"); We have passed two string arguments, Hello and World Inside the function, param1 will equal the string Hello and param2 will equal the string World Note that you could call testFun again with different arguments and the parameters would take on the value of the new arguments --instructions--\nCreate a function called functionWithArgs that accepts two arguments and outputs their sum to the dev console Call the function with two numbers as arguments --hints--\nfunctionWithArgs should be a function js\nassert(typeof functionWithArgs === 'function');\nfunctionWithArgs(1,2) should output 3 js\nif (typeof functionWithArgs === 'function') {\ncapture();\nfunctionWithArgs(1, 2);\nuncapture();\n}\nassert(logOutput == 3);\nfunctionWithArgs(7,9) should output 16 js\nif (typeof functionWithArgs === 'function') {\ncapture();\nfunctionWithArgs(7, 9);\nuncapture();\n}\nassert(logOutput == 16);\nYou should call functionWithArgs with two numbers after you define it js\nassert(\n/functionWithArgs\\([-+] \\d*\\ \\d*,[-+] \\d*\\ \\d*\\)/ test(\n__helpers removeJSComments(code) replace(/\\s/g, '')\n)\n);\n--seed--\n--before-user-code--\n```js\nvar logOutput = \"\";\nvar originalConsole = console\nfunction capture() {\nvar nativeLog = console log;\nconsole log = function (message) {\nif(message) logOutput = JSON stringify(message) trim();\nif(nativeLog apply) {\nnativeLog apply(originalConsole, arguments);\n} else {\nvar nativeMsg = Array prototype slice apply(arguments)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\passing-values-to-functions-with-arguments.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cd90a5558ac71943dfa44f04cef1341e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\passing-values-to-functions-with-arguments.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} assert(logOutput == 16); You should call functionWithArgs with two numbers after you define it js assert( /functionWithArgs\\([-+] \\d*\\ \\d*,[-+] \\d*\\ \\d*\\)/ test( __helpers removeJSComments(code) replace(/\\s/g, '') ) ); --seed-- --before-user-code-- ```js var logOutput = \"\"; var originalConsole = console function capture() { var nativeLog = console log; console log = function (message) { if(message) logOutput = JSON stringify(message) trim(); if(nativeLog apply) { nativeLog apply(originalConsole, arguments); } else { var nativeMsg = Array prototype slice apply(arguments)join(' ');\nnativeLog(nativeMsg);\n}\n};\n}\nfunction uncapture() {\nconsole log = originalConsole log;\n}\ncapture();\n```\n--after-user-code--\n```js\nuncapture();\nif (typeof functionWithArgs == \"function\") {\n(function() { return \"functionWithArgs is not defined\"; })();\n} else {\n(function() { return logOutput || \"console log never called\"; })();\n}\n```\n--seed-contents--\n```js\n```\n--solutions--\njs\nfunction functionWithArgs(a, b) {\nconsole log(a + b);\n}\nfunctionWithArgs(10, 5);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\passing-values-to-functions-with-arguments.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bbb6a3ecfe829fdd589aa4c83075b386",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\quoting-strings-with-single-quotes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b4\ntitle: Quoting Strings with Single Quotes\nchallengeType: 1\nforumTopicId: 18260\ndashedName: quoting-strings-with-single-quotes\n--description--\nString values in JavaScript may be written with single or double quotes, as long as you start and end with the same type of quote Unlike some other programming languages, single and double quotes work the same in JavaScript js\nconst doubleQuoteStr = \"This is a string\";\nconst singleQuoteStr = 'This is also a string';\nThe reason why you might want to use one type of quote over the other is if you want to use both in a string This might happen if you want to save a conversation in a string and have the conversation in quotes Another use for it would be saving an <a> tag with various attributes in quotes, all within a string js\nconst conversation = 'Finn exclaims to Jake, \"Algebraic \"';\nHowever, this becomes a problem if you need to use the outermost quotes within it Remember, a string has the same kind of quote at the beginning and end But if you have that same quote somewhere in the middle, the string will stop early and throw an error js\nconst goodStr = 'Jake asks Finn, \"Hey, let\\'s go on an adventure \"';\nconst badStr = 'Finn responds, \"Let's go \"';\nHere badStr will throw an error In the goodStr above, you can use both quotes safely by using the backslash \\ as an escape character Note: The backslash \\ should not be confused with the forward slash / They do not do the same thing --instructions--\nChange the provided string to a string with single quotes at the beginning and end and no escape characters Right now, the <a> tag in the string uses double quotes everywhere You will need to change the outer quotes to single quotes so you can remove the escape characters --hints--\nYou should remove all the backslashes (\\) js\nassert( /\\\\/g test(__helpers removeJSComments(code)) &&\nmyStr match(\n'\\\\s*<a href\\\\s*=\\\\s*\"http://www example com\"\\\\s*target\\\\s*=\\\\s*\"_blank\">\\\\s*Link\\\\s*</a>\\\\s*'\n)\n);\nYou should have two single quotes ' and four double quotes \" js\nassert(__helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\quoting-strings-with-single-quotes.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "53d3749d46e24f437b0b1b4a43950010",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\quoting-strings-with-single-quotes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "quotes at the beginning and end and no escape characters Right now, the <a> tag in the string uses double quotes everywhere You will need to change the outer quotes to single quotes so you can remove the escape characters --hints-- You should remove all the backslashes (\\) js assert( /\\\\/g test(__helpers removeJSComments(code)) && myStr match( '\\\\s*<a href\\\\s*=\\\\s*\"http://www example com\"\\\\s*target\\\\s*=\\\\s*\"_blank\">\\\\s*Link\\\\s*</a>\\\\s*' ) ); You should have two single quotes ' and four double quotes \" js assert(__helpersremoveJSComments(code) match(/\"/g) length === 4 && __helpers removeJSComments(code) match(/'/g) length === 2);\n--seed--\n--seed-contents--\njs\nconst myStr = \"<a href=\\\"http://www example com\\\" target=\\\"_blank\\\">Link</a>\";\n--solutions--\njs\nconst myStr = '<a href=\"http://www example com\" target=\"_blank\">Link</a>';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\quoting-strings-with-single-quotes.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6a7c3a953df943e4042134cc4c758253",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replace-loops-using-recursion.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cfa3679138e7d9595b9d9d4\ntitle: Replace Loops using Recursion\nchallengeType: 1\nvideoUrl: >-\nhttps://www freecodecamp org/news/how-recursion-works-explained-with-flowcharts-and-a-video-de61f40cb7f9/\nforumTopicId: 301175\ndashedName: replace-loops-using-recursion\n--description--\nRecursion is the concept that a function can be expressed in terms of itself To help understand this, start by thinking about the following task: multiply the first n elements of an array to create the product of those elements Using a for loop, you could do this:\njs\nfunction multiply(arr, n) {\nlet product = 1;\nfor (let i = 0; i < n; i++) {\nproduct *= arr[i];\n}\nreturn product;\n}\nHowever, notice that multiply(arr, n) == multiply(arr, n - 1) * arr[n - 1] That means you can rewrite multiply in terms of itself and never need to use a loop js\nfunction multiply(arr, n) {\nif (n <= 0) {\nreturn 1;\n} else {\nreturn multiply(arr, n - 1) * arr[n - 1];\n}\n}\nThe recursive version of multiply breaks down like this In the base case, where n <= 0, it returns 1 For larger values of n, it calls itself, but with n - 1 That function call is evaluated in the same way, calling multiply again until n <= 0 At this point, all the functions can return and the original multiply returns the answer Note: Recursive functions must have a base case when they return without calling the function again (in this example, when n <= 0), otherwise they can never finish executing --instructions--\nWrite a recursive function, sum(arr, n), that returns the sum of the first n elements of an array arr --hints--\nsum([1], 0) should equal 0 js\nassert equal(sum([1], 0), 0);\nsum([2, 3, 4], 1) should equal 2 js\nassert equal(sum([2, 3, 4], 1), 2);\nsum([2, 3, 4, 5], 3) should equal 9 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replace-loops-using-recursion.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "85d88a7c86d36ace546e082589ed668b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replace-loops-using-recursion.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "when they return without calling the function again (in this example, when n <= 0), otherwise they can never finish executing --instructions-- Write a recursive function, sum(arr, n), that returns the sum of the first n elements of an array arr --hints-- sum([1], 0) should equal 0 js assert equal(sum([1], 0), 0); sum([2, 3, 4], 1) should equal 2 js assert equal(sum([2, 3, 4], 1), 2); sum([2, 3, 4, 5], 3) should equal 9 js assertequal(sum([2, 3, 4, 5], 3), 9);\nYour code should not rely on any kind of loops (for or while or higher order functions such as forEach, map, filter, or reduce ) js\nassert( __helpers removeJSComments(code) match(/for|while|forEach|map|filter|reduce/g)\n);\nYou should use recursion to solve this problem js\nassert(\nsum toString() match(/sum\\( *\\)/g) length > 1\n);\n--seed--\n--seed-contents--\n```js\nfunction sum(arr, n) {\n// Only change code below this line\n// Only change code above this line\n}\n```\n--solutions--\njs\nfunction sum(arr, n) {\n// Only change code below this line\nif(n <= 0) {\nreturn 0;\n} else {\nreturn sum(arr, n - 1) + arr[n - 1];\n}\n// Only change code above this line\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replace-loops-using-recursion.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5e07310bff454d520e611255859f1a5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\profile-lookup.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5688e62ea601b2482ff8422b\ntitle: Profile Lookup\nchallengeType: 1\nforumTopicId: 18259\ndashedName: profile-lookup\n--description--\nWe have an array of objects representing different people in our contacts lists A lookUpProfile function that takes name and a property (prop) as arguments has been pre-written for you The function should check if name is an actual contact's firstName and the given property (prop) is a property of that contact If both are true, then return the \"value\" of that property If name does not correspond to any contacts then return the string No such contact If prop does not correspond to any valid properties of a contact found to match name then return the string No such property --hints--\nlookUpProfile(\"Kristian\", \"lastName\") should return the string Vos\njs\nassert(lookUpProfile('Kristian', 'lastName') === 'Vos');\nlookUpProfile(\"Sherlock\", \"likes\") should return [\"Intriguing Cases\", \"Violin\"]\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\profile-lookup.md",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "60ab73dcb6260b62d9edca0014d191e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\profile-lookup.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a property of that contact If both are true, then return the \"value\" of that property If name does not correspond to any contacts then return the string No such contact If prop does not correspond to any valid properties of a contact found to match name then return the string No such property --hints-- lookUpProfile(\"Kristian\", \"lastName\") should return the string Vos js assert(lookUpProfile('Kristian', 'lastName') === 'Vos'); lookUpProfile(\"Sherlock\", \"likes\") should return [\"Intriguing Cases\", \"Violin\"] js assertdeepEqual(lookUpProfile('Sherlock', 'likes'), [\n'Intriguing Cases',\n'Violin'\n]);\nlookUpProfile(\"Harry\", \"likes\") should return an array\njs\nassert(typeof lookUpProfile('Harry', 'likes') === 'object');\nlookUpProfile(\"Bob\", \"number\") should return the string No such contact\njs\nassert(lookUpProfile('Bob', 'number') === 'No such contact');\nlookUpProfile(\"Bob\", \"potato\") should return the string No such contact\njs\nassert(lookUpProfile('Bob', 'potato') === 'No such contact');\nlookUpProfile(\"Akira\", \"address\") should return the string No such property\njs\nassert(lookUpProfile('Akira', 'address') === 'No such property');\n--seed--\n--seed-contents--\n```js\n// Setup\nconst contacts = [\n{\nfirstName: \"Akira\",\nlastName: \"Laine\",\nnumber: \"0543236543\",\nlikes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n},\n{\nfirstName: \"Harry\",\nlastName: \"Potter\",\nnumber: \"0994372684\",\nlikes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n},\n{\nfirstName: \"Sherlock\",\nlastName: \"Holmes\",\nnumber: \"0487345643\",\nlikes: [\"Intriguing Cases\", \"Violin\"],\n},\n{\nfirstName: \"Kristian\",\nlastName: \"Vos\",\nnumber: \"unknown\",\nlikes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n},\n];\nfunction lookUpProfile(name, prop) {\n// Only change code below this line\n// Only change code above this line\n}\nlookUpProfile(\"Akira\", \"likes\");\n```\n--solutions--\njs\nconst contacts = [\n{\nfirstName: \"Akira\",\nlastName: \"Laine\",\nnumber: \"0543236543\",\nlikes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n},\n{\nfirstName: \"Harry\",\nlastName: \"Potter\",\nnumber: \"0994372684\",\nlikes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n},\n{\nfirstName: \"Sherlock\",\nlastName: \"Holmes\",\nnumber: \"0487345643\",\nlikes: [\"Intriguing Cases\", \"Violin\"],\n},\n{\nfirstName: \"Kristian\",\nlastName: \"Vos\",\nnumber: \"unknown\",\nlikes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n},\n];\nfunction lookUpProfile(name, prop) {\nfor (let i in contacts) {\nif (contacts[i]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\profile-lookup.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e477b609c858a98a7627930c7325fd16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\profile-lookup.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "code above this line } lookUpProfile(\"Akira\", \"likes\"); ``` --solutions-- js const contacts = [ { firstName: \"Akira\", lastName: \"Laine\", number: \"0543236543\", likes: [\"Pizza\", \"Coding\", \"Brownie Points\"], }, { firstName: \"Harry\", lastName: \"Potter\", number: \"0994372684\", likes: [\"Hogwarts\", \"Magic\", \"Hagrid\"], }, { firstName: \"Sherlock\", lastName: \"Holmes\", number: \"0487345643\", likes: [\"Intriguing Cases\", \"Violin\"], }, { firstName: \"Kristian\", lastName: \"Vos\", number: \"unknown\", likes: [\"JavaScript\", \"Gaming\", \"Foxes\"], }, ]; function lookUpProfile(name, prop) { for (let i in contacts) { if (contacts[i]firstName === name) {\nreturn contacts[i][prop] || \"No such property\";\n}\n}\nreturn \"No such contact\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\profile-lookup.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2efb17d8d6aa03213912b289600669c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244cf\ntitle: Record Collection\nchallengeType: 1\nforumTopicId: 18261\ndashedName: record-collection\n--description--\nYou are creating a function that aids in the maintenance of a musical album collection The collection is organized as an object that contains multiple albums which are also objects Each album is represented in the collection with a unique id as the property name Within each album object, there are various properties describing information about the album Not all albums have complete information The updateRecords function takes 4 arguments represented by the following function parameters:\nrecords - an object containing several individual albums\nid - a number representing a specific album in the records object\nprop - a string representing the name of the album’s property to update\nvalue - a string containing the information used to update the album’s property\nComplete the function using the rules below to modify the object passed to the function Your function must always return the entire records object If value is an empty string, delete the given prop property from the album If prop isn't tracks and value isn't an empty string, assign the value to that album's prop If prop is tracks and value isn't an empty string, but the album doesn't have a tracks property, create an empty array and add value to it If prop is tracks and value isn't an empty string, add value to the end of the album's existing tracks array Note: A copy of the recordCollection object is used for the tests You should not directly modify the recordCollection object --hints--\nAfter updateRecords(recordCollection, 5439, \"artist\", \"ABBA\"), artist should be the string ABBA\njs\nassert(\nupdateRecords(_recordCollection, 5439, 'artist', 'ABBA')[5439]['artist'] ===\n'ABBA'\n);\nAfter updateRecords(recordCollection, 5439, \"tracks\", \"Take a Chance on Me\"), tracks should have the string Take a Chance on Me as the last and only element js\nassert(\nupdateRecords(_recordCollection, 5439, 'tracks', 'Take a Chance on Me') &&\n_recordCollection[5439]['tracks'] length === 1 &&\n_recordCollection[5439]['tracks']",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "56f0830171c8cfa09c31da0f4d859c06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is used for the tests You should not directly modify the recordCollection object --hints-- After updateRecords(recordCollection, 5439, \"artist\", \"ABBA\"), artist should be the string ABBA js assert( updateRecords(_recordCollection, 5439, 'artist', 'ABBA')[5439]['artist'] === 'ABBA' ); After updateRecords(recordCollection, 5439, \"tracks\", \"Take a Chance on Me\"), tracks should have the string Take a Chance on Me as the last and only element js assert( updateRecords(_recordCollection, 5439, 'tracks', 'Take a Chance on Me') && _recordCollection[5439]['tracks'] length === 1 && _recordCollection[5439]['tracks']pop() === 'Take a Chance on Me'\n);\nAfter updateRecords(recordCollection, 2548, \"artist\", \"\"), artist should not be set\njs\nupdateRecords(_recordCollection, 2548, 'artist', '');\nassert( _recordCollection[2548] hasOwnProperty('artist'));\nAfter updateRecords(recordCollection, 1245, \"tracks\", \"Addicted to Love\"), tracks should have the string Addicted to Love as the last element js\nassert(\nupdateRecords(_recordCollection, 1245, 'tracks', 'Addicted to Love')[1245][\n'tracks'\n] pop() === 'Addicted to Love'\n);\nAfter updateRecords(recordCollection, 2468, \"tracks\", \"Free\"), tracks should have the string 1999 as the first element js\nassert(\nupdateRecords(_recordCollection, 2468, 'tracks', 'Free')[2468][\n'tracks'\n][0] === '1999'\n);\nAfter updateRecords(recordCollection, 2548, \"tracks\", \"\"), tracks should not be set\njs\nupdateRecords(_recordCollection, 2548, 'tracks', '');\nassert( _recordCollection[2548]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "188eaf607a5c90f0ba7fed24dba2146b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1245, \"tracks\", \"Addicted to Love\"), tracks should have the string Addicted to Love as the last element js assert( updateRecords(_recordCollection, 1245, 'tracks', 'Addicted to Love')[1245][ 'tracks' ] pop() === 'Addicted to Love' ); After updateRecords(recordCollection, 2468, \"tracks\", \"Free\"), tracks should have the string 1999 as the first element js assert( updateRecords(_recordCollection, 2468, 'tracks', 'Free')[2468][ 'tracks' ][0] === '1999' ); After updateRecords(recordCollection, 2548, \"tracks\", \"\"), tracks should not be set js updateRecords(_recordCollection, 2548, 'tracks', ''); assert( _recordCollection[2548]hasOwnProperty('tracks'));\nAfter updateRecords(recordCollection, 1245, \"albumTitle\", \"Riptide\"), albumTitle should be the string Riptide\njs\nassert(\nupdateRecords(_recordCollection, 1245, 'albumTitle', 'Riptide')[1245][\n'albumTitle'\n] === 'Riptide'\n);\n--seed--\n--before-user-code--\njs\nconst _recordCollection = {\n2548: {\nalbumTitle: 'Slippery When Wet',\nartist: 'Bon Jovi',\ntracks: ['Let It Rock', 'You Give Love a Bad Name']\n},\n2468: {\nalbumTitle: '1999',\nartist: 'Prince',\ntracks: ['1999', 'Little Red Corvette']\n},\n1245: {\nartist: 'Robert Palmer',\ntracks: []\n},\n5439: {\nalbumTitle: 'ABBA Gold'\n}\n};\n--seed-contents--\n```js\n// Setup\nconst recordCollection = {\n2548: {\nalbumTitle: 'Slippery When Wet',\nartist: 'Bon Jovi',\ntracks: ['Let It Rock', 'You Give Love a Bad Name']\n},\n2468: {\nalbumTitle: '1999',\nartist: 'Prince',\ntracks: ['1999', 'Little Red Corvette']\n},\n1245: {\nartist: 'Robert Palmer',\ntracks: []\n},\n5439: {\nalbumTitle: 'ABBA Gold'\n}\n};\n// Only change code below this line\nfunction updateRecords(records, id, prop, value) {\nreturn records;\n}\nupdateRecords(recordCollection, 5439, 'artist', 'ABBA');\n```\n--solutions--\n```js\nconst recordCollection = {\n2548: {\nalbumTitle: 'Slippery When Wet',\nartist: 'Bon Jovi',\ntracks: ['Let It Rock', 'You Give Love a Bad Name']\n},\n2468: {\nalbumTitle: '1999',\nartist: 'Prince',\ntracks: ['1999', 'Little Red Corvette']\n},\n1245: {\nartist: 'Robert Palmer',\ntracks: []\n},\n5439: {\nalbumTitle: 'ABBA Gold'\n}\n};\n// Only change code below this line\nfunction updateRecords(records, id, prop, value) {\nif (value === '') delete records[id][prop];\nelse if (prop === 'tracks') {\nrecords[id][prop] = records[id][prop] || [];\nrecords[id][prop]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "b454e0dc41d848a112ecb5bd050b804f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "albumTitle: 'Slippery When Wet', artist: 'Bon Jovi', tracks: ['Let It Rock', 'You Give Love a Bad Name'] }, 2468: { albumTitle: '1999', artist: 'Prince', tracks: ['1999', 'Little Red Corvette'] }, 1245: { artist: 'Robert Palmer', tracks: [] }, 5439: { albumTitle: 'ABBA Gold' } }; // Only change code below this line function updateRecords(records, id, prop, value) { if (value === '') delete records[id][prop]; else if (prop === 'tracks') { records[id][prop] = records[id][prop] || []; records[id][prop]push(value);\n} else {\nrecords[id][prop] = value;\n}\nreturn records;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\record-collection.md",
      "source_type": "git_repo"
    },
    "token_count": 169,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "e58037a79d827a8bce50c264c75d40a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\return-a-value-from-a-function-with-return.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c2\ntitle: Return a Value from a Function with Return\nchallengeType: 1\nforumTopicId: 18271\ndashedName: return-a-value-from-a-function-with-return\n--description--\nWe can pass values into a function with arguments. You can use a return statement to send a value back out of a function.\nExample\n```js\nfunction plusThree(num) {\nreturn num + 3;\n}\nconst answer = plusThree(5);\n```\nanswer has the value 8.\nplusThree takes an argument for num and returns a value equal to num + 3.\n--instructions--\nCreate a function timesFive that accepts one argument, multiplies it by 5, and returns the new value.\n--hints--\ntimesFive should be a function\njs\nassert(typeof timesFive === 'function');\ntimesFive(5) should return 25\njs\nassert(timesFive(5) === 25);\ntimesFive(2) should return 10\njs\nassert(timesFive(2) === 10);\ntimesFive(0) should return 0\njs\nassert(timesFive(0) === 0);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\njs\nfunction timesFive(num) {\nreturn num * 5;\n}\ntimesFive(10);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1139,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\return-a-value-from-a-function-with-return.md",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d9140003ebe3891f176118ed296d6b55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\returning-boolean-values-from-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5679ceb97cbaa8c51670a16b\ntitle: Returning Boolean Values from Functions\nchallengeType: 1\nforumTopicId: 18273\ndashedName: returning-boolean-values-from-functions\n--description--\nYou may recall from Comparison with the Equality Operator that all comparison operators return a boolean true or false value.\nSometimes people use an if/else statement to do a comparison, like this:\njs\nfunction isEqual(a, b) {\nif (a === b) {\nreturn true;\n} else {\nreturn false;\n}\n}\nBut there's a better way to do this. Since === returns true or false, we can return the result of the comparison:\njs\nfunction isEqual(a, b) {\nreturn a === b;\n}\n--instructions--\nFix the function isLess to remove the if/else statements.\n--hints--\nisLess(10, 15) should return true\njs\nassert(isLess(10, 15) === true);\nisLess(15, 10) should return false\njs\nassert(isLess(15, 10) === false);\nYou should not use any if or else statements\njs\nassert(!/if|else/g.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction isLess(a, b) {\n// Only change code below this line\nif (a < b) {\nreturn true;\n} else {\nreturn false;\n}\n// Only change code above this line\n}\nisLess(10, 15);\n```\n--solutions--\njs\nfunction isLess(a, b) {\nreturn a < b;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\returning-boolean-values-from-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94fa6d896002321f06b2a90c76c8b208",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\return-early-pattern-for-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c4\ntitle: Return Early Pattern for Functions\nchallengeType: 1\nforumTopicId: 18272\ndashedName: return-early-pattern-for-functions\n--description--\nWhen a return statement is reached, the execution of the current function stops and control returns to the calling location.\nExample\njs\nfunction myFun() {\nconsole.log(\"Hello\");\nreturn \"World\";\nconsole.log(\"byebye\")\n}\nmyFun();\nThe above will display the string Hello in the console, and return the string World. The string byebye will never display in the console, because the function exits at the return statement.\n--instructions--\nModify the function abTest so that if a or b are less than 0 the function will immediately exit with a value of undefined.\nHint\nRemember that undefined is a keyword, not a string.\n--hints--\nabTest(2, 2) should return a number\njs\nassert(typeof abTest(2, 2) === 'number');\nabTest(2, 2) should return 8\njs\nassert(abTest(2, 2) === 8);\nabTest(-2, 2) should return undefined\njs\nassert(abTest(-2, 2) === undefined);\nabTest(2, -2) should return undefined\njs\nassert(abTest(2, -2) === undefined);\nabTest(2, 8) should return 18\njs\nassert(abTest(2, 8) === 18);\nabTest(3, 3) should return 12\njs\nassert(abTest(3, 3) === 12);\nabTest(0, 0) should return 0\njs\nassert(abTest(0, 0) === 0);\n--seed--\n--seed-contents--\n```js\n// Setup\nfunction abTest(a, b) {\n// Only change code below this line\n// Only change code above this line\nreturn Math.round(Math.pow(Math.sqrt(a) + Math.sqrt(b), 2));\n}\nabTest(2,2);\n```\n--solutions--\njs\nfunction abTest(a, b) {\nif(a < 0 || b < 0) {\nreturn undefined;\n}\nreturn Math.round(Math.pow(Math.sqrt(a) + Math.sqrt(b), 2));\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2043,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\return-early-pattern-for-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ea55c9a837160661fa21805f576314c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replacing-if-else-chains-with-switch.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244e0\ntitle: Replacing If Else Chains with Switch\nchallengeType: 1\nforumTopicId: 18266\ndashedName: replacing-if-else-chains-with-switch\n--description--\nIf you have many options to choose from, a switch statement can be easier to write than many chained if/else if statements The following:\njs\nif (val === 1) {\nanswer = \"a\";\n} else if (val === 2) {\nanswer = \"b\";\n} else {\nanswer = \"c\";\n}\ncan be replaced with:\njs\nswitch (val) {\ncase 1:\nanswer = \"a\";\nbreak;\ncase 2:\nanswer = \"b\";\nbreak;\ndefault:\nanswer = \"c\";\n}\n--instructions--\nChange the chained if/else if statements into a switch statement --hints--\nYou should not use any else statements anywhere in the editor\njs\nassert( /else/g test(__helpers removeJSComments(code)));\nYou should not use any if statements anywhere in the editor\njs\nassert( /if/g test(__helpers removeJSComments(code)));\nYou should have at least four break statements\njs\nassert(__helpers removeJSComments(code) match(/break/g) length >= 4);\nchainToSwitch(\"bob\") should return the string Marley\njs\nassert(chainToSwitch('bob') === 'Marley');\nchainToSwitch(42) should return the string The Answer\njs\nassert(chainToSwitch(42) === 'The Answer');\nchainToSwitch(1) should return the string There is no #1\njs\nassert(chainToSwitch(1) === 'There is no #1');\nchainToSwitch(99) should return the string Missed me by this much js\nassert(chainToSwitch(99) === 'Missed me by this much",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replacing-if-else-chains-with-switch.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c3688d4f137e5828184bedcfbaeae9ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replacing-if-else-chains-with-switch.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert( /if/g test(__helpers removeJSComments(code))); You should have at least four break statements js assert(__helpers removeJSComments(code) match(/break/g) length >= 4); chainToSwitch(\"bob\") should return the string Marley js assert(chainToSwitch('bob') === 'Marley'); chainToSwitch(42) should return the string The Answer js assert(chainToSwitch(42) === 'The Answer'); chainToSwitch(1) should return the string There is no #1 js assert(chainToSwitch(1) === 'There is no #1'); chainToSwitch(99) should return the string Missed me by this much js assert(chainToSwitch(99) === 'Missed me by this much');\nchainToSwitch(7) should return the string Ate Nine\njs\nassert(chainToSwitch(7) === 'Ate Nine');\nchainToSwitch(\"John\") should return \"\" (empty string)\njs\nassert(chainToSwitch('John') === '');\nchainToSwitch(156) should return \"\" (empty string)\njs\nassert(chainToSwitch(156) === '');\n--seed--\n--seed-contents--\n```js\nfunction chainToSwitch(val) {\nlet answer = \"\";\n// Only change code below this line\nif (val === \"bob\") {\nanswer = \"Marley\";\n} else if (val === 42) {\nanswer = \"The Answer\";\n} else if (val === 1) {\nanswer = \"There is no #1\";\n} else if (val === 99) {\nanswer = \"Missed me by this much \";\n} else if (val === 7) {\nanswer = \"Ate Nine\";\n}\n// Only change code above this line\nreturn answer;\n}\nchainToSwitch(7);\n```\n--solutions--\n```js\nfunction chainToSwitch(val) {\nlet answer = \"\";\nswitch (val) {\ncase \"bob\":\nanswer = \"Marley\";\nbreak;\ncase 42:\nanswer = \"The Answer\";\nbreak;\ncase 1:\nanswer = \"There is no #1\";\nbreak;\ncase 99:\nanswer = \"Missed me by this much \";\nbreak;\ncase 7:\nanswer = \"Ate Nine\";\n}\nreturn answer;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\replacing-if-else-chains-with-switch.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1253a60d5e374a958b3aa71cc52e3fb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\store-multiple-values-in-one-variable-using-javascript-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7993c9c69feddfaeb8bdef\ntitle: Store Multiple Values in one Variable using JavaScript Arrays\nchallengeType: 1\nforumTopicId: 18309\ndashedName: store-multiple-values-in-one-variable-using-javascript-arrays\n--description--\nWith JavaScript array variables, we can store several pieces of data in one place.\nYou start an array declaration with an opening square bracket, end it with a closing square bracket, and put a comma between each entry, like this:\njs\nconst sandwich = [\"peanut butter\", \"jelly\", \"bread\"];\n--instructions--\nModify the new array myArray so that it contains both a string and a number (in that order).\n--hints--\nmyArray should be an array.\njs\nassert(typeof myArray == 'object');\nThe first item in myArray should be a string.\njs\nassert(typeof myArray[0] !== 'undefined' && typeof myArray[0] == 'string');\nThe second item in myArray should be a number.\njs\nassert(typeof myArray[1] !== 'undefined' && typeof myArray[1] == 'number');\n--seed--\n--after-user-code--\njs\n(function(z){return z;})(myArray);\n--seed-contents--\njs\n// Only change code below this line\nconst myArray = [];\n--solutions--\njs\nconst myArray = [\"The Answer\", 42];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\store-multiple-values-in-one-variable-using-javascript-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "73c35094ffdb3b69da7807f86b43041b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\shopping-list.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244bc\ntitle: Shopping List\nchallengeType: 1\nforumTopicId: 18280\ndashedName: shopping-list\n--description--\nCreate a shopping list in the variable myList. The list should be a multi-dimensional array containing several sub-arrays.\nThe first element in each sub-array should contain a string with the name of the item. The second element should be a number representing the quantity i.e.\njs\n[\"Chocolate Bar\", 15]\nThere should be at least 5 sub-arrays in the list.\n--hints--\nmyList should be an array.\njs\nassert(isArray);\nThe first elements in each of your sub-arrays should all be strings.\njs\nassert(hasString);\nThe second elements in each of your sub-arrays should all be numbers.\njs\nassert(hasNumber);\nYou should have at least 5 items in your list.\njs\nassert(count > 4);\n--seed--\n--after-user-code--\n```js\nvar count = 0;\nvar isArray = false;\nvar hasString = false;\nvar hasNumber = false;\n(function(list){\nif(Array.isArray(myList)) {\nisArray = true;\nif(myList.length > 0) {\nhasString = true;\nhasNumber = true;\nfor (var elem of myList) {\nif(!elem || !elem[0] || typeof elem[0] !== 'string') {\nhasString = false;\n}\nif(!elem || typeof elem[1] !== 'number') {\nhasNumber = false;\n}\n}\n}\ncount = myList.length;\nreturn JSON.stringify(myList);\n} else {\nreturn \"myList is not an array\";\n}\n})(myList);\n```\n--seed-contents--\njs\nconst myList = [];\n--solutions--\njs\nconst myList = [\n[\"Candy\", 10],\n[\"Potatoes\", 12],\n[\"Eggs\", 12],\n[\"Catfood\", 1],\n[\"Toads\", 9]\n];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1682,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\shopping-list.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ac2650ef123afdfb40a56ab866a40089",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\selecting-from-many-options-with-switch-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244dd\ntitle: Selecting from Many Options with Switch Statements\nchallengeType: 1\nforumTopicId: 18277\ndashedName: selecting-from-many-options-with-switch-statements\n--description--\nIf you need to match one value against many options, you can use a switch statement A switch statement compares the value to the case statements which define various possible values Any valid JavaScript statements can be executed inside a case block and will run from the first matched case value until a break is encountered Here is an example of a switch statement:\njs\nswitch (fruit) {\ncase \"apple\":\nconsole log(\"The fruit is an apple\");\nbreak;\ncase \"orange\":\nconsole log(\"The fruit is an orange\");\nbreak;\n}\ncase values are tested with strict equality (===) The break tells JavaScript to stop executing statements If the break is omitted, the next statement will be executed --instructions--\nWrite a switch statement which tests val and sets answer for the following conditions:\n1 - alpha\n2 - beta\n3 - gamma\n4 - delta\n--hints--\ncaseInSwitch(1) should have a value of the string alpha\njs\nassert(caseInSwitch(1) === 'alpha');\ncaseInSwitch(2) should have a value of the string beta\njs\nassert(caseInSwitch(2) === 'beta');\ncaseInSwitch(3) should have a value of the string gamma\njs\nassert(caseInSwitch(3) === 'gamma');\ncaseInSwitch(4) should have a value of the string delta\njs\nassert(caseInSwitch(4) === 'delta');\nYou should not use any if or else statements\njs\nassert( /else/g test(__helpers removeJSComments(code)) || /if/g test(__helpers removeJSComments(code)));\nYou should have at least 3 break statements\njs\nassert(__helpers removeJSComments(code) match(/break/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\selecting-from-many-options-with-switch-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c243facd533c9f208e8a8987bed7c405",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\selecting-from-many-options-with-switch-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the string alpha js assert(caseInSwitch(1) === 'alpha'); caseInSwitch(2) should have a value of the string beta js assert(caseInSwitch(2) === 'beta'); caseInSwitch(3) should have a value of the string gamma js assert(caseInSwitch(3) === 'gamma'); caseInSwitch(4) should have a value of the string delta js assert(caseInSwitch(4) === 'delta'); You should not use any if or else statements js assert( /else/g test(__helpers removeJSComments(code)) || /if/g test(__helpers removeJSComments(code))); You should have at least 3 break statements js assert(__helpers removeJSComments(code) match(/break/g)length > 2);\n--seed--\n--seed-contents--\n```js\nfunction caseInSwitch(val) {\nlet answer = \"\";\n// Only change code below this line\n// Only change code above this line\nreturn answer;\n}\ncaseInSwitch(1);\n```\n--solutions--\n```js\nfunction caseInSwitch(val) {\nlet answer = \"\";\nswitch (val) {\ncase 1:\nanswer = \"alpha\";\nbreak;\ncase 2:\nanswer = \"beta\";\nbreak;\ncase 3:\nanswer = \"gamma\";\nbreak;\ncase 4:\nanswer = \"delta\";\n}\nreturn answer;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\selecting-from-many-options-with-switch-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 277,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f14a29ca4972f0392118f1f6b2ef167c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\subtract-one-number-from-another-with-javascript.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c11feddfaeb4bdef\ntitle: Subtract One Number from Another with JavaScript\nchallengeType: 1\nforumTopicId: 18314\ndashedName: subtract-one-number-from-another-with-javascript\n--description--\nWe can also subtract one number from another.\nJavaScript uses the - symbol for subtraction.\nExample\njs\nconst myVar = 12 - 6;\nmyVar would have the value 6.\n--instructions--\nChange the 0 so the difference is 12.\n--hints--\nThe variable difference should be equal to 12.\njs\nassert(difference === 12);\nYou should only subtract one number from 45.\njs\nassert(/difference=45-33;?/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code))));\n--seed--\n--after-user-code--\njs\n(function(z){return 'difference = '+z;})(difference);\n--seed-contents--\njs\nconst difference = 45 - 0;\n--solutions--\njs\nconst difference = 45 - 33;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 925,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\subtract-one-number-from-another-with-javascript.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "61f97712804c5eb8ed451e5849c4e122",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\storing-values-with-the-assignment-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244a8\ntitle: Storing Values with the Assignment Operator\nchallengeType: 1\nforumTopicId: 18310\ndashedName: storing-values-with-the-assignment-operator\n--description--\nIn JavaScript, you can store a value in a variable with the assignment operator (=).\njs\nmyVariable = 5;\nThis assigns the Number value 5 to myVariable.\nIf there are any calculations to the right of the = operator, those are performed before the value is assigned to the variable on the left of the operator.\njs\nvar myVar;\nmyVar = 5;\nFirst, this code creates a variable named myVar. Then, the code assigns 5 to myVar. Now, if myVar appears again in the code, the program will treat it as if it is 5.\n--instructions--\nAssign the value 7 to variable a.\n--hints--\nYou should not change code above the specified comment.\njs\nassert(/var a;/.test(__helpers.removeJSComments(code)));\na should have a value of 7.\njs\nassert(typeof a === 'number' && a === 7);\n--seed--\n--before-user-code--\njs\nif (typeof a != 'undefined') {\na = undefined;\n}\n--after-user-code--\njs\n(function(a){return \"a = \" + a;})(a);\n--seed-contents--\n```js\n// Setup\nvar a;\n// Only change code below this line\n```\n--solutions--\njs\nvar a;\na = 7;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\storing-values-with-the-assignment-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "334b5ab6d82f5d2790701825e794164c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understand-string-immutability.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244ba\ntitle: Understand String Immutability\nchallengeType: 1\nforumTopicId: 18331\ndashedName: understand-string-immutability\n--description--\nIn JavaScript, String values are immutable, which means that they cannot be altered once created.\nFor example, the following code will produce an error because the letter B in the string Bob cannot be changed to the letter J:\njs\nlet myStr = \"Bob\";\nmyStr[0] = \"J\";\nNote that this does not mean that myStr could not be re-assigned. The only way to change myStr would be to assign it with a new value, like this:\njs\nlet myStr = \"Bob\";\nmyStr = \"Job\";\n--instructions--\nCorrect the assignment to myStr so it contains the string value of Hello World using the approach shown in the example above.\n--hints--\nmyStr should have a value of the string Hello World.\njs\nassert(myStr === 'Hello World');\nYou should not change the code above the specified comment.\njs\nassert(/myStr = \"Jello World\"/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(v){return \"myStr = \" + v;})(myStr);\n--seed-contents--\n```js\n// Setup\nlet myStr = \"Jello World\";\n// Only change code below this line\nmyStr[0] = \"H\"; // Change this line\n// Only change code above this line\n```\n--solutions--\njs\nlet myStr = \"Jello World\";\nmyStr = \"Hello World\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1424,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understand-string-immutability.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "71750cad3d1fbb81959da4a9dadb9e70",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\stand-in-line.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244c6\ntitle: Stand in Line\nchallengeType: 1\nforumTopicId: 18307\ndashedName: stand-in-line\n--description--\nIn Computer Science a queue is an abstract Data Structure where items are kept in order New items can be added at the back of the queue and old items are taken off from the front of the queue --instructions--\nWrite a function nextInLine which takes an array (arr) and a number (item) as arguments Add the number to the end of the array, then remove the first element of the array The nextInLine function should then return the element that was removed --hints--\nnextInLine([], 5) should return a number js\nassert isNumber(nextInLine([], 5));\nnextInLine([], 1) should return 1\njs\nassert(nextInLine([], 1) === 1);\nnextInLine([2], 1) should return 2\njs\nassert(nextInLine([2], 1) === 2);\nnextInLine([5,6,7,8,9], 1) should return 5\njs\nassert(nextInLine([5, 6, 7, 8, 9], 1) === 5);\nAfter nextInLine(testArr, 10), testArr[4] should be 10\njs\nnextInLine(testArr, 10);\nassert(testArr[4] === 10);\n--seed--\n--before-user-code--\n```js\nvar logOutput = [];\nvar originalConsole = console\nfunction capture() {\nvar nativeLog = console log;\nconsole log = function (message) {\nlogOutput push(message);\nif(nativeLog apply) {\nnativeLog apply(originalConsole, arguments);\n} else {\nvar nativeMsg = Array prototype slice apply(arguments) join(' ');\nnativeLog(nativeMsg);\n}\n};\n}\nfunction uncapture() {\nconsole log = originalConsole log;\n}\ncapture();\n```\n--after-user-code--\njs\nuncapture();\ntestArr = [1,2,3,4,5];\n(function() { return logOutput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2281,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\stand-in-line.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "588f0c5b4317c64e8978f62a7e9dba95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\stand-in-line.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js nextInLine(testArr, 10); assert(testArr[4] === 10); --seed-- --before-user-code-- ```js var logOutput = []; var originalConsole = console function capture() { var nativeLog = console log; console log = function (message) { logOutput push(message); if(nativeLog apply) { nativeLog apply(originalConsole, arguments); } else { var nativeMsg = Array prototype slice apply(arguments) join(' '); nativeLog(nativeMsg); } }; } function uncapture() { console log = originalConsole log; } capture(); ``` --after-user-code-- js uncapture(); testArr = [1,2,3,4,5]; (function() { return logOutputjoin(\"\\n\");})();\n--seed-contents--\n```js\nfunction nextInLine(arr, item) {\n// Only change code below this line\nreturn item;\n// Only change code above this line\n}\n// Setup\nlet testArr = [1, 2, 3, 4, 5];\n// Display code\nconsole log(\"Before: \" + JSON stringify(testArr));\nconsole log(nextInLine(testArr, 6));\nconsole log(\"After: \" + JSON stringify(testArr));\n```\n--solutions--\n```js\nlet testArr = [1, 2, 3, 4, 5];\nfunction nextInLine(arr, item) {\narr push(item);\nreturn arr shift();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2281,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\stand-in-line.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a28346779387bfa3f47afe508629f188",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-boolean-values.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c441eddfaeb5bdef\ntitle: Understanding Boolean Values\nchallengeType: 1\nforumTopicId: 301176\ndashedName: understanding-boolean-values\n--description--\nAnother data type is the Boolean. Booleans may only be one of two values: true or false. They are basically little on-off switches, where true is on and false is off. These two states are mutually exclusive.\nNote: Boolean values are never written with quotes. The strings \"true\" and \"false\" are not Boolean and have no special meaning in JavaScript.\n--instructions--\nModify the welcomeToBooleans function so that it returns true instead of false.\n--hints--\nThe welcomeToBooleans() function should return a Boolean (true or false) value.\njs\nassert(typeof welcomeToBooleans() === 'boolean');\nwelcomeToBooleans() should return true.\njs\nassert(welcomeToBooleans() === true);\n--seed--\n--after-user-code--\njs\nwelcomeToBooleans();\n--seed-contents--\n```js\nfunction welcomeToBooleans() {\n// Only change code below this line\nreturn false; // Change this line\n// Only change code above this line\n}\n```\n--solutions--\njs\nfunction welcomeToBooleans() {\nreturn true; // Change this line\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-boolean-values.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d78b1c47f34730b0fdd9f60eae05ca15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-undefined-value-returned-from-a-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 598e8944f009e646fc236146\ntitle: Understanding Undefined Value returned from a Function\nchallengeType: 1\nforumTopicId: 301177\ndashedName: understanding-undefined-value-returned-from-a-function\n--description--\nA function can include the return statement but it does not have to. In the case that the function doesn't have a return statement, when you call it, the function processes the inner code but the returned value is undefined.\nExample\n```js\nlet sum = 0;\nfunction addSum(num) {\nsum = sum + num;\n}\naddSum(3);\n```\naddSum is a function without a return statement. The function will change the global sum variable but the returned value of the function is undefined.\n--instructions--\nCreate a function addFive without any arguments. This function adds 5 to the sum variable, but its returned value is undefined.\n--hints--\naddFive should be a function.\njs\nassert(typeof addFive === 'function');\nOnce both functions have run, the sum should be equal to 8.\njs\nassert(sum === 8);\nReturned value from addFive should be undefined.\njs\nassert(addFive() === undefined);\nInside the addFive function, you should add 5 to the sum variable.\njs\nassert(\n__helpers.removeWhiteSpace(addFive.toString()).match(/sum=sum\\+5|sum\\+=5/)\n);\n--seed--\n--seed-contents--\n```js\n// Setup\nlet sum = 0;\nfunction addThree() {\nsum = sum + 3;\n}\n// Only change code below this line\n// Only change code above this line\naddThree();\naddFive();\n```\n--solutions--\n```js\nlet sum = 0;\nfunction addThree() {\nsum = sum + 3;\n}\nfunction addFive() {\nsum = sum + 5;\n}\naddThree();\naddFive();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1682,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-undefined-value-returned-from-a-function.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1c29fabb05f2fcca4b791f2f9f8f257b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\testing-objects-for-properties.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 567af2437cbaa8c51670a16c\ntitle: Testing Objects for Properties\nchallengeType: 1\nforumTopicId: 18324\ndashedName: testing-objects-for-properties\n--description--\nTo check if a property on a given object exists or not, you can use the hasOwnProperty() method someObject hasOwnProperty(someProperty) returns true or false depending on if the property is found on the object or not Example\n```js\nfunction checkForProperty(object, property) {\nreturn object hasOwnProperty(property);\n}\ncheckForProperty({ top: 'hat', bottom: 'pants' }, 'top'); // true\ncheckForProperty({ top: 'hat', bottom: 'pants' }, 'middle'); // false\n```\nThe first checkForProperty function call returns true, while the second returns false --instructions--\nModify the function checkObj to test if the object passed to the function parameter obj contains the specific property passed to the function parameter checkProp If the property passed to checkProp is found on obj, return that property's value If not, return Not Found --hints--\ncheckObj({gift: \"pony\", pet: \"kitten\", bed: \"sleigh\"}, \"gift\") should return the string pony js\nassert(\ncheckObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'gift') === 'pony'\n);\ncheckObj({gift: \"pony\", pet: \"kitten\", bed: \"sleigh\"}, \"pet\") should return the string kitten js\nassert(\ncheckObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'pet') === 'kitten'\n);\ncheckObj({gift: \"pony\", pet: \"kitten\", bed: \"sleigh\"}, \"house\") should return the string Not Found js\nassert(\ncheckObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'house') ===\n'Not Found'\n);\ncheckObj({city: \"Seattle\"}, \"city\") should return the string Seattle js\nassert(checkObj({ city: 'Seattle' }, 'city') === 'Seattle');\ncheckObj({city: \"Seattle\"}, \"district\") should return the string Not Found",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\testing-objects-for-properties.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0573961a0499af52785f879cb7936861",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\testing-objects-for-properties.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"kitten\", bed: \"sleigh\"}, \"pet\") should return the string kitten js assert( checkObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'pet') === 'kitten' ); checkObj({gift: \"pony\", pet: \"kitten\", bed: \"sleigh\"}, \"house\") should return the string Not Found js assert( checkObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'house') === 'Not Found' ); checkObj({city: \"Seattle\"}, \"city\") should return the string Seattle js assert(checkObj({ city: 'Seattle' }, 'city') === 'Seattle'); checkObj({city: \"Seattle\"}, \"district\") should return the string Not Foundjs\nassert(checkObj({ city: 'Seattle' }, 'district') === 'Not Found');\ncheckObj({pet: \"kitten\", bed: \"sleigh\"}, \"gift\") should return the string Not Found js\nassert(checkObj({ pet: 'kitten', bed: 'sleigh' }, 'gift') === 'Not Found');\n--seed--\n--seed-contents--\njs\nfunction checkObj(obj, checkProp) {\n// Only change code below this line\nreturn \"Change Me \";\n// Only change code above this line\n}\n--solutions--\njs\nfunction checkObj(obj, checkProp) {\nif(obj hasOwnProperty(checkProp)) {\nreturn obj[checkProp];\n} else {\nreturn \"Not Found\";\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\testing-objects-for-properties.md",
      "source_type": "git_repo"
    },
    "token_count": 317,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a138fb07eb4d0f57116facfdf25558a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-uninitialized-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244aa\ntitle: Understanding Uninitialized Variables\nchallengeType: 1\nforumTopicId: 18335\ndashedName: understanding-uninitialized-variables\n--description--\nWhen JavaScript variables are declared, they have an initial value of undefined. If you do a mathematical operation on an undefined variable your result will be NaN which means \"Not a Number\". If you concatenate a string with an undefined variable, you will get a string of undefined.\n--instructions--\nInitialize the three variables a, b, and c with 5, 10, and \"I am a\" respectively so that they will not be undefined.\n--hints--\na should be defined and have a final value of 6.\njs\nassert(typeof a === 'number' && a === 6);\nb should be defined and have a final value of 15.\njs\nassert(typeof b === 'number' && b === 15);\nc should not contain undefined and should have a final value of the string I am a String!\njs\nassert(!/undefined/.test(c) && c === 'I am a String!');\nYou should not change code below the specified comment.\njs\nassert(\n/a = a \\+ 1;/.test(__helpers.removeJSComments(code)) &&\n/b = b \\+ 5;/.test(__helpers.removeJSComments(code)) &&\n/c = c \\+ \" String!\";/.test(__helpers.removeJSComments(code))\n);\n--seed--\n--after-user-code--\njs\n(function(a,b,c){ return \"a = \" + a + \", b = \" + b + \", c = '\" + c + \"'\"; })(a,b,c);\n--seed-contents--\n```js\n// Only change code below this line\nvar a;\nvar b;\nvar c;\n// Only change code above this line\na = a + 1;\nb = b + 5;\nc = c + \" String!\";\n```\n--solutions--\njs\nvar a = 5;\nvar b = 10;\nvar c = \"I am a\";\na = a + 1;\nb = b + 5;\nc = c + \" String!\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1726,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-uninitialized-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f9d3a67839a48bde98c0beee3cc7e21a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\updating-object-properties.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392d1\ntitle: Updating Object Properties\nchallengeType: 1\nforumTopicId: 18336\ndashedName: updating-object-properties\n--description--\nAfter you've created a JavaScript object, you can update its properties at any time just like you would update any other variable. You can use either dot or bracket notation to update.\nFor example, let's look at ourDog:\njs\nconst ourDog = {\n\"name\": \"Camper\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"everything!\"]\n};\nSince he's a particularly happy dog, let's change his name to the string Happy Camper. Here's how we update his object's name property: ourDog.name = \"Happy Camper\"; or ourDog[\"name\"] = \"Happy Camper\"; Now when we evaluate ourDog.name, instead of getting Camper, we'll get his new name, Happy Camper.\n--instructions--\nUpdate the myDog object's name property. Let's change her name from Coder to Happy Coder. You can use either dot or bracket notation.\n--hints--\nYou should update myDog's name property to equal the string Happy Coder.\njs\nassert(/happy coder/gi.test(myDog.name));\nYou should not edit the myDog definition.\njs\nassert(/\"name\": \"Coder\"/.test(__helpers.removeJSComments(code)));\n--seed--\n--after-user-code--\njs\n(function(z){return z;})(myDog);\n--seed-contents--\n```js\n// Setup\nconst myDog = {\n\"name\": \"Coder\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"freeCodeCamp Campers\"]\n};\n// Only change code below this line\n```\n--solutions--\njs\nconst myDog = {\n\"name\": \"Coder\",\n\"legs\": 4,\n\"tails\": 1,\n\"friends\": [\"freeCodeCamp Campers\"]\n};\nmyDog.name = \"Happy Coder\";",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\updating-object-properties.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3e83f72eabb535339fe1232447c16dcc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-first-character-in-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c549eddfaeb5bdef\ntitle: Use Bracket Notation to Find the First Character in a String\nchallengeType: 1\nforumTopicId: 18341\ndashedName: use-bracket-notation-to-find-the-first-character-in-a-string\n--description--\nBracket notation is a way to get a character at a specific index within a string.\nMost modern programming languages, like JavaScript, don't start counting at 1 like humans do. They start at 0. This is referred to as Zero-based indexing.\nFor example, the character at index 0 in the word Charles is C. So if const firstName = \"Charles\", you can get the value of the first letter of the string by using firstName[0].\nExample:\njs\nconst firstName = \"Charles\";\nconst firstLetter = firstName[0];\nfirstLetter would have a value of the string C.\n--instructions--\nUse bracket notation to find the first character in the lastName variable and assign it to firstLetterOfLastName.\nHint: Try looking at the example above if you get stuck.\n--hints--\nThe firstLetterOfLastName variable should have the value of L.\njs\nassert(firstLetterOfLastName === 'L');\nYou should use bracket notation.\njs\nassert(__helpers.removeJSComments(code).match(/firstLetterOfLastName\\s*=\\s*lastName\\s*\\[\\s*\\d\\s*\\]/));\n--seed--\n--after-user-code--\njs\n(function(v){return v;})(firstLetterOfLastName);\n--seed-contents--\n```js\n// Setup\nlet firstLetterOfLastName = \"\";\nconst lastName = \"Lovelace\";\n// Only change code below this line\nfirstLetterOfLastName = lastName; // Change this line\n```\n--solutions--\n```js\nlet firstLetterOfLastName = \"\";\nconst lastName = \"Lovelace\";\n// Only change code below this line\nfirstLetterOfLastName = lastName[0];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-first-character-in-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f6d1a20c951ff1739a1e58a070dbf0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-last-character-in-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c451eddfaeb5bdef\ntitle: Use Bracket Notation to Find the Last Character in a String\nchallengeType: 1\nforumTopicId: 18342\ndashedName: use-bracket-notation-to-find-the-last-character-in-a-string\n--description--\nIn order to get the last letter of a string, you can subtract one from the string's length.\nFor example, if const firstName = \"Ada\", you can get the value of the last letter of the string by using firstName[firstName.length - 1].\nExample:\njs\nconst firstName = \"Ada\";\nconst lastLetter = firstName[firstName.length - 1];\nlastLetter would have a value of the string a.\n--instructions--\nUse bracket notation to find the last character in the lastName variable.\nHint: Try looking at the example above if you get stuck.\n--hints--\nlastLetterOfLastName should be the letter e.\njs\nassert(lastLetterOfLastName === 'e');\nYou should use .length to get the last letter.\njs\nassert(__helpers.removeJSComments(code).match(/\\.length/g).length > 0);\n--seed--\n--after-user-code--\njs\n(function(v){return v;})(lastLetterOfLastName);\n--seed-contents--\n```js\n// Setup\nconst lastName = \"Lovelace\";\n// Only change code below this line\nconst lastLetterOfLastName = lastName; // Change this line\n```\n--solutions--\njs\nconst lastName = \"Lovelace\";\nconst lastLetterOfLastName = lastName[lastName.length - 1];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-last-character-in-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "91984e18d98bf244d83b440a572d7dda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-case-sensitivity-in-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244ab\ntitle: Understanding Case Sensitivity in Variables\nchallengeType: 1\nforumTopicId: 18334\ndashedName: understanding-case-sensitivity-in-variables\n--description--\nIn JavaScript all variables and function names are case sensitive This means that capitalization matters MYVAR is not the same as MyVar nor myvar It is possible to have multiple distinct variables with the same name but different casing It is strongly recommended that for the sake of clarity, you do not use this language feature Best Practice\nWrite variable names in JavaScript in camelCase In camelCase, multi-word variable names have the first word in lowercase and the first letter of each subsequent word is capitalized Examples:\njs\nvar someVariable;\nvar anotherVariableName;\nvar thisVariableNameIsSoLong;\n--instructions--\nModify the existing declarations and assignments so their names use camelCase Do not create any new variables --hints--\nstudlyCapVar should be defined and have a value of 10 js\nassert(typeof studlyCapVar == 'undefined' && studlyCapVar === 10);\nproperCamelCase should be defined and have a value of the string A String js\nassert(\ntypeof properCamelCase == 'undefined' && properCamelCase === 'A String'\n);\ntitleCaseOver should be defined and have a value of 9000 js\nassert(typeof titleCaseOver == 'undefined' && titleCaseOver === 9000);\nstudlyCapVar should use camelCase in both declaration and assignment sections js\nassert(__helpers removeJSComments(code) match(/studlyCapVar/g) length === 2);\nproperCamelCase should use camelCase in both declaration and assignment sections js\nassert(__helpers removeJSComments(code) match(/properCamelCase/g) length === 2);\ntitleCaseOver should use camelCase in both declaration and assignment sections js\nassert(__helpers removeJSComments(code) match(/titleCaseOver/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2393,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-case-sensitivity-in-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "590f21481858415bd863b4e6ba2600e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-case-sensitivity-in-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "properCamelCase == 'undefined' && properCamelCase === 'A String' ); titleCaseOver should be defined and have a value of 9000 js assert(typeof titleCaseOver == 'undefined' && titleCaseOver === 9000); studlyCapVar should use camelCase in both declaration and assignment sections js assert(__helpers removeJSComments(code) match(/studlyCapVar/g) length === 2); properCamelCase should use camelCase in both declaration and assignment sections js assert(__helpers removeJSComments(code) match(/properCamelCase/g) length === 2); titleCaseOver should use camelCase in both declaration and assignment sections js assert(__helpers removeJSComments(code) match(/titleCaseOver/g)length === 2);\n--seed--\n--seed-contents--\n```js\n// Variable declarations\nvar StUdLyCapVaR;\nvar properCamelCase;\nvar TitleCaseOver;\n// Variable assignments\nSTUDLYCAPVAR = 10;\nPRoperCAmelCAse = \"A String\";\ntITLEcASEoVER = 9000;\n```\n--solutions--\n```js\nvar studlyCapVar;\nvar properCamelCase;\nvar titleCaseOver;\nstudlyCapVar = 10;\nproperCamelCase = \"A String\";\ntitleCaseOver = 9000;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2393,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\understanding-case-sensitivity-in-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "054e8bf629afc6d98cf1e108cb3f4edc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-nth-character-in-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c450eddfaeb5bdef\ntitle: Use Bracket Notation to Find the Nth Character in a String\nchallengeType: 1\nforumTopicId: 18343\ndashedName: use-bracket-notation-to-find-the-nth-character-in-a-string\n--description--\nYou can also use bracket notation to get the character at other positions within a string.\nRemember that computers start counting at 0, so the first character is actually the zeroth character.\nExample:\njs\nconst firstName = \"Ada\";\nconst secondLetterOfFirstName = firstName[1];\nsecondLetterOfFirstName would have a value of the string d.\n--instructions--\nLet's try to set thirdLetterOfLastName to equal the third letter of the lastName variable using bracket notation.\nHint: Try looking at the example above if you get stuck.\n--hints--\nThe thirdLetterOfLastName variable should have the value of v.\njs\nassert(thirdLetterOfLastName === 'v');\nYou should use bracket notation.\njs\nassert(__helpers.removeJSComments(code).match(/thirdLetterOfLastName\\s*=\\s*lastName\\s*\\[\\s*\\d\\s*\\]/));\n--seed--\n--after-user-code--\njs\n(function(v){return v;})(thirdLetterOfLastName);\n--seed-contents--\n```js\n// Setup\nconst lastName = \"Lovelace\";\n// Only change code below this line\nconst thirdLetterOfLastName = lastName; // Change this line\n```\n--solutions--\njs\nconst lastName = \"Lovelace\";\nconst thirdLetterOfLastName = lastName[2];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-nth-character-in-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6c16ca290defd2cc44445a56ce47f042",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-nth-to-last-character-in-a-string.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c9c452eddfaeb5bdef\ntitle: Use Bracket Notation to Find the Nth-to-Last Character in a String\nchallengeType: 1\nforumTopicId: 18344\ndashedName: use-bracket-notation-to-find-the-nth-to-last-character-in-a-string\n--description--\nYou can use the same principle we just used to retrieve the last character in a string to retrieve the Nth-to-last character.\nFor example, you can get the value of the third-to-last letter of the const firstName = \"Augusta\" string by using firstName[firstName.length - 3]\nExample:\njs\nconst firstName = \"Augusta\";\nconst thirdToLastLetter = firstName[firstName.length - 3];\nthirdToLastLetter would have a value of the string s.\n--instructions--\nUse bracket notation to find the second-to-last character in the lastName string.\nHint: Try looking at the example above if you get stuck.\n--hints--\nsecondToLastLetterOfLastName should be the letter c.\njs\nassert(secondToLastLetterOfLastName === 'c');\nYou should use .length to get the second last letter.\njs\nassert(__helpers.removeJSComments(code).match(/\\.length/g).length > 0);\n--seed--\n--after-user-code--\njs\n(function(v){return v;})(secondToLastLetterOfLastName);\n--seed-contents--\n```js\n// Setup\nconst lastName = \"Lovelace\";\n// Only change code below this line\nconst secondToLastLetterOfLastName = lastName; // Change this line\n```\n--solutions--\njs\nconst lastName = \"Lovelace\";\nconst secondToLastLetterOfLastName = lastName[lastName.length - 2];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1541,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-bracket-notation-to-find-the-nth-to-last-character-in-a-string.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "70a7f7b2646253fc820619fb13ce560e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-conditional-logic-with-if-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: cf1111c1c12feddfaeb3bdef\ntitle: Use Conditional Logic with If Statements\nchallengeType: 1\nforumTopicId: 18348\ndashedName: use-conditional-logic-with-if-statements\n--description--\nif statements are used to make decisions in code The keyword if tells JavaScript to execute the code in the curly braces under certain conditions, defined in the parentheses These conditions are known as Boolean conditions and they may only be true or false When the condition evaluates to true, the program executes the statement inside the curly braces When the Boolean condition evaluates to false, the statement inside the curly braces will not execute Pseudocode\nif (condition is true) {  statement is executed}\nExample\n```js\nfunction test(myCondition) {\nif (myCondition) {\nreturn \"It was true\";\n}\nreturn \"It was false\";\n}\ntest(true);\ntest(false);\n```\ntest(true) returns the string It was true, and test(false) returns the string It was false When test is called with a value of true, the if statement evaluates myCondition to see if it is true or not Since it is true, the function returns It was true When we call test with a value of false, myCondition is not true and the statement in the curly braces is not executed and the function returns It was false --instructions--\nCreate an if statement inside the function to return Yes, that was true if the parameter wasThatTrue is true and return No, that was false otherwise",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2462,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-conditional-logic-with-if-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4e013d5daef9598dccea4c3c7910aaa3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-conditional-logic-with-if-statements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "myCondition to see if it is true or not Since it is true, the function returns It was true When we call test with a value of false, myCondition is not true and the statement in the curly braces is not executed and the function returns It was false --instructions-- Create an if statement inside the function to return Yes, that was true if the parameter wasThatTrue is true and return No, that was false otherwise--hints--\ntrueOrFalse should be a function\njs\nassert(typeof trueOrFalse === 'function');\ntrueOrFalse(true) should return a string\njs\nassert(typeof trueOrFalse(true) === 'string');\ntrueOrFalse(false) should return a string\njs\nassert(typeof trueOrFalse(false) === 'string');\ntrueOrFalse(true) should return the string Yes, that was true\njs\nassert(trueOrFalse(true) === 'Yes, that was true');\ntrueOrFalse(false) should return the string No, that was false\njs\nassert(trueOrFalse(false) === 'No, that was false');\n--seed--\n--seed-contents--\n```js\nfunction trueOrFalse(wasThatTrue) {\n// Only change code below this line\n// Only change code above this line\n}\n```\n--solutions--\njs\nfunction trueOrFalse(wasThatTrue) {\nif (wasThatTrue) {\nreturn \"Yes, that was true\";\n}\nreturn \"No, that was false\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2462,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-conditional-logic-with-if-statements.md",
      "source_type": "git_repo"
    },
    "token_count": 297,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "95e096969ef319a337bc7123709f4a62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-the-conditional-ternary-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7e367417b2b2512b24\ntitle: Use the Conditional (Ternary) Operator\nchallengeType: 1\nforumTopicId: 301181\ndashedName: use-the-conditional-ternary-operator\n--description--\nThe conditional operator, also called the ternary operator, can be used as a one line if-else expression.\nThe syntax is a ? b : c, where a is the condition, b is the code to run when the condition returns true, and c is the code to run when the condition returns false.\nThe following function uses an if/else statement to check a condition:\njs\nfunction findGreater(a, b) {\nif(a > b) {\nreturn \"a is greater\";\n}\nelse {\nreturn \"b is greater or equal\";\n}\n}\nThis can be re-written using the conditional operator:\njs\nfunction findGreater(a, b) {\nreturn a > b ? \"a is greater\" : \"b is greater or equal\";\n}\n--instructions--\nUse the conditional operator in the checkEqual function to check if two numbers are equal or not. The function should return either the string Equal or the string Not Equal.\n--hints--\ncheckEqual should use the conditional operator\njs\nassert(/.+?\\s*?\\?\\s*?.+?\\s*?:\\s*?.+?/.test(__helpers.removeJSComments(code)));\ncheckEqual(1, 2) should return the string Not Equal\njs\nassert(checkEqual(1, 2) === 'Not Equal');\ncheckEqual(1, 1) should return the string Equal\njs\nassert(checkEqual(1, 1) === 'Equal');\ncheckEqual(1, -1) should return the string Not Equal\njs\nassert(checkEqual(1, -1) === 'Not Equal');\n--seed--\n--seed-contents--\n```js\nfunction checkEqual(a, b) {\n}\ncheckEqual(1, 2);\n```\n--solutions--\njs\nfunction checkEqual(a, b) {\nreturn a === b ? \"Equal\" : \"Not Equal\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-the-conditional-ternary-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3def33fa90c7cbe431e7f49caa6d92cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-multiple-conditional-ternary-operators.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7e367417b2b2512b21\ntitle: Use Multiple Conditional (Ternary) Operators\nchallengeType: 1\nforumTopicId: 301179\ndashedName: use-multiple-conditional-ternary-operators\n--description--\nIn the previous challenge, you used a single conditional operator You can also chain them together to check for multiple conditions The following function uses if, else if, and else statements to check multiple conditions:\njs\nfunction findGreaterOrEqual(a, b) {\nif (a === b) {\nreturn \"a and b are equal\";\n}\nelse if (a > b) {\nreturn \"a is greater\";\n}\nelse {\nreturn \"b is greater\";\n}\n}\nThe above function can be re-written using multiple conditional operators:\njs\nfunction findGreaterOrEqual(a, b) {\nreturn (a === b) \"a and b are equal\"\n: (a > b) \"a is greater\"\n: \"b is greater\";\n}\nIt is considered best practice to format multiple conditional operators such that each condition is on a separate line, as shown above Using multiple conditional operators without proper indentation may make your code hard to read For example:\njs\nfunction findGreaterOrEqual(a, b) {\nreturn (a === b) \"a and b are equal\" : (a > b) \"a is greater\" : \"b is greater\";\n}\n--instructions--\nIn the checkSign function, use multiple conditional operators - following the recommended format used in findGreaterOrEqual - to check if a number is positive, negative or zero The function should return positive, negative or zero --hints--\ncheckSign should use multiple conditional operators\njs\nassert(/ + \\s* \\ \\s* + \\s* :\\s* + \\s* \\ \\s* + \\s* :\\s* + /gi test(__helpers removeJSComments(code)));\ncheckSign(10) should return the string positive Note that capitalization matters\njs\nassert(checkSign(10) === 'positive');\ncheckSign(-12) should return the string negative Note that capitalization matters\njs\nassert(checkSign(-12) === 'negative');\ncheckSign(0) should return the string zero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2292,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-multiple-conditional-ternary-operators.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a1c8fc461f1c336a9f9528bcd6da1096",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-multiple-conditional-ternary-operators.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a number is positive, negative or zero The function should return positive, negative or zero --hints-- checkSign should use multiple conditional operators js assert(/ + \\s* \\ \\s* + \\s* :\\s* + \\s* \\ \\s* + \\s* :\\s* + /gi test(__helpers removeJSComments(code))); checkSign(10) should return the string positive Note that capitalization matters js assert(checkSign(10) === 'positive'); checkSign(-12) should return the string negative Note that capitalization matters js assert(checkSign(-12) === 'negative'); checkSign(0) should return the string zeroNote that capitalization matters\njs\nassert(checkSign(0) === 'zero');\n--seed--\n--seed-contents--\n```js\nfunction checkSign(num) {\n}\ncheckSign(10);\n```\n--solutions--\njs\nfunction checkSign(num) {\nreturn (num > 0) 'positive' : (num < 0) 'negative' : 'zero';\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2292,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-multiple-conditional-ternary-operators.md",
      "source_type": "git_repo"
    },
    "token_count": 213,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "be365ab161dc7a79721f5f1252f47e92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-range-of-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cc0bd7a49b71cb96132e54c\ntitle: Use Recursion to Create a Range of Numbers\nchallengeType: 1\nforumTopicId: 301180\ndashedName: use-recursion-to-create-a-range-of-numbers\n--description--\nContinuing from the previous challenge, we provide you another opportunity to create a recursive function to solve a problem --instructions--\nWe have defined a function named rangeOfNumbers with two parameters The function should return an array of integers which begins with a number represented by the startNum parameter and ends with a number represented by the endNum parameter The starting number will always be less than or equal to the ending number Your function must use recursion by calling itself and not use loops of any kind It should also work for cases where both startNum and endNum are the same --hints--\nYour function should return an array js\nassert(Array isArray(rangeOfNumbers(5, 10)));\nYour code should not use any loop syntax (for or while or higher order functions such as forEach, map, filter, or reduce) js\nassert( __helpers removeJSComments(code) match(/for|while|forEach|map|filter|reduce/g)\n);\nrangeOfNumbers should use recursion (call itself) to solve this challenge js\nassert(\nrangeOfNumbers toString() match(/rangeOfNumbers\\s*\\( +\\)/)\n);\nrangeOfNumbers(1, 5) should return [1, 2, 3, 4, 5] js\nassert deepStrictEqual(rangeOfNumbers(1, 5), [1, 2, 3, 4, 5]);\nrangeOfNumbers(6, 9) should return [6, 7, 8, 9] js\nassert deepStrictEqual(rangeOfNumbers(6, 9), [6, 7, 8, 9]);\nrangeOfNumbers(4, 4) should return [4] js\nassert deepStrictEqual(rangeOfNumbers(4, 4), [4]);\nGlobal variables should not be used to cache the array js\nrangeOfNumbers(1, 3)\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2208,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-range-of-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c2712fba88da87b26d7467637a51bf25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-range-of-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "); rangeOfNumbers should use recursion (call itself) to solve this challenge js assert( rangeOfNumbers toString() match(/rangeOfNumbers\\s*\\( +\\)/) ); rangeOfNumbers(1, 5) should return [1, 2, 3, 4, 5] js assert deepStrictEqual(rangeOfNumbers(1, 5), [1, 2, 3, 4, 5]); rangeOfNumbers(6, 9) should return [6, 7, 8, 9] js assert deepStrictEqual(rangeOfNumbers(6, 9), [6, 7, 8, 9]); rangeOfNumbers(4, 4) should return [4] js assert deepStrictEqual(rangeOfNumbers(4, 4), [4]); Global variables should not be used to cache the array js rangeOfNumbers(1, 3) assertdeepStrictEqual(rangeOfNumbers(6, 9), [6, 7, 8, 9]);\n--seed--\n--seed-contents--\njs\nfunction rangeOfNumbers(startNum, endNum) {\nreturn [];\n};\n--solutions--\njs\nfunction rangeOfNumbers(startNum, endNum) {\nif (endNum - startNum === 0) {\nreturn [startNum];\n} else {\nconst numbers = rangeOfNumbers(startNum, endNum - 1);\nnumbers push(endNum);\nreturn numbers;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2208,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-range-of-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1a0b9d606a765bfc90aaf6850852af35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-the-parseint-function-with-a-radix.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7e367417b2b2512b22\ntitle: Use the parseInt Function with a Radix\nchallengeType: 1\nforumTopicId: 301182\ndashedName: use-the-parseint-function-with-a-radix\n--description--\nThe parseInt() function parses a string and returns an integer. It takes a second argument for the radix, which specifies the base of the number in the string. The radix can be an integer between 2 and 36.\nThe function call looks like:\njs\nparseInt(string, radix);\nAnd here's an example:\njs\nconst a = parseInt(\"11\", 2);\nThe radix variable says that 11 is in the binary system, or base 2. This example converts the string 11 to an integer 3.\n--instructions--\nUse parseInt() in the convertToInteger function so it converts a binary number to an integer and returns it.\n--hints--\nconvertToInteger should use the parseInt() function\njs\nassert(/parseInt/g.test(__helpers.removeJSComments(code)));\nconvertToInteger(\"10011\") should return a number\njs\nassert(typeof convertToInteger('10011') === 'number');\nconvertToInteger(\"10011\") should return 19\njs\nassert(convertToInteger('10011') === 19);\nconvertToInteger(\"111001\") should return 57\njs\nassert(convertToInteger('111001') === 57);\nconvertToInteger(\"JamesBond\") should return NaN\njs\nassert.isNaN(convertToInteger('JamesBond'));\n--seed--\n--seed-contents--\n```js\nfunction convertToInteger(str) {\n}\nconvertToInteger(\"10011\");\n```\n--solutions--\njs\nfunction convertToInteger(str) {\nreturn parseInt(str, 2);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1560,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-the-parseint-function-with-a-radix.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e30d4e603bdeffa10bd52d486e7fd04c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-the-parseint-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b7e367417b2b2512b23\ntitle: Use the parseInt Function\nchallengeType: 1\nforumTopicId: 301183\ndashedName: use-the-parseint-function\n--description--\nThe parseInt() function parses a string and returns an integer. Here's an example:\njs\nconst a = parseInt(\"007\");\nThe above function converts the string 007 to the integer 7. If the first character in the string can't be converted into a number, then it returns NaN.\n--instructions--\nUse parseInt() in the convertToInteger function so it converts the input string str into an integer, and returns it.\n--hints--\nconvertToInteger should use the parseInt() function\njs\nassert(/parseInt/g.test(__helpers.removeJSComments(code)));\nconvertToInteger(\"56\") should return a number\njs\nassert(typeof convertToInteger('56') === 'number');\nconvertToInteger(\"56\") should return 56\njs\nassert(convertToInteger('56') === 56);\nconvertToInteger(\"77\") should return 77\njs\nassert(convertToInteger('77') === 77);\nconvertToInteger(\"JamesBond\") should return NaN\njs\nassert.isNaN(convertToInteger('JamesBond'));\n--seed--\n--seed-contents--\n```js\nfunction convertToInteger(str) {\n}\nconvertToInteger(\"56\");\n```\n--solutions--\njs\nfunction convertToInteger(str) {\nreturn parseInt(str);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1334,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-the-parseint-function.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "303bcc0aafe57bdedcce5e8b9264e9b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-countdown.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cd9a70215d3c4e65518328f\ntitle: Use Recursion to Create a Countdown\nchallengeType: 1\nforumTopicId: 305925\ndashedName: use-recursion-to-create-a-countdown\n--description--\nIn a previous challenge, you learned how to use recursion to replace a for loop Now, let's look at a more complex function that returns an array of consecutive integers starting with 1 through the number passed to the function As mentioned in the previous challenge, there will be a base case The base case tells the recursive function when it no longer needs to call itself It is a simple case where the return value is already known There will also be a recursive call which executes the original function with different arguments If the function is written correctly, eventually the base case will be reached For example, say you want to write a recursive function that returns an array containing the numbers 1 through n This function will need to accept an argument, n, representing the final number Then it will need to call itself with progressively smaller values of n until it reaches 1 You could write the function as follows:\njavascript\nfunction countup(n) {\nif (n < 1) {\nreturn [];\n} else {\nconst countArray = countup(n - 1);\ncountArray push(n);\nreturn countArray;\n}\n}\nconsole log(countup(5));\nThe value [1, 2, 3, 4, 5] will be displayed in the console At first, this seems counterintuitive since the value of n decreases, but the values in the final array are increasing This happens because the push happens last, after the recursive call has returned At the point where n is pushed into the array, countup(n - 1) has already been evaluated and returned [1, 2, , n - 1] --instructions--\nWe have defined a function called countdown with one parameter (n) The function should use recursion to return an array containing the integers n through 1 based on the n parameter If the function is called with a number less than 1, the function should return an empty array For example, calling this function with n = 5 should return the array [5, 4, 3, 2, 1] Your function must use recursion by calling itself and must not use loops of any kind --hints--\ncountdown(-1) should return an empty array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-countdown.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f6eeb90b733b6253cb8535ef30f0d062",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-countdown.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "use recursion to return an array containing the integers n through 1 based on the n parameter If the function is called with a number less than 1, the function should return an empty array For example, calling this function with n = 5 should return the array [5, 4, 3, 2, 1] Your function must use recursion by calling itself and must not use loops of any kind --hints-- countdown(-1) should return an empty arrayjs\nassert isEmpty(countdown(-1));\ncountdown(10) should return [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\njs\nassert deepStrictEqual(countdown(10), [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]);\ncountdown(5) should return [5, 4, 3, 2, 1]\njs\nassert deepStrictEqual(countdown(5), [5, 4, 3, 2, 1]);\nYour code should not rely on any kind of loops (for, while or higher order functions such as forEach, map, filter, and reduce) js\nassert( __helpers removeJSComments(code) match(/for|while|forEach|map|filter|reduce/g)\n);\nYou should use recursion to solve this problem js\nassert(\ncountdown toString() match(/countdown\\s*\\( +\\)/)\n);\nGlobal variables should not be used to cache the array js\ncountdown(1)\nassert deepStrictEqual(countdown(5), [5, 4, 3, 2, 1]);\n--seed--\n--seed-contents--\njs\n// Only change code below this line\nfunction countdown(n){\nreturn;\n}\n// Only change code above this line\n--solutions--\njs\nfunction countdown(n){\nreturn n < 1 [] : [n] concat(countdown(n - 1));\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\use-recursion-to-create-a-countdown.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8ac0275daea8a81cdbdaf3c590b5e27d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\write-reusable-javascript-with-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56bbb991ad1ed5201cd392cf\ntitle: Write Reusable JavaScript with Functions\nchallengeType: 1\nforumTopicId: 18378\ndashedName: write-reusable-javascript-with-functions\n--description--\nIn JavaScript, we can divide up our code into reusable parts called functions.\nHere's an example of a function:\njs\nfunction functionName() {\nconsole.log(\"Hello World\");\n}\nYou can call or invoke this function by using its name followed by parentheses, like this: functionName(); Each time the function is called it will print out the message Hello World on the dev console. All of the code between the curly braces will be executed every time the function is called.\n--instructions--\nCreate a function called reusableFunction which prints the string Hi World to the dev console.\nCall the function.\n--hints--\nreusableFunction should be a function.\njs\nassert(typeof reusableFunction === 'function');\nIf reusableFunction is called, it should output the string Hi World to the console.\njs\nassert(testConsole());\nYou should call reusableFunction once it is defined.\njs\nconst functionStr = reusableFunction && __helpers.removeWhiteSpace(reusableFunction.toString());\nconst codeWithoutFunction = __helpers.removeWhiteSpace(__helpers.removeJSComments(code)).replace(/reusableFunction\\(\\)\\{/g, '');\nassert(/reusableFunction\\(\\)/.test(codeWithoutFunction));\n--seed--\n--after-user-code--\n```js\nfunction testConsole() {\nvar logOutput = \"\";\nvar originalConsole = console;\nvar nativeLog = console.log;\nvar hiWorldWasLogged = false;\nconsole.log = function (message) {\nif(message === 'Hi World')  {\nconsole.warn(message)\nhiWorldWasLogged = true;\n}\nif(message && message.trim) logOutput = message.trim();\nif(nativeLog.apply) {\nnativeLog.apply(originalConsole, arguments);\n} else {\nvar nativeMsg = Array.prototype.slice.apply(arguments).join(' ');\nnativeLog(nativeMsg);\n}\n};\nreusableFunction();\nconsole.log = nativeLog;\nreturn hiWorldWasLogged;\n}\n```\n--seed-contents--\n```js\n```\n--solutions--\njs\nfunction reusableFunction() {\nconsole.log(\"Hi World\");\n}\nreusableFunction();",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2305,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\write-reusable-javascript-with-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "148abb1a5447a486a723b34eece44fb5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-arguments-passed-in-the-wrong-order-when-calling-a-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b85367417b2b2512b3a\ntitle: Catch Arguments Passed in the Wrong Order When Calling a Function\nchallengeType: 1\nforumTopicId: 301184\ndashedName: catch-arguments-passed-in-the-wrong-order-when-calling-a-function\n--description--\nContinuing the discussion on calling functions, the next bug to watch out for is when a function's arguments are supplied in the incorrect order. If the arguments are different types, such as a function expecting an array and an integer, this will likely throw a runtime error. If the arguments are the same type (all integers, for example), then the logic of the code won't make sense. Make sure to supply all required arguments, in the proper order to avoid these issues.\n--instructions--\nThe function raiseToPower raises a base to an exponent. Unfortunately, it's not called properly - fix the code so the value of power is the expected 8.\n--hints--\nYour code should fix the variable power so it equals 2 raised to the 3rd power, not 3 raised to the 2nd power.\njs\nassert(power == 8);\nYour code should use the correct order of the arguments for the raiseToPower function call.\njs\nassert(__helpers.removeJSComments(code).match(/raiseToPower\\(\\s*?base\\s*?,\\s*?exp\\s*?\\);/g));\n--seed--\n--seed-contents--\n```js\nfunction raiseToPower(b, e) {\nreturn Math.pow(b, e);\n}\nlet base = 2;\nlet exp = 3;\nlet power = raiseToPower(exp, base);\nconsole.log(power);\n```\n--solutions--\n```js\nfunction raiseToPower(b, e) {\nreturn Math.pow(b, e);\n}\nlet base = 2;\nlet exp = 3;\nlet power = raiseToPower(base, exp);\nconsole.log(power);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1611,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-arguments-passed-in-the-wrong-order-when-calling-a-function.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5defbfe3b1245c40e5d3670c8a82e69c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\word-blanks.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244bb\ntitle: Word Blanks\nchallengeType: 1\nforumTopicId: 18377\ndashedName: word-blanks\n--description--\nYou are provided sentences with some missing words, like nouns, verbs, adjectives and adverbs You then fill in the missing pieces with words of your choice in a way that the completed sentence makes sense Consider this sentence:\nmd\nIt was really ____, and we ____ ourselves ____ This sentence has three missing pieces- an adjective, a verb and an adverb, and we can add words of our choice to complete it We can then assign the completed sentence to a variable as follows:\njs\nconst sentence = \"It was really \" + \"hot\" + \", and we \" + \"laughed\" + \" ourselves \" + \"silly\" + \" \";\n--instructions--\nIn this challenge, we provide you with a noun, a verb, an adjective and an adverb You need to form a complete sentence using words of your choice, along with the words we provide You will need to use the string concatenation operator + to build a new string, using the provided variables: myNoun, myAdjective, myVerb, and myAdverb You will then assign the formed string to the wordBlanks variable You should not change the words assigned to the variables You will also need to account for spaces in your string, so that the final sentence has spaces between all the words The result should be a complete sentence --hints--\nwordBlanks should be a string js\nassert(typeof wordBlanks === 'string');\nYou should not change the values assigned to myNoun, myVerb, myAdjective or myAdverb js\nassert(\nmyNoun === 'dog' &&\nmyVerb === 'ran' &&\nmyAdjective === 'big' &&\nmyAdverb === 'quickly'\n);\nYou should not directly use the values dog, ran, big, or quickly to create wordBlanks js\nconst newCode = removeAssignments(__helpers removeJSComments(code));\nassert( /dog/ test(newCode) && /ran/ test(newCode) && /big/ test(newCode) && /quickly/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3168,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\word-blanks.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9d0494cfe395579b5e5085a42787d935",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\word-blanks.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "complete sentence --hints-- wordBlanks should be a string js assert(typeof wordBlanks === 'string'); You should not change the values assigned to myNoun, myVerb, myAdjective or myAdverb js assert( myNoun === 'dog' && myVerb === 'ran' && myAdjective === 'big' && myAdverb === 'quickly' ); You should not directly use the values dog, ran, big, or quickly to create wordBlanks js const newCode = removeAssignments(__helpers removeJSComments(code)); assert( /dog/ test(newCode) && /ran/ test(newCode) && /big/ test(newCode) && /quickly/test(newCode)\n);\nwordBlanks should contain all of the words assigned to the variables myNoun, myVerb, myAdjective and myAdverb separated by non-word characters (and any additional words of your choice) js\nassert(\n/\\bdog\\b/ test(wordBlanks) &&\n/\\bbig\\b/ test(wordBlanks) &&\n/\\bran\\b/ test(wordBlanks) &&\n/\\bquickly\\b/ test(wordBlanks)\n);\n--seed--\n--after-user-code--\njs\nconst removeAssignments = str => str replace(/myNoun\\s*=\\s*[\"']dog[\"']/g, '') replace(/myAdjective\\s*=\\s*[\"']big[\"']/g, '') replace(/myVerb\\s*=\\s*[\"']ran[\"']/g, '') replace(/myAdverb\\s*=\\s*[\"']quickly[\"']/g, '');\n--seed-contents--\n```js\nconst myNoun = \"dog\";\nconst myAdjective = \"big\";\nconst myVerb = \"ran\";\nconst myAdverb = \"quickly\";\n// Only change code below this line\nconst wordBlanks = \"\"; // Change this line\n// Only change code above this line\n```\n--solutions--\n```js\nconst myNoun = \"dog\";\nconst myAdjective = \"big\";\nconst myVerb = \"ran\";\nconst myAdverb = \"quickly\";\nlet wordBlanks = \"Once there was a \" + myNoun + \" which was very \" + myAdjective + \" \";\nwordBlanks += \"It \" + myVerb + \" \" + myAdverb + \" around the yard \";\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3168,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\word-blanks.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1d24c582a33228d3202c897d3824d78c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-missing-open-and-closing-parenthesis-after-a-function-call.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b85367417b2b2512b39\ntitle: Catch Missing Open and Closing Parenthesis After a Function Call\nchallengeType: 1\nforumTopicId: 301185\ndashedName: catch-missing-open-and-closing-parenthesis-after-a-function-call\n--description--\nWhen a function or method doesn't take any arguments, you may forget to include the (empty) opening and closing parentheses when calling it. Often times the result of a function call is saved in a variable for other use in your code. This error can be detected by logging variable values (or their types) to the console and seeing that one is set to a function reference, instead of the expected value the function returns.\nThe variables in the following example are different:\njs\nfunction myFunction() {\nreturn \"You rock!\";\n}\nlet varOne = myFunction;\nlet varTwo = myFunction();\nHere varOne is the function myFunction, and varTwo is the string You rock!.\n--instructions--\nFix the code so the variable result is set to the value returned from calling the function getNine.\n--hints--\nYour code should fix the variable result so it is set to the number that the function getNine returns.\njs\nassert(result == 9);\nYour code should call the getNine function.\njs\nassert(__helpers.removeJSComments(code).match(/getNine\\(\\)/g).length == 2);\n--seed--\n--seed-contents--\n```js\nfunction getNine() {\nlet x = 6;\nlet y = 3;\nreturn x + y;\n}\nlet result = getNine;\nconsole.log(result);\n```\n--solutions--\n```js\nfunction getNine() {\nlet x = 6;\nlet y = 3;\nreturn x + y;\n}\nlet result = getNine();\nconsole.log(result);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1621,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-missing-open-and-closing-parenthesis-after-a-function-call.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fb5bdf3daae9aa61cae23d4b14a540ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-misspelled-variable-and-function-names.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b84367417b2b2512b35\ntitle: Catch Misspelled Variable and Function Names\nchallengeType: 1\nforumTopicId: 301186\ndashedName: catch-misspelled-variable-and-function-names\n--description--\nThe console.log() and typeof methods are the two primary ways to check intermediate values and types of program output. Now it's time to get into the common forms that bugs take. One syntax-level issue that fast typers can commiserate with is the humble spelling error.\nTransposed, missing, or miscapitalized characters in a variable or function name will have the browser looking for an object that doesn't exist - and complain in the form of a reference error. JavaScript variable and function names are case-sensitive.\n--instructions--\nFix the two spelling errors in the code so the netWorkingCapital calculation works.\n--hints--\nCheck the spelling of the two variables used in the netWorkingCapital calculation, the console output should show that \"Net working capital is: 2\".\njs\nassert(netWorkingCapital === 2);\nThere should be no instances of misspelled variables in the code.\njs\nassert(!__helpers.removeJSComments(code).match(/recievables/g));\nThe receivables variable should be declared and used properly in the code.\njs\nassert(__helpers.removeJSComments(code).match(/receivables/g).length == 2);\nThere should be no instances of misspelled variables in the code.\njs\nassert(!__helpers.removeJSComments(code).match(/payable;/g));\nThe payables variable should be declared and used properly in the code.\njs\nassert(__helpers.removeJSComments(code).match(/payables/g).length == 2);\n--seed--\n--seed-contents--\njs\nlet receivables = 10;\nlet payables = 8;\nlet netWorkingCapital = recievables - payable;\nconsole.log(`Net working capital is: ${netWorkingCapital}`);\n--solutions--\njs\nlet receivables = 10;\nlet payables = 8;\nlet netWorkingCapital = receivables - payables;\nconsole.log(`Net working capital is: ${netWorkingCapital}`);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2021,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-misspelled-variable-and-function-names.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3ea3e1efca5f1618506f5f16a4c00880",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\using-objects-for-lookups.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244ca\ntitle: Using Objects for Lookups\nchallengeType: 1\nforumTopicId: 18373\ndashedName: using-objects-for-lookups\n--description--\nObjects can be thought of as a key/value storage, like a dictionary If you have tabular data, you can use an object to lookup values rather than a switch statement or an if/else chain This is most useful when you know that your input data is limited to a certain range Here is an example of an article object:\n```js\nconst article = {\n\"title\": \"How to create objects in JavaScript\",\n\"link\": \"https://www freecodecamp org/news/a-complete-guide-to-creating-objects-in-javascript-b0e2450655e8/\",\n\"author\": \"Kaashan Hussain\",\n\"language\": \"JavaScript\",\n\"tags\": \"TECHNOLOGY\",\n\"createdAt\": \"NOVEMBER 28, 2018\"\n};\nconst articleAuthor = article[\"author\"];\nconst articleLink = article[\"link\"];\nconst value = \"title\";\nconst valueLookup = article[value];\n```\narticleAuthor is the string Kaashan Hussain, articleLink is the string https://www freecodecamp org/news/a-complete-guide-to-creating-objects-in-javascript-b0e2450655e8/, and valueLookup is the string How to create objects in JavaScript --instructions--\nConvert the switch statement into an object called lookup Use it to look up val and assign the associated string to the result variable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3330,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\using-objects-for-lookups.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2b474068c40994dbe4bc237eb8c23bf1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\using-objects-for-lookups.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Hussain\", \"language\": \"JavaScript\", \"tags\": \"TECHNOLOGY\", \"createdAt\": \"NOVEMBER 28, 2018\" }; const articleAuthor = article[\"author\"]; const articleLink = article[\"link\"]; const value = \"title\"; const valueLookup = article[value]; ``` articleAuthor is the string Kaashan Hussain, articleLink is the string https://www freecodecamp org/news/a-complete-guide-to-creating-objects-in-javascript-b0e2450655e8/, and valueLookup is the string How to create objects in JavaScript --instructions-- Convert the switch statement into an object called lookup Use it to look up val and assign the associated string to the result variable--hints--\nphoneticLookup(\"alpha\") should equal the string Adams\njs\nassert(phoneticLookup('alpha') === 'Adams');\nphoneticLookup(\"bravo\") should equal the string Boston\njs\nassert(phoneticLookup('bravo') === 'Boston');\nphoneticLookup(\"charlie\") should equal the string Chicago\njs\nassert(phoneticLookup('charlie') === 'Chicago');\nphoneticLookup(\"delta\") should equal the string Denver\njs\nassert(phoneticLookup('delta') === 'Denver');\nphoneticLookup(\"echo\") should equal the string Easy\njs\nassert(phoneticLookup('echo') === 'Easy');\nphoneticLookup(\"foxtrot\") should equal the string Frank\njs\nassert(phoneticLookup('foxtrot') === 'Frank');\nphoneticLookup(\"\") should equal undefined\njs\nassert(typeof phoneticLookup('') === 'undefined');\nYou should not modify the return statement\njs\nassert(__helpers removeJSComments(code) match(/return\\sresult;/));\nYou should not use case, switch, or if statements\njs\nassert( /case|switch|if/g test(__helpers removeJSComments(code) replace(/([/]{2}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3330,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\using-objects-for-lookups.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2726ec030197ce2b0dfeb70892b70812",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\using-objects-for-lookups.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Boston'); phoneticLookup(\"charlie\") should equal the string Chicago js assert(phoneticLookup('charlie') === 'Chicago'); phoneticLookup(\"delta\") should equal the string Denver js assert(phoneticLookup('delta') === 'Denver'); phoneticLookup(\"echo\") should equal the string Easy js assert(phoneticLookup('echo') === 'Easy'); phoneticLookup(\"foxtrot\") should equal the string Frank js assert(phoneticLookup('foxtrot') === 'Frank'); phoneticLookup(\"\") should equal undefined js assert(typeof phoneticLookup('') === 'undefined'); You should not modify the return statement js assert(__helpers removeJSComments(code) match(/return\\sresult;/)); You should not use case, switch, or if statements js assert( /case|switch|if/g test(__helpers removeJSComments(code) replace(/([/]{2}*)|([/][*][^/*]*[*][/])/g, ''))\n);\n--seed--\n--seed-contents--\n```js\n// Setup\nfunction phoneticLookup(val) {\nlet result = \"\";\n// Only change code below this line\nswitch(val) {\ncase \"alpha\":\nresult = \"Adams\";\nbreak;\ncase \"bravo\":\nresult = \"Boston\";\nbreak;\ncase \"charlie\":\nresult = \"Chicago\";\nbreak;\ncase \"delta\":\nresult = \"Denver\";\nbreak;\ncase \"echo\":\nresult = \"Easy\";\nbreak;\ncase \"foxtrot\":\nresult = \"Frank\";\n}\n// Only change code above this line\nreturn result;\n}\nphoneticLookup(\"charlie\");\n```\n--solutions--\n```js\nfunction phoneticLookup(val) {\nlet result = \"\";\nconst lookup = {\nalpha: \"Adams\",\nbravo: \"Boston\",\ncharlie: \"Chicago\",\ndelta: \"Denver\",\necho: \"Easy\",\nfoxtrot: \"Frank\"\n};\nresult = lookup[val];\nreturn result;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3330,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\basic-javascript\\using-objects-for-lookups.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c40b39e1eb683151e4e98ef14c4fea7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-mixed-usage-of-single-and-double-quotes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b84367417b2b2512b37\ntitle: Catch Mixed Usage of Single and Double Quotes\nchallengeType: 1\nforumTopicId: 301188\ndashedName: catch-mixed-usage-of-single-and-double-quotes\n--description--\nJavaScript allows the use of both single (') and double (\") quotes to declare a string. Deciding which one to use generally comes down to personal preference, with some exceptions.\nHaving two choices is great when a string has contractions or another piece of text that's in quotes. Just be careful that you don't close the string too early, which causes a syntax error.\nHere are some examples of mixing quotes:\njs\nconst grouchoContraction = \"I've had a perfectly wonderful evening, but this wasn't it.\";\nconst quoteInString = \"Groucho Marx once said 'Quote me as saying I was mis-quoted.'\";\nconst uhOhGroucho = 'I've had a perfectly wonderful evening, but this wasn't it.';\nThe first two are correct, but the third is incorrect.\nOf course, it is okay to use only one style of quotes. You can escape the quotes inside the string by using the backslash (\\) escape character:\njs\nconst allSameQuotes = 'I\\'ve had a perfectly wonderful evening, but this wasn\\'t it.';\n--instructions--\nFix the string so it either uses different quotes for the href value, or escape the existing ones. Keep the double quote marks around the entire string.\n--hints--\nYour code should fix the quotes around the href value #Home by either changing or escaping them.\njs\nassert(__helpers.removeJSComments(code).match(/<a href=\\s*?('|\\\\\")#Home\\1\\s*?>/g));\nYour code should keep the double quotes around the entire string.\njs\nassert(__helpers.removeJSComments(code).match(/\"<p>.*?<\\/p>\";/g));\n--seed--\n--seed-contents--\njs\nlet innerHtml = \"<p>Click here to <a href=\"#Home\">return home</a></p>\";\nconsole.log(innerHtml);\n--solutions--\njs\nlet innerHtml = \"<p>Click here to <a href=\\\"#Home\\\">return home</a></p>\";\nconsole.log(innerHtml);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1994,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-mixed-usage-of-single-and-double-quotes.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "889366d1a0dd6db2be3de2ca317fbe2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-unclosed-parentheses-brackets-braces-and-quotes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b84367417b2b2512b36\ntitle: 'Catch Unclosed Parentheses, Brackets, Braces and Quotes'\nchallengeType: 1\nforumTopicId: 301190\ndashedName: catch-unclosed-parentheses-brackets-braces-and-quotes\n--description--\nAnother syntax error to be aware of is that all opening parentheses, brackets, curly braces, and quotes have a closing pair. Forgetting a piece tends to happen when you're editing existing code and inserting items with one of the pair types. Also, take care when nesting code blocks into others, such as adding a callback function as an argument to a method.\nOne way to avoid this mistake is as soon as the opening character is typed, immediately include the closing match, then move the cursor back between them and continue coding. Fortunately, most modern code editors generate the second half of the pair automatically.\n--instructions--\nFix the two pair errors in the code.\n--hints--\nYour code should fix the missing piece of the array.\njs\nassert(__helpers.removeJSComments(code).match(/myArray\\s*?=\\s*?\\[\\s*?1\\s*?,\\s*?2\\s*?,\\s*?3\\s*?\\];/g));\nYour code should fix the missing piece of the .reduce() method. The console output should show that Sum of array values is: 6.\njs\nassert(arraySum === 6);\n--seed--\n--seed-contents--\njs\nlet myArray = [1, 2, 3;\nlet arraySum = myArray.reduce((previous, current =>  previous + current);\nconsole.log(`Sum of array values is: ${arraySum}`);\n--solutions--\njs\nlet myArray = [1, 2, 3];\nlet arraySum = myArray.reduce((previous, current) =>  previous + current);\nconsole.log(`Sum of array values is: ${arraySum}`);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1632,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-unclosed-parentheses-brackets-braces-and-quotes.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c1a5621354c106776297c1ad9befef4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-off-by-one-errors-when-using-indexing.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b86367417b2b2512b3b\ntitle: Catch Off By One Errors When Using Indexing\nchallengeType: 1\nforumTopicId: 301189\ndashedName: catch-off-by-one-errors-when-using-indexing\n--description--\nOff by one errors (sometimes called OBOE) crop up when you're trying to target a specific index of a string or array (to slice or access a segment), or when looping over the indices of them JavaScript indexing starts at zero, not one, which means the last index is always one less than the length of the item If you try to access an index equal to the length, the program may throw an \"index out of range\" reference error or print undefined When you use string or array methods that take index ranges as arguments, it helps to read the documentation and understand if they are inclusive (the item at the given index is part of what's returned) or not Here are some examples of off by one errors:\njs\nlet alphabet = \"abcdefghijklmnopqrstuvwxyz\";\nlet len = alphabet length;\nfor (let i = 0; i <= len; i++) {\nconsole log(alphabet[i]);\n}\nfor (let j = 1; j < len; j++) {\nconsole log(alphabet[j]);\n}\nfor (let k = 0; k < len; k++) {\nconsole log(alphabet[k]);\n}\nThe first example here loops one too many times, and the second loops one too few times (missing the first index, 0) The third example is correct --instructions--\nFix the two indexing errors in the following function so all the numbers 1 through 5 are printed to the console --hints--\nYour code should set the initial condition of the loop so it starts at the first index js\nassert(__helpers removeJSComments(code) match(/i\\s* =\\s* 0\\s* ;/g) length == 1);\nYour code should fix the initial condition of the loop so that the index starts at 0 js\nassert( __helpers removeJSComments(code) match(/i\\s =\\s* 1\\s* ;/g));\nYour code should set the terminal condition of the loop so it stops at the last index js\nassert(__helpers removeJSComments(code) match(/i\\s*<\\s*len\\s*;|i\\s*<=\\s*len\\s*-\\s*1\\s*;/g)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2769,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-off-by-one-errors-when-using-indexing.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a3e064ba94913efe634bced79016fba5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-off-by-one-errors-when-using-indexing.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the console --hints-- Your code should set the initial condition of the loop so it starts at the first index js assert(__helpers removeJSComments(code) match(/i\\s* =\\s* 0\\s* ;/g) length == 1); Your code should fix the initial condition of the loop so that the index starts at 0 js assert( __helpers removeJSComments(code) match(/i\\s =\\s* 1\\s* ;/g)); Your code should set the terminal condition of the loop so it stops at the last index js assert(__helpers removeJSComments(code) match(/i\\s*<\\s*len\\s*;|i\\s*<=\\s*len\\s*-\\s*1\\s*;/g)length == 1);\nYour code should fix the terminal condition of the loop so that it stops at 1 before the length js\nassert( __helpers removeJSComments(code) match(/i\\s* <=\\s* len;/g));\n--seed--\n--seed-contents--\n```js\nfunction countToFive() {\nlet firstFive = \"12345\";\nlet len = firstFive length;\n// Only change code below this line\nfor (let i = 1; i <= len; i++) {\n// Only change code above this line\nconsole log(firstFive[i]);\n}\n}\ncountToFive();\n```\n--solutions--\n```js\nfunction countToFive() {\nlet firstFive = \"12345\";\nlet len = firstFive length;\n// Only change code below this line\nfor (let i = 0; i < len; i++) {\n// Only change code above this line\nconsole log(firstFive[i]);\n}\n}\ncountToFive();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2769,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-off-by-one-errors-when-using-indexing.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "77ca1c4e119a761c547c1d8524c1c1e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\understanding-the-differences-between-the-freecodecamp-and-browser-console.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b83367417b2b2512b37\ntitle: Understanding the Differences between the freeCodeCamp and Browser Console\nchallengeType: 1\nforumTopicId: 301193\ndashedName: understanding-the-differences-between-the-freecodecamp-and-browser-console\n--description--\nYou may have noticed that some freeCodeCamp challenges include their own console. This console behaves a little differently than the browser console.\nThere are many methods to use with console to output messages. log, warn, and clear to name a few. The freeCodeCamp console will only output log messages, while the browser console will output all messages. When you make changes to your code, it will automatically run and show the logs. The freeCodeCamp console is then cleared each time your code runs.\n--instructions--\nFirst, open your browser console so you can see the logs. To do that, you can right-click the freeCodeCamp navigation bar at the top and click inspect on most browsers. Then find the console tab in the window that opens.\nAfter that, use console.log to log the output variable. View the two consoles to see the log. Finally, use console.clear after your log to clear the browser console. View the difference in the two consoles.\n--hints--\nYou should use console.log() to print the output variable.\njs\nassert(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)).match(/console\\.log\\(output\\)/));\nYou should use console.clear() to clear the browser console.\njs\nassert(\n__helpers\n.removeWhiteSpace(__helpers.removeJSComments(code))\n.match(/console.clear\\(\\)/)\n);\nYou should clear the console after your log.\njs\nassert(\n__helpers\n.removeWhiteSpace(__helpers.removeJSComments(code))\n.match(/console\\.log\\(output\\)[\\s\\S]*console.clear\\(\\)/)\n);\n--seed--\n--seed-contents--\n```js\nlet output = \"Get this to show once in the freeCodeCamp console and not at all in the browser console\";\n```\n--solutions--\n```js\nlet output = \"Get this to show once in the freeCodeCamp console and not at all in the browser console\";\nconsole.log(output);\nconsole.clear();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\understanding-the-differences-between-the-freecodecamp-and-browser-console.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "62ba44d768cfdd98591e6df25bdb3b76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\prevent-infinite-loops-with-a-valid-terminal-condition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b86367417b2b2512b3d\ntitle: Prevent Infinite Loops with a Valid Terminal Condition\nchallengeType: 1\nforumTopicId: 301192\ndashedName: prevent-infinite-loops-with-a-valid-terminal-condition\n--description--\nThe final topic is the dreaded infinite loop Loops are great tools when you need your program to run a code block a certain number of times or until a condition is met, but they need a terminal condition that ends the looping Infinite loops are likely to freeze or crash the browser, and cause general program execution mayhem, which no one wants There was an example of an infinite loop in the introduction to this section - it had no terminal condition to break out of the while loop inside loopy() Do NOT call this function js\nfunction loopy() {\nwhile(true) {\nconsole log(\"Hello, world \");\n}\n}\nIt's the programmer's job to ensure that the terminal condition, which tells the program when to break out of the loop code, is eventually reached One error is incrementing or decrementing a counter variable in the wrong direction from the terminal condition Another one is accidentally resetting a counter or index variable within the loop code, instead of incrementing or decrementing it --instructions--\nThe myFunc() function contains an infinite loop because the terminal condition i = 4 will never evaluate to false (and break the looping) - i will increment by 2 each pass, and jump right over 4 since i is odd to start Fix the comparison operator in the terminal condition so the loop only runs for i less than or equal to 4 --hints--\nYour code should change the comparison operator in the terminal condition (the middle part) of the for loop js\nassert(__helpers removeJSComments(code) match(/i\\s* <=\\s* 4;/g) length == 1);\nYour code should fix the comparison operator in the terminal condition of the loop js\nassert( __helpers removeJSComments(code) match(/i\\s* =\\s* 4;/g));\n--seed--\n--seed-contents--\njs\nfunction myFunc() {\nfor (let i = 1; i = 4; i += 2) {\nconsole log(\"Still going \");\n}\n}\n--solutions--\njs\nfunction myFunc() {\nfor (let i = 1; i <= 4; i += 2) {\nconsole log(\"Still going",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2239,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\prevent-infinite-loops-with-a-valid-terminal-condition.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cbb86ebc81d29931cc64233812d48e84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\prevent-infinite-loops-with-a-valid-terminal-condition.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for loop js assert(__helpers removeJSComments(code) match(/i\\s* <=\\s* 4;/g) length == 1); Your code should fix the comparison operator in the terminal condition of the loop js assert( __helpers removeJSComments(code) match(/i\\s* =\\s* 4;/g)); --seed-- --seed-contents-- js function myFunc() { for (let i = 1; i = 4; i += 2) { console log(\"Still going \"); } } --solutions-- js function myFunc() { for (let i = 1; i <= 4; i += 2) { console log(\"Still going\");\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2239,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\prevent-infinite-loops-with-a-valid-terminal-condition.md",
      "source_type": "git_repo"
    },
    "token_count": 146,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2c03434ac38e219b6c7b187e571763cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-use-of-assignment-operator-instead-of-equality-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b85367417b2b2512b38\ntitle: Catch Use of Assignment Operator Instead of Equality Operator\nchallengeType: 1\nforumTopicId: 301191\ndashedName: catch-use-of-assignment-operator-instead-of-equality-operator\n--description--\nBranching programs, i e ones that do different things if certain conditions are met, rely on if, else if, and else statements in JavaScript The condition sometimes takes the form of testing whether a result is equal to a value This logic is spoken (in English, at least) as \"if x equals y, then \" which can literally translate into code using the =, or assignment operator This leads to unexpected control flow in your program As covered in previous challenges, the assignment operator (=) in JavaScript assigns a value to a variable name And the == and === operators check for equality (the triple === tests for strict equality, meaning both value and type are the same) The code below assigns x to be 2, which evaluates as true Almost every value on its own in JavaScript evaluates to true, except what are known as the \"falsy\" values: false, 0, \"\" (an empty string), NaN, undefined, and null ```js\nlet x = 1;\nlet y = 2;\nif (x = y) {\n} else {\n}\n```\nIn this example, the code block within the if statement will run for any value of y, unless y is falsy The else block, which we expect to run here, will not actually run --instructions--\nFix the condition so the program runs the right branch, and the appropriate value is assigned to result --hints--\nYour code should fix the condition so it checks for equality, instead of using assignment js\nassert(result == 'Not equal ');\nThe condition should use either == or === to test for equality js\nassert(__helpers removeJSComments(code) match(/x\\s* === \\s* y/g));\n--seed--\n--seed-contents--\n```js\nlet x = 7;\nlet y = 9;\nlet result = \"to come\";\nif(x = y) {\nresult = \"Equal \";\n} else {\nresult = \"Not equal \";\n}\nconsole log(result);\n```\n--solutions--\n```js\nlet x = 7;\nlet y = 9;\nlet result = \"to come\";\nif(x === y) {\nresult = \"Equal",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2194,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-use-of-assignment-operator-instead-of-equality-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cb11fdad0f5aab73810ea565778072d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-use-of-assignment-operator-instead-of-equality-operator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "condition should use either == or === to test for equality js assert(__helpers removeJSComments(code) match(/x\\s* === \\s* y/g)); --seed-- --seed-contents-- ```js let x = 7; let y = 9; let result = \"to come\"; if(x = y) { result = \"Equal \"; } else { result = \"Not equal \"; } console log(result); ``` --solutions-- ```js let x = 7; let y = 9; let result = \"to come\"; if(x === y) { result = \"Equal\";\n} else {\nresult = \"Not equal \";\n}\nconsole log(result);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2194,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\catch-use-of-assignment-operator-instead-of-equality-operator.md",
      "source_type": "git_repo"
    },
    "token_count": 138,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "796765b747da2de552cb46491d8c898e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-typeof-to-check-the-type-of-a-variable.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b84367417b2b2512b34\ntitle: Use typeof to Check the Type of a Variable\nchallengeType: 1\nforumTopicId: 18374\ndashedName: use-typeof-to-check-the-type-of-a-variable\n--description--\nYou can use typeof to check the data structure, or type, of a variable. This is useful in debugging when working with multiple data types. If you think you're adding two numbers, but one is actually a string, the results can be unexpected. Type errors can lurk in calculations or function calls. Be careful especially when you're accessing and working with external data in the form of a JavaScript Object Notation (JSON) object.\nHere are some examples using typeof:\njs\nconsole.log(typeof \"\");\nconsole.log(typeof 0);\nconsole.log(typeof []);\nconsole.log(typeof {});\nIn order, the console will display the strings string, number, object, and object.\nJavaScript recognizes seven primitive (immutable) data types: Boolean, Null, Undefined, Number, String, Symbol (new with ES6), and BigInt (new with ES2020), and one type for mutable items: Object. Note that in JavaScript, arrays are technically a type of object.\n--instructions--\nAdd two console.log() statements to check the typeof each of the two variables seven and three in the code.\n--hints--\nYour code should use typeof in two console.log() statements to check the type of the variables.\njs\nassert(__helpers.removeJSComments(code).match(/console\\.log\\s*\\(typeof[\\( ].*\\)?\\)/g).length == 2);\nYour code should use typeof to check the type of the variable seven.\njs\nassert(__helpers.removeJSComments(code).match(/typeof[\\( ]seven\\)?/g));\nYour code should use typeof to check the type of the variable three.\njs\nassert(__helpers.removeJSComments(code).match(/typeof[\\( ]three\\)?/g));\n--seed--\n--seed-contents--\njs\nlet seven = 7;\nlet three = \"3\";\nconsole.log(seven + three);\n// Only change code below this line\n--solutions--\njs\nlet seven = 7;let three = \"3\";console.log(typeof seven);\nconsole.log(typeof three);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-typeof-to-check-the-type-of-a-variable.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0d64c6803c7d319ad9e8223cd40625af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-the-javascript-console-to-check-the-value-of-a-variable.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b83367417b2b2512b33\ntitle: Use the JavaScript Console to Check the Value of a Variable\nchallengeType: 1\nforumTopicId: 18372\ndashedName: use-the-javascript-console-to-check-the-value-of-a-variable\n--description--\nBoth Chrome and Firefox have excellent JavaScript consoles, also known as DevTools, for debugging your JavaScript.\nYou can find Developer tools in your Chrome's menu or Web Console in Firefox's menu. If you're using a different browser, or a mobile phone, we strongly recommend switching to desktop Firefox or Chrome.\nThe console.log() method, which \"prints\" the output of what's within its parentheses to the console, will likely be the most helpful debugging tool. Placing it at strategic points in your code can show you the intermediate values of variables. It's good practice to have an idea of what the output should be before looking at what it is. Having check points to see the status of your calculations throughout your code will help narrow down where the problem is.\nHere's an example to print the string Hello world! to the console:\njs\nconsole.log('Hello world!');\n--instructions--\nUse the console.log() method to print the value of the variable a where noted in the code.\n--hints--\nYour code should use console.log() to check the value of the variable a.\njs\nassert(__helpers.removeJSComments(code).match(/console\\.log\\(a\\)/g));\n--seed--\n--seed-contents--\n```js\nlet a = 5;\nlet b = 1;\na++;\n// Only change code below this line\nlet sumAB = a + b;\nconsole.log(sumAB);\n```\n--solutions--\njs\nvar a = 5; console.log(a);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-the-javascript-console-to-check-the-value-of-a-variable.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "758a652d910caee6242567ba50fc34ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-a-javascript-promise.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cdafbb0291309899753167f\ntitle: Create a JavaScript Promise\nchallengeType: 1\nforumTopicId: 301197\ndashedName: create-a-javascript-promise\n--description--\nA promise in JavaScript is exactly what it sounds like - you use it to make a promise to do something, usually asynchronously. When the task completes, you either fulfill your promise or fail to do so. Promise is a constructor function, so you need to use the new keyword to create one. It takes a function, as its argument, with two parameters - resolve and reject. These are methods used to determine the outcome of the promise. The syntax looks like this:\n```js\nconst myPromise = new Promise((resolve, reject) => {\n});\n```\n--instructions--\nCreate a new promise called makeServerRequest. Pass in a function with resolve and reject parameters to the constructor.\n--hints--\nYou should assign a promise to a declared variable named makeServerRequest.\njs\nassert(makeServerRequest instanceof Promise);\nYour promise should receive a function with resolve and reject as parameters.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/Promise\\s*\\(\\s*(function\\s*\\(\\s*resolve\\s*,\\s*reject\\s*\\)\\s*{|\\(\\s*resolve\\s*,\\s*reject\\s*\\)\\s*=>\\s*{)[^}]*}/g\n)\n);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1410,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-a-javascript-promise.md",
      "source_type": "git_repo"
    },
    "token_count": 332,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "229499cba0fdd0ff29577d8d23b4d1d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-caution-when-reinitializing-variables-inside-a-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b86367417b2b2512b3c\ntitle: Use Caution When Reinitializing Variables Inside a Loop\nchallengeType: 1\nforumTopicId: 301194\ndashedName: use-caution-when-reinitializing-variables-inside-a-loop\n--description--\nSometimes it's necessary to save information, increment counters, or re-set variables within a loop A potential issue is when variables either should be reinitialized, and aren't, or vice versa This is particularly dangerous if you accidentally reset the variable being used for the terminal condition, causing an infinite loop Printing variable values with each cycle of your loop by using console log() can uncover buggy behavior related to resetting, or failing to reset a variable --instructions--\nThe following function is supposed to create a two-dimensional array with m rows and n columns of zeroes Unfortunately, it's not producing the expected output because the row variable isn't being reinitialized (set back to an empty array) in the outer loop Fix the code so it returns a correct 3x2 array of zeroes, which looks like [[0, 0], [0, 0], [0, 0]] --hints--\nYour code should set the matrix variable to an array holding 3 rows of 2 columns of zeroes each js\nassert(JSON stringify(matrix) == '[[0,0],[0,0],[0,0]]');\nThe matrix variable should have 3 rows js\nassert(matrix length == 3);\nThe matrix variable should have 2 columns in each row js\nassert(\nmatrix[0] length == 2 && matrix[1] length === 2 && matrix[2] length === 2\n);\nzeroArray(4,3) should return an array holding 4 rows of 3 columns of zeroes each js\nassert(JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2763,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-caution-when-reinitializing-variables-inside-a-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8897703b91b4ba401cff1107db8e1224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-caution-when-reinitializing-variables-inside-a-loop.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "set the matrix variable to an array holding 3 rows of 2 columns of zeroes each js assert(JSON stringify(matrix) == '[[0,0],[0,0],[0,0]]'); The matrix variable should have 3 rows js assert(matrix length == 3); The matrix variable should have 2 columns in each row js assert( matrix[0] length == 2 && matrix[1] length === 2 && matrix[2] length === 2 ); zeroArray(4,3) should return an array holding 4 rows of 3 columns of zeroes each js assert(JSONstringify(zeroArray(4,3)) == '[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]');\n--seed--\n--seed-contents--\n```js\nfunction zeroArray(m, n) {\n// Creates a 2-D array with m rows and n columns of zeroes\nlet newArray = [];\nlet row = [];\nfor (let i = 0; i < m; i++) {\n// Adds the m-th row into newArray\nfor (let j = 0; j < n; j++) {\n// Pushes n zeroes into the current row to create the columns\nrow push(0);\n}\n// Pushes the current row, which now has n zeroes in it, to the array\nnewArray push(row);\n}\nreturn newArray;\n}\nlet matrix = zeroArray(3, 2);\nconsole log(matrix);\n```\n--solutions--\n```js\nfunction zeroArray(m, n) {\n// Creates a 2-D array with m rows and n columns of zeroes\nlet newArray = [];\nfor (let i = 0; i < m; i++) {\nlet row = [];\n// Adds the m-th row into newArray\nfor (let j = 0; j < n; j++) {\n// Pushes n zeroes into the current row to create the columns\nrow push(0);\n}\n// Pushes the current row, which now has n zeroes in it, to the array\nnewArray push(row);\n}\nreturn newArray;\n}\nlet matrix = zeroArray(3, 2);\nconsole log(matrix);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2763,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\debugging\\use-caution-when-reinitializing-variables-inside-a-loop.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4d7d0369ef4a4b418ad0c6ffdb6fb2fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-a-module-script.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cddbfd622f1a59093ec611d\ntitle: Create a Module Script\nchallengeType: 6\nforumTopicId: 301198\ndashedName: create-a-module-script\n--description--\nJavaScript started with a small role to play on an otherwise mostly HTML web. Today, it’s huge, and some websites are built almost entirely with JavaScript. In order to make JavaScript more modular, clean, and maintainable; ES6 introduced a way to easily share code among JavaScript files. This involves exporting parts of a file for use in one or more other files, and importing the parts you need, where you need them. In order to take advantage of this functionality, you need to create a script in your HTML document with a type of module. Here’s an example:\n```html\n```\nA script that uses this module type can now use the import and export features you will learn about in the upcoming challenges.\n--instructions--\nAdd a script to the HTML document of type module and give it the source file of index.js\n--hints--\nYou should create a script tag.\njs\nassert(__helpers.removeJSComments(code).match(/<\\s*script[^>]*>\\s*<\\/\\s*script\\s*>/g));\nYour script tag should have the type attribute with a value of module.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/<\\s*script\\s+[^t]*type\\s*=\\s*('|\")module\\1[^>]*>\\s*<\\/\\s*script\\s*>/g\n)\n);\nYour script tag should have a src of index.js.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/<\\s*script\\s+[^s]*src\\s*=\\s*('|\")index\\.js\\1[^>]*>\\s*<\\/\\s*script\\s*>/g\n)\n);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-a-module-script.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c6d2ef8ff0a0d4cfab4ee204c132769d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-an-export-fallback-with-export-default.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8c367417b2b2512b58\ntitle: Create an Export Fallback with export default\nchallengeType: 1\nforumTopicId: 301199\ndashedName: create-an-export-fallback-with-export-default\n--description--\nIn the export lesson, you learned about the syntax referred to as a named export. This allowed you to make multiple functions and variables available for use in other files.\nThere is another export syntax you need to know, known as export default. Usually you will use this syntax if only one value is being exported from a file. It is also used to create a fallback value for a file or module.\nBelow are examples using export default:\n```js\nexport default function add(x, y) {\nreturn x + y;\n}\nexport default function(x, y) {\nreturn x + y;\n}\n```\nThe first is a named function, and the second is an anonymous function.\nSince export default is used to declare a fallback value for a module or file, you can only have one value be a default export in each module or file. Additionally, you cannot use export default with var, let, or const\n--instructions--\nThe following function should be the fallback value for the module. Please add the necessary code to do so.\n--hints--\nYour code should use an export fallback.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/export\\s+default\\s+function(\\s+subtract\\s*|\\s*)\\(\\s*x,\\s*y\\s*\\)\\s*{/g\n)\n);\n--seed--\n--seed-contents--\njs\nfunction subtract(x, y) {\nreturn x - y;\n}\n--solutions--\njs\nexport default function subtract(x, y) {\nreturn x - y;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1596,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-an-export-fallback-with-export-default.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1bd702b2ac1f0a72ade65a2e58891ed5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\complete-a-promise-with-resolve-and-reject.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cdafbc32913098997531680\ntitle: Complete a Promise with resolve and reject\nchallengeType: 1\nforumTopicId: 301196\ndashedName: complete-a-promise-with-resolve-and-reject\n--description--\nA promise has three states: pending, fulfilled, and rejected The promise you created in the last challenge is forever stuck in the pending state because you did not add a way to complete the promise The resolve and reject parameters given to the promise argument are used to do this resolve is used when you want your promise to succeed, and reject is used when you want it to fail These are methods that take an argument, as seen below js\nconst myPromise = new Promise((resolve, reject) => {\nif(condition here) {\nresolve(\"Promise was fulfilled\");\n} else {\nreject(\"Promise was rejected\");\n}\n});\nThe example above uses strings for the argument of these functions, but it can really be anything Often, it might be an object, that you would use data from, to put on your website or elsewhere --instructions--\nMake the promise handle success and failure If responseFromServer is true, call the resolve method to successfully complete the promise Pass resolve a string with the value We got the data If responseFromServer is false, use the reject method instead and pass it the string: Data not received --hints--\nresolve should be called with the expected string when the if condition is true js\nassert(\n__helpers removeJSComments(code) match(/if\\s*\\(\\s*responseFromServer\\s*\\)\\s*{\\s*resolve\\s*\\(\\s*('|\"|`)We got the data\\1\\s*\\)(\\s*|\\s*;\\s*)}/g)\n);\nreject should be called with the expected string when the if condition is false js\nassert(\n__helpers removeJSComments(code)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\complete-a-promise-with-resolve-and-reject.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c02731f8acc1f4b6a0b7cc3ae8ea5176",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\complete-a-promise-with-resolve-and-reject.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "method to successfully complete the promise Pass resolve a string with the value We got the data If responseFromServer is false, use the reject method instead and pass it the string: Data not received --hints-- resolve should be called with the expected string when the if condition is true js assert( __helpers removeJSComments(code) match(/if\\s*\\(\\s*responseFromServer\\s*\\)\\s*{\\s*resolve\\s*\\(\\s*('|\"|`)We got the data\\1\\s*\\)(\\s*|\\s*;\\s*)}/g) ); reject should be called with the expected string when the if condition is false js assert( __helpers removeJSComments(code)match(/}\\s*else\\s*{\\s*reject\\s*\\(\\s*('|\"|`)Data not received\\1\\s*\\)(\\s*|\\s*;\\s*)}/g)\n);\n--seed--\n--seed-contents--\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n// responseFromServer represents a response from a server\nlet responseFromServer;\nif(responseFromServer) {\n// Change this line\n} else {\n// Change this line\n}\n});\n```\n--solutions--\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n// responseFromServer represents a response from a server\nlet responseFromServer;\nif(responseFromServer) {\nresolve(\"We got the data\");\n} else {\nreject(\"Data not received\");\n}\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\complete-a-promise-with-resolve-and-reject.md",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e2ccb6111c136fadf66f78e49546ce55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\compare-scopes-of-the-var-and-let-keywords.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b87367417b2b2512b40\ntitle: Compare Scopes of the var and let Keywords\nchallengeType: 1\nforumTopicId: 301195\ndashedName: compare-scopes-of-the-var-and-let-keywords\n--description--\nIf you are unfamiliar with let, check out this challenge about the difference between let and var When you declare a variable with the var keyword, it is declared globally, or locally if declared inside a function The let keyword behaves similarly, but with some extra features When you declare a variable with the let keyword inside a block, statement, or expression, its scope is limited to that block, statement, or expression For example:\njs\nvar numArray = [];\nfor (var i = 0; i < 3; i++) {\nnumArray push(i);\n}\nconsole log(numArray);\nconsole log(i);\nHere the console will display the values [0, 1, 2] and 3 With the var keyword, i is declared globally So when i++ is executed, it updates the global variable This code is similar to the following:\njs\nvar numArray = [];\nvar i;\nfor (i = 0; i < 3; i++) {\nnumArray push(i);\n}\nconsole log(numArray);\nconsole log(i);\nHere the console will display the values [0, 1, 2] and 3 This behavior will cause problems if you were to create a function and store it for later use inside a for loop that uses the i variable This is because the stored function will always refer to the value of the updated global i variable js\nvar printNumTwo;\nfor (var i = 0; i < 3; i++) {\nif (i === 2) {\nprintNumTwo = function() {\nreturn i;\n};\n}\n}\nconsole log(printNumTwo());\nHere the console will display the value 3 As you can see, printNumTwo() prints 3 and not 2 This is because the value assigned to i was updated and the printNumTwo() returns the global i and not the value i had when the function was created in the for loop",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4053,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\compare-scopes-of-the-var-and-let-keywords.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ac2b274e7a86c765f20338cc3d9bb210",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\compare-scopes-of-the-var-and-let-keywords.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for (var i = 0; i < 3; i++) { if (i === 2) { printNumTwo = function() { return i; }; } } console log(printNumTwo()); Here the console will display the value 3 As you can see, printNumTwo() prints 3 and not 2 This is because the value assigned to i was updated and the printNumTwo() returns the global i and not the value i had when the function was created in the for loopThe let keyword does not follow this behavior:\njs\nlet printNumTwo;\nfor (let i = 0; i < 3; i++) {\nif (i === 2) {\nprintNumTwo = function() {\nreturn i;\n};\n}\n}\nconsole log(printNumTwo());\nconsole log(i);\nHere the console will display the value 2, and an error that i is not defined i is not defined because it was not declared in the global scope It is only declared within the for loop statement printNumTwo() returned the correct value because three different i variables with unique values (0, 1, and 2) were created by the let keyword within the loop statement --instructions--\nFix the code so that i declared in the if statement is a separate variable than i declared in the first line of the function Be certain not to use the var keyword anywhere in your code This exercise is designed to illustrate the difference between how var and let keywords assign scope to the declared variable When programming a function similar to the one used in this exercise, it is often better to use different variable names to avoid confusion --hints--\nvar should not exist in code js\nassert( __helpers removeJSComments(code) match(/var/g));\nThe variable i declared in the if statement should equal the string block scope js\nassert(__helpers removeJSComments(code) match(/(i\\s*=\\s*) *\\s* *\\s* *\\1('|\")block\\s*scope\\2/g));\ncheckScope() should return the string function scope\njs\nassert(checkScope() === 'function scope');\n--seed--\n--seed-contents--\njs\nfunction checkScope() {\nvar i = 'function scope';\nif (true) {\ni = 'block scope';\nconsole log('Block scope i is: ', i);\n}\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4053,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\compare-scopes-of-the-var-and-let-keywords.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "64b07a59c6d6caf153a31453bade1d15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\compare-scopes-of-the-var-and-let-keywords.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "names to avoid confusion --hints-- var should not exist in code js assert( __helpers removeJSComments(code) match(/var/g)); The variable i declared in the if statement should equal the string block scope js assert(__helpers removeJSComments(code) match(/(i\\s*=\\s*) *\\s* *\\s* *\\1('|\")block\\s*scope\\2/g)); checkScope() should return the string function scope js assert(checkScope() === 'function scope'); --seed-- --seed-contents-- js function checkScope() { var i = 'function scope'; if (true) { i = 'block scope'; console log('Block scope i is: ', i); } consolelog('Function scope i is: ', i);\nreturn i;\n}\n--solutions--\n```js\nfunction checkScope() {\nlet i = 'function scope';\nif (true) {\nlet i = 'block scope';\nconsole log('Block scope i is: ', i);\n}\nconsole log('Function scope i is: ', i);\nreturn i;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4053,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\compare-scopes-of-the-var-and-let-keywords.md",
      "source_type": "git_repo"
    },
    "token_count": 215,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a4f43db243eaadb3dca8429d9f44b20d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\handle-a-rejected-promise-with-catch.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cdafbe72913098997531682\ntitle: Handle a Rejected Promise with catch\nchallengeType: 1\nforumTopicId: 301204\ndashedName: handle-a-rejected-promise-with-catch\n--description--\ncatch is the method used when your promise has been rejected. It is executed immediately after a promise's reject method is called. Here’s the syntax:\n```js\nmyPromise.catch(error => {\n});\n```\nerror is the argument passed in to the reject method.\n--instructions--\nAdd the catch method to your promise. Use error as the parameter of its callback function and log error to the console.\n--hints--\nYou should call the catch method on the promise.\njs\nassert(\n__helpers.removeWhiteSpace(__helpers.removeJSComments(code)).match(/(makeServerRequest|\\))\\.catch\\(/g)\n);\nYour catch method should have a callback function with error as its parameter.\njs\nassert(errorIsParameter);\nYou should log error to the console.\njs\nassert(\nerrorIsParameter &&\n__helpers\n.removeWhiteSpace(__helpers.removeJSComments(code))\n.match(/\\.catch\\(.*?error.*?console.log\\(error\\).*?\\)/)\n);\n--seed--\n--after-user-code--\njs\nconst errorIsParameter = /\\.catch\\((function\\(error\\){|error|\\(error\\)=>)/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)));\n--seed-contents--\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n// responseFromServer is set to false to represent an unsuccessful response from a server\nlet responseFromServer = false;\nif(responseFromServer) {\nresolve(\"We got the data\");\n} else {\nreject(\"Data not received\");\n}\n});\nmakeServerRequest.then(result => {\nconsole.log(result);\n});\n```\n--solutions--\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n// responseFromServer is set to false to represent an unsuccessful response from a server\nlet responseFromServer = false;\nif(responseFromServer) {\nresolve(\"We got the data\");\n} else {\nreject(\"Data not received\");\n}\n});\nmakeServerRequest.then(result => {\nconsole.log(result);\n});\nmakeServerRequest.catch(error => {\nconsole.log(error);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\handle-a-rejected-promise-with-catch.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a6f92f19d76383d1adb0a198f7bbc7d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\handle-a-fulfilled-promise-with-then.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cdafbd72913098997531681\ntitle: Handle a Fulfilled Promise with then\nchallengeType: 1\nforumTopicId: 301203\ndashedName: handle-a-fulfilled-promise-with-then\n--description--\nPromises are most useful when you have a process that takes an unknown amount of time in your code (i e something asynchronous), often a server request When you make a server request it takes some amount of time, and after it completes you usually want to do something with the response from the server This can be achieved by using the then method js\nPromise prototype then(onFulfilled, onRejected)\nThe then method schedules callback functions for the eventual completion of a Promise - either fulfillment or rejection One of the onFulfilled and onRejected handlers will be executed to handle the current promise's fulfillment or rejection When the promise is fulfilled with resolve the onFulfilled handler is called ```js\nmyPromise then(result => {\n});\n```\nresult comes from the argument given to the resolve method --instructions--\nAdd the then method to your promise Use result as the parameter of its callback function and log result to the console --hints--\nYou should call the then method on the promise js\nassert(\n__helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/(makeServerRequest|\\))\\ then\\(/g)\n);\nYour then method should have a callback function with result as its parameter js\nassert(resultIsParameter);\nYou should log result to the console js\nassert(\nresultIsParameter &&\n__helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/\\ then\\( * result * console log\\(result\\) * \\)/)\n);\n--seed--\n--after-user-code--\njs\nconst resultIsParameter = /\\ then\\((function\\(result\\){|result|\\(result\\)=>)/ test(__helpers removeWhiteSpace(__helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2642,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\handle-a-fulfilled-promise-with-then.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6d68790351b3ec2f179423eed30a2f4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\handle-a-fulfilled-promise-with-then.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "its callback function and log result to the console --hints-- You should call the then method on the promise js assert( __helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/(makeServerRequest|\\))\\ then\\(/g) ); Your then method should have a callback function with result as its parameter js assert(resultIsParameter); You should log result to the console js assert( resultIsParameter && __helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/\\ then\\( * result * console log\\(result\\) * \\)/) ); --seed-- --after-user-code-- js const resultIsParameter = /\\ then\\((function\\(result\\){|result|\\(result\\)=>)/ test(__helpers removeWhiteSpace(__helpersremoveJSComments(code)));\n--seed-contents--\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n// responseFromServer is set to true to represent a successful response from a server\nlet responseFromServer = true;\nif(responseFromServer) {\nresolve(\"We got the data\");\n} else {\nreject(\"Data not received\");\n}\n});\n```\n--solutions--\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n// responseFromServer is set to true to represent a successful response from a server\nlet responseFromServer = true;\nif(responseFromServer) {\nresolve(\"We got the data\");\n} else {\nreject(\"Data not received\");\n}\n});\nmakeServerRequest then(result => {\nconsole log(result);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2642,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\handle-a-fulfilled-promise-with-then.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "039cb901ae9f90c224b5beb28e836a20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\import-a-default-export.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8d367417b2b2512b59\ntitle: Import a Default Export\nchallengeType: 1\nforumTopicId: 301205\ndashedName: import-a-default-export\n--description--\nIn the last challenge, you learned about export default and its uses. To import a default export, you need to use a different import syntax. In the following example, add is the default export of the math_functions.js file. Here is how to import it:\njs\nimport add from \"./math_functions.js\";\nThe syntax differs in one key place. The imported value, add, is not surrounded by curly braces ({}). add here is simply a variable name for whatever the default export of the math_functions.js file is. You can use any name here when importing a default.\n--instructions--\nIn the following code, import the default export from the math_functions.js file, found in the same directory as this file. Give the import the name subtract.\n--hints--\nYou should properly import subtract from math_functions.js.\njs\nassert(__helpers.removeJSComments(code).match(/import\\s+subtract\\s+from\\s+('|\")\\.\\/math_functions\\.js\\1/g));\n--seed--\n--seed-contents--\n```js\n// Only change code above this line\nsubtract(7,4);\n```\n--solutions--\n```js\nimport subtract from \"./math_functions.js\";\nsubtract(7,4);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1304,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\import-a-default-export.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "16b041ca3c9422dc0aec4b0e9c919470",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\reuse-javascript-code-using-import.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8c367417b2b2512b55\ntitle: Reuse JavaScript Code Using import\nchallengeType: 1\nforumTopicId: 301208\ndashedName: reuse-javascript-code-using-import\n--description--\nimport allows you to choose which parts of a file or module to load. In the previous lesson, the examples exported add from the math_functions.js file. Here's how you can import it to use in another file:\njs\nimport { add } from './math_functions.js';\nHere, import will find add in math_functions.js, import just that function for you to use, and ignore the rest. The ./ tells the import to look for the math_functions.js file in the same folder as the current file. The relative file path (./) and file extension (.js) are required when using import in this way.\nYou can import more than one item from the file by adding them in the import statement like this:\njs\nimport { add, subtract } from './math_functions.js';\n--instructions--\nAdd the appropriate import statement that will allow the current file to use the uppercaseString and lowercaseString functions you exported in the previous lesson. These functions are in a file called string_functions.js, which is in the same directory as the current file.\n--hints--\nYou should properly import uppercaseString.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/import\\s*{\\s*(uppercaseString[^}]*|[^,]*,\\s*uppercaseString\\s*)}\\s+from\\s+('|\")\\.\\/string_functions\\.js\\2/g\n)\n);\nYou should properly import lowercaseString.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/import\\s*{\\s*(lowercaseString[^}]*|[^,]*,\\s*lowercaseString\\s*)}\\s+from\\s+('|\")\\.\\/string_functions\\.js\\2/g\n)\n);\n--seed--\n--seed-contents--\n```js\n// Only change code above this line\nuppercaseString(\"hello\");\nlowercaseString(\"WORLD!\");\n```\n--solutions--\n```js\nimport { uppercaseString, lowercaseString } from './string_functions.js';\nuppercaseString(\"hello\");\nlowercaseString(\"WORLD!\");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\reuse-javascript-code-using-import.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eeb1201f418f95b3a1b4f1dff445f828",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\prevent-object-mutation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 598f48a36c8c40764b4e52b3\ntitle: Prevent Object Mutation\nchallengeType: 1\nforumTopicId: 301207\ndashedName: prevent-object-mutation\n--description--\nAs seen in the previous challenge, const declaration alone doesn't really protect your data from mutation To ensure your data doesn't change, JavaScript provides a function Object freeze to prevent data mutation Any attempt at changing the object will be rejected, with an error thrown if the script is running in strict mode js\nlet obj = {\nname:\"FreeCodeCamp\",\nreview:\"Awesome\"\n};\nObject freeze(obj);\nobj review = \"bad\";\nobj newProp = \"Test\";\nconsole log(obj);\nThe obj review and obj newProp assignments will result in errors, because our editor runs in strict mode by default, and the console will display the value { name: \"FreeCodeCamp\", review: \"Awesome\" } --instructions--\nIn this challenge you are going to use Object freeze to prevent mathematical constants from changing You need to freeze the MATH_CONSTANTS object so that no one is able to alter the value of PI, add, or delete properties --hints--\nYou should not replace the const keyword js\nassert(__helpers removeJSComments(code) match(/const/g));\nMATH_CONSTANTS should be a constant variable (by using const) js\nassert(__helpers removeJSComments(code) match(/const\\s+MATH_CONSTANTS/g));\nYou should not change the original declaration of MATH_CONSTANTS js\nassert(__helpers removeJSComments(code) match(\n/const\\s+MATH_CONSTANTS\\s+=\\s+{\\s+PI:\\s+3 14\\s+};/g\n));\nPI should equal 3 14 js\nassert(PI === 3 14);\n--seed--\n--seed-contents--\n```js\nfunction freezeObj() {\nconst MATH_CONSTANTS = {\nPI: 3 14\n};\n// Only change code below this line\n// Only change code above this line\ntry {\nMATH_CONSTANTS PI = 99;\n} catch(ex) {\nconsole log(ex);\n}\nreturn MATH_CONSTANTS PI;\n}\nconst PI = freezeObj();\n```\n--solutions--\n```js\nfunction freezeObj() {\nconst MATH_CONSTANTS = {\nPI: 3 14\n};\nObject freeze(MATH_CONSTANTS);\ntry {\nMATH_CONSTANTS",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\prevent-object-mutation.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d9b024113580394f779c407b4c734f96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\prevent-object-mutation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should equal 3 14 js assert(PI === 3 14); --seed-- --seed-contents-- ```js function freezeObj() { const MATH_CONSTANTS = { PI: 3 14 }; // Only change code below this line // Only change code above this line try { MATH_CONSTANTS PI = 99; } catch(ex) { console log(ex); } return MATH_CONSTANTS PI; } const PI = freezeObj(); ``` --solutions-- ```js function freezeObj() { const MATH_CONSTANTS = { PI: 3 14 }; Object freeze(MATH_CONSTANTS); try { MATH_CONSTANTSPI = 99;\n} catch(ex) {\nconsole log(ex);\n}\nreturn MATH_CONSTANTS PI;\n}\nconst PI = freezeObj();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\prevent-object-mutation.md",
      "source_type": "git_repo"
    },
    "token_count": 163,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "db6b3442e965ae16dbeda4d588b7a2bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-strings-using-template-literals.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8a367417b2b2512b4e\ntitle: Create Strings using Template Literals\nchallengeType: 1\nforumTopicId: 301200\ndashedName: create-strings-using-template-literals\n--description--\nA new feature of ES6 is the template literal This is a special type of string that makes creating complex strings easier Template literals allow you to create multi-line strings and to use string interpolation features to create strings Consider the code below:\n```js\nconst person = {\nname: \"Zodiac Hasbro\",\nage: 56\n};\nconst greeting = Hello, my name is ${person name} I am ${person age} years old ;\nconsole log(greeting);\n```\nThe console will display the strings Hello, my name is Zodiac Hasbro and I am 56 years old A lot of things happened there Firstly, the example uses backticks (`), not quotes (' or \"), to wrap the string Secondly, notice that the string is multi-line, both in the code and the output This saves inserting \\n within strings The ${variable} syntax used above is a placeholder Basically, you won't have to use concatenation with the + operator anymore To add variables to strings, you just drop the variable in a template string and wrap it with ${ and } Similarly, you can include other expressions in your string literal, for example ${a + b} This new way of creating strings gives you more flexibility to create robust strings --instructions--\nUse template literal syntax with backticks to create an array of list element (li) strings Each list element's text should be one of the array elements from the failure property on the result object and have a class attribute with the value text-warning The makeList function should return the array of list item strings Use an iterator method (any kind of loop) to get the desired output (shown below) js\n[\n'<li class=\"text-warning\">no-var</li>',\n'<li class=\"text-warning\">var-on-top</li>',\n'<li class=\"text-warning\">linebreak</li>'\n]\n--hints--\nfailuresList should be an array containing result failure messages js\nassert(\ntypeof makeList(result failure) === 'object' && failuresList length === 3\n);\nfailuresList should be equal to the specified output js\nassert(\nmakeList(result failure) every(\n(v, i) =>\nv === `<li class=\"text-warning\">${result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3448,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-strings-using-template-literals.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f435a77d613d2ba8fc17a40a018eaaa9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-strings-using-template-literals.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "function should return the array of list item strings Use an iterator method (any kind of loop) to get the desired output (shown below) js [ '<li class=\"text-warning\">no-var</li>', '<li class=\"text-warning\">var-on-top</li>', '<li class=\"text-warning\">linebreak</li>' ] --hints-- failuresList should be an array containing result failure messages js assert( typeof makeList(result failure) === 'object' && failuresList length === 3 ); failuresList should be equal to the specified output js assert( makeList(result failure) every( (v, i) => v === `<li class=\"text-warning\">${resultfailure[i]}</li>` ||\nv === `<li class='text-warning'>${result failure[i]}</li>`\n)\n);\nTemplate strings and expression interpolation should be used js\nassert match(code, /(` *\\${ *} *`)/);\nAn iterator should be used js\nassert(__helpers removeJSComments(code) match(/for|map|reduce|forEach|while/));\n--seed--\n--seed-contents--\n```js\nconst result = {\nsuccess: [\"max-length\", \"no-amd\", \"prefer-arrow-functions\"],\nfailure: [\"no-var\", \"var-on-top\", \"linebreak\"],\nskipped: [\"no-extra-semi\", \"no-dup-keys\"]\n};\nfunction makeList(arr) {\n// Only change code below this line\nconst failureItems = [];\n// Only change code above this line\nreturn failureItems;\n}\nconst failuresList = makeList(result failure);\n```\n--solutions--\n``js\nconst result = {\nsuccess: [\"max-length\", \"no-amd\", \"prefer-arrow-functions\"],\nfailure: [\"no-var\", \"var-on-top\", \"linebreak\"],\nskipped: [\"no-extra-semi\", \"no-dup-keys\"]\n};\nfunction makeList(arr) {\nreturn arr map(val =>${val}`);\n}\nconst failuresList = makeList(result failure);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3448,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\create-strings-using-template-literals.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "eb32fe634e29040b7558765b211973aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\set-default-parameters-for-your-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b88367417b2b2512b46\ntitle: Set Default Parameters for Your Functions\nchallengeType: 1\nforumTopicId: 301209\ndashedName: set-default-parameters-for-your-functions\n--description--\nIn order to help us create more flexible functions, ES6 introduces default parameters for functions.\nCheck out this code:\n```js\nconst greeting = (name = \"Anonymous\") => \"Hello \" + name;\nconsole.log(greeting(\"John\"));\nconsole.log(greeting());\n```\nThe console will display the strings Hello John and Hello Anonymous.\nThe default parameter kicks in when the argument is not specified (it is undefined). As you can see in the example above, the parameter name will receive its default value Anonymous when you do not provide a value for the parameter. You can add default values for as many parameters as you want.\n--instructions--\nModify the function increment by adding default parameters so that it will add 1 to number if value is not specified.\n--hints--\nThe result of increment(5, 2) should be 7.\njs\nassert(increment(5, 2) === 7);\nThe result of increment(5) should be 6.\njs\nassert(increment(5) === 6);\nA default parameter value of 1 should be used for value.\njs\nassert(__helpers.removeJSComments(code).match(/value\\s*=\\s*1/g));\n--seed--\n--seed-contents--\njs\n// Only change code below this line\nconst increment = (number, value) => number + value;\n// Only change code above this line\n--solutions--\njs\nconst increment = (number, value = 1) => number + value;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\set-default-parameters-for-your-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "20efeffee0b8faff3f542f2f7e9dcab9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\mutate-an-array-declared-with-const.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b87367417b2b2512b42\ntitle: Mutate an Array Declared with const\nchallengeType: 1\nforumTopicId: 301206\ndashedName: mutate-an-array-declared-with-const\n--description--\nIf you are unfamiliar with const, check out this challenge about the const keyword The const declaration has many use cases in modern JavaScript Some developers prefer to assign all their variables using const by default, unless they know they will need to reassign the value Only in that case, they use let However, it is important to understand that objects (including arrays and functions) assigned to a variable using const are still mutable Using the const declaration only prevents reassignment of the variable identifier js\nconst s = [5, 6, 7];\ns = [1, 2, 3];\ns[2] = 45;\nconsole log(s);\ns = [1, 2, 3] will result in an error After commenting out that line, the console log will display the value [5, 6, 45] As you can see, you can mutate the object [5, 6, 7] itself and the variable s will still point to the altered array [5, 6, 45] Like all arrays, the array elements in s are mutable, but because const was used, you cannot use the variable identifier s to point to a different array using the assignment operator --instructions--\nAn array is declared as const s = [5, 7, 2] Change the array to [2, 5, 7] using various element assignments --hints--\nYou should not replace const keyword js\nassert(__helpers removeJSComments(code) match(/const/g));\ns should be a constant variable (by using const) js\nassert(__helpers removeJSComments(code) match(/const\\s+s/g));\nYou should not change the original array declaration js\nassert(__helpers removeJSComments(code) match(\n/const\\s+s\\s*=\\s*\\[\\s*5\\s*,\\s*7\\s*,\\s*2\\s*\\]\\s*; /g\n));\ns should be equal to [2, 5, 7] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\mutate-an-array-declared-with-const.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ec2a6a38a68cff7567b5af0847b1d7bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\mutate-an-array-declared-with-const.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "using the assignment operator --instructions-- An array is declared as const s = [5, 7, 2] Change the array to [2, 5, 7] using various element assignments --hints-- You should not replace const keyword js assert(__helpers removeJSComments(code) match(/const/g)); s should be a constant variable (by using const) js assert(__helpers removeJSComments(code) match(/const\\s+s/g)); You should not change the original array declaration js assert(__helpers removeJSComments(code) match( /const\\s+s\\s*=\\s*\\[\\s*5\\s*,\\s*7\\s*,\\s*2\\s*\\]\\s*; /g )); s should be equal to [2, 5, 7] js assertdeepEqual(s, [2, 5, 7]);\n--seed--\n--seed-contents--\n```js\nconst s = [5, 7, 2];\nfunction editInPlace() {\n// Only change code below this line\n// Using s = [2, 5, 7] would be invalid\n// Only change code above this line\n}\neditInPlace();\n```\n--solutions--\njs\nconst s = [5, 7, 2];\nfunction editInPlace() {\ns[0] = 2;\ns[1] = 5;\ns[2] = 7;\n}\neditInPlace();",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\mutate-an-array-declared-with-const.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "580069c7d0f24c3162a5a307b12d5d08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use--to-import-everything-from-a-file.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8c367417b2b2512b57\ntitle: Use * to Import Everything from a File\nchallengeType: 1\nforumTopicId: 301210\ndashedName: use--to-import-everything-from-a-file\n--description--\nSuppose you have a file and you wish to import all of its contents into the current file. This can be done with the import * as syntax. Here's an example where the contents of a file named math_functions.js are imported into a file in the same directory:\njs\nimport * as myMathModule from \"./math_functions.js\";\nThe above import statement will create an object called myMathModule. This is just a variable name, you can name it anything. The object will contain all of the exports from math_functions.js in it, so you can access the functions like you would any other object property. Here's how you can use the add and subtract functions that were imported:\njs\nmyMathModule.add(2,3);\nmyMathModule.subtract(5,3);\n--instructions--\nThe code in this file requires the contents of the file: string_functions.js, that is in the same directory as the current file. Use the import * as syntax to import everything from the file into an object called stringFunctions.\n--hints--\nYour code should properly use import * as syntax.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/import\\s*\\*\\s*as\\s+stringFunctions\\s+from\\s*('|\")\\.\\/string_functions\\.js\\1/g\n)\n);\n--seed--\n--seed-contents--\n```js\n// Only change code above this line\nstringFunctions.uppercaseString(\"hello\");\nstringFunctions.lowercaseString(\"WORLD!\");\n```\n--solutions--\n```js\nimport * as stringFunctions from \"./string_functions.js\";\n// add code above this line\nstringFunctions.uppercaseString(\"hello\");\nstringFunctions.lowercaseString(\"WORLD!\");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1776,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use--to-import-everything-from-a-file.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "204be065dd7766352df27608a2e3225b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-arrow-functions-to-write-concise-anonymous-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b87367417b2b2512b43\ntitle: Use Arrow Functions to Write Concise Anonymous Functions\nchallengeType: 1\nforumTopicId: 301211\ndashedName: use-arrow-functions-to-write-concise-anonymous-functions\n--description--\nIn JavaScript, we often don't need to name our functions, especially when passing a function as an argument to another function. Instead, we create inline functions. We don't need to name these functions because we do not reuse them anywhere else.\nTo achieve this, we often use the following syntax:\njs\nconst myFunc = function() {\nconst myVar = \"value\";\nreturn myVar;\n}\nES6 provides us with the syntactic sugar to not have to write anonymous functions this way. Instead, you can use arrow function syntax:\njs\nconst myFunc = () => {\nconst myVar = \"value\";\nreturn myVar;\n}\nWhen there is no function body, and only a return value, arrow function syntax allows you to omit the keyword return as well as the brackets surrounding the code. This helps simplify smaller functions into one-line statements:\njs\nconst myFunc = () => \"value\";\nThis code will still return the string value by default.\n--instructions--\nRewrite the function assigned to the variable magic which returns a new Date() to use arrow function syntax. Also, make sure nothing is defined using the keyword var.\n--hints--\nYou should replace the var keyword.\njs\nassert.notMatch(code, /var/g)\nmagic should be a constant variable (by using const).\njs\nassert.match(code, /const\\s+magic/g)\nmagic should be a function.\njs\nassert(typeof magic === 'function');\nmagic() should return the correct date.\njs\nassert(magic().setHours(0, 0, 0, 0) === new Date().setHours(0, 0, 0, 0));\nThe function keyword should not be used.\njs\nassert.notMatch(code, /function/g)\n--seed--\n--seed-contents--\njs\nvar magic = function() {\nreturn new Date();\n};\n--solutions--\njs\nconst magic = () => {\nreturn new Date();\n};",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2021,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-arrow-functions-to-write-concise-anonymous-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5dd286d727d767fd3e821e90a8707e0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b89367417b2b2512b4b\ntitle: Use Destructuring Assignment to Assign Variables from Arrays\nchallengeType: 1\nforumTopicId: 301213\ndashedName: use-destructuring-assignment-to-assign-variables-from-arrays\n--description--\nES6 makes destructuring arrays as easy as destructuring objects.\nOne key difference between the spread operator and array destructuring is that the spread operator unpacks all contents of an array into a comma-separated list. Consequently, you cannot pick or choose which elements you want to assign to variables.\nDestructuring an array lets us do exactly that:\njs\nconst [a, b] = [1, 2, 3, 4, 5, 6];\nconsole.log(a, b);\nThe console will display the values of a and b as 1, 2.\nThe variable a is assigned the first value of the array, and b is assigned the second value of the array. We can also access the value at any index in an array with destructuring by using commas to reach the desired index:\njs\nconst [a, b,,, c] = [1, 2, 3, 4, 5, 6];\nconsole.log(a, b, c);\nThe console will display the values of a, b, and c as 1, 2, 5.\n--instructions--\nUse destructuring assignment to swap the values of a and b so that a receives the value stored in b, and b receives the value stored in a.\n--hints--\nThe value of a should be 6, after swapping.\njs\nassert(a === 6);\nThe value of b should be 8, after swapping.\njs\nassert(b === 8);\nYou should use array destructuring to swap a and b.\njs\nassert(/\\[\\s*(\\w)\\s*,\\s*(\\w)\\s*\\]\\s*=\\s*\\[\\s*\\2\\s*,\\s*\\1\\s*\\]/g.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\njs\nlet a = 8, b = 6;\n// Only change code below this line\n--solutions--\njs\nlet a = 8, b = 6;\n[a, b] = [b, a];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1775,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2b30399c136d83951756905043adff67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-nested-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b89367417b2b2512b4a\ntitle: Use Destructuring Assignment to Assign Variables from Nested Objects\nchallengeType: 1\nforumTopicId: 301214\ndashedName: use-destructuring-assignment-to-assign-variables-from-nested-objects\n--description--\nYou can use the same principles from the previous two lessons to destructure values from nested objects Using an object similar to previous examples:\njs\nconst user = {\njohnDoe: {\nage: 34,\nemail: 'johnDoe@freeCodeCamp com'\n}\n};\nHere's how to extract the values of object properties and assign them to variables with the same name:\njs\nconst { johnDoe: { age, email }} = user;\nAnd here's how you can assign an object properties' values to variables with different names:\njs\nconst { johnDoe: { age: userAge, email: userEmail }} = user;\n--instructions--\nReplace the two assignments with an equivalent destructuring assignment It should still assign the variables lowToday and highToday the values of today low and today high from the LOCAL_FORECAST object --hints--\nYou should remove the ES5 assignment syntax js\nassert( __helpers removeJSComments(code) match(/lowToday = LOCAL_FORECAST\\ today\\ low/g) && __helpers removeJSComments(code) match(/highToday = LOCAL_FORECAST\\ today high/g)\n);\nYou should use destructuring to create the lowToday variable js\nassert(\n__helpers removeJSComments(code) match(\n/(var|const|let)\\s*{\\s*today\\s*:\\s*{\\s*(low\\s*:\\s*lowToday[^}]*|[^,]*,\\s*low\\s*:\\s*lowToday\\s*)}, \\s*}\\s*=\\s*LOCAL_FORECAST(;|\\s+|\\/\\/)/g\n)\n);\nYou should use destructuring to create the highToday variable js\nassert(\n__helpers removeJSComments(code) match(\n/(var|const|let)\\s*{\\s*today\\s*:\\s*{\\s*(high\\s*:\\s*highToday[^}]*|[^,]*,\\s*high\\s*:\\s*highToday, \\s*)},",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-nested-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d4366edb6416cb6a448d9c7021fed531",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-nested-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "variables lowToday and highToday the values of today low and today high from the LOCAL_FORECAST object --hints-- You should remove the ES5 assignment syntax js assert( __helpers removeJSComments(code) match(/lowToday = LOCAL_FORECAST\\ today\\ low/g) && __helpers removeJSComments(code) match(/highToday = LOCAL_FORECAST\\ today high/g) ); You should use destructuring to create the lowToday variable js assert( __helpers removeJSComments(code) match( /(var|const|let)\\s*{\\s*today\\s*:\\s*{\\s*(low\\s*:\\s*lowToday[^}]*|[^,]*,\\s*low\\s*:\\s*lowToday\\s*)}, \\s*}\\s*=\\s*LOCAL_FORECAST(;|\\s+|\\/\\/)/g ) ); You should use destructuring to create the highToday variable js assert( __helpers removeJSComments(code) match( /(var|const|let)\\s*{\\s*today\\s*:\\s*{\\s*(high\\s*:\\s*highToday[^}]*|[^,]*,\\s*high\\s*:\\s*highToday, \\s*)},\\s*}\\s*=\\s*LOCAL_FORECAST(;|\\s+|\\/\\/)/g\n)\n);\nlowToday should be equal to 64 and highToday should be equal to 77 js\nassert(lowToday === 64 && highToday === 77);\n--seed--\n--seed-contents--\n```js\nconst LOCAL_FORECAST = {\nyesterday: { low: 61, high: 75 },\ntoday: { low: 64, high: 77 },\ntomorrow: { low: 68, high: 80 }\n};\n// Only change code below this line\nconst lowToday = LOCAL_FORECAST today low;\nconst highToday = LOCAL_FORECAST today high;\n// Only change code above this line\n```\n--solutions--\n```js\nconst LOCAL_FORECAST = {\nyesterday: { low: 61, high: 75 },\ntoday: { low: 64, high: 77 },\ntomorrow: { low: 68, high: 80 }\n};\nconst { today: { low: lowToday, high: highToday }} = LOCAL_FORECAST;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-nested-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f5da0e806ec7d5b559fcbe7f858611fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-class-syntax-to-define-a-constructor-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8b367417b2b2512b53\ntitle: Use class Syntax to Define a Constructor Function\nchallengeType: 1\nforumTopicId: 301212\ndashedName: use-class-syntax-to-define-a-constructor-function\n--description--\nES6 provides a new syntax to create objects, using the class keyword In ES5, an object can be created by defining a constructor function and using the new keyword to instantiate the object In ES6, a class declaration has a constructor method that is invoked with the new keyword If the constructor method is not explicitly defined, then it is implicitly defined with no arguments ```js\n// Explicit constructor\nclass SpaceShuttle {\nconstructor(targetPlanet) {\nthis targetPlanet = targetPlanet;\n}\ntakeOff() {\nconsole log(\"To \" + this targetPlanet + \" \");\n}\n}\n// Implicit constructor\nclass Rocket {\nlaunch() {\nconsole log(\"To the moon \");\n}\n}\nconst zeus = new SpaceShuttle('Jupiter');\n// prints To Jupiter in console\nzeus takeOff();\nconst atlas = new Rocket();\n// prints To the moon in console\natlas launch();\n```\nIt should be noted that the class keyword declares a new function, to which a constructor is added This constructor is invoked when new is called to create a new object Note: UpperCamelCase should be used by convention for ES6 class names, as in SpaceShuttle used above The constructor method is a special method for creating and initializing an object created with a class You will learn more about it in the Object Oriented Programming section of the JavaScript Algorithms And Data Structures Certification --instructions--\nUse the class keyword and write a constructor to create the Vegetable class The Vegetable class allows you to create a vegetable object with a property name that gets passed to the constructor --hints--\nVegetable should be a class with a defined constructor method js\nassert(\ntypeof Vegetable === 'function' && typeof Vegetable constructor === 'function'\n);\nThe class keyword should be used js\nassert(__helpers removeJSComments(code) match(/class/g));\nVegetable should be able to be instantiated js\nassert(() => {\nconst a = new Vegetable('apple');\nreturn typeof a === 'object';\n});\ncarrot name should return carrot js\nassert(carrot",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-class-syntax-to-define-a-constructor-function.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "260aa0c5360f6ef3988d71a03cc17e8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-class-syntax-to-define-a-constructor-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a vegetable object with a property name that gets passed to the constructor --hints-- Vegetable should be a class with a defined constructor method js assert( typeof Vegetable === 'function' && typeof Vegetable constructor === 'function' ); The class keyword should be used js assert(__helpers removeJSComments(code) match(/class/g)); Vegetable should be able to be instantiated js assert(() => { const a = new Vegetable('apple'); return typeof a === 'object'; }); carrot name should return carrot js assert(carrotname == 'carrot');\n--seed--\n--seed-contents--\n```js\n// Only change code below this line\n// Only change code above this line\nconst carrot = new Vegetable('carrot');\nconsole log(carrot name); // Should display 'carrot'\n```\n--solutions--\njs\nclass Vegetable {\nconstructor(name) {\nthis name = name;\n}\n}\nconst carrot = new Vegetable('carrot');",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-class-syntax-to-define-a-constructor-function.md",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "581837be684266bdb32bdbe41cf855e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-pass-an-object-as-a-functions-parameters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8a367417b2b2512b4d\ntitle: Use Destructuring Assignment to Pass an Object as a Function's Parameters\nchallengeType: 1\nforumTopicId: 301217\ndashedName: use-destructuring-assignment-to-pass-an-object-as-a-functions-parameters\n--description--\nIn some cases, you can destructure the object in a function argument itself.\nConsider the code below:\n```js\nconst profileUpdate = (profileData) => {\nconst { name, age, nationality, location } = profileData;\n}\n```\nThis effectively destructures the object sent into the function. This can also be done in-place:\n```js\nconst profileUpdate = ({ name, age, nationality, location }) => {\n}\n```\nWhen profileData is passed to the above function, the values are destructured from the function parameter for use within the function.\n--instructions--\nUse destructuring assignment within the argument to the function half to send only max and min inside the function.\n--hints--\nstats should be an object.\njs\nassert(typeof stats === 'object');\nhalf(stats) should be 28.015\njs\nassert(half(stats) === 28.015);\nDestructuring should be used.\njs\nassert(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)).match(/half=\\({\\w+,\\w+}\\)/));\nDestructured parameter should be used.\njs\nassert(!__helpers.removeJSComments(code).match(/stats\\.max|stats\\.min/));\n--seed--\n--seed-contents--\n```js\nconst stats = {\nmax: 56.78,\nstandard_deviation: 4.34,\nmedian: 34.54,\nmode: 23.87,\nmin: -0.75,\naverage: 35.85\n};\n// Only change code below this line\nconst half = (stats) => (stats.max + stats.min) / 2.0;\n// Only change code above this line\n```\n--solutions--\n```js\nconst stats = {\nmax: 56.78,\nstandard_deviation: 4.34,\nmedian: 34.54,\nmode: 23.87,\nmin: -0.75,\naverage: 35.85\n};\nconst half = ( {max, min} ) => (max + min) / 2.0;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1872,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-pass-an-object-as-a-functions-parameters.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0cdedad373c765c91f96231279e06218",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b89367417b2b2512b49\ntitle: Use Destructuring Assignment to Assign Variables from Objects\nchallengeType: 1\nforumTopicId: 301215\ndashedName: use-destructuring-assignment-to-assign-variables-from-objects\n--description--\nDestructuring allows you to assign a new variable name when extracting values You can do this by putting the new name after a colon when assigning the value Using the same object from the last example:\njs\nconst user = { name: 'John Doe', age: 34 };\nHere's how you can give new variable names in the assignment:\njs\nconst { name: userName, age: userAge } = user;\nYou may read it as \"get the value of user name and assign it to a new variable named userName\" and so on The value of userName would be the string John Doe, and the value of userAge would be the number 34 --instructions--\nReplace the two assignments with an equivalent destructuring assignment It should still assign the variables highToday and highTomorrow the values of today and tomorrow from the HIGH_TEMPERATURES object --hints--\nYou should remove the ES5 assignment syntax js\nassert( __helpers removeJSComments(code) match(/highToday = HIGH_TEMPERATURES\\ today/g) && __helpers removeJSComments(code) match(/highTomorrow = HIGH_TEMPERATURES\\ tomorrow/g)\n);\nYou should use destructuring to create the highToday variable js\nassert(\n__helpers removeJSComments(code) match(\n/(var|const|let)\\s*{\\s*(today\\s*:\\s*highToday[^}]*|[^,]*,\\s*today\\s*:\\s*highToday\\s*)}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g\n)\n);\nYou should use destructuring to create the highTomorrow variable js\nassert(\n__helpers removeJSComments(code) match(\n/(var|const|let)\\s*{\\s*(tomorrow\\s*:\\s*highTomorrow[^}]*|[^,]*,\\s*tomorrow\\s*:\\s*highTomorrow\\s*)}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g\n)\n);\nhighToday should be equal to 77 and highTomorrow should be equal to 80",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2483,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7658e4cc4678e9a166227ed0bf013052",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "tomorrow from the HIGH_TEMPERATURES object --hints-- You should remove the ES5 assignment syntax js assert( __helpers removeJSComments(code) match(/highToday = HIGH_TEMPERATURES\\ today/g) && __helpers removeJSComments(code) match(/highTomorrow = HIGH_TEMPERATURES\\ tomorrow/g) ); You should use destructuring to create the highToday variable js assert( __helpers removeJSComments(code) match( /(var|const|let)\\s*{\\s*(today\\s*:\\s*highToday[^}]*|[^,]*,\\s*today\\s*:\\s*highToday\\s*)}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g ) ); You should use destructuring to create the highTomorrow variable js assert( __helpers removeJSComments(code) match( /(var|const|let)\\s*{\\s*(tomorrow\\s*:\\s*highTomorrow[^}]*|[^,]*,\\s*tomorrow\\s*:\\s*highTomorrow\\s*)}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g ) ); highToday should be equal to 77 and highTomorrow should be equal to 80js\nassert(highToday === 77 && highTomorrow === 80);\n--seed--\n--seed-contents--\n```js\nconst HIGH_TEMPERATURES = {\nyesterday: 75,\ntoday: 77,\ntomorrow: 80\n};\n// Only change code below this line\nconst highToday = HIGH_TEMPERATURES today;\nconst highTomorrow = HIGH_TEMPERATURES tomorrow;\n// Only change code above this line\n```\n--solutions--\n```js\nconst HIGH_TEMPERATURES = {\nyesterday: 75,\ntoday: 77,\ntomorrow: 80\n};\nconst { today: highToday, tomorrow: highTomorrow } = HIGH_TEMPERATURES;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2483,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-assign-variables-from-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4dd070992d25c1efb0c6c442fb6a408c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-extract-values-from-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5cfa550e84205a357704ccb6\ntitle: Use Destructuring Assignment to Extract Values from Objects\nchallengeType: 1\nforumTopicId: 301216\ndashedName: use-destructuring-assignment-to-extract-values-from-objects\n--description--\nDestructuring assignment is special syntax introduced in ES6, for neatly assigning values taken directly from an object Consider the following ES5 code:\n```js\nconst user = { name: 'John Doe', age: 34 };\nconst name = user name;\nconst age = user age;\n```\nname would have a value of the string John Doe, and age would have the number 34 Here's an equivalent assignment statement using the ES6 destructuring syntax:\njs\nconst { name, age } = user;\nAgain, name would have a value of the string John Doe, and age would have the number 34 Here, the name and age variables will be created and assigned the values of their respective values from the user object You can see how much cleaner this is You can extract as many or few values from the object as you want --instructions--\nReplace the two assignments with an equivalent destructuring assignment It should still assign the variables today and tomorrow the values of today and tomorrow from the HIGH_TEMPERATURES object --hints--\nYou should remove the ES5 assignment syntax js\nassert( __helpers removeJSComments(code) match(/today\\s*=\\s*HIGH_TEMPERATURES\\ (today|tomorrow)/g)\n);\nYou should use destructuring to create the today variable js\nassert(\n__helpers removeJSComments(code) match(/(var|let|const)\\s*{\\s*(today[^}]*|[^,]*,\\s*today)\\s*}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g)\n);\nYou should use destructuring to create the tomorrow variable js\nassert(\n__helpers removeJSComments(code) match(/(var|let|const)\\s*{\\s*(tomorrow[^}]*|[^,]*,\\s*tomorrow)\\s*}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g)\n);\ntoday should be equal to 77 and tomorrow should be equal to 80",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-extract-values-from-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ebebb2ce2ca88f0934b0711f5c628725",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-extract-values-from-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should still assign the variables today and tomorrow the values of today and tomorrow from the HIGH_TEMPERATURES object --hints-- You should remove the ES5 assignment syntax js assert( __helpers removeJSComments(code) match(/today\\s*=\\s*HIGH_TEMPERATURES\\ (today|tomorrow)/g) ); You should use destructuring to create the today variable js assert( __helpers removeJSComments(code) match(/(var|let|const)\\s*{\\s*(today[^}]*|[^,]*,\\s*today)\\s*}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g) ); You should use destructuring to create the tomorrow variable js assert( __helpers removeJSComments(code) match(/(var|let|const)\\s*{\\s*(tomorrow[^}]*|[^,]*,\\s*tomorrow)\\s*}\\s*=\\s*HIGH_TEMPERATURES(;|\\s+|\\/\\/)/g) ); today should be equal to 77 and tomorrow should be equal to 80js\nassert(today === 77 && tomorrow === 80);\n--seed--\n--seed-contents--\n```js\nconst HIGH_TEMPERATURES = {\nyesterday: 75,\ntoday: 77,\ntomorrow: 80\n};\n// Only change code below this line\nconst today = HIGH_TEMPERATURES today;\nconst tomorrow = HIGH_TEMPERATURES tomorrow;\n// Only change code above this line\n```\n--solutions--\n```js\nconst HIGH_TEMPERATURES = {\nyesterday: 75,\ntoday: 77,\ntomorrow: 80\n};\nconst { today, tomorrow } = HIGH_TEMPERATURES;\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-to-extract-values-from-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bb8232099f956320f34546e1275a06be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-export-to-share-a-code-block.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8c367417b2b2512b56\ntitle: Use export to Share a Code Block\nchallengeType: 1\nforumTopicId: 301219\ndashedName: use-export-to-share-a-code-block\n--description--\nImagine a file called math_functions.js that contains several functions related to mathematical operations. One of them is stored in a variable, add, that takes in two numbers and returns their sum. You want to use this function in several different JavaScript files. In order to share it with these other files, you first need to export it.\njs\nexport const add = (x, y) => {\nreturn x + y;\n}\nThe above is a common way to export a single function, but you can achieve the same thing like this:\n```js\nconst add = (x, y) => {\nreturn x + y;\n}\nexport { add };\n```\nWhen you export a variable or function, you can import it in another file and use it without having to rewrite the code. You can export multiple things by repeating the first example for each thing you want to export, or by placing them all in the export statement of the second example, like this:\njs\nexport { add, subtract };\n--instructions--\nThere are two string-related functions in the editor. Export both of them using the method of your choice.\n--hints--\nYou should properly export uppercaseString.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/(export\\s+const\\s+uppercaseString|export\\s*{\\s*(uppercaseString[^}]*|[^,]*,\\s*uppercaseString\\s*)})/g\n)\n);\nYou should properly export lowercaseString.\njs\nassert(\n__helpers.removeJSComments(code).match(\n/(export\\s+const\\s+lowercaseString|export\\s*{\\s*(lowercaseString[^}]*|[^,]*,\\s*lowercaseString\\s*)})/g\n)\n);\n--seed--\n--seed-contents--\n```js\nconst uppercaseString = (string) => {\nreturn string.toUpperCase();\n}\nconst lowercaseString = (string) => {\nreturn string.toLowerCase()\n}\n```\n--solutions--\n```js\nexport const uppercaseString = (string) => {\nreturn string.toUpperCase();\n}\nexport const lowercaseString = (string) => {\nreturn string.toLowerCase()\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2053,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-export-to-share-a-code-block.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c7c50e88769ef3473d18307c7d8639a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-rest-parameter-with-function-parameters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b88367417b2b2512b47\ntitle: Use the Rest Parameter with Function Parameters\nchallengeType: 1\nforumTopicId: 301221\ndashedName: use-the-rest-parameter-with-function-parameters\n--description--\nIn order to help us create more flexible functions, ES6 introduces the rest parameter for function parameters With the rest parameter, you can create functions that take a variable number of arguments These arguments are stored in an array that can be accessed later from inside the function Check out this code:\njs\nfunction howMany( args) {\nreturn \"You have passed \" + args length + \" arguments \";\n}\nconsole log(howMany(0, 1, 2));\nconsole log(howMany(\"string\", null, [1, 2, 3], { }));\nThe console would display the strings You have passed 3 arguments and You have passed 4 arguments The rest parameter eliminates the need to use the arguments object and allows us to use array methods on the array of parameters passed to the function howMany --instructions--\nModify the function sum using the rest parameter in such a way that the function sum is able to take any number of arguments and return their sum --hints--\nThe result of sum(0,1,2) should be 3\njs\nassert(sum(0, 1, 2) === 3);\nThe result of sum(1,2,3,4) should be 10\njs\nassert(sum(1, 2, 3, 4) === 10);\nThe result of sum(5) should be 5\njs\nassert(sum(5) === 5);\nThe result of sum() should be 0\njs\nassert(sum() === 0);\nsum should be an arrow function which uses the rest parameter syntax ( ) on the args parameter js\nassert(__helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/sum=\\(\\ \\ \\ args\\)=>/));\n--seed--\n--seed-contents--\njs\nconst sum = (x, y, z) => {\nconst args = [x, y, z];\nlet total = 0;\nfor (let i = 0; i < args length; i++) {\ntotal += args[i];\n}\nreturn total;\n}\n--solutions--\njs\nconst sum = (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2056,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-rest-parameter-with-function-parameters.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "290f8cb358204ead5808c4f69fbbb47f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-rest-parameter-with-function-parameters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0 js assert(sum() === 0); sum should be an arrow function which uses the rest parameter syntax ( ) on the args parameter js assert(__helpers removeWhiteSpace(__helpers removeJSComments(code)) match(/sum=\\(\\ \\ \\ args\\)=>/)); --seed-- --seed-contents-- js const sum = (x, y, z) => { const args = [x, y, z]; let total = 0; for (let i = 0; i < args length; i++) { total += args[i]; } return total; } --solutions-- js const sum = (args) => {\nlet total = 0;\nfor (let i = 0; i < args length; i++) {\ntotal += args[i];\n}\nreturn total;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2056,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-rest-parameter-with-function-parameters.md",
      "source_type": "git_repo"
    },
    "token_count": 160,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9092dcd37e0af0ebd29bf9bd10b1fad0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-with-the-rest-parameter-to-reassign-array-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8a367417b2b2512b4c\ntitle: >-\nDestructuring via rest elements\nchallengeType: 1\nforumTopicId: 301218\ndashedName: >-\nuse-destructuring-assignment-with-the-rest-parameter-to-reassign-array-elements\n--description--\nIn some situations involving array destructuring, we might want to collect the rest of the elements into a separate array The result is similar to Array prototype slice(), as shown below:\njs\nconst [a, b, arr] = [1, 2, 3, 4, 5, 7];\nconsole log(a, b);\nconsole log(arr);\nThe console would display the values 1, 2 and [3, 4, 5, 7] Variables a and b take the first and second values from the array After that, because of the rest syntax presence, arr gets the rest of the values in the form of an array The rest element only works correctly as the last variable in the list As in, you cannot use the rest syntax to catch a subarray that leaves out the last element of the original array --instructions--\nUse a destructuring assignment with the rest syntax to emulate the behavior of Array prototype slice() removeFirstTwo() should return a sub-array of the original array list with the first two elements omitted --hints--\nremoveFirstTwo([1, 2, 3, 4, 5]) should be [3, 4, 5]\njs\nassert deepEqual(removeFirstTwo([1, 2, 3, 4, 5]), [3, 4, 5]);\nremoveFirstTwo() should not modify list\njs\nconst _testArr = [1, 2, 3, 4, 5];\nremoveFirstTwo(_testArr);\nassert deepEqual(_testArr, [1, 2, 3, 4, 5])\nArray slice() should not be used js\nassert( __helpers removeJSComments(code) match(/\\ \\s*slice\\s*\\(/));\nYou should use the rest syntax js\nassert match(code, /\\ \\ \\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-with-the-rest-parameter-to-reassign-array-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "957dbba2379030e01c31ccc1cba37093",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-with-the-rest-parameter-to-reassign-array-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "original array list with the first two elements omitted --hints-- removeFirstTwo([1, 2, 3, 4, 5]) should be [3, 4, 5] js assert deepEqual(removeFirstTwo([1, 2, 3, 4, 5]), [3, 4, 5]); removeFirstTwo() should not modify list js const _testArr = [1, 2, 3, 4, 5]; removeFirstTwo(_testArr); assert deepEqual(_testArr, [1, 2, 3, 4, 5]) Array slice() should not be used js assert( __helpers removeJSComments(code) match(/\\ \\s*slice\\s*\\(/)); You should use the rest syntax js assert match(code, /\\ \\ \\/);\n--seed--\n--seed-contents--\n```js\nfunction removeFirstTwo(list) {\nreturn list;\n}\nconst source = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst sourceWithoutFirstTwo = removeFirstTwo(source);\n```\n--solutions--\n```js\nfunction removeFirstTwo(list) {\n// comment with 'slice' to check comments are removed in tests\nconst [, , shorterList] = list;\nreturn shorterList;\n}\nconst source = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst sourceWithoutFirstTwo = removeFirstTwo(source);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-destructuring-assignment-with-the-rest-parameter-to-reassign-array-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "786c9518d63da9b4362f4e1f4d84e7d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-spread-operator-to-evaluate-arrays-in-place.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b89367417b2b2512b48\ntitle: Use the Spread Operator to Evaluate Arrays In-Place\nchallengeType: 1\nforumTopicId: 301222\ndashedName: use-the-spread-operator-to-evaluate-arrays-in-place\n--description--\nES6 introduces the spread operator, which allows us to expand arrays and other expressions in places where multiple parameters or elements are expected The ES5 code below uses apply() to compute the maximum value in an array:\njs\nvar arr = [6, 89, 3, 45];\nvar maximus = Math max apply(null, arr);\nmaximus would have a value of 89 We had to use Math max apply(null, arr) because Math max(arr) returns NaN Math max() expects comma-separated arguments, but not an array The spread operator makes this syntax much better to read and maintain js\nconst arr = [6, 89, 3, 45];\nconst maximus = Math max( arr);\nmaximus would have a value of 89 arr returns an unpacked array In other words, it spreads the array However, the spread operator only works in-place, like in an argument to a function or in an array literal For example:\njs\nconst spreaded = [ arr];\nHowever, the following code will not work:\njs\nconst spreaded = arr;\n--instructions--\nCopy all contents of arr1 into another array arr2 using the spread operator --hints--\narr2 should be correct copy of arr1 js\nassert(arr2 every((v, i) => v === arr1[i]) && arr2 length); spread operator should be used to duplicate arr1 js\nassert(__helpers removeJSComments(code) match(/Array\\(\\s*\\ \\ \\ arr1\\s*\\)|\\[\\s*\\ \\ \\ arr1\\s*\\]/));\narr2 should remain unchanged when arr1 is changed js\nassert((arr1, arr2) => {\narr1 push('JUN');\nreturn arr2 length < arr1 length;\n});\n--seed--\n--seed-contents--\n```js\nconst arr1 = ['JAN', 'FEB', 'MAR', 'APR', 'MAY'];\nlet arr2;\narr2 = [];  // Change this line\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-spread-operator-to-evaluate-arrays-in-place.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "21fb0ee76d90b7fd6ba71c4229e73a8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-spread-operator-to-evaluate-arrays-in-place.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "correct copy of arr1 js assert(arr2 every((v, i) => v === arr1[i]) && arr2 length); spread operator should be used to duplicate arr1 js assert(__helpers removeJSComments(code) match(/Array\\(\\s*\\ \\ \\ arr1\\s*\\)|\\[\\s*\\ \\ \\ arr1\\s*\\]/)); arr2 should remain unchanged when arr1 is changed js assert((arr1, arr2) => { arr1 push('JUN'); return arr2 length < arr1 length; }); --seed-- --seed-contents-- ```js const arr1 = ['JAN', 'FEB', 'MAR', 'APR', 'MAY']; let arr2; arr2 = []; // Change this line consolelog(arr2);\n```\n--solutions--\n```js\nconst arr1 = ['JAN', 'FEB', 'MAR', 'APR', 'MAY'];\nlet arr2;\narr2 = [ arr1];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-the-spread-operator-to-evaluate-arrays-in-place.md",
      "source_type": "git_repo"
    },
    "token_count": 203,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6006dd8cd4ed2acc7a3dd0b40d3a8a57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\write-arrow-functions-with-parameters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b88367417b2b2512b44\ntitle: Write Arrow Functions with Parameters\nchallengeType: 1\nforumTopicId: 301223\ndashedName: write-arrow-functions-with-parameters\n--description--\nJust like a regular function, you can pass arguments into an arrow function.\njs\nconst doubler = (item) => item * 2;\ndoubler(4);\ndoubler(4) would return the value 8.\nIf an arrow function has a single parameter, the parentheses enclosing the parameter may be omitted.\njs\nconst doubler = item => item * 2;\nIt is possible to pass more than one argument into an arrow function.\njs\nconst multiplier = (item, multi) => item * multi;\nmultiplier(4, 2);\nmultiplier(4, 2) would return the value 8.\n--instructions--\nRewrite the myConcat function which appends contents of arr2 to arr1 so that the function uses arrow function syntax.\n--hints--\nYou should replace the var keyword.\njs\nassert.notMatch(code, /var/g);\nmyConcat should be a constant variable (by using const).\njs\nassert.match(code, /const\\s+myConcat/g);\nmyConcat should be an arrow function with two parameters\njs\nassert(\n/myConcat=\\(\\w+,\\w+\\)=>/.test(__helpers.removeJSComments(code).replace(/\\s/g, '')) &&\ntypeof myConcat === 'function'\n);\nmyConcat() should return [1, 2, 3, 4, 5].\njs\nassert.deepEqual(myConcat([1, 2], [3, 4, 5]), [1, 2, 3, 4, 5]);\nThe function keyword should not be used.\njs\nassert.notMatch(code, /function/g);\n--seed--\n--seed-contents--\n```js\nvar myConcat = function(arr1, arr2) {\nreturn arr1.concat(arr2);\n};\nconsole.log(myConcat([1, 2], [3, 4, 5]));\n```\n--solutions--\n```js\nconst myConcat = (arr1, arr2) =>  {\nreturn arr1.concat(arr2);\n};\nconsole.log(myConcat([1, 2], [3, 4, 5]));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1779,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\write-arrow-functions-with-parameters.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2ede8d8cab37f1d15d506e16f0a09023",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\write-concise-declarative-functions-with-es6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8b367417b2b2512b50\ntitle: Write Concise Declarative Functions with ES6\nchallengeType: 1\nforumTopicId: 301224\ndashedName: write-concise-declarative-functions-with-es6\n--description--\nWhen defining functions within objects in ES5, we have to use the keyword function as follows:\njs\nconst person = {\nname: \"Taylor\",\nsayHello: function() {\nreturn `Hello! My name is ${this.name}.`;\n}\n};\nWith ES6, you can remove the function keyword and colon altogether when defining functions in objects. Here's an example of this syntax:\njs\nconst person = {\nname: \"Taylor\",\nsayHello() {\nreturn `Hello! My name is ${this.name}.`;\n}\n};\n--instructions--\nRefactor the function setGear inside the object bicycle to use the shorthand syntax described above.\n--hints--\nTraditional function expression should not be used.\njs\nassert(!__helpers.removeJSComments(code).match(/function/));\nsetGear should be a declarative function.\njs\nassert(\ntypeof bicycle.setGear === 'function' && __helpers.removeJSComments(code).match(/setGear\\s*\\(.+\\)\\s*\\{/)\n);\nbicycle.setGear(48) should change the gear value to 48.\njs\nbicycle.setGear(48);\nassert(bicycle.gear === 48);\n--seed--\n--seed-contents--\njs\n// Only change code below this line\nconst bicycle = {\ngear: 2,\nsetGear: function(newGear) {\nthis.gear = newGear;\n}\n};\n// Only change code above this line\nbicycle.setGear(3);\nconsole.log(bicycle.gear);\n--solutions--\njs\nconst bicycle = {\ngear: 2,\n// setGear: function(newGear) {\nsetGear(newGear) {\nthis.gear = newGear;\n}\n};\nbicycle.setGear(3);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\write-concise-declarative-functions-with-es6.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca79ade32a2613cbc9b04537419f899c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\write-concise-object-literal-declarations-using-object-property-shorthand.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8a367417b2b2512b4f\ntitle: Write Concise Object Literal Declarations Using Object Property Shorthand\nchallengeType: 1\nforumTopicId: 301225\ndashedName: write-concise-object-literal-declarations-using-object-property-shorthand\n--description--\nES6 adds some nice support for easily defining object literals.\nConsider the following code:\njs\nconst getMousePosition = (x, y) => ({\nx: x,\ny: y\n});\ngetMousePosition is a simple function that returns an object containing two properties. ES6 provides the syntactic sugar to eliminate the redundancy of having to write x: x. You can simply write x once, and it will be converted tox: x (or something equivalent) under the hood. Here is the same function from above rewritten to use this new syntax:\njs\nconst getMousePosition = (x, y) => ({ x, y });\n--instructions--\nUse object property shorthand with object literals to create and return an object with name, age and gender properties.\n--hints--\ncreatePerson(\"Zodiac Hasbro\", 56, \"male\") should return {name: \"Zodiac Hasbro\", age: 56, gender: \"male\"}.\njs\nassert.deepEqual(\n{ name: 'Zodiac Hasbro', age: 56, gender: 'male' },\ncreatePerson('Zodiac Hasbro', 56, 'male')\n);\nYour code should not use key:value.\njs\nassert(!__helpers.removeJSComments(code).match(/:/g))\n--seed--\n--seed-contents--\njs\nconst createPerson = (name, age, gender) => {\n// Only change code below this line\nreturn {\nname: name,\nage: age,\ngender: gender\n};\n// Only change code above this line\n};\n--solutions--\njs\nconst createPerson = (name, age, gender) => {\n// Only change code below this line\n/*return {\nname: name,\nage: age,\ngender: gender\n};*/\nreturn {\nname,\nage,\ngender\n};\n// Only change code above this line\n};",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1847,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\write-concise-object-literal-declarations-using-object-property-shorthand.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1a570fca314b1f85cda22ac6ff382505",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-getters-and-setters-to-control-access-to-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8c367417b2b2512b54\ntitle: Use getters and setters to Control Access to an Object\nchallengeType: 1\nforumTopicId: 301220\ndashedName: use-getters-and-setters-to-control-access-to-an-object\n--description--\nYou can obtain values from an object and set the value of a property within an object These are classically called getters and setters Getter functions are meant to simply return (get) the value of an object's private variable to the user without the user directly accessing the private variable Setter functions are meant to modify (set) the value of an object's private variable based on the value passed into the setter function This change could involve calculations, or even overwriting the previous value completely js\nclass Book {\nconstructor(author) {\nthis _author = author;\n}\n// getter\nget writer() {\nreturn this _author;\n}\n// setter\nset writer(updatedAuthor) {\nthis _author = updatedAuthor;\n}\n}\nconst novel = new Book('anonymous');\nconsole log(novel writer);\nnovel writer = 'newAuthor';\nconsole log(novel writer);\nThe console would display the strings anonymous and newAuthor Notice the syntax used to invoke the getter and setter They do not even look like functions Getters and setters are important because they hide internal implementation details Note: It is convention to precede the name of a private variable with an underscore (_) However, the practice itself does not make a variable private --instructions--\nUse the class keyword to create a Thermostat class The constructor accepts a Fahrenheit temperature In the class, create a getter to obtain the temperature in Celsius and a setter that accepts a temperature in Celsius Remember that C = 5/9 * (F - 32) and F = C * 9 0 / 5 + 32, where F is the value of temperature in Fahrenheit, and C is the value of the same temperature in Celsius Note: When you implement this, you will track the temperature inside the class in one scale, either Fahrenheit or Celsius This is the power of a getter and a setter You are creating an API for another user, who can get the correct result regardless of which one you track In other words, you are abstracting implementation details from the user --hints--\nThermostat should be a class with a defined constructor method js\nassert isFunction(Thermostat);\nassert isFunction(Thermostat constructor);\nThe class keyword should be used js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4197,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-getters-and-setters-to-control-access-to-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ffb153f6795b651c8661f8f37ae63308",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-getters-and-setters-to-control-access-to-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "inside the class in one scale, either Fahrenheit or Celsius This is the power of a getter and a setter You are creating an API for another user, who can get the correct result regardless of which one you track In other words, you are abstracting implementation details from the user --hints-- Thermostat should be a class with a defined constructor method js assert isFunction(Thermostat); assert isFunction(Thermostat constructor); The class keyword should be used js assertmatch(code, /class/);\nThermostat should be able to be instantiated js\nconst _t = new Thermostat(122);\nassert isObject(_t);\nWhen instantiated with a Fahrenheit value, Thermostat should set the correct temperature js\nconst _t = new Thermostat(122);\nassert strictEqual(_t temperature, 50);\nA getter should be defined js\nconst _desc = Object getOwnPropertyDescriptor(Thermostat prototype, 'temperature');\nassert isFunction(_desc get);\nA setter should be defined js\nconst _desc = Object getOwnPropertyDescriptor(Thermostat prototype, 'temperature');\nassert isFunction(_desc set);\nCalling the setter with a Celsius value should set the temperature js\nconst _t = new Thermostat(32);\n_t temperature = 26;\nconst _u = new Thermostat(32);\n_u temperature = 50;\nassert approximately(_t temperature, 26, 0 1);\nassert approximately(_u temperature, 50, 0 1);\n--seed--\n--seed-contents--\n```js\n// Only change code below this line\n// Only change code above this line\nconst thermos = new Thermostat(76); // Setting in Fahrenheit scale\nlet temp = thermos temperature; // 24 44 in Celsius\nthermos temperature = 26;\ntemp = thermos temperature; // 26 in Celsius\n```\n--solutions--\n```js\nclass Thermostat {\nconstructor(fahrenheit) {\nthis _tempInCelsius = 5/9 * (fahrenheit - 32);\n}\nget temperature(){\nreturn this _tempInCelsius;\n}\nset temperature(newTemp){\nthis _tempInCelsius = newTemp;\n}\n}\nconst thermos = new Thermostat(76); // Setting in Fahrenheit scale\nlet temp = thermos temperature; // 24 44 in Celsius\nthermos temperature = 26;\ntemp = thermos temperature; // 26 in Celsius\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4197,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\es6\\use-getters-and-setters-to-control-access-to-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "42ede8887a5d4669be1eded026ff6ab5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\apply-functional-programming-to-convert-strings-to-url-slugs.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dab367417b2b2512b6d\ntitle: Apply Functional Programming to Convert Strings to URL Slugs\nchallengeType: 1\nforumTopicId: 301227\ndashedName: apply-functional-programming-to-convert-strings-to-url-slugs\n--description--\nThe last several challenges covered a number of useful array and string methods that follow functional programming principles We've also learned about reduce, which is a powerful method used to reduce problems to simpler forms From computing averages to sorting, any array operation can be achieved by applying it Recall that map and filter are special cases of reduce Let's combine what we've learned to solve a practical problem Many content management sites (CMS) have the titles of a post added to part of the URL for simple bookmarking purposes For example, if you write a Medium post titled Stop Using Reduce, it's likely the URL would have some form of the title string in it ( /stop-using-reduce) You may have already noticed this on the freeCodeCamp site --instructions--\nFill in the urlSlug function so it converts a string title and returns the hyphenated version for the URL You can use any of the methods covered in this section, and don't use replace Here are the requirements:\nThe input is a string with spaces and title-cased words\nThe output is a string with the spaces between words replaced by a hyphen (-)\nThe output should be all lower-cased letters\nThe output should not have any spaces\n--hints--\nYour code should not use the replace method for this challenge js\nassert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* replace/g));\nurlSlug(\"Winter Is Coming\") should return the string winter-is-coming js\nassert(urlSlug('Winter Is Coming') === 'winter-is-coming');\nurlSlug(\" Winter Is  Coming\") should return the string winter-is-coming js\nassert(urlSlug(' Winter Is  Coming') === 'winter-is-coming');\nurlSlug(\"A Mind Needs Books Like A Sword Needs A Whetstone\") should return the string a-mind-needs-books-like-a-sword-needs-a-whetstone js\nassert(\nurlSlug('A Mind Needs Books Like A Sword Needs A Whetstone') ===\n'a-mind-needs-books-like-a-sword-needs-a-whetstone'\n);\nurlSlug(\"Hold The Door\") should return the string hold-the-door",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2695,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\apply-functional-programming-to-convert-strings-to-url-slugs.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e82db07e07630024bb0821df3db7728e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\apply-functional-programming-to-convert-strings-to-url-slugs.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "challenge js assert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* replace/g)); urlSlug(\"Winter Is Coming\") should return the string winter-is-coming js assert(urlSlug('Winter Is Coming') === 'winter-is-coming'); urlSlug(\" Winter Is Coming\") should return the string winter-is-coming js assert(urlSlug(' Winter Is Coming') === 'winter-is-coming'); urlSlug(\"A Mind Needs Books Like A Sword Needs A Whetstone\") should return the string a-mind-needs-books-like-a-sword-needs-a-whetstone js assert( urlSlug('A Mind Needs Books Like A Sword Needs A Whetstone') === 'a-mind-needs-books-like-a-sword-needs-a-whetstone' ); urlSlug(\"Hold The Door\") should return the string hold-the-doorjs\nassert(urlSlug('Hold The Door') === 'hold-the-door');\n--seed--\n--seed-contents--\n```js\n// Only change code below this line\nfunction urlSlug(title) {\n}\n// Only change code above this line\nurlSlug(\"A Mind Needs Books Like A Sword Needs A Whetstone\");\n```\n--solutions--\njs\nfunction urlSlug(title) {\nreturn title trim() split(/\\s+/) join(\"-\") toLowerCase();\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2695,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\apply-functional-programming-to-convert-strings-to-url-slugs.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6d7c2d2f5b319b9f14ad7304d87db03f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\add-elements-to-the-end-of-an-array-using-concat-instead-of-push.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7da9367417b2b2512b67\ntitle: Add Elements to the End of an Array Using concat Instead of push\nchallengeType: 1\nforumTopicId: 301226\ndashedName: add-elements-to-the-end-of-an-array-using-concat-instead-of-push\n--description--\nFunctional programming is all about creating and using non-mutating functions The last challenge introduced the concat method as a way to merge arrays into a new array without mutating the original arrays Compare concat to the push method push adds items to the end of the same array it is called on, which mutates that array Here's an example:\njs\nconst arr = [1, 2, 3];\narr push(4, 5, 6);\narr would have a modified value of [1, 2, 3, 4, 5, 6], which is not the functional programming way concat offers a way to merge new items to the end of an array without any mutating side effects --instructions--\nChange the nonMutatingPush function so it uses concat to merge newItem to the end of original without mutating original or newItem arrays The function should return an array --hints--\nYour code should use the concat method js\nassert(__helpers removeJSComments(code) match(/\\ concat/g));\nYour code should not use the push method js\nassert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* push/g));\nThe first array should not change js\nassert(JSON stringify(first) === JSON stringify([1, 2, 3]));\nThe second array should not change js\nassert(JSON stringify(second) === JSON stringify([4, 5]));\nnonMutatingPush([1, 2, 3], [4, 5]) should return [1, 2, 3, 4, 5] js\nassert(\nJSON stringify(nonMutatingPush([1, 2, 3], [4, 5])) ===\nJSON stringify([1, 2, 3, 4, 5])\n);\n--seed--\n--seed-contents--\n```js\nfunction nonMutatingPush(original, newItem) {\n// Only change code below this line\nreturn original",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\add-elements-to-the-end-of-an-array-using-concat-instead-of-push.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "64e8d8a3675ba6093331f950d9dbc348",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\add-elements-to-the-end-of-an-array-using-concat-instead-of-push.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "__helpers removeJSComments(code) match(/\\ [\\s\\S]* push/g)); The first array should not change js assert(JSON stringify(first) === JSON stringify([1, 2, 3])); The second array should not change js assert(JSON stringify(second) === JSON stringify([4, 5])); nonMutatingPush([1, 2, 3], [4, 5]) should return [1, 2, 3, 4, 5] js assert( JSON stringify(nonMutatingPush([1, 2, 3], [4, 5])) === JSON stringify([1, 2, 3, 4, 5]) ); --seed-- --seed-contents-- ```js function nonMutatingPush(original, newItem) { // Only change code below this line return originalpush(newItem);\n// Only change code above this line\n}\nconst first = [1, 2, 3];\nconst second = [4, 5];\nnonMutatingPush(first, second);\n```\n--solutions--\njs\nfunction nonMutatingPush(original, newItem) {\nreturn original concat(newItem);\n}\nconst first = [1, 2, 3];\nconst second = [4, 5];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\add-elements-to-the-end-of-an-array-using-concat-instead-of-push.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "63d4db33f1ad616d6db64ee0f456f45a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\avoid-mutations-and-side-effects-using-functional-programming.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8e367417b2b2512b5e\ntitle: Avoid Mutations and Side Effects Using Functional Programming\nchallengeType: 1\nforumTopicId: 301228\ndashedName: avoid-mutations-and-side-effects-using-functional-programming\n--description--\nIf you haven't already figured it out, the issue in the previous challenge was with the splice call in the tabClose() function Unfortunately, splice changes the original array it is called on, so the second call to it used a modified array, and gave unexpected results This is a small example of a much larger pattern - you call a function on a variable, array, or an object, and the function changes the variable or something in the object One of the core principles of functional programming is to not change things Changes lead to bugs It's easier to prevent bugs knowing that your functions don't change anything, including the function arguments or any global variable The previous example didn't have any complicated operations but the splice method changed the original array, and resulted in a bug Recall that in functional programming, changing or altering things is called mutation, and the outcome is called a side effect A function, ideally, should be a pure function, meaning that it does not cause any side effects Let's try to master this discipline and not alter any variable or object in our code --instructions--\nFill in the code for the function incrementer so it returns the value of the global variable fixedValue increased by one --hints--\nYour function incrementer should not change the value of fixedValue (which is 4) js\nincrementer();\nassert(fixedValue === 4);\nYour incrementer function should return a value that is one larger than the fixedValue value js\nconst __newValue = incrementer();\nassert(__newValue === 5);\nYour incrementer function should return a value based on the global fixedValue variable value js\n(function () {\nfixedValue = 10;\nconst newValue = incrementer();\nassert(fixedValue === 10 && newValue === 11);\nfixedValue = 4;\n})();\n--seed--\n--seed-contents--\n```js\n// The global variable\nlet fixedValue = 4;\nfunction incrementer() {\n// Only change code below this line\n// Only change code above this line\n}\n```\n--solutions--\n```js\nlet fixedValue = 4\nfunction incrementer() {\nreturn fixedValue + 1\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\avoid-mutations-and-side-effects-using-functional-programming.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "90f31b7c3b6052d572c8cdbeb74084db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\combine-two-arrays-using-the-concat-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7da9367417b2b2512b66\ntitle: Combine Two Arrays Using the concat Method\nchallengeType: 1\nforumTopicId: 301229\ndashedName: combine-two-arrays-using-the-concat-method\n--description--\nConcatenation means to join items end to end. JavaScript offers the concat method for both strings and arrays that work in the same way. For arrays, the method is called on one, then another array is provided as the argument to concat, which is added to the end of the first array. It returns a new array and does not mutate either of the original arrays. Here's an example:\njs\n[1, 2, 3].concat([4, 5, 6]);\nThe returned array would be [1, 2, 3, 4, 5, 6].\n--instructions--\nUse the concat method in the nonMutatingConcat function to concatenate attach to the end of original. The function should return the concatenated array.\n--hints--\nYour code should use the concat method.\njs\nassert(__helpers.removeJSComments(code).match(/\\.concat/g));\nThe first array should not change.\njs\nassert(JSON.stringify(first) === JSON.stringify([1, 2, 3]));\nThe second array should not change.\njs\nassert(JSON.stringify(second) === JSON.stringify([4, 5]));\nnonMutatingConcat([1, 2, 3], [4, 5]) should return [1, 2, 3, 4, 5].\njs\nassert(\nJSON.stringify(nonMutatingConcat([1, 2, 3], [4, 5])) ===\nJSON.stringify([1, 2, 3, 4, 5])\n);\n--seed--\n--seed-contents--\n```js\nfunction nonMutatingConcat(original, attach) {\n// Only change code below this line\n// Only change code above this line\n}\nconst first = [1, 2, 3];\nconst second = [4, 5];\nnonMutatingConcat(first, second);\n```\n--solutions--\njs\nfunction nonMutatingConcat(original, attach) {\nreturn original.concat(attach);\n}\nconst first = [1, 2, 3];\nconst second = [4, 5];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1814,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\combine-two-arrays-using-the-concat-method.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "92225b8b569d5d068a9c993fe5469246",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\combine-an-array-into-a-string-using-the-join-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7daa367417b2b2512b6c\ntitle: Combine an Array into a String Using the join Method\nchallengeType: 1\nforumTopicId: 18221\ndashedName: combine-an-array-into-a-string-using-the-join-method\n--description--\nThe join method is used to join the elements of an array together to create a string It takes an argument for the delimiter that is used to separate the array elements in the string Here's an example:\njs\nconst arr = [\"Hello\", \"World\"];\nconst str = arr join(\" \");\nstr would have a value of the string Hello World --instructions--\nUse the join method (among others) inside the sentensify function to make a sentence from the words in the string str The function should return a string For example, I-like-Star-Wars would be converted to I like Star Wars For this challenge, do not use the replace method --hints--\nYour code should use the join method js\nassert(__helpers removeJSComments(code) match(/\\ join/g));\nYour code should not use the replace method js\nassert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* replace/g));\nsentensify(\"May-the-force-be-with-you\") should return a string js\nassert(typeof sentensify('May-the-force-be-with-you') === 'string');\nsentensify(\"May-the-force-be-with-you\") should return the string May the force be with you js\nassert(sentensify('May-the-force-be-with-you') === 'May the force be with you');\nsentensify(\"The force is strong with this one\") should return the string The force is strong with this one js\nassert(\nsentensify('The force is strong with this one') ===\n'The force is strong with this one'\n);\nsentensify(\"There,has,been,an,awakening\") should return the string There has been an awakening js\nassert(\nsentensify('There,has,been,an,awakening') === 'There has been an awakening'\n);\n--seed--\n--seed-contents--\n```js\nfunction sentensify(str) {\n// Only change code below this line\n// Only change code above this line\n}\nsentensify(\"May-the-force-be-with-you\");\n```\n--solutions--\njs\nfunction sentensify(str) {\nreturn str split(/\\W/) join(' ');\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\combine-an-array-into-a-string-using-the-join-method.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bdda8a201c0830ed0ea870f2df72cf8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-the-filter-method-on-a-prototype.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8f367417b2b2512b64\ntitle: Implement the filter Method on a Prototype\nchallengeType: 1\nforumTopicId: 301231\ndashedName: implement-the-filter-method-on-a-prototype\n--description--\nYou might learn a lot about the filter method if you implement your own version of it It is recommended you use a for loop or Array prototype forEach() --instructions--\nWrite your own Array prototype myFilter(), which should behave exactly like Array prototype filter() You should not use the built-in filter method The Array instance can be accessed in the myFilter method using this --hints--\n[23, 65, 98, 5, 13] myFilter(item => item % 2) should equal [23, 65, 5, 13] js\nconst _test_s = [23, 65, 98, 5, 13];\nconst _callback = item => item % 2;\nassert(JSON stringify(_test_s filter(_callback)) === JSON stringify(_test_s myFilter(_callback)));\n[\"naomi\", \"quincy\", \"camperbot\"] myFilter(element => element === \"naomi\") should return [\"naomi\"] js\nconst _test_s = [\"naomi\", \"quincy\", \"camperbot\"];\nconst _callback = element => element === \"naomi\";\nassert(JSON stringify(_test_s filter(_callback)) === JSON stringify(_test_s myFilter(_callback)));\n[1, 1, 2, 5, 2] myFilter((element, index, array) => array indexOf(element) === index) should return [1, 2, 5] js\nconst _test_s = [1, 1, 2, 5, 2];\nconst _callback = (element, index, array) => array indexOf(element) === index;\nassert(JSON stringify(_test_s filter(_callback)) === JSON stringify(_test_s myFilter(_callback)));\nYour code should not use the filter method js\nassert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* filter/g));\n--seed--\n--seed-contents--\n```js\nArray prototype",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-the-filter-method-on-a-prototype.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3681c74a54e5846dc7a210258d439f7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-the-filter-method-on-a-prototype.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "=> element === \"naomi\"; assert(JSON stringify(_test_s filter(_callback)) === JSON stringify(_test_s myFilter(_callback))); [1, 1, 2, 5, 2] myFilter((element, index, array) => array indexOf(element) === index) should return [1, 2, 5] js const _test_s = [1, 1, 2, 5, 2]; const _callback = (element, index, array) => array indexOf(element) === index; assert(JSON stringify(_test_s filter(_callback)) === JSON stringify(_test_s myFilter(_callback))); Your code should not use the filter method js assert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* filter/g)); --seed-- --seed-contents-- ```js Array prototypemyFilter = function(callback) {\nconst newArray = [];\n// Only change code below this line\n// Only change code above this line\nreturn newArray;\n};\n```\n--solutions--\n```js\nArray prototype myFilter = function(callback) {\nconst newArray = [];\nfor (let i = 0; i < this length; i++) {\nif (callback(this[i], i, this)) newArray push(this[i]);\n}\nreturn newArray;\n};\n// Test case\nconst s = [23, 65, 98, 5];\nconst odd_s = s myFilter(item => item % 2 === 1);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-the-filter-method-on-a-prototype.md",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b2a6456d7a0d9553097bfb4345ebb21c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\introduction-to-currying-and-partial-application.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dab367417b2b2512b70\ntitle: Introduction to Currying and Partial Application\nchallengeType: 1\nforumTopicId: 301232\ndashedName: introduction-to-currying-and-partial-application\n--description--\nThe arity of a function is the number of arguments it requires Currying a function means to convert a function of N arity into N functions of arity 1 In other words, it restructures a function so it takes one argument, then returns another function that takes the next argument, and so on Here's an example:\n```js\nfunction unCurried(x, y) {\nreturn x + y;\n}\nfunction curried(x) {\nreturn function(y) {\nreturn x + y;\n}\n}\nconst curried = x => y => x + y\ncurried(1)(2)\n```\ncurried(1)(2) would return 3 This is useful in your program if you can't supply all the arguments to a function at one time You can save each function call into a variable, which will hold the returned function reference that takes the next argument when it's available Here's an example using the curried function in the example above:\njs\nconst funcForY = curried(1);\nconsole log(funcForY(2)); // 3\nSimilarly, partial application can be described as applying a few arguments to a function at a time and returning another function that is applied to more arguments Here's an example:\n```js\nfunction impartial(x, y, z) {\nreturn x + y + z;\n}\nconst partialFn = impartial bind(this, 1, 2);\npartialFn(10); // 13\n```\n--instructions--\nFill in the body of the add function so it uses currying to add parameters x, y, and z --hints--\nadd(10)(20)(30) should return 60 js\nassert(add(10)(20)(30) === 60);\nadd(1)(2)(3) should return 6 js\nassert(add(1)(2)(3) === 6);\nadd(11)(22)(33) should return 66 js\nassert(add(11)(22)(33) === 66);\nYour code should include a final statement that returns x + y + z js\nassert(__helpers removeJSComments(code) match(/[xyz]\\s* \\+\\s* [xyz]\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2229,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\introduction-to-currying-and-partial-application.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6fe60c067c6d492e2b6445b6a78340c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\introduction-to-currying-and-partial-application.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const partialFn = impartial bind(this, 1, 2); partialFn(10); // 13 ``` --instructions-- Fill in the body of the add function so it uses currying to add parameters x, y, and z --hints-- add(10)(20)(30) should return 60 js assert(add(10)(20)(30) === 60); add(1)(2)(3) should return 6 js assert(add(1)(2)(3) === 6); add(11)(22)(33) should return 66 js assert(add(11)(22)(33) === 66); Your code should include a final statement that returns x + y + z js assert(__helpers removeJSComments(code) match(/[xyz]\\s* \\+\\s* [xyz]\\s*\\+\\s* [xyz]/g));\n--seed--\n--seed-contents--\n```js\nfunction add(x) {\n// Only change code below this line\n// Only change code above this line\n}\nadd(10)(20)(30);\n```\n--solutions--\njs\nconst add = x => y => z => x + y + z",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2229,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\introduction-to-currying-and-partial-application.md",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e19ca3f72596944c96c0f06b9533b42a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\pass-arguments-to-avoid-external-dependence-in-a-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8e367417b2b2512b5f\ntitle: Pass Arguments to Avoid External Dependence in a Function\nchallengeType: 1\nforumTopicId: 301234\ndashedName: pass-arguments-to-avoid-external-dependence-in-a-function\n--description--\nThe last challenge was a step closer to functional programming principles, but there is still something missing.\nWe didn't alter the global variable value, but the function incrementer would not work without the global variable fixedValue being there.\nAnother principle of functional programming is to always declare your dependencies explicitly. This means if a function depends on a variable or object being present, then pass that variable or object directly into the function as an argument.\nThere are several good consequences from this principle. The function is easier to test, you know exactly what input it takes, and it won't depend on anything else in your program.\nThis can give you more confidence when you alter, remove, or add new code. You would know what you can or cannot change and you can see where the potential traps are.\nFinally, the function would always produce the same output for the same set of inputs, no matter what part of the code executes it.\n--instructions--\nLet's update the incrementer function to clearly declare its dependencies.\nWrite the incrementer function so it takes an argument, and then returns a result after increasing the value by one.\n--hints--\nYour function incrementer should not change the value of fixedValue (which is 4).\njs\nassert(fixedValue === 4);\nYour incrementer function should take an argument.\njs\nassert(incrementer.length === 1);\nYour incrementer function should return a value that is one larger than the fixedValue value.\njs\nconst __newValue = incrementer(fixedValue);\nassert(__newValue === 5);\n--seed--\n--seed-contents--\n```js\n// The global variable\nlet fixedValue = 4;\n// Only change code below this line\nfunction incrementer() {\n// Only change code above this line\n}\n```\n--solutions--\n```js\nlet fixedValue = 4;\nfunction incrementer(fixedValue) {\nreturn fixedValue + 1;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\pass-arguments-to-avoid-external-dependence-in-a-function.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e5c7a9d7cac1bc0073896ed22b1cce7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-map-on-a-prototype.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8f367417b2b2512b62\ntitle: Implement map on a Prototype\nchallengeType: 1\nforumTopicId: 301230\ndashedName: implement-map-on-a-prototype\n--description--\nAs you have seen from applying Array prototype map(), or simply map() earlier, the map method returns an array of the same length as the one it was called on It also doesn't alter the original array, as long as its callback function doesn't In other words, map is a pure function, and its output depends solely on its inputs Plus, it takes another function as its argument You might learn a lot about the map method if you implement your own version of it It is recommended you use a for loop or Array prototype forEach() --instructions--\nWrite your own Array prototype myMap(), which should behave exactly like Array prototype map() You should not use the built-in map method The Array instance can be accessed in the myMap method using this --hints--\n[23, 65, 98, 5, 13] myMap(item => item * 2) should equal [46, 130, 196, 10, 26] js\nconst _test_s = [23, 65, 98, 5, 13];\nconst _callback = item => item * 2;\nassert(JSON stringify(_test_s map(_callback)) === JSON stringify(_test_s myMap(_callback)));\n[\"naomi\", \"quincy\", \"camperbot\"] myMap(element => element toUpperCase()) should return [\"NAOMI\", \"QUINCY\", \"CAMPERBOT\"] js\nconst _test_s = [\"naomi\", \"quincy\", \"camperbot\"];\nconst _callback = element => element toUpperCase();\nassert(JSON stringify(_test_s map(_callback)) === JSON stringify(_test_s myMap(_callback)));\n[1, 1, 2, 5, 2] myMap((element, index, array) => array[index + 1] || array[0]) should return [1, 2, 5, 2, 1] js\nconst _test_s = [1, 1, 2, 5, 2];\nconst _callback = (element, index, array) => array[index + 1] || array[0];\nassert(JSON stringify(_test_s",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2523,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-map-on-a-prototype.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4e6fb133d6258503e149b183214ef38c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-map-on-a-prototype.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"quincy\", \"camperbot\"] myMap(element => element toUpperCase()) should return [\"NAOMI\", \"QUINCY\", \"CAMPERBOT\"] js const _test_s = [\"naomi\", \"quincy\", \"camperbot\"]; const _callback = element => element toUpperCase(); assert(JSON stringify(_test_s map(_callback)) === JSON stringify(_test_s myMap(_callback))); [1, 1, 2, 5, 2] myMap((element, index, array) => array[index + 1] || array[0]) should return [1, 2, 5, 2, 1] js const _test_s = [1, 1, 2, 5, 2]; const _callback = (element, index, array) => array[index + 1] || array[0]; assert(JSON stringify(_test_smap(_callback)) === JSON stringify(_test_s myMap(_callback)));\nYour code should not use the map method js\nassert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* map/g));\n--seed--\n--seed-contents--\n```js\nArray prototype myMap = function(callback) {\nconst newArray = [];\n// Only change code below this line\n// Only change code above this line\nreturn newArray;\n};\n```\n--solutions--\n```js\nArray prototype myMap = function(callback) {\nconst newArray = [];\nfor (let i = 0; i < this length; i++) {\nnewArray push(callback(this[i], i, this));\n}\nreturn newArray;\n};\n// Test case\nconst s = [23, 65, 98, 5];\nconst doubled_s = s myMap(item => item * 2);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2523,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\implement-map-on-a-prototype.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a46657091c91904e588cff20297f09a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\learn-about-functional-programming.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8d367417b2b2512b5b\ntitle: Learn About Functional Programming\nchallengeType: 1\nforumTopicId: 301233\ndashedName: learn-about-functional-programming\n--description--\nFunctional programming is a style of programming where solutions are simple, isolated functions, without any side effects outside of the function scope: INPUT -> PROCESS -> OUTPUT\nFunctional programming is about:\n1) Isolated functions - there is no dependence on the state of the program, which includes global variables that are subject to change\n2) Pure functions - the same input always gives the same output\n3) Functions with limited side effects - any changes, or mutations, to the state of the program outside the function are carefully controlled\n--instructions--\nThe members of freeCodeCamp happen to love tea In the code editor, the prepareTea and getTea functions are already defined for you Call the getTea function to get 40 cups of tea for the team, and store them in the tea4TeamFCC variable --hints--\nThe tea4TeamFCC variable should hold 40 cups of tea for the team js\nassert(tea4TeamFCC length === 40);\nThe tea4TeamFCC variable should hold cups of green tea js\nassert(tea4TeamFCC[0] === 'greenTea');\n--seed--\n--seed-contents--\n```js\n// Function that returns a string representing a cup of green tea\nconst prepareTea = () => 'greenTea';\n/\nGiven a function (representing the tea type) and number of cups needed, the\nfollowing function returns an array of strings (each representing a cup of\na specific type of tea) /\nconst getTea = (numOfCups) => {\nconst teaCups = [];\nfor(let cups = 1; cups <= numOfCups; cups += 1) {\nconst teaCup = prepareTea();\nteaCups",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2164,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\learn-about-functional-programming.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "572f48d0f9ecabb98867228b280a203c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\learn-about-functional-programming.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "// Function that returns a string representing a cup of green tea const prepareTea = () => 'greenTea'; / Given a function (representing the tea type) and number of cups needed, the following function returns an array of strings (each representing a cup of a specific type of tea) / const getTea = (numOfCups) => { const teaCups = []; for(let cups = 1; cups <= numOfCups; cups += 1) { const teaCup = prepareTea(); teaCupspush(teaCup);\n}\nreturn teaCups;\n};\n// Only change code below this line\nconst tea4TeamFCC = null;\n// Only change code above this line\n```\n--solutions--\n```js\nconst prepareTea = () => 'greenTea';\nconst getTea = (numOfCups) => {\nconst teaCups = [];\nfor(let cups = 1; cups <= numOfCups; cups += 1) {\nconst teaCup = prepareTea();\nteaCups push(teaCup);\n}\nreturn teaCups;\n};\nconst tea4TeamFCC = getTea(40);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2164,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\learn-about-functional-programming.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "53e08353837c9af13ab5c6a17a668524",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\remove-elements-from-an-array-using-slice-instead-of-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 9d7123c8c441eeafaeb5bdef\ntitle: Remove Elements from an Array Using slice Instead of splice\nchallengeType: 1\nforumTopicId: 301236\ndashedName: remove-elements-from-an-array-using-slice-instead-of-splice\n--description--\nA common pattern while working with arrays is when you want to remove items and keep the rest of the array JavaScript offers the splice method for this, which takes arguments for the index of where to start removing items, then the number of items to remove If the second argument is not provided, the default is to remove items through the end However, the splice method mutates the original array it is called on Here's an example:\njs\nconst cities = [\"Chicago\", \"Delhi\", \"Islamabad\", \"London\", \"Berlin\"];\ncities splice(3, 1);\nHere splice returns the string London and deletes it from the cities array cities will have the value [\"Chicago\", \"Delhi\", \"Islamabad\", \"Berlin\"] As we saw in the last challenge, the slice method does not mutate the original array, but returns a new one which can be saved into a variable Recall that the slice method takes two arguments for the indices to begin and end the slice (the end is non-inclusive), and returns those items in a new array Using the slice method instead of splice helps to avoid any array-mutating side effects --instructions--\nRewrite the function nonMutatingSplice by using slice instead of splice It should limit the provided cities array to a length of 3, and return a new array with only the first three items Do not mutate the original array provided to the function --hints--\nYour code should use the slice method js\nassert(__helpers removeJSComments(code) match(/\\ slice/g));\nYour code should not use the splice method js\nassert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* splice/g));\nYou should not mutate the original array passed to the function js\nassert deepEqual(_inputCities, [\"Chicago\", \"Delhi\", \"Islamabad\", \"London\", \"Berlin\"]);\nnonMutatingSplice([\"Chicago\", \"Delhi\", \"Islamabad\", \"London\", \"Berlin\"]) should return [\"Chicago\", \"Delhi\", \"Islamabad\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2576,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\remove-elements-from-an-array-using-slice-instead-of-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c4fd9013ec8264b3472d51bc0040ae5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\remove-elements-from-an-array-using-slice-instead-of-splice.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "array with only the first three items Do not mutate the original array provided to the function --hints-- Your code should use the slice method js assert(__helpers removeJSComments(code) match(/\\ slice/g)); Your code should not use the splice method js assert( __helpers removeJSComments(code) match(/\\ [\\s\\S]* splice/g)); You should not mutate the original array passed to the function js assert deepEqual(_inputCities, [\"Chicago\", \"Delhi\", \"Islamabad\", \"London\", \"Berlin\"]); nonMutatingSplice([\"Chicago\", \"Delhi\", \"Islamabad\", \"London\", \"Berlin\"]) should return [\"Chicago\", \"Delhi\", \"Islamabad\"] js assertdeepEqual(nonMutatingSplice(_inputCities), [\"Chicago\", \"Delhi\", \"Islamabad\"]);\n--seed--\n--seed-contents--\n```js\nfunction nonMutatingSplice(cities) {\nreturn cities splice(3);\n}\n```\n--after-user-code--\njs\nconst _inputCities = [\"Chicago\", \"Delhi\", \"Islamabad\", \"London\", \"Berlin\"];\n--solutions--\njs\nfunction nonMutatingSplice(cities) {\nreturn cities slice(0,3);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2576,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\remove-elements-from-an-array-using-slice-instead-of-splice.md",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f86d3ad6fd56217fa412c06838904a0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-a-sorted-array-without-changing-the-original-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7da9367417b2b2512b6a\ntitle: Return a Sorted Array Without Changing the Original Array\nchallengeType: 1\nforumTopicId: 301237\ndashedName: return-a-sorted-array-without-changing-the-original-array\n--description--\nA side effect of the sort method is that it changes the order of the elements in the original array In other words, it mutates the array in place One way to avoid this is to first concatenate an empty array to the one being sorted (remember that slice and concat return a new array), then run the sort method --instructions--\nUse the sort method in the nonMutatingSort function to sort the elements of an array in ascending order The function should return a new array, and not mutate the globalArray variable --hints--\nYour code should use the sort method js\nassert(nonMutatingSort toString() match(/\\ sort/g));\nThe globalArray variable should not change js\nassert(JSON stringify(globalArray) === JSON stringify([5, 6, 3, 2, 9]));\nnonMutatingSort(globalArray) should return [2, 3, 5, 6, 9] js\nassert(\nJSON stringify(nonMutatingSort(globalArray)) ===\nJSON stringify([2, 3, 5, 6, 9])\n);\nnonMutatingSort(globalArray) should not be hard coded js\nassert( nonMutatingSort toString() match(/\\[ * [23569] * \\]/gs));\nThe function should return a new array, not the array passed to it js\nassert(nonMutatingSort(globalArray) == globalArray);\nnonMutatingSort([1, 30, 4, 21, 100000]) should return [1, 4, 21, 30, 100000] js\nassert(JSON stringify(nonMutatingSort([1, 30, 4, 21, 100000])) ===\nJSON stringify([1, 4, 21, 30, 100000]))\nnonMutatingSort([140000, 104, 99]) should return [99, 104, 140000] js\nassert(JSON stringify(nonMutatingSort([140000, 104, 99])) ===\nJSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2214,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-a-sorted-array-without-changing-the-original-array.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "58633411b86183fdfede77e884e8d9fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-a-sorted-array-without-changing-the-original-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "6, 9]) ); nonMutatingSort(globalArray) should not be hard coded js assert( nonMutatingSort toString() match(/\\[ * [23569] * \\]/gs)); The function should return a new array, not the array passed to it js assert(nonMutatingSort(globalArray) == globalArray); nonMutatingSort([1, 30, 4, 21, 100000]) should return [1, 4, 21, 30, 100000] js assert(JSON stringify(nonMutatingSort([1, 30, 4, 21, 100000])) === JSON stringify([1, 4, 21, 30, 100000])) nonMutatingSort([140000, 104, 99]) should return [99, 104, 140000] js assert(JSON stringify(nonMutatingSort([140000, 104, 99])) === JSONstringify([99, 104, 140000]))\n--seed--\n--seed-contents--\n```js\nconst globalArray = [5, 6, 3, 2, 9];\nfunction nonMutatingSort(arr) {\n// Only change code below this line\n// Only change code above this line\n}\nnonMutatingSort(globalArray);\n```\n--solutions--\njs\nconst globalArray = [5, 6, 3, 2, 9];\nfunction nonMutatingSort(arr) {\nreturn [] concat(arr) sort((a,b) => a-b);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2214,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-a-sorted-array-without-changing-the-original-array.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "83967805b43b518e21089c090581c55e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\refactor-global-variables-out-of-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8f367417b2b2512b60\ntitle: Refactor Global Variables Out of Functions\nchallengeType: 1\nforumTopicId: 301235\ndashedName: refactor-global-variables-out-of-functions\n--description--\nSo far, we have seen two distinct principles for functional programming:\n1) Don't alter a variable or object - create new variables and objects and return them if need be from a function Hint: using something like const newArr = arrVar, where arrVar is an array will simply create a reference to the existing variable and not a copy So changing a value in newArr would change the value in arrVar 2) Declare function parameters - any computation inside a function depends only on the arguments passed to the function, and not on any global object or variable Adding one to a number is not very exciting, but we can apply these principles when working with arrays or more complex objects --instructions--\nRewrite the code so the global array bookList is not changed inside either function The add function should add the given bookName to the end of the array passed to it and return a new array (list) The remove function should remove the given bookName from the array passed to it Note: Both functions should return an array, and any new parameters should be added before the bookName parameter --hints--\nbookList should not change and still equal [\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\"] js\nadd(bookList, \"Test\");\nremove(bookList, \"The Hound of the Baskervilles\");\nassert(\nJSON stringify(bookList) ===\nJSON stringify([\n'The Hound of the Baskervilles',\n'On The Electrodynamics of Moving Bodies',\n'Philosophiæ Naturalis Principia Mathematica',\n'Disquisitiones Arithmeticae'\n])\n);\nadd(bookList, \"A Brief History of Time\") should return [\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\", \"A Brief History of Time\"] js\nassert(\nJSON stringify(add(bookList, \"A Brief History of Time\")) ===\nJSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\refactor-global-variables-out-of-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "af6f2346dfbc1762543d078ceb8752b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\refactor-global-variables-out-of-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Arithmeticae\"] js add(bookList, \"Test\"); remove(bookList, \"The Hound of the Baskervilles\"); assert( JSON stringify(bookList) === JSON stringify([ 'The Hound of the Baskervilles', 'On The Electrodynamics of Moving Bodies', 'Philosophiæ Naturalis Principia Mathematica', 'Disquisitiones Arithmeticae' ]) ); add(bookList, \"A Brief History of Time\") should return [\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\", \"A Brief History of Time\"] js assert( JSON stringify(add(bookList, \"A Brief History of Time\")) === JSONstringify([\n'The Hound of the Baskervilles',\n'On The Electrodynamics of Moving Bodies',\n'Philosophiæ Naturalis Principia Mathematica',\n'Disquisitiones Arithmeticae',\n'A Brief History of Time'\n])\n);\nremove(bookList, \"On The Electrodynamics of Moving Bodies\") should return [\"The Hound of the Baskervilles\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\"] js\nassert(\nJSON stringify(remove(bookList, 'On The Electrodynamics of Moving Bodies')) ===\nJSON stringify([\n'The Hound of the Baskervilles',\n'Philosophiæ Naturalis Principia Mathematica',\n'Disquisitiones Arithmeticae'\n])\n);\nremove(add(bookList, \"A Brief History of Time\"), \"On The Electrodynamics of Moving Bodies\"); should equal [\"The Hound of the Baskervilles\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\", \"A Brief History of Time\"] js\nassert(\nJSON stringify(remove(add(bookList, 'A Brief History of Time'), 'On The Electrodynamics of Moving Bodies')) ===\nJSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\refactor-global-variables-out-of-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b54040cd4c4a439d5dc281214f219ae5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\refactor-global-variables-out-of-functions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Mathematica\", \"Disquisitiones Arithmeticae\"] js assert( JSON stringify(remove(bookList, 'On The Electrodynamics of Moving Bodies')) === JSON stringify([ 'The Hound of the Baskervilles', 'Philosophiæ Naturalis Principia Mathematica', 'Disquisitiones Arithmeticae' ]) ); remove(add(bookList, \"A Brief History of Time\"), \"On The Electrodynamics of Moving Bodies\"); should equal [\"The Hound of the Baskervilles\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\", \"A Brief History of Time\"] js assert( JSON stringify(remove(add(bookList, 'A Brief History of Time'), 'On The Electrodynamics of Moving Bodies')) === JSONstringify([\n'The Hound of the Baskervilles',\n'Philosophiæ Naturalis Principia Mathematica',\n'Disquisitiones Arithmeticae',\n'A Brief History of Time'\n])\n);\n--seed--\n--seed-contents--\n```js\n// The global variable\nconst bookList = [\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\"];\n// Change code below this line\nfunction add(bookName) {\nbookList push(bookName);\nreturn bookList;\n// Change code above this line\n}\n// Change code below this line\nfunction remove(bookName) {\nconst book_index = bookList indexOf(bookName);\nif (book_index >= 0) {\nbookList splice(book_index, 1);\nreturn bookList;\n// Change code above this line\n}\n}\n```\n--solutions--\n```js\n// The global variable\nconst bookList = [\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\"];\nfunction add(bookList, bookName) {\nreturn [ bookList, bookName];\n}\nfunction remove(bookList, bookName) {\nconst bookListCopy = [ bookList];\nconst bookNameIndex = bookList indexOf(bookName);\nif (bookNameIndex >= 0) {\nbookListCopy splice(bookNameIndex, 1);\n}\nreturn bookListCopy;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\refactor-global-variables-out-of-functions.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a37f6028f6ef64d80b977f81aec0cb85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\sort-an-array-alphabetically-using-the-sort-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7da9367417b2b2512b69\ntitle: Sort an Array Alphabetically using the sort Method\nchallengeType: 1\nforumTopicId: 18303\ndashedName: sort-an-array-alphabetically-using-the-sort-method\n--description--\nThe sort method sorts the elements of an array according to the callback function For example:\n```js\nfunction ascendingOrder(arr) {\nreturn arr sort(function(a, b) {\nreturn a - b;\n});\n}\nascendingOrder([1, 5, 2, 3, 4]);\n```\nThis would return the value [1, 2, 3, 4, 5] ```js\nfunction reverseAlpha(arr) {\nreturn arr sort(function(a, b) {\nreturn a === b 0 : a < b 1 : -1;\n});\n}\nreverseAlpha(['l', 'h', 'z', 'b', 's']);\n```\nThis would return the value ['z', 's', 'l', 'h', 'b'] JavaScript's default sorting method is by string Unicode point value, which may return unexpected results Therefore, it is encouraged to provide a callback function to specify how to sort the array items When such a callback function, normally called compareFunction, is supplied, the array elements are sorted according to the return value of the compareFunction: If compareFunction(a,b) returns a value less than 0 for two elements a and b, then a will come before b If compareFunction(a,b) returns a value greater than 0 for two elements a and b, then b will come before a If compareFunction(a,b) returns a value equal to 0 for two elements a and b, then a and b will remain unchanged --instructions--\nUse the sort method in the alphabeticalOrder function to sort the elements of arr in alphabetical order The function should return the sorted array --hints--\nYour code should use the sort method js\nassert(__helpers removeJSComments(code) match(/\\ sort/g));\nalphabeticalOrder([\"a\", \"d\", \"c\", \"a\", \"z\", \"g\"]) should return [\"a\", \"a\", \"c\", \"d\", \"g\", \"z\"] js\nassert(\nJSON stringify(alphabeticalOrder(['a', 'd', 'c', 'a', 'z', 'g'])) ===\nJSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2798,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\sort-an-array-alphabetically-using-the-sort-method.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "eabb023626a16c97b6f2d25e9601f214",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\sort-an-array-alphabetically-using-the-sort-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for two elements a and b, then a and b will remain unchanged --instructions-- Use the sort method in the alphabeticalOrder function to sort the elements of arr in alphabetical order The function should return the sorted array --hints-- Your code should use the sort method js assert(__helpers removeJSComments(code) match(/\\ sort/g)); alphabeticalOrder([\"a\", \"d\", \"c\", \"a\", \"z\", \"g\"]) should return [\"a\", \"a\", \"c\", \"d\", \"g\", \"z\"] js assert( JSON stringify(alphabeticalOrder(['a', 'd', 'c', 'a', 'z', 'g'])) === JSONstringify(['a', 'a', 'c', 'd', 'g', 'z'])\n);\nalphabeticalOrder([\"x\", \"h\", \"a\", \"m\", \"n\", \"m\"]) should return [\"a\", \"h\", \"m\", \"m\", \"n\", \"x\"] js\nassert(\nJSON stringify(alphabeticalOrder(['x', 'h', 'a', 'm', 'n', 'm'])) ===\nJSON stringify(['a', 'h', 'm', 'm', 'n', 'x'])\n);\nalphabeticalOrder([\"a\", \"a\", \"a\", \"a\", \"x\", \"t\"]) should return [\"a\", \"a\", \"a\", \"a\", \"t\", \"x\"] js\nassert(\nJSON stringify(alphabeticalOrder(['a', 'a', 'a', 'a', 'x', 't'])) ===\nJSON stringify(['a', 'a', 'a', 'a', 't', 'x'])\n);\n--seed--\n--seed-contents--\n```js\nfunction alphabeticalOrder(arr) {\n// Only change code below this line\nreturn arr\n// Only change code above this line\n}\nalphabeticalOrder([\"a\", \"d\", \"c\", \"a\", \"z\", \"g\"]);\n```\n--solutions--\njs\nfunction alphabeticalOrder(arr) {\nreturn arr sort();\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2798,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\sort-an-array-alphabetically-using-the-sort-method.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cd09ffae893a4c4826914a45fbae2318",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-part-of-an-array-using-the-slice-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b90367417b2b2512b65\ntitle: Return Part of an Array Using the slice Method\nchallengeType: 1\nforumTopicId: 301239\ndashedName: return-part-of-an-array-using-the-slice-method\n--description--\nThe slice method returns a copy of certain elements of an array It can take two arguments, the first gives the index of where to begin the slice, the second is the index for where to end the slice (and it's non-inclusive) If the arguments are not provided, the default is to start at the beginning of the array through the end, which is an easy way to make a copy of the entire array The slice method does not mutate the original array, but returns a new one Here's an example:\njs\nconst arr = [\"Cat\", \"Dog\", \"Tiger\", \"Zebra\"];\nconst newArray = arr slice(1, 3);\nnewArray would have the value [\"Dog\", \"Tiger\"] --instructions--\nUse the slice method in the sliceArray function to return part of the anim array given the provided beginSlice and endSlice indices The function should return an array --hints--\nYour code should use the slice method js\nassert(__helpers removeJSComments(code) match(/\\ slice/g));\nThe inputAnim variable should not change js\nassert(\nJSON stringify(inputAnim) ===\nJSON stringify(['Cat', 'Dog', 'Tiger', 'Zebra', 'Ant'])\n);\nsliceArray([\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"], 1, 3) should return [\"Dog\", \"Tiger\"] js\nassert(\nJSON stringify(sliceArray(['Cat', 'Dog', 'Tiger', 'Zebra', 'Ant'], 1, 3)) ===\nJSON stringify(['Dog', 'Tiger'])\n);\nsliceArray([\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"], 0, 1) should return [\"Cat\"] js\nassert(\nJSON stringify(sliceArray(['Cat', 'Dog', 'Tiger', 'Zebra', 'Ant'], 0, 1)) ===\nJSON stringify(['Cat'])\n);\nsliceArray([\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"], 1, 4) should return [\"Dog\", \"Tiger\", \"Zebra\"]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2473,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-part-of-an-array-using-the-slice-method.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e5ca580453ecd92d7473ff6e29dba751",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-part-of-an-array-using-the-slice-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "not change js assert( JSON stringify(inputAnim) === JSON stringify(['Cat', 'Dog', 'Tiger', 'Zebra', 'Ant']) ); sliceArray([\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"], 1, 3) should return [\"Dog\", \"Tiger\"] js assert( JSON stringify(sliceArray(['Cat', 'Dog', 'Tiger', 'Zebra', 'Ant'], 1, 3)) === JSON stringify(['Dog', 'Tiger']) ); sliceArray([\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"], 0, 1) should return [\"Cat\"] js assert( JSON stringify(sliceArray(['Cat', 'Dog', 'Tiger', 'Zebra', 'Ant'], 0, 1)) === JSON stringify(['Cat']) ); sliceArray([\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"], 1, 4) should return [\"Dog\", \"Tiger\", \"Zebra\"]js\nassert(\nJSON stringify(sliceArray(['Cat', 'Dog', 'Tiger', 'Zebra', 'Ant'], 1, 4)) ===\nJSON stringify(['Dog', 'Tiger', 'Zebra'])\n);\n--seed--\n--seed-contents--\n```js\nfunction sliceArray(anim, beginSlice, endSlice) {\n// Only change code below this line\n// Only change code above this line\n}\nconst inputAnim = [\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"];\nsliceArray(inputAnim, 1, 3);\n```\n--solutions--\njs\nfunction sliceArray(anim, beginSlice, endSlice) {\nreturn anim slice(beginSlice, endSlice);\n}\nconst inputAnim = [\"Cat\", \"Dog\", \"Tiger\", \"Zebra\", \"Ant\"];",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2473,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\return-part-of-an-array-using-the-slice-method.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0e766b543cc68cd96058e1230eb8d814",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\split-a-string-into-an-array-using-the-split-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7daa367417b2b2512b6b\ntitle: Split a String into an Array Using the split Method\nchallengeType: 1\nforumTopicId: 18305\ndashedName: split-a-string-into-an-array-using-the-split-method\n--description--\nThe split method splits a string into an array of strings It takes an argument for the delimiter, which can be a character to use to break up the string or a regular expression For example, if the delimiter is a space, you get an array of words, and if the delimiter is an empty string, you get an array of each character in the string Here are two examples that split one string by spaces, then another by digits using a regular expression:\n```js\nconst str = \"Hello World\";\nconst bySpace = str split(\" \");\nconst otherString = \"How9are7you2today\";\nconst byDigits = otherString split(/\\d/);\n```\nbySpace would have the value [\"Hello\", \"World\"] and byDigits would have the value [\"How\", \"are\", \"you\", \"today\"] Since strings are immutable, the split method makes it easier to work with them --instructions--\nUse the split method inside the splitify function to split str into an array of words The function should return the array Note that the words are not always separated by spaces, and the array should not contain punctuation --hints--\nYour code should use the split method js\nassert(__helpers removeJSComments(code) match(/\\ split/g));\nsplitify(\"Hello World,I-am code\") should return [\"Hello\", \"World\", \"I\", \"am\", \"code\"] js\nassert(\nJSON stringify(splitify('Hello World,I-am code')) ===\nJSON stringify(['Hello', 'World', 'I', 'am', 'code'])\n);\nsplitify(\"Earth-is-our home\") should return [\"Earth\", \"is\", \"our\", \"home\"] js\nassert(\nJSON stringify(splitify('Earth-is-our home')) ===\nJSON stringify(['Earth', 'is', 'our', 'home'])\n);\nsplitify(\"This is a-sentence\") should return [\"This\", \"is\", \"a\", \"sentence\"] js\nassert(\nJSON stringify(splitify('This is a-sentence')) ===\nJSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\split-a-string-into-an-array-using-the-split-method.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3f71f6a6f552b02479e897307bcb8b09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\split-a-string-into-an-array-using-the-split-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "contain punctuation --hints-- Your code should use the split method js assert(__helpers removeJSComments(code) match(/\\ split/g)); splitify(\"Hello World,I-am code\") should return [\"Hello\", \"World\", \"I\", \"am\", \"code\"] js assert( JSON stringify(splitify('Hello World,I-am code')) === JSON stringify(['Hello', 'World', 'I', 'am', 'code']) ); splitify(\"Earth-is-our home\") should return [\"Earth\", \"is\", \"our\", \"home\"] js assert( JSON stringify(splitify('Earth-is-our home')) === JSON stringify(['Earth', 'is', 'our', 'home']) ); splitify(\"This is a-sentence\") should return [\"This\", \"is\", \"a\", \"sentence\"] js assert( JSON stringify(splitify('This is a-sentence')) === JSONstringify(['This', 'is', 'a', 'sentence'])\n);\n--seed--\n--seed-contents--\n```js\nfunction splitify(str) {\n// Only change code below this line\n// Only change code above this line\n}\nsplitify(\"Hello World,I-am code\");\n```\n--solutions--\njs\nfunction splitify(str) {\nreturn str split(/\\W/);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\split-a-string-into-an-array-using-the-split-method.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "47e1b7abdb17b253185614c02a77d6e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-functional-programming-terminology.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8e367417b2b2512b5c\ntitle: Understand Functional Programming Terminology\nchallengeType: 1\nforumTopicId: 301240\ndashedName: understand-functional-programming-terminology\n--description--\nThe FCC Team had a mood swing and now wants two types of tea: green tea and black tea General Fact: Client mood swings are pretty common With that information, we'll need to revisit the getTea function from last challenge to handle various tea requests We can modify getTea to accept a function as a parameter to be able to change the type of tea it prepares This makes getTea more flexible, and gives the programmer more control when client requests change But first, let's cover some functional terminology:\nCallbacks are the functions that are slipped or passed into another function to decide the invocation of that function You may have seen them passed to other methods, for example in filter, the callback function tells JavaScript the criteria for how to filter an array Functions that can be assigned to a variable, passed into another function, or returned from another function just like any other normal value, are called first class functions In JavaScript, all functions are first class functions The functions that take a function as an argument, or return a function as a return value, are called higher order functions When functions are passed in to or returned from another function, then those functions which were passed in or returned can be called a lambda --instructions--\nPrepare 27 cups of green tea and 13 cups of black tea and store them in tea4GreenTeamFCC and tea4BlackTeamFCC variables, respectively Note that the getTea function has been modified so it now takes a function as the first argument Note: The data (the number of cups of tea) is supplied as the last argument We'll discuss this more in later lessons --hints--\nThe tea4GreenTeamFCC variable should hold 27 cups of green tea for the team js\nassert(tea4GreenTeamFCC length === 27);\nThe tea4GreenTeamFCC variable should hold cups of green tea js\nassert(tea4GreenTeamFCC[0] === 'greenTea');\nThe tea4BlackTeamFCC variable should hold 13 cups of black tea js\nassert(tea4BlackTeamFCC length === 13);\nThe tea4BlackTeamFCC variable should hold cups of black tea",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-functional-programming-terminology.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2f85eb21a86ae9a4bd6f17b373c72887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-functional-programming-terminology.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "data (the number of cups of tea) is supplied as the last argument We'll discuss this more in later lessons --hints-- The tea4GreenTeamFCC variable should hold 27 cups of green tea for the team js assert(tea4GreenTeamFCC length === 27); The tea4GreenTeamFCC variable should hold cups of green tea js assert(tea4GreenTeamFCC[0] === 'greenTea'); The tea4BlackTeamFCC variable should hold 13 cups of black tea js assert(tea4BlackTeamFCC length === 13); The tea4BlackTeamFCC variable should hold cups of black teajs\nassert(tea4BlackTeamFCC[0] === 'blackTea');\n--seed--\n--seed-contents--\n```js\n// Function that returns a string representing a cup of green tea\nconst prepareGreenTea = () => 'greenTea';\n// Function that returns a string representing a cup of black tea\nconst prepareBlackTea = () => 'blackTea';\n/\nGiven a function (representing the tea type) and number of cups needed, the\nfollowing function returns an array of strings (each representing a cup of\na specific type of tea) /\nconst getTea = (prepareTea, numOfCups) => {\nconst teaCups = [];\nfor(let cups = 1; cups <= numOfCups; cups += 1) {\nconst teaCup = prepareTea();\nteaCups push(teaCup);\n}\nreturn teaCups;\n};\n// Only change code below this line\nconst tea4GreenTeamFCC = null;\nconst tea4BlackTeamFCC = null;\n// Only change code above this line\nconsole log(\ntea4GreenTeamFCC,\ntea4BlackTeamFCC\n);\n```\n--solutions--\n```js\nconst prepareGreenTea = () => 'greenTea';\nconst prepareBlackTea = () => 'blackTea';\nconst getTea = (prepareTea, numOfCups) => {\nconst teaCups = [];\nfor(let cups = 1; cups <= numOfCups; cups += 1) {\nconst teaCup = prepareTea();\nteaCups",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-functional-programming-terminology.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "bf5dd566a189b8c7cc7fcee6e02a97a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-functional-programming-terminology.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "prepareTea(); teaCups push(teaCup); } return teaCups; }; // Only change code below this line const tea4GreenTeamFCC = null; const tea4BlackTeamFCC = null; // Only change code above this line console log( tea4GreenTeamFCC, tea4BlackTeamFCC ); ``` --solutions-- ```js const prepareGreenTea = () => 'greenTea'; const prepareBlackTea = () => 'blackTea'; const getTea = (prepareTea, numOfCups) => { const teaCups = []; for(let cups = 1; cups <= numOfCups; cups += 1) { const teaCup = prepareTea(); teaCupspush(teaCup);\n}\nreturn teaCups;\n};\nconst tea4BlackTeamFCC = getTea(prepareBlackTea, 13);\nconst tea4GreenTeamFCC = getTea(prepareGreenTea, 27);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-functional-programming-terminology.md",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2afb202f5c4e108216fa952574bedf0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-the-hazards-of-using-imperative-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8e367417b2b2512b5d\ntitle: Understand the Hazards of Using Imperative Code\nchallengeType: 1\nforumTopicId: 301241\ndashedName: understand-the-hazards-of-using-imperative-code\n--description--\nFunctional programming is a good habit It keeps your code easy to manage, and saves you from sneaky bugs But before we get there, let's look at an imperative approach to programming to highlight where you may have issues In English (and many other languages), the imperative tense is used to give commands Similarly, an imperative style in programming is one that gives the computer a set of statements to perform a task Often the statements change the state of the program, like updating global variables A classic example is writing a for loop that gives exact directions to iterate over the indices of an array In contrast, functional programming is a form of declarative programming You tell the computer what you want done by calling a method or function JavaScript offers many predefined methods that handle common tasks so you don't need to write out how the computer should perform them For example, instead of using the for loop mentioned above, you could call the map method which handles the details of iterating over an array This helps to avoid semantic errors, like the \"Off By One Errors\" that were covered in the Debugging section Consider the scenario: you are browsing the web in your browser, and want to track the tabs you have opened Let's try to model this using some simple object-oriented code A Window object is made up of tabs, and you usually have more than one Window open The titles of each open site in each Window object is held in an array After working in the browser (opening new tabs, merging windows, and closing tabs), you want to print the tabs that are still open Closed tabs are removed from the array and new tabs (for simplicity) get added to the end of it The code editor shows an implementation of this functionality with functions for tabOpen(), tabClose(), and join() The array tabs is part of the Window object that stores the name of the open pages --instructions--\nExamine the code in the editor It's using a method that has side effects in the program, causing incorrect behavior The final list of open tabs, stored in finalTabs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-the-hazards-of-using-imperative-code.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "861ec5373544446be21a5ba1d3608c72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-the-hazards-of-using-imperative-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "array and new tabs (for simplicity) get added to the end of it The code editor shows an implementation of this functionality with functions for tabOpen(), tabClose(), and join() The array tabs is part of the Window object that stores the name of the open pages --instructions-- Examine the code in the editor It's using a method that has side effects in the program, causing incorrect behavior The final list of open tabs, stored in finalTabstabs, should be ['FB', 'Gitter', 'Reddit', 'Twitter', 'Medium', 'new tab', 'Netflix', 'YouTube', 'Vine', 'GMail', 'Work mail', 'Docs', 'freeCodeCamp', 'new tab'] but the list produced by the code is slightly different Change Window prototype tabClose so that it removes the correct tab --hints--\nfinalTabs tabs should be ['FB', 'Gitter', 'Reddit', 'Twitter', 'Medium', 'new tab', 'Netflix', 'YouTube', 'Vine', 'GMail', 'Work mail', 'Docs', 'freeCodeCamp', 'new tab']\njs\nassert deepEqual(finalTabs tabs, [\n'FB',\n'Gitter',\n'Reddit',\n'Twitter',\n'Medium',\n'new tab',\n'Netflix',\n'YouTube',\n'Vine',\n'GMail',\n'Work mail',\n'Docs',\n'freeCodeCamp',\n'new tab'\n]);\n--seed--\n--seed-contents--\n```js\n// tabs is an array of titles of each site open within the window\nconst Window = function(tabs) {\nthis tabs = tabs; // We keep a record of the array inside the object\n};\n// When you join two windows into one window\nWindow prototype join = function(otherWindow) {\nthis tabs = this tabs concat(otherWindow tabs);\nreturn this;\n};\n// When you open a new tab at the end\nWindow prototype tabOpen = function(tab) {\nthis tabs push('new tab'); // Let's open a new tab for now\nreturn this;\n};\n// When you close a tab\nWindow prototype tabClose = function(index) {\n// Only change code below this line\nconst tabsBeforeIndex = this tabs splice(0, index); // Get the tabs before the tab\nconst tabsAfterIndex = this tabs splice(index + 1); // Get the tabs after the tab\nthis tabs = tabsBeforeIndex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-the-hazards-of-using-imperative-code.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ffa69645d18be57188a9ea8e32c265c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-the-hazards-of-using-imperative-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "at the end Window prototype tabOpen = function(tab) { this tabs push('new tab'); // Let's open a new tab for now return this; }; // When you close a tab Window prototype tabClose = function(index) { // Only change code below this line const tabsBeforeIndex = this tabs splice(0, index); // Get the tabs before the tab const tabsAfterIndex = this tabs splice(index + 1); // Get the tabs after the tab this tabs = tabsBeforeIndexconcat(tabsAfterIndex); // Join them together\n// Only change code above this line\nreturn this;\n};\n// Let's create three browser windows\nconst workWindow = new Window(['GMail', 'Inbox', 'Work mail', 'Docs', 'freeCodeCamp']); // Your mailbox, drive, and other work sites\nconst socialWindow = new Window(['FB', 'Gitter', 'Reddit', 'Twitter', 'Medium']); // Social sites\nconst videoWindow = new Window(['Netflix', 'YouTube', 'Vimeo', 'Vine']); // Entertainment sites\n// Now perform the tab opening, closing, and other operations\nconst finalTabs = socialWindow tabOpen() // Open a new tab for cat memes join(videoWindow tabClose(2)) // Close third tab in video window, and join join(workWindow tabClose(1) tabOpen());\nconsole log(finalTabs tabs);\n```\n--solutions--\n```js\nconst Window = function(tabs) {\nthis tabs = tabs;\n};\nWindow prototype join = function(otherWindow) {\nthis tabs = this tabs concat(otherWindow tabs);\nreturn this;\n};\nWindow prototype tabOpen = function(tab) {\nthis tabs push('new tab');\nreturn this;\n};\nWindow prototype tabClose = function(index) {\nconst tabsBeforeIndex = this tabs slice(0, index);\nconst tabsAfterIndex = this tabs slice(index + 1);\nthis tabs = tabsBeforeIndex concat(tabsAfterIndex);\nreturn this;\n};\nconst workWindow = new Window(['GMail', 'Inbox', 'Work mail', 'Docs', 'freeCodeCamp']);\nconst socialWindow = new Window(['FB', 'Gitter', 'Reddit', 'Twitter', 'Medium']);\nconst videoWindow = new Window(['Netflix', 'YouTube', 'Vimeo', 'Vine']);\nconst finalTabs = socialWindow tabOpen() join(videoWindow tabClose(2)) join(workWindow tabClose(1) tabOpen());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\understand-the-hazards-of-using-imperative-code.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "320c04ac24713bb76c7e3c7e586b3ceb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\arguments-optional.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a97fd23d9b809dac9921074f\ntitle: Arguments Optional\nchallengeType: 1\nforumTopicId: 14271\ndashedName: arguments-optional\n--description--\nCreate a function that sums two arguments together If only one argument is provided, then return a function that expects one argument and returns the sum For example, addTogether(2, 3) should return 5, and addTogether(2) should return a function Calling this returned function with a single argument will then return the sum:\njs\nvar sumTwoAnd = addTogether(2);\nsumTwoAnd(3) returns 5 If either argument isn't a valid number, return undefined --hints--\naddTogether(2, 3) should return 5 js\nassert deepEqual(addTogether(2, 3), 5);\naddTogether(23 4, 30) should return 53 4 js\nassert deepEqual(addTogether(23 4, 30), 53 4);\naddTogether(\"2\", 3) should return undefined js\nassert isUndefined(addTogether('2', 3));\naddTogether(5, undefined) should return undefined js\nassert isUndefined(addTogether(5, undefined));\naddTogether(\"https://www youtube com/watch v=dQw4w9WgXcQ\") should return undefined js\nassert isUndefined(addTogether('https://www youtube com/watch v=dQw4w9WgXcQ'));\naddTogether(5) should return a function js\nassert deepEqual(typeof(addTogether(5)), 'function');\naddTogether(5)(7) should return 12 js\nassert deepEqual(addTogether(5)(7), 12);\naddTogether(2)([3]) should return undefined js\nassert isUndefined(addTogether(2)([3]));\naddTogether(2, \"3\") should return undefined js\nassert isUndefined(addTogether(2, '3'));\n--seed--\n--seed-contents--\n```js\nfunction addTogether() {\nreturn false;\n}\naddTogether(2,3);\n```\n--solutions--\njs\nfunction addTogether() {\nconst first = arguments[0];\nif (typeof(first) == 'number') {\nreturn undefined;\n}\nif (arguments length === 1) {\nreturn function(second) {\nif (typeof(second)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\arguments-optional.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "af6aa0cabb18dfaa12d72a0ec1e8640c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\arguments-optional.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "isUndefined(addTogether('https://www youtube com/watch v=dQw4w9WgXcQ')); addTogether(5) should return a function js assert deepEqual(typeof(addTogether(5)), 'function'); addTogether(5)(7) should return 12 js assert deepEqual(addTogether(5)(7), 12); addTogether(2)([3]) should return undefined js assert isUndefined(addTogether(2)([3])); addTogether(2, \"3\") should return undefined js assert isUndefined(addTogether(2, '3')); --seed-- --seed-contents-- ```js function addTogether() { return false; } addTogether(2,3); ``` --solutions-- js function addTogether() { const first = arguments[0]; if (typeof(first) == 'number') { return undefined; } if (arguments length === 1) { return function(second) { if (typeof(second)== 'number') {\nreturn undefined;\n}\nreturn first + second;\n};\n}\nconst second = arguments[1];\nif (typeof(second) == 'number') {\nreturn undefined;\n}\nreturn first + second;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\arguments-optional.md",
      "source_type": "git_repo"
    },
    "token_count": 236,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "88cc77d04e25c6fd887bed8ae10dadcf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\binary-agents.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a8d97bd4c764e91f9d2bda01\ntitle: Binary Agents\nchallengeType: 1\nforumTopicId: 14273\ndashedName: binary-agents\n--description--\nReturn an English translated sentence of the passed binary string The binary string will be space separated --hints--\nbinaryAgent(\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\") should return the string Aren't bonfires fun js\nassert deepEqual(\nbinaryAgent(\n'01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111'\n),\n\"Aren't bonfires fun \"\n);\nbinaryAgent(\"01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001\") should return the string I love FreeCodeCamp js\nassert deepEqual(\nbinaryAgent(\n'01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001'\n),\n'I love FreeCodeCamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\binary-agents.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ef852f25f1c76f299b420b2e91be8270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\binary-agents.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111' ), \"Aren't bonfires fun \" ); binaryAgent(\"01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001\") should return the string I love FreeCodeCamp js assert deepEqual( binaryAgent( '01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001' ), 'I love FreeCodeCamp'\n);\n--seed--\n--seed-contents--\n```js\nfunction binaryAgent(str) {\nreturn str;\n}\nbinaryAgent(\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\");\n```\n--solutions--\njs\nfunction binaryAgent(str) {\nreturn str split(' ') map(function(s) { return parseInt(s, 2); }) map(function(b) { return String fromCharCode(b);}) join('');\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\binary-agents.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "aa9301b216002cb66f88e977fd6485ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\convert-html-entities.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a6b0bb188d873cb2c8729495\ntitle: Convert HTML Entities\nchallengeType: 1\nforumTopicId: 16007\ndashedName: convert-html-entities\n--description--\nConvert the characters &, <, >, \" (double quote), and ' (apostrophe), in a string to their corresponding HTML entities.\n--hints--\nconvertHTML(\"Dolce & Gabbana\") should return the string Dolce &amp; Gabbana.\njs\nassert.match(convertHTML('Dolce & Gabbana'), /Dolce &amp; Gabbana/);\nconvertHTML(\"Hamburgers < Pizza < Tacos\") should return the string Hamburgers &lt; Pizza &lt; Tacos.\njs\nassert.match(\nconvertHTML('Hamburgers < Pizza < Tacos'),\n/Hamburgers &lt; Pizza &lt; Tacos/\n);\nconvertHTML(\"Sixty > twelve\") should return the string Sixty &gt; twelve.\njs\nassert.match(convertHTML('Sixty > twelve'), /Sixty &gt; twelve/);\nconvertHTML('Stuff in \"quotation marks\"') should return the string Stuff in &quot;quotation marks&quot;.\njs\nassert.match(\nconvertHTML('Stuff in \"quotation marks\"'),\n/Stuff in &quot;quotation marks&quot;/\n);\nconvertHTML(\"Schindler's List\") should return the string Schindler&apos;s List.\njs\nassert.match(convertHTML(\"Schindler's List\"), /Schindler&apos;s List/);\nconvertHTML(\"<>\") should return the string &lt;&gt;.\njs\nassert.match(convertHTML('<>'), /&lt;&gt;/);\nconvertHTML(\"abc\") should return the string abc.\njs\nassert.strictEqual(convertHTML('abc'), 'abc');\n--seed--\n--seed-contents--\n```js\nfunction convertHTML(str) {\nreturn str;\n}\nconvertHTML(\"Dolce & Gabbana\");\n```\n--solutions--\n```js\nvar MAP = { '&': '&',\n'<': '<',\n'>': '>',\n'\"': '\"',\n\"'\": '''};\nfunction convertHTML(str) {\nreturn str.replace(/[&<>\"']/g, function(c) {\nreturn MAP[c];\n});\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1836,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\convert-html-entities.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6296061cb67b4272debe921d0942532e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8f367417b2b2512b61\ntitle: Use the map Method to Extract Data from an Array\nchallengeType: 1\nforumTopicId: 18214\ndashedName: use-the-map-method-to-extract-data-from-an-array\n--description--\nSo far we have learned to use pure functions to avoid side effects in a program Also, we have seen the value in having a function only depend on its input arguments This is only the beginning As its name suggests, functional programming is centered around a theory of functions It would make sense to be able to pass them as arguments to other functions, and return a function from another function Functions are considered first class objects in JavaScript, which means they can be used like any other object They can be saved in variables, stored in an object, or passed as function arguments Let's start with some simple array functions, which are methods on the array object prototype In this exercise we are looking at Array prototype map(), or more simply map The map method iterates over each item in an array and returns a new array containing the results of calling the callback function on each element It does this without mutating the original array When the callback is used, it is passed three arguments The first argument is the current element being processed The second is the index of that element and the third is the array upon which the map method was called See below for an example using the map method on the users array to return a new array containing only the names of the users as elements For simplicity, the example only uses the first argument of the callback ```js\nconst users = [\n{ name: 'John', age: 34 },\n{ name: 'Amy', age: 20 },\n{ name: 'camperCat', age: 10 }\n];\nconst names = users map(user => user name);\nconsole log(names);\n```\nThe console would display the value [ 'John', 'Amy', 'camperCat' ] --instructions--\nThe watchList array holds objects with information on several movies Use map on watchList to assign a new array of objects to the ratings variable Each movie in the new array should have only a title key with the name of the film, and a rating key with the IMDB rating The code in the editor currently uses a for loop to do this, so you should replace the loop functionality with your map expression --hints--\nThe watchList variable should not change",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "ad66de6cfb18c32a7c9ee206930b6c6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "information on several movies Use map on watchList to assign a new array of objects to the ratings variable Each movie in the new array should have only a title key with the name of the film, and a rating key with the IMDB rating The code in the editor currently uses a for loop to do this, so you should replace the loop functionality with your map expression --hints-- The watchList variable should not changejs\nassert(\nwatchList[0] Title === 'Inception' && watchList[4] Director == 'James Cameron'\n);\nYour code should not use a for loop js\nassert( __helpers removeJSComments(code) match(/for\\s* \\([\\s\\S]* \\)/));\nYour code should use the map method js\nassert(__helpers removeJSComments(code) match(/\\ map/g));\nratings should equal [{\"title\": \"Inception\", \"rating\": \"8 8\"}, {\"title\": \"Interstellar\", \"rating\": \"8 6\"}, {\"title\": \"The Dark Knight\", \"rating\": \"9 0\"},{\"title\": \"Batman Begins\", \"rating\": \"8 3\"}, {\"title\": \"Avatar\", \"rating\": \"7 9\"}] js\nassert deepEqual(ratings, [\n{ title: 'Inception', rating: '8 8' },\n{ title: 'Interstellar', rating: '8 6' },\n{ title: 'The Dark Knight', rating: '9 0' },\n{ title: 'Batman Begins', rating: '8 3' },\n{ title: 'Avatar', rating: '7 9' }\n]);\n--seed--\n--seed-contents--\n```js\n// The global variable\nconst watchList = [\n{\n\"Title\": \"Inception\",\n\"Year\": \"2010\",\n\"Rated\": \"PG-13\",\n\"Released\": \"16 Jul 2010\",\n\"Runtime\": \"148 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Christopher Nolan\",\n\"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\",\n\"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \",\n\"Language\": \"English, Japanese, French\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "5343dc59378c6efb6e28f96f0936c11c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Inception\", \"Year\": \"2010\", \"Rated\": \"PG-13\", \"Released\": \"16 Jul 2010\", \"Runtime\": \"148 min\", \"Genre\": \"Action, Adventure, Crime\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Christopher Nolan\", \"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\", \"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \", \"Language\": \"English, Japanese, French\", \"Country\": \"USA, UK\", \"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations\",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8 8\",\n\"imdbVotes\": \"1,446,708\",\n\"imdbID\": \"tt1375666\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Interstellar\",\n\"Year\": \"2014\",\n\"Rated\": \"PG-13\",\n\"Released\": \"07 Nov 2014\",\n\"Runtime\": \"169 min\",\n\"Genre\": \"Adventure, Drama, Sci-Fi\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan, Christopher Nolan\",\n\"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\",\n\"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \",\n\"Language\": \"English\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "f8531542f3ae5fabee7dbec9d43c38bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"2014\", \"Rated\": \"PG-13\", \"Released\": \"07 Nov 2014\", \"Runtime\": \"169 min\", \"Genre\": \"Adventure, Drama, Sci-Fi\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Jonathan Nolan, Christopher Nolan\", \"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\", \"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \", \"Language\": \"English\", \"Country\": \"USA, UK\", \"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"86\",\n\"imdbVotes\": \"910,366\",\n\"imdbID\": \"tt0816692\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"The Dark Knight\",\n\"Year\": \"2008\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Jul 2008\",\n\"Runtime\": \"152 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan (screenplay), Christopher Nolan (screenplay), Christopher Nolan (story), David S Goyer (story), Bob Kane (characters)\",\n\"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\",\n\"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \",\n\"Language\": \"English, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "081628284cc904ab6d577eb847cab6de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "David S Goyer (story), Bob Kane (characters)\", \"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\", \"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \", \"Language\": \"English, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"82\",\n\"imdbRating\": \"9 0\",\n\"imdbVotes\": \"1,652,832\",\n\"imdbID\": \"tt0468569\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Batman Begins\",\n\"Year\": \"2005\",\n\"Rated\": \"PG-13\",\n\"Released\": \"15 Jun 2005\",\n\"Runtime\": \"140 min\",\n\"Genre\": \"Action, Adventure\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Bob Kane (characters), David S Goyer (story), Christopher Nolan (screenplay), David S Goyer (screenplay)\",\n\"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\",\n\"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \",\n\"Language\": \"English, Urdu, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\",\n\"Metascore\": \"70\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "61ddd3c1dd72ea7baf411ae225aa4828",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(story), Christopher Nolan (screenplay), David S Goyer (screenplay)\", \"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\", \"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \", \"Language\": \"English, Urdu, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\", \"Metascore\": \"70\", \"imdbRating\": \"83\",\n\"imdbVotes\": \"972,584\",\n\"imdbID\": \"tt0372784\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Avatar\",\n\"Year\": \"2009\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Dec 2009\",\n\"Runtime\": \"162 min\",\n\"Genre\": \"Action, Adventure, Fantasy\",\n\"Director\": \"James Cameron\",\n\"Writer\": \"James Cameron\",\n\"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\",\n\"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \",\n\"Language\": \"English, Spanish\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\",\n\"Metascore\": \"83\",\n\"imdbRating\": \"7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "611eb2866b7f0accd357c92501883406",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "min\", \"Genre\": \"Action, Adventure, Fantasy\", \"Director\": \"James Cameron\", \"Writer\": \"James Cameron\", \"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\", \"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \", \"Language\": \"English, Spanish\", \"Country\": \"USA, UK\", \"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\", \"Metascore\": \"83\", \"imdbRating\": \"79\",\n\"imdbVotes\": \"876,575\",\n\"imdbID\": \"tt0499549\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n}\n];\n// Only change code below this line\nconst ratings = [];\nfor (let i = 0; i < watchList length; i++) {\nratings push({title: watchList[i][\"Title\"], rating: watchList[i][\"imdbRating\"]});\n}\n// Only change code above this line\nconsole log(JSON stringify(ratings));\n```\n--solutions--\n```js\nconst watchList = [\n{\n\"Title\": \"Inception\",\n\"Year\": \"2010\",\n\"Rated\": \"PG-13\",\n\"Released\": \"16 Jul 2010\",\n\"Runtime\": \"148 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Christopher Nolan\",\n\"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\",\n\"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \",\n\"Language\": \"English, Japanese, French\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \",\n\"Poster\": \"http://ia media-imdb",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "bc6ff51a41dd0f57066a1259cf809a1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"PG-13\", \"Released\": \"16 Jul 2010\", \"Runtime\": \"148 min\", \"Genre\": \"Action, Adventure, Crime\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Christopher Nolan\", \"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\", \"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \", \"Language\": \"English, Japanese, French\", \"Country\": \"USA, UK\", \"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \", \"Poster\": \"http://ia media-imdbcom/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8 8\",\n\"imdbVotes\": \"1,446,708\",\n\"imdbID\": \"tt1375666\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Interstellar\",\n\"Year\": \"2014\",\n\"Rated\": \"PG-13\",\n\"Released\": \"07 Nov 2014\",\n\"Runtime\": \"169 min\",\n\"Genre\": \"Adventure, Drama, Sci-Fi\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan, Christopher Nolan\",\n\"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\",\n\"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \",\n\"Language\": \"English\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "5f64c78d691dd98b72b14c2df98da663",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"2014\", \"Rated\": \"PG-13\", \"Released\": \"07 Nov 2014\", \"Runtime\": \"169 min\", \"Genre\": \"Adventure, Drama, Sci-Fi\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Jonathan Nolan, Christopher Nolan\", \"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\", \"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \", \"Language\": \"English\", \"Country\": \"USA, UK\", \"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"86\",\n\"imdbVotes\": \"910,366\",\n\"imdbID\": \"tt0816692\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"The Dark Knight\",\n\"Year\": \"2008\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Jul 2008\",\n\"Runtime\": \"152 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan (screenplay), Christopher Nolan (screenplay), Christopher Nolan (story), David S Goyer (story), Bob Kane (characters)\",\n\"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\",\n\"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \",\n\"Language\": \"English, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "1ce63f142d7ce6bf3fff2d1380a833e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "David S Goyer (story), Bob Kane (characters)\", \"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\", \"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \", \"Language\": \"English, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"82\",\n\"imdbRating\": \"9 0\",\n\"imdbVotes\": \"1,652,832\",\n\"imdbID\": \"tt0468569\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Batman Begins\",\n\"Year\": \"2005\",\n\"Rated\": \"PG-13\",\n\"Released\": \"15 Jun 2005\",\n\"Runtime\": \"140 min\",\n\"Genre\": \"Action, Adventure\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Bob Kane (characters), David S Goyer (story), Christopher Nolan (screenplay), David S Goyer (screenplay)\",\n\"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\",\n\"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \",\n\"Language\": \"English, Urdu, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\",\n\"Metascore\": \"70\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "3bbfd73a5c594b1d2be7b4496ab0ca10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(story), Christopher Nolan (screenplay), David S Goyer (screenplay)\", \"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\", \"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \", \"Language\": \"English, Urdu, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\", \"Metascore\": \"70\", \"imdbRating\": \"83\",\n\"imdbVotes\": \"972,584\",\n\"imdbID\": \"tt0372784\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Avatar\",\n\"Year\": \"2009\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Dec 2009\",\n\"Runtime\": \"162 min\",\n\"Genre\": \"Action, Adventure, Fantasy\",\n\"Director\": \"James Cameron\",\n\"Writer\": \"James Cameron\",\n\"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\",\n\"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \",\n\"Language\": \"English, Spanish\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\",\n\"Metascore\": \"83\",\n\"imdbRating\": \"7 9\",\n\"imdbVotes\": \"876,575\",\n\"imdbID\": \"tt0499549\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n}\n];\nconst ratings = watchList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "63e1e7e5231ae3679df2b051cc566509",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Saldana, Sigourney Weaver, Stephen Lang\", \"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \", \"Language\": \"English, Spanish\", \"Country\": \"USA, UK\", \"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\", \"Metascore\": \"83\", \"imdbRating\": \"7 9\", \"imdbVotes\": \"876,575\", \"imdbID\": \"tt0499549\", \"Type\": \"movie\", \"Response\": \"True\" } ]; const ratings = watchListmap(function(movie) {\nreturn {\ntitle: movie[\"Title\"],\nrating: movie[\"imdbRating\"]\n}\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13086,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-map-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "a8f7d842fabafb6ac491179221d4baa1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\dna-pairing.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: afd15382cdfb22c9efe8b7de\ntitle: DNA Pairing\nchallengeType: 1\nforumTopicId: 16009\ndashedName: dna-pairing\n--description--\nPairs of DNA strands consist of nucleobase pairs. Base pairs are represented by the characters AT and CG, which form building blocks of the DNA double helix.\nThe DNA strand is missing the pairing element. Write a function to match the missing base pairs for the provided DNA strand. For each character in the provided string, find the base pair character. Return the results as a 2d array.\nFor example, for the input GCG, return [[\"G\", \"C\"], [\"C\",\"G\"], [\"G\", \"C\"]]\nThe character and its pair are paired up in an array, and all the arrays are grouped into one encapsulating array.\n--hints--\npairElement(\"ATCGA\") should return [[\"A\",\"T\"],[\"T\",\"A\"],[\"C\",\"G\"],[\"G\",\"C\"],[\"A\",\"T\"]].\njs\nassert.deepEqual(pairElement('ATCGA'), [\n['A', 'T'],\n['T', 'A'],\n['C', 'G'],\n['G', 'C'],\n['A', 'T']\n]);\npairElement(\"TTGAG\") should return [[\"T\",\"A\"],[\"T\",\"A\"],[\"G\",\"C\"],[\"A\",\"T\"],[\"G\",\"C\"]].\njs\nassert.deepEqual(pairElement('TTGAG'), [\n['T', 'A'],\n['T', 'A'],\n['G', 'C'],\n['A', 'T'],\n['G', 'C']\n]);\npairElement(\"CTCTA\") should return [[\"C\",\"G\"],[\"T\",\"A\"],[\"C\",\"G\"],[\"T\",\"A\"],[\"A\",\"T\"]].\njs\nassert.deepEqual(pairElement('CTCTA'), [\n['C', 'G'],\n['T', 'A'],\n['C', 'G'],\n['T', 'A'],\n['A', 'T']\n]);\n--seed--\n--seed-contents--\n```js\nfunction pairElement(str) {\nreturn str;\n}\npairElement(\"GCG\");\n```\n--solutions--\n```js\nvar lookup = Object.create(null);\nlookup.A = 'T';\nlookup.T = 'A';\nlookup.C = 'G';\nlookup.G = 'C';\nfunction pairElement(str) {\nreturn str.split('').map(function(p) {return [p, lookup[p]];});\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\dna-pairing.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a7ad80a212111bad4744338bf864c191",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a5de63ebea8dbee56860f4f2\ntitle: Diff Two Arrays\nchallengeType: 1\nforumTopicId: 16008\ndashedName: diff-two-arrays\n--description--\nCompare two arrays and return a new array with any items only found in one of the two given arrays, but not both In other words, return the symmetric difference of the two arrays Note: You can return the array with its elements in any order --hints--\ndiffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]) should return an array js\nassert(typeof diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]) === 'object');\n[\"diorite\", \"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return [\"pink wool\"] js\nassert sameMembers(\ndiffArray(\n['diorite', 'andesite', 'grass', 'dirt', 'pink wool', 'dead shrub'],\n['diorite', 'andesite', 'grass', 'dirt', 'dead shrub']\n),\n['pink wool']\n);\n[\"diorite\", \"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return an array with one item js\nassert(\ndiffArray(\n['diorite', 'andesite', 'grass', 'dirt', 'pink wool', 'dead shrub'],\n['diorite', 'andesite', 'grass', 'dirt', 'dead shrub']\n) length === 1\n);\n[\"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return [\"diorite\", \"pink wool\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2dce0fbbbf43772b5adb904622cd4c81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "wool', 'dead shrub'], ['diorite', 'andesite', 'grass', 'dirt', 'dead shrub'] ), ['pink wool'] ); [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return an array with one item js assert( diffArray( ['diorite', 'andesite', 'grass', 'dirt', 'pink wool', 'dead shrub'], ['diorite', 'andesite', 'grass', 'dirt', 'dead shrub'] ) length === 1 ); [\"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return [\"diorite\", \"pink wool\"] js assertsameMembers(\ndiffArray(\n['andesite', 'grass', 'dirt', 'pink wool', 'dead shrub'],\n['diorite', 'andesite', 'grass', 'dirt', 'dead shrub']\n),\n['diorite', 'pink wool']\n);\n[\"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return an array with two items js\nassert(\ndiffArray(\n['andesite', 'grass', 'dirt', 'pink wool', 'dead shrub'],\n['diorite', 'andesite', 'grass', 'dirt', 'dead shrub']\n) length === 2\n);\n[\"andesite\", \"grass\", \"dirt\", \"dead shrub\"], [\"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return [] js\nassert sameMembers(\ndiffArray(\n['andesite', 'grass', 'dirt', 'dead shrub'],\n['andesite', 'grass', 'dirt', 'dead shrub']\n),\n[]\n);\n[\"andesite\", \"grass\", \"dirt\", \"dead shrub\"], [\"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return an empty array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "bcca224e8c75730dfdc36faf765735b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"dirt\", \"dead shrub\"] should return an array with two items js assert( diffArray( ['andesite', 'grass', 'dirt', 'pink wool', 'dead shrub'], ['diorite', 'andesite', 'grass', 'dirt', 'dead shrub'] ) length === 2 ); [\"andesite\", \"grass\", \"dirt\", \"dead shrub\"], [\"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return [] js assert sameMembers( diffArray( ['andesite', 'grass', 'dirt', 'dead shrub'], ['andesite', 'grass', 'dirt', 'dead shrub'] ), [] ); [\"andesite\", \"grass\", \"dirt\", \"dead shrub\"], [\"andesite\", \"grass\", \"dirt\", \"dead shrub\"] should return an empty arrayjs\nassert(\ndiffArray(\n['andesite', 'grass', 'dirt', 'dead shrub'],\n['andesite', 'grass', 'dirt', 'dead shrub']\n) length === 0\n);\n[1, 2, 3, 5], [1, 2, 3, 4, 5] should return [4] js\nassert sameMembers(diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]), [4]);\n[1, 2, 3, 5], [1, 2, 3, 4, 5] should return an array with one item js\nassert(diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]) length === 1);\n[1, \"calf\", 3, \"piglet\"], [1, \"calf\", 3, 4] should return [\"piglet\", 4] js\nassert sameMembers(diffArray([1, 'calf', 3, 'piglet'], [1, 'calf', 3, 4]), [\n'piglet',\n4\n]);\n[1, \"calf\", 3, \"piglet\"], [1, \"calf\", 3, 4] should return an array with two items",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "0f52c061b4225e232a9ca89f2e30759a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[1, 2, 3, 4, 5]), [4]); [1, 2, 3, 5], [1, 2, 3, 4, 5] should return an array with one item js assert(diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]) length === 1); [1, \"calf\", 3, \"piglet\"], [1, \"calf\", 3, 4] should return [\"piglet\", 4] js assert sameMembers(diffArray([1, 'calf', 3, 'piglet'], [1, 'calf', 3, 4]), [ 'piglet', 4 ]); [1, \"calf\", 3, \"piglet\"], [1, \"calf\", 3, 4] should return an array with two itemsjs\nassert(diffArray([1, 'calf', 3, 'piglet'], [1, 'calf', 3, 4]) length === 2);\n[], [\"snuffleupagus\", \"cookie monster\", \"elmo\"] should return [\"snuffleupagus\", \"cookie monster\", \"elmo\"] js\nassert sameMembers(diffArray([], ['snuffleupagus', 'cookie monster', 'elmo']), [\n'snuffleupagus',\n'cookie monster',\n'elmo'\n]);\n[], [\"snuffleupagus\", \"cookie monster\", \"elmo\"] should return an array with three items js\nassert(diffArray([], ['snuffleupagus', 'cookie monster', 'elmo']) length === 3);\n[1, \"calf\", 3, \"piglet\"], [7, \"filly\"] should return [1, \"calf\", 3, \"piglet\", 7, \"filly\"] js\nassert sameMembers(diffArray([1, 'calf', 3, 'piglet'], [7, 'filly']), [\n1,\n'calf',\n3,\n'piglet',\n7,\n'filly'\n]);\n[1, \"calf\", 3, \"piglet\"], [7, \"filly\"] should return an array with six items js\nassert(diffArray([1, 'calf', 3, 'piglet'], [7, 'filly'])",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "a86d3d87f7e07001b7f79debc85d5233",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'snuffleupagus', 'cookie monster', 'elmo' ]); [], [\"snuffleupagus\", \"cookie monster\", \"elmo\"] should return an array with three items js assert(diffArray([], ['snuffleupagus', 'cookie monster', 'elmo']) length === 3); [1, \"calf\", 3, \"piglet\"], [7, \"filly\"] should return [1, \"calf\", 3, \"piglet\", 7, \"filly\"] js assert sameMembers(diffArray([1, 'calf', 3, 'piglet'], [7, 'filly']), [ 1, 'calf', 3, 'piglet', 7, 'filly' ]); [1, \"calf\", 3, \"piglet\"], [7, \"filly\"] should return an array with six items js assert(diffArray([1, 'calf', 3, 'piglet'], [7, 'filly'])length === 6);\n--seed--\n--seed-contents--\n```js\nfunction diffArray(arr1, arr2) {\nconst newArr = [];\nreturn newArr;\n}\ndiffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);\n```\n--solutions--\n```js\nfunction diffArray(arr1, arr2) {\nif (arr1 length === 0) return arr2;\nif (arr2 length === 0) return arr1;\nconst set1 = new Set(arr1);\nconst set2 = new Set(arr2);\nconst newArr = [];\nset1 forEach(element => {\nif ( set2 has(element)) newArr push(element);\n});\nset2 forEach(element => {\nif ( set1 has(element)) newArr push(element);\n});\nreturn newArr;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\diff-two-arrays.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "522878729ab7b67f7c8955ebd1696414",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7b8f367417b2b2512b63\ntitle: Use the filter Method to Extract Data from an Array\nchallengeType: 1\nforumTopicId: 18179\ndashedName: use-the-filter-method-to-extract-data-from-an-array\n--description--\nAnother useful array function is Array prototype filter(), or simply filter() filter calls a function on each element of an array and returns a new array containing only the elements for which that function returns a truthy value - that is, a value which returns true if passed to the Boolean() constructor In other words, it filters the array, based on the function passed to it Like map, it does this without needing to modify the original array The callback function accepts three arguments The first argument is the current element being processed The second is the index of that element and the third is the array upon which the filter method was called See below for an example using the filter method on the users array to return a new array containing only the users under the age of 30 For simplicity, the example only uses the first argument of the callback ```js\nconst users = [\n{ name: 'John', age: 34 },\n{ name: 'Amy', age: 20 },\n{ name: 'camperCat', age: 10 }\n];\nconst usersUnder30 = users filter(user => user age < 30);\nconsole log(usersUnder30);\n```\nThe console would display the value [ { name: 'Amy', age: 20 }, { name: 'camperCat', age: 10 } ] --instructions--\nThe variable watchList holds an array of objects with information on several movies Use a combination of filter and map on watchList to assign a new array of objects with only title and rating keys The new array should only include objects where imdbRating is greater than or equal to 8 0 Note that the rating values are saved as strings in the object and you may need to convert them into numbers to perform mathematical operations on them --hints--\nThe watchList variable should not change js\nassert(\nwatchList[0] Title === 'Inception' && watchList[4] Director == 'James Cameron'\n);\nYour code should use the filter method js\nassert(__helpers removeJSComments(code) match(/\\s*\\ \\s*filter/g));\nYour code should not use a for loop js\nassert( __helpers removeJSComments(code) match(/for\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "2c2ea81fd926c569b7c431774cea4870",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "equal to 8 0 Note that the rating values are saved as strings in the object and you may need to convert them into numbers to perform mathematical operations on them --hints-- The watchList variable should not change js assert( watchList[0] Title === 'Inception' && watchList[4] Director == 'James Cameron' ); Your code should use the filter method js assert(__helpers removeJSComments(code) match(/\\s*\\ \\s*filter/g)); Your code should not use a for loop js assert( __helpers removeJSComments(code) match(/for\\s*\\([\\s\\S]* \\)/g));\nfilteredList should equal [{\"title\": \"Inception\", \"rating\": \"8 8\"}, {\"title\": \"Interstellar\", \"rating\": \"8 6\"}, {\"title\": \"The Dark Knight\", \"rating\": \"9 0\"}, {\"title\": \"Batman Begins\", \"rating\": \"8 3\"}] js\nassert deepEqual(filteredList, [\n{ title: 'Inception', rating: '8 8' },\n{ title: 'Interstellar', rating: '8 6' },\n{ title: 'The Dark Knight', rating: '9 0' },\n{ title: 'Batman Begins', rating: '8 3' }\n]);\n--seed--\n--seed-contents--\n```js\n// The global variable\nconst watchList = [\n{\n\"Title\": \"Inception\",\n\"Year\": \"2010\",\n\"Rated\": \"PG-13\",\n\"Released\": \"16 Jul 2010\",\n\"Runtime\": \"148 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Christopher Nolan\",\n\"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\",\n\"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \",\n\"Language\": \"English, Japanese, French\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "f9efdba2fa33f58a5fa42b85f14c8023",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"16 Jul 2010\", \"Runtime\": \"148 min\", \"Genre\": \"Action, Adventure, Crime\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Christopher Nolan\", \"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\", \"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \", \"Language\": \"English, Japanese, French\", \"Country\": \"USA, UK\", \"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8 8\",\n\"imdbVotes\": \"1,446,708\",\n\"imdbID\": \"tt1375666\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Interstellar\",\n\"Year\": \"2014\",\n\"Rated\": \"PG-13\",\n\"Released\": \"07 Nov 2014\",\n\"Runtime\": \"169 min\",\n\"Genre\": \"Adventure, Drama, Sci-Fi\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan, Christopher Nolan\",\n\"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\",\n\"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \",\n\"Language\": \"English\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "4dffd72344f1fa2848c555e6987fe462",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"2014\", \"Rated\": \"PG-13\", \"Released\": \"07 Nov 2014\", \"Runtime\": \"169 min\", \"Genre\": \"Adventure, Drama, Sci-Fi\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Jonathan Nolan, Christopher Nolan\", \"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\", \"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \", \"Language\": \"English\", \"Country\": \"USA, UK\", \"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"86\",\n\"imdbVotes\": \"910,366\",\n\"imdbID\": \"tt0816692\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"The Dark Knight\",\n\"Year\": \"2008\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Jul 2008\",\n\"Runtime\": \"152 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan (screenplay), Christopher Nolan (screenplay), Christopher Nolan (story), David S Goyer (story), Bob Kane (characters)\",\n\"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\",\n\"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \",\n\"Language\": \"English, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "2235bbf93dde48de2a76b8eda21e890e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "David S Goyer (story), Bob Kane (characters)\", \"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\", \"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \", \"Language\": \"English, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"82\",\n\"imdbRating\": \"9 0\",\n\"imdbVotes\": \"1,652,832\",\n\"imdbID\": \"tt0468569\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Batman Begins\",\n\"Year\": \"2005\",\n\"Rated\": \"PG-13\",\n\"Released\": \"15 Jun 2005\",\n\"Runtime\": \"140 min\",\n\"Genre\": \"Action, Adventure\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Bob Kane (characters), David S Goyer (story), Christopher Nolan (screenplay), David S Goyer (screenplay)\",\n\"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\",\n\"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \",\n\"Language\": \"English, Urdu, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\",\n\"Metascore\": \"70\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "be1d0edb0c454d7b172da04d2846406a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(story), Christopher Nolan (screenplay), David S Goyer (screenplay)\", \"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\", \"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \", \"Language\": \"English, Urdu, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\", \"Metascore\": \"70\", \"imdbRating\": \"83\",\n\"imdbVotes\": \"972,584\",\n\"imdbID\": \"tt0372784\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Avatar\",\n\"Year\": \"2009\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Dec 2009\",\n\"Runtime\": \"162 min\",\n\"Genre\": \"Action, Adventure, Fantasy\",\n\"Director\": \"James Cameron\",\n\"Writer\": \"James Cameron\",\n\"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\",\n\"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \",\n\"Language\": \"English, Spanish\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\",\n\"Metascore\": \"83\",\n\"imdbRating\": \"7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "46d96b104098ec52a47ef227c897704f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "min\", \"Genre\": \"Action, Adventure, Fantasy\", \"Director\": \"James Cameron\", \"Writer\": \"James Cameron\", \"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\", \"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \", \"Language\": \"English, Spanish\", \"Country\": \"USA, UK\", \"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\", \"Metascore\": \"83\", \"imdbRating\": \"79\",\n\"imdbVotes\": \"876,575\",\n\"imdbID\": \"tt0499549\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n}\n];\n// Only change code below this line\nconst filteredList = \"\";\n// Only change code above this line\nconsole log(filteredList);\n```\n--solutions--\n```js\nconst watchList = [\n{\n\"Title\": \"Inception\",\n\"Year\": \"2010\",\n\"Rated\": \"PG-13\",\n\"Released\": \"16 Jul 2010\",\n\"Runtime\": \"148 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Christopher Nolan\",\n\"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\",\n\"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \",\n\"Language\": \"English, Japanese, French\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "2cfbbdd5af569766f2ce7bc87a260663",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "min\", \"Genre\": \"Action, Adventure, Crime\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Christopher Nolan\", \"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\", \"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \", \"Language\": \"English, Japanese, French\", \"Country\": \"USA, UK\", \"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"88\",\n\"imdbVotes\": \"1,446,708\",\n\"imdbID\": \"tt1375666\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Interstellar\",\n\"Year\": \"2014\",\n\"Rated\": \"PG-13\",\n\"Released\": \"07 Nov 2014\",\n\"Runtime\": \"169 min\",\n\"Genre\": \"Adventure, Drama, Sci-Fi\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan, Christopher Nolan\",\n\"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\",\n\"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \",\n\"Language\": \"English\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "35df1ca702a96441367ad18d751faefa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"2014\", \"Rated\": \"PG-13\", \"Released\": \"07 Nov 2014\", \"Runtime\": \"169 min\", \"Genre\": \"Adventure, Drama, Sci-Fi\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Jonathan Nolan, Christopher Nolan\", \"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\", \"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \", \"Language\": \"English\", \"Country\": \"USA, UK\", \"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"86\",\n\"imdbVotes\": \"910,366\",\n\"imdbID\": \"tt0816692\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"The Dark Knight\",\n\"Year\": \"2008\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Jul 2008\",\n\"Runtime\": \"152 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan (screenplay), Christopher Nolan (screenplay), Christopher Nolan (story), David S Goyer (story), Bob Kane (characters)\",\n\"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\",\n\"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \",\n\"Language\": \"English, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "3b6dc50553eba434308fcadcaf444025",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "David S Goyer (story), Bob Kane (characters)\", \"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\", \"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \", \"Language\": \"English, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"82\",\n\"imdbRating\": \"9 0\",\n\"imdbVotes\": \"1,652,832\",\n\"imdbID\": \"tt0468569\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Batman Begins\",\n\"Year\": \"2005\",\n\"Rated\": \"PG-13\",\n\"Released\": \"15 Jun 2005\",\n\"Runtime\": \"140 min\",\n\"Genre\": \"Action, Adventure\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Bob Kane (characters), David S Goyer (story), Christopher Nolan (screenplay), David S Goyer (screenplay)\",\n\"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\",\n\"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \",\n\"Language\": \"English, Urdu, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\",\n\"Metascore\": \"70\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "510d20fa48658720f3f9dfcf7e2c98a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(story), Christopher Nolan (screenplay), David S Goyer (screenplay)\", \"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\", \"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \", \"Language\": \"English, Urdu, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\", \"Metascore\": \"70\", \"imdbRating\": \"83\",\n\"imdbVotes\": \"972,584\",\n\"imdbID\": \"tt0372784\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Avatar\",\n\"Year\": \"2009\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Dec 2009\",\n\"Runtime\": \"162 min\",\n\"Genre\": \"Action, Adventure, Fantasy\",\n\"Director\": \"James Cameron\",\n\"Writer\": \"James Cameron\",\n\"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\",\n\"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \",\n\"Language\": \"English, Spanish\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\",\n\"Metascore\": \"83\",\n\"imdbRating\": \"7 9\",\n\"imdbVotes\": \"876,575\",\n\"imdbID\": \"tt0499549\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n}\n];\nconst filteredList = watchList filter(e => e imdbRating >= 8)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "99ee23b2f38754ad641d768c242d7ad1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \", \"Language\": \"English, Spanish\", \"Country\": \"USA, UK\", \"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\", \"Metascore\": \"83\", \"imdbRating\": \"7 9\", \"imdbVotes\": \"876,575\", \"imdbID\": \"tt0499549\", \"Type\": \"movie\", \"Response\": \"True\" } ]; const filteredList = watchList filter(e => e imdbRating >= 8)map( ({Title: title, imdbRating: rating}) => ({title, rating}) );\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-filter-method-to-extract-data-from-an-array.md",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "5b61d66e867660fdabc41184a990b8d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7da9367417b2b2512b68\ntitle: Use the reduce Method to Analyze Data\nchallengeType: 1\nforumTopicId: 301313\ndashedName: use-the-reduce-method-to-analyze-data\n--description--\nArray prototype reduce(), or simply reduce(), is the most general of all array operations in JavaScript You can solve almost any array processing problem using the reduce method The reduce method allows for more general forms of array processing, and it's possible to show that both filter and map can be derived as special applications of reduce The reduce method iterates over each item in an array and returns a single value (i e string, number, object, array) This is achieved via a callback function that is called on each iteration The callback function accepts four arguments The first argument is known as the accumulator, which gets assigned the return value of the callback function from the previous iteration, the second is the current element being processed, the third is the index of that element and the fourth is the array upon which reduce is called In addition to the callback function, reduce has an additional parameter which takes an initial value for the accumulator If this second parameter is not used, then the first iteration is skipped and the second iteration gets passed the first element of the array as the accumulator See below for an example using reduce on the users array to return the sum of all the users' ages For simplicity, the example only uses the first and second arguments ```js\nconst users = [\n{ name: 'John', age: 34 },\n{ name: 'Amy', age: 20 },\n{ name: 'camperCat', age: 10 }\n];\nconst sumOfAges = users reduce((sum, user) => sum + user age, 0);\nconsole log(sumOfAges);\n```\nThe console would display the value 64 In another example, see how an object can be returned containing the names of the users as properties with their ages as values ```js\nconst users = [\n{ name: 'John', age: 34 },\n{ name: 'Amy', age: 20 },\n{ name: 'camperCat', age: 10 }\n];\nconst usersObj = users reduce((obj, user) => {\nobj[user name] = user age;\nreturn obj;\n}, {});\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "d394170570b5b473f398223d71e0602d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0); console log(sumOfAges); ``` The console would display the value 64 In another example, see how an object can be returned containing the names of the users as properties with their ages as values ```js const users = [ { name: 'John', age: 34 }, { name: 'Amy', age: 20 }, { name: 'camperCat', age: 10 } ]; const usersObj = users reduce((obj, user) => { obj[user name] = user age; return obj; }, {}); consolelog(usersObj);\n```\nThe console would display the value { John: 34, Amy: 20, camperCat: 10 } --instructions--\nThe variable watchList holds an array of objects with information on several movies Use reduce to find the average IMDB rating of the movies directed by Christopher Nolan Recall from prior challenges how to filter data and map over it to pull what you need You may need to create other variables, and return the average rating from getRating function Note that the rating values are saved as strings in the object and need to be converted into numbers before they are used in any mathematical operations --hints--\nThe watchList variable should not change js\nassert(\nwatchList[0] Title === 'Inception' && watchList[4] Director == 'James Cameron'\n);\nYour code should use the reduce method js\nassert(__helpers removeJSComments(code) match(/\\ reduce/g));\nThe getRating(watchList) should equal 8 675 js\nassert(getRating(watchList) === 8 675);\nYour code should not use a for loop js\nassert( __helpers removeJSComments(code) match(/for\\s* \\([\\s\\S]* \\)/g));\nYour code should return the correct output after modifying the watchList object js\nassert(getRating(watchList filter((_, i) => i < 1 || i > 2)) === 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "3f28bb46b1ac08afe496d6b392e9fa74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert( watchList[0] Title === 'Inception' && watchList[4] Director == 'James Cameron' ); Your code should use the reduce method js assert(__helpers removeJSComments(code) match(/\\ reduce/g)); The getRating(watchList) should equal 8 675 js assert(getRating(watchList) === 8 675); Your code should not use a for loop js assert( __helpers removeJSComments(code) match(/for\\s* \\([\\s\\S]* \\)/g)); Your code should return the correct output after modifying the watchList object js assert(getRating(watchList filter((_, i) => i < 1 || i > 2)) === 855);\n--seed--\n--seed-contents--\n```js\n// The global variable\nconst watchList = [\n{\n\"Title\": \"Inception\",\n\"Year\": \"2010\",\n\"Rated\": \"PG-13\",\n\"Released\": \"16 Jul 2010\",\n\"Runtime\": \"148 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Christopher Nolan\",\n\"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\",\n\"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \",\n\"Language\": \"English, Japanese, French\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "c1889d51e7bc3ec33ae5f0de429b1bd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "min\", \"Genre\": \"Action, Adventure, Crime\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Christopher Nolan\", \"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\", \"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \", \"Language\": \"English, Japanese, French\", \"Country\": \"USA, UK\", \"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"88\",\n\"imdbVotes\": \"1,446,708\",\n\"imdbID\": \"tt1375666\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Interstellar\",\n\"Year\": \"2014\",\n\"Rated\": \"PG-13\",\n\"Released\": \"07 Nov 2014\",\n\"Runtime\": \"169 min\",\n\"Genre\": \"Adventure, Drama, Sci-Fi\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan, Christopher Nolan\",\n\"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\",\n\"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \",\n\"Language\": \"English\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "32c136745c66b9ef06619eda00460b34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"2014\", \"Rated\": \"PG-13\", \"Released\": \"07 Nov 2014\", \"Runtime\": \"169 min\", \"Genre\": \"Adventure, Drama, Sci-Fi\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Jonathan Nolan, Christopher Nolan\", \"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\", \"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \", \"Language\": \"English\", \"Country\": \"USA, UK\", \"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"86\",\n\"imdbVotes\": \"910,366\",\n\"imdbID\": \"tt0816692\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"The Dark Knight\",\n\"Year\": \"2008\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Jul 2008\",\n\"Runtime\": \"152 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan (screenplay), Christopher Nolan (screenplay), Christopher Nolan (story), David S Goyer (story), Bob Kane (characters)\",\n\"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\",\n\"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \",\n\"Language\": \"English, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "bab79048314584bf30186fc339063d32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "David S Goyer (story), Bob Kane (characters)\", \"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\", \"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \", \"Language\": \"English, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"82\",\n\"imdbRating\": \"9 0\",\n\"imdbVotes\": \"1,652,832\",\n\"imdbID\": \"tt0468569\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Batman Begins\",\n\"Year\": \"2005\",\n\"Rated\": \"PG-13\",\n\"Released\": \"15 Jun 2005\",\n\"Runtime\": \"140 min\",\n\"Genre\": \"Action, Adventure\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Bob Kane (characters), David S Goyer (story), Christopher Nolan (screenplay), David S Goyer (screenplay)\",\n\"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\",\n\"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \",\n\"Language\": \"English, Urdu, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\",\n\"Metascore\": \"70\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "c7f8813fd31174c1ae9eb8f0e8159541",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(story), Christopher Nolan (screenplay), David S Goyer (screenplay)\", \"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\", \"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \", \"Language\": \"English, Urdu, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\", \"Metascore\": \"70\", \"imdbRating\": \"83\",\n\"imdbVotes\": \"972,584\",\n\"imdbID\": \"tt0372784\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Avatar\",\n\"Year\": \"2009\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Dec 2009\",\n\"Runtime\": \"162 min\",\n\"Genre\": \"Action, Adventure, Fantasy\",\n\"Director\": \"James Cameron\",\n\"Writer\": \"James Cameron\",\n\"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\",\n\"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \",\n\"Language\": \"English, Spanish\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\",\n\"Metascore\": \"83\",\n\"imdbRating\": \"7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "1a7d12436aa00d49dc865a164073c129",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "min\", \"Genre\": \"Action, Adventure, Fantasy\", \"Director\": \"James Cameron\", \"Writer\": \"James Cameron\", \"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\", \"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \", \"Language\": \"English, Spanish\", \"Country\": \"USA, UK\", \"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\", \"Metascore\": \"83\", \"imdbRating\": \"79\",\n\"imdbVotes\": \"876,575\",\n\"imdbID\": \"tt0499549\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n}\n];\nfunction getRating(watchList) {\n// Only change code below this line\nlet averageRating;\n// Only change code above this line\nreturn averageRating;\n}\nconsole log(getRating(watchList));\n```\n--solutions--\n```js\nconst watchList = [\n{\n\"Title\": \"Inception\",\n\"Year\": \"2010\",\n\"Rated\": \"PG-13\",\n\"Released\": \"16 Jul 2010\",\n\"Runtime\": \"148 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Christopher Nolan\",\n\"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\",\n\"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \",\n\"Language\": \"English, Japanese, French\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "b6cfd97c6040ec58c08fa683cd5da87e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"16 Jul 2010\", \"Runtime\": \"148 min\", \"Genre\": \"Action, Adventure, Crime\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Christopher Nolan\", \"Actors\": \"Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy\", \"Plot\": \"A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO \", \"Language\": \"English, Japanese, French\", \"Country\": \"USA, UK\", \"Awards\": \"Won 4 Oscars Another 143 wins & 198 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8 8\",\n\"imdbVotes\": \"1,446,708\",\n\"imdbID\": \"tt1375666\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Interstellar\",\n\"Year\": \"2014\",\n\"Rated\": \"PG-13\",\n\"Released\": \"07 Nov 2014\",\n\"Runtime\": \"169 min\",\n\"Genre\": \"Adventure, Drama, Sci-Fi\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan, Christopher Nolan\",\n\"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\",\n\"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \",\n\"Language\": \"English\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\",\n\"Metascore\": \"74\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "16e70ad915e6e5f8896fe3417d30ffe9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"2014\", \"Rated\": \"PG-13\", \"Released\": \"07 Nov 2014\", \"Runtime\": \"169 min\", \"Genre\": \"Adventure, Drama, Sci-Fi\", \"Director\": \"Christopher Nolan\", \"Writer\": \"Jonathan Nolan, Christopher Nolan\", \"Actors\": \"Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow\", \"Plot\": \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival \", \"Language\": \"English\", \"Country\": \"USA, UK\", \"Awards\": \"Won 1 Oscar Another 39 wins & 132 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@ _V1_SX300 jpg\", \"Metascore\": \"74\", \"imdbRating\": \"86\",\n\"imdbVotes\": \"910,366\",\n\"imdbID\": \"tt0816692\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"The Dark Knight\",\n\"Year\": \"2008\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Jul 2008\",\n\"Runtime\": \"152 min\",\n\"Genre\": \"Action, Adventure, Crime\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Jonathan Nolan (screenplay), Christopher Nolan (screenplay), Christopher Nolan (story), David S Goyer (story), Bob Kane (characters)\",\n\"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\",\n\"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \",\n\"Language\": \"English, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "1f281ddc20efc6e3d85b9612cdaf75e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "David S Goyer (story), Bob Kane (characters)\", \"Actors\": \"Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine\", \"Plot\": \"When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice \", \"Language\": \"English, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Won 2 Oscars Another 146 wins & 142 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@ _V1_SX300jpg\",\n\"Metascore\": \"82\",\n\"imdbRating\": \"9 0\",\n\"imdbVotes\": \"1,652,832\",\n\"imdbID\": \"tt0468569\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Batman Begins\",\n\"Year\": \"2005\",\n\"Rated\": \"PG-13\",\n\"Released\": \"15 Jun 2005\",\n\"Runtime\": \"140 min\",\n\"Genre\": \"Action, Adventure\",\n\"Director\": \"Christopher Nolan\",\n\"Writer\": \"Bob Kane (characters), David S Goyer (story), Christopher Nolan (screenplay), David S Goyer (screenplay)\",\n\"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\",\n\"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \",\n\"Language\": \"English, Urdu, Mandarin\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\",\n\"Metascore\": \"70\",\n\"imdbRating\": \"8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "f043f3c82b7446fc10bb29fd7befb2c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(story), Christopher Nolan (screenplay), David S Goyer (screenplay)\", \"Actors\": \"Christian Bale, Michael Caine, Liam Neeson, Katie Holmes\", \"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it \", \"Language\": \"English, Urdu, Mandarin\", \"Country\": \"USA, UK\", \"Awards\": \"Nominated for 1 Oscar Another 15 wins & 66 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BNTM3OTc0MzM2OV5BMl5BanBnXkFtZTYwNzUwMTI3 _V1_SX300 jpg\", \"Metascore\": \"70\", \"imdbRating\": \"83\",\n\"imdbVotes\": \"972,584\",\n\"imdbID\": \"tt0372784\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n},\n{\n\"Title\": \"Avatar\",\n\"Year\": \"2009\",\n\"Rated\": \"PG-13\",\n\"Released\": \"18 Dec 2009\",\n\"Runtime\": \"162 min\",\n\"Genre\": \"Action, Adventure, Fantasy\",\n\"Director\": \"James Cameron\",\n\"Writer\": \"James Cameron\",\n\"Actors\": \"Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\",\n\"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \",\n\"Language\": \"English, Spanish\",\n\"Country\": \"USA, UK\",\n\"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \",\n\"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\",\n\"Metascore\": \"83\",\n\"imdbRating\": \"7 9\",\n\"imdbVotes\": \"876,575\",\n\"imdbID\": \"tt0499549\",\n\"Type\": \"movie\",\n\"Response\": \"True\"\n}\n];\nfunction getRating(watchList) {\nlet averageRating;\nconst rating = watchList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "3b9a43e8d32c1d36184786de3ad6cc9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Plot\": \"A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home \", \"Language\": \"English, Spanish\", \"Country\": \"USA, UK\", \"Awards\": \"Won 3 Oscars Another 80 wins & 121 nominations \", \"Poster\": \"http://ia media-imdb com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@ _V1_SX300 jpg\", \"Metascore\": \"83\", \"imdbRating\": \"7 9\", \"imdbVotes\": \"876,575\", \"imdbID\": \"tt0499549\", \"Type\": \"movie\", \"Response\": \"True\" } ]; function getRating(watchList) { let averageRating; const rating = watchListfilter(obj => obj Director === \"Christopher Nolan\") map(obj => Number(obj imdbRating));\naverageRating = rating reduce((accum, curr) => accum + curr)/rating length;\nreturn averageRating;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\functional-programming\\use-the-reduce-method-to-analyze-data.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "2afda1c7f649d6d09f75078991ed960b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\drop-it.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a5deed1811a43193f9f1c841\ntitle: Drop it\nchallengeType: 1\nforumTopicId: 16010\ndashedName: drop-it\n--description--\nGiven the array arr, iterate through and remove each element starting from the first element (the 0 index) until the function func returns true when the iterated element is passed through it Then return the rest of the array once the condition is satisfied, otherwise, arr should be returned as an empty array --hints--\ndropElements([1, 2, 3, 4], function(n) {return n >= 3;}) should return [3, 4] js\nassert deepEqual(\ndropElements([1, 2, 3, 4], function (n) {\nreturn n >= 3;\n}),\n[3, 4]\n);\ndropElements([0, 1, 0, 1], function(n) {return n === 1;}) should return [1, 0, 1] js\nassert deepEqual(\ndropElements([0, 1, 0, 1], function (n) {\nreturn n === 1;\n}),\n[1, 0, 1]\n);\ndropElements([1, 2, 3], function(n) {return n > 0;}) should return [1, 2, 3] js\nassert deepEqual(\ndropElements([1, 2, 3], function (n) {\nreturn n > 0;\n}),\n[1, 2, 3]\n);\ndropElements([1, 2, 3, 4], function(n) {return n > 5;}) should return [] js\nassert deepEqual(\ndropElements([1, 2, 3, 4], function (n) {\nreturn n > 5;\n}),\n[]\n);\ndropElements([1, 2, 3, 7, 4], function(n) {return n > 3;}) should return [7, 4] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1929,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\drop-it.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "91dfb6c39a50267e5865cc08d9b5a208",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\drop-it.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dropElements([1, 2, 3], function(n) {return n > 0;}) should return [1, 2, 3] js assert deepEqual( dropElements([1, 2, 3], function (n) { return n > 0; }), [1, 2, 3] ); dropElements([1, 2, 3, 4], function(n) {return n > 5;}) should return [] js assert deepEqual( dropElements([1, 2, 3, 4], function (n) { return n > 5; }), [] ); dropElements([1, 2, 3, 7, 4], function(n) {return n > 3;}) should return [7, 4] js assertdeepEqual(\ndropElements([1, 2, 3, 7, 4], function (n) {\nreturn n > 3;\n}),\n[7, 4]\n);\ndropElements([1, 2, 3, 9, 2], function(n) {return n > 2;}) should return [3, 9, 2] js\nassert deepEqual(\ndropElements([1, 2, 3, 9, 2], function (n) {\nreturn n > 2;\n}),\n[3, 9, 2]\n);\n--seed--\n--seed-contents--\n```js\nfunction dropElements(arr, func) {\nreturn arr;\n}\ndropElements([1, 2, 3], function(n) {return n < 3; });\n```\n--solutions--\njs\nfunction dropElements(arr, func) {\nwhile (arr length && func(arr[0])) {\narr shift();\n}\nreturn arr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1929,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\drop-it.md",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c25f7198d5727b7af111fcce8eecdfff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\missing-letters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: af7588ade1100bde429baf20\ntitle: Missing letters\nchallengeType: 1\nforumTopicId: 16023\ndashedName: missing-letters\n--description--\nFind the missing letter in the passed letter range and return it.\nIf all letters are present in the range, return undefined.\n--hints--\nfearNotLetter(\"abce\") should return the string d.\njs\nassert.deepEqual(fearNotLetter('abce'), 'd');\nfearNotLetter(\"abcdefghjklmno\") should return the string i.\njs\nassert.deepEqual(fearNotLetter('abcdefghjklmno'), 'i');\nfearNotLetter(\"stvwx\") should return the string u.\njs\nassert.deepEqual(fearNotLetter('stvwx'), 'u');\nfearNotLetter(\"bcdf\") should return the string e.\njs\nassert.deepEqual(fearNotLetter('bcdf'), 'e');\nfearNotLetter(\"abcdefghijklmnopqrstuvwxyz\") should return undefined.\njs\nassert.isUndefined(fearNotLetter('abcdefghijklmnopqrstuvwxyz'));\n--seed--\n--seed-contents--\n```js\nfunction fearNotLetter(str) {\nreturn str;\n}\nfearNotLetter(\"abce\");\n```\n--solutions--\n```js\nfunction fearNotLetter (str) {\nfor (var i = str.charCodeAt(0); i <= str.charCodeAt(str.length - 1); i++) {\nvar letter = String.fromCharCode(i);\nif (str.indexOf(letter) === -1) {\nreturn letter;\n}\n}\nreturn undefined;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1291,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\missing-letters.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a7160d10057ef09b742f32a5c16f9509",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\pig-latin.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: aa7697ea2477d1316795783b\ntitle: Pig Latin\nchallengeType: 1\nforumTopicId: 16039\ndashedName: pig-latin\n--description--\nPig Latin is a way of altering English Words The rules are as follows:\n- If a word begins with a consonant, take the first consonant or consonant cluster, move it to the end of the word, and add ay to it - If a word begins with a vowel, just add way at the end --instructions--\nTranslate the provided string to Pig Latin Input strings are guaranteed to be English words in all lowercase --hints--\ntranslatePigLatin(\"california\") should return the string aliforniacay js\nassert deepEqual(translatePigLatin('california'), 'aliforniacay');\ntranslatePigLatin(\"paragraphs\") should return the string aragraphspay js\nassert deepEqual(translatePigLatin('paragraphs'), 'aragraphspay');\ntranslatePigLatin(\"glove\") should return the string oveglay js\nassert deepEqual(translatePigLatin('glove'), 'oveglay');\ntranslatePigLatin(\"algorithm\") should return the string algorithmway js\nassert deepEqual(translatePigLatin('algorithm'), 'algorithmway');\ntranslatePigLatin(\"eight\") should return the string eightway js\nassert deepEqual(translatePigLatin('eight'), 'eightway');\nShould handle words where the first vowel comes in the middle of the word translatePigLatin(\"schwartz\") should return the string artzschway js\nassert deepEqual(translatePigLatin('schwartz'), 'artzschway');\nShould handle words without vowels translatePigLatin(\"rhythm\") should return the string rhythmay js\nassert deepEqual(translatePigLatin('rhythm'), 'rhythmay');\n--seed--\n--seed-contents--\n```js\nfunction translatePigLatin(str) {\nreturn str;\n}\ntranslatePigLatin(\"consonant\");\n```\n--solutions--\n```js\nfunction translatePigLatin(str) {\nif (isVowel(str charAt(0))) return str + \"way\";\nvar front = [];\nstr = str split('');\nwhile (str length && isVowel(str[0])) {\nfront push(str shift());\n}\nreturn [] concat(str, front)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\pig-latin.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ae48283e2feaadf5d2a857710fac6fd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\pig-latin.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in the middle of the word translatePigLatin(\"schwartz\") should return the string artzschway js assert deepEqual(translatePigLatin('schwartz'), 'artzschway'); Should handle words without vowels translatePigLatin(\"rhythm\") should return the string rhythmay js assert deepEqual(translatePigLatin('rhythm'), 'rhythmay'); --seed-- --seed-contents-- ```js function translatePigLatin(str) { return str; } translatePigLatin(\"consonant\"); ``` --solutions-- ```js function translatePigLatin(str) { if (isVowel(str charAt(0))) return str + \"way\"; var front = []; str = str split(''); while (str length && isVowel(str[0])) { front push(str shift()); } return [] concat(str, front)join('') + 'ay';\n}\nfunction isVowel(c) {\nreturn ['a', 'e', 'i', 'o', 'u'] indexOf(c toLowerCase()) == -1;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\pig-latin.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "697affe5fbadad08ab0c91564b556437",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\map-the-debris.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: af4afb223120f7348cdfc9fd\ntitle: Map the Debris\nchallengeType: 1\nforumTopicId: 16021\ndashedName: map-the-debris\n--description--\nAccording to Kepler's Third Law, the orbital period $T$ of two point masses orbiting each other in a circular or elliptic orbit is:\n$$\nT = 2 \\pi \\sqrt{\\frac{a^{3}}{\\mu}}\n$$\n$a$ is the orbit's semi-major axis\n$μ = GM$ is the standard gravitational parameter\n$G$ is the gravitational constant,\n$M$ is the mass of the more massive body Return a new array that transforms the elements' average altitude into their orbital periods (in seconds) The array will contain objects in the format {name: 'name', avgAlt: avgAlt} The values should be rounded to the nearest whole number The body being orbited is Earth The radius of the earth is 6367 4447 kilometers, and the GM value of earth is 398600 4418 km3s-2 --hints--\norbitalPeriod([{name : \"sputnik\", avgAlt : 35873 5553}]) should return [{name: \"sputnik\", orbitalPeriod: 86400}] js\nassert deepEqual(orbitalPeriod([{ name: 'sputnik', avgAlt: 35873 5553 }]), [\n{ name: 'sputnik', orbitalPeriod: 86400 }\n]);\norbitalPeriod([{name: \"iss\", avgAlt: 413 6}, {name: \"hubble\", avgAlt: 556 7}, {name: \"moon\", avgAlt: 378632 553}]) should return [{name : \"iss\", orbitalPeriod: 5557}, {name: \"hubble\", orbitalPeriod: 5734}, {name: \"moon\", orbitalPeriod: 2377399}] js\nassert deepEqual(\norbitalPeriod([\n{ name: 'iss', avgAlt: 413 6 },\n{ name: 'hubble', avgAlt: 556 7 },\n{ name: 'moon', avgAlt: 378632",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\map-the-debris.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "14076f11fbe06a8fcc341328f631c323",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\map-the-debris.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return [{name: \"sputnik\", orbitalPeriod: 86400}] js assert deepEqual(orbitalPeriod([{ name: 'sputnik', avgAlt: 35873 5553 }]), [ { name: 'sputnik', orbitalPeriod: 86400 } ]); orbitalPeriod([{name: \"iss\", avgAlt: 413 6}, {name: \"hubble\", avgAlt: 556 7}, {name: \"moon\", avgAlt: 378632 553}]) should return [{name : \"iss\", orbitalPeriod: 5557}, {name: \"hubble\", orbitalPeriod: 5734}, {name: \"moon\", orbitalPeriod: 2377399}] js assert deepEqual( orbitalPeriod([ { name: 'iss', avgAlt: 413 6 }, { name: 'hubble', avgAlt: 556 7 }, { name: 'moon', avgAlt: 378632553 }\n]),\n[\n{ name: 'iss', orbitalPeriod: 5557 },\n{ name: 'hubble', orbitalPeriod: 5734 },\n{ name: 'moon', orbitalPeriod: 2377399 }\n]\n);\n--seed--\n--seed-contents--\n```js\nfunction orbitalPeriod(arr) {\nconst GM = 398600 4418;\nconst earthRadius = 6367 4447;\nreturn arr;\n}\norbitalPeriod([{name : \"sputnik\", avgAlt : 35873 5553}]);\n```\n--solutions--\njs\nfunction orbitalPeriod(arr) {\nconst GM = 398600 4418;\nconst earthRadius = 6367 4447;\nconst TAU = 2 * Math PI;\nreturn arr map(function(obj) {\nreturn {\nname: obj name,\norbitalPeriod: Math round(TAU * Math sqrt(Math pow(obj avgAlt+earthRadius, 3)/GM))\n};\n});\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\map-the-debris.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8212bd81c4aba193b03b2eca1500726b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a10d2431ad0c6a099a4b8b52\ntitle: Everything Be True\nchallengeType: 1\nforumTopicId: 16011\ndashedName: everything-be-true\n--description--\nCheck if the predicate (second argument) is truthy on all elements of a collection (first argument) In other words, you are given an array collection of objects The predicate pre will be an object property and you need to return true if its value is truthy Otherwise, return false In JavaScript, truthy values are values that translate to true when evaluated in a Boolean context Remember, you can access object properties through either dot notation or [] notation --hints--\ntruthCheck([{name: \"Quincy\", role: \"Founder\", isBot: false}, {name: \"Naomi\", role: \"\", isBot: false}, {name: \"Camperbot\", role: \"Bot\", isBot: true}], \"isBot\") should return false js\nassert strictEqual(truthCheck(\n[\n{ name: \"Quincy\", role: \"Founder\", isBot: false },\n{ name: \"Naomi\", role: \"\", isBot: false },\n{ name: \"Camperbot\", role: \"Bot\", isBot: true }\n],\n\"isBot\"), false);\ntruthCheck([{name: \"Quincy\", role: \"Founder\", isBot: false}, {name: \"Naomi\", role: \"\", isBot: false}, {name: \"Camperbot\", role: \"Bot\", isBot: true}], \"name\") should return true js\nassert strictEqual(truthCheck(\n[\n{ name: \"Quincy\", role: \"Founder\", isBot: false },\n{ name: \"Naomi\", role: \"\", isBot: false },\n{ name: \"Camperbot\", role: \"Bot\", isBot: true }\n],\n\"name\"), true);\ntruthCheck([{name: \"Quincy\", role: \"Founder\", isBot: false}, {name: \"Naomi\", role: \"\", isBot: false}, {name: \"Camperbot\", role: \"Bot\", isBot: true}], \"role\") should return false js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5127,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "7f2ff7814693adb787afa2c905396bcd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Quincy\", role: \"Founder\", isBot: false}, {name: \"Naomi\", role: \"\", isBot: false}, {name: \"Camperbot\", role: \"Bot\", isBot: true}], \"name\") should return true js assert strictEqual(truthCheck( [ { name: \"Quincy\", role: \"Founder\", isBot: false }, { name: \"Naomi\", role: \"\", isBot: false }, { name: \"Camperbot\", role: \"Bot\", isBot: true } ], \"name\"), true); truthCheck([{name: \"Quincy\", role: \"Founder\", isBot: false}, {name: \"Naomi\", role: \"\", isBot: false}, {name: \"Camperbot\", role: \"Bot\", isBot: true}], \"role\") should return false js assertstrictEqual(truthCheck(\n[\n{ name: \"Quincy\", role: \"Founder\", isBot: false },\n{ name: \"Naomi\", role: \"\", isBot: false },\n{ name: \"Camperbot\", role: \"Bot\", isBot: true }\n],\n\"role\"), false);\ntruthCheck([{name: \"Pikachu\", number: 25, caught: 3}, {name: \"Togepi\", number: 175, caught: 1}], \"number\") should return true js\nassert strictEqual(truthCheck(\n[\n{ name: \"Pikachu\", number: 25, caught: 3 },\n{ name: \"Togepi\", number: 175, caught: 1 },\n],\n\"number\"), true);\ntruthCheck([{name: \"Pikachu\", number: 25, caught: 3}, {name: \"Togepi\", number: 175, caught: 1}, {name: \"MissingNo\", number: NaN, caught: 0}], \"caught\") should return false js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5127,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "383a82228a11198cef04e2a89dc8d9ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "false }, { name: \"Camperbot\", role: \"Bot\", isBot: true } ], \"role\"), false); truthCheck([{name: \"Pikachu\", number: 25, caught: 3}, {name: \"Togepi\", number: 175, caught: 1}], \"number\") should return true js assert strictEqual(truthCheck( [ { name: \"Pikachu\", number: 25, caught: 3 }, { name: \"Togepi\", number: 175, caught: 1 }, ], \"number\"), true); truthCheck([{name: \"Pikachu\", number: 25, caught: 3}, {name: \"Togepi\", number: 175, caught: 1}, {name: \"MissingNo\", number: NaN, caught: 0}], \"caught\") should return false js assertstrictEqual(truthCheck(\n[\n{ name: \"Pikachu\", number: 25, caught: 3 },\n{ name: \"Togepi\", number: 175, caught: 1 },\n{ name: \"MissingNo\", number: NaN, caught: 0 },\n],\n\"caught\"), false);\ntruthCheck([{name: \"Pikachu\", number: 25, caught: 3}, {name: \"Togepi\", number: 175, caught: 1}, {name: \"MissingNo\", number: NaN, caught: 0}], \"number\") should return false js\nassert strictEqual(truthCheck(\n[\n{ name: \"Pikachu\", number: 25, caught: 3 },\n{ name: \"Togepi\", number: 175, caught: 1 },\n{ name: \"MissingNo\", number: NaN, caught: 0 },\n],\n\"number\"), false);\ntruthCheck([{name: \"Quincy\", username: \"QuincyLarson\"}, {name: \"Naomi\", username: \"nhcarrigan\"}, {name: \"Camperbot\"}], \"username\") should return false js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5127,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "4934e93bd624eaf7998d5dee5479a6df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "NaN, caught: 0 }, ], \"caught\"), false); truthCheck([{name: \"Pikachu\", number: 25, caught: 3}, {name: \"Togepi\", number: 175, caught: 1}, {name: \"MissingNo\", number: NaN, caught: 0}], \"number\") should return false js assert strictEqual(truthCheck( [ { name: \"Pikachu\", number: 25, caught: 3 }, { name: \"Togepi\", number: 175, caught: 1 }, { name: \"MissingNo\", number: NaN, caught: 0 }, ], \"number\"), false); truthCheck([{name: \"Quincy\", username: \"QuincyLarson\"}, {name: \"Naomi\", username: \"nhcarrigan\"}, {name: \"Camperbot\"}], \"username\") should return false js assertstrictEqual(truthCheck(\n[\n{ name: \"Quincy\", username: \"QuincyLarson\" },\n{ name: \"Naomi\", username: \"nhcarrigan\" },\n{ name: \"Camperbot\" }\n],\n\"username\"), false);\ntruthCheck([{name: \"freeCodeCamp\", users: [{name: \"Quincy\"}, {name: \"Naomi\"}]}, {name: \"Code Radio\", users: [{name: \"Camperbot\"}]}, {name: \"\", users: []}], \"users\") should return true js\nassert strictEqual(truthCheck(\n[\n{ name: \"freeCodeCamp\", users: [{ name: \"Quincy\" }, { name: \"Naomi\" }] },\n{ name: \"Code Radio\", users: [{ name: \"Camperbot\" }] },\n{ name: \"\", users: [] },\n],\n\"users\"), true);\ntruthCheck([{id: 1, data: {url: \"https://freecodecamp org\", name: \"freeCodeCamp\"}}, {id: 2, data: {url: \"https://coderadio freecodecamp org/\", name: \"CodeRadio\"}}, {id: null, data: {}}], \"data\") should return true js\nassert strictEqual(truthCheck(\n[\n{ id: 1, data: { url: \"https://www freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5127,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "fe36c57d13394a4d801403e64adc41e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return true js assert strictEqual(truthCheck( [ { name: \"freeCodeCamp\", users: [{ name: \"Quincy\" }, { name: \"Naomi\" }] }, { name: \"Code Radio\", users: [{ name: \"Camperbot\" }] }, { name: \"\", users: [] }, ], \"users\"), true); truthCheck([{id: 1, data: {url: \"https://freecodecamp org\", name: \"freeCodeCamp\"}}, {id: 2, data: {url: \"https://coderadio freecodecamp org/\", name: \"CodeRadio\"}}, {id: null, data: {}}], \"data\") should return true js assert strictEqual(truthCheck( [ { id: 1, data: { url: \"https://www freecodecamporg\", name: \"freeCodeCamp\" } },\n{ id: 2, data: { url: \"https://coderadio freecodecamp org/\", name: \"CodeRadio\" } },\n{ id: null, data: {} },\n],\n\"data\"), true);\ntruthCheck([{id: 1, data: {url: \"https://freecodecamp org\", name: \"freeCodeCamp\"}}, {id: 2, data: {url: \"https://coderadio freecodecamp org/\", name: \"CodeRadio\"}}, {id: null, data: {}}], \"id\") should return false js\nassert strictEqual(truthCheck(\n[\n{ id: 1, data: { url: \"https://www freecodecamp org\", name: \"freeCodeCamp\" } },\n{ id: 2, data: { url: \"https://coderadio freecodecamp org/\", name: \"CodeRadio\" } },\n{ id: null, data: {} },\n],\n\"id\"), false);\n--seed--\n--seed-contents--\n```js\nfunction truthCheck(collection, pre) {\nreturn pre;\n}\ntruthCheck([{name: \"Quincy\", role: \"Founder\", isBot: false}, {name: \"Naomi\", role: \"\", isBot: false}, {name: \"Camperbot\", role: \"Bot\", isBot: true}], \"isBot\");\n```\n--solutions--\njs\nfunction truthCheck(collection, pre) {\nreturn collection every(function(e) { return e[pre]; });\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5127,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\everything-be-true.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "0305f18e03a8fb77bb68fade66d74266",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\make-a-person.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a2f1d72d9b908d0bd72bb9f6\ntitle: Make a Person\nchallengeType: 1\nforumTopicId: 16020\ndashedName: make-a-person\n--description--\nFill in the object constructor with the following methods below:\njs\ngetFirstName()\ngetLastName()\ngetFullName()\nsetFirstName(first)\nsetLastName(last)\nsetFullName(first, last)\nRun the tests to see the expected output for each method These methods must be the only available means of interacting with the object Each test will declare a new Person instance as new Person('Bob', 'Ross') --hints--\nYou should not change the function signature js\nassert match(code, /const\\s+Person\\s*=\\s*function\\s*\\(\\s*first\\s*,\\s*last\\s*\\)\\s*{/);\nYou should not reassign the first parameter js\nassert notMatch(code, /\\bfirst\\s*=\\s*/);\nYou should not reassign the last parameter js\nassert notMatch(code, /\\blast\\s*=\\s*/);\nNo properties should be added Object keys(Person) length should always return 6 js\nconst _person = new Person('Bob', 'Ross');\n_person setFirstName('Haskell');\n_person setLastName('Curry');\n_person setFullName('John', 'Smith');\nassert lengthOf(Object keys(_person), 6);\nYou should be able to instantiate your Person object js\nconst _person = new Person('Bob', 'Ross');\nassert instanceOf(_person, Person);\nYour Person object should not have a firstName property js\nconst _person = new Person('Bob', 'Ross');\nassert notProperty(_person, 'firstName');\nYour Person object should not have a lastName property js\nconst _person = new Person('Bob', 'Ross');\nassert notProperty(_person, 'lastName');\nThe getFirstName() method should return the string Bob js\nconst _person = new Person('Bob', 'Ross');\nassert strictEqual(_person getFirstName(), 'Bob');\nThe getLastName() should return the string Ross js\nconst _person = new Person('Bob', 'Ross');\nassert strictEqual(_person getLastName(), 'Ross');\nThe getFullName() method should return the string Bob Ross js\nconst _person = new Person('Bob', 'Ross');\nassert strictEqual(_person getFullName(), 'Bob Ross');\nThe getFullName() method should return the string Haskell Ross after calling",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5057,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\make-a-person.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5d5c0f74445a3c81fba14029f5ad0d2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\make-a-person.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= new Person('Bob', 'Ross'); assert notProperty(_person, 'lastName'); The getFirstName() method should return the string Bob js const _person = new Person('Bob', 'Ross'); assert strictEqual(_person getFirstName(), 'Bob'); The getLastName() should return the string Ross js const _person = new Person('Bob', 'Ross'); assert strictEqual(_person getLastName(), 'Ross'); The getFullName() method should return the string Bob Ross js const _person = new Person('Bob', 'Ross'); assert strictEqual(_person getFullName(), 'Bob Ross'); The getFullName() method should return the string Haskell Ross after callingsetFirstName('Haskell') js\nconst _person = new Person('Bob', 'Ross');\n_person setFirstName('Haskell');\nassert strictEqual(_person getFullName(), 'Haskell Ross');\nThe getFullName() method should return the string Bob Curry after calling setLastName('Curry') js\nconst _person = new Person('Bob', 'Ross');\n_person setLastName('Curry');\nassert strictEqual(_person getFullName(), 'Bob Curry');\nThe getFullName() method should return the string Haskell Curry after calling setFullName('Haskell', 'Curry') js\nconst _person = new Person('Bob', 'Ross');\n_person setFullName('Haskell', 'Curry');\nassert strictEqual(_person getFullName(), 'Haskell Curry');\nThe getFirstName() method should return the string Haskell after calling setFullName('Haskell', 'Curry') js\nconst _person = new Person('Bob', 'Ross');\n_person setFullName('Haskell', 'Curry');\nassert strictEqual(_person getFirstName(), 'Haskell');\nThe getLastName() method should return the string Curry after calling setFullName('Haskell', 'Curry') js\nconst _person = new Person('Bob', 'Ross');\n_person setFullName('Haskell', 'Curry');\nassert strictEqual(_person getLastName(), 'Curry');\nThe getFullName() method should return the string Emily Martinez de la Rosa after calling setFullName('Emily Martinez', 'de la Rosa') js\nconst _person = new Person('Bob', 'Ross');\n_person setFullName('Emily Martinez', 'de la Rosa');\nassert strictEqual(_person getFullName(), 'Emily Martinez de la Rosa');\nThe getFirstName() property should return the string Emily Martinez after calling setFullName('Emily Martinez', 'de la Rosa')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5057,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\make-a-person.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f4f486eaaac6eb58ac92711b84337643",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\make-a-person.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "string Curry after calling setFullName('Haskell', 'Curry') js const _person = new Person('Bob', 'Ross'); _person setFullName('Haskell', 'Curry'); assert strictEqual(_person getLastName(), 'Curry'); The getFullName() method should return the string Emily Martinez de la Rosa after calling setFullName('Emily Martinez', 'de la Rosa') js const _person = new Person('Bob', 'Ross'); _person setFullName('Emily Martinez', 'de la Rosa'); assert strictEqual(_person getFullName(), 'Emily Martinez de la Rosa'); The getFirstName() property should return the string Emily Martinez after calling setFullName('Emily Martinez', 'de la Rosa')js\nconst _person = new Person('Bob', 'Ross');\n_person setFullName('Emily Martinez', 'de la Rosa');\nassert strictEqual(_person getFirstName(), 'Emily Martinez');\nThe getLastName() property should return the string de la Rosa after calling setFullName('Emily Martinez', 'de la Rosa') js\nconst _person = new Person('Bob', 'Ross');\n_person setFullName('Emily Martinez', 'de la Rosa');\nassert strictEqual(_person getLastName(), 'de la Rosa');\n--seed--\n--seed-contents--\njs\nconst Person = function(first, last) {\nthis getFullName = function() {\nreturn \"\";\n};\nreturn \"\";\n};\n--solutions--\n```js\nconst Person = function(first, last) {\nlet firstName = first;\nlet lastName = last;\nthis getFirstName = function(){\nreturn firstName;\n};\nthis getLastName = function(){\nreturn lastName;\n};\nthis getFullName = function(){\nreturn firstName + \" \" + lastName;\n};\nthis setFirstName = function(str){\nfirstName = str;\n};\nthis setLastName = function(str){\nlastName = str;\n};\nthis setFullName = function(first, last){\nfirstName = first;\nlastName = last;\n};\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5057,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\make-a-person.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c5da15e3e0f6f5b9a25b306b45fd7fa7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\smallest-common-multiple.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: ae9defd7acaf69703ab432ea\ntitle: Smallest Common Multiple\nchallengeType: 1\nforumTopicId: 16075\ndashedName: smallest-common-multiple\n--description--\nFind the smallest common multiple of the provided parameters that can be evenly divided by both, as well as by all sequential numbers in the range between these parameters.\nThe range will be an array of two numbers that will not necessarily be in numerical order.\nFor example, if given 1 and 3, find the smallest common multiple of both 1 and 3 that is also evenly divisible by all numbers between 1 and 3. The answer here would be 6.\n--hints--\nsmallestCommons([1, 5]) should return a number.\njs\nassert.deepEqual(typeof smallestCommons([1, 5]), 'number');\nsmallestCommons([1, 5]) should return 60.\njs\nassert.deepEqual(smallestCommons([1, 5]), 60);\nsmallestCommons([5, 1]) should return 60.\njs\nassert.deepEqual(smallestCommons([5, 1]), 60);\nsmallestCommons([2, 10]) should return 2520.\njs\nassert.deepEqual(smallestCommons([2, 10]), 2520);\nsmallestCommons([1, 13]) should return 360360.\njs\nassert.deepEqual(smallestCommons([1, 13]), 360360);\nsmallestCommons([23, 18]) should return 6056820.\njs\nassert.deepEqual(smallestCommons([23, 18]), 6056820);\n--seed--\n--seed-contents--\n```js\nfunction smallestCommons(arr) {\nreturn arr;\n}\nsmallestCommons([1,5]);\n```\n--solutions--\n```js\nfunction gcd(a, b) {\nwhile (b !== 0) {\na = [b, b = a % b][0];\n}\nreturn a;\n}\nfunction lcm(a, b) {\nreturn (a * b) / gcd(a, b);\n}\nfunction smallestCommons(arr) {\narr.sort(function(a,b) {return a-b;});\nvar rng = [];\nfor (var i = arr[0]; i <= arr[1]; i++) {\nrng.push(i);\n}\nreturn rng.reduce(lcm);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1762,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\smallest-common-multiple.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3156f367a2e2534f2f310b06c2736dc1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\spinal-tap-case.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a103376db3ba46b2d50db289\ntitle: Spinal Tap Case\nchallengeType: 1\nforumTopicId: 16078\ndashedName: spinal-tap-case\n--description--\nConvert a string to spinal case. Spinal case is all-lowercase-words-joined-by-dashes.\n--hints--\nspinalCase(\"This Is Spinal Tap\") should return the string this-is-spinal-tap.\njs\nassert.deepEqual(spinalCase('This Is Spinal Tap'), 'this-is-spinal-tap');\nspinalCase(\"thisIsSpinalTap\") should return the string this-is-spinal-tap.\njs\nassert.strictEqual(spinalCase('thisIsSpinalTap'), 'this-is-spinal-tap');\nspinalCase(\"The_Andy_Griffith_Show\") should return the string the-andy-griffith-show.\njs\nassert.strictEqual(\nspinalCase('The_Andy_Griffith_Show'),\n'the-andy-griffith-show'\n);\nspinalCase(\"Teletubbies say Eh-oh\") should return the string teletubbies-say-eh-oh.\njs\nassert.strictEqual(\nspinalCase('Teletubbies say Eh-oh'),\n'teletubbies-say-eh-oh'\n);\nspinalCase(\"AllThe-small Things\") should return the string all-the-small-things.\njs\nassert.strictEqual(spinalCase('AllThe-small Things'), 'all-the-small-things');\n--seed--\n--seed-contents--\n```js\nfunction spinalCase(str) {\nreturn str;\n}\nspinalCase('This Is Spinal Tap');\n```\n--solutions--\njs\nfunction spinalCase(str) {\nstr = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\nreturn str.toLowerCase().replace(/\\ |\\_/g, '-');\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\spinal-tap-case.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b1af4064ce72222e25f1dc9bade36956",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\search-and-replace.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a0b5010f579e69b815e7c5d6\ntitle: Search and Replace\nchallengeType: 1\nforumTopicId: 16045\ndashedName: search-and-replace\n--description--\nPerform a search and replace on the sentence using the arguments provided and return the new sentence First argument is the sentence to perform the search and replace on Second argument is the word that you will be replacing (before) Third argument is what you will be replacing the second argument with (after) Note: Preserve the case of the first character in the original word when you are replacing it For example if you mean to replace the word Book with the word dog, it should be replaced as Dog\n--hints--\nmyReplace(\"Let us go to the store\", \"store\", \"mall\") should return the string Let us go to the mall js\nassert deepEqual(\nmyReplace('Let us go to the store', 'store', 'mall'),\n'Let us go to the mall'\n);\nmyReplace(\"He is Sleeping on the couch\", \"Sleeping\", \"sitting\") should return the string He is Sitting on the couch js\nassert deepEqual(\nmyReplace('He is Sleeping on the couch', 'Sleeping', 'sitting'),\n'He is Sitting on the couch'\n);\nmyReplace(\"I think we should look up there\", \"up\", \"Down\") should return the string I think we should look down there js\nassert deepEqual(\nmyReplace('I think we should look up there', 'up', 'Down'),\n'I think we should look down there'\n);\nmyReplace(\"This has a spellngi error\", \"spellngi\", \"spelling\") should return the string This has a spelling error js\nassert deepEqual(\nmyReplace('This has a spellngi error', 'spellngi', 'spelling'),\n'This has a spelling error'\n);\nmyReplace(\"His name is Tom\", \"Tom\", \"john\") should return the string His name is John js\nassert deepEqual(\nmyReplace('His name is Tom', 'Tom', 'john'),\n'His name is John'\n);\nmyReplace(\"Let us get back to more Coding\", \"Coding\", \"algorithms\") should return the string Let us get back to more Algorithms js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2622,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\search-and-replace.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0cfa1dd019d51208f80806c2647df747",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\search-and-replace.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"spelling\") should return the string This has a spelling error js assert deepEqual( myReplace('This has a spellngi error', 'spellngi', 'spelling'), 'This has a spelling error' ); myReplace(\"His name is Tom\", \"Tom\", \"john\") should return the string His name is John js assert deepEqual( myReplace('His name is Tom', 'Tom', 'john'), 'His name is John' ); myReplace(\"Let us get back to more Coding\", \"Coding\", \"algorithms\") should return the string Let us get back to more Algorithms js assertdeepEqual(\nmyReplace('Let us get back to more Coding', 'Coding', 'algorithms'),\n'Let us get back to more Algorithms'\n);\n--seed--\n--seed-contents--\n```js\nfunction myReplace(str, before, after) {\nreturn str;\n}\nmyReplace(\"A quick brown fox jumped over the lazy dog\", \"jumped\", \"leaped\");\n```\n--solutions--\njs\nfunction myReplace(str, before, after) {\nif (before charAt(0) === before charAt(0) toUpperCase()) {\nafter = after charAt(0) toUpperCase() + after substring(1);\n} else {\nafter = after charAt(0) toLowerCase() + after substring(1);\n}\nreturn str replace(before, after);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2622,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\search-and-replace.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f808d0d14e071ef5cd521e8d875c74bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-numbers-in-a-range.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a3566b1109230028080c9345\ntitle: Sum All Numbers in a Range\nchallengeType: 1\nforumTopicId: 16083\ndashedName: sum-all-numbers-in-a-range\n--description--\nWe'll pass you an array of two numbers. Return the sum of those two numbers plus the sum of all the numbers between them. The lowest number will not always come first.\nFor example, sumAll([4,1]) should return 10 because sum of all the numbers between 1 and 4 (both inclusive) is 10.\n--hints--\nsumAll([1, 4]) should return a number.\njs\nassert(typeof sumAll([1, 4]) === 'number');\nsumAll([1, 4]) should return 10.\njs\nassert.deepEqual(sumAll([1, 4]), 10);\nsumAll([4, 1]) should return 10.\njs\nassert.deepEqual(sumAll([4, 1]), 10);\nsumAll([5, 10]) should return 45.\njs\nassert.deepEqual(sumAll([5, 10]), 45);\nsumAll([10, 5]) should return 45.\njs\nassert.deepEqual(sumAll([10, 5]), 45);\n--seed--\n--seed-contents--\n```js\nfunction sumAll(arr) {\nreturn 1;\n}\nsumAll([1, 4]);\n```\n--solutions--\njs\nfunction sumAll(arr) {\nvar sum = 0;\narr.sort(function(a,b) {return a-b;});\nfor (var i = arr[0]; i <= arr[1]; i++) {\nsum += i;\n}\nreturn sum;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1194,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-numbers-in-a-range.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a8abc2345d39392cc4d4f87b47fb536f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\seek-and-destroy.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a39963a4c10bc8b4d4f06d7e\ntitle: Seek and Destroy\nchallengeType: 1\nforumTopicId: 16046\ndashedName: seek-and-destroy\n--description--\nYou will be provided with an initial array as the first argument to the destroyer function, followed by one or more arguments Remove all elements from the initial array that are of the same value as these arguments The function must accept an indeterminate number of arguments, also known as a variadic function You can access the additional arguments by adding a rest parameter to the function definition or using the arguments object --hints--\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3) should return [1, 1] js\nassert deepEqual(destroyer([1, 2, 3, 1, 2, 3], 2, 3), [1, 1]);\ndestroyer([1, 2, 3, 5, 1, 2, 3], 2, 3) should return [1, 5, 1] js\nassert deepEqual(destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3), [1, 5, 1]);\ndestroyer([3, 5, 1, 2, 2], 2, 3, 5) should return [1] js\nassert deepEqual(destroyer([3, 5, 1, 2, 2], 2, 3, 5), [1]);\ndestroyer([2, 3, 2, 3], 2, 3) should return [] js\nassert deepEqual(destroyer([2, 3, 2, 3], 2, 3), []);\ndestroyer([\"tree\", \"hamburger\", 53], \"tree\", 53) should return [\"hamburger\"] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\seek-and-destroy.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5c6b3af6cb643d0124339294ad0a5837",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\seek-and-destroy.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3, 5, 1, 2, 3], 2, 3) should return [1, 5, 1] js assert deepEqual(destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3), [1, 5, 1]); destroyer([3, 5, 1, 2, 2], 2, 3, 5) should return [1] js assert deepEqual(destroyer([3, 5, 1, 2, 2], 2, 3, 5), [1]); destroyer([2, 3, 2, 3], 2, 3) should return [] js assert deepEqual(destroyer([2, 3, 2, 3], 2, 3), []); destroyer([\"tree\", \"hamburger\", 53], \"tree\", 53) should return [\"hamburger\"] js assertdeepEqual(destroyer(['tree', 'hamburger', 53], 'tree', 53), [\n'hamburger'\n]);\ndestroyer([\"possum\", \"trollo\", 12, \"safari\", \"hotdog\", 92, 65, \"grandma\", \"bugati\", \"trojan\", \"yacht\"], \"yacht\", \"possum\", \"trollo\", \"safari\", \"hotdog\", \"grandma\", \"bugati\", \"trojan\") should return [12,92,65] js\nassert deepEqual(\ndestroyer(\n[\n'possum',\n'trollo',\n12,\n'safari',\n'hotdog',\n92,\n65,\n'grandma',\n'bugati',\n'trojan',\n'yacht'\n],\n'yacht',\n'possum',\n'trollo',\n'safari',\n'hotdog',\n'grandma',\n'bugati',\n'trojan'\n),\n[12, 92, 65]\n);\n--seed--\n--seed-contents--\n```js\nfunction destroyer(arr) {\nreturn arr;\n}\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);\n```\n--solutions--\n```js\nfunction destroyer(arr) {\nvar hash = Object create(null);\n[] slice call(arguments, 1) forEach(function(e) {\nhash[e] = true;\n});\nreturn arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\seek-and-destroy.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1418c721c78f99785f84e2c628a7f308",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\seek-and-destroy.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"grandma\", \"bugati\", \"trojan\") should return [12,92,65] js assert deepEqual( destroyer( [ 'possum', 'trollo', 12, 'safari', 'hotdog', 92, 65, 'grandma', 'bugati', 'trojan', 'yacht' ], 'yacht', 'possum', 'trollo', 'safari', 'hotdog', 'grandma', 'bugati', 'trojan' ), [12, 92, 65] ); --seed-- --seed-contents-- ```js function destroyer(arr) { return arr; } destroyer([1, 2, 3, 1, 2, 3], 2, 3); ``` --solutions-- ```js function destroyer(arr) { var hash = Object create(null); [] slice call(arguments, 1) forEach(function(e) { hash[e] = true; }); return arrfilter(function(e) { return (e in hash);});\n}\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\seek-and-destroy.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b4fab5f1bfe41fcbc5a7efb0ca538b03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\steamroller.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: ab306dbdcc907c7ddfc30830\ntitle: Steamroller\nchallengeType: 1\nforumTopicId: 16079\ndashedName: steamroller\n--description--\nFlatten a nested array. You must account for varying levels of nesting.\n--hints--\nsteamrollArray([[[\"a\"]], [[\"b\"]]]) should return [\"a\", \"b\"].\njs\nassert.deepEqual(steamrollArray([[['a']], [['b']]]), ['a', 'b']);\nsteamrollArray([1, [2], [3, [[4]]]]) should return [1, 2, 3, 4].\njs\nassert.deepEqual(steamrollArray([1, [2], [3, [[4]]]]), [1, 2, 3, 4]);\nsteamrollArray([1, [], [3, [[4]]]]) should return [1, 3, 4].\njs\nassert.deepEqual(steamrollArray([1, [], [3, [[4]]]]), [1, 3, 4]);\nsteamrollArray([1, {}, [3, [[4]]]]) should return [1, {}, 3, 4].\njs\nassert.deepEqual(steamrollArray([1, {}, [3, [[4]]]]), [1, {}, 3, 4]);\nYour solution should not use the Array.prototype.flat() or Array.prototype.flatMap() methods.\njs\nassert(!__helpers.removeJSComments(code).match(/\\.\\s*flat\\s*\\(/) && !__helpers.removeJSComments(code).match(/\\.\\s*flatMap\\s*\\(/));\nGlobal variables should not be used.\njs\nsteamrollArray([1, {}, [3, [[4]]]])\nassert.deepEqual(steamrollArray([1, {}, [3, [[4]]]]), [1, {}, 3, 4])\n--seed--\n--seed-contents--\n```js\nfunction steamrollArray(arr) {\nreturn arr;\n}\nsteamrollArray([1, [2], [3, [[4]]]]);\n```\n--solutions--\njs\nfunction steamrollArray(arr) {\nif (!Array.isArray(arr)) {\nreturn [arr];\n}\nvar out = [];\narr.forEach(function(e) {\nsteamrollArray(e).forEach(function(v) {\nout.push(v);\n});\n});\nreturn out;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\steamroller.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6b93810cb1225e8208aab168e88c0f92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sorted-union.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a105e963526e7de52b219be9\ntitle: Sorted Union\nchallengeType: 1\nforumTopicId: 16077\ndashedName: sorted-union\n--description--\nWrite a function that takes two or more arrays and returns a new array of unique values in the order of the original provided arrays In other words, all values present from all arrays should be included in their original order, but with no duplicates in the final array The unique numbers should be sorted by their original order, but the final array should not be sorted in numerical order Check the assertion tests for examples --hints--\nuniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]) should return [1, 3, 2, 5, 4] js\nassert deepEqual(uniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]), [1, 3, 2, 5, 4]);\nuniteUnique([1, 2, 3], [5, 2, 1]) should return [1, 2, 3, 5] js\nassert deepEqual(uniteUnique([1, 2, 3], [5, 2, 1]), [1, 2, 3, 5]);\nuniteUnique([1, 2, 3], [5, 2, 1, 4], [2, 1], [6, 7, 8]) should return [1, 2, 3, 5, 4, 6, 7, 8] js\nassert deepEqual(uniteUnique([1, 2, 3], [5, 2, 1, 4], [2, 1], [6, 7, 8]), [\n1,\n2,\n3,\n5,\n4,\n6,\n7,\n8\n]);\nuniteUnique([1, 3, 2], [5, 4], [5, 6]) should return [1, 3, 2, 5, 4, 6] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1901,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sorted-union.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9f03cafd1dddf7d9fc916fafaf9f98a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sorted-union.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5] js assert deepEqual(uniteUnique([1, 2, 3], [5, 2, 1]), [1, 2, 3, 5]); uniteUnique([1, 2, 3], [5, 2, 1, 4], [2, 1], [6, 7, 8]) should return [1, 2, 3, 5, 4, 6, 7, 8] js assert deepEqual(uniteUnique([1, 2, 3], [5, 2, 1, 4], [2, 1], [6, 7, 8]), [ 1, 2, 3, 5, 4, 6, 7, 8 ]); uniteUnique([1, 3, 2], [5, 4], [5, 6]) should return [1, 3, 2, 5, 4, 6] js assertdeepEqual(uniteUnique([1, 3, 2], [5, 4], [5, 6]), [1, 3, 2, 5, 4, 6]);\nuniteUnique([1, 3, 2, 3], [5, 2, 1, 4], [2, 1]) should return [1, 3, 2, 5, 4] js\nassert deepEqual(uniteUnique([1, 3, 2, 3], [5, 2, 1, 4], [2, 1]), [1, 3, 2, 5, 4]);\n--seed--\n--seed-contents--\n```js\nfunction uniteUnique(arr) {\nreturn arr;\n}\nuniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]);\n```\n--solutions--\njs\nfunction uniteUnique(arr) {\nreturn [] slice call(arguments) reduce(function(a, b) {\nreturn [] concat(\na,\nb filter(function(e, currentIndex) {\nreturn b indexOf(e) === currentIndex && a indexOf(e) === -1;\n}));\n}, []);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1901,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sorted-union.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "739fdc341e6face6087b07629fcafc6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-odd-fibonacci-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a5229172f011153519423690\ntitle: Sum All Odd Fibonacci Numbers\nchallengeType: 1\nforumTopicId: 16084\ndashedName: sum-all-odd-fibonacci-numbers\n--description--\nGiven a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.\nThe first two numbers in the Fibonacci sequence are 0 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first seven numbers of the Fibonacci sequence are 0, 1, 1, 2, 3, 5 and 8.\nFor example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.\n--hints--\nsumFibs(1) should return a number.\njs\nassert(typeof sumFibs(1) === 'number');\nsumFibs(1000) should return 1785.\njs\nassert(sumFibs(1000) === 1785);\nsumFibs(4000000) should return 4613732.\njs\nassert(sumFibs(4000000) === 4613732);\nsumFibs(4) should return 5.\njs\nassert(sumFibs(4) === 5);\nsumFibs(75024) should return 60696.\njs\nassert(sumFibs(75024) === 60696);\nsumFibs(75025) should return 135721.\njs\nassert(sumFibs(75025) === 135721);\n--seed--\n--seed-contents--\n```js\nfunction sumFibs(num) {\nreturn num;\n}\nsumFibs(4);\n```\n--solutions--\njs\nfunction sumFibs(num) {\nvar a = 1;\nvar b = 1;\nvar s = 0;\nwhile (a <= num) {\nif (a % 2 !== 0) {\ns += a;\n}\na = [b, b=b+a][0];\n}\nreturn s;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1441,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-odd-fibonacci-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0b99e43f21ad461731b98aeb8f1b4669",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-primes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a3bfc1673c0526e06d3ac698\ntitle: Sum All Primes\nchallengeType: 1\nforumTopicId: 16085\ndashedName: sum-all-primes\n--description--\nA prime number is a whole number greater than 1 with exactly two divisors: 1 and itself For example, 2 is a prime number because it is only divisible by 1 and 2 In contrast, 4 is not prime since it is divisible by 1, 2 and 4 Rewrite sumPrimes so it returns the sum of all prime numbers that are less than or equal to num --hints--\nsumPrimes(10) should return a number js\nassert deepEqual(typeof sumPrimes(10), 'number');\nsumPrimes(10) should return 17 js\nassert deepEqual(sumPrimes(10), 17);\nsumPrimes(977) should return 73156 js\nassert deepEqual(sumPrimes(977), 73156);\n--seed--\n--seed-contents--\n```js\nfunction sumPrimes(num) {\nreturn num;\n}\nsumPrimes(10);\n```\n--solutions--\n```js\nclass PrimeSeive {\nconstructor(num) {\nconst seive = Array(Math floor((num - 1) / 2)) fill(true);\nconst upper = Math floor((num - 1) / 2);\nconst sqrtUpper = Math floor((Math sqrt(num) - 1) / 2);\nfor (let i = 0; i <= sqrtUpper; i++) {\nif (seive[i]) {\n// Mark value in seive array\nconst prime = 2 * i + 3;\n// Mark all multiples of this number as false (not prime)\nconst primeSquaredIndex = 2 * i ** 2 + 6 * i + 3;\nfor (let j = primeSquaredIndex; j < upper; j += prime) {\nseive[j] = false;\n}\n}\n}\nthis _seive = seive;\n}\nisPrime(num) {\nreturn num === 2 true\n: num % 2 === 0 false\n: this isOddPrime(num);\n}\nisOddPrime(num) {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1913,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-primes.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "58a331fc68e4f345ee42589ca99224ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-primes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= 2 * i + 3; // Mark all multiples of this number as false (not prime) const primeSquaredIndex = 2 * i ** 2 + 6 * i + 3; for (let j = primeSquaredIndex; j < upper; j += prime) { seive[j] = false; } } } this _seive = seive; } isPrime(num) { return num === 2 true : num % 2 === 0 false : this isOddPrime(num); } isOddPrime(num) { return this_seive[(num - 3) / 2];\n}\n};\nfunction sumPrimes(num) {\nconst primeSeive = new PrimeSeive(num);\nlet sum = 2;\nfor (let i = 3; i <= num; i += 2) {\nif (primeSeive isOddPrime(i)) sum += i;\n}\nreturn sum;\n}\nsumPrimes(10);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1913,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\sum-all-primes.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0686a86ba61d55804858e8600e38206e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\caesars-cipher.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244e2\ntitle: Caesars Cipher\nchallengeType: 5\nforumTopicId: 16003\ndashedName: caesars-cipher\n--description--\nOne of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher In a shift cipher the meanings of the letters are shifted by some set amount A common modern use is the ROT13 cipher, where the values of the letters are shifted by 13 places Thus A ↔ N, B ↔ O and so on Write a function which takes a ROT13 encoded string as input and returns a decoded string All letters will be uppercase Do not transform any non-alphabetic character (i e spaces, punctuation), but do pass them on --hints--\nrot13(\"SERR PBQR PNZC\") should decode to the string FREE CODE CAMP\njs\nassert(rot13('SERR PBQR PNZC') === 'FREE CODE CAMP');\nrot13(\"SERR CVMMN \") should decode to the string FREE PIZZA js\nassert(rot13('SERR CVMMN ') === 'FREE PIZZA ');\nrot13(\"SERR YBIR \") should decode to the string FREE LOVE js\nassert(rot13('SERR YBIR ') === 'FREE LOVE ');\nrot13(\"GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT \") should decode to the string THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG js\nassert(\nrot13('GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT ') ===\n'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2551,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\caesars-cipher.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f74db39ab5cb79bc3a1b9f0f8760947c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\caesars-cipher.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the string FREE PIZZA js assert(rot13('SERR CVMMN ') === 'FREE PIZZA '); rot13(\"SERR YBIR \") should decode to the string FREE LOVE js assert(rot13('SERR YBIR ') === 'FREE LOVE '); rot13(\"GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT \") should decode to the string THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG js assert( rot13('GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT ') === 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'\n);\n--seed--\n--seed-contents--\n```js\nfunction rot13(str) {\nreturn str;\n}\nrot13(\"SERR PBQR PNZC\");\n```\n--solutions--\n```js\nvar lookup = {\n'A': 'N','B': 'O','C': 'P','D': 'Q',\n'E': 'R','F': 'S','G': 'T','H': 'U',\n'I': 'V','J': 'W','K': 'X','L': 'Y',\n'M': 'Z','N': 'A','O': 'B','P': 'C',\n'Q': 'D','R': 'E','S': 'F','T': 'G',\n'U': 'H','V': 'I','W': 'J','X': 'K',\n'Y': 'L','Z': 'M'\n};\nfunction rot13(encodedStr) {\nvar codeArr = encodedStr split(\"\");  // String to Array\nvar decodedArr = []; // Your Result goes here\n// Only change code below this line\ndecodedArr = codeArr map(function(letter) {\nif(lookup hasOwnProperty(letter)) {\nletter = lookup[letter];\n}\nreturn letter;\n});\n// Only change code above this line\nreturn decodedArr join(\"\"); // Array to String\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2551,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\caesars-cipher.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "eb3286d664b078c8985edf006bbd21db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a8e512fbe388ac2f9198f0fa\ntitle: Wherefore art thou\nchallengeType: 1\nforumTopicId: 16092\ndashedName: wherefore-art-thou\n--description--\nMake a function that looks through an array of objects (first argument) and returns an array of all objects that have matching name and value pairs (second argument) Each name and value pair of the source object has to be present in the object from the collection if it is to be included in the returned array For example, if the first argument is [{ first: \"Romeo\", last: \"Montague\" }, { first: \"Mercutio\", last: null }, { first: \"Tybalt\", last: \"Capulet\" }], and the second argument is { last: \"Capulet\" }, then you must return the third object from the array (the first argument), because it contains the name and its value, that was passed on as the second argument --hints--\nwhatIsInAName([{ first: \"Romeo\", last: \"Montague\" }, { first: \"Mercutio\", last: null }, { first: \"Tybalt\", last: \"Capulet\" }], { last: \"Capulet\" }) should return [{ first: \"Tybalt\", last: \"Capulet\" }] js\nassert deepEqual(\nwhatIsInAName(\n[\n{ first: 'Romeo', last: 'Montague' },\n{ first: 'Mercutio', last: null },\n{ first: 'Tybalt', last: 'Capulet' }\n],\n{ last: 'Capulet' }\n),\n[{ first: 'Tybalt', last: 'Capulet' }]\n);\nwhatIsInAName([{ \"apple\": 1 }, { \"apple\": 1 }, { \"apple\": 1, \"bat\": 2 }], { \"apple\": 1 }) should return [{ \"apple\": 1 }, { \"apple\": 1 }, { \"apple\": 1, \"bat\": 2 }] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "1d7f4fdd37dee9b7c6c63626cccb32a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"Tybalt\", last: \"Capulet\" }] js assert deepEqual( whatIsInAName( [ { first: 'Romeo', last: 'Montague' }, { first: 'Mercutio', last: null }, { first: 'Tybalt', last: 'Capulet' } ], { last: 'Capulet' } ), [{ first: 'Tybalt', last: 'Capulet' }] ); whatIsInAName([{ \"apple\": 1 }, { \"apple\": 1 }, { \"apple\": 1, \"bat\": 2 }], { \"apple\": 1 }) should return [{ \"apple\": 1 }, { \"apple\": 1 }, { \"apple\": 1, \"bat\": 2 }] js assertdeepEqual(\nwhatIsInAName([{ apple: 1 }, { apple: 1 }, { apple: 1, bat: 2 }], {\napple: 1\n}),\n[{ apple: 1 }, { apple: 1 }, { apple: 1, bat: 2 }]\n);\nwhatIsInAName([{ \"apple\": 1, \"bat\": 2 }, { \"bat\": 2 }, { \"apple\": 1, \"bat\": 2, \"cookie\": 2 }], { \"apple\": 1, \"bat\": 2 }) should return [{ \"apple\": 1, \"bat\": 2 }, { \"apple\": 1, \"bat\": 2, \"cookie\": 2 }] js\nassert deepEqual(\nwhatIsInAName(\n[{ apple: 1, bat: 2 }, { bat: 2 }, { apple: 1, bat: 2, cookie: 2 }],\n{ apple: 1, bat: 2 }\n),\n[\n{ apple: 1, bat: 2 },\n{ apple: 1, bat: 2, cookie: 2 }\n]\n);\nwhatIsInAName([{ \"apple\": 1, \"bat\": 2 }, { \"apple\": 1 }, { \"apple\": 1, \"bat\": 2, \"cookie\": 2 }], { \"apple\": 1, \"cookie\": 2 }) should return [{ \"apple\": 1, \"bat\": 2, \"cookie\": 2 }] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "88e1ebe70d07aa88db04599e3191a81f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1, bat: 2 }, { bat: 2 }, { apple: 1, bat: 2, cookie: 2 }], { apple: 1, bat: 2 } ), [ { apple: 1, bat: 2 }, { apple: 1, bat: 2, cookie: 2 } ] ); whatIsInAName([{ \"apple\": 1, \"bat\": 2 }, { \"apple\": 1 }, { \"apple\": 1, \"bat\": 2, \"cookie\": 2 }], { \"apple\": 1, \"cookie\": 2 }) should return [{ \"apple\": 1, \"bat\": 2, \"cookie\": 2 }] js assertdeepEqual(\nwhatIsInAName(\n[{ apple: 1, bat: 2 }, { apple: 1 }, { apple: 1, bat: 2, cookie: 2 }],\n{ apple: 1, cookie: 2 }\n),\n[{ apple: 1, bat: 2, cookie: 2 }]\n);\nwhatIsInAName([{ \"apple\": 1, \"bat\": 2 }, { \"apple\": 1 }, { \"apple\": 1, \"bat\": 2, \"cookie\": 2 }, { \"bat\":2 }], { \"apple\": 1, \"bat\": 2 }) should return [{ \"apple\": 1, \"bat\": 2 }, { \"apple\": 1, \"bat\": 2, \"cookie\":2 }] js\nassert deepEqual(\nwhatIsInAName(\n[\n{ apple: 1, bat: 2 },\n{ apple: 1 },\n{ apple: 1, bat: 2, cookie: 2 },\n{ bat: 2 }\n],\n{ apple: 1, bat: 2 }\n),\n[\n{ apple: 1, bat: 2 },\n{ apple: 1, bat: 2, cookie: 2 }\n]\n);\nwhatIsInAName([{\"a\": 1, \"b\": 2, \"c\": 3}], {\"a\": 1, \"b\": 9999, \"c\": 3}) should return []\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "aa2cf62a92c74a9702134818110192ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ \"apple\": 1, \"bat\": 2, \"cookie\":2 }] js assert deepEqual( whatIsInAName( [ { apple: 1, bat: 2 }, { apple: 1 }, { apple: 1, bat: 2, cookie: 2 }, { bat: 2 } ], { apple: 1, bat: 2 } ), [ { apple: 1, bat: 2 }, { apple: 1, bat: 2, cookie: 2 } ] ); whatIsInAName([{\"a\": 1, \"b\": 2, \"c\": 3}], {\"a\": 1, \"b\": 9999, \"c\": 3}) should return [] js assertdeepEqual(\nwhatIsInAName([{ a: 1, b: 2, c: 3 }], { a: 1, b: 9999, c: 3 }),\n[]\n);\nwhatIsInAName([{\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 9999}], {\"a\": 1, \"b\": 9999, \"c\": 3}) should return []\njs\nassert deepEqual(\nwhatIsInAName([{ a: 1, b: 2, c: 3, d: 9999 }], { a: 1, b: 9999, c: 3 }),\n[]\n);\n--seed--\n--seed-contents--\n```js\nfunction whatIsInAName(collection, source) {\n}\nwhatIsInAName([{ first: \"Romeo\", last: \"Montague\" }, { first: \"Mercutio\", last: null }, { first: \"Tybalt\", last: \"Capulet\" }], { last: \"Capulet\" });\n```\n--solutions--\njs\nfunction whatIsInAName(collection, source) {\nconst arr = [];\nconst keys = Object keys(source);\ncollection forEach(function(e) {\nif(keys every(function(key) {return e[key] === source[key];})) {\narr push(e);\n}\n});\nreturn arr;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\intermediate-algorithm-scripting\\wherefore-art-thou.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "230e1d6c889966c9bebe8b1484eec6c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\palindrome-checker.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: aaa48de84e1ecc7c742e1124\ntitle: Palindrome Checker\nchallengeType: 5\nforumTopicId: 16004\ndashedName: palindrome-checker\n--description--\nReturn true if the given string is a palindrome Otherwise, return false A palindrome is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing Note: You'll need to remove all non-alphanumeric characters (punctuation, spaces and symbols) and turn everything into the same case (lower or upper case) in order to check for palindromes We'll pass strings with varying formats, such as racecar, RaceCar, and race CAR among others We'll also pass strings with special symbols, such as 2A3*3a2, 2A3 3a2, and 2_A3*3#A2 --hints--\npalindrome(\"eye\") should return a boolean js\nassert(typeof palindrome('eye') === 'boolean');\npalindrome(\"eye\") should return true js\nassert(palindrome('eye') === true);\npalindrome(\"_eye\") should return true js\nassert(palindrome('_eye') === true);\npalindrome(\"race car\") should return true js\nassert(palindrome('race car') === true);\npalindrome(\"not a palindrome\") should return false js\nassert(palindrome('not a palindrome') === false);\npalindrome(\"A man, a plan, a canal Panama\") should return true js\nassert(palindrome('A man, a plan, a canal Panama') === true);\npalindrome(\"never odd or even\") should return true js\nassert(palindrome('never odd or even') === true);\npalindrome(\"nope\") should return false js\nassert(palindrome('nope') === false);\npalindrome(\"almostomla\") should return false js\nassert(palindrome('almostomla') === false);\npalindrome(\"My age is 0, 0 si ega ym \") should return true js\nassert(palindrome('My age is 0, 0 si ega ym ') === true);\npalindrome(\"1 eye for of 1 eye \") should return false js\nassert(palindrome('1 eye for of 1 eye",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2581,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\palindrome-checker.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "86168a48bbfcdf69407d05029df1c6bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\palindrome-checker.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a canal Panama') === true); palindrome(\"never odd or even\") should return true js assert(palindrome('never odd or even') === true); palindrome(\"nope\") should return false js assert(palindrome('nope') === false); palindrome(\"almostomla\") should return false js assert(palindrome('almostomla') === false); palindrome(\"My age is 0, 0 si ega ym \") should return true js assert(palindrome('My age is 0, 0 si ega ym ') === true); palindrome(\"1 eye for of 1 eye \") should return false js assert(palindrome('1 eye for of 1 eye') === false);\npalindrome(\"0_0 (: /-\\ :) 0-0\") should return true js\nassert(palindrome('0_0 (: /- :) 0-0') === true);\npalindrome(\"five|\\_/|four\") should return false js\nassert(palindrome('five|_/|four') === false);\n--seed--\n--seed-contents--\n```js\nfunction palindrome(str) {\nreturn true;\n}\npalindrome(\"eye\");\n```\n--solutions--\n```js\nfunction palindrome(str) {\nvar string = str toLowerCase() split(/[^A-Za-z0-9]/gi) join('');\nvar aux = string split('');\nif (aux join('') === aux reverse() join('')){\nreturn true;\n}\nreturn false;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2581,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\palindrome-checker.md",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a0131f20c1d0fb38154fc4a54859c31c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\roman-numeral-converter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a7f4d8f2483413a6ce226cac\ntitle: Roman Numeral Converter\nchallengeType: 5\nforumTopicId: 16044\ndashedName: roman-numeral-converter\n--description--\nConvert the given number into a roman numeral | Roman numerals | Arabic numerals |\n|----------------|-----------------|\n| M              | 1000            |\n| CM             | 900             |\n| D              | 500             |\n| CD             | 400             |\n| C              | 100             |\n| XC             | 90              |\n| L              | 50              |\n| XL             | 40              |\n| X              | 10              |\n| IX             | 9               |\n| V              | 5               |\n| IV             | 4               |\n| I              | 1               |\nAll roman numerals answers should be provided in upper-case --hints--\nconvertToRoman(2) should return the string II js\nassert deepEqual(convertToRoman(2), 'II');\nconvertToRoman(3) should return the string III js\nassert deepEqual(convertToRoman(3), 'III');\nconvertToRoman(4) should return the string IV js\nassert deepEqual(convertToRoman(4), 'IV');\nconvertToRoman(5) should return the string V js\nassert deepEqual(convertToRoman(5), 'V');\nconvertToRoman(9) should return the string IX js\nassert deepEqual(convertToRoman(9), 'IX');\nconvertToRoman(12) should return the string XII js\nassert deepEqual(convertToRoman(12), 'XII');\nconvertToRoman(16) should return the string XVI js\nassert deepEqual(convertToRoman(16), 'XVI');\nconvertToRoman(29) should return the string XXIX js\nassert deepEqual(convertToRoman(29), 'XXIX');\nconvertToRoman(44) should return the string XLIV js\nassert deepEqual(convertToRoman(44), 'XLIV');\nconvertToRoman(45) should return the string XLV js\nassert deepEqual(convertToRoman(45), 'XLV');\nconvertToRoman(68) should return the string LXVIII\njs\nassert deepEqual(convertToRoman(68), 'LXVIII');\nconvertToRoman(83) should return the string LXXXIII\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\roman-numeral-converter.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "df49e9705179f82f2c6a46e6dbb3a74c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\roman-numeral-converter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return the string IX js assert deepEqual(convertToRoman(9), 'IX'); convertToRoman(12) should return the string XII js assert deepEqual(convertToRoman(12), 'XII'); convertToRoman(16) should return the string XVI js assert deepEqual(convertToRoman(16), 'XVI'); convertToRoman(29) should return the string XXIX js assert deepEqual(convertToRoman(29), 'XXIX'); convertToRoman(44) should return the string XLIV js assert deepEqual(convertToRoman(44), 'XLIV'); convertToRoman(45) should return the string XLV js assert deepEqual(convertToRoman(45), 'XLV'); convertToRoman(68) should return the string LXVIII js assert deepEqual(convertToRoman(68), 'LXVIII'); convertToRoman(83) should return the string LXXXIII js assertdeepEqual(convertToRoman(83), 'LXXXIII');\nconvertToRoman(97) should return the string XCVII\njs\nassert deepEqual(convertToRoman(97), 'XCVII');\nconvertToRoman(99) should return the string XCIX\njs\nassert deepEqual(convertToRoman(99), 'XCIX');\nconvertToRoman(400) should return the string CD\njs\nassert deepEqual(convertToRoman(400), 'CD');\nconvertToRoman(500) should return the string D\njs\nassert deepEqual(convertToRoman(500), 'D');\nconvertToRoman(501) should return the string DI\njs\nassert deepEqual(convertToRoman(501), 'DI');\nconvertToRoman(649) should return the string DCXLIX\njs\nassert deepEqual(convertToRoman(649), 'DCXLIX');\nconvertToRoman(798) should return the string DCCXCVIII\njs\nassert deepEqual(convertToRoman(798), 'DCCXCVIII');\nconvertToRoman(891) should return the string DCCCXCI\njs\nassert deepEqual(convertToRoman(891), 'DCCCXCI');\nconvertToRoman(1000) should return the string M\njs\nassert deepEqual(convertToRoman(1000), 'M');\nconvertToRoman(1004) should return the string MIV\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\roman-numeral-converter.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9a1c9afc9b5f7fcc07fc445666b6bcad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\roman-numeral-converter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return the string CD js assert deepEqual(convertToRoman(400), 'CD'); convertToRoman(500) should return the string D js assert deepEqual(convertToRoman(500), 'D'); convertToRoman(501) should return the string DI js assert deepEqual(convertToRoman(501), 'DI'); convertToRoman(649) should return the string DCXLIX js assert deepEqual(convertToRoman(649), 'DCXLIX'); convertToRoman(798) should return the string DCCXCVIII js assert deepEqual(convertToRoman(798), 'DCCXCVIII'); convertToRoman(891) should return the string DCCCXCI js assert deepEqual(convertToRoman(891), 'DCCCXCI'); convertToRoman(1000) should return the string M js assert deepEqual(convertToRoman(1000), 'M'); convertToRoman(1004) should return the string MIV js assertdeepEqual(convertToRoman(1004), 'MIV');\nconvertToRoman(1006) should return the string MVI\njs\nassert deepEqual(convertToRoman(1006), 'MVI');\nconvertToRoman(1023) should return the string MXXIII\njs\nassert deepEqual(convertToRoman(1023), 'MXXIII');\nconvertToRoman(2014) should return the string MMXIV\njs\nassert deepEqual(convertToRoman(2014), 'MMXIV');\nconvertToRoman(3999) should return the string MMMCMXCIX\njs\nassert deepEqual(convertToRoman(3999), 'MMMCMXCIX');\n--seed--\n--seed-contents--\n```js\nfunction convertToRoman(num) {\nreturn num;\n}\nconvertToRoman(36);\n```\n--solutions--\njs\nfunction convertToRoman(num) {\nvar ref = [['M', 1000], ['CM', 900], ['D', 500], ['CD', 400], ['C', 100], ['XC', 90], ['L', 50], ['XL', 40], ['X', 10], ['IX', 9], ['V', 5], ['IV', 4], ['I', 1]];\nvar res = [];\nref forEach(function(p) {\nwhile (num >= p[1]) {\nres push(p[0]);\nnum -= p[1];\n}\n});\nreturn res join('');\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\roman-numeral-converter.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "47c0a0b1ad116ddeb7e7b484eb9552ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\add-methods-after-inheritance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db1367417b2b2512b87\ntitle: Add Methods After Inheritance\nchallengeType: 1\nforumTopicId: 301315\ndashedName: add-methods-after-inheritance\n--description--\nA constructor function that inherits its prototype object from a supertype constructor function can still have its own methods in addition to inherited methods For example, Bird is a constructor that inherits its prototype from Animal:\njs\nfunction Animal() { }\nAnimal prototype eat = function() {\nconsole log(\"nom nom nom\");\n};\nfunction Bird() { }\nBird prototype = Object create(Animal prototype);\nBird prototype constructor = Bird;\nIn addition to what is inherited from Animal, you want to add behavior that is unique to Bird objects Here, Bird will get a fly() function Functions are added to Bird's prototype the same way as any constructor function:\njs\nBird prototype fly = function() {\nconsole log(\"I'm flying \");\n};\nNow instances of Bird will have both eat() and fly() methods:\njs\nlet duck = new Bird();\nduck eat();\nduck fly();\nduck eat() would display the string nom nom nom in the console, and duck fly() would display the string I'm flying --instructions--\nAdd all necessary code so the Dog object inherits from Animal and the Dog's prototype constructor is set to Dog Then add a bark() method to the Dog object so that beagle can both eat() and bark() The bark() method should print Woof to the console --hints--\nAnimal should not respond to the bark() method js\nassert(typeof Animal prototype bark == 'undefined');\nDog should inherit the eat() method from Animal js\nassert(typeof Dog prototype eat == 'function');\nThe Dog prototype should have a bark() method js\nassert('bark' in Dog prototype);\nbeagle should be an instanceof Animal js\nassert(beagle instanceof Animal);\nThe constructor for beagle should be set to Dog js\nassert(beagle constructor === Dog);\nbeagle eat() should log the string nom nom nom\njs\ncapture();\nbeagle eat();\nuncapture();\nassert(logOutput == 'nom nom nom');\nbeagle bark() should log the string Woof js\ncapture();\nbeagle bark();\nuncapture();\nassert(logOutput == 'Woof ');\n--seed--\n--before-user-code--\n```js\nvar logOutput = \"\";\nvar originalConsole = console\nfunction capture() {\nvar nativeLog = console log;\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\add-methods-after-inheritance.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f8015dae3eb5050a893d0841a6ad2c6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\add-methods-after-inheritance.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an instanceof Animal js assert(beagle instanceof Animal); The constructor for beagle should be set to Dog js assert(beagle constructor === Dog); beagle eat() should log the string nom nom nom js capture(); beagle eat(); uncapture(); assert(logOutput == 'nom nom nom'); beagle bark() should log the string Woof js capture(); beagle bark(); uncapture(); assert(logOutput == 'Woof '); --seed-- --before-user-code-- ```js var logOutput = \"\"; var originalConsole = console function capture() { var nativeLog = console log; consolelog = function (message) {\nlogOutput = message;\nif(nativeLog apply) {\nnativeLog apply(originalConsole, arguments);\n} else {\nvar nativeMsg = Array prototype slice apply(arguments) join(' ');\nnativeLog(nativeMsg);\n}\n};\n}\nfunction uncapture() {\nconsole log = originalConsole log;\n}\ncapture();\n```\n--after-user-code--\njs\nuncapture();\n(function() { return logOutput || \"console log never called\"; })();\n--seed-contents--\n```js\nfunction Animal() { }\nAnimal prototype eat = function() { console log(\"nom nom nom\"); };\nfunction Dog() { }\n// Only change code below this line\n// Only change code above this line\nlet beagle = new Dog();\n```\n--solutions--\n```js\nfunction Animal() { }\nAnimal prototype eat = function() { console log(\"nom nom nom\"); };\nfunction Dog() { }\nDog prototype = Object create(Animal prototype);\nDog prototype constructor = Dog;\nDog prototype bark = function () {\nconsole log('Woof ');\n};\nlet beagle = new Dog();\nbeagle eat();\nbeagle bark();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\add-methods-after-inheritance.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ccd1c61e3d7d7794e818fffd109d6453",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\change-the-prototype-to-a-new-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7daf367417b2b2512b7f\ntitle: Change the Prototype to a New Object\nchallengeType: 1\nforumTopicId: 301316\ndashedName: change-the-prototype-to-a-new-object\n--description--\nUp until now you have been adding properties to the prototype individually:\njs\nBird.prototype.numLegs = 2;\nThis becomes tedious after more than a few properties.\n```js\nBird.prototype.eat = function() {\nconsole.log(\"nom nom nom\");\n}\nBird.prototype.describe = function() {\nconsole.log(\"My name is \" + this.name);\n}\n```\nA more efficient way is to set the prototype to a new object that already contains the properties. This way, the properties are added all at once:\njs\nBird.prototype = {\nnumLegs: 2,\neat: function() {\nconsole.log(\"nom nom nom\");\n},\ndescribe: function() {\nconsole.log(\"My name is \" + this.name);\n}\n};\n--instructions--\nAdd the property numLegs and the two methods eat() and describe() to the prototype of Dog by setting the prototype to a new object.\n--hints--\nDog.prototype should be set to a new object.\njs\nassert(/Dog\\.prototype\\s*?=\\s*?{/.test(__helpers.removeJSComments(code)));\nDog.prototype should have the property numLegs.\njs\nassert(Dog.prototype.numLegs !== undefined);\nDog.prototype should have the method eat().\njs\nassert(typeof Dog.prototype.eat === 'function');\nDog.prototype should have the method describe().\njs\nassert(typeof Dog.prototype.describe === 'function');\n--seed--\n--seed-contents--\n```js\nfunction Dog(name) {\nthis.name = name;\n}\nDog.prototype = {\n// Only change code below this line\n};\n```\n--solutions--\njs\nfunction Dog(name) {\nthis.name = name;\n}\nDog.prototype = {\nnumLegs: 4,\neat () {\nconsole.log('nom nom nom');\n},\ndescribe () {\nconsole.log('My name is ' + this.name);\n}\n};",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1864,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\change-the-prototype-to-a-new-object.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8e0f35475367bcff33278b84c221881d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\create-a-basic-javascript-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dac367417b2b2512b73\ntitle: Create a Basic JavaScript Object\nchallengeType: 1\nforumTopicId: 301317\ndashedName: create-a-basic-javascript-object\n--description--\nThink about things people see every day, like cars, shops, and birds. These are all objects: tangible things people can observe and interact with.\nWhat are some qualities of these objects? A car has wheels. Shops sell items. Birds have wings.\nThese qualities, or properties, define what makes up an object. Note that similar objects share the same properties, but may have different values for those properties. For example, all cars have wheels, but not all cars have the same number of wheels.\nObjects in JavaScript are used to model real-world objects, giving them properties and behavior just like their real-world counterparts. Here's an example using these concepts to create a duck object:\njs\nlet duck = {\nname: \"Aflac\",\nnumLegs: 2\n};\nThis duck object has two property/value pairs: a name of Aflac and a numLegs of 2.\n--instructions--\nCreate a dog object with name and numLegs properties, and set them to a string and a number, respectively.\n--hints--\ndog should be an object.\njs\nassert(typeof dog === 'object');\ndog should have a name property set to a string.\njs\nassert(typeof dog.name === 'string');\ndog should have a numLegs property set to a number.\njs\nassert(typeof dog.numLegs === 'number');\n--seed--\n--seed-contents--\n```js\nlet dog = {\n};\n```\n--solutions--\njs\nlet dog = {\nname: '',\nnumLegs: 4\n};",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1613,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\create-a-basic-javascript-object.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3f0179d4a1295c6f482f9dc2164cc32b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\create-a-method-on-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dad367417b2b2512b75\ntitle: Create a Method on an Object\nchallengeType: 1\nforumTopicId: 301318\ndashedName: create-a-method-on-an-object\n--description--\nObjects can have a special type of property, called a method.\nMethods are properties that are functions. This adds different behavior to an object. Here is the duck example with a method:\njs\nlet duck = {\nname: \"Aflac\",\nnumLegs: 2,\nsayName: function() {return \"The name of this duck is \" + duck.name + \".\";}\n};\nduck.sayName();\nThe example adds the sayName method, which is a function that returns a sentence giving the name of the duck. Notice that the method accessed the name property in the return statement using duck.name. The next challenge will cover another way to do this.\n--instructions--\nUsing the dog object, give it a method called sayLegs. The method should return the sentence This dog has 4 legs.\n--hints--\ndog.sayLegs() should be a function.\njs\nassert(typeof dog.sayLegs === 'function');\ndog.sayLegs() should return the given string - note that punctuation and spacing matter.\njs\nassert(dog.sayLegs() === 'This dog has 4 legs.');\n--seed--\n--seed-contents--\n```js\nlet dog = {\nname: \"Spot\",\nnumLegs: 4,\n};\ndog.sayLegs();\n```\n--solutions--\n```js\nlet dog = {\nname: \"Spot\",\nnumLegs: 4,\nsayLegs () {\nreturn 'This dog has ' + this.numLegs + ' legs.';\n}\n};\ndog.sayLegs();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1459,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\create-a-method-on-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "58bc26a3336a46e5746d9feb498d97b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\define-a-constructor-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dad367417b2b2512b77\ntitle: Define a Constructor Function\nchallengeType: 1\nforumTopicId: 16804\ndashedName: define-a-constructor-function\n--description--\nConstructors are functions that create new objects. They define properties and behaviors that will belong to the new object. Think of them as a blueprint for the creation of new objects.\nHere is an example of a constructor:\njs\nfunction Bird() {\nthis.name = \"Albert\";\nthis.color = \"blue\";\nthis.numLegs = 2;\n}\nThis constructor defines a Bird object with properties name, color, and numLegs set to Albert, blue, and 2, respectively. Constructors follow a few conventions:\nConstructors are defined with a capitalized name to distinguish them from other functions that are not constructors.Constructors use the keyword this to set properties of the object they will create. Inside the constructor, this refers to the new object it will create.Constructors define properties and behaviors instead of returning a value as other functions might.\n--instructions--\nCreate a constructor, Dog, with properties name, color, and numLegs that are set to a string, a string, and a number, respectively.\n--hints--\nDog should have a name property set to a string.\njs\nassert(typeof new Dog().name === 'string');\nDog should have a color property set to a string.\njs\nassert(typeof new Dog().color === 'string');\nDog should have a numLegs property set to a number.\njs\nassert(typeof new Dog().numLegs === 'number');\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\njs\nfunction Dog (name, color, numLegs) {\nthis.name = 'name';\nthis.color = 'color';\nthis.numLegs = 4;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\define-a-constructor-function.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8bbe7551b18e21aa452e3a207d17f458",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: aff0395860f5d3034dc0bfc9\ntitle: Telephone Number Validator\nchallengeType: 5\nforumTopicId: 16090\ndashedName: telephone-number-validator\n--description--\nReturn true if the passed string looks like a valid US phone number The user may fill out the form field any way they choose as long as it has the format of a valid US number The following are examples of valid formats for US numbers (refer to the tests below for other variants):\n555-555-5555(555)555-5555(555) 555-5555555 555 555555555555551 555 555 5555\nFor this challenge you will be presented with a string such as 800-692-7753 or 8oo-six427676;laskdjf Your job is to validate or reject the US phone number based on any combination of the formats provided above The area code is required If the country code is provided, you must confirm that the country code is 1 Return true if the string is a valid US phone number; otherwise return false --hints--\ntelephoneCheck(\"555-555-5555\") should return a boolean js\nassert(typeof telephoneCheck('555-555-5555') === 'boolean');\ntelephoneCheck(\"1 555-555-5555\") should return true js\nassert(telephoneCheck('1 555-555-5555') === true);\ntelephoneCheck(\"1 (555) 555-5555\") should return true js\nassert(telephoneCheck('1 (555) 555-5555') === true);\ntelephoneCheck(\"5555555555\") should return true js\nassert(telephoneCheck('5555555555') === true);\ntelephoneCheck(\"555-555-5555\") should return true js\nassert(telephoneCheck('555-555-5555') === true);\ntelephoneCheck(\"(555)555-5555\") should return true js\nassert(telephoneCheck('(555)555-5555') === true);\ntelephoneCheck(\"1(555)555-5555\") should return true js\nassert(telephoneCheck('1(555)555-5555') === true);\ntelephoneCheck(\"555-5555\") should return false js\nassert(telephoneCheck('555-5555') === false);\ntelephoneCheck(\"5555555\") should return false",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "d02d61c3243a87574e68e61935fec786",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "telephoneCheck(\"555-555-5555\") should return a boolean js assert(typeof telephoneCheck('555-555-5555') === 'boolean'); telephoneCheck(\"1 555-555-5555\") should return true js assert(telephoneCheck('1 555-555-5555') === true); telephoneCheck(\"1 (555) 555-5555\") should return true js assert(telephoneCheck('1 (555) 555-5555') === true); telephoneCheck(\"5555555555\") should return true js assert(telephoneCheck('5555555555') === true); telephoneCheck(\"555-555-5555\") should return true js assert(telephoneCheck('555-555-5555') === true); telephoneCheck(\"(555)555-5555\") should return true js assert(telephoneCheck('(555)555-5555') === true); telephoneCheck(\"1(555)555-5555\") should return true js assert(telephoneCheck('1(555)555-5555') === true); telephoneCheck(\"555-5555\") should return false js assert(telephoneCheck('555-5555') === false); telephoneCheck(\"5555555\") should return falsejs\nassert(telephoneCheck('5555555') === false);\ntelephoneCheck(\"1 555)555-5555\") should return false js\nassert(telephoneCheck('1 555)555-5555') === false);\ntelephoneCheck(\"1 555 555 5555\") should return true js\nassert(telephoneCheck('1 555 555 5555') === true);\ntelephoneCheck(\"1 456 789 4444\") should return true js\nassert(telephoneCheck('1 456 789 4444') === true);\ntelephoneCheck(\"123**& asdf#\") should return false js\nassert(telephoneCheck('123**& asdf#') === false);\ntelephoneCheck(\"55555555\") should return false js\nassert(telephoneCheck('55555555') === false);\ntelephoneCheck(\"(6054756961)\") should return false js\nassert(telephoneCheck('(6054756961)') === false);\ntelephoneCheck(\"2 (757) 622-7382\") should return false js\nassert(telephoneCheck('2 (757) 622-7382') === false);\ntelephoneCheck(\"0 (757) 622-7382\") should return false",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "90f017e5945fe1c7a367758872f557ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert(telephoneCheck('1 555)555-5555') === false); telephoneCheck(\"1 555 555 5555\") should return true js assert(telephoneCheck('1 555 555 5555') === true); telephoneCheck(\"1 456 789 4444\") should return true js assert(telephoneCheck('1 456 789 4444') === true); telephoneCheck(\"123**& asdf#\") should return false js assert(telephoneCheck('123**& asdf#') === false); telephoneCheck(\"55555555\") should return false js assert(telephoneCheck('55555555') === false); telephoneCheck(\"(6054756961)\") should return false js assert(telephoneCheck('(6054756961)') === false); telephoneCheck(\"2 (757) 622-7382\") should return false js assert(telephoneCheck('2 (757) 622-7382') === false); telephoneCheck(\"0 (757) 622-7382\") should return falsejs\nassert(telephoneCheck('0 (757) 622-7382') === false);\ntelephoneCheck(\"-1 (757) 622-7382\") should return false js\nassert(telephoneCheck('-1 (757) 622-7382') === false);\ntelephoneCheck(\"2 757 622-7382\") should return false js\nassert(telephoneCheck('2 757 622-7382') === false);\ntelephoneCheck(\"10 (757) 622-7382\") should return false js\nassert(telephoneCheck('10 (757) 622-7382') === false);\ntelephoneCheck(\"27576227382\") should return false js\nassert(telephoneCheck('27576227382') === false);\ntelephoneCheck(\"(275)76227382\") should return false js\nassert(telephoneCheck('(275)76227382') === false);\ntelephoneCheck(\"2(757)6227382\") should return false js\nassert(telephoneCheck('2(757)6227382') === false);\ntelephoneCheck(\"2(757)622-7382\") should return false js\nassert(telephoneCheck('2(757)622-7382') === false);\ntelephoneCheck(\"555)-555-5555\") should return false",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "69caf3be742e519481a4b5ed971ab1d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(757) 622-7382') === false); telephoneCheck(\"-1 (757) 622-7382\") should return false js assert(telephoneCheck('-1 (757) 622-7382') === false); telephoneCheck(\"2 757 622-7382\") should return false js assert(telephoneCheck('2 757 622-7382') === false); telephoneCheck(\"10 (757) 622-7382\") should return false js assert(telephoneCheck('10 (757) 622-7382') === false); telephoneCheck(\"27576227382\") should return false js assert(telephoneCheck('27576227382') === false); telephoneCheck(\"(275)76227382\") should return false js assert(telephoneCheck('(275)76227382') === false); telephoneCheck(\"2(757)6227382\") should return false js assert(telephoneCheck('2(757)6227382') === false); telephoneCheck(\"2(757)622-7382\") should return false js assert(telephoneCheck('2(757)622-7382') === false); telephoneCheck(\"555)-555-5555\") should return falsejs\nassert(telephoneCheck('555)-555-5555') === false);\ntelephoneCheck(\"(555-555-5555\") should return false js\nassert(telephoneCheck('(555-555-5555') === false);\ntelephoneCheck(\"(555)5(55 )-5555\") should return false js\nassert(telephoneCheck('(555)5(55 )-5555') === false);\ntelephoneCheck(\"55 55-55-555-5\") should return false js\nassert(telephoneCheck('55 55-55-555-5') === false);\ntelephoneCheck(\"11 555-555-5555\") should return false js\nassert(telephoneCheck('11 555-555-5555') === false);\ntelephoneCheck(), when called with any valid number, should return true ```js\nconst validPatterns = [\n'1 XXX-XXX-XXXX',\n'1 (XXX) XXX-XXXX',\n'1(XXX)XXX-XXXX',\n'1 XXX XXX XXXX',\n'XXXXXXXXXX',\n'XXX-XXX-XXXX',\n'(XXX)XXX-XXXX',\n];\nvalidPatterns forEach(pattern => {\nwhile (pattern includes('X')) {\npattern = pattern replace('X',  Math floor(Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "82e7f03fbe21732897a4240389a20fdf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert(telephoneCheck('(555-555-5555') === false); telephoneCheck(\"(555)5(55 )-5555\") should return false js assert(telephoneCheck('(555)5(55 )-5555') === false); telephoneCheck(\"55 55-55-555-5\") should return false js assert(telephoneCheck('55 55-55-555-5') === false); telephoneCheck(\"11 555-555-5555\") should return false js assert(telephoneCheck('11 555-555-5555') === false); telephoneCheck(), when called with any valid number, should return true ```js const validPatterns = [ '1 XXX-XXX-XXXX', '1 (XXX) XXX-XXXX', '1(XXX)XXX-XXXX', '1 XXX XXX XXXX', 'XXXXXXXXXX', 'XXX-XXX-XXXX', '(XXX)XXX-XXXX', ]; validPatterns forEach(pattern => { while (pattern includes('X')) { pattern = pattern replace('X', Math floor(Mathrandom() * 7) + 2); //While this may seem weird at first, it's required for the CI build to pass\n//This is apparently because the solution provided for CI purposes actually checks for valid area and exchange codes }\nassert isTrue(telephoneCheck(pattern));\n});\n```\ntelephoneCheck(), when called with an invalid number, should return false ```js\nconst invalidPatterns = [\n'10 XXX-XXX-XXXX',\n'1 (XX)XXX-XXXX',\n'1 (XXX)XXX-XXXX',\n'-1 XXX XXX XXXX',\n'XXXXXXXX',\n'XXX#XXX-XXXX',\n'(XXXXXX-XXXX',\n];\ninvalidPatterns forEach(pattern => {\nwhile (pattern includes('X')) {\npattern = pattern replace('X',  Math floor(Math random() * 10));\n}\nassert isFalse(telephoneCheck(pattern));\n});\n```\n--seed--\n--seed-contents--\n```js\nfunction telephoneCheck(str) {\nreturn true;\n}\ntelephoneCheck(\"555-555-5555\");\n```\n--solutions--\n```js\nvar re = /^([+] 1[\\s] ) (( :([)][\\s] )|( :( :[2-9]1[02-9]|[2-9][02-8][0-9])[\\s -]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "fb40ad0ce0babdf086ddaacacaa90d2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "telephoneCheck(), when called with an invalid number, should return false ```js const invalidPatterns = [ '10 XXX-XXX-XXXX', '1 (XX)XXX-XXXX', '1 (XXX)XXX-XXXX', '-1 XXX XXX XXXX', 'XXXXXXXX', 'XXX#XXX-XXXX', '(XXXXXX-XXXX', ]; invalidPatterns forEach(pattern => { while (pattern includes('X')) { pattern = pattern replace('X', Math floor(Math random() * 10)); } assert isFalse(telephoneCheck(pattern)); }); ``` --seed-- --seed-contents-- ```js function telephoneCheck(str) { return true; } telephoneCheck(\"555-555-5555\"); ``` --solutions-- ```js var re = /^([+] 1[\\s] ) (( :([)][\\s] )|( :( :[2-9]1[02-9]|[2-9][02-8][0-9])[\\s -])){1}([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2}[\\s -] ){1}([0-9]{4}){1}$/;\nfunction telephoneCheck(str) {\nreturn re test(str);\n}\ntelephoneCheck(\"555-555-5555\");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\telephone-number-validator.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "aefed04ed48b3ae4225bd9b346ddf003",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\iterate-over-all-properties.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7daf367417b2b2512b7d\ntitle: Iterate Over All Properties\nchallengeType: 1\nforumTopicId: 301320\ndashedName: iterate-over-all-properties\n--description--\nYou have now seen two kinds of properties: own properties and prototype properties. Own properties are defined directly on the object instance itself. And prototype properties are defined on the prototype.\n```js\nfunction Bird(name) {\nthis.name = name;  //own property\n}\nBird.prototype.numLegs = 2; // prototype property\nlet duck = new Bird(\"Donald\");\n```\nHere is how you add duck's own properties to the array ownProps and prototype properties to the array prototypeProps:\n```js\nlet ownProps = [];\nlet prototypeProps = [];\nfor (let property in duck) {\nif(duck.hasOwnProperty(property)) {\nownProps.push(property);\n} else {\nprototypeProps.push(property);\n}\n}\nconsole.log(ownProps);\nconsole.log(prototypeProps);\n```\nconsole.log(ownProps) would display [\"name\"] in the console, and console.log(prototypeProps) would display [\"numLegs\"].\n--instructions--\nAdd all of the own properties of beagle to the array ownProps. Add all of the prototype properties of Dog to the array prototypeProps.\n--hints--\nThe ownProps array should only contain name.\njs\nassert.deepEqual(ownProps, ['name']);\nThe prototypeProps array should only contain numLegs.\njs\nassert.deepEqual(prototypeProps, ['numLegs']);\nYou should solve this challenge without using the built in method Object.keys().\njs\nassert(!/\\Object.keys/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction Dog(name) {\nthis.name = name;\n}\nDog.prototype.numLegs = 4;\nlet beagle = new Dog(\"Snoopy\");\nlet ownProps = [];\nlet prototypeProps = [];\n// Only change code below this line\n```\n--solutions--\n```js\nfunction Dog(name) {\nthis.name = name;\n}\nDog.prototype.numLegs = 4;\nlet beagle = new Dog(\"Snoopy\");\nlet ownProps = [];\nlet prototypeProps = [];\nfor (let prop in beagle) {\nif (beagle.hasOwnProperty(prop)) {\nownProps.push(prop);\n} else {\nprototypeProps.push(prop);\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\iterate-over-all-properties.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b948074349aed770c3e9c09f97c395ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: aa2e6f85cab2ab736c9a9b24\ntitle: Cash Register\nchallengeType: 5\nforumTopicId: 16012\ndashedName: cash-register\n--description--\nDesign a cash register drawer function checkCashRegister() that accepts purchase price as the first argument (price), payment as the second argument (cash), and cash-in-drawer (cid) as the third argument cid is a 2D array listing available currency The checkCashRegister() function should always return an object with a status key and a change key Return {status: \"INSUFFICIENT_FUNDS\", change: []} if cash-in-drawer is less than the change due, or if you cannot return the exact change Return {status: \"CLOSED\", change: [ ]} with cash-in-drawer as the value for the key change if it is equal to the change due Otherwise, return {status: \"OPEN\", change: [ ]}, with the change due in coins and bills, sorted in highest to lowest order, as the value of the change key Currency UnitAmountPenny$0 01 (PENNY)Nickel$0 05 (NICKEL)Dime$0 1 (DIME)Quarter$0 25 (QUARTER)Dollar$1 (ONE)Five Dollars$5 (FIVE)Ten Dollars$10 (TEN)Twenty Dollars$20 (TWENTY)One-hundred Dollars$100 (ONE HUNDRED)\nSee below for an example of a cash-in-drawer array:\njs\n[\n[\"PENNY\", 1 01],\n[\"NICKEL\", 2 05],\n[\"DIME\", 3 1],\n[\"QUARTER\", 4 25],\n[\"ONE\", 90],\n[\"FIVE\", 55],\n[\"TEN\", 20],\n[\"TWENTY\", 60],\n[\"ONE HUNDRED\", 100]\n]\n--hints--\ncheckCashRegister(19 5, 20, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4 25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]) should return an object js\nassert deepEqual(\nObject prototype toString call(\ncheckCashRegister(19",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 515,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "b297b99d7930973118ca0b536b0bf81c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(ONE HUNDRED) See below for an example of a cash-in-drawer array: js [ [\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4 25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100] ] --hints-- checkCashRegister(19 5, 20, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4 25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]) should return an object js assert deepEqual( Object prototype toString call( checkCashRegister(195, 20, [\n['PENNY', 1 01],\n['NICKEL', 2 05],\n['DIME', 3 1],\n['QUARTER', 4 25],\n['ONE', 90],\n['FIVE', 55],\n['TEN', 20],\n['TWENTY', 60],\n['ONE HUNDRED', 100]\n])\n),\n'[object Object]'\n);\ncheckCashRegister(19 5, 20, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4 25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]) should return {status: \"OPEN\", change: [[\"QUARTER\", 0 5]]} js\nassert deepEqual(\ncheckCashRegister(19 5, 20, [\n['PENNY', 1 01],\n['NICKEL', 2 05],\n['DIME', 3 1],\n['QUARTER', 4 25],\n['ONE', 90],\n['FIVE', 55],\n['TEN', 20],\n['TWENTY', 60],\n['ONE HUNDRED', 100]\n]),\n{ status: 'OPEN', change: [['QUARTER', 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "faefb5d15a544dfbc417588eef53d2a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "]) ), '[object Object]' ); checkCashRegister(19 5, 20, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4 25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]) should return {status: \"OPEN\", change: [[\"QUARTER\", 0 5]]} js assert deepEqual( checkCashRegister(19 5, 20, [ ['PENNY', 1 01], ['NICKEL', 2 05], ['DIME', 3 1], ['QUARTER', 4 25], ['ONE', 90], ['FIVE', 55], ['TEN', 20], ['TWENTY', 60], ['ONE HUNDRED', 100] ]), { status: 'OPEN', change: [['QUARTER', 05]] }\n);\ncheckCashRegister(3 26, 100, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4 25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]) should return {status: \"OPEN\", change: [[\"TWENTY\", 60], [\"TEN\", 20], [\"FIVE\", 15], [\"ONE\", 1], [\"QUARTER\", 0 5], [\"DIME\", 0 2], [\"PENNY\", 0 04]]} js\nassert deepEqual(\ncheckCashRegister(3 26, 100, [\n['PENNY', 1 01],\n['NICKEL', 2 05],\n['DIME', 3 1],\n['QUARTER', 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "9012806a61021588153b358bb25a61a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "100] ]), { status: 'OPEN', change: [['QUARTER', 05]] } ); checkCashRegister(3 26, 100, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4 25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]) should return {status: \"OPEN\", change: [[\"TWENTY\", 60], [\"TEN\", 20], [\"FIVE\", 15], [\"ONE\", 1], [\"QUARTER\", 0 5], [\"DIME\", 0 2], [\"PENNY\", 0 04]]} js assert deepEqual( checkCashRegister(3 26, 100, [ ['PENNY', 1 01], ['NICKEL', 2 05], ['DIME', 3 1], ['QUARTER', 425],\n['ONE', 90],\n['FIVE', 55],\n['TEN', 20],\n['TWENTY', 60],\n['ONE HUNDRED', 100]\n]),\n{\nstatus: 'OPEN',\nchange: [\n['TWENTY', 60],\n['TEN', 20],\n['FIVE', 15],\n['ONE', 1],\n['QUARTER', 0 5],\n['DIME', 0 2],\n['PENNY', 0 04]\n]\n}\n);\ncheckCashRegister(19 5, 20, [[\"PENNY\", 0 01], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]) should return {status: \"INSUFFICIENT_FUNDS\", change: []} js\nassert deepEqual(\ncheckCashRegister(19 5, 20, [\n['PENNY', 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "505118a493db0eb82e0de56568f566ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "425], ['ONE', 90], ['FIVE', 55], ['TEN', 20], ['TWENTY', 60], ['ONE HUNDRED', 100] ]), { status: 'OPEN', change: [ ['TWENTY', 60], ['TEN', 20], ['FIVE', 15], ['ONE', 1], ['QUARTER', 0 5], ['DIME', 0 2], ['PENNY', 0 04] ] } ); checkCashRegister(19 5, 20, [[\"PENNY\", 0 01], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]) should return {status: \"INSUFFICIENT_FUNDS\", change: []} js assert deepEqual( checkCashRegister(19 5, 20, [ ['PENNY', 001],\n['NICKEL', 0],\n['DIME', 0],\n['QUARTER', 0],\n['ONE', 0],\n['FIVE', 0],\n['TEN', 0],\n['TWENTY', 0],\n['ONE HUNDRED', 0]\n]),\n{ status: 'INSUFFICIENT_FUNDS', change: [] }\n);\ncheckCashRegister(19 5, 20, [[\"PENNY\", 0 01], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 1], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]) should return {status: \"INSUFFICIENT_FUNDS\", change: []} js\nassert deepEqual(\ncheckCashRegister(19 5, 20, [\n['PENNY', 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "a7634262da4e4b46d11e35bfb4bda607",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{status: \"INSUFFICIENT_FUNDS\", change: []} js assert deepEqual( checkCashRegister(19 5, 20, [ ['PENNY', 001], ['NICKEL', 0], ['DIME', 0], ['QUARTER', 0], ['ONE', 0], ['FIVE', 0], ['TEN', 0], ['TWENTY', 0], ['ONE HUNDRED', 0] ]), { status: 'INSUFFICIENT_FUNDS', change: [] } ); checkCashRegister(19 5, 20, [[\"PENNY\", 0 01], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 1], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]) should return {status: \"INSUFFICIENT_FUNDS\", change: []} js assert deepEqual( checkCashRegister(19 5, 20, [ ['PENNY', 001],\n['NICKEL', 0],\n['DIME', 0],\n['QUARTER', 0],\n['ONE', 1],\n['FIVE', 0],\n['TEN', 0],\n['TWENTY', 0],\n['ONE HUNDRED', 0]\n]),\n{ status: 'INSUFFICIENT_FUNDS', change: [] }\n);\ncheckCashRegister(19 5, 20, [[\"PENNY\", 0 5], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]) should return {status: \"CLOSED\", change: [[\"PENNY\", 0 5], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]} js\nassert deepEqual(\ncheckCashRegister(19 5, 20, [\n['PENNY', 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "f36a1f0152269f55fd40e50aba4c4ef2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "['ONE', 1], ['FIVE', 0], ['TEN', 0], ['TWENTY', 0], ['ONE HUNDRED', 0] ]), { status: 'INSUFFICIENT_FUNDS', change: [] } ); checkCashRegister(19 5, 20, [[\"PENNY\", 0 5], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]) should return {status: \"CLOSED\", change: [[\"PENNY\", 0 5], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]} js assert deepEqual( checkCashRegister(19 5, 20, [ ['PENNY', 05],\n['NICKEL', 0],\n['DIME', 0],\n['QUARTER', 0],\n['ONE', 0],\n['FIVE', 0],\n['TEN', 0],\n['TWENTY', 0],\n['ONE HUNDRED', 0]\n]),\n{\nstatus: 'CLOSED',\nchange: [\n['PENNY', 0 5],\n['NICKEL', 0],\n['DIME', 0],\n['QUARTER', 0],\n['ONE', 0],\n['FIVE', 0],\n['TEN', 0],\n['TWENTY', 0],\n['ONE HUNDRED', 0]\n]\n}\n);\n--seed--\n--seed-contents--\n```js\nfunction checkCashRegister(price, cash, cid) {\nlet change;\nreturn change;\n}\ncheckCashRegister(19 5, 20, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "c9def9bfe1f4562eb61080179b1ecc57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[ ['PENNY', 05], ['NICKEL', 0], ['DIME', 0], ['QUARTER', 0], ['ONE', 0], ['FIVE', 0], ['TEN', 0], ['TWENTY', 0], ['ONE HUNDRED', 0] ]), { status: 'CLOSED', change: [ ['PENNY', 0 5], ['NICKEL', 0], ['DIME', 0], ['QUARTER', 0], ['ONE', 0], ['FIVE', 0], ['TEN', 0], ['TWENTY', 0], ['ONE HUNDRED', 0] ] } ); --seed-- --seed-contents-- ```js function checkCashRegister(price, cash, cid) { let change; return change; } checkCashRegister(19 5, 20, [[\"PENNY\", 1 01], [\"NICKEL\", 2 05], [\"DIME\", 3 1], [\"QUARTER\", 425], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]);\n```\n--solutions--\n```js\nconst denom = [\n{ name: \"ONE HUNDRED\", val: 100 },\n{ name: \"TWENTY\", val: 20 },\n{ name: \"TEN\", val: 10 },\n{ name: \"FIVE\", val: 5 },\n{ name: \"ONE\", val: 1 },\n{ name: \"QUARTER\", val: 0 25 },\n{ name: \"DIME\", val: 0 1 },\n{ name: \"NICKEL\", val: 0 05 },\n{ name: \"PENNY\", val: 0 01 },\n];\nfunction checkCashRegister(price, cash, cid) {\nconst output = { status: null, change: [] };\nlet change = cash - price;\nconst register = cid reduce(\nfunction (acc, curr) {\nacc total += curr[1];\nacc[curr[0]] = curr[1];\nreturn acc;\n},\n{ total: 0 }\n);\nif (register total === change) {\noutput status = \"CLOSED\";\noutput change = cid;\nreturn output;\n}\nif (register",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "eb0faecca16ed2daa495afabf9368b9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"NICKEL\", val: 0 05 }, { name: \"PENNY\", val: 0 01 }, ]; function checkCashRegister(price, cash, cid) { const output = { status: null, change: [] }; let change = cash - price; const register = cid reduce( function (acc, curr) { acc total += curr[1]; acc[curr[0]] = curr[1]; return acc; }, { total: 0 } ); if (register total === change) { output status = \"CLOSED\"; output change = cid; return output; } if (registertotal < change) {\noutput status = \"INSUFFICIENT_FUNDS\";\nreturn output;\n}\nconst change_arr = denom reduce(function (acc, curr) {\nlet value = 0;\nwhile (register[curr name] > 0 && change >= curr val) {\nchange -= curr val;\nregister[curr name] -= curr val;\nvalue += curr val;\nchange = Math round(change * 100) / 100;\n}\nif (value > 0) {\nacc push([curr name, value]);\n}\nreturn acc;\n}, []);\nif (change_arr length < 1 || change > 0) {\noutput status = \"INSUFFICIENT_FUNDS\";\nreturn output;\n}\noutput status = \"OPEN\";\noutput change = change_arr;\nreturn output;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\javascript-algorithms-and-data-structures-projects\\cash-register.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "296bd0a4d3b4c827787085af661d760d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\inherit-behaviors-from-a-supertype.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db0367417b2b2512b84\ntitle: Inherit Behaviors from a Supertype\nchallengeType: 1\nforumTopicId: 301319\ndashedName: inherit-behaviors-from-a-supertype\n--description--\nIn the previous challenge, you created a supertype called Animal that defined behaviors shared by all animals:\njs\nfunction Animal() { }\nAnimal prototype eat = function() {\nconsole log(\"nom nom nom\");\n};\nThis and the next challenge will cover how to reuse the methods of Animal inside Bird and Dog without defining them again It uses a technique called inheritance This challenge covers the first step: make an instance of the supertype (or parent) You already know one way to create an instance of Animal using the new operator:\njs\nlet animal = new Animal();\nThere are some disadvantages when using this syntax for inheritance, which are too complex for the scope of this challenge Instead, here's an alternative approach without those disadvantages:\njs\nlet animal = Object create(Animal prototype);\nObject create(obj) creates a new object, and sets obj as the new object's prototype Recall that the prototype is like the \"recipe\" for creating an object By setting the prototype of animal to be the prototype of Animal, you are effectively giving the animal instance the same \"recipe\" as any other instance of Animal js\nanimal eat();\nanimal instanceof Animal;\nThe instanceof method here would return true --instructions--\nUse Object create to make two instances of Animal named duck and beagle --hints--\nThe duck variable should be defined js\nassert(typeof duck == 'undefined');\nThe beagle variable should be defined js\nassert(typeof beagle == 'undefined');\nThe duck variable should be initialised with Object create js\nassert(\n/(let|const|var)\\s{1,}duck\\s*=\\s*Object\\ create\\s*\\(\\s*Animal\\ prototype\\s*\\)\\s*/ test(\n__helpers removeJSComments(code)\n)\n);\nThe beagle variable should be initialised with Object create js\nassert(\n/(let|const|var)\\s{1,}beagle\\s*=\\s*Object\\ create\\s*\\(\\s*Animal\\ prototype\\s*\\)\\s*/ test(\n__helpers removeJSComments(code)\n)\n);\nduck should have a prototype of Animal js\nassert(duck instanceof Animal);\nbeagle should have a prototype of Animal",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2936,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\inherit-behaviors-from-a-supertype.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6d75c544539724f38a6f23fc925bbf15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\inherit-behaviors-from-a-supertype.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "variable should be defined js assert(typeof duck == 'undefined'); The beagle variable should be defined js assert(typeof beagle == 'undefined'); The duck variable should be initialised with Object create js assert( /(let|const|var)\\s{1,}duck\\s*=\\s*Object\\ create\\s*\\(\\s*Animal\\ prototype\\s*\\)\\s*/ test( __helpers removeJSComments(code) ) ); The beagle variable should be initialised with Object create js assert( /(let|const|var)\\s{1,}beagle\\s*=\\s*Object\\ create\\s*\\(\\s*Animal\\ prototype\\s*\\)\\s*/ test( __helpers removeJSComments(code) ) ); duck should have a prototype of Animal js assert(duck instanceof Animal); beagle should have a prototype of Animaljs\nassert(beagle instanceof Animal);\n--seed--\n--seed-contents--\n```js\nfunction Animal() { }\nAnimal prototype = {\nconstructor: Animal,\neat: function() {\nconsole log(\"nom nom nom\");\n}\n};\n// Only change code below this line\nlet duck; // Change this line\nlet beagle; // Change this line\n```\n--solutions--\n```js\nfunction Animal() { }\nAnimal prototype = {\nconstructor: Animal,\neat: function() {\nconsole log(\"nom nom nom\");\n}\n};\nlet duck = Object create(Animal prototype);\nlet beagle = Object create(Animal prototype);\nduck eat();\nbeagle eat();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2936,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\inherit-behaviors-from-a-supertype.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8f246b2de3ac0fdbebd46108a03468f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\make-code-more-reusable-with-the-this-keyword.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dad367417b2b2512b76\ntitle: Make Code More Reusable with the this Keyword\nchallengeType: 1\nforumTopicId: 301321\ndashedName: make-code-more-reusable-with-the-this-keyword\n--description--\nThe last challenge introduced a method to the duck object It used duck name dot notation to access the value for the name property within the return statement:\njs\nsayName: function() {return \"The name of this duck is \" + duck name + \" \";}\nWhile this is a valid way to access the object's property, there is a pitfall here If the variable name changes, any code referencing the original name would need to be updated as well In a short object definition, it isn't a problem, but if an object has many references to its properties there is a greater chance for error A way to avoid these issues is with the this keyword:\njs\nlet duck = {\nname: \"Aflac\",\nnumLegs: 2,\nsayName: function() {return \"The name of this duck is \" + this name + \" \";}\n};\nthis is a deep topic, and the above example is only one way to use it In the current context, this refers to the object that the method is associated with: duck If the object's name is changed to mallard, it is not necessary to find all the references to duck in the code It makes the code reusable and easier to read --instructions--\nModify the dog sayLegs method to remove any references to dog Use the duck example for guidance --hints--\ndog sayLegs() should return the given string js\nassert(dog sayLegs() === 'This dog has 4 legs ');\nYour code should use the this keyword to access the numLegs property of dog js\nassert(__helpers removeJSComments(code) match(/this\\ numLegs/g));\n--seed--\n--seed-contents--\n```js\nlet dog = {\nname: \"Spot\",\nnumLegs: 4,\nsayLegs: function() {return \"This dog has \" + dog numLegs + \" legs \";}\n};\ndog sayLegs();\n```\n--solutions--\n```js\nlet dog = {\nname: \"Spot\",\nnumLegs: 4,\nsayLegs () {\nreturn 'This dog has ' + this numLegs + ' legs ';\n}\n};\ndog sayLegs();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2066,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\make-code-more-reusable-with-the-this-keyword.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "95098e141a89fe8ff3ca8bd31750ad89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\reset-an-inherited-constructor-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db1367417b2b2512b86\ntitle: Reset an Inherited Constructor Property\nchallengeType: 1\nforumTopicId: 301324\ndashedName: reset-an-inherited-constructor-property\n--description--\nWhen an object inherits its prototype from another object, it also inherits the supertype's constructor property.\nHere's an example:\njs\nfunction Bird() { }\nBird.prototype = Object.create(Animal.prototype);\nlet duck = new Bird();\nduck.constructor\nBut duck and all instances of Bird should show that they were constructed by Bird and not Animal. To do so, you can manually set the constructor property of Bird to the Bird object:\njs\nBird.prototype.constructor = Bird;\nduck.constructor\n--instructions--\nFix the code so duck.constructor and beagle.constructor return their respective constructors.\n--hints--\nBird.prototype should be an instance of Animal.\njs\nassert(Animal.prototype.isPrototypeOf(Bird.prototype));\nduck.constructor should return Bird.\njs\nassert(duck.constructor === Bird);\nDog.prototype should be an instance of Animal.\njs\nassert(Animal.prototype.isPrototypeOf(Dog.prototype));\nbeagle.constructor should return Dog.\njs\nassert(beagle.constructor === Dog);\n--seed--\n--seed-contents--\n```js\nfunction Animal() { }\nfunction Bird() { }\nfunction Dog() { }\nBird.prototype = Object.create(Animal.prototype);\nDog.prototype = Object.create(Animal.prototype);\n// Only change code below this line\nlet duck = new Bird();\nlet beagle = new Dog();\n```\n--solutions--\njs\nfunction Animal() { }\nfunction Bird() { }\nfunction Dog() { }\nBird.prototype = Object.create(Animal.prototype);\nDog.prototype = Object.create(Animal.prototype);\nDog.prototype.constructor = Dog;\nBird.prototype.constructor = Bird;\nlet duck = new Bird();\nlet beagle = new Dog();",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1853,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\reset-an-inherited-constructor-property.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "538f6a428f3215b98f45c3c9dfd08ab8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\extend-constructors-to-receive-arguments.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dae367417b2b2512b79\ntitle: Extend Constructors to Receive Arguments\nchallengeType: 1\nforumTopicId: 18235\ndashedName: extend-constructors-to-receive-arguments\n--description--\nThe Bird and Dog constructors from the last challenge worked well However, notice that all Birds that are created with the Bird constructor are automatically named Albert, are blue in color, and have two legs What if you want birds with different values for name and color It's possible to change the properties of each bird manually but that would be a lot of work:\njs\nlet swan = new Bird();\nswan name = \"Carlos\";\nswan color = \"white\";\nSuppose you were writing a program to keep track of hundreds or even thousands of different birds in an aviary It would take a lot of time to create all the birds, then change the properties to different values for every one To more easily create different Bird objects, you can design your Bird constructor to accept parameters:\njs\nfunction Bird(name, color) {\nthis name = name;\nthis color = color;\nthis numLegs = 2;\n}\nThen pass in the values as arguments to define each unique bird into the Bird constructor: let cardinal = new Bird(\"Bruce\", \"red\"); This gives a new instance of Bird with name and color properties set to Bruce and red, respectively The numLegs property is still set to 2 The cardinal has these properties:\njs\ncardinal name\ncardinal color\ncardinal numLegs\nThe constructor is more flexible It's now possible to define the properties for each Bird at the time it is created, which is one way that JavaScript constructors are so useful They group objects together based on shared characteristics and behavior and define a blueprint that automates their creation --instructions--\nCreate another Dog constructor This time, set it up to take the parameters name and color, and have the property numLegs fixed at 4 Then create a new Dog saved in a variable terrier Pass it two strings as arguments for the name and color properties --hints--\nDog should receive an argument for name js\nassert(new Dog('Clifford') name === 'Clifford');\nDog should receive an argument for color js\nassert(new Dog('Clifford', 'yellow') color === 'yellow');\nDog should have property numLegs set to 4 js\nassert(new Dog('Clifford')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2725,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\extend-constructors-to-receive-arguments.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "27d4f9640016ca961ce3131bdee82d6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\extend-constructors-to-receive-arguments.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to take the parameters name and color, and have the property numLegs fixed at 4 Then create a new Dog saved in a variable terrier Pass it two strings as arguments for the name and color properties --hints-- Dog should receive an argument for name js assert(new Dog('Clifford') name === 'Clifford'); Dog should receive an argument for color js assert(new Dog('Clifford', 'yellow') color === 'yellow'); Dog should have property numLegs set to 4 js assert(new Dog('Clifford')numLegs === 4);\nterrier should be created using the Dog constructor js\nassert(terrier instanceof Dog);\n--seed--\n--seed-contents--\n```js\nfunction Dog() {\n}\n```\n--solutions--\n```js\nfunction Dog (name, color) {\nthis numLegs = 4;\nthis name = name;\nthis color = color;\n}\nconst terrier = new Dog();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2725,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\extend-constructors-to-receive-arguments.md",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fc098a51cd65828728a6e80f75669b2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\set-the-childs-prototype-to-an-instance-of-the-parent.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db1367417b2b2512b85\ntitle: Set the Child's Prototype to an Instance of the Parent\nchallengeType: 1\nforumTopicId: 301325\ndashedName: set-the-childs-prototype-to-an-instance-of-the-parent\n--description--\nIn the previous challenge you saw the first step for inheriting behavior from the supertype (or parent) Animal: making a new instance of Animal.\nThis challenge covers the next step: set the prototype of the subtype (or child)—in this case, Bird—to be an instance of Animal.\njs\nBird.prototype = Object.create(Animal.prototype);\nRemember that the prototype is like the \"recipe\" for creating an object. In a way, the recipe for Bird now includes all the key \"ingredients\" from Animal.\njs\nlet duck = new Bird(\"Donald\");\nduck.eat();\nduck inherits all of Animal's properties, including the eat method.\n--instructions--\nModify the code so that instances of Dog inherit from Animal.\n--hints--\nDog.prototype should be an instance of Animal.\njs\nassert(Animal.prototype.isPrototypeOf(Dog.prototype));\n--seed--\n--seed-contents--\n```js\nfunction Animal() { }\nAnimal.prototype = {\nconstructor: Animal,\neat: function() {\nconsole.log(\"nom nom nom\");\n}\n};\nfunction Dog() { }\n// Only change code below this line\nlet beagle = new Dog();\n```\n--solutions--\n```js\nfunction Animal() { }\nAnimal.prototype = {\nconstructor: Animal,\neat: function() {\nconsole.log(\"nom nom nom\");\n}\n};\nfunction Dog() { }\nDog.prototype = Object.create(Animal.prototype);\nlet beagle = new Dog();\nbeagle.eat();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\set-the-childs-prototype-to-an-instance-of-the-parent.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "33368aadd4df142d13cc531ea5359947",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-the-immediately-invoked-function-expression-iife.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db2367417b2b2512b8b\ntitle: Understand the Immediately Invoked Function Expression (IIFE)\nchallengeType: 1\nforumTopicId: 301328\ndashedName: understand-the-immediately-invoked-function-expression-iife\n--description--\nA common pattern in JavaScript is to execute a function as soon as it is declared:\njs\n(function () {\nconsole.log(\"Chirp, chirp!\");\n})();\nThis is an anonymous function expression that executes right away, and outputs Chirp, chirp! immediately.\nNote that the function has no name and is not stored in a variable. The two parentheses () at the end of the function expression cause it to be immediately executed or invoked. This pattern is known as an immediately invoked function expression or IIFE.\n--instructions--\nRewrite the function makeNest and remove its call so instead it's an anonymous immediately invoked function expression (IIFE).\n--hints--\nThe function should be anonymous.\njs\nassert(/\\((function|\\(\\))(=>|\\(\\)){?/.test(__helpers.removeJSComments(code).replace(/\\s/g, '')));\nYour function should have parentheses at the end of the expression to call it immediately.\njs\nassert(/\\(.*(\\)\\(|\\}\\(\\))\\)/.test(__helpers.removeJSComments(code).replace(/[\\s;]/g, '')));\n--seed--\n--seed-contents--\n```js\nfunction makeNest() {\nconsole.log(\"A cozy nest is ready\");\n}\nmakeNest();\n```\n--solutions--\njs\n(function () {\nconsole.log(\"A cozy nest is ready\");\n})();\njs\n(function () {\nconsole.log(\"A cozy nest is ready\");\n}());\njs\n(() => {\nconsole.log(\"A cozy nest is ready\");\n})();\njs\n(() =>\nconsole.log(\"A cozy nest is ready\")\n)();",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-the-immediately-invoked-function-expression-iife.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a0cbf7467e4237ca634e8c34062e7341",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-the-constructor-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7daf367417b2b2512b7e\ntitle: Understand the Constructor Property\nchallengeType: 1\nforumTopicId: 301327\ndashedName: understand-the-constructor-property\n--description--\nThere is a special constructor property located on the object instances duck and beagle that were created in the previous challenges:\n```js\nlet duck = new Bird();\nlet beagle = new Dog();\nconsole.log(duck.constructor === Bird);\nconsole.log(beagle.constructor === Dog);\n```\nBoth of these console.log calls would display true in the console.\nNote that the constructor property is a reference to the constructor function that created the instance. The advantage of the constructor property is that it's possible to check for this property to find out what kind of object it is. Here's an example of how this could be used:\njs\nfunction joinBirdFraternity(candidate) {\nif (candidate.constructor === Bird) {\nreturn true;\n} else {\nreturn false;\n}\n}\nNote: Since the constructor property can be overwritten (which will be covered in the next two challenges) it’s generally better to use the instanceof method to check the type of an object.\n--instructions--\nWrite a joinDogFraternity function that takes a candidate parameter and, using the constructor property, return true if the candidate is a Dog, otherwise return false.\n--hints--\njoinDogFraternity should be defined as a function.\njs\nassert(typeof joinDogFraternity === 'function');\njoinDogFraternity should return true if candidate is an instance of Dog.\njs\nassert(joinDogFraternity(new Dog('')) === true);\njoinDogFraternity should use the constructor property.\njs\nassert(/\\.constructor/.test(__helpers.removeJSComments(code)) && !/instanceof/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction Dog(name) {\nthis.name = name;\n}\n// Only change code below this line\nfunction joinDogFraternity(candidate) {\n}\n```\n--solutions--\njs\nfunction Dog(name) {\nthis.name = name;\n}\nfunction joinDogFraternity(candidate) {\nreturn candidate.constructor === Dog;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-the-constructor-property.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f9b27c63ca72bf39f8636364baae2d7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-the-prototype-chain.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db0367417b2b2512b82\ntitle: Understand the Prototype Chain\nchallengeType: 1\nforumTopicId: 301329\ndashedName: understand-the-prototype-chain\n--description--\nAll objects in JavaScript (with a few exceptions) have a prototype. Also, an object’s prototype itself is an object.\n```js\nfunction Bird(name) {\nthis.name = name;\n}\ntypeof Bird.prototype;\n```\nBecause a prototype is an object, a prototype can have its own prototype! In this case, the prototype of Bird.prototype is Object.prototype:\njs\nObject.prototype.isPrototypeOf(Bird.prototype);\nHow is this useful? You may recall the hasOwnProperty method from a previous challenge:\njs\nlet duck = new Bird(\"Donald\");\nduck.hasOwnProperty(\"name\");\nThe hasOwnProperty method is defined in Object.prototype, which can be accessed by Bird.prototype, which can then be accessed by duck. This is an example of the prototype chain. In this prototype chain, Bird is the supertype for duck, while duck is the subtype. Object is a supertype for both Bird and duck. Object is a supertype for all objects in JavaScript. Therefore, any object can use the hasOwnProperty method.\n--instructions--\nModify the code to show the correct prototype chain.\n--hints--\nYour code should show that Object.prototype is the prototype of Dog.prototype\njs\nassert(/Object\\.prototype\\.isPrototypeOf/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction Dog(name) {\nthis.name = name;\n}\nlet beagle = new Dog(\"Snoopy\");\nDog.prototype.isPrototypeOf(beagle);  // yields true\n// Fix the code below so that it evaluates to true\n???.isPrototypeOf(Dog.prototype);\n```\n--solutions--\njs\nfunction Dog(name) {\nthis.name = name;\n}\nlet beagle = new Dog(\"Snoopy\");\nDog.prototype.isPrototypeOf(beagle);\nObject.prototype.isPrototypeOf(Dog.prototype);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1920,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-the-prototype-chain.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5478f0ad9e36c980051c6581d41b6aa2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-where-an-objects-prototype-comes-from.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db0367417b2b2512b81\ntitle: Understand Where an Object’s Prototype Comes From\nchallengeType: 1\nforumTopicId: 301330\ndashedName: understand-where-an-objects-prototype-comes-from\n--description--\nJust like people inherit genes from their parents, an object inherits its prototype directly from the constructor function that created it. For example, here the Bird constructor creates the duck object:\n```js\nfunction Bird(name) {\nthis.name = name;\n}\nlet duck = new Bird(\"Donald\");\n```\nduck inherits its prototype from the Bird constructor function. You can show this relationship with the isPrototypeOf method:\njs\nBird.prototype.isPrototypeOf(duck);\nThis would return true.\n--instructions--\nUse isPrototypeOf to check the prototype of beagle.\n--hints--\nYou should show that Dog.prototype is the prototype of beagle\njs\nassert(/Dog\\.prototype\\.isPrototypeOf\\(beagle\\)/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction Dog(name) {\nthis.name = name;\n}\nlet beagle = new Dog(\"Snoopy\");\n// Only change code below this line\n```\n--solutions--\njs\nfunction Dog(name) {\nthis.name = name;\n}\nlet beagle = new Dog(\"Snoopy\");\nDog.prototype.isPrototypeOf(beagle);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1281,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-where-an-objects-prototype-comes-from.md",
      "source_type": "git_repo"
    },
    "token_count": 288,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8314148d8c988c9d099e344e3c0fe499",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\override-inherited-methods.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db1367417b2b2512b88\ntitle: Override Inherited Methods\nchallengeType: 1\nforumTopicId: 301322\ndashedName: override-inherited-methods\n--description--\nIn previous lessons, you learned that an object can inherit its behavior (methods) from another object by referencing its prototype object:\njs\nChildObject prototype = Object create(ParentObject prototype);\nThen the ChildObject received its own methods by chaining them onto its prototype:\njs\nChildObject prototype methodName = function() { };\nIt's possible to override an inherited method It's done the same way - by adding a method to ChildObject prototype using the same method name as the one to override Here's an example of Bird overriding the eat() method inherited from Animal:\n```js\nfunction Animal() { }\nAnimal prototype eat = function() {\nreturn \"nom nom nom\";\n};\nfunction Bird() { }\nBird prototype = Object create(Animal prototype);\nBird prototype eat = function() {\nreturn \"peck peck peck\";\n};\n```\nIf you have an instance let duck = new Bird(); and you call duck eat(), this is how JavaScript looks for the method on the prototype chain of duck:\nduck => Is eat() defined here No Bird => Is eat() defined here => Yes Execute it and stop searching Animal => eat() is also defined, but JavaScript stopped searching before reaching this level Object => JavaScript stopped searching before reaching this level --instructions--\nOverride the fly() method for Penguin so that it returns the string Alas, this is a flightless bird --hints--\npenguin fly() should return the string Alas, this is a flightless bird js\nassert(penguin fly() === 'Alas, this is a flightless bird ');\nThe bird fly() method should return the string I am flying js\nassert(new Bird() fly() === 'I am flying ');\n--seed--\n--seed-contents--\n```js\nfunction Bird() { }\nBird prototype fly = function() { return \"I am flying \"; };\nfunction Penguin() { }\nPenguin prototype = Object create(Bird prototype);\nPenguin prototype constructor = Penguin;\n// Only change code below this line\n// Only change code above this line\nlet penguin = new Penguin();\nconsole log(penguin fly());\n```\n--solutions--\n```js\nfunction Bird() { }\nBird prototype fly = function() { return \"I am flying",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2609,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\override-inherited-methods.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "914b072d5c194293cd73a8c1da5ffb01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\override-inherited-methods.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "am flying '); --seed-- --seed-contents-- ```js function Bird() { } Bird prototype fly = function() { return \"I am flying \"; }; function Penguin() { } Penguin prototype = Object create(Bird prototype); Penguin prototype constructor = Penguin; // Only change code below this line // Only change code above this line let penguin = new Penguin(); console log(penguin fly()); ``` --solutions-- ```js function Bird() { } Bird prototype fly = function() { return \"I am flying\"; };\nfunction Penguin() { }\nPenguin prototype = Object create(Bird prototype);\nPenguin prototype constructor = Penguin;\nPenguin prototype fly = () => 'Alas, this is a flightless bird ';\nlet penguin = new Penguin();\nconsole log(penguin fly());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2609,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\override-inherited-methods.md",
      "source_type": "git_repo"
    },
    "token_count": 159,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5208bb8f9ee7300d88435a18ccc1a3c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-a-constructor-to-create-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dad367417b2b2512b78\ntitle: Use a Constructor to Create Objects\nchallengeType: 1\nforumTopicId: 18233\ndashedName: use-a-constructor-to-create-objects\n--description--\nHere's the Bird constructor from the previous challenge:\n```js\nfunction Bird() {\nthis.name = \"Albert\";\nthis.color  = \"blue\";\nthis.numLegs = 2;\n}\nlet blueBird = new Bird();\n```\nNOTE: this inside the constructor always refers to the object being created.\nNotice that the new operator is used when calling a constructor. This tells JavaScript to create a new instance of Bird called blueBird. Without the new operator, this inside the constructor would not point to the newly created object, giving unexpected results. Now blueBird has all the properties defined inside the Bird constructor:\njs\nblueBird.name;\nblueBird.color;\nblueBird.numLegs;\nJust like any other object, its properties can be accessed and modified:\njs\nblueBird.name = 'Elvira';\nblueBird.name;\n--instructions--\nUse the Dog constructor from the last lesson to create a new instance of Dog, assigning it to a variable hound.\n--hints--\nhound should be created using the Dog constructor.\njs\nassert(hound instanceof Dog);\nYour code should use the new operator to create an instance of Dog.\njs\nassert(__helpers.removeJSComments(code).match(/new/g));\n--seed--\n--seed-contents--\njs\nfunction Dog() {\nthis.name = \"Rupert\";\nthis.color = \"brown\";\nthis.numLegs = 4;\n}\n// Only change code below this line\n--solutions--\njs\nfunction Dog() {\nthis.name = \"Rupert\";\nthis.color = \"brown\";\nthis.numLegs = 4;\n}\nconst hound = new Dog();",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-a-constructor-to-create-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1b221b193243ce48e864cf3023850b0c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-own-properties.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dae367417b2b2512b7b\ntitle: Understand Own Properties\nchallengeType: 1\nforumTopicId: 301326\ndashedName: understand-own-properties\n--description--\nIn the following example, the Bird constructor defines two properties: name and numLegs:\n```js\nfunction Bird(name) {\nthis name = name;\nthis numLegs = 2;\n}\nlet duck = new Bird(\"Donald\");\nlet canary = new Bird(\"Tweety\");\n```\nname and numLegs are called own properties, because they are defined directly on the instance object That means that duck and canary each has its own separate copy of these properties In fact every instance of Bird will have its own copy of these properties The following code adds all of the own properties of duck to the array ownProps:\n```js\nlet ownProps = [];\nfor (let property in duck) {\nif(duck hasOwnProperty(property)) {\nownProps push(property);\n}\n}\nconsole log(ownProps);\n```\nThe console would display the value [\"name\", \"numLegs\"] --instructions--\nAdd the own properties of canary to the array ownProps --hints--\nownProps should include the values numLegs and name js\nassert(ownProps indexOf('name') == -1 && ownProps indexOf('numLegs') == -1);\nYou should solve this challenge without using the built in method Object keys() js\nassert( /Object(\\ keys|\\[(['\"`])keys\\2\\])/ test(__helpers removeJSComments(code)));\nYou should solve this challenge without hardcoding the ownProps array js\nassert( /\\[\\s*( :'|\")( :name|numLegs)|( :push|concat)\\(\\s*( :'|\")( :name|numLegs)/ test(\n__helpers removeJSComments(code)\n)\n);\n--seed--\n--seed-contents--\n```js\nfunction Bird(name) {\nthis name = name;\nthis numLegs = 2;\n}\nlet canary = new Bird(\"Tweety\");\nlet ownProps = [];\n// Only change code below this line\n```\n--solutions--\n```js\nfunction Bird(name) {\nthis name = name;\nthis numLegs = 2;\n}\nlet canary = new Bird(\"Tweety\");\nfunction getOwnProps (obj) {\nconst props = [];\nfor (let prop in obj) {\nif (obj",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2158,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-own-properties.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "097a891e8e71c9933b6dc80fadbf4c9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-own-properties.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": ":name|numLegs)|( :push|concat)\\(\\s*( :'|\")( :name|numLegs)/ test( __helpers removeJSComments(code) ) ); --seed-- --seed-contents-- ```js function Bird(name) { this name = name; this numLegs = 2; } let canary = new Bird(\"Tweety\"); let ownProps = []; // Only change code below this line ``` --solutions-- ```js function Bird(name) { this name = name; this numLegs = 2; } let canary = new Bird(\"Tweety\"); function getOwnProps (obj) { const props = []; for (let prop in obj) { if (objhasOwnProperty(prop)) {\nprops push(prop);\n}\n}\nreturn props;\n}\nconst ownProps = getOwnProps(canary);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2158,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\understand-own-properties.md",
      "source_type": "git_repo"
    },
    "token_count": 173,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "281b163286f1aeec49077ccad2f38d69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-dot-notation-to-access-the-properties-of-an-object.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dac367417b2b2512b74\ntitle: Use Dot Notation to Access the Properties of an Object\nchallengeType: 1\nforumTopicId: 301333\ndashedName: use-dot-notation-to-access-the-properties-of-an-object\n--description--\nThe last challenge created an object with various properties. Now you'll see how to access the values of those properties. Here's an example:\njs\nlet duck = {\nname: \"Aflac\",\nnumLegs: 2\n};\nconsole.log(duck.name);\nDot notation is used on the object name, duck, followed by the name of the property, name, to access the value of Aflac.\n--instructions--\nPrint both properties of the dog object to your console.\n--hints--\nYour code should use console.log to print the value for the name property of the dog object.\njs\nassert(/console.log\\(.*dog\\.name.*\\)/g.test(__helpers.removeJSComments(code)));\nYour code should use console.log to print the value for the numLegs property of the dog object.\njs\nassert(/console.log\\(.*dog\\.numLegs.*\\)/g.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\njs\nlet dog = {\nname: \"Spot\",\nnumLegs: 4\n};\n// Only change code below this line\n--solutions--\njs\nlet dog = {\nname: \"Spot\",\nnumLegs: 4\n};\nconsole.log(dog.name);\nconsole.log(dog.numLegs);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1302,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-dot-notation-to-access-the-properties-of-an-object.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d9854643f45b25729278cdc71057a21f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-prototype-properties-to-reduce-duplicate-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dae367417b2b2512b7c\ntitle: Use Prototype Properties to Reduce Duplicate Code\nchallengeType: 1\nforumTopicId: 301336\ndashedName: use-prototype-properties-to-reduce-duplicate-code\n--description--\nSince numLegs will probably have the same value for all instances of Bird, you essentially have a duplicated variable numLegs inside each Bird instance.\nThis may not be an issue when there are only two instances, but imagine if there are millions of instances. That would be a lot of duplicated variables.\nA better way is to use the prototype of Bird. Properties in the prototype are shared among ALL instances of Bird. Here's how to add numLegs to the Bird prototype:\njs\nBird.prototype.numLegs = 2;\nNow all instances of Bird have the numLegs property.\njs\nconsole.log(duck.numLegs);\nconsole.log(canary.numLegs);\nSince all instances automatically have the properties on the prototype, think of a prototype as a \"recipe\" for creating objects. Note that the prototype for duck and canary is part of the Bird constructor as Bird.prototype.\n--instructions--\nAdd a numLegs property to the prototype of Dog\n--hints--\nbeagle should have a numLegs property.\njs\nassert(beagle.numLegs !== undefined);\nbeagle.numLegs should be a number.\njs\nassert(typeof beagle.numLegs === 'number');\nnumLegs should be a prototype property not an own property.\njs\nassert(beagle.hasOwnProperty('numLegs') === false);\n--seed--\n--seed-contents--\n```js\nfunction Dog(name) {\nthis.name = name;\n}\n// Only change code above this line\nlet beagle = new Dog(\"Snoopy\");\n```\n--solutions--\njs\nfunction Dog (name) {\nthis.name = name;\n}\nDog.prototype.numLegs = 4;\nlet beagle = new Dog(\"Snoopy\");",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1799,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-prototype-properties-to-reduce-duplicate-code.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ae45f06e56628b5128cc3ebfed40e5fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-an-iife-to-create-a-module.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db2367417b2b2512b8c\ntitle: Use an IIFE to Create a Module\nchallengeType: 1\nforumTopicId: 301332\ndashedName: use-an-iife-to-create-a-module\n--description--\nAn immediately invoked function expression (IIFE) is often used to group related functionality into a single object or module For example, an earlier challenge defined two mixins:\njs\nfunction glideMixin(obj) {\nobj glide = function() {\nconsole log(\"Gliding on the water\");\n};\n}\nfunction flyMixin(obj) {\nobj fly = function() {\nconsole log(\"Flying, wooosh \");\n};\n}\nWe can group these mixins into a module as follows:\njs\nlet motionModule = (function () {\nreturn {\nglideMixin: function(obj) {\nobj glide = function() {\nconsole log(\"Gliding on the water\");\n};\n},\nflyMixin: function(obj) {\nobj fly = function() {\nconsole log(\"Flying, wooosh \");\n};\n}\n}\n})();\nNote that you have an immediately invoked function expression (IIFE) that returns an object motionModule This returned object contains all of the mixin behaviors as properties of the object The advantage of the module pattern is that all of the motion behaviors can be packaged into a single object that can then be used by other parts of your code Here is an example using it:\njs\nmotionModule glideMixin(duck);\nduck glide();\n--instructions--\nCreate a module named funModule to wrap the two mixins isCuteMixin and singMixin funModule should return an object --hints--\nfunModule should be defined and return an object js\nassert(typeof funModule === 'object');\nfunModule isCuteMixin should access a function js\nassert(typeof funModule isCuteMixin === 'function');\nfunModule singMixin should access a function js\nassert(typeof funModule singMixin === 'function');\n--seed--\n--seed-contents--\njs\nlet isCuteMixin = function(obj) {\nobj isCute = function() {\nreturn true;\n};\n};\nlet singMixin = function(obj) {\nobj sing = function() {\nconsole log(\"Singing to an awesome tune\");\n};\n};\n--solutions--\njs\nconst funModule = (function () {\nreturn {\nisCuteMixin: obj => {\nobj isCute = () => true;\n},\nsingMixin: obj => {\nobj sing = () => console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-an-iife-to-create-a-module.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3adabd474bdeb320e9a1b57a1d48ad07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-an-iife-to-create-a-module.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should access a function js assert(typeof funModule singMixin === 'function'); --seed-- --seed-contents-- js let isCuteMixin = function(obj) { obj isCute = function() { return true; }; }; let singMixin = function(obj) { obj sing = function() { console log(\"Singing to an awesome tune\"); }; }; --solutions-- js const funModule = (function () { return { isCuteMixin: obj => { obj isCute = () => true; }, singMixin: obj => { obj sing = () => consolelog(\"Singing to an awesome tune\");\n}\n};\n})();",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-an-iife-to-create-a-module.md",
      "source_type": "git_repo"
    },
    "token_count": 130,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7c3a674b121b544a4f75c6414a8d5e5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-a-mixin-to-add-common-behavior-between-unrelated-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db2367417b2b2512b89\ntitle: Use a Mixin to Add Common Behavior Between Unrelated Objects\nchallengeType: 1\nforumTopicId: 301331\ndashedName: use-a-mixin-to-add-common-behavior-between-unrelated-objects\n--description--\nAs you have seen, behavior is shared through inheritance However, there are cases when inheritance is not the best solution Inheritance does not work well for unrelated objects like Bird and Airplane They can both fly, but a Bird is not a type of Airplane and vice versa For unrelated objects, it's better to use mixins A mixin allows other objects to use a collection of functions js\nlet flyMixin = function(obj) {\nobj fly = function() {\nconsole log(\"Flying, wooosh \");\n}\n};\nThe flyMixin takes any object and gives it the fly method ```js\nlet bird = {\nname: \"Donald\",\nnumLegs: 2\n};\nlet plane = {\nmodel: \"777\",\nnumPassengers: 524\n};\nflyMixin(bird);\nflyMixin(plane);\n```\nHere bird and plane are passed into flyMixin, which then assigns the fly function to each object Now bird and plane can both fly:\njs\nbird fly();\nplane fly();\nThe console would display the string Flying, wooosh twice, once for each fly() call Note how the mixin allows for the same fly method to be reused by unrelated objects bird and plane --instructions--\nCreate a mixin named glideMixin that defines a method named glide Then use the glideMixin to give both bird and boat the ability to glide --hints--\nYour code should declare a glideMixin variable that is a function js\nassert(typeof glideMixin === 'function');\nYour code should use the glideMixin on the bird object to give it the glide method js\nassert(typeof bird glide === 'function');\nYour code should use the glideMixin on the boat object to give it the glide method js\nassert(typeof boat",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2354,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-a-mixin-to-add-common-behavior-between-unrelated-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d1418d8398940e8ed6f3a5a7e0068026",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-a-mixin-to-add-common-behavior-between-unrelated-objects.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a method named glide Then use the glideMixin to give both bird and boat the ability to glide --hints-- Your code should declare a glideMixin variable that is a function js assert(typeof glideMixin === 'function'); Your code should use the glideMixin on the bird object to give it the glide method js assert(typeof bird glide === 'function'); Your code should use the glideMixin on the boat object to give it the glide method js assert(typeof boatglide === 'function');\n--seed--\n--seed-contents--\n```js\nlet bird = {\nname: \"Donald\",\nnumLegs: 2\n};\nlet boat = {\nname: \"Warrior\",\ntype: \"race-boat\"\n};\n// Only change code below this line\n```\n--solutions--\n```js\nlet bird = {\nname: \"Donald\",\nnumLegs: 2\n};\nlet boat = {\nname: \"Warrior\",\ntype: \"race-boat\"\n};\nfunction glideMixin (obj) {\nobj glide = () => 'Gliding ';\n}\nglideMixin(bird);\nglideMixin(boat);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2354,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-a-mixin-to-add-common-behavior-between-unrelated-objects.md",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "72d8739730206cb6f1837c2de1006a7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\verify-an-objects-constructor-with-instanceof.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dae367417b2b2512b7a\ntitle: Verify an Object's Constructor with instanceof\nchallengeType: 1\nforumTopicId: 301337\ndashedName: verify-an-objects-constructor-with-instanceof\n--description--\nAnytime a constructor function creates a new object, that object is said to be an instance of its constructor. JavaScript gives a convenient way to verify this with the instanceof operator. instanceof allows you to compare an object to a constructor, returning true or false based on whether or not that object was created with the constructor. Here's an example:\n```js\nlet Bird = function(name, color) {\nthis.name = name;\nthis.color = color;\nthis.numLegs = 2;\n}\nlet crow = new Bird(\"Alexis\", \"black\");\ncrow instanceof Bird;\n```\nThis instanceof method would return true.\nIf an object is created without using a constructor, instanceof will verify that it is not an instance of that constructor:\n```js\nlet canary = {\nname: \"Mildred\",\ncolor: \"Yellow\",\nnumLegs: 2\n};\ncanary instanceof Bird;\n```\nThis instanceof method would return false.\n--instructions--\nCreate a new instance of the House constructor, calling it myHouse and passing a number of bedrooms. Then, use instanceof to verify that it is an instance of House.\n--hints--\nmyHouse should have a numBedrooms attribute set to a number.\njs\nassert(typeof myHouse.numBedrooms === 'number');\nYou should verify that myHouse is an instance of House using the instanceof operator.\njs\nassert(/myHouse\\s*instanceof\\s*House/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\n```js\nfunction House(numBedrooms) {\nthis.numBedrooms = numBedrooms;\n}\n// Only change code below this line\n```\n--solutions--\njs\nfunction House(numBedrooms) {\nthis.numBedrooms = numBedrooms;\n}\nconst myHouse = new House(4);\nconsole.log(myHouse instanceof House);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\verify-an-objects-constructor-with-instanceof.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9ce74d71448e608a812bea2cbd9abddf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\check-for-all-or-none.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dba367417b2b2512ba8\ntitle: Check for All or None\nchallengeType: 1\nforumTopicId: 301338\ndashedName: check-for-all-or-none\n--description--\nSometimes the patterns you want to search for may have parts of it that may or may not exist. However, it may be important to check for them nonetheless.\nYou can specify the possible existence of an element with a question mark, ?. This checks for zero or one of the preceding element. You can think of this symbol as saying the previous element is optional.\nFor example, there are slight differences in American and British English and you can use the question mark to match both spellings.\njs\nlet american = \"color\";\nlet british = \"colour\";\nlet rainbowRegex= /colou?r/;\nrainbowRegex.test(american);\nrainbowRegex.test(british);\nBoth uses of the test method would return true.\n--instructions--\nChange the regex favRegex to match both the American English (favorite) and the British English (favourite) version of the word.\n--hints--\nYour regex should use the optional symbol, ?.\njs\nfavRegex.lastIndex = 0;\nassert(favRegex.source.match(/\\?/).length > 0);\nYour regex should match the string favorite\njs\nfavRegex.lastIndex = 0;\nassert(favRegex.test('favorite'));\nYour regex should match the string favourite\njs\nfavRegex.lastIndex = 0;\nassert(favRegex.test('favourite'));\nYour regex should not match the string fav\njs\nfavRegex.lastIndex = 0;\nassert(!favRegex.test('fav'));\n--seed--\n--seed-contents--\njs\nlet favWord = \"favorite\";\nlet favRegex = /change/; // Change this line\nlet result = favRegex.test(favWord);\n--solutions--\njs\nlet favWord = \"favorite\";\nlet favRegex = /favou?r/;\nlet result = favRegex.test(favWord);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1771,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\check-for-all-or-none.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b5aa177f12debf618a5bccdae2762d99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\extract-matches.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db4367417b2b2512b92\ntitle: Extract Matches\nchallengeType: 1\nforumTopicId: 301340\ndashedName: extract-matches\n--description--\nSo far, you have only been checking if a pattern exists or not within a string. You can also extract the actual matches you found with the .match() method.\nTo use the .match() method, apply the method on a string and pass in the regex inside the parentheses.\nHere's an example:\njs\n\"Hello, World!\".match(/Hello/);\nlet ourStr = \"Regular expressions\";\nlet ourRegex = /expressions/;\nourStr.match(ourRegex);\nHere the first match would return [\"Hello\"] and the second would return [\"expressions\"].\nNote that the .match syntax is the \"opposite\" of the .test method you have been using thus far:\njs\n'string'.match(/regex/);\n/regex/.test('string');\n--instructions--\nApply the .match() method to extract the string coding.\n--hints--\nThe result should have the string coding\njs\nassert(result.join() === 'coding');\nYour regex codingRegex should search for the string coding\njs\nassert(codingRegex.source === 'coding');\nYou should use the .match() method.\njs\nassert(__helpers.removeJSComments(code).match(/\\.match\\(.*\\)/));\n--seed--\n--seed-contents--\njs\nlet extractStr = \"Extract the word 'coding' from this string.\";\nlet codingRegex = /change/; // Change this line\nlet result = extractStr; // Change this line\n--solutions--\njs\nlet extractStr = \"Extract the word 'coding' from this string.\";\nlet codingRegex = /coding/; // Change this line\nlet result = extractStr.match(codingRegex); // Change this line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1644,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\extract-matches.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1a7d12d1975a8e2386cee34ef9a1a8da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-more-than-the-first-match.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db4367417b2b2512b93\ntitle: Find More Than the First Match\nchallengeType: 1\nforumTopicId: 301342\ndashedName: find-more-than-the-first-match\n--description--\nSo far, you have only been able to extract or search a pattern once.\njs\nlet testStr = \"Repeat, Repeat, Repeat\";\nlet ourRegex = /Repeat/;\ntestStr.match(ourRegex);\nHere match would return [\"Repeat\"].\nTo search or extract a pattern more than once, you can use the global search flag: g.\njs\nlet repeatRegex = /Repeat/g;\ntestStr.match(repeatRegex);\nAnd here match returns the value [\"Repeat\", \"Repeat\", \"Repeat\"]\n--instructions--\nUsing the regex starRegex, find and extract both Twinkle words from the string twinkleStar.\nNote\nYou can have multiple flags on your regex like /search/gi\n--hints--\nYour regex starRegex should use the global flag g\njs\nassert(starRegex.flags.match(/g/).length == 1);\nYour regex starRegex should use the case insensitive flag i\njs\nassert(starRegex.flags.match(/i/).length == 1);\nYour match should match both occurrences of the word Twinkle\njs\nassert(\nresult.sort().join() ==\ntwinkleStar\n.match(/twinkle/gi)\n.sort()\n.join()\n);\nYour match result should have two elements in it.\njs\nassert(result.length == 2);\n--seed--\n--seed-contents--\njs\nlet twinkleStar = \"Twinkle, twinkle, little star\";\nlet starRegex = /change/; // Change this line\nlet result = twinkleStar; // Change this line\n--solutions--\njs\nlet twinkleStar = \"Twinkle, twinkle, little star\";\nlet starRegex = /twinkle/gi;\nlet result = twinkleStar.match(starRegex);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1668,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-more-than-the-first-match.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "10b5cb37a8308053c55a1dba55f49305",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-characters-with-lazy-matching.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db6367417b2b2512b9b\ntitle: Find Characters with Lazy Matching\nchallengeType: 1\nforumTopicId: 301341\ndashedName: find-characters-with-lazy-matching\n--description--\nIn regular expressions, a greedy match finds the longest possible part of a string that fits the regex pattern and returns it as a match. The alternative is called a lazy match, which finds the smallest possible part of the string that satisfies the regex pattern.\nYou can apply the regex /t[a-z]*i/ to the string \"titanic\". This regex is basically a pattern that starts with t, ends with i, and has some letters in between.\nRegular expressions are by default greedy, so the match would return [\"titani\"]. It finds the largest sub-string possible to fit the pattern.\nHowever, you can use the ? character to change it to lazy matching. \"titanic\" matched against the adjusted regex of /t[a-z]*?i/ returns [\"ti\"].\nNote: Parsing HTML with regular expressions should be avoided, but pattern matching an HTML string with regular expressions is completely fine.\n--instructions--\nFix the regex /<.*>/ to return the HTML tag <h1> and not the text \"<h1>Winter is coming</h1>\". Remember the wildcard . in a regular expression matches any character.\n--hints--\nThe result variable should be an array with <h1> in it\njs\nassert(result[0] == '<h1>');\nmyRegex should use lazy matching\njs\nassert(/[^\\\\][\\*\\+\\?]\\?/.test(myRegex));\nmyRegex should not include the string h1\njs\nassert(!myRegex.source.match('h1'));\n--seed--\n--seed-contents--\njs\nlet text = \"<h1>Winter is coming</h1>\";\nlet myRegex = /<.*>/; // Change this line\nlet result = text.match(myRegex);\n--solutions--\njs\nlet text = \"<h1>Winter is coming</h1>\";\nlet myRegex = /<.*?>/; // Change this line\nlet result = text.match(myRegex);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1883,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-characters-with-lazy-matching.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "df06e97f5e7117b775a76bc5d7854860",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-inheritance-so-you-dont-repeat-yourself.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db0367417b2b2512b83\ntitle: Use Inheritance So You Don't Repeat Yourself\nchallengeType: 1\nforumTopicId: 301334\ndashedName: use-inheritance-so-you-dont-repeat-yourself\n--description--\nThere's a principle in programming called Don't Repeat Yourself (DRY) The reason repeated code is a problem is because any change requires fixing code in multiple places This usually means more work for programmers and more room for errors Notice in the example below that the describe method is shared by Bird and Dog:\n```js\nBird prototype = {\nconstructor: Bird,\ndescribe: function() {\nconsole log(\"My name is \" + this name);\n}\n};\nDog prototype = {\nconstructor: Dog,\ndescribe: function() {\nconsole log(\"My name is \" + this name);\n}\n};\n```\nThe describe method is repeated in two places The code can be edited to follow the DRY principle by creating a supertype (or parent) called Animal:\n```js\nfunction Animal() { };\nAnimal prototype = {\nconstructor: Animal,\ndescribe: function() {\nconsole log(\"My name is \" + this name);\n}\n};\n```\nSince Animal includes the describe method, you can remove it from Bird and Dog:\n```js\nBird prototype = {\nconstructor: Bird\n};\nDog prototype = {\nconstructor: Dog\n};\n```\n--instructions--\nThe eat method is repeated in both Cat and Bear Edit the code in the spirit of DRY by moving the eat method to the Animal supertype --hints--\nAnimal prototype should have the eat property js\nassert(Animal prototype hasOwnProperty('eat'));\nBear prototype should not have the eat property js\nassert( Bear prototype hasOwnProperty('eat'));\nCat prototype should not have the eat property js\nassert( Cat prototype hasOwnProperty('eat'));\n--seed--\n--seed-contents--\n```js\nfunction Cat(name) {\nthis name = name;\n}\nCat prototype = {\nconstructor: Cat,\neat: function() {\nconsole log(\"nom nom nom\");\n}\n};\nfunction Bear(name) {\nthis name = name;\n}\nBear prototype = {\nconstructor: Bear,\neat: function() {\nconsole log(\"nom nom nom\");\n}\n};\nfunction Animal() { }\nAnimal prototype = {\nconstructor: Animal,\n};\n```\n--solutions--\n```js\nfunction Cat(name) {\nthis name = name;\n}\nCat",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2524,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-inheritance-so-you-dont-repeat-yourself.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c146760c422acbf278383d66ad481f51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-inheritance-so-you-dont-repeat-yourself.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert( Cat prototype hasOwnProperty('eat')); --seed-- --seed-contents-- ```js function Cat(name) { this name = name; } Cat prototype = { constructor: Cat, eat: function() { console log(\"nom nom nom\"); } }; function Bear(name) { this name = name; } Bear prototype = { constructor: Bear, eat: function() { console log(\"nom nom nom\"); } }; function Animal() { } Animal prototype = { constructor: Animal, }; ``` --solutions-- ```js function Cat(name) { this name = name; } Catprototype = {\nconstructor: Cat\n};\nfunction Bear(name) {\nthis name = name;\n}\nBear prototype = {\nconstructor: Bear\n};\nfunction Animal() { }\nAnimal prototype = {\nconstructor: Animal,\neat: function() {\nconsole log(\"nom nom nom\");\n}\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2524,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\object-oriented-programming\\use-inheritance-so-you-dont-repeat-yourself.md",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "07e97ec69b620902284f0cdd142d136d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\check-for-mixed-grouping-of-characters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5c3dda8b4d8df89bea71600f\ntitle: Check For Mixed Grouping of Characters\nchallengeType: 1\nforumTopicId: 301339\ndashedName: check-for-mixed-grouping-of-characters\n--description--\nSometimes we want to check for groups of characters using a Regular Expression and to achieve that we use parentheses () If you want to find either Penguin or Pumpkin in a string, you can use the following Regular Expression: /P(engu|umpk)in/g\nThen check whether the desired string groups are in the test string by using the test() method js\nlet testStr = \"Pumpkin\";\nlet testRegex = /P(engu|umpk)in/;\ntestRegex test(testStr);\nThe test method here would return true --instructions--\nFix the regex so that it checks for the names of Franklin Roosevelt or Eleanor Roosevelt in a case sensitive manner and it should make concessions for middle names Then fix the code so that the regex that you have created is checked against myString and either true or false is returned depending on whether the regex matches --hints--\nYour regex myRegex should return true for the string Franklin D Roosevelt\njs\nmyRegex lastIndex = 0;\nassert(myRegex test('Franklin D Roosevelt'));\nYour regex myRegex should return true for the string Eleanor Roosevelt\njs\nmyRegex lastIndex = 0;\nassert(myRegex test('Eleanor Roosevelt'));\nYour regex myRegex should return false for the string Franklin Rosevelt\njs\nmyRegex lastIndex = 0;\nassert( myRegex test('Franklin Rosevelt'));\nYour regex myRegex should return false for the string Frank Roosevelt\njs\nmyRegex lastIndex = 0;\nassert( myRegex test('Frank Roosevelt'));\nYour regex myRegex should return false for the string FranklinRoosevelt\njs\nmyRegex lastIndex = 0;\nassert( myRegex test('FranklinRoosevelt'));\nYour regex myRegex should return false for the string EleanorRoosevelt\njs\nmyRegex lastIndex = 0;\nassert( myRegex test('EleanorRoosevelt'));\nYou should use test() to test the regex js\nassert(__helpers removeJSComments(code) match(/myRegex test\\(\\s*myString\\s*\\)/));\nYour result should return true",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2631,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\check-for-mixed-grouping-of-characters.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2a4aaed2604c55c8afd6652627de8532",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\check-for-mixed-grouping-of-characters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "test('Franklin Rosevelt')); Your regex myRegex should return false for the string Frank Roosevelt js myRegex lastIndex = 0; assert( myRegex test('Frank Roosevelt')); Your regex myRegex should return false for the string FranklinRoosevelt js myRegex lastIndex = 0; assert( myRegex test('FranklinRoosevelt')); Your regex myRegex should return false for the string EleanorRoosevelt js myRegex lastIndex = 0; assert( myRegex test('EleanorRoosevelt')); You should use test() to test the regex js assert(__helpers removeJSComments(code) match(/myRegex test\\(\\s*myString\\s*\\)/)); Your result should return truejs\nassert(result === true);\n--seed--\n--seed-contents--\njs\nlet myString = \"Eleanor Roosevelt\";\nlet myRegex = /False/; // Change this line\nlet result = false; // Change this line\n// After passing the challenge experiment with myString and see how the grouping works\n--solutions--\njs\nlet myString = \"Eleanor Roosevelt\";\nlet myRegex = /(Franklin|Eleanor) (([A-Z]\\ |[A-Z][a-z]+) ) Roosevelt/;\nlet result = myRegex test(myString);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2631,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\check-for-mixed-grouping-of-characters.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "237bc6004ca8d3b5b43bd171d33a7999",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-one-or-more-criminals-in-a-hunt.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db7367417b2b2512b9c\ntitle: Find One or More Criminals in a Hunt\nchallengeType: 1\nforumTopicId: 301343\ndashedName: find-one-or-more-criminals-in-a-hunt\n--description--\nTime to pause and test your new regex writing skills A group of criminals escaped from jail and ran away, but you don't know how many However, you do know that they stay close together when they are around other people You are responsible for finding all of the criminals at once Here's an example to review how to do this:\nThe regex /z+/ matches the letter z when it appears one or more times in a row It would find matches in all of the following strings:\njs\n\"z\"\n\"zzzzzz\"\n\"ABCzzzz\"\n\"zzzzABC\"\n\"abczzzzzzzzzzzzzzzzzzzzzabc\"\nBut it does not find matches in the following strings since there are no letter z characters:\njs\n\"\"\n\"ABC\"\n\"abcabc\"\n--instructions--\nWrite a greedy regex that finds one or more criminals within a group of other people A criminal is represented by the capital letter C --hints--\nYour regex should match one criminal (C) in the string C\njs\nassert('C' match(reCriminals) && 'C' match(reCriminals)[0] == 'C');\nYour regex should match two criminals (CC) in the string CC\njs\nassert('CC' match(reCriminals) && 'CC' match(reCriminals)[0] == 'CC');\nYour regex should match three criminals (CCC) in the string P1P5P4CCCcP2P6P3 js\nassert(\n'P1P5P4CCCcP2P6P3' match(reCriminals) &&\n'P1P5P4CCCcP2P6P3' match(reCriminals)[0] == 'CCC'\n);\nYour regex should match five criminals (CCCCC) in the string P6P2P7P4P5CCCCCP3P1\njs\nassert(\n'P6P2P7P4P5CCCCCP3P1' match(reCriminals) &&\n'P6P2P7P4P5CCCCCP3P1'",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-one-or-more-criminals-in-a-hunt.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "993ead095f6e09a534abc5f48bd6cf63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-one-or-more-criminals-in-a-hunt.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Your regex should match one criminal (C) in the string C js assert('C' match(reCriminals) && 'C' match(reCriminals)[0] == 'C'); Your regex should match two criminals (CC) in the string CC js assert('CC' match(reCriminals) && 'CC' match(reCriminals)[0] == 'CC'); Your regex should match three criminals (CCC) in the string P1P5P4CCCcP2P6P3 js assert( 'P1P5P4CCCcP2P6P3' match(reCriminals) && 'P1P5P4CCCcP2P6P3' match(reCriminals)[0] == 'CCC' ); Your regex should match five criminals (CCCCC) in the string P6P2P7P4P5CCCCCP3P1 js assert( 'P6P2P7P4P5CCCCCP3P1' match(reCriminals) && 'P6P2P7P4P5CCCCCP3P1'match(reCriminals)[0] == 'CCCCC'\n);\nYour regex should not match any criminals in the empty string \"\"\njs\nreCriminals lastIndex = 0;\nassert( reCriminals test(''));\nYour regex should not match any criminals in the string P1P2P3\njs\nreCriminals lastIndex = 0;\nassert( reCriminals test('P1P2P3'));\nYour regex should match fifty criminals (CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC) in the string P2P1P5P4CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCP3 js\nassert(\n'P2P1P5P4CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCP3' match(\nreCriminals\n) &&\n'P2P1P5P4CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCP3' match(\nreCriminals\n)[0] == 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC'\n);\n--seed--\n--seed-contents--\njs\nlet reCriminals = / /; // Change this line\n--solutions--\njs\nlet reCriminals = /C+/; // Change this line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\find-one-or-more-criminals-in-a-hunt.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2aa23d5ac7dd92cb464daa96a46dd70f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\ignore-case-while-matching.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db4367417b2b2512b91\ntitle: Ignore Case While Matching\nchallengeType: 1\nforumTopicId: 301344\ndashedName: ignore-case-while-matching\n--description--\nUp until now, you've looked at regexes to do literal matches of strings But sometimes, you might want to also match case differences Case (or sometimes letter case) is the difference between uppercase letters and lowercase letters Examples of uppercase are A, B, and C Examples of lowercase are a, b, and c You can match both cases using what is called a flag There are other flags but here you'll focus on the flag that ignores case - the i flag You can use it by appending it to the regex An example of using this flag is /ignorecase/i This regex can match the strings ignorecase, igNoreCase, and IgnoreCase --instructions--\nWrite a regex fccRegex to match freeCodeCamp, no matter its case Your regex should not match any abbreviations or variations with spaces --hints--\nYour regex should match the string freeCodeCamp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex test('freeCodeCamp'));\nYour regex should match the string FreeCodeCamp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex test('FreeCodeCamp'));\nYour regex should match the string FreecodeCamp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex test('FreecodeCamp'));\nYour regex should match the string FreeCodecamp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex test('FreeCodecamp'));\nYour regex should not match the string Free Code Camp\njs\nfccRegex lastIndex = 0;\nassert( fccRegex test('Free Code Camp'));\nYour regex should match the string FreeCOdeCamp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex test('FreeCOdeCamp'));\nYour regex should not match the string FCC\njs\nfccRegex lastIndex = 0;\nassert( fccRegex test('FCC'));\nYour regex should match the string FrEeCoDeCamp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex test('FrEeCoDeCamp'));\nYour regex should match the string FrEeCodECamp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\ignore-case-while-matching.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "21433476224c2ac036e41d9ee34d05ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\ignore-case-while-matching.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "regex should not match the string Free Code Camp js fccRegex lastIndex = 0; assert( fccRegex test('Free Code Camp')); Your regex should match the string FreeCOdeCamp js fccRegex lastIndex = 0; assert(fccRegex test('FreeCOdeCamp')); Your regex should not match the string FCC js fccRegex lastIndex = 0; assert( fccRegex test('FCC')); Your regex should match the string FrEeCoDeCamp js fccRegex lastIndex = 0; assert(fccRegex test('FrEeCoDeCamp')); Your regex should match the string FrEeCodECamp js fccRegex lastIndex = 0; assert(fccRegextest('FrEeCodECamp'));\nYour regex should match the string FReeCodeCAmp\njs\nfccRegex lastIndex = 0;\nassert(fccRegex test('FReeCodeCAmp'));\n--seed--\n--seed-contents--\njs\nlet myString = \"freeCodeCamp\";\nlet fccRegex = /change/; // Change this line\nlet result = fccRegex test(myString);\n--solutions--\njs\nlet myString = \"freeCodeCamp\";\nlet fccRegex = /freecodecamp/i; // Change this line\nlet result = fccRegex test(myString);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\ignore-case-while-matching.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ea29d05bf5fbb118943744141a43c505",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-a-literal-string-with-different-possibilities.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db4367417b2b2512b90\ntitle: Match a Literal String with Different Possibilities\nchallengeType: 1\nforumTopicId: 301345\ndashedName: match-a-literal-string-with-different-possibilities\n--description--\nUsing regexes like /coding/, you can look for the pattern coding in another string This is powerful to search single strings, but it's limited to only one pattern You can search for multiple patterns using the alternation or OR operator: | This operator matches patterns either before or after it For example, if you wanted to match the strings yes or no, the regex you want is /yes|no/ You can also search for more than just two patterns You can do this by adding more patterns with more OR operators separating them, like /yes|no|maybe/ --instructions--\nComplete the regex petRegex to match the pets dog, cat, bird, or fish --hints--\nYour regex petRegex should return true for the string John has a pet dog js\npetRegex lastIndex = 0;\nassert(petRegex test('John has a pet dog '));\nYour regex petRegex should return false for the string Emma has a pet rock js\npetRegex lastIndex = 0;\nassert( petRegex test('Emma has a pet rock '));\nYour regex petRegex should return true for the string Emma has a pet bird js\npetRegex lastIndex = 0;\nassert(petRegex test('Emma has a pet bird '));\nYour regex petRegex should return true for the string Liz has a pet cat js\npetRegex lastIndex = 0;\nassert(petRegex test('Liz has a pet cat '));\nYour regex petRegex should return false for the string Kara has a pet dolphin js\npetRegex lastIndex = 0;\nassert( petRegex test('Kara has a pet dolphin '));\nYour regex petRegex should return true for the string Alice has a pet fish js\npetRegex lastIndex = 0;\nassert(petRegex test('Alice has a pet fish '));\nYour regex petRegex should return false for the string Jimmy has a pet computer js\npetRegex lastIndex = 0;\nassert( petRegex test('Jimmy has a pet computer '));\n--seed--\n--seed-contents--\njs\nlet petString = \"James has a pet cat \";\nlet petRegex = /change/; // Change this line\nlet result = petRegex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-a-literal-string-with-different-possibilities.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "091c4e3ca454ee4f9d9df6c5f1db8472",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-a-literal-string-with-different-possibilities.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "regex petRegex should return true for the string Alice has a pet fish js petRegex lastIndex = 0; assert(petRegex test('Alice has a pet fish ')); Your regex petRegex should return false for the string Jimmy has a pet computer js petRegex lastIndex = 0; assert( petRegex test('Jimmy has a pet computer ')); --seed-- --seed-contents-- js let petString = \"James has a pet cat \"; let petRegex = /change/; // Change this line let result = petRegextest(petString);\n--solutions--\njs\nlet petString = \"James has a pet cat \";\nlet petRegex = /dog|cat|bird|fish/; // Change this line\nlet result = petRegex test(petString);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-a-literal-string-with-different-possibilities.md",
      "source_type": "git_repo"
    },
    "token_count": 160,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5a5d28c9e58f4eac8c251c04e646afd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5d712346c441eddfaeb5bdef\ntitle: Match All Numbers\nchallengeType: 1\nforumTopicId: 18181\ndashedName: match-all-numbers\n--description--\nYou've learned shortcuts for common string patterns like alphanumerics. Another common pattern is looking for just digits or numbers.\nThe shortcut to look for digit characters is \\d, with a lowercase d. This is equal to the character class [0-9], which looks for a single character of any number between zero and nine.\n--instructions--\nUse the shorthand character class \\d to count how many digits are in movie titles. Written out numbers (\"six\" instead of 6) do not count.\n--hints--\nYour regex should use the shortcut character to match digit characters\njs\nassert(/\\\\d/.test(numRegex.source));\nYour regex should use the global flag.\njs\nassert(numRegex.global);\nYour regex should find 1 digit in the string 9.\njs\nassert('9'.match(numRegex).length == 1);\nYour regex should find 2 digits in the string Catch 22.\njs\nassert('Catch 22'.match(numRegex).length == 2);\nYour regex should find 3 digits in the string 101 Dalmatians.\njs\nassert('101 Dalmatians'.match(numRegex).length == 3);\nYour regex should find no digits in the string One, Two, Three.\njs\nassert('One, Two, Three'.match(numRegex) == null);\nYour regex should find 2 digits in the string 21 Jump Street.\njs\nassert('21 Jump Street'.match(numRegex).length == 2);\nYour regex should find 4 digits in the string 2001: A Space Odyssey.\njs\nassert('2001: A Space Odyssey'.match(numRegex).length == 4);\n--seed--\n--seed-contents--\njs\nlet movieName = \"2001: A Space Odyssey\";\nlet numRegex = /change/; // Change this line\nlet result = movieName.match(numRegex).length;\n--solutions--\njs\nlet movieName = \"2001: A Space Odyssey\";\nlet numRegex = /\\d/g; // Change this line\nlet result = movieName.match(numRegex).length;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1935,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94b9f8a206e18f28c5cffddc44e8de89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-beginning-string-patterns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db7367417b2b2512b9d\ntitle: Match Beginning String Patterns\nchallengeType: 1\nforumTopicId: 301349\ndashedName: match-beginning-string-patterns\n--description--\nPrior challenges showed that regular expressions can be used to look for a number of matches. They are also used to search for patterns in specific positions in strings.\nIn an earlier challenge, you used the caret character (^) inside a character set to create a negated character set in the form [^thingsThatWillNotBeMatched]. Outside of a character set, the caret is used to search for patterns at the beginning of strings.\njs\nlet firstString = \"Ricky is first and can be found.\";\nlet firstRegex = /^Ricky/;\nfirstRegex.test(firstString);\nlet notFirst = \"You can't find Ricky now.\";\nfirstRegex.test(notFirst);\nThe first test call would return true, while the second would return false.\n--instructions--\nUse the caret character in a regex to find Cal only in the beginning of the string rickyAndCal.\n--hints--\nYour regex should search for the string Cal with a capital letter.\njs\nassert(calRegex.source == '^Cal');\nYour regex should not use any flags.\njs\nassert(calRegex.flags == '');\nYour regex should match the string Cal at the beginning of the string.\njs\ncalRegex.lastIndex = 0;\nassert(calRegex.test('Cal and Ricky both like racing.'));\nYour regex should not match the string Cal in the middle of a string.\njs\ncalRegex.lastIndex = 0;\nassert(!calRegex.test('Ricky and Cal both like racing.'));\n--seed--\n--seed-contents--\njs\nlet rickyAndCal = \"Cal and Ricky both like racing.\";\nlet calRegex = /change/; // Change this line\nlet result = calRegex.test(rickyAndCal);\n--solutions--\njs\nlet rickyAndCal = \"Cal and Ricky both like racing.\";\nlet calRegex = /^Cal/; // Change this line\nlet result = calRegex.test(rickyAndCal);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-beginning-string-patterns.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ed652cb3c40c60bb7ee722a5da352add",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-non-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db8367417b2b2512ba1\ntitle: Match All Non-Numbers\nchallengeType: 1\nforumTopicId: 301347\ndashedName: match-all-non-numbers\n--description--\nThe last challenge showed how to search for digits using the shortcut \\d with a lowercase d You can also search for non-digits using a similar shortcut that uses an uppercase D instead The shortcut to look for non-digit characters is \\D This is equal to the character class [^0-9], which looks for a single character that is not a number between zero and nine --instructions--\nUse the shorthand character class for non-digits \\D to count how many non-digits are in movie titles --hints--\nYour regex should use the shortcut character to match non-digit characters\njs\nassert(/\\\\D/ test(noNumRegex source));\nYour regex should use the global flag js\nassert(noNumRegex global);\nYour regex should find no non-digits in the string 9 js\nassert('9' match(noNumRegex) == null);\nYour regex should find 6 non-digits in the string Catch 22 js\nassert('Catch 22' match(noNumRegex) length == 6);\nYour regex should find 11 non-digits in the string 101 Dalmatians js\nassert('101 Dalmatians' match(noNumRegex) length == 11);\nYour regex should find 15 non-digits in the string One, Two, Three js\nassert('One, Two, Three' match(noNumRegex) length == 15);\nYour regex should find 12 non-digits in the string 21 Jump Street js\nassert('21 Jump Street' match(noNumRegex) length == 12);\nYour regex should find 17 non-digits in the string 2001: A Space Odyssey js\nassert('2001: A Space Odyssey' match(noNumRegex) length == 17);\n--seed--\n--seed-contents--\njs\nlet movieName = \"2001: A Space Odyssey\";\nlet noNumRegex = /change/; // Change this line\nlet result = movieName match(noNumRegex) length;\n--solutions--\njs\nlet movieName = \"2001: A Space Odyssey\";\nlet noNumRegex = /\\D/g; // Change this line\nlet result = movieName match(noNumRegex) length;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2018,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-non-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f046154d5010bf6803f72e9534bd191a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-characters-that-occur-one-or-more-times.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db6367417b2b2512b99\ntitle: Match Characters that Occur One or More Times\nchallengeType: 1\nforumTopicId: 301350\ndashedName: match-characters-that-occur-one-or-more-times\n--description--\nSometimes, you need to match a character (or group of characters) that appears one or more times in a row. This means it occurs at least once, and may be repeated.\nYou can use the + character to check if that is the case. Remember, the character or pattern has to be present consecutively. That is, the character has to repeat one after the other.\nFor example, /a+/g would find one match in abc and return [\"a\"]. Because of the +, it would also find a single match in aabc and return [\"aa\"].\nIf it were instead checking the string abab, it would find two matches and return [\"a\", \"a\"] because the a characters are not in a row - there is a b between them. Finally, since there is no a in the string bcd, it wouldn't find a match.\n--instructions--\nYou want to find matches when the letter s occurs one or more times in Mississippi. Write a regex that uses the + sign.\n--hints--\nYour regex myRegex should use the + sign to match one or more s characters.\njs\nassert(/\\+/.test(myRegex.source));\nYour regex myRegex should match 2 items.\njs\nassert(result.length == 2);\nThe result variable should be an array with two matches of ss\njs\nassert(result[0] == 'ss' && result[1] == 'ss');\n--seed--\n--seed-contents--\njs\nlet difficultSpelling = \"Mississippi\";\nlet myRegex = /change/; // Change this line\nlet result = difficultSpelling.match(myRegex);\n--solutions--\njs\nlet difficultSpelling = \"Mississippi\";\nlet myRegex = /s+/g; // Change this line\nlet result = difficultSpelling.match(myRegex);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1793,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-characters-that-occur-one-or-more-times.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "25de994d1a77ff16fe36d4ecfaae8776",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-letters-and-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db7367417b2b2512b9f\ntitle: Match All Letters and Numbers\nchallengeType: 1\nforumTopicId: 301346\ndashedName: match-all-letters-and-numbers\n--description--\nUsing character classes, you were able to search for all letters of the alphabet with [a-z] This kind of character class is common enough that there is a shortcut for it, although it includes a few extra characters as well The closest character class in JavaScript to match the alphabet is \\w This shortcut is equal to [A-Za-z0-9_] This character class matches upper and lowercase letters plus numbers Note, this character class also includes the underscore character (_) js\nlet longHand = /[A-Za-z0-9_]+/;\nlet shortHand = /\\w+/;\nlet numbers = \"42\";\nlet varNames = \"important_var\";\nlongHand test(numbers);\nshortHand test(numbers);\nlongHand test(varNames);\nshortHand test(varNames);\nAll four of these test calls would return true These shortcut character classes are also known as shorthand character classes --instructions--\nUse the shorthand character class \\w to count the number of alphanumeric characters in various quotes and strings --hints--\nYour regex should use the global flag js\nassert(alphabetRegexV2 global);\nYour regex should use the shorthand character \\w to match all characters which are alphanumeric js\nassert(/\\\\w/ test(alphabetRegexV2 source));\nYour regex should find 31 alphanumeric characters in the string The five boxing wizards jump quickly js\nassert(\n'The five boxing wizards jump quickly ' match(alphabetRegexV2) length === 31\n);\nYour regex should find 32 alphanumeric characters in the string Pack my box with five dozen liquor jugs js\nassert(\n'Pack my box with five dozen liquor jugs ' match(alphabetRegexV2) length ===\n32\n);\nYour regex should find 30 alphanumeric characters in the string How vexingly quick daft zebras jump js\nassert(\n'How vexingly quick daft zebras jump ' match(alphabetRegexV2) length === 30\n);\nYour regex should find 36 alphanumeric characters in the string 123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ js\nassert(\n'123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2676,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-letters-and-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "37fab437fc6a16c1fa18caa95dd85c6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-letters-and-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "five dozen liquor jugs ' match(alphabetRegexV2) length === 32 ); Your regex should find 30 alphanumeric characters in the string How vexingly quick daft zebras jump js assert( 'How vexingly quick daft zebras jump ' match(alphabetRegexV2) length === 30 ); Your regex should find 36 alphanumeric characters in the string 123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ js assert( '123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ' match(alphabetRegexV2) length === 36\n);\n--seed--\n--seed-contents--\njs\nlet quoteSample = \"The five boxing wizards jump quickly \";\nlet alphabetRegexV2 = /change/; // Change this line\nlet result = quoteSample match(alphabetRegexV2) length;\n--solutions--\njs\nlet quoteSample = \"The five boxing wizards jump quickly \";\nlet alphabetRegexV2 = /\\w/g; // Change this line\nlet result = quoteSample match(alphabetRegexV2) length;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2676,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-all-letters-and-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 236,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0fb5a37a4029b54f0728201646f50eda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-ending-string-patterns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db7367417b2b2512b9e\ntitle: Match Ending String Patterns\nchallengeType: 1\nforumTopicId: 301352\ndashedName: match-ending-string-patterns\n--description--\nIn the last challenge, you learned to use the caret character to search for patterns at the beginning of strings. There is also a way to search for patterns at the end of strings.\nYou can search the end of strings using the dollar sign character $ at the end of the regex.\njs\nlet theEnding = \"This is a never ending story\";\nlet storyRegex = /story$/;\nstoryRegex.test(theEnding);\nlet noEnding = \"Sometimes a story will have to end\";\nstoryRegex.test(noEnding);\nThe first test call would return true, while the second would return false.\n--instructions--\nUse the anchor character ($) to match the string caboose at the end of the string caboose.\n--hints--\nYou should search for caboose with the dollar sign $ anchor in your regex.\njs\nassert(lastRegex.source == 'caboose$');\nYour regex should not use any flags.\njs\nassert(lastRegex.flags == '');\nYou should match caboose at the end of the string The last car on a train is the caboose\njs\nlastRegex.lastIndex = 0;\nassert(lastRegex.test('The last car on a train is the caboose'));\n--seed--\n--seed-contents--\njs\nlet caboose = \"The last car on a train is the caboose\";\nlet lastRegex = /change/; // Change this line\nlet result = lastRegex.test(caboose);\n--solutions--\njs\nlet caboose = \"The last car on a train is the caboose\";\nlet lastRegex = /caboose$/; // Change this line\nlet result = lastRegex.test(caboose);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-ending-string-patterns.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0b819a1b0bd8938871ff1537940d79be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-anything-with-wildcard-period.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db5367417b2b2512b94\ntitle: Match Anything with Wildcard Period\nchallengeType: 1\nforumTopicId: 301348\ndashedName: match-anything-with-wildcard-period\n--description--\nSometimes you won't (or don't need to) know the exact characters in your patterns Thinking of all words that match, say, a misspelling would take a long time Luckily, you can save time using the wildcard character: The wildcard character will match any one character The wildcard is also called dot and period You can use the wildcard character just like any other character in the regex For example, if you wanted to match hug, huh, hut, and hum, you can use the regex /hu / to match all four words js\nlet humStr = \"I'll hum a song\";\nlet hugStr = \"Bear hug\";\nlet huRegex = /hu /;\nhuRegex test(humStr);\nhuRegex test(hugStr);\nBoth of these test calls would return true --instructions--\nComplete the regex unRegex so that it matches the strings run, sun, fun, pun, nun, and bun Your regex should use the wildcard character --hints--\nYou should use the test() method js\nassert(__helpers removeJSComments(code) match(/\\ test\\( *\\)/));\nYou should use the wildcard character in your regex unRegex\njs\nassert(/\\ / test(unRegex source));\nYour regex unRegex should match run in the string Let us go on a run js\nunRegex lastIndex = 0;\nassert(unRegex test('Let us go on a run '));\nYour regex unRegex should match sun in the string The sun is out today js\nunRegex lastIndex = 0;\nassert(unRegex test('The sun is out today '));\nYour regex unRegex should match fun in the string Coding is a lot of fun js\nunRegex lastIndex = 0;\nassert(unRegex test('Coding is a lot of fun '));\nYour regex unRegex should match pun in the string Seven days without a pun makes one weak js\nunRegex lastIndex = 0;\nassert(unRegex test('Seven days without a pun makes one weak '));\nYour regex unRegex should match nun in the string One takes a vow to be a nun js\nunRegex lastIndex = 0;\nassert(unRegex test('One takes a vow to be a nun",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-anything-with-wildcard-period.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bcd6da60bea68dc7bd9d9b167532f800",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-anything-with-wildcard-period.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js unRegex lastIndex = 0; assert(unRegex test('Coding is a lot of fun ')); Your regex unRegex should match pun in the string Seven days without a pun makes one weak js unRegex lastIndex = 0; assert(unRegex test('Seven days without a pun makes one weak ')); Your regex unRegex should match nun in the string One takes a vow to be a nun js unRegex lastIndex = 0; assert(unRegex test('One takes a vow to be a nun'));\nYour regex unRegex should match bun in the string She got fired from the hot dog stand for putting her hair in a bun js\nunRegex lastIndex = 0;\nassert(\nunRegex test(\n'She got fired from the hot dog stand for putting her hair in a bun '\n)\n);\nYour regex unRegex should not match the string There is a bug in my code js\nunRegex lastIndex = 0;\nassert( unRegex test('There is a bug in my code '));\nYour regex unRegex should not match the string Catch me if you can js\nunRegex lastIndex = 0;\nassert( unRegex test('Catch me if you can '));\n--seed--\n--seed-contents--\njs\nlet exampleStr = \"Let's have fun with regular expressions \";\nlet unRegex = /change/; // Change this line\nlet result = unRegex test(exampleStr);\n--solutions--\njs\nlet exampleStr = \"Let's have fun with regular expressions \";\nlet unRegex = / un/; // Change this line\nlet result = unRegex test(exampleStr);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-anything-with-wildcard-period.md",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "13b5da684394c41563f87464d1ee485b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-characters-that-occur-zero-or-more-times.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db6367417b2b2512b9a\ntitle: Match Characters that Occur Zero or More Times\nchallengeType: 1\nforumTopicId: 301351\ndashedName: match-characters-that-occur-zero-or-more-times\n--description--\nThe last challenge used the plus + sign to look for characters that occur one or more times There's also an option that matches characters that occur zero or more times The character to do this is the asterisk or star: * js\nlet soccerWord = \"gooooooooal \";\nlet gPhrase = \"gut feeling\";\nlet oPhrase = \"over the moon\";\nlet goRegex = /go*/;\nsoccerWord match(goRegex);\ngPhrase match(goRegex);\noPhrase match(goRegex);\nIn order, the three match calls would return the values [\"goooooooo\"], [\"g\"], and null --instructions--\nFor this challenge, chewieQuote has been initialized as the string Aaaaaaaaaaaaaaaarrrgh behind the scenes Create a regex chewieRegex that uses the * character to match an uppercase A character immediately followed by zero or more lowercase a characters in chewieQuote Your regex does not need flags or character classes, and it should not match any of the other quotes --hints--\nYour regex chewieRegex should use the * character to match zero or more a characters js\nassert(/\\*/ test(chewieRegex source));\nYour regex should match the string A in chewieQuote js\nassert(result[0][0] === 'A');\nYour regex should match the string Aaaaaaaaaaaaaaaa in chewieQuote js\nassert(result[0] === 'Aaaaaaaaaaaaaaaa');\nYour regex chewieRegex should match 16 characters in chewieQuote js\nassert(result[0] length === 16);\nYour regex should not match any characters in the string He made a fair move Screaming about it can't help you js\nassert( \"He made a fair move Screaming about it can't help you \" match(chewieRegex)\n);\nYour regex should not match any characters in the string Let him have it It's not wise to upset a Wookiee js\nassert( \"Let him have it It's not wise to upset a Wookiee \" match(chewieRegex)\n);\n--seed--\n--before-user-code--\njs\nconst chewieQuote = \"Aaaaaaaaaaaaaaaarrrgh",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-characters-that-occur-zero-or-more-times.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c3fd264551ad1d2da70c99b99b5550e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-characters-that-occur-zero-or-more-times.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "any characters in the string He made a fair move Screaming about it can't help you js assert( \"He made a fair move Screaming about it can't help you \" match(chewieRegex) ); Your regex should not match any characters in the string Let him have it It's not wise to upset a Wookiee js assert( \"Let him have it It's not wise to upset a Wookiee \" match(chewieRegex) ); --seed-- --before-user-code-- js const chewieQuote = \"Aaaaaaaaaaaaaaaarrrgh\";\n--seed-contents--\n```js\n// Only change code below this line\nlet chewieRegex = /change/; // Change this line\n// Only change code above this line\nlet result = chewieQuote match(chewieRegex);\n```\n--solutions--\njs\nlet chewieRegex = /Aa*/;\nlet result = chewieQuote match(chewieRegex);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-characters-that-occur-zero-or-more-times.md",
      "source_type": "git_repo"
    },
    "token_count": 196,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "afaacb94d00a8f188cb31598efdf0252",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-letters-of-the-alphabet.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db5367417b2b2512b96\ntitle: Match Letters of the Alphabet\nchallengeType: 1\nforumTopicId: 301354\ndashedName: match-letters-of-the-alphabet\n--description--\nYou saw how you can use character sets to specify a group of characters to match, but that's a lot of typing when you need to match a large range of characters (for example, every letter in the alphabet). Fortunately, there is a built-in feature that makes this short and simple.\nInside a character set, you can define a range of characters to match using a hyphen character: -.\nFor example, to match lowercase letters a through e you would use [a-e].\njs\nlet catStr = \"cat\";\nlet batStr = \"bat\";\nlet matStr = \"mat\";\nlet bgRegex = /[a-e]at/;\ncatStr.match(bgRegex);\nbatStr.match(bgRegex);\nmatStr.match(bgRegex);\nIn order, the three match calls would return the values [\"cat\"], [\"bat\"], and null.\n--instructions--\nMatch all the letters in the string quoteSample.\nNote: Be sure to match both uppercase and lowercase letters.\n--hints--\nYour regex alphabetRegex should match 35 items.\njs\nassert(result.length == 35);\nYour regex alphabetRegex should use the global flag.\njs\nassert(alphabetRegex.flags.match(/g/).length == 1);\nYour regex alphabetRegex should use the case insensitive flag.\njs\nassert(alphabetRegex.flags.match(/i/).length == 1);\n--seed--\n--seed-contents--\njs\nlet quoteSample = \"The quick brown fox jumps over the lazy dog.\";\nlet alphabetRegex = /change/; // Change this line\nlet result = alphabetRegex; // Change this line\n--solutions--\njs\nlet quoteSample = \"The quick brown fox jumps over the lazy dog.\";\nlet alphabetRegex = /[a-z]/gi; // Change this line\nlet result = quoteSample.match(alphabetRegex); // Change this line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1816,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-letters-of-the-alphabet.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a97d062140d90fcaad05f69280d7a96c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-literal-strings.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db3367417b2b2512b8f\ntitle: Match Literal Strings\nchallengeType: 1\nforumTopicId: 301355\ndashedName: match-literal-strings\n--description--\nIn the last challenge, you searched for the word Hello using the regular expression /Hello/. That regex searched for a literal match of the string Hello. Here's another example searching for a literal match of the string Kevin:\njs\nlet testStr = \"Hello, my name is Kevin.\";\nlet testRegex = /Kevin/;\ntestRegex.test(testStr);\nThis test call will return true.\nAny other forms of Kevin will not match. For example, the regex /Kevin/ will not match kevin or KEVIN.\njs\nlet wrongRegex = /kevin/;\nwrongRegex.test(testStr);\nThis test call will return false.\nA future challenge will show how to match those other forms as well.\n--instructions--\nComplete the regex waldoRegex to find \"Waldo\" in the string waldoIsHiding with a literal match.\n--hints--\nYour regex waldoRegex should find the string Waldo\njs\nwaldoRegex.lastIndex = 0;\nassert(waldoRegex.test(waldoIsHiding));\nYour regex waldoRegex should not search for anything else.\njs\nwaldoRegex.lastIndex = 0;\nassert(!waldoRegex.test('Somewhere is hiding in this text.'));\nYou should perform a literal string match with your regex.\njs\nassert(!/\\/.*\\/i/.test(__helpers.removeJSComments(code)));\n--seed--\n--seed-contents--\njs\nlet waldoIsHiding = \"Somewhere Waldo is hiding in this text.\";\nlet waldoRegex = /search/; // Change this line\nlet result = waldoRegex.test(waldoIsHiding);\n--solutions--\njs\nlet waldoIsHiding = \"Somewhere Waldo is hiding in this text.\";\nlet waldoRegex = /Waldo/; // Change this line\nlet result = waldoRegex.test(waldoIsHiding);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1762,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-literal-strings.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e209bb364c179114030ca9d80893a00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-non-whitespace-characters.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db9367417b2b2512ba4\ntitle: Match Non-Whitespace Characters\nchallengeType: 1\nforumTopicId: 18210\ndashedName: match-non-whitespace-characters\n--description--\nYou learned about searching for whitespace using \\s, with a lowercase s. You can also search for everything except whitespace.\nSearch for non-whitespace using \\S, which is an uppercase s. This pattern will not match whitespace, carriage return, tab, form feed, and new line characters. You can think of it being similar to the character class [^ \\r\\t\\f\\n\\v].\njs\nlet whiteSpace = \"Whitespace. Whitespace everywhere!\"\nlet nonSpaceRegex = /\\S/g;\nwhiteSpace.match(nonSpaceRegex).length;\nThe value returned by the .length method would be 32.\n--instructions--\nChange the regex countNonWhiteSpace to look for multiple non-whitespace characters in a string.\n--hints--\nYour regex should use the global flag.\njs\nassert(countNonWhiteSpace.global);\nYour regex should use the shorthand character \\S to match all non-whitespace characters.\njs\nassert(/\\\\S/.test(countNonWhiteSpace.source));\nYour regex should find 35 non-spaces in the string Men are from Mars and women are from Venus.\njs\nassert(\n'Men are from Mars and women are from Venus.'.match(countNonWhiteSpace)\n.length == 35\n);\nYour regex should find 23 non-spaces in the string Space: the final frontier.\njs\nassert('Space: the final frontier.'.match(countNonWhiteSpace).length == 23);\nYour regex should find 21 non-spaces in the string MindYourPersonalSpace\njs\nassert('MindYourPersonalSpace'.match(countNonWhiteSpace).length == 21);\n--seed--\n--seed-contents--\njs\nlet sample = \"Whitespace is important in separating words\";\nlet countNonWhiteSpace = /change/; // Change this line\nlet result = sample.match(countNonWhiteSpace);\n--solutions--\njs\nlet sample = \"Whitespace is important in separating words\";\nlet countNonWhiteSpace = /\\S/g; // Change this line\nlet result = sample.match(countNonWhiteSpace);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-non-whitespace-characters.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "79d87fd35f17b75d9b49ef7b21662fc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-numbers-and-letters-of-the-alphabet.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db5367417b2b2512b97\ntitle: Match Numbers and Letters of the Alphabet\nchallengeType: 1\nforumTopicId: 301356\ndashedName: match-numbers-and-letters-of-the-alphabet\n--description--\nUsing the hyphen (-) to match a range of characters is not limited to letters. It also works to match a range of numbers.\nFor example, /[0-5]/ matches any number between 0 and 5, including the 0 and 5.\nAlso, it is possible to combine a range of letters and numbers in a single character set.\njs\nlet jennyStr = \"Jenny8675309\";\nlet myRegex = /[a-z0-9]/ig;\njennyStr.match(myRegex);\n--instructions--\nCreate a single regex that matches a range of letters between h and s, and a range of numbers between 2 and 6. Remember to include the appropriate flags in the regex.\n--hints--\nYour regex myRegex should match 17 items.\njs\nassert(result.length == 17);\nYour regex myRegex should use the global flag.\njs\nassert(myRegex.flags.match(/g/).length == 1);\nYour regex myRegex should use the case insensitive flag.\njs\nassert(myRegex.flags.match(/i/).length == 1);\n--seed--\n--seed-contents--\njs\nlet quoteSample = \"Blueberry 3.141592653s are delicious.\";\nlet myRegex = /change/; // Change this line\nlet result = myRegex; // Change this line\n--solutions--\njs\nlet quoteSample = \"Blueberry 3.141592653s are delicious.\";\nlet myRegex = /[h-s2-6]/gi; // Change this line\nlet result = quoteSample.match(myRegex); // Change this line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1503,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-numbers-and-letters-of-the-alphabet.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9c178ead4eb7af0ac3cb64b0c499410d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-single-characters-not-specified.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db6367417b2b2512b98\ntitle: Match Single Characters Not Specified\nchallengeType: 1\nforumTopicId: 301358\ndashedName: match-single-characters-not-specified\n--description--\nSo far, you have created a set of characters that you want to match, but you could also create a set of characters that you do not want to match. These types of character sets are called negated character sets.\nTo create a negated character set, you place a caret character (^) after the opening bracket and before the characters you do not want to match.\nFor example, /[^aeiou]/gi matches all characters that are not a vowel. Note that characters like ., !, [, @, / and white space are matched - the negated vowel character set only excludes the vowel characters.\n--instructions--\nCreate a single regex that matches all characters that are not a number or a vowel. Remember to include the appropriate flags in the regex.\n--hints--\nYour regex myRegex should match 9 items.\njs\nassert(result.length == 9);\nYour regex myRegex should use the global flag.\njs\nassert(myRegex.flags.match(/g/).length == 1);\nYour regex myRegex should use the case insensitive flag.\njs\nassert(myRegex.flags.match(/i/).length == 1);\n--seed--\n--seed-contents--\njs\nlet quoteSample = \"3 blind mice.\";\nlet myRegex = /change/; // Change this line\nlet result = myRegex; // Change this line\n--solutions--\njs\nlet quoteSample = \"3 blind mice.\";\nlet myRegex = /[^0-9aeiou]/gi; // Change this line\nlet result = quoteSample.match(myRegex); // Change this line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-single-characters-not-specified.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d965b668c9724e062ee0909133aa0358",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-whitespace.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db8367417b2b2512ba3\ntitle: Match Whitespace\nchallengeType: 1\nforumTopicId: 301359\ndashedName: match-whitespace\n--description--\nThe challenges so far have covered matching letters of the alphabet and numbers. You can also match the whitespace or spaces between letters.\nYou can search for whitespace using \\s, which is a lowercase s. This pattern not only matches whitespace, but also carriage return, tab, form feed, and new line characters. You can think of it as similar to the character class [ \\r\\t\\f\\n\\v].\njs\nlet whiteSpace = \"Whitespace. Whitespace everywhere!\"\nlet spaceRegex = /\\s/g;\nwhiteSpace.match(spaceRegex);\nThis match call would return [\" \", \" \"].\n--instructions--\nChange the regex countWhiteSpace to look for multiple whitespace characters in a string.\n--hints--\nYour regex should use the global flag.\njs\nassert(countWhiteSpace.global);\nYour regex should use the shorthand character \\s to match all whitespace characters.\njs\nassert(/\\\\s/.test(countWhiteSpace.source));\nYour regex should find eight spaces in the string Men are from Mars and women are from Venus.\njs\nassert(\n'Men are from Mars and women are from Venus.'.match(countWhiteSpace).length ==\n8\n);\nYour regex should find three spaces in the string Space: the final frontier.\njs\nassert('Space: the final frontier.'.match(countWhiteSpace).length == 3);\nYour regex should find no spaces in the string MindYourPersonalSpace\njs\nassert('MindYourPersonalSpace'.match(countWhiteSpace) == null);\n--seed--\n--seed-contents--\njs\nlet sample = \"Whitespace is important in separating words\";\nlet countWhiteSpace = /change/; // Change this line\nlet result = sample.match(countWhiteSpace);\n--solutions--\njs\nlet sample = \"Whitespace is important in separating words\";\nlet countWhiteSpace = /\\s/g;\nlet result = sample.match(countWhiteSpace);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-whitespace.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b44c2170d263a1f54247168e92dd156f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-everything-but-letters-and-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db8367417b2b2512ba0\ntitle: Match Everything But Letters and Numbers\nchallengeType: 1\nforumTopicId: 301353\ndashedName: match-everything-but-letters-and-numbers\n--description--\nYou've learned that you can use a shortcut to match alphanumerics [A-Za-z0-9_] using \\w A natural pattern you might want to search for is the opposite of alphanumerics You can search for the opposite of the \\w with \\W Note, the opposite pattern uses a capital letter This shortcut is the same as [^A-Za-z0-9_] js\nlet shortHand = /\\W/;\nlet numbers = \"42%\";\nlet sentence = \"Coding \";\nnumbers match(shortHand);\nsentence match(shortHand);\nThe first match call would return the value [\"%\"] and the second would return [\" \"] --instructions--\nUse the shorthand character class \\W to count the number of non-alphanumeric characters in various quotes and strings --hints--\nYour regex should use the global flag js\nassert(nonAlphabetRegex global);\nYour regex should find 6 non-alphanumeric characters in the string The five boxing wizards jump quickly js\nassert(\n'The five boxing wizards jump quickly ' match(nonAlphabetRegex) length == 6\n);\nYour regex should use the shorthand character to match characters which are non-alphanumeric js\nassert(/\\\\W/ test(nonAlphabetRegex source));\nYour regex should find 8 non-alphanumeric characters in the string Pack my box with five dozen liquor jugs js\nassert(\n'Pack my box with five dozen liquor jugs ' match(nonAlphabetRegex) length == 8\n);\nYour regex should find 6 non-alphanumeric characters in the string How vexingly quick daft zebras jump js\nassert(\n'How vexingly quick daft zebras jump ' match(nonAlphabetRegex) length == 6\n);\nYour regex should find 12 non-alphanumeric characters in the string 123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ js\nassert(\n'123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ ' match(nonAlphabetRegex) length == 12\n);\n--seed--\n--seed-contents--\njs\nlet quoteSample = \"The five boxing wizards jump quickly",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-everything-but-letters-and-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cff4f79724b49efef48517b28af7c262",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-everything-but-letters-and-numbers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the string How vexingly quick daft zebras jump js assert( 'How vexingly quick daft zebras jump ' match(nonAlphabetRegex) length == 6 ); Your regex should find 12 non-alphanumeric characters in the string 123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ js assert( '123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ ' match(nonAlphabetRegex) length == 12 ); --seed-- --seed-contents-- js let quoteSample = \"The five boxing wizards jump quickly\";\nlet nonAlphabetRegex = /change/; // Change this line\nlet result = quoteSample match(nonAlphabetRegex) length;\n--solutions--\njs\nlet quoteSample = \"The five boxing wizards_jump quickly \";\nlet nonAlphabetRegex = /\\W/g; // Change this line\nlet result = quoteSample match(nonAlphabetRegex) length;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-everything-but-letters-and-numbers.md",
      "source_type": "git_repo"
    },
    "token_count": 205,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "31fbe0d3daa1482bc0c725f2cfee769e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\remove-whitespace-from-start-and-end.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dbb367417b2b2512bac\ntitle: Remove Whitespace from Start and End\nchallengeType: 1\nforumTopicId: 301362\ndashedName: remove-whitespace-from-start-and-end\n--description--\nSometimes whitespace characters around strings are not wanted but are there. Typical processing of strings is to remove the whitespace at the start and end of it.\n--instructions--\nWrite a regex and use the appropriate string methods to remove whitespace at the beginning and end of strings.\nNote: The String.prototype.trim() method would work here, but you'll need to complete this challenge using regular expressions.\n--hints--\nresult should be equal to the string Hello, World!\njs\nassert(result === 'Hello, World!');\nYour solution should not use the String.prototype.trim() method.\njs\nassert(!__helpers.removeJSComments(code).match(/\\.?[\\s\\S]*?trim/));\nThe result variable should not directly be set to a string\njs\nassert(!__helpers.removeJSComments(code).match(/result\\s*=\\s*[\"'`].*?[\"'`]/));\nThe value of the hello variable should not be changed.\njs\nassert(hello === '   Hello, World!  ');\n--seed--\n--seed-contents--\njs\nlet hello = \"   Hello, World!  \";\nlet wsRegex = /change/; // Change this line\nlet result = hello; // Change this line\n--solutions--\njs\nlet hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\remove-whitespace-from-start-and-end.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "83f10e0f487caedb40e59a9cbdef1c3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-single-character-with-multiple-possibilities.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db5367417b2b2512b95\ntitle: Match Single Character with Multiple Possibilities\nchallengeType: 1\nforumTopicId: 301357\ndashedName: match-single-character-with-multiple-possibilities\n--description--\nYou learned how to match literal patterns (/literal/) and wildcard character (/ /) Those are the extremes of regular expressions, where one finds exact matches and the other matches everything There are options that are a balance between the two extremes You can search for a literal pattern with some flexibility with character classes Character classes allow you to define a group of characters you wish to match by placing them inside square ([ and ]) brackets For example, you want to match bag, big, and bug but not bog You can create the regex /b[aiu]g/ to do this The [aiu] is the character class that will only match the characters a, i, or u js\nlet bigStr = \"big\";\nlet bagStr = \"bag\";\nlet bugStr = \"bug\";\nlet bogStr = \"bog\";\nlet bgRegex = /b[aiu]g/;\nbigStr match(bgRegex);\nbagStr match(bgRegex);\nbugStr match(bgRegex);\nbogStr match(bgRegex);\nIn order, the four match calls would return the values [\"big\"], [\"bag\"], [\"bug\"], and null --instructions--\nUse a character class with vowels (a, e, i, o, u) in your regex vowelRegex to find all the vowels in the string quoteSample Note: Be sure to match both upper- and lowercase vowels --hints--\nYou should find all 25 vowels js\nassert(result length == 25);\nYour regex vowelRegex should use a character class js\nassert(/\\[ *\\]/ test(vowelRegex source));\nYour regex vowelRegex should use the global flag js\nassert(vowelRegex flags match(/g/) length == 1);\nYour regex vowelRegex should use the case insensitive flag js\nassert(vowelRegex flags match(/i/) length == 1);\nYour regex should not match any consonants js\nassert( /[b-df-hj-np-tv-z]/gi test(result join()));\n--seed--\n--seed-contents--\njs\nlet quoteSample = \"Beware of bugs in the above code; I have only proved it correct, not tried it",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-single-character-with-multiple-possibilities.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "693b3e0d5f2d9d3137427b047f8c359b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-single-character-with-multiple-possibilities.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "vowelRegex should use a character class js assert(/\\[ *\\]/ test(vowelRegex source)); Your regex vowelRegex should use the global flag js assert(vowelRegex flags match(/g/) length == 1); Your regex vowelRegex should use the case insensitive flag js assert(vowelRegex flags match(/i/) length == 1); Your regex should not match any consonants js assert( /[b-df-hj-np-tv-z]/gi test(result join())); --seed-- --seed-contents-- js let quoteSample = \"Beware of bugs in the above code; I have only proved it correct, not tried it\";\nlet vowelRegex = /change/; // Change this line\nlet result = vowelRegex; // Change this line\n--solutions--\njs\nlet quoteSample = \"Beware of bugs in the above code; I have only proved it correct, not tried it \";\nlet vowelRegex = /[aeiou]/gi; // Change this line\nlet result = quoteSample match(vowelRegex); // Change this line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\match-single-character-with-multiple-possibilities.md",
      "source_type": "git_repo"
    },
    "token_count": 215,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ff40c93d472f9d9661be02c8b38ac5f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\positive-and-negative-lookahead.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dba367417b2b2512ba9\ntitle: Positive and Negative Lookahead\nchallengeType: 1\nforumTopicId: 301360\ndashedName: positive-and-negative-lookahead\n--description--\nLookaheads are patterns that tell JavaScript to look-ahead in your string to check for patterns further along This can be useful when you want to search for multiple patterns over the same string There are two kinds of lookaheads: positive lookahead and negative lookahead A positive lookahead will look to make sure the element in the search pattern is there, but won't actually match it A positive lookahead is used as ( = ) where the is the required part that is not matched On the other hand, a negative lookahead will look to make sure the element in the search pattern is not there A negative lookahead is used as ( ) where the is the pattern that you do not want to be there The rest of the pattern is returned if the negative lookahead part is not present Lookaheads are a bit confusing but some examples will help js\nlet quit = \"qu\";\nlet noquit = \"qt\";\nlet quRegex= /q( =u)/;\nlet qRegex = /q( u)/;\nquit match(quRegex);\nnoquit match(qRegex);\nBoth of these match calls would return [\"q\"] A more practical use of lookaheads is to check two or more patterns in one string Here is a (naively) simple password checker that looks for between 3 and 6 characters and at least one number:\njs\nlet password = \"abc123\";\nlet checkPass = /( =\\w{3,6})( =\\D*\\d)/;\ncheckPass test(password);\n--instructions--\nUse lookaheads in the pwRegex to match passwords that are greater than 5 characters long, and have two consecutive digits --hints--\nYour regex should use two positive lookaheads js\nassert(pwRegex source match(/\\(\\ = * \\)\\(\\ = * \\)/) == null);\nYour regex should not match the string astronaut\njs\npwRegex lastIndex = 0;\nassert( pwRegex test('astronaut'));\nYour regex should not match the string banan1\njs\npwRegex lastIndex = 0;\nassert( pwRegex test('banan1'));\nYour regex should match the string bana12\njs\npwRegex lastIndex = 0;\nassert(pwRegex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\positive-and-negative-lookahead.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cac108d4d5d1535f817cca8d52dadf3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\positive-and-negative-lookahead.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "are greater than 5 characters long, and have two consecutive digits --hints-- Your regex should use two positive lookaheads js assert(pwRegex source match(/\\(\\ = * \\)\\(\\ = * \\)/) == null); Your regex should not match the string astronaut js pwRegex lastIndex = 0; assert( pwRegex test('astronaut')); Your regex should not match the string banan1 js pwRegex lastIndex = 0; assert( pwRegex test('banan1')); Your regex should match the string bana12 js pwRegex lastIndex = 0; assert(pwRegextest('bana12'));\nYour regex should match the string abc123\njs\npwRegex lastIndex = 0;\nassert(pwRegex test('abc123'));\nYour regex should not match the string 12345\njs\npwRegex lastIndex = 0;\nassert( pwRegex test('12345'));\nYour regex should match the string 8pass99\njs\npwRegex lastIndex = 0;\nassert(pwRegex test('8pass99'));\nYour regex should not match the string 1a2bcde\njs\npwRegex lastIndex = 0;\nassert( pwRegex test('1a2bcde'));\nYour regex should match the string astr1on11aut\njs\npwRegex lastIndex = 0;\nassert(pwRegex test('astr1on11aut'));\n--seed--\n--seed-contents--\njs\nlet sampleWord = \"astronaut\";\nlet pwRegex = /change/; // Change this line\nlet result = pwRegex test(sampleWord);\n--solutions--\njs\nlet pwRegex =  /( =\\w{6})( =\\w*\\d{2})/;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\positive-and-negative-lookahead.md",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "71577b9e276d3bfdbf6df851f5bbda52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\restrict-possible-usernames.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db8367417b2b2512ba2\ntitle: Restrict Possible Usernames\nchallengeType: 1\nforumTopicId: 301363\ndashedName: restrict-possible-usernames\n--description--\nUsernames are used everywhere on the internet They are what give users a unique identity on their favorite sites You need to check all the usernames in a database Here are some simple rules that users have to follow when creating their username 1) Usernames can only use alphanumeric characters 2) The only numbers in the username have to be at the end There can be zero or more of them at the end Username cannot start with the number 3) Username letters can be lowercase and uppercase 4) Usernames have to be at least two characters long A two-character username can only use alphabet letters as characters --instructions--\nChange the regex userCheck to fit the constraints listed above --hints--\nYour regex should match the string JACK\njs\nuserCheck lastIndex = 0;\nassert(userCheck test('JACK'));\nYour regex should not match the string J\njs\nuserCheck lastIndex = 0;\nassert( userCheck test('J'));\nYour regex should match the string Jo\njs\nuserCheck lastIndex = 0;\nassert(userCheck test('Jo'));\nYour regex should match the string Oceans11\njs\nuserCheck lastIndex = 0;\nassert(userCheck test('Oceans11'));\nYour regex should match the string RegexGuru\njs\nuserCheck lastIndex = 0;\nassert(userCheck test('RegexGuru'));\nYour regex should not match the string 007\njs\nuserCheck lastIndex = 0;\nassert( userCheck test('007'));\nYour regex should not match the string 9\njs\nuserCheck lastIndex = 0;\nassert( userCheck test('9'));\nYour regex should not match the string A1\njs\nuserCheck lastIndex = 0;\nassert( userCheck test('A1'));\nYour regex should not match the string BadUs3rnam3\njs\nuserCheck lastIndex = 0;\nassert( userCheck test('BadUs3rnam3'));\nYour regex should match the string Z97\njs\nuserCheck lastIndex = 0;\nassert(userCheck test('Z97'));\nYour regex should not match the string c57bT3\njs\nuserCheck lastIndex = 0;\nassert( userCheck",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2696,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\restrict-possible-usernames.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "23a7e20690011ccb87f377d5aa8bf242",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\restrict-possible-usernames.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "regex should not match the string 9 js userCheck lastIndex = 0; assert( userCheck test('9')); Your regex should not match the string A1 js userCheck lastIndex = 0; assert( userCheck test('A1')); Your regex should not match the string BadUs3rnam3 js userCheck lastIndex = 0; assert( userCheck test('BadUs3rnam3')); Your regex should match the string Z97 js userCheck lastIndex = 0; assert(userCheck test('Z97')); Your regex should not match the string c57bT3 js userCheck lastIndex = 0; assert( userChecktest('c57bT3'));\nYour regex should match the string AB1\njs\nuserCheck lastIndex = 0;\nassert(userCheck test('AB1'));\nYour regex should not match the string J%4\njs\nuserCheck lastIndex = 0;\nassert( userCheck test('J%4'))\n--seed--\n--seed-contents--\njs\nlet username = \"JackOfAllTrades\";\nlet userCheck = /change/; // Change this line\nlet result = userCheck test(username);\n--solutions--\njs\nlet username = \"JackOfAllTrades\";\nconst userCheck = /^[a-z]([0-9]{2,}|[a-z]+\\d*)$/i;\nlet result = userCheck test(username);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2696,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\restrict-possible-usernames.md",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d03cd8aef50e85e3749a64911ac806a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\reuse-patterns-using-capture-groups.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dbb367417b2b2512baa\ntitle: Reuse Patterns Using Capture Groups\nchallengeType: 1\nforumTopicId: 301364\ndashedName: reuse-patterns-using-capture-groups\n--description--\nSay you want to match a word that occurs multiple times like below js\nlet repeatStr = \"row row row your boat\";\nYou could use /row row row/, but what if you don't know the specific word repeated Capture groups can be used to find repeated substrings Capture groups are constructed by enclosing the regex pattern to be captured in parentheses In this case, the goal is to capture a word consisting of alphanumeric characters so the capture group will be \\w+ enclosed by parentheses: /(\\w+)/ The substring matched by the group is saved to a temporary \"variable\", which can be accessed within the same regex using a backslash and the number of the capture group (e g \\1) Capture groups are automatically numbered by the position of their opening parentheses (left to right), starting at 1 The example below matches a word that occurs thrice separated by spaces:\njs\nlet repeatRegex = /(\\w+) \\1 \\1/;\nrepeatRegex test(repeatStr); // Returns true\nrepeatStr match(repeatRegex); // Returns [\"row row row\", \"row\"]\nUsing the match() method on a string will return an array with the matched substring, along with its captured groups --instructions--\nUse capture groups in reRegex to match a string that consists of only the same number repeated exactly three times separated by single spaces --hints--\nYour regex should use the shorthand character class for digits js\nassert(reRegex source match(/\\\\d/));\nYour regex should reuse a capture group twice js\nassert(reRegex source match(/\\\\1|\\\\2/g) length >= 2);\nYour regex should match the string 42 42 42 js\nreRegex lastIndex = 0;\nassert(reRegex test('42 42 42'));\nYour regex should match the string 100 100 100 js\nreRegex lastIndex = 0;\nassert(reRegex test('100 100 100'));\nYour regex should not match the string 42 42 42 42 js\nassert equal('42 42 42 42' match(reRegex source), null);\nYour regex should not match the string 42 42 js\nassert equal('42 42'",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\reuse-patterns-using-capture-groups.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1fbafa85b0006caed62937829631be93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\reuse-patterns-using-capture-groups.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert(reRegex source match(/\\\\1|\\\\2/g) length >= 2); Your regex should match the string 42 42 42 js reRegex lastIndex = 0; assert(reRegex test('42 42 42')); Your regex should match the string 100 100 100 js reRegex lastIndex = 0; assert(reRegex test('100 100 100')); Your regex should not match the string 42 42 42 42 js assert equal('42 42 42 42' match(reRegex source), null); Your regex should not match the string 42 42 js assert equal('42 42'match(reRegex source), null);\nYour regex should not match the string 101 102 103 js\nreRegex lastIndex = 0;\nassert( reRegex test('101 102 103'));\nYour regex should not match the string 1 2 3 js\nreRegex lastIndex = 0;\nassert( reRegex test('1 2 3'));\nYour regex should match the string 10 10 10 js\nreRegex lastIndex = 0;\nassert(reRegex test('10 10 10'));\nYour regex should not match the string 42\\t42\\t42 js\nreRegex lastIndex = 0;\nassert( reRegex test('42\\t42\\t42'));\nYour regex should not match the string 42  42  42 js\nreRegex lastIndex = 0;\nassert( reRegex test('42  42  42'));\n--seed--\n--seed-contents--\njs\nlet repeatNum = \"42 42 42\";\nlet reRegex = /change/; // Change this line\nlet result = reRegex test(repeatNum);\n--solutions--\njs\nlet repeatNum = \"42 42 42\";\nlet reRegex = /^(\\d+) \\1 \\1$/;\nlet result = reRegex test(repeatNum);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\reuse-patterns-using-capture-groups.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c2ca7f6c6b59364b651ec836ee3bb051",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-exact-number-of-matches.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db9367417b2b2512ba7\ntitle: Specify Exact Number of Matches\nchallengeType: 1\nforumTopicId: 301365\ndashedName: specify-exact-number-of-matches\n--description--\nYou can specify the lower and upper number of patterns with quantity specifiers using curly brackets Sometimes you only want a specific number of matches To specify a certain number of patterns, just have that one number between the curly brackets For example, to match only the word hah with the letter a 3 times, your regex would be /ha{3}h/ js\nlet A4 = \"haaaah\";\nlet A3 = \"haaah\";\nlet A100 = \"h\" + \"a\" repeat(100) + \"h\";\nlet multipleHA = /ha{3}h/;\nmultipleHA test(A4);\nmultipleHA test(A3);\nmultipleHA test(A100);\nIn order, the three test calls would return false, true, and false --instructions--\nChange the regex timRegex to match the word Timber only when it has four letter m's --hints--\nYour regex should use curly brackets js\nassert(timRegex source match(/{ * }/) length > 0);\nYour regex should not match the string Timber\njs\ntimRegex lastIndex = 0;\nassert( timRegex test('Timber'));\nYour regex should not match the string Timmber\njs\ntimRegex lastIndex = 0;\nassert( timRegex test('Timmber'));\nYour regex should not match the string Timmmber\njs\ntimRegex lastIndex = 0;\nassert( timRegex test('Timmmber'));\nYour regex should match the string Timmmmber\njs\ntimRegex lastIndex = 0;\nassert(timRegex test('Timmmmber'));\nYour regex should not match the string Timber with 30 m's in it js\ntimRegex lastIndex = 0;\nassert( timRegex test('Ti' + 'm' repeat(30) + 'ber'));\n--seed--\n--seed-contents--\njs\nlet timStr = \"Timmmmber\";\nlet timRegex = /change/; // Change this line\nlet result = timRegex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1948,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-exact-number-of-matches.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "41b5dd90b8cbce9813596b7518d0180e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-exact-number-of-matches.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "test('Timmber')); Your regex should not match the string Timmmber js timRegex lastIndex = 0; assert( timRegex test('Timmmber')); Your regex should match the string Timmmmber js timRegex lastIndex = 0; assert(timRegex test('Timmmmber')); Your regex should not match the string Timber with 30 m's in it js timRegex lastIndex = 0; assert( timRegex test('Ti' + 'm' repeat(30) + 'ber')); --seed-- --seed-contents-- js let timStr = \"Timmmmber\"; let timRegex = /change/; // Change this line let result = timRegextest(timStr);\n--solutions--\njs\nlet timStr = \"Timmmmber\";\nlet timRegex = /Tim{4}ber/; // Change this line\nlet result = timRegex test(timStr);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1948,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-exact-number-of-matches.md",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6152c0373346089d5d67aed3d38cce88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\using-the-test-method.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db3367417b2b2512b8e\ntitle: Using the Test Method\nchallengeType: 1\nforumTopicId: 301369\ndashedName: using-the-test-method\n--description--\nRegular expressions are used in programming languages to match parts of strings. You create patterns to help you do that matching.\nIf you want to find the word the in the string The dog chased the cat, you could use the following regular expression: /the/. Notice that quote marks are not required within the regular expression.\nJavaScript has multiple ways to use regexes. One way to test a regex is using the .test() method. The .test() method takes the regex, applies it to a string (which is placed inside the parentheses), and returns true or false if your pattern finds something or not.\njs\nlet testStr = \"freeCodeCamp\";\nlet testRegex = /Code/;\ntestRegex.test(testStr);\nThe test method here returns true.\n--instructions--\nApply the regex myRegex on the string myString using the .test() method.\n--hints--\nYou should use .test() to test the regex.\njs\nassert(__helpers.removeJSComments(code).match(/myRegex.test\\(\\s*myString\\s*\\)/));\nYour result should return true.\njs\nassert(result === true);\n--seed--\n--seed-contents--\njs\nlet myString = \"Hello, World!\";\nlet myRegex = /Hello/;\nlet result = myRegex; // Change this line\n--solutions--\njs\nlet myString = \"Hello, World!\";\nlet myRegex = /Hello/;\nlet result = myRegex.test(myString); // Change this line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\using-the-test-method.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b062f023383afc5f22fe85d241fd1d53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-only-the-lower-number-of-matches.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db9367417b2b2512ba6\ntitle: Specify Only the Lower Number of Matches\nchallengeType: 1\nforumTopicId: 301366\ndashedName: specify-only-the-lower-number-of-matches\n--description--\nYou can specify the lower and upper number of patterns with quantity specifiers using curly brackets Sometimes you only want to specify the lower number of patterns with no upper limit To only specify the lower number of patterns, keep the first number followed by a comma For example, to match only the string hah with the letter a appearing at least 3 times, your regex would be /ha{3,}h/ js\nlet A4 = \"haaaah\";\nlet A2 = \"haah\";\nlet A100 = \"h\" + \"a\" repeat(100) + \"h\";\nlet multipleA = /ha{3,}h/;\nmultipleA test(A4);\nmultipleA test(A2);\nmultipleA test(A100);\nIn order, the three test calls would return true, false, and true --instructions--\nChange the regex haRegex to match the word Hazzah only when it has four or more letter z's --hints--\nYour regex should use curly brackets js\nassert(haRegex source match(/{ * }/) length > 0);\nYour regex should not match the string Hazzah\njs\nhaRegex lastIndex = 0;\nassert( haRegex test('Hazzah'));\nYour regex should not match the string Hazzzah\njs\nhaRegex lastIndex = 0;\nassert( haRegex test('Hazzzah'));\nYour regex should match the string Hazzzzah\njs\nassert('Hazzzzah' match(haRegex)[0] length === 8);\nYour regex should match the string Hazzzzzah\njs\nassert('Hazzzzzah' match(haRegex)[0] length === 9);\nYour regex should match the string Hazzzzzzah\njs\nassert('Hazzzzzzah' match(haRegex)[0] length === 10);\nYour regex should match the string Hazzah with 30 z's in it js\nassert('Hazzzzzzzzzzzzzzzzzzzzzzzzzzzzzzah' match(haRegex)[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-only-the-lower-number-of-matches.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "dd04621a5cfb09842882f4b1549a0afb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-only-the-lower-number-of-matches.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "lastIndex = 0; assert( haRegex test('Hazzah')); Your regex should not match the string Hazzzah js haRegex lastIndex = 0; assert( haRegex test('Hazzzah')); Your regex should match the string Hazzzzah js assert('Hazzzzah' match(haRegex)[0] length === 8); Your regex should match the string Hazzzzzah js assert('Hazzzzzah' match(haRegex)[0] length === 9); Your regex should match the string Hazzzzzzah js assert('Hazzzzzzah' match(haRegex)[0] length === 10); Your regex should match the string Hazzah with 30 z's in it js assert('Hazzzzzzzzzzzzzzzzzzzzzzzzzzzzzzah' match(haRegex)[0]length === 34);\n--seed--\n--seed-contents--\njs\nlet haStr = \"Hazzzzah\";\nlet haRegex = /change/; // Change this line\nlet result = haRegex test(haStr);\n--solutions--\njs\nlet haStr = \"Hazzzzah\";\nlet haRegex = /Haz{4,}ah/; // Change this line\nlet result = haRegex test(haStr);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-only-the-lower-number-of-matches.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5a4bcc663b6365ebe57ff51821f4b0c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\add-a-text-alternative-to-images-for-visually-impaired-accessibility.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d774c367417b2b2512a9c\ntitle: Add a Text Alternative to Images for Visually Impaired Accessibility\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cPp7VfD'\nforumTopicId: 16628\ndashedName: add-a-text-alternative-to-images-for-visually-impaired-accessibility\n--description--\nYou've likely seen an alt attribute on an img tag in other challenges. alt text describes the image's content and provides a text-alternative for it. An alt attribute helps in cases where the image fails to load or can't be seen by a user. Search engines also use it to understand what an image contains to include it in search results. Here's an example:\nhtml\n<img src=\"importantLogo.jpeg\" alt=\"Company logo\">\nPeople with visual impairments rely on screen readers to convert web content to an audio interface. They won't get information if it's only presented visually. For images, screen readers can access the alt attribute and read its contents to deliver key information.\nGood alt text provides the reader a brief description of the image. You should always include an alt attribute on your image. Per HTML5 specification, this is now considered mandatory.\n--instructions--\nCamper Cat happens to be both a coding ninja and an actual ninja, who is building a website to share his knowledge. The profile picture he wants to use shows his skills and should be appreciated by all site visitors. Add an alt attribute in the img tag, that explains Camper Cat is doing karate. (The image src doesn't link to an actual file, so you should see the alt text in the display.)\n--hints--\nYour img tag should have an alt attribute and it should not be empty.\njs\nassert.isNotEmpty(document.querySelector('img')?.getAttribute('alt'));\n--seed--\n--seed-contents--\nhtml\n<img src=\"doingKarateWow.jpeg\">\n--solutions--\nhtml\n<img src=\"doingKarateWow.jpeg\" alt=\"Someone doing karate\">",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1937,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\add-a-text-alternative-to-images-for-visually-impaired-accessibility.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a3ef0a3a70d81587b74bd0005b523050",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\add-an-accessible-date-picker.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778b367417b2b2512aa8\ntitle: Add an Accessible Date Picker\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cR3bRbCV'\nforumTopicId: 301008\ndashedName: add-an-accessible-date-picker\n--description--\nForms often include the input field, which can be used to create several different form controls. The type attribute on this element indicates what kind of input element will be created.\nYou may have noticed the text and submit input types in prior challenges, and HTML5 introduced an option to specify a date field. Depending on browser support, a date picker shows up in the input field when it's in focus, which makes filling in a form easier for all users.\nFor older browsers, the type will default to text, so it helps to show users the expected date format in the label or placeholder text just in case.\nHere's an example:\nhtml\n<label for=\"input1\">Enter a date:</label>\n<input type=\"date\" id=\"input1\" name=\"input1\">\n--instructions--\nCamper Cat is setting up a Mortal Kombat tournament and wants to ask his competitors to see what date works best. Add an input tag with a type attribute of date, an id attribute of pickdate, and a name attribute of date.\n--hints--\nYour code should add one input tag for the date selector field.\njs\nassert.lengthOf(document.querySelectorAll('input'), 2);\nYour input tag should have a type attribute with a value of date.\njs\nassert.equal(document.querySelector('input')?.getAttribute('type'), 'date');\nYour input tag should have an id attribute with a value of pickdate.\njs\nassert.equal(document.querySelector('input')?.getAttribute('id'),'pickdate');\nYour input tag should have a name attribute with a value of date.\njs\nassert.equal(document.querySelector('input')?.getAttribute('name'), 'date');\n--seed--\n--seed-contents--\n```html\nTournaments\nMortal Kombat Tournament Survey\nTell us the best date for the competition\nPreferred Date:\n© 2018 Camper Cat\n```\n--solutions--\n```html\nTournaments\nMortal Kombat Tournament Survey\nTell us the best date for the competition\nPreferred Date:\n© 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\add-an-accessible-date-picker.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cfc3ced90a528cff59c68fed2f0ffe6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\avoid-colorblindness-issues-by-carefully-choosing-colors-that-convey-information.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778f367417b2b2512aad\ntitle: >-\nAvoid Colorblindness Issues by Carefully Choosing Colors that Convey\nInformation\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c437as3'\nforumTopicId: 301011\ndashedName: >-\navoid-colorblindness-issues-by-carefully-choosing-colors-that-convey-information\n--description--\nThere are various forms of colorblindness. These can range from a reduced sensitivity to a certain wavelength of light to the inability to see color at all. The most common form is a reduced sensitivity to detect greens.\nFor example, if two similar green colors are the foreground and background color of your content, a colorblind user may not be able to distinguish them. Close colors can be thought of as neighbors on the color wheel, and those combinations should be avoided when conveying important information.\nNote: Some online color picking tools include visual simulations of how colors appear for different types of colorblindness. These are great resources in addition to online contrast checking calculators.\n--instructions--\nCamper Cat is testing different styles for an important button, but the yellow (#FFFF33) background-color and the green (#33FF33) text color are neighboring hues on the color wheel and virtually indistinguishable for some colorblind users. (Their similar lightness also fails the contrast ratio check). Change the text color to a dark blue (#003366) to solve both problems.\n--hints--\nYour code should change the text color for the button to the dark blue.\njs\nconst button = document.querySelector('button');\nconst buttonColor = window.getComputedStyle(button).color;\nassert.equal(buttonColor, 'rgb(0, 51, 102)');\n--seed--\n--seed-contents--\n```html\nDanger!\nDelete Internet\n```\n--solutions--\n```html\nDanger!\nDelete Internet\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2281,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\avoid-colorblindness-issues-by-carefully-choosing-colors-that-convey-information.md",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4b0e2b9a88b71ca43dd08b7c51c4b0eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\use-capture-groups-to-search-and-replace.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7dbb367417b2b2512bab\ntitle: Use Capture Groups to Search and Replace\nchallengeType: 1\nforumTopicId: 301368\ndashedName: use-capture-groups-to-search-and-replace\n--description--\nSearching is useful However, you can make searching even more powerful when it also changes (or replaces) the text you match You can search and replace text in a string using replace() on a string The inputs for replace() is first the regex pattern you want to search for The second parameter is the string to replace the match or a function to do something js\nlet wrongText = \"The sky is silver \";\nlet silverRegex = /silver/;\nwrongText replace(silverRegex, \"blue\");\nThe replace call would return the string The sky is blue You can also access capture groups in the replacement string with dollar signs ($) js\n\"Code Camp\" replace(/(\\w+)\\s(\\w+)/, '$2 $1');\nThe replace call would return the string Camp Code --instructions--\nWrite a regex fixRegex using three capture groups that will search for each word in the string one two three Then update the replaceText variable to replace one two three with the string three two one and assign the result to the result variable Make sure you are utilizing capture groups in the replacement string using the dollar sign ($) syntax --hints--\nYou should use replace() to search and replace js\nassert(__helpers removeJSComments(code) match(/\\ replace\\( *\\)/));\nYour regex should change the string one two three to the string three two one\njs\nassert(result === 'three two one');\nYou should not change the last line js\nassert(__helpers removeJSComments(code) match(/result\\s*=\\s*str\\ replace\\( * \\)/));\nfixRegex should use at least three capture groups js\nassert(new RegExp(fixRegex source + '|') exec('') length - 1 >= 3);\nreplaceText should use parenthesized submatch string(s) (i e the nth parenthesized submatch string, $n, corresponds to the nth capture group) js\n{\nconst re = /(\\$\\d{1,2})+( :[\\D]|\\b)/g;\nassert(replaceText match(re)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2540,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\use-capture-groups-to-search-and-replace.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c67ed212977573b1864a04836d6e4646",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\use-capture-groups-to-search-and-replace.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "three to the string three two one js assert(result === 'three two one'); You should not change the last line js assert(__helpers removeJSComments(code) match(/result\\s*=\\s*str\\ replace\\( * \\)/)); fixRegex should use at least three capture groups js assert(new RegExp(fixRegex source + '|') exec('') length - 1 >= 3); replaceText should use parenthesized submatch string(s) (i e the nth parenthesized submatch string, $n, corresponds to the nth capture group) js { const re = /(\\$\\d{1,2})+( :[\\D]|\\b)/g; assert(replaceText match(re)length >= 3);\n}\n--seed--\n--seed-contents--\njs\nlet str = \"one two three\";\nlet fixRegex = /change/; // Change this line\nlet replaceText = \"\"; // Change this line\nlet result = str replace(fixRegex, replaceText);\n--solutions--\njs\nlet str = \"one two three\";\nlet fixRegex = /(\\w+) (\\w+) (\\w+)/g; // Change this line\nlet replaceText = \"$3 $2 $1\"; // Change this line\nlet result = str replace(fixRegex, replaceText);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2540,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\use-capture-groups-to-search-and-replace.md",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7288ec08f65cbfae7727bee1778acae7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-upper-and-lower-number-of-matches.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7db9367417b2b2512ba5\ntitle: Specify Upper and Lower Number of Matches\nchallengeType: 1\nforumTopicId: 301367\ndashedName: specify-upper-and-lower-number-of-matches\n--description--\nRecall that you use the plus sign + to look for one or more characters and the asterisk * to look for zero or more characters These are convenient but sometimes you want to match a certain range of patterns You can specify the lower and upper number of patterns with quantity specifiers Quantity specifiers are used with curly brackets ({ and }) You put two numbers between the curly brackets - for the lower and upper number of patterns For example, to match only the letter a appearing between 3 and 5 times in the string ah, your regex would be /a{3,5}h/ js\nlet A4 = \"aaaah\";\nlet A2 = \"aah\";\nlet multipleA = /a{3,5}h/;\nmultipleA test(A4);\nmultipleA test(A2);\nThe first test call would return true, while the second would return false --instructions--\nChange the regex ohRegex to match the entire phrase Oh no only when it has 3 to 6 letter h's --hints--\nYour regex should use curly brackets js\nassert(ohRegex source match(/{ * }/) length > 0);\nYour regex should not match the string Ohh no\njs\nohRegex lastIndex = 0;\nassert( ohRegex test('Ohh no'));\nYour regex should match the string Ohhh no\njs\nassert('Ohhh no' match(ohRegex)[0] length === 7);\nYour regex should match the string Ohhhh no\njs\nassert('Ohhhh no' match(ohRegex)[0] length === 8);\nYour regex should match the string Ohhhhh no\njs\nassert('Ohhhhh no' match(ohRegex)[0] length === 9);\nYour regex should match the string Ohhhhhh no\njs\nassert('Ohhhhhh no' match(ohRegex)[0] length === 10);\nYour regex should not match the string Ohhhhhhh no\njs\nohRegex lastIndex = 0;\nassert( ohRegex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-upper-and-lower-number-of-matches.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ca9ef1cd4ae8fde296d22bad41d66869",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-upper-and-lower-number-of-matches.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Your regex should match the string Ohhh no js assert('Ohhh no' match(ohRegex)[0] length === 7); Your regex should match the string Ohhhh no js assert('Ohhhh no' match(ohRegex)[0] length === 8); Your regex should match the string Ohhhhh no js assert('Ohhhhh no' match(ohRegex)[0] length === 9); Your regex should match the string Ohhhhhh no js assert('Ohhhhhh no' match(ohRegex)[0] length === 10); Your regex should not match the string Ohhhhhhh no js ohRegex lastIndex = 0; assert( ohRegextest('Ohhhhhhh no'));\n--seed--\n--seed-contents--\njs\nlet ohStr = \"Ohhh no\";\nlet ohRegex = /change/; // Change this line\nlet result = ohRegex test(ohStr);\n--solutions--\njs\nlet ohStr = \"Ohhh no\";\nlet ohRegex = /Oh{3,6} no/; // Change this line\nlet result = ohRegex test(ohStr);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\02-javascript-algorithms-and-data-structures\\regular-expressions\\specify-upper-and-lower-number-of-matches.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7d155c9dfffb26adf2393348f59044d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\give-links-meaning-by-using-descriptive-link-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778f367417b2b2512aae\ntitle: Give Links Meaning by Using Descriptive Link Text\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c437DcV'\nforumTopicId: 301013\ndashedName: give-links-meaning-by-using-descriptive-link-text\n--description--\nScreen reader users have various options for what type of content their device reads These options include skipping to (or over) landmark elements, jumping to the main content, or getting a page summary from the headings Another option is to only hear the links available on a page Screen readers do this by reading the link text, or what's between the anchor (a) tags Having a list of \"click here\" or \"read more\" links isn't helpful Instead, use brief but descriptive text within the a tags to provide more meaning for these users --instructions--\nThe link text that Camper Cat is using is not very descriptive without the surrounding context Move the anchor (a) tags so they wrap around the text information about batteries instead of Click here --hints--\nYour code should move the anchor a tags from around the words Click here to wrap around the words information about batteries js\nassert match(document querySelector('a') textContent, /^(information about batteries)$/g);\nThe a element should have an href attribute with a value of an empty string \"\" js\nassert isEmpty(document querySelector('a') getAttribute('href'));\nThe a element should have a closing tag js\nassert isTrue(code match(/<\\/a>/g) length === code match(/<a href=(''|\"\")>/g) length);\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nDefeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speed But chin up, fellow fighters, our time for victory may soon be near Click here for information about batteries\n```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nDefeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speed But chin up, fellow fighters, our time for victory may soon be near Click here for information about batteries\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2561,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\give-links-meaning-by-using-descriptive-link-text.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c0b6a9a8a783f9d07a9881fc601b72d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\avoid-colorblindness-issues-by-using-sufficient-contrast.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778f367417b2b2512aac\ntitle: Avoid Colorblindness Issues by Using Sufficient Contrast\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cmzMEUw'\nforumTopicId: 301012\ndashedName: avoid-colorblindness-issues-by-using-sufficient-contrast\n--description--\nColor is a large part of visual design, but its use introduces two accessibility issues First, color alone should not be used as the only way to convey important information because screen reader users won't see it Second, foreground and background colors need sufficient contrast so colorblind users can distinguish them Previous challenges covered having text alternatives to address the first issue The last challenge introduced contrast checking tools to help with the second The WCAG-recommended contrast ratio of 4 5:1 applies for color use as well as gray-scale combinations Colorblind users have trouble distinguishing some colors from others - usually in hue but sometimes lightness as well You may recall the contrast ratio is calculated using the relative luminance (or lightness) values of the foreground and background colors In practice, the 4 5:1 contrast ratio can be reached by shading (adding black to) the darker color and tinting (adding white to) the lighter color Darker shades on the color wheel are considered to be shades of blues, violets, magentas, and reds, whereas lighter tinted colors are oranges, yellows, greens, and blue-greens --instructions--\nCamper Cat is experimenting with using color for his blog text and background, but his current combination of a greenish background-color with maroon text color has a 2 5:1 contrast ratio You can easily adjust the lightness of the colors since he declared them using the CSS hsl() property (which stands for hue, saturation, lightness) by changing the third argument Increase the background-color lightness value from 35% to 55%, and decrease the color lightness value from 20% to 15% This improves the contrast to 5 9:1 --hints--\nYour code should only change the lightness value for the text color property to a value of 15% js\nassert match(code ,/color:\\s* hsl\\(0,\\s* 55%,\\s* 15%\\)/gi);\nYour code should only change the lightness value for the background-color property to a value of 55%",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\avoid-colorblindness-issues-by-using-sufficient-contrast.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ac8504964c317aca38895beded5885e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\avoid-colorblindness-issues-by-using-sufficient-contrast.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "saturation, lightness) by changing the third argument Increase the background-color lightness value from 35% to 55%, and decrease the color lightness value from 20% to 15% This improves the contrast to 5 9:1 --hints-- Your code should only change the lightness value for the text color property to a value of 15% js assert match(code ,/color:\\s* hsl\\(0,\\s* 55%,\\s* 15%\\)/gi); Your code should only change the lightness value for the background-color property to a value of 55%js\nassert match(code ,/background-color:\\s* hsl\\(120,\\s* 25%,\\s* 55%\\)/gi);\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nA Word on the Recent Catnip Doping Scandal\nThe influence that catnip has on feline behavior is well-documented, and its use as an herbal supplement in competitive ninja circles remains controversial Once again, the debate to ban the substance is brought to the public's attention after the high-profile win of Kittytron, a long-time proponent and user of the green stuff, at the Claw of Fury tournament As I've stated in the past, I firmly believe a true ninja's skills must come from within, with no external influences My own catnip use shall continue as purely recreational ```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nA Word on the Recent Catnip Doping Scandal\nThe influence that catnip has on feline behavior is well-documented, and its use as an herbal supplement in competitive ninja circles remains controversial Once again, the debate to ban the substance is brought to the public's attention after the high-profile win of Kittytron, a long-time proponent and user of the green stuff, at the Claw of Fury tournament As I've stated in the past, I firmly believe a true ninja's skills must come from within, with no external influences My own catnip use shall continue as purely recreational ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\avoid-colorblindness-issues-by-using-sufficient-contrast.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f476d00a5b1bbf2d3547b1373a725ac8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-accessibility-of-audio-content-with-the-audio-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7789367417b2b2512aa4\ntitle: Improve Accessibility of Audio Content with the audio Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cVJVkcZ'\nforumTopicId: 301014\ndashedName: improve-accessibility-of-audio-content-with-the-audio-element\n--description--\nHTML5's audio element gives semantic meaning when it wraps sound or audio stream content in your markup Audio content also needs a text alternative to be accessible to people who are deaf or hard of hearing This can be done with nearby text on the page or a link to a transcript The audio tag supports the controls attribute This shows the browser default play, pause, and other controls, and supports keyboard functionality This is a boolean attribute, meaning it doesn't need a value, its presence on the tag turns the setting on Here's an example:\nhtml\n<audio id=\"meowClip\" controls>\n<source src=\"audio/meow mp3\" type=\"audio/mpeg\">\n<source src=\"audio/meow ogg\" type=\"audio/ogg\">\n</audio>\nNote: Multimedia content usually has both visual and auditory components It needs synchronized captions and a transcript so users with visual and/or auditory impairments can access it Generally, a web developer is not responsible for creating the captions or transcript, but needs to know to include them --instructions--\nTime to take a break from Camper Cat and meet fellow camper Zersiax (@zersiax), a champion of accessibility and a screen reader user To hear a clip of his screen reader in action, add an audio element after the p element Include the controls attribute Then place a source element inside the audio tags with the src attribute set to https://cdn freecodecamp org/curriculum/applied-accessibility/screen-reader mp3 and type attribute set to \"audio/mpeg\" Note: The audio clip may sound fast and be difficult to understand, but that is a normal speed for screen reader users --hints--\nYour code should have one audio tag js\nassert lengthOf(document querySelectorAll('audio'),1);\nYour audio element should have a closing tag js\nassert match(code,/<audio *>[\\s\\S]*<\\/audio>/g);\nassert lengthOf(code match(/<\\/audio>/g),1);\nThe audio tag should have the controls attribute js\nassert exists(document querySelector('audio') getAttribute('controls'));\nYour code should have one source tag js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3654,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-accessibility-of-audio-content-with-the-audio-element.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ccfd34ab6386f9aff61e892d111e8f67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-accessibility-of-audio-content-with-the-audio-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "type attribute set to \"audio/mpeg\" Note: The audio clip may sound fast and be difficult to understand, but that is a normal speed for screen reader users --hints-- Your code should have one audio tag js assert lengthOf(document querySelectorAll('audio'),1); Your audio element should have a closing tag js assert match(code,/<audio *>[\\s\\S]*<\\/audio>/g); assert lengthOf(code match(/<\\/audio>/g),1); The audio tag should have the controls attribute js assert exists(document querySelector('audio') getAttribute('controls')); Your code should have one source tag js assertlengthOf(document querySelectorAll('source'), 1);\nYour source tag should be inside the audio tags js\nconst audio = document querySelector('audio');\nconst children = audio querySelectorAll(`:scope ${'source'}`);\nassert lengthOf(children,1);\nThe value for the src attribute on the source tag should match the link in the instructions exactly js\nassert equal(\ndocument querySelector('source') getAttribute('src'),\n'https://cdn freecodecamp org/curriculum/applied-accessibility/screen-reader mp3'\n);\nYour code should include a type attribute on the source tag with a value of audio/mpeg js\nassert equal(document querySelector('source') getAttribute('type'), 'audio/mpeg');\n--seed--\n--seed-contents--\n```html\nReal Coding Ninjas\nA sound clip of Zersiax's screen reader in action ```\n--solutions--\n```html\nReal Coding Ninjas\nA sound clip of Zersiax's screen reader in action ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3654,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-accessibility-of-audio-content-with-the-audio-element.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fc224d8edf88d5bd362f9eb7cdbd2bea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-form-field-accessibility-with-the-label-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778a367417b2b2512aa6\ntitle: Improve Form Field Accessibility with the label Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cGJMMAN'\nforumTopicId: 301016\ndashedName: improve-form-field-accessibility-with-the-label-element\n--description--\nImproving accessibility with semantic HTML markup applies to using both appropriate tag names and attributes The next several challenges cover some important scenarios using attributes in forms The label tag wraps the text for a specific form control item, usually the name or label for a choice This ties meaning to the item and makes the form more readable The for attribute on a label tag explicitly associates that label with the form control and is used by screen readers You learned about radio buttons and their labels in a lesson in the Basic HTML section In that lesson, we wrapped the radio button input element inside a label element along with the label text in order to make the text clickable Another way to achieve this is by using the for attribute, as explained in this lesson The value of the for attribute must be the same as the value of the id attribute of the form control Here's an example:\n```html\nName:\n```\n--instructions--\nCamper Cat expects a lot of interest in his thoughtful blog posts and wants to include an email sign up form Add a for attribute on the email label that matches the id on its input field --hints--\nYour code should have a for attribute on the label tag that is not empty js\nassert isNotEmpty(document querySelector('label') getAttribute('for'));\nYour for attribute value should match the id value on the email input js\nassert equal(document querySelector('label') getAttribute('for'), 'email');\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nSign up to receive Camper Cat's blog posts by email here Email:\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4809,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-form-field-accessibility-with-the-label-element.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "56e5e6e9215a2dc77ce74ee2c829c4e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-form-field-accessibility-with-the-label-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "here Email: The Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speedBut chin up, fellow fighters, our time for victory may soon be near Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after But the real question is, is he a cat person © 2018 Camper Cat\n```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nSign up to receive Camper Cat's blog posts by email here Email:\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speed But chin up, fellow fighters, our time for victory may soon be near Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after But the real question is, is he a cat person © 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4809,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-form-field-accessibility-with-the-label-element.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cae5b3c4d4fa31fdfffe214ef38fb817",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-chart-accessibility-with-the-figure-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778a367417b2b2512aa5\ntitle: Improve Chart Accessibility with the figure Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cGJMqtE'\nforumTopicId: 301015\ndashedName: improve-chart-accessibility-with-the-figure-element\n--description--\nHTML5 introduced the figure element and the related figcaption Used together, these items wrap a visual representation (like an image, diagram, or chart) along with its caption Wrapping these elements together gives a two-fold accessibility boost by semantically grouping related content and providing a text alternative explaining the figure For data visualizations like charts, the caption can be used to briefly note the trends or conclusions for users with visual impairments Another challenge covers how to move a table version of the chart's data off-screen (using CSS) for screen reader users Here's an example - note that the figcaption goes inside the figure tags and can be combined with other elements:\n```html\nMaster Camper Cat demonstrates proper form of a roundhouse kick ```\n--instructions--\nCamper Cat is hard at work creating a stacked bar chart showing the amount of time per week to spend training in stealth, combat, and weapons Help him structure his page better by changing the div tag he used to a figure tag, and the p tag that surrounds the caption to a figcaption tag --hints--\nYour code should have one figure tag js\nassert lengthOf(document querySelectorAll('figure') , 1);\nYour code should have one figcaption tag js\nassert lengthOf(document querySelectorAll('figcaption') , 1);\nYour code should not have any div tags js\nassert lengthOf(document querySelectorAll('div'), 0);\nYour code should not have any p tags js\nassert lengthOf(document querySelectorAll('p') , 0);\nThe figcaption should be a child of the figure tag js\nconst figure = document querySelector('figure');\nconst children = figure querySelectorAll(`:scope ${'figcaption'}`);\nassert lengthOf(children, 1);\nYour figure element should have a closing tag js\nassert isTrue(\ncode match(/<\\/figure>/g) length === code match(/<figure>/g) length\n);\n--seed--\n--seed-contents--\n```html\nTraining\nStealth & Agility\nCombat\nWeapons\nBreakdown per week of time to spend training in stealth, combat, and weapons",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5139,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-chart-accessibility-with-the-figure-element.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1017a4468b88c4c5de3b493b9116454e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-chart-accessibility-with-the-figure-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have any p tags js assert lengthOf(document querySelectorAll('p') , 0); The figcaption should be a child of the figure tag js const figure = document querySelector('figure'); const children = figure querySelectorAll(`:scope ${'figcaption'}`); assert lengthOf(children, 1); Your figure element should have a closing tag js assert isTrue( code match(/<\\/figure>/g) length === code match(/<figure>/g) length ); --seed-- --seed-contents-- ```html Training Stealth & Agility Combat Weapons Breakdown per week of time to spend training in stealth, combat, and weaponsStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training © 2018 Camper Cat\n```\n--solutions--\n```html\nTraining\nStealth & Agility\nCombat\nWeapons\nBreakdown per week of time to spend training in stealth, combat, and weapons Stealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training © 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5139,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-chart-accessibility-with-the-figure-element.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4c83ff0a2db504f13367e271f1257828",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\jump-straight-to-the-content-using-the-main-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d774e367417b2b2512a9f\ntitle: Jump Straight to the Content Using the main Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cPp7zuE'\nforumTopicId: 301018\ndashedName: jump-straight-to-the-content-using-the-main-element\n--description--\nHTML5 introduced several new elements that give developers more options while also incorporating accessibility features. These tags include main, header, footer, nav, article, and section, among others.\nBy default, a browser renders these elements similar to the humble div. However, using them where appropriate gives additional meaning to your markup. The tag name alone can indicate the type of information it contains, which adds semantic meaning to that content. Assistive technologies can access this information to provide better page summary or navigation options to their users.\nThe main element is used to wrap (you guessed it) the main content, and there should be only one per page. It's meant to surround the information related to your page's central topic. It's not meant to include items that repeat across pages, like navigation links or banners.\nThe main tag also has an embedded landmark feature that assistive technology can use to navigate to the main content quickly. If you've ever seen a \"Jump to Main Content\" link at the top of a page, using the main tag automatically gives assistive devices that functionality.\n--instructions--\nCamper Cat has some big ideas for his ninja weapons page. Help him set up his markup by adding opening and closing main tags between the header and footer (covered in other challenges). Keep the main tags empty for now.\n--hints--\nYour code should have one main tag.\njs\nassert.lengthOf(document.querySelectorAll('main'),1);\nThe main tags should be between the closing header tag and the opening footer tag.\njs\nassert.match(code,/<\\/header>\\s*?<main>\\s*?<\\/main>/gi);\n--seed--\n--seed-contents--\n```html\nWeapons of the Ninja\n```\n--solutions--\n```html\nWeapons of the Ninja\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2180,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\jump-straight-to-the-content-using-the-main-element.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2cabc5271d634de02c052a31e5332228",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\know-when-alt-text-should-be-left-blank.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d774c367417b2b2512a9d\ntitle: Know When Alt Text Should be Left Blank\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cM9P4t2'\nforumTopicId: 301019\ndashedName: know-when-alt-text-should-be-left-blank\n--description--\nIn the last challenge, you learned that including an alt attribute when using img tags is mandatory. However, sometimes images are grouped with a caption already describing them, or are used for decoration only. In these cases, alt text may seem redundant or unnecessary.\nWhen an image is already explained with text content or does not add meaning to a page, the img still needs an alt attribute, but it can be set to an empty string. Here's an example:\nhtml\n<img src=\"visualDecoration.jpeg\" alt=\"\">\nBackground images usually fall under the 'decorative' label as well. However, they are typically applied with CSS rules, and therefore not part of the markup screen readers process.\nNote: For images with a caption, you may still want to include alt text since it helps search engines catalog the image's content.\n--instructions--\nCamper Cat has coded a skeleton page for the blog part of his website. He's planning to add a visual break between his two articles with a decorative image of a samurai sword. Add an alt attribute to the img tag and set it to an empty string. (Note that the image src doesn't link to an actual file - don't worry that there are no swords showing in the display.)\n--hints--\nYour img tag should have an alt attribute.\njs\nassert.isTrue(document.querySelector('img')?.hasAttribute('alt'));\nThe alt attribute should be set to an empty string.\njs\nassert.isEmpty(document.querySelector('img')?.getAttribute('alt'));\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nDefeating your Foe: the Red Dot is Ours!\nTo Come...\nIs Chuck Norris a Cat Person?\nTo Come...\n```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nDefeating your Foe: the Red Dot is Ours!\nTo Come...\nIs Chuck Norris a Cat Person?\nTo Come...\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\know-when-alt-text-should-be-left-blank.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a9d356d78ca7874e2b2c58129c88f46f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-readability-with-high-contrast-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778e367417b2b2512aab\ntitle: Improve Readability with High Contrast Text\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cKb3nCq'\nforumTopicId: 301017\ndashedName: improve-readability-with-high-contrast-text\n--description--\nLow contrast between the foreground and background colors can make text difficult to read Sufficient contrast improves your content's readability, but what exactly does \"sufficient\" mean The Web Content Accessibility Guidelines (WCAG) recommend at least a 4 5 to 1 contrast ratio for normal text The ratio is calculated by comparing the relative luminance values of two colors This ranges from 1:1 for the same color, or no contrast, to 21:1 for white against black, the most substantial contrast There are many contrast checking tools available online that calculate this ratio for you --instructions--\nCamper Cat's choice of light gray text on a white background for his recent blog post has a 1 5:1 contrast ratio, making it hard to read Change the color of the text from the current gray (#D3D3D3) to a darker gray (#636363) to improve the contrast ratio to 6:1 --hints--\nYour code should change the text color for the body to the darker gray js\nconst body = document querySelector('body');\nconst bodyColor = window getComputedStyle(body) color;\nassert(bodyColor == 'rgb(99, 99, 99)');\nYour code should not change the background-color for the body js\nconst body = document querySelector('body');\nconst backgroundColor = window getComputedStyle(body) backgroundColor;\nassert equal(backgroundColor , 'rgb(255, 255, 255)');\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nA Word on the Recent Catnip Doping Scandal\nThe influence that catnip has on feline behavior is well-documented, and its use as an herbal supplement in competitive ninja circles remains controversial Once again, the debate to ban the substance is brought to the public's attention after the high-profile win of Kittytron, a long-time proponent and user of the green stuff, at the Claw of Fury tournament As I've stated in the past, I firmly believe a true ninja's skills must come from within, with no external influences My own catnip use shall continue as purely recreational",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-readability-with-high-contrast-text.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f6396e2839663bf0251081c89e9174d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-readability-with-high-contrast-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "use as an herbal supplement in competitive ninja circles remains controversial Once again, the debate to ban the substance is brought to the public's attention after the high-profile win of Kittytron, a long-time proponent and user of the green stuff, at the Claw of Fury tournament As I've stated in the past, I firmly believe a true ninja's skills must come from within, with no external influences My own catnip use shall continue as purely recreational```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nA Word on the Recent Catnip Doping Scandal\nThe influence that catnip has on feline behavior is well-documented, and its use as an herbal supplement in competitive ninja circles remains controversial Once again, the debate to ban the substance is brought to the public's attention after the high-profile win of Kittytron, a long-time proponent and user of the green stuff, at the Claw of Fury tournament As I've stated in the past, I firmly believe a true ninja's skills must come from within, with no external influences My own catnip use shall continue as purely recreational ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\improve-readability-with-high-contrast-text.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9469e89b060881a9436a70519e479882",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-footer-landmark.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7788367417b2b2512aa3\ntitle: Make Screen Reader Navigation Easier with the footer Landmark\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/crVrDh8'\nforumTopicId: 301022\ndashedName: make-screen-reader-navigation-easier-with-the-footer-landmark\n--description--\nSimilar to header and nav, the footer element has a built-in landmark feature that allows assistive devices to quickly navigate to it. It's primarily used to contain copyright information or links to related documents that usually sit at the bottom of a page.\n--instructions--\nCamper Cat's training page is making good progress. Change the div he used to wrap his copyright information at the bottom of the page to a footer element.\n--hints--\nYour code should have one footer tag.\njs\nassert.lengthOf(document.querySelectorAll('footer') ,1);\nYour code should not have any div tags.\njs\nassert.lengthOf(document.querySelectorAll('div'), 0);\nYour code should have an opening and closing footer tag.\njs\nassert.match(code,/<footer>\\s*&copy; 2018 Camper Cat\\s*<\\/footer>/g);\n--seed--\n--seed-contents--\n```html\nTraining\nStealth & Agility\nCombat\nWeapons\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training?\n© 2018 Camper Cat\n```\n--solutions--\n```html\nTraining\nStealth & Agility\nCombat\nWeapons\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training?\n© 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-footer-landmark.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94c59b2a22620b7a53bf8ac0cd599119",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-header-landmark.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7787367417b2b2512aa1\ntitle: Make Screen Reader Navigation Easier with the header Landmark\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cB76vtv'\nforumTopicId: 301023\ndashedName: make-screen-reader-navigation-easier-with-the-header-landmark\n--description--\nThe next HTML5 element that adds semantic meaning and improves accessibility is the header tag It's used to wrap introductory information or navigation links for its parent tag and works well around content that's repeated at the top on multiple pages header shares the embedded landmark feature you saw with main, allowing assistive technologies to quickly navigate to that content Note: The header is meant for use in the body tag of your HTML document It is different than the head element, which contains the page's title, meta information, etc --instructions--\nCamper Cat is writing some great articles about ninja training, and wants to add a page for them to his site Change the top div that currently contains the h1 to a header tag instead --hints--\nYour code should have one header tag js\nassert lengthOf(document querySelectorAll('header'),1);\nYour header tags should wrap around the h1 js\nconst header = document querySelector('header');\nconst children = header querySelectorAll(`:scope ${'h1'}`);\nassert lengthOf(children , 1);\nYour code should not have any div tags js\nassert lengthOf(document querySelectorAll('div') , 0);\nYour header element should have a closing tag js\nassert isTrue(code match(/<\\/header>/g) length === code match(/<header>/g) length);\n--seed--\n--seed-contents--\n```html\nTraining with Camper Cat\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3425,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-header-landmark.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "af2d7a29235fd0db63b0c297068bbe07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-header-landmark.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "element should have a closing tag js assert isTrue(code match(/<\\/header>/g) length === code match(/<header>/g) length); --seed-- --seed-contents-- ```html Training with Camper Cat Stealth & Agility Training Climb foliage quickly using a minimum spanning tree approach No training is NP-complete without parkour Combat Training Dispatch multiple enemies with multithreaded tactics Goodbye world: 5 proven ways to knock out an opponent Weapons Training Swords: the best tool to literally divide and conquer Breadth-first or depth-first in multi-weapon training```\n--solutions--\n```html\nTraining with Camper Cat\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3425,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-header-landmark.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ca45620a54fe12b3aa751d7b269cd7ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-links-navigable-with-html-access-keys.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7790367417b2b2512aaf\ntitle: Make Links Navigable with HTML Access Keys\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cQvmaTp'\nforumTopicId: 301021\ndashedName: make-links-navigable-with-html-access-keys\n--description--\nHTML offers the accesskey attribute to specify a shortcut key to activate or bring focus to an element Adding an accesskey attribute can make navigation more efficient for keyboard-only users HTML5 allows this attribute to be used on any element, but it's particularly useful when it's used with interactive ones This includes links, buttons, and form controls Here's an example:\nhtml\n<button accesskey=\"b\">Important Button</button>\n--instructions--\nCamper Cat wants the links around the two blog article titles to have keyboard shortcuts so his site's users can quickly navigate to the full story Add an accesskey attribute to both links and set the first one to g (for Garfield) and the second one to c (for Chuck Norris) --hints--\nYour code should add an accesskey attribute to the a tag with the id of first js\nassert isTrue(document querySelector('#first') hasAttribute('accesskey'));\nYour code should add an accesskey attribute to the a tag with the id of second js\nassert isTrue(document querySelector('#second') hasAttribute('accesskey'));\nYour code should set the accesskey attribute on the a tag with the id of first to g Note that case matters js\nassert equal(document querySelector('#first') getAttribute('accesskey'), 'g');\nYour code should set the accesskey attribute on the a tag with the id of second to c Note that case matters js\nassert equal(document querySelector('#second') getAttribute('accesskey'), 'c');\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-links-navigable-with-html-access-keys.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c240087894a11a1b34c09e3e93608659",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-links-navigable-with-html-access-keys.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon afterBut the real question is, is he a cat person © 2018 Camper Cat\n```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after But the real question is, is he a cat person © 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-links-navigable-with-html-access-keys.md",
      "source_type": "git_repo"
    },
    "token_count": 255,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5dbe8b92294b706a282481d4470a8761",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-nav-landmark.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7788367417b2b2512aa2\ntitle: Make Screen Reader Navigation Easier with the nav Landmark\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/czVwWSv'\nforumTopicId: 301024\ndashedName: make-screen-reader-navigation-easier-with-the-nav-landmark\n--description--\nThe nav element is another HTML5 item with the embedded landmark feature for easy screen reader navigation This tag is meant to wrap around the main navigation links in your page If there are repeated site links at the bottom of the page, it isn't necessary to markup those with a nav tag as well Using a footer (covered in the next challenge) is sufficient --instructions--\nCamper Cat included navigation links at the top of his training page, but wrapped them in a div Change the div to a nav tag to improve the accessibility on his page --hints--\nYour code should have one nav tag js\nassert lengthOf(document querySelectorAll('nav') , 1);\nYour nav tags should wrap around the ul and its list items js\nconst nav = document querySelector('nav');\nconst children = nav querySelectorAll(`:scope ${'ul'}`);\nassert lengthOf(children,1);\nYour code should not have any div tags js\nassert lengthOf(document querySelectorAll('div') , 0);\nYour nav element should have a closing tag js\nassert isTrue(code match(/<\\/nav>/g) length === code match(/<nav>/g) length);\n--seed--\n--seed-contents--\n```html\nTraining with Camper Cat\nStealth & Agility\nCombat\nWeapons\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-nav-landmark.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5ad5a6030f6731ad7772b7046aa03ffa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-nav-landmark.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "tag js assert isTrue(code match(/<\\/nav>/g) length === code match(/<nav>/g) length); --seed-- --seed-contents-- ```html Training with Camper Cat Stealth & Agility Combat Weapons Stealth & Agility Training Climb foliage quickly using a minimum spanning tree approach No training is NP-complete without parkour Combat Training Dispatch multiple enemies with multithreaded tactics Goodbye world: 5 proven ways to knock out an opponent Weapons Training Swords: the best tool to literally divide and conquer Breadth-first or depth-first in multi-weapon training```\n--solutions--\n```html\nTraining with Camper Cat\nStealth & Agility\nCombat\nWeapons\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-screen-reader-navigation-easier-with-the-nav-landmark.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "14a6335f777b9bc59b9330bf79043d00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-elements-only-visible-to-a-screen-reader-by-using-custom-css.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778d367417b2b2512aaa\ntitle: Make Elements Only Visible to a Screen Reader by Using Custom CSS\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cJ8QGkhJ'\nforumTopicId: 301020\ndashedName: make-elements-only-visible-to-a-screen-reader-by-using-custom-css\n--description--\nHave you noticed that all of the applied accessibility challenges so far haven't used any CSS This shows the importance of using a logical document outline and semantically meaningful tags around your content before introducing the visual design aspect However, CSS's magic can also improve accessibility on your page when you want to visually hide content meant only for screen readers This happens when information is in a visual format (like a chart), but screen reader users need an alternative presentation (like a table) to access the data CSS is used to position the screen reader-only elements off the visual area of the browser window Here's an example of the CSS rules that accomplish this:\ncss sr-only {\nposition: absolute;\nleft: -10000px;\nwidth: 1px;\nheight: 1px;\ntop: auto;\noverflow: hidden;\n}\nNote: The following CSS approaches will NOT do the same thing:\ndisplay: none; or visibility: hidden; hides content for everyone, including screen reader users\nZero values for pixel sizes, such as width: 0px; height: 0px; removes that element from the flow of your document, meaning screen readers will ignore it\n--instructions--\nCamper Cat created a really cool stacked bar chart for his training page, and put the data into a table for his visually impaired users The table already has an sr-only class, but the CSS rules aren't filled in yet Give the position an absolute value, the left a -10000px value, and the width and height both 1px values --hints--\nYour code should set the position property of the sr-only class to a value of absolute js\nconst srOnly = document querySelector(' sr-only');\nconst position = window getComputedStyle(srOnly) position;\nassert equal(position, 'absolute');\nYour code should set the left property of the sr-only class to a value of -10000px js\nconst srOnly = document querySelector(' sr-only');\nconst left = window getComputedStyle(srOnly) left;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7473,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-elements-only-visible-to-a-screen-reader-by-using-custom-css.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "39cfdabbd97076239b74b2875639b51c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-elements-only-visible-to-a-screen-reader-by-using-custom-css.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the left a -10000px value, and the width and height both 1px values --hints-- Your code should set the position property of the sr-only class to a value of absolute js const srOnly = document querySelector(' sr-only'); const position = window getComputedStyle(srOnly) position; assert equal(position, 'absolute'); Your code should set the left property of the sr-only class to a value of -10000px js const srOnly = document querySelector(' sr-only'); const left = window getComputedStyle(srOnly) left; assertequal(left, '-10000px');\nYour code should set the width property of the sr-only class to a value of 1 pixel js\nassert match(code , /width:\\s* 1px/gi);\nYour code should set the height property of the sr-only class to a value of 1 pixel js\nassert match(code , /height:\\s* 1px/gi);\n--seed--\n--seed-contents--\n```html\nTraining\nStealth & Agility\nCombat\nWeapons\nMaster Camper Cat's Beginner Three Week Training Program\n[Stacked bar chart]\nBreakdown per week of time to spend training in stealth, combat, and weapons Hours of Weekly Training in Stealth, Combat, and Weapons\nStealth & Agility\nCombat\nWeapons\nTotal\nWeek One\n3\n5\n2\n10\nWeek Two\n4\n5\n3\n12\nWeek Three\n4\n6\n3\n13\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye, world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training © 2018 Camper Cat\n```\n--solutions--\n```html\nTraining\nStealth & Agility\nCombat\nWeapons\nMaster Camper Cat's Beginner Three Week Training Program\n[Stacked bar chart]\nBreakdown per week of time to spend training in stealth, combat, and weapons",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7473,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-elements-only-visible-to-a-screen-reader-by-using-custom-css.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0272640015ed429779bb8f22170af48a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-elements-only-visible-to-a-screen-reader-by-using-custom-css.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is NP-complete without parkour Combat Training Dispatch multiple enemies with multithreaded tactics Goodbye, world: 5 proven ways to knock out an opponent Weapons Training Swords: the best tool to literally divide and conquer Breadth-first or depth-first in multi-weapon training © 2018 Camper Cat ``` --solutions-- ```html Training Stealth & Agility Combat Weapons Master Camper Cat's Beginner Three Week Training Program [Stacked bar chart] Breakdown per week of time to spend training in stealth, combat, and weaponsHours of Weekly Training in Stealth, Combat, and Weapons\nStealth & Agility\nCombat\nWeapons\nTotal\nWeek One\n3\n5\n2\n10\nWeek Two\n4\n5\n3\n12\nWeek Three\n4\n6\n3\n13\nStealth & Agility Training\nClimb foliage quickly using a minimum spanning tree approach\nNo training is NP-complete without parkour\nCombat Training\nDispatch multiple enemies with multithreaded tactics\nGoodbye, world: 5 proven ways to knock out an opponent\nWeapons Training\nSwords: the best tool to literally divide and conquer\nBreadth-first or depth-first in multi-weapon training © 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7473,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\make-elements-only-visible-to-a-screen-reader-by-using-custom-css.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9ad4d9750f8a2b221dbe397d97359cc2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-add-keyboard-focus-to-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7790367417b2b2512ab0\ntitle: Use tabindex to Add Keyboard Focus to an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cmzMDHW'\nforumTopicId: 301027\ndashedName: use-tabindex-to-add-keyboard-focus-to-an-element\n--description--\nThe HTML tabindex attribute has three distinct functions relating to an element's keyboard focus When it's on a tag, it indicates that the element can be focused on The value (an integer that's positive, negative, or zero) determines the behavior Certain elements, such as links and form controls, automatically receive keyboard focus when a user tabs through a page It's in the same order as the elements come in the HTML source markup This same functionality can be given to other elements, such as div, span, and p, by placing a tabindex=\"0\" attribute on them Here's an example:\n```html\nI need keyboard focus ```\nNote: A negative tabindex value (typically -1) indicates that an element is focusable, but is not reachable by the keyboard This method is generally used to bring focus to content programmatically (like when a div used for a pop-up window is activated), and is beyond the scope of these challenges --instructions--\nCamper Cat created a new survey to collect information about his users He knows input fields automatically get keyboard focus, but he wants to make sure his keyboard users pause at the instructions while tabbing through the items Add a tabindex attribute to the p tag and set its value to 0 Bonus - using tabindex also enables the CSS pseudo-class :focus to work on the p tag --hints--\nYour code should add a tabindex attribute to the p tag that holds the form instructions js\nassert isNotNull(document querySelector('p') getAttribute('tabindex'));\nYour code should set the tabindex attribute on the p tag to a value of 0 js\nassert equal(document querySelector('p') getAttribute('tabindex'), '0');\n--seed--\n--seed-contents--\n```html\nNinja Survey\nInstructions: Fill in ALL your information then click Submit\nUsername:\nWhat level ninja are you",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5172,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-add-keyboard-focus-to-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1d2dd776b1514ccc6430251dcaba7bb3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-add-keyboard-focus-to-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "also enables the CSS pseudo-class :focus to work on the p tag --hints-- Your code should add a tabindex attribute to the p tag that holds the form instructions js assert isNotNull(document querySelector('p') getAttribute('tabindex')); Your code should set the tabindex attribute on the p tag to a value of 0 js assert equal(document querySelector('p') getAttribute('tabindex'), '0'); --seed-- --seed-contents-- ```html Ninja Survey Instructions: Fill in ALL your information then click Submit Username: What level ninja are youNewbie Kitten\nDeveloping Student\n9th Life Master\nSelect your favorite weapons:\nThrowing Stars\nNunchucks\nSai Set\nSword\n© 2018 Camper Cat\n```\n--solutions--\n```html\nNinja Survey\nInstructions: Fill in ALL your information then click Submit\nUsername:\nWhat level ninja are you Newbie Kitten\nDeveloping Student\n9th Life Master\nSelect your favorite weapons:\nThrowing Stars\nNunchucks\nSai Set\nSword\n© 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5172,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-add-keyboard-focus-to-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "815eb720ac81ebae113e3c284adbe6c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\standardize-times-with-the-html5-datetime-attribute.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778c367417b2b2512aa9\ntitle: Standardize Times with the HTML5 datetime Attribute\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cmzMgtz'\nforumTopicId: 301025\ndashedName: standardize-times-with-the-html5-datetime-attribute\n--description--\nContinuing with the date theme, HTML5 also introduced the time element along with a datetime attribute to standardize times The time element is an inline element that can wrap a date or time on a page A datetime attribute holds a valid format of that date This is the value accessed by assistive devices It helps avoid confusion by stating a standardized version of a time, even if it's informally or colloquially written in the text Here's an example:\n```html\nMaster Camper Cat officiated the cage match between Goro and Scorpion last Wednesday, which ended in a draw ```\n--instructions--\nCamper Cat's Mortal Kombat survey results are in Wrap a time tag around the text Thursday, September 15<sup>th</sup> and add a datetime attribute to it set to 2016-09-15 --before-all--\n```js\nconst getTimeElement = () => {\nconst pElement = [ document querySelectorAll(\"article > p\")] filter(x => x textContent includes(\"Thank you to everyone for responding to Master Camper Cat's survey \"));\nreturn pElement[0] pElement[0] querySelector(\"time\") : null;\n};\nconst getDatetimeAttr = () => {\nconst timeElement = getTimeElement();\nreturn timeElement getAttribute(\"datetime\");\n};\n```\n--hints--\nYour code should have a p element which includes the text Thank you to everyone for responding to Master Camper Cat's survey and include a time element js\nassert exists(getTimeElement());\nYour added time tags should wrap around the text Thursday, September 15<sup>th</sup> js\nassert strictEqual(getTimeElement() innerHTML trim(), 'Thursday, September 15<sup>th</sup>');\nYour added time tag should have a datetime attribute that is not empty js\nassert(getDatetimeAttr() length = 0);\nYour added datetime attribute should be set to a value of 2016-09-15 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4419,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\standardize-times-with-the-html5-datetime-attribute.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b9c015f1b5499794a5c68780504eafe3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\standardize-times-with-the-html5-datetime-attribute.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "element which includes the text Thank you to everyone for responding to Master Camper Cat's survey and include a time element js assert exists(getTimeElement()); Your added time tags should wrap around the text Thursday, September 15<sup>th</sup> js assert strictEqual(getTimeElement() innerHTML trim(), 'Thursday, September 15<sup>th</sup>'); Your added time tag should have a datetime attribute that is not empty js assert(getDatetimeAttr() length = 0); Your added datetime attribute should be set to a value of 2016-09-15 js assertequal(getDatetimeAttr() , '2016-09-15');\n--seed--\n--seed-contents--\n```html\nTournaments\nMortal Kombat Tournament Survey Results\nThank you to everyone for responding to Master Camper Cat's survey The best day to host the vaunted Mortal Kombat tournament is Thursday, September 15th May the best ninja win Comments:\nPosted by: Sub-Zero on August 13th\nJohnny Cage better be there, I'll finish him Posted by: Doge on August 15th\nWow, much combat, so mortal Posted by: The Grim Reaper on August 16th\nLooks like I'll be busy that day © 2018 Camper Cat\n```\n--solutions--\n```html\nTournaments\nMortal Kombat Tournament Survey Results\nThank you to everyone for responding to Master Camper Cat's survey The best day to host the vaunted Mortal Kombat tournament is Thursday, September 15th May the best ninja win Comments:\nPosted by: Sub-Zero on August 13th\nJohnny Cage better be there, I'll finish him Posted by: Doge on August 15th\nWow, much combat, so mortal Posted by: The Grim Reaper on August 16th\nLooks like I'll be busy that day © 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4419,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\standardize-times-with-the-html5-datetime-attribute.md",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6890454d55f16398a6c5c7318f335955",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-headings-to-show-hierarchical-relationships-of-content.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d774d367417b2b2512a9e\ntitle: Use Headings to Show Hierarchical Relationships of Content\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cqVEktm'\nforumTopicId: 301026\ndashedName: use-headings-to-show-hierarchical-relationships-of-content\n--description--\nHeadings (h1 through h6 elements) are workhorse tags that help provide structure and labeling to your content Screen readers can be set to read only the headings on a page so the user gets a summary This means it is important for the heading tags in your markup to have semantic meaning and relate to each other, not be picked merely for their size values Semantic meaning means that the tag you use around content indicates the type of information it contains If you were writing a paper with an introduction, a body, and a conclusion, it wouldn't make much sense to put the conclusion as a subsection of the body in your outline It should be its own section Similarly, the heading tags in a webpage need to go in order and indicate the hierarchical relationships of your content Headings with equal (or higher) rank start new implied sections, headings with lower rank start subsections of the previous one As an example, a page with an h2 element followed by several subsections labeled with h4 elements would confuse a screen reader user With six choices, it's tempting to use a tag because it looks better in a browser, but you can use CSS to edit the relative sizing One final point, each page should always have one (and only one) h1 element, which is the main subject of your content This and the other headings are used in part by search engines to understand the topic of the page --instructions--\nCamper Cat wants a page on his site dedicated to becoming a ninja Help him fix the headings so his markup gives semantic meaning to the content, and shows the proper parent-child relationships of his sections Change all the h5 tags to the proper heading level to indicate they are subsections of the h2 ones Use h3 tags for the purpose --hints--\nYour code should have 6 h3 elements js\nassert lengthOf(document querySelectorAll('h3') , 6);\nYour code should have 6 h3 closing tags js\nassert lengthOf((code match(/\\/h3/g) || []) ,6);\nYour code should not have any h5 elements js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-headings-to-show-hierarchical-relationships-of-content.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c73ded66d0db70d67195dd11febbda0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-headings-to-show-hierarchical-relationships-of-content.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to the content, and shows the proper parent-child relationships of his sections Change all the h5 tags to the proper heading level to indicate they are subsections of the h2 ones Use h3 tags for the purpose --hints-- Your code should have 6 h3 elements js assert lengthOf(document querySelectorAll('h3') , 6); Your code should have 6 h3 closing tags js assert lengthOf((code match(/\\/h3/g) || []) ,6); Your code should not have any h5 elements js assertisEmpty(document querySelectorAll('h5'));\nYour code should not have any h5 closing tags js\nassert notMatch(code, /\\/h5/);\n--seed--\n--seed-contents--\n```html\nHow to Become a Ninja\nLearn the Art of Moving Stealthily\nHow to Hide in Plain Sight\nHow to Climb a Wall\nLearn the Art of Battle\nHow to Strengthen your Body\nHow to Fight like a Ninja\nLearn the Art of Living with Honor\nHow to Breathe Properly\nHow to Simplify your Life\n```\n--solutions--\n```html\nHow to Become a Ninja\nLearn the Art of Moving Stealthily\nHow to Hide in Plain Sight\nHow to Climb a Wall\nLearn the Art of Battle\nHow to Strengthen your Body\nHow to Fight like a Ninja\nLearn the Art of Living with Honor\nHow to Breathe Properly\nHow to Simplify your Life\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-headings-to-show-hierarchical-relationships-of-content.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b22a682db510dc51cfd163c705f824c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7790367417b2b2512ab1\ntitle: Use tabindex to Specify the Order of Keyboard Focus for Several Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cmzRRcb'\nforumTopicId: 301028\ndashedName: use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements\n--description--\nThe tabindex attribute also specifies the exact tab order of elements This is achieved when the attribute's value is set to a positive number of 1 or higher Setting a tabindex=\"1\" will bring keyboard focus to that element first Then it cycles through the sequence of specified tabindex values (2, 3, etc ), before moving to default and tabindex=\"0\" items It's important to note that when the tab order is set this way, it overrides the default order (which uses the HTML source) This may confuse users who are expecting to start navigation from the top of the page This technique may be necessary in some circumstances, but in terms of accessibility, take care before applying it Here's an example:\n```html\nI get keyboard focus, and I get it first ```\n```html\nI get keyboard focus, and I get it second ```\n--instructions--\nCamper Cat has a search field on his Inspirational Quotes page that he plans to position in the upper right corner with CSS He wants the search input and submit input form controls to be the first two items in the tab order Add a tabindex attribute set to 1 to the search input, and a tabindex attribute set to 2 to the submit input Another thing to note is that some browsers may place you in the middle of your tab order when an element is clicked An element has been added to the page that ensures you will always start at the beginning of your tab order --hints--\nYour code should add a tabindex attribute to the search input tag js\nassert isNotNull(document querySelector('#search') getAttribute('tabindex'));\nYour code should add a tabindex attribute to the submit input tag js\nassert isNotNull(document querySelector('#submit') getAttribute('tabindex'));\nYour code should set the tabindex attribute on the search input tag to a value of 1 js\nassert equal(document querySelector('#search') getAttribute('tabindex'), '1');\nYour code should set the tabindex attribute on the submit input tag to a value of 2 js\nassert equal(document querySelector('#submit')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4683,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c56ce62520b155218c64510b6ef15f8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should add a tabindex attribute to the search input tag js assert isNotNull(document querySelector('#search') getAttribute('tabindex')); Your code should add a tabindex attribute to the submit input tag js assert isNotNull(document querySelector('#submit') getAttribute('tabindex')); Your code should set the tabindex attribute on the search input tag to a value of 1 js assert equal(document querySelector('#search') getAttribute('tabindex'), '1'); Your code should set the tabindex attribute on the submit input tag to a value of 2 js assert equal(document querySelector('#submit')getAttribute('tabindex'), '2');\n--seed--\n--seed-contents--\n```html\nEven Deeper Thoughts with Master Camper Cat\nHome\nBlog\nTraining\nSearch:\nInspirational Quotes\n“There's no Theory of Evolution, just a list of creatures I've allowed to live ”\n- Chuck Norris\n“Wise men say forgiveness is divine, but never pay full price for late pizza ”\n- TMNT\n© 2018 Camper Cat\n```\n--solutions--\n```html\nEven Deeper Thoughts with Master Camper Cat\nHome\nBlog\nTraining\nSearch:\nInspirational Quotes\n“There's no Theory of Evolution, just a list of creatures I've allowed to live ”\n- Chuck Norris\n“Wise men say forgiveness is divine, but never pay full price for late pizza ”\n- TMNT\n© 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4683,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "27fdb193aabbfecf0f9f76eecc6c8d65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-content-in-the-article-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d774e367417b2b2512aa0\ntitle: Wrap Content in the article Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cPp79S3'\nforumTopicId: 301029\ndashedName: wrap-content-in-the-article-element\n--description--\narticle is another one of the new HTML5 elements that add semantic meaning to your markup article is a sectioning element and is used to wrap independent, self-contained content The tag works well with blog entries, forum posts, or news articles Determining whether content can stand alone is usually a judgment call, but you can use a couple of simple tests Ask yourself if you removed all surrounding context, would that content still make sense Similarly, for text, would the content hold up if it were in an RSS feed Remember that folks using assistive technologies rely on organized, semantically meaningful markup to better understand your work Note: The section element is also new with HTML5, and has a slightly different semantic meaning than article An article is for standalone content, and a section is for grouping thematically related content They can be used within each other, as needed For example, if a book is the article, then each chapter is a section When there's no relationship between groups of content, then use a div <div> - groups content\n<section> - groups related content\n<article> - groups independent, self-contained content\n--instructions--\nCamper Cat used article tags to wrap the posts on his blog page, but he forgot to use them around the top one Change the div tag to use an article tag instead --hints--\nYour code should have three article tags js\nassert lengthOf(document querySelectorAll('article') ,3);\nYour code should not have any div tags js\nassert lengthOf(document querySelectorAll('div'), 0);\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-content-in-the-article-element.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fcb3eb18ba86d8ef1316ccdd7501ed6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-content-in-the-article-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Camper Cat The Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speedBut chin up, fellow fighters, our time for victory may soon be near Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after But the real question is, is he a cat person ```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speed But chin up, fellow fighters, our time for victory may soon be near Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after But the real question is, is he a cat person ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-content-in-the-article-element.md",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "81f6a2583dab3883ef6ffec6a071b336",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\add-a-box-shadow-to-a-card-like-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781b367417b2b2512abe\ntitle: Add a box-shadow to a Card-like Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cvVZdUd'\nforumTopicId: 301031\ndashedName: add-a-box-shadow-to-a-card-like-element\n--description--\nThe box-shadow property applies one or more shadows to an element The box-shadow property takes the following values, in order:\noffset-x (how far to push the shadow horizontally from the element)\noffset-y (how far to push the shadow vertically from the element)\nblur-radius\nspread-radius\ncolor\nThe blur-radius and spread-radius values are optional Multiple box-shadows can be created by using commas to separate properties of each box-shadow element Here's an example of the CSS to create multiple shadows with some blur, at mostly-transparent black colors:\ncss\nbox-shadow: 0 10px 20px rgba(0,0,0,0 19), 0 6px 6px rgba(0,0,0,0 23);\n--instructions--\nThe element now has an id of thumbnail With this selector, use the example CSS values above to place a box-shadow on the card --hints--\nYour code should add a box-shadow property for the thumbnail id js\nassert match(code,(/#thumbnail\\s* {\\s* box-shadow/g));\nYou should use the given CSS for the box-shadow value js\nassert(\ncode match(\n/box-shadow:\\s* 0\\s+ 10px\\s+ 20px\\s+ rgba\\(\\s* 0\\s* ,\\s* 0\\s* ,\\s* 0\\s* ,\\s* 0 \\ 19\\)\\s* ,\\s* 0\\s+ 6px\\s+ 6px\\s+ rgba\\(\\s* 0\\s* ,\\s* 0\\s* ,\\s* 0\\s* ,\\s* 0 \\ 23\\)/gi\n)\n);\n--seed--\n--seed-contents--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph D students at Stanford University Larry Page\nSergey Brin\n```\n--solutions--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph D students at Stanford University Larry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3759,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\add-a-box-shadow-to-a-card-like-element.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "067bbe75ce923b0d7a1dfde5b4f2422b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d778b367417b2b2512aa7\ntitle: Wrap Radio Buttons in a fieldset Element for Better Accessibility\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cVJVefw'\nforumTopicId: 301030\ndashedName: wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility\n--description--\nThe next form topic covers the accessibility of radio buttons Each choice is given a label with a for attribute tying to the id of the corresponding item as covered in the last challenge Since radio buttons often come in a group where the user must choose one, there's a way to semantically show the choices are part of a set The fieldset tag surrounds the entire grouping of radio buttons to achieve this It often uses a legend tag to provide a description for the grouping, which screen readers read for each choice in the fieldset element The fieldset wrapper and legend tag are not necessary when the choices are self-explanatory, like a gender selection Using a label with the for attribute for each radio button is sufficient Here's an example:\n```html\nChoose one of these three items:\nChoice One\nChoice Two\nChoice Three\n```\n--instructions--\nCamper Cat wants information about the ninja level of his users when they sign up for his email list He's added a set of radio buttons and learned from our last lesson to use label tags with for attributes for each choice Go Camper Cat However, his code still needs some help Change the div tag surrounding the radio buttons to a fieldset tag, and change the p tag inside it to a legend --hints--\nYour code should have a fieldset tag around the radio button set js\nassert lengthOf(document querySelectorAll('fieldset'),1);\nThe fieldset element should have a closing tag js\nassert isTrue(code match(/<\\/fieldset>/g) length === code match(/<fieldset>/g) length);\nYour code should have a legend tag around the text asking what level ninja a user is js\nassert lengthOf(document querySelectorAll('legend') ,1);\nYour code should not have any div tags js\nassert lengthOf(document querySelectorAll('div') ,0);\nYour code should no longer have a p tag around the text asking what level ninja a user is js\nassert lengthOf(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "617e5674c67f5883e950ad5a3850f431",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "lengthOf(document querySelectorAll('fieldset'),1); The fieldset element should have a closing tag js assert isTrue(code match(/<\\/fieldset>/g) length === code match(/<fieldset>/g) length); Your code should have a legend tag around the text asking what level ninja a user is js assert lengthOf(document querySelectorAll('legend') ,1); Your code should not have any div tags js assert lengthOf(document querySelectorAll('div') ,0); Your code should no longer have a p tag around the text asking what level ninja a user is js assert lengthOf(documentquerySelectorAll('p') ,4);\n--seed--\n--seed-contents--\n```html\nDeep Thoughts with Master Camper Cat\nSign up to receive Camper Cat's blog posts by email here Email:\nWhat level ninja are you Newbie Kitten\nDeveloping Student\nMaster\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes This red nemesis combines both cunning stealth and lightning speed But chin up, fellow fighters, our time for victory may soon be near Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after But the real question is, is he a cat person © 2018 Camper Cat\n```\n--solutions--\n```html\nDeep Thoughts with Master Camper Cat\nSign up to receive Camper Cat's blog posts by email here Email:\nWhat level ninja are you Newbie Kitten\nDeveloping Student\nMaster\nThe Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "07181df2ff0e99989876d53ea3312070",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "here Email: What level ninja are you Newbie Kitten Developing Student Master The Garfield Files: Lasagna as Training Fuel The internet is littered with varying opinions on nutritional paradigms, from catnip paleo to hairball cleanses But let's turn our attention to an often overlooked fitness fuel, and examine the protein-carb-NOM trifecta that is lasagna Defeating your Foe: the Red Dot is Ours Felines the world over have been waging war on the most persistent of foesThis red nemesis combines both cunning stealth and lightning speed But chin up, fellow fighters, our time for victory may soon be near Is Chuck Norris a Cat Person Chuck Norris is widely regarded as the premier martial artist on the planet, and it's a complete coincidence that anyone who disagrees with this fact mysteriously disappears soon after But the real question is, is he a cat person © 2018 Camper Cat\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-accessibility\\wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ca2c19ba28f22fadff9d66b8f798a68b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-height-of-an-element-using-the-height-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7791367417b2b2512ab5\ntitle: Adjust the Height of an Element Using the height Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cEDaDTN'\nforumTopicId: 301034\ndashedName: adjust-the-height-of-an-element-using-the-height-property\n--description--\nYou can specify the height of an element using the height property in CSS, similar to the width property. Here's an example that changes the height of an image to 20px:\ncss\nimg {\nheight: 20px;\n}\n--instructions--\nAdd a height property to the h4 tag and set it to 25px.\nNote: You may need to be at 100% zoom to pass the test on this challenge.\n--hints--\nYour code should change the h4 height property to a value of 25 pixels.\njs\nconst spaceFreeText = document.querySelector(\"style:not(.fcc-hide-header)\")?.textContent?.replace(/\\s/g, '');\nconst h4Element = document.querySelector('h4');\nassert.equal(Math.round(h4Element?.getBoundingClientRect()?.height),25);\nassert.match(spaceFreeText,/h4{\\S*height:25px(;\\S*}|})/);\n--seed--\n--seed-contents--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2738,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-height-of-an-element-using-the-height-property.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "93c0849b22156ce9b87ba538fd71bec5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-hover-state-of-an-anchor-tag.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781d367417b2b2512ac8\ntitle: Adjust the Hover State of an Anchor Tag\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cakRGcm'\nforumTopicId: 301035\ndashedName: adjust-the-hover-state-of-an-anchor-tag\n--description--\nThis challenge will touch on the usage of pseudo-classes. A pseudo-class is a keyword that can be added to selectors, in order to select a specific state of the element.\nFor example, the styling of an anchor tag can be changed for its hover state using the :hover pseudo-class selector. Here's the CSS to change the color of the anchor tag to red during its hover state:\ncss\na:hover {\ncolor: red;\n}\n--instructions--\nThe code editor has a CSS rule to style all a tags black. Add a rule so that when the user hovers over the a tag, the color is blue.\n--hints--\nThe anchor tag color should remain black, only add CSS rules for the :hover state.\njs\nconst anchorElement = document.querySelector(\"a\");\nconst anchorStyle = window.getComputedStyle(anchorElement);\nassert.equal(anchorStyle?.color, 'rgb(0, 0, 0)');\nThe anchor tag should have a color of blue on hover.\njs\nassert.match(code,\n/a:hover\\s*?{\\s*?color:\\s*?(blue|rgba\\(\\s*?0\\s*?,\\s*?0\\s*?,\\s*?255\\s*?,\\s*?1\\s*?\\)|#00F|rgb\\(\\s*?0\\s*?,\\s*?0\\s*?,\\s*?255\\s*?\\))\\s*?;\\s*?}/gi\n);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\n```\n--solutions--\n```html\nCatPhotoApp\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1674,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-hover-state-of-an-anchor-tag.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f018304ed70a6e6d24ed43810751ec71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-background-color-property-of-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781b367417b2b2512abc\ntitle: Adjust the background-color Property of Text\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cEDqwA6'\nforumTopicId: 301032\ndashedName: adjust-the-background-color-property-of-text\n--description--\nInstead of adjusting your overall background or the color of the text to make the foreground easily readable, you can add a background-color to the element holding the text you want to emphasize This challenge uses rgba() instead of hex codes or normal rgb() rgba stands for:  r = red  g = green  b = blue  a = alpha/level of opacity\nThe RGB values can range from 0 to 255 The alpha value can range from 1, which is fully opaque or a solid color, to 0, which is fully transparent or clear rgba() is great to use in this case, as it allows you to adjust the opacity This means you don't have to completely block out the background You'll use background-color: rgba(45, 45, 45, 0 1) for this challenge It produces a dark gray color that is nearly transparent given the low opacity value of 0 1 --instructions--\nTo make the text stand out more, adjust the background-color of the h4 element to the given rgba() value Also for the h4, remove the height property and add padding of 10px --hints--\nYour code should add a background-color property to the h4 element set to rgba(45, 45, 45, 0 1) js\nassert(\n/(background-color|background):rgba\\(45,45,45,0 \\ 1\\)(; }|;)/gi test(\ncode replace(/\\s/g, '')\n)\n);\nYour code should add a padding property to the h4 element and set it to 10 pixels js\nconst h4Element = document querySelector(\"h4\");\nconst h4style = window getComputedStyle(h4Element);\nassert equal(h4style paddingTop, \"10px\");\nassert equal(h4style paddingRight, \"10px\");\nassert equal(h4style paddingBottom, \"10px\");\nassert equal(h4style paddingLeft, \"10px\");\nThe height property on the h4 element should be removed js\nconst h4Element = document querySelector(\"h4\");\nconst h4style = window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4109,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-background-color-property-of-text.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e959baf9699757484a2604223a74fd56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-background-color-property-of-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert( /(background-color|background):rgba\\(45,45,45,0 \\ 1\\)(; }|;)/gi test( code replace(/\\s/g, '') ) ); Your code should add a padding property to the h4 element and set it to 10 pixels js const h4Element = document querySelector(\"h4\"); const h4style = window getComputedStyle(h4Element); assert equal(h4style paddingTop, \"10px\"); assert equal(h4style paddingRight, \"10px\"); assert equal(h4style paddingBottom, \"10px\"); assert equal(h4style paddingLeft, \"10px\"); The height property on the h4 element should be removed js const h4Element = document querySelector(\"h4\"); const h4style = windowgetComputedStyle(h4Element);\nassert notEqual(h4style height, '25px');\n--seed--\n--seed-contents--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph D students at Stanford University Larry Page\nSergey Brin\n```\n--solutions--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph D students at Stanford University Larry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4109,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-background-color-property-of-text.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "91278e9e83bee3568666fe9493d2ecbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-size-of-a-heading-element-versus-a-paragraph-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781b367417b2b2512abd\ntitle: Adjust the Size of a Heading Element Versus a Paragraph Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c3bRPTz'\nforumTopicId: 301037\ndashedName: adjust-the-size-of-a-heading-element-versus-a-paragraph-element\n--description--\nThe font size of heading elements (h1 through h6) should generally be larger than the font size of paragraph tags. This makes it easier for the user to visually understand the layout and level of importance of everything on the page. You use the font-size property to adjust the size of the text in an element.\n--instructions--\nTo make the heading significantly larger than the paragraph, change the font-size of the h4 element to 27 pixels.\n--hints--\nYour code should add a font-size property to the h4 element set to 27 pixels.\n```js\nconst h4Element =document.querySelector('h4')\nconst h4Style = window.getComputedStyle(h4Element);\nassert.equal(h4Style?.fontSize,'27px');\n```\n--seed--\n--seed-contents--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-size-of-a-heading-element-versus-a-paragraph-element.md",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "da1b6f867dd99b89b0f12cbb51463b39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-width-of-an-element-using-the-width-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7791367417b2b2512ab4\ntitle: Adjust the Width of an Element Using the width Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cvVLPtN'\nforumTopicId: 301039\ndashedName: adjust-the-width-of-an-element-using-the-width-property\n--description--\nYou can specify the width of an element using the width property in CSS. Values can be given in relative length units (such as em), absolute length units (such as px), or as a percentage of its containing parent element. Here's an example that changes the width of an image to 220px:\ncss\nimg {\nwidth: 220px;\n}\n--instructions--\nAdd a width property to the entire card and set it to an absolute value of 245px. Use the fullCard class to select the element.\n--hints--\nYour code should change the width property of the card to 245 pixels by using the fullCard class selector.\n```js\nconst fullCard = code.match(/.fullCard\\s{[\\s\\S]+?[^}]}/g);\nconst fullCardElement = document.querySelector('.fullCard');\nconst fullCardStyle = window.getComputedStyle(fullCardElement);\nassert.match(code,/.fullCard\\s{[\\s\\S]+?[^}]}/g);\nassert.match(fullCard?.[0],/width\\s:\\s245px\\s*(;|})/gi);\nassert.equal(fullCardStyle?.maxWidth, 'none');\n```\n--seed--\n--seed-contents--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-width-of-an-element-using-the-width-property.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "99a331ec42741cc0d0ef133e8114cf73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-color-of-various-elements-to-complementary-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a4367417b2b2512ad3\ntitle: Adjust the Color of Various Elements to Complementary Colors\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cWmPpud'\nforumTopicId: 301033\ndashedName: adjust-the-color-of-various-elements-to-complementary-colors\n--description--\nThe Complementary Colors challenge showed that opposite colors on the color wheel can make each other appear more vibrant when placed side-by-side However, the strong visual contrast can be jarring if it's overused on a website, and can sometimes make text harder to read if it's placed on a complementary-colored background In practice, one of the colors is usually dominant and the complement is used to bring visual attention to certain content on the page --instructions--\nThis page will use a shade of teal (#09A7A1) as the dominant color, and its orange (#FF790E) complement to visually highlight the sign-up buttons Change the background-color of both the header and footer from black to the teal color Then change the h2 text color to teal as well Finally, change the background-color of the button to the orange color --hints--\nThe header element should have a background-color of #09A7A1 js\nconst headerElement = document querySelector('header');\nconst headerStyle = window getComputedStyle(headerElement);\nassert equal(headerStyle backgroundColor, 'rgb(9, 167, 161)');\nThe footer element should have a background-color of #09A7A1 js\nconst footerElement = document querySelector('footer');\nconst footerStyle = window getComputedStyle(footerElement);\nassert equal(footerStyle backgroundColor, 'rgb(9, 167, 161)');\nThe h2 element should have a color of #09A7A1 js\nconst h2Element = document querySelector('h2');\nconst h2Style = window getComputedStyle(h2Element);\nassert equal(h2Style color, 'rgb(9, 167, 161)');\nThe button element should have a background-color of #FF790E js\nconst buttonElement = document querySelector('button');\nconst buttonStyle = window getComputedStyle(buttonElement);\nassert equal(buttonStyle backgroundColor, 'rgb(255, 121, 14)');\n--seed--\n--seed-contents--\n```html\nCooking with FCC",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-color-of-various-elements-to-complementary-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "256a0451b93925c38e7a3d3e4cfc966a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-color-of-various-elements-to-complementary-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "#09A7A1 js const footerElement = document querySelector('footer'); const footerStyle = window getComputedStyle(footerElement); assert equal(footerStyle backgroundColor, 'rgb(9, 167, 161)'); The h2 element should have a color of #09A7A1 js const h2Element = document querySelector('h2'); const h2Style = window getComputedStyle(h2Element); assert equal(h2Style color, 'rgb(9, 167, 161)'); The button element should have a background-color of #FF790E js const buttonElement = document querySelector('button'); const buttonStyle = window getComputedStyle(buttonElement); assert equal(buttonStyle backgroundColor, 'rgb(255, 121, 14)'); --seed-- --seed-contents-- ```html Cooking with FCCMachine Learning in the Kitchen\nJoin this two day workshop that walks through how to implement cutting-edge snack-getting algorithms with a command line interface Coding usually involves writing exact instructions, but sometimes you need your computer to execute flexible commands, like fetch Pringles Sign Up\nBisection Vegetable Chopping\nThis week-long retreat will level-up your coding ninja skills to actual ninja skills No longer is the humble bisection search limited to sorted arrays or coding interview questions, applying its concepts in the kitchen will have you chopping carrots in O(log n) time before you know it Sign Up\n© 2018 FCC Kitchen\n```\n--solutions--\n```html\nCooking with FCC Machine Learning in the Kitchen\nJoin this two day workshop that walks through how to implement cutting-edge snack-getting algorithms with a command line interface Coding usually involves writing exact instructions, but sometimes you need your computer to execute flexible commands, like fetch Pringles Sign Up\nBisection Vegetable Chopping\nThis week-long retreat will level-up your coding ninja skills to actual ninja skills No longer is the humble bisection search limited to sorted arrays or coding interview questions, applying its concepts in the kitchen will have you chopping carrots in O(log n) time before you know it Sign Up\n© 2018 FCC Kitchen\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-color-of-various-elements-to-complementary-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bea3ce456533f9e386b4595f57dfb5f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-tone-of-a-color.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a4367417b2b2512ad5\ntitle: Adjust the Tone of a Color\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cEDJvT7'\nforumTopicId: 301038\ndashedName: adjust-the-tone-of-a-color\n--description--\nThe hsl() option in CSS also makes it easy to adjust the tone of a color. Mixing white with a pure hue creates a tint of that color, and adding black will make a shade. Alternatively, a tone is produced by adding gray or by both tinting and shading. Recall that the 's' and 'l' of hsl() stand for saturation and lightness, respectively. The saturation percent changes the amount of gray and the lightness percent determines how much white or black is in the color. This is useful when you have a base hue you like, but need different variations of it.\n--instructions--\nAll elements have a default background-color of transparent. Our nav element currently appears to have a cyan background, because the element behind it has a background-color set to cyan. Add a background-color to the nav element so it uses the same cyan hue, but has 80% saturation and 25% lightness values to change its tone and shade.\n--hints--\nThe nav element should have a background-color of the adjusted cyan tone using the hsl() property.\njs\n// Computed style of hsl(180, 80%, 25%) results in rgb(13,115,115)\nassert.equal(\nnew __helpers.CSSHelp(document).getStyle('nav').getPropVal('background-color', true),\n'rgb(13,115,115)'\n)\n--seed--\n--seed-contents--\n```html\nCooking with FCC!\nHome\nClasses\nContact\n```\n--solutions--\n```html\nCooking with FCC!\nHome\nClasses\nContact\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2682,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-tone-of-a-color.md",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "220d0386652902e947253c6a06c6cbb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\animate-elements-at-variable-rates.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a8367417b2b2512ae5\ntitle: Animate Elements at Variable Rates\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cZ89WA4'\nforumTopicId: 301040\ndashedName: animate-elements-at-variable-rates\n--description--\nThere are a variety of ways to alter the animation rates of similarly animated elements. So far, this has been achieved by applying an animation-iteration-count property and setting @keyframes rules.\nTo illustrate, the animation on the right consists of two stars that each decrease in size and opacity at the 20% mark in the @keyframes rule, which creates the twinkle animation. You can change the @keyframes rule for one of the elements so the stars twinkle at different rates.\n--instructions--\nAlter the animation rate for the element with the class name of star-1 by changing its @keyframes rule to 50%.\n--hints--\nThe @keyframes rule for the star-1 class should be 50%.\njs\nassert.match(code,/twinkle-1\\s*?{\\s*?50%/g);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2819,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\animate-elements-at-variable-rates.md",
      "source_type": "git_repo"
    },
    "token_count": 263,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7e1b1f65146abd48310e87f75b71f9cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\animate-elements-continually-using-an-infinite-animation-count.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a8367417b2b2512ae3\ntitle: Animate Elements Continually Using an Infinite Animation Count\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cVJDVfq'\nforumTopicId: 301041\ndashedName: animate-elements-continually-using-an-infinite-animation-count\n--description--\nThe previous challenges covered how to use some of the animation properties and the @keyframes rule. Another animation property is the animation-iteration-count, which allows you to control how many times you would like to loop through the animation. Here's an example:\ncss\nanimation-iteration-count: 3;\nIn this case the animation will stop after running 3 times, but it's possible to make the animation run continuously by setting that value to infinite.\n--instructions--\nTo keep the ball bouncing on the right on a continuous loop, change the animation-iteration-count property to infinite.\n--hints--\nThe animation-iteration-count property should have a value of infinite.\njs\nconst ballElement = document.querySelector('#ball');\nconst ballStyle = window.getComputedStyle(ballElement);\nassert.equal(ballStyle?.animationIterationCount, 'infinite');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\animate-elements-continually-using-an-infinite-animation-count.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "57a682ea22134a5f642b5be08cc895ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\center-an-element-horizontally-using-the-margin-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a3367417b2b2512ad0\ntitle: Center an Element Horizontally Using the margin Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cyLJqU4'\nforumTopicId: 301043\ndashedName: center-an-element-horizontally-using-the-margin-property\n--description--\nAnother positioning technique is to center a block element horizontally. One way to do this is to set its margin to a value of auto.\nThis method works for images, too. Images are inline elements by default, but can be changed to block elements when you set the display property to block.\n--instructions--\nCenter the div on the page by adding a margin property with a value of auto.\n--hints--\nThe div should have a margin set to auto.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('div')?.margin ,'auto');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1129,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\center-an-element-horizontally-using-the-margin-property.md",
      "source_type": "git_repo"
    },
    "token_count": 213,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "497a2a059f9295e6250e6719ddf5f847",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\animate-multiple-elements-at-variable-rates.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a8367417b2b2512ae6\ntitle: Animate Multiple Elements at Variable Rates\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cnpWZc9'\nforumTopicId: 301042\ndashedName: animate-multiple-elements-at-variable-rates\n--description--\nIn the previous challenge, you changed the animation rates for two similarly animated elements by altering their @keyframes rules. You can achieve the same goal by manipulating the animation-duration of multiple elements.\nIn the animation running in the code editor, there are three stars in the sky that twinkle at the same rate on a continuous loop. To make them twinkle at different rates, you can set the animation-duration property to different values for each element.\n--instructions--\nSet the animation-duration of the elements with the classes star-1, star-2, and star-3 to 1s, 0.9s, and 1.1s, respectively.\n--hints--\nThe animation-duration property for the star with class star-1 should remain at 1s.\njs\nconst starOne = document.querySelector('.star-1');\nconst starOneStyle = window.getComputedStyle(starOne);\nassert.equal(starOneStyle?.animationDuration, '1s');\nThe animation-duration property for the star with class star-2 should be 0.9s.\njs\nconst starTwo = document.querySelector('.star-2');\nconst starTwoStyle = window.getComputedStyle(starTwo);\nassert.equal(starTwoStyle?.animationDuration , '0.9s');\nThe animation-duration property for the star with class star-3 should be 1.1s.\njs\nconst starThree = document.querySelector('.star-3');\nconst starThreeStyle = window.getComputedStyle(starThree);\nassert.equal(starThreeStyle?.animationDuration, '1.1s');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3615,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\animate-multiple-elements-at-variable-rates.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fb0a8d4e248dc9e54aead2ea50f5549c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-hue-of-a-color.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a4367417b2b2512ad4\ntitle: Adjust the Hue of a Color\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cPp38TZ'\nforumTopicId: 301036\ndashedName: adjust-the-hue-of-a-color\n--description--\nColors have several characteristics including hue, saturation, and lightness CSS3 introduced the hsl() function as an alternative way to pick a color by directly stating these characteristics Hue is what people generally think of as 'color' If you picture a spectrum of colors starting with red on the left, moving through green in the middle, and blue on right, the hue is where a color fits along this line In hsl(), hue uses a color wheel concept instead of the spectrum, where the angle of the color on the circle is given as a value between 0 and 360 Saturation is the amount of gray in a color A fully saturated color has no gray in it, and a minimally saturated color is almost completely gray This is given as a percentage with 100% being fully saturated Lightness is the amount of white or black in a color A percentage is given ranging from 0% (black) to 100% (white), where 50% is the normal color Here are a few examples of using hsl() with fully-saturated, normal lightness colors:\nColorHSLredhsl(0, 100%, 50%)yellowhsl(60, 100%, 50%)greenhsl(120, 100%, 50%)cyanhsl(180, 100%, 50%)bluehsl(240, 100%, 50%)magentahsl(300, 100%, 50%)\n--instructions--\nChange the background-color of each div element based on the class names (green, cyan, or blue) using hsl() All three should have full saturation and normal lightness --hints--\nYour code should use the hsl() function to declare the color green js\nassert match(code,/\\ green\\s* {\\s* background-color\\s*:\\s* hsl/gi);\nYour code should use the hsl() function to declare the color cyan js\nassert match(code,/\\ cyan\\s* {\\s* background-color\\s*:\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-hue-of-a-color.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c6f75b069e8c9cb76897525037225712",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-hue-of-a-color.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "100%, 50%)greenhsl(120, 100%, 50%)cyanhsl(180, 100%, 50%)bluehsl(240, 100%, 50%)magentahsl(300, 100%, 50%) --instructions-- Change the background-color of each div element based on the class names (green, cyan, or blue) using hsl() All three should have full saturation and normal lightness --hints-- Your code should use the hsl() function to declare the color green js assert match(code,/\\ green\\s* {\\s* background-color\\s*:\\s* hsl/gi); Your code should use the hsl() function to declare the color cyan js assert match(code,/\\ cyan\\s* {\\s* background-color\\s*:\\s*hsl/gi);\nYour code should use the hsl() function to declare the color blue js\nassert match(code,/\\ blue\\s* {\\s* background-color\\s*:\\s* hsl/gi);\nThe div element with class green should have a background-color of green js\nconst greenElement = document querySelector(\" green\");\nconst greenStyle = window getComputedStyle(greenElement);\nassert equal(greenStyle backgroundColor, 'rgb(0, 255, 0)');\nThe div element with class cyan should have a background-color of cyan js\nconst cyanElement = document querySelector(\" cyan\");\nconst cyanStyle = window getComputedStyle(cyanElement);\nassert equal(cyanStyle backgroundColor, 'rgb(0, 255, 255)');\nThe div element with class blue should have a background-color of blue js\nconst blueElement = document querySelector(\" blue\");\nconst blueStyle = window getComputedStyle(blueElement);\nassert equal(blueStyle backgroundColor, 'rgb(0, 0, 255)');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\adjust-the-hue-of-a-color.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "50880f518cbedd6e9893010ab4147700",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-the-position-of-overlapping-elements-with-the-z-index-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a3367417b2b2512acf\ntitle: Change the Position of Overlapping Elements with the z-index Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cM94aHk'\nforumTopicId: 301046\ndashedName: change-the-position-of-overlapping-elements-with-the-z-index-property\n--description--\nWhen elements are positioned to overlap (i.e. using position: absolute | relative | fixed | sticky), the element coming later in the HTML markup will, by default, appear on the top of the other elements. However, the z-index property can specify the order of how elements are stacked on top of one another. It must be an integer (i.e. a whole number and not a decimal), and higher values for the z-index property of an element move it higher in the stack than those with lower values.\n--instructions--\nAdd a z-index property to the element with the class name of first (the red rectangle) and set it to a value of 2 so it covers the other element (blue rectangle).\n--hints--\nThe element with class first should have a z-index value of 2.\njs\nconst firstElement = document.querySelector('.first');\nconst firstStyle = window.getComputedStyle(firstElement);\nassert.equal(firstStyle?.zIndex, '2');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-the-position-of-overlapping-elements-with-the-z-index-property.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0415b0a369cc8d2f1e360abfba656a81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-gradual-css-linear-gradient.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a5367417b2b2512ad6\ntitle: Create a Gradual CSS Linear Gradient\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cg4dpt9'\nforumTopicId: 301047\ndashedName: create-a-gradual-css-linear-gradient\n--description--\nApplying a color on HTML elements is not limited to one flat hue. CSS provides the ability to use color transitions, otherwise known as gradients, on elements. This is accessed through the background property's linear-gradient() function. Here is the general syntax:\ncss\nbackground: linear-gradient(gradient_direction, color 1, color 2, color 3, ...);\nThe first argument specifies the direction from which color transition starts - it can be stated as a degree, where 90deg makes a horizontal gradient (from left to right) and 45deg makes a diagonal gradient (from bottom left to top right). The following arguments specify the order of colors used in the gradient.\nExample:\ncss\nbackground: linear-gradient(90deg, red, yellow, rgb(204, 204, 255));\n--instructions--\nUse a linear-gradient() for the div element's background, and set it from a direction of 35 degrees to change the color from #CCFFFF to #FFCCCC.\n--hints--\nThe div element should have a linear-gradient background with the specified direction and colors.\njs\nconst divElement = document.querySelector('div');\nconst divStyle = window.getComputedStyle(divElement);\nassert.match(divStyle?.background, /linear-gradient\\(35deg, rgb\\(204, 255, 255\\), rgb\\(255, 204, 204\\)\\)/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1910,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-gradual-css-linear-gradient.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b736c9ab6b92b06202da8b51ac3af724",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-horizontal-line-using-the-hr-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781b367417b2b2512abb\ntitle: Create a Horizontal Line Using the hr Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c3bR8t7'\nforumTopicId: 301049\ndashedName: create-a-horizontal-line-using-the-hr-element\n--description--\nYou can use the hr tag to add a horizontal line across the width of its containing element. This can be used to define a change in topic or to visually separate groups of content.\n--instructions--\nAdd an hr tag underneath the h4 which contains the card title.\nNote: In HTML, hr is a void element, and therefore doesn't need a separate closing tag.\n--hints--\nYour code should add an hr tag to the markup.\njs\nassert.lengthOf(document.querySelectorAll('hr'),1);\nThe hr tag should come between the title and the paragraph.\njs\nassert.match(code,/<\\/h4>\\s*?<hr(>|\\s*?\\/>)\\s*?<p>/gi);\n--seed--\n--seed-contents--\n```html\nGoogleAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogleAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2789,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-horizontal-line-using-the-hr-element.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a2493214ac1707fd4e2c40f86a2767c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-graphic-using-css.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a6367417b2b2512add\ntitle: Create a Graphic Using CSS\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cEDWPs6'\nforumTopicId: 301048\ndashedName: create-a-graphic-using-css\n--description--\nBy manipulating different selectors and properties, you can make interesting shapes. One of the easier ones to try is a crescent moon shape. For this challenge you need to work with the box-shadow property that sets the shadow of an element, along with the border-radius property that controls the roundness of the element's corners.\nYou will create a round, transparent object with a crisp shadow that is slightly offset to the side - the shadow is actually going to be the moon shape you see.\nIn order to create a round object, the border-radius property should be set to a value of 50%.\nYou may recall from an earlier challenge that the box-shadow property takes values for offset-x, offset-y, blur-radius, spread-radius and a color value in that order. The blur-radius and spread-radius values are optional.\n--instructions--\nManipulate the square element in the editor to create the moon shape. First, change the background-color to transparent, then set the border-radius property to 50% to make the circular shape. Finally, change the box-shadow property to set the offset-x to 25px, the offset-y to 10px, blur-radius to 0, spread-radius to 0, and color to blue.\n--hints--\nThe value of the background-color property should be set to transparent.\njs\nassert.match(code,/background-color:\\s*?transparent;/gi);\nThe value of the border-radius property should be set to 50%.\njs\nassert.match(code,/border-radius:\\s*?50%;/gi);\nThe value of the box-shadow property should be set to 25px for offset-x, 10px for offset-y, 0 for blur-radius, 0 for spread-radius, and finally blue for the color.\njs\nassert.match(code,/box-shadow:\\s*?25px\\s+?10px\\s+?0(px)?\\s+?0(px)?\\s+?blue\\s*?;/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2642,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-graphic-using-css.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7a0e35207f536d2d80196f7feb03b93c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-animation-timing-with-keywords.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a8367417b2b2512ae7\ntitle: Change Animation Timing with Keywords\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cJKvwCM'\nforumTopicId: 301045\ndashedName: change-animation-timing-with-keywords\n--description--\nIn CSS animations, the animation-timing-function property controls how quickly an animated element changes over the duration of the animation If the animation is a car moving from point A to point B in a given time (your animation-duration), the animation-timing-function says how the car accelerates and decelerates over the course of the drive There are a number of predefined keywords available for popular options For example, the default value is ease, which starts slow, speeds up in the middle, and then slows down again in the end Other options include ease-out, which is quick in the beginning then slows down, ease-in, which is slow in the beginning, then speeds up at the end, or linear, which applies a constant animation speed throughout --instructions--\nFor the elements with id of ball1 and ball2, add an animation-timing-function property to each, and set #ball1 to linear, and #ball2 to ease-out Notice the difference between how the elements move during the animation but end together, since they share the same animation-duration of 2 seconds --hints--\nThe value of the animation-timing-function property for the element with the id ball1 should be linear ```js\nconst ballOne =document querySelector('#ball1');\nconst ballOneStyle = window getComputedStyle(ballOne);\nconst ball1Animation = __helpers removeWhiteSpace(ballOneStyle animationTimingFunction);\nassert isTrue(ball1Animation == 'linear' || ball1Animation == 'cubic-bezier(0,0,1,1)');\n```\nThe value of the animation-timing-function property for the element with the id ball2 should be ease-out ```js\nconst ballTwo = document querySelector('#ball2');\nconst ballTwoStyle = window getComputedStyle(ballTwo);\nconst ball2Animation = __helpers removeWhiteSpace(ballTwoStyle animationTimingFunction);\nassert isTrue(ball2Animation == 'ease-out' || ball2Animation == 'cubic-bezier(0,0,0 58,1)');\n```\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3409,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-animation-timing-with-keywords.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4b4c7bc9706ee92c9f25cebddadc3f19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-texture-by-adding-a-subtle-pattern-as-a-background-image.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a5367417b2b2512ad8\ntitle: Create Texture by Adding a Subtle Pattern as a Background Image\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cQdwJC8'\nforumTopicId: 301052\ndashedName: create-texture-by-adding-a-subtle-pattern-as-a-background-image\n--description--\nOne way to add texture and interest to a background and have it stand out more is to add a subtle pattern. The key is balance, as you don't want the background to stand out too much, and take away from the foreground. The background property supports the url() function in order to link to an image of the chosen texture or pattern. The link address is wrapped in quotes inside the parentheses.\n--instructions--\nUsing the url of https://cdn-media-1.freecodecamp.org/imgr/MJAkxbh.png, set the background of the whole page with the body selector.\n--hints--\nYour body element should have a background property set to a url() with the given link.\njs\nassert.match(code,/background(-image)?:\\s*?url\\(\\s*(\"|'|)https:\\/\\/cdn-media-1\\.freecodecamp\\.org\\/imgr\\/MJAkxbh\\.png\\2\\s*\\)/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1308,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-texture-by-adding-a-subtle-pattern-as-a-background-image.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c8ee1e947a387a026c0303722a970e74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-an-elements-relative-position.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781e367417b2b2512ac9\ntitle: Change an Element's Relative Position\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/czVmMtZ'\nforumTopicId: 301044\ndashedName: change-an-elements-relative-position\n--description--\nCSS treats each HTML element as its own box, which is usually referred to as the CSS Box Model Block-level items automatically start on a new line (think headings, paragraphs, and divs) while inline items sit within surrounding content (like images or spans) The default layout of elements in this way is called the normal flow of a document, but CSS offers the position property to override it When the position of an element is set to relative, it allows you to specify how CSS should move it relative to its current position in the normal flow of the page It pairs with the CSS offset properties of left or right, and top or bottom These say how many pixels, percentages, or ems to move the item away from where it is normally positioned The following example moves the paragraph 10 pixels away from the bottom:\ncss\np {\nposition: relative;\nbottom: 10px;\n}\nChanging an element's position to relative does not remove it from the normal flow - other elements around it still behave as if that item were in its default position Note: Positioning gives you a lot of flexibility and power over the visual layout of a page It's good to remember that no matter the position of elements, the underlying HTML markup should be organized and make sense when read from top to bottom This is how users with visual impairments (who rely on assistive devices like screen readers) access your content --instructions--\nChange the position of the h2 to relative, and use a CSS offset to move it 15 pixels away from the top of where it sits in the normal flow Notice there is no impact on the positions of the surrounding h1 and p elements --hints--\nThe h2 element should have a position property set to relative js\nconst h2Element =document querySelector('h2')\nconst h2Style = window getComputedStyle(h2Element);\nassert equal(h2Style position, 'relative');\nYour code should use a CSS offset to relatively position the h2 15px away from the top of where it normally sits js\nconst h2Element =document querySelector('h2')\nconst h2Style = window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2865,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-an-elements-relative-position.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9623cb364cc3c292c1c5665339fabacc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-an-elements-relative-position.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in the normal flow Notice there is no impact on the positions of the surrounding h1 and p elements --hints-- The h2 element should have a position property set to relative js const h2Element =document querySelector('h2') const h2Style = window getComputedStyle(h2Element); assert equal(h2Style position, 'relative'); Your code should use a CSS offset to relatively position the h2 15px away from the top of where it normally sits js const h2Element =document querySelector('h2') const h2Style = windowgetComputedStyle(h2Element);\nassert equal(h2Style top, '15px');\n--seed--\n--seed-contents--\n```html\nOn Being Well-Positioned\nMove me I still think the h2 is where it normally sits ```\n--solutions--\n```html\nOn Being Well-Positioned\nMove me I still think the h2 is where it normally sits ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2865,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\change-an-elements-relative-position.md",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4a20079e599bfda5a252fe16dad9ed83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-movement-using-css-animation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a7367417b2b2512ae1\ntitle: Create Movement Using CSS Animation\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c7amZfW'\nforumTopicId: 301051\ndashedName: create-movement-using-css-animation\n--description--\nWhen elements have a specified position, such as fixed or relative, the CSS offset properties right, left, top, and bottom can be used in animation rules to create movement.\nAs shown in the example below, you can push the item downwards then upwards by setting the top property of the 50% keyframe to 50px, but having it set to 0px for the first (0%) and the last (100%) keyframe.\ncss\n@keyframes rainbow {\n0% {\nbackground-color: blue;\ntop: 0px;\n}\n50% {\nbackground-color: green;\ntop: 50px;\n}\n100% {\nbackground-color: yellow;\ntop: 0px;\n}\n}\n--instructions--\nAdd a horizontal motion to the div animation. Using the left offset property, add to the @keyframes rule so rainbow starts at 0 pixels at 0%, moves to 25 pixels at 50%, and ends at -25 pixels at 100%. Don't replace the top property in the editor - the animation should have both vertical and horizontal motion.\n--hints--\nThe @keyframes rule for 0% should use the left offset of 0px.\njs\nassert.match(code,/[^50]0%\\s*?{[\\s\\S]*?left:\\s*?0px(;[\\s\\S]*?|\\s*?)}/gi);\nThe @keyframes rule for 50% should use the left offset of 25px.\njs\nassert.match(code,/50%\\s*?{[\\s\\S]*?left:\\s*?25px(;[\\s\\S]*?|\\s*?)}/gi);\nThe @keyframes rule for 100% should use the left offset of -25px.\njs\nassert.match(code,/100%\\s*?{[\\s\\S]*?left:\\s*?-25px(;[\\s\\S]*?|\\s*?)}/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2729,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-movement-using-css-animation.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a349fee44874ab739556c48544f58511",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-visual-balance-using-the-text-align-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d7791367417b2b2512ab3\ntitle: Create Visual Balance Using the text-align Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c3b4EAp'\nforumTopicId: 301053\ndashedName: create-visual-balance-using-the-text-align-property\n--description--\nThis section of the curriculum focuses on Applied Visual Design. The first group of challenges build on the given card layout to show a number of core principles.\nText is often a large part of web content. CSS has several options for how to align it with the text-align property.\ntext-align: justify; spaces the text so that each line has equal width.\ntext-align: center; centers the text\ntext-align: right; right-aligns the text\nAnd text-align: left; (the default) left-aligns the text.\n--instructions--\nAlign the h4 tag's text, which says \"Google\", to the center. Then justify the paragraph tag which contains information about how Google was founded.\n--hints--\nYour code should use the text-align property on the h4 tag to set it to center.\njs\nconst h4Element =document.querySelector('h4')\nconst h4Style = window.getComputedStyle(h4Element);\nassert.equal(h4Style?.textAlign, 'center');\nYour code should use the text-align property on the p tag to set it to justify.\njs\nconst pElement =document.querySelector('p')\nconst pStyle = window.getComputedStyle(pElement);\nassert.equal(pStyle?.textAlign, 'justify');\n--seed--\n--seed-contents--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2982,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-visual-balance-using-the-text-align-property.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "855a792d471fed9d53b7878ba9b70642",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-visual-direction-by-fading-an-element-from-left-to-right.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a7367417b2b2512ae2\ntitle: Create Visual Direction by Fading an Element from Left to Right\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cGJqqAE'\nforumTopicId: 301054\ndashedName: create-visual-direction-by-fading-an-element-from-left-to-right\n--description--\nFor this challenge, you'll change the opacity of an animated element so it gradually fades as it reaches the right side of the screen.\nIn the displayed animation, the round element with the gradient background moves to the right by the 50% mark of the animation per the @keyframes rule.\n--instructions--\nTarget the element with the id of ball and add the opacity property set to 0.1 at 50%, so the element fades as it moves to the right.\n--hints--\nThe keyframes rule for fade should set the opacity property to 0.1 at 50%.\njs\nassert.match(code,/@keyframes fade\\s*?{\\s*?50%\\s*?{\\s*?(?:left:\\s*?60%;\\s*?opacity:\\s*?0?\\.1;|opacity:\\s*?0?\\.1;\\s*?left:\\s*?60%;)/gi\n);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1809,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-visual-direction-by-fading-an-element-from-left-to-right.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a676a4aa876813d2377224c37faa9f77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\decrease-the-opacity-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781c367417b2b2512abf\ntitle: Decrease the Opacity of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c7aKqu4'\nforumTopicId: 301055\ndashedName: decrease-the-opacity-of-an-element\n--description--\nThe opacity property in CSS is used to adjust the opacity, or conversely, the transparency for an item.\nA value of 1 is opaque, which isn't transparent at all.A value of 0.5 is half see-through.A value of 0 is completely transparent.\nThe value given will apply to the entire element, whether that's an image with some transparency, or the foreground and background colors for a block of text.\n--instructions--\nSet the opacity of the anchor tags to 0.7 using links class to select them.\n--hints--\nYour code should set the opacity property to 0.7 on the anchor tags by selecting the class of links.\njs\nassert.match(\ndocument.querySelector(\"style:not(.fcc-hide-header)\")?.textContent,\n/\\.links\\s*{([\\s\\S]*?;)*\\s*opacity\\s*:\\s*0*\\.70*\\s*(;[\\s\\S]*?|\\s*)}/\n);\n--seed--\n--seed-contents--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3321,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\decrease-the-opacity-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 355,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b81aca2f303fb1d79c2962004089c3bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-more-complex-shape-using-css-and-html.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a6367417b2b2512ade\ntitle: Create a More Complex Shape Using CSS and HTML\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cPpz4fr'\nforumTopicId: 301050\ndashedName: create-a-more-complex-shape-using-css-and-html\n--description--\nOne of the most popular shapes in the world is the heart shape, and in this challenge you'll create one using pure CSS But first, you need to understand the ::before and ::after pseudo-elements ::before creates a pseudo-element that is the first child of the selected element; ::after creates a pseudo-element that is the last child of the selected element In the following example, a ::before pseudo-element is used to add a rectangle to an element with the class heart:\ncss heart::before {\ncontent: \"\";\nbackground-color: yellow;\nborder-radius: 25%;\nposition: absolute;\nheight: 50px;\nwidth: 70px;\ntop: -50px;\nleft: 5px;\n}\nFor the ::before and ::after pseudo-elements to function properly, they must have a defined content property This property is usually used to add things like a photo or text to the selected element When the ::before and ::after pseudo-elements are used to make shapes, the content property is still required, but it's set to an empty string In the above example, the element with the class of heart has a ::before pseudo-element that produces a yellow rectangle with height and width of 50px and 70px, respectively This rectangle has round corners due to its 25% border-radius and is positioned absolutely at 5px from the left and 50px above the top of the element --instructions--\nTransform the element on the screen to a heart In the heart::after selector, change the background-color to pink and the border-radius to 50% Next, target the element with the class heart (just heart) and fill in the transform property Use the rotate() function with -45 degrees Finally, in the heart::before selector, set its content property to an empty string --hints--\nThe background-color property of the heart::after selector should be pink js\nconst heartAfter = code match(/\\ heart::after\\s*{[\\s\\S]+ [^\\}]}/g) [0];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-more-complex-shape-using-css-and-html.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "31bcf918081a0320ea4d98ddcfacc8d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-more-complex-shape-using-css-and-html.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the screen to a heart In the heart::after selector, change the background-color to pink and the border-radius to 50% Next, target the element with the class heart (just heart) and fill in the transform property Use the rotate() function with -45 degrees Finally, in the heart::before selector, set its content property to an empty string --hints-- The background-color property of the heart::after selector should be pink js const heartAfter = code match(/\\ heart::after\\s*{[\\s\\S]+ [^\\}]}/g) [0]; assertmatch(heartAfter, /({|;)\\s*background-color\\s*:\\s*pink\\s*(;|})/g);\nThe border-radius of the heart::after selector should be 50% js\nassert lengthOf(code match(/border-radius\\s* :\\s* 50%/gi),2);\nThe transform property for the heart class should use a rotate() function set to -45 degrees js\nassert match(code,/transform\\s* :\\s* rotate\\(\\s* -45deg\\s* \\)/gi);\nThe content of the heart::before selector should be an empty string js\nassert match(code,/\\ heart::before\\s* {\\s* content\\s* :\\s* (\"|')\\1\\s* ;/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\create-a-more-complex-shape-using-css-and-html.md",
      "source_type": "git_repo"
    },
    "token_count": 289,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a66b0f5b72f2159be1a52762e39f5ec0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-complementary-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a3367417b2b2512ad1\ntitle: Learn about Complementary Colors\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c2MD3Tr'\nforumTopicId: 301056\ndashedName: learn-about-complementary-colors\n--description--\nColor theory and its impact on design is a deep topic and only the basics are covered in the following challenges On a website, color can draw attention to content, evoke emotions, or create visual harmony Using different combinations of colors can really change the look of a website, and a lot of thought can go into picking a color palette that works with your content The color wheel is a useful tool to visualize how colors relate to each other - it's a circle where similar hues are neighbors and different hues are farther apart When two colors are opposite each other on the wheel, they are called complementary colors They have the characteristic that if they are combined, they \"cancel\" each other out and create a gray color However, when placed side-by-side, these colors appear more vibrant and produce a strong visual contrast Some examples of complementary colors with their hex codes are:\nred (#FF0000) and cyan (#00FFFF)green (#00FF00) and magenta (#FF00FF)blue (#0000FF) and yellow (#FFFF00)\nThis is different than the outdated RYB color model that many of us were taught in school, which has different primary and complementary colors Modern color theory uses the additive RGB model (like on a computer screen) and the subtractive CMY(K) model (like in printing) There are many color picking tools available online that have an option to find the complement of a color Note: Using color can be a powerful way to add visual interest to a page However, color alone should not be used as the only way to convey important information because users with visual impairments may not understand that content This issue will be covered in more detail in the Applied Accessibility challenges --instructions--\nChange the background-color property of the blue and yellow classes to their respective colors Notice how the colors look different next to each other than they do compared against the white background --hints--\nThe div element with class blue should have a background-color of blue js\nconst blueElement = document querySelector(' blue');\nconst blueStyle = window getComputedStyle(blueElement);\nassert equal(blueStyle",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3393,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-complementary-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a2f0177ca1a48f20247175e7746a24cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-complementary-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "understand that content This issue will be covered in more detail in the Applied Accessibility challenges --instructions-- Change the background-color property of the blue and yellow classes to their respective colors Notice how the colors look different next to each other than they do compared against the white background --hints-- The div element with class blue should have a background-color of blue js const blueElement = document querySelector(' blue'); const blueStyle = window getComputedStyle(blueElement); assert equal(blueStylebackgroundColor, 'rgb(0, 0, 255)');\nThe div element with class yellow should have a background-color of yellow js\nconst yellowElement = document querySelector(' yellow');\nconst yellowStyle = window getComputedStyle(yellowElement);\nassert equal(yellowStyle backgroundColor, 'rgb(255, 255, 0)');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3393,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-complementary-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a0eb269ba3073331119a97bc6a135f61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\lock-an-element-to-its-parent-with-absolute-positioning.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781e367417b2b2512acb\ntitle: Lock an Element to its Parent with Absolute Positioning\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cyLJ7c3'\nforumTopicId: 301060\ndashedName: lock-an-element-to-its-parent-with-absolute-positioning\n--description--\nThe next option for the CSS position property is absolute, which locks the element in place relative to its parent container. Unlike the relative position, this removes the element from the normal flow of the document, so surrounding items ignore it. The CSS offset properties (top or bottom and left or right) are used to adjust the position.\nOne nuance with absolute positioning is that it will be locked relative to its closest positioned ancestor. If you forget to add a position rule to the parent item, (this is typically done using position: relative;), the browser will keep looking up the chain and ultimately default to the body tag.\n--instructions--\nLock the #searchbar element to the top-right of its section parent by declaring its position as absolute. Give it top and right offsets of 50 pixels each.\n--hints--\nThe #searchbar element should have a position set to absolute.\njs\nconst searchbarElement = document.querySelector('#searchbar');\nconst searchbarStyle = window.getComputedStyle(searchbarElement);\nassert.equal(searchbarStyle?.position, 'absolute');\nYour code should use the top CSS offset of 50 pixels on the #searchbar element.\njs\nconst searchbarElement = document.querySelector('#searchbar');\nconst searchbarStyle = window.getComputedStyle(searchbarElement);\nassert.equal(searchbarStyle?.top, '50px');\nYour code should use the right CSS offset of 50 pixels on the #searchbar element.\njs\nconst searchbarElement = document.querySelector('#searchbar');\nconst searchbarStyle = window.getComputedStyle(searchbarElement);\nassert.equal(searchbarStyle?.right, '50px');\n--seed--\n--seed-contents--\n```html\nWelcome!\nSearch:\n```\n--solutions--\n```html\nWelcome!\nSearch:\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\lock-an-element-to-its-parent-with-absolute-positioning.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9328148ed81ec67d3db66ebd93e3b05b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-tertiary-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a4367417b2b2512ad2\ntitle: Learn about Tertiary Colors\nchallengeType: 0\nforumTopicId: 301057\ndashedName: learn-about-tertiary-colors\n--description--\nComputer monitors and device screens create different colors by combining amounts of red, green, and blue light This is known as the RGB additive color model in modern color theory Red (R), green (G), and blue (B) are called primary colors Mixing two primary colors creates the secondary colors cyan (G + B), magenta (R + B) and yellow (R + G) You saw these colors in the Complementary Colors challenge These secondary colors happen to be the complement to the primary color not used in their creation, and are opposite to that primary color on the color wheel For example, magenta is made with red and blue, and is the complement to green Tertiary colors are the result of combining a primary color with one of its secondary color neighbors For example, within the RGB color model, red (primary) and yellow (secondary) make orange (tertiary) This adds six more colors to a simple color wheel for a total of twelve There are various methods of selecting different colors that result in a harmonious combination in design One example that can use tertiary colors is called the split-complementary color scheme This scheme starts with a base color, then pairs it with the two colors that are adjacent to its complement The three colors provide strong visual contrast in a design, but are more subtle than using two complementary colors Here are three colors created using the split-complement scheme:\nColorHex Codeorange#FF7F00cyan#00FFFFraspberry#FF007F\n--instructions--\nChange the background-color property of the orange, cyan, and raspberry classes to their respective colors Make sure to use the hex codes and not the color names --hints--\nThe div element with class orange should have a background-color of orange js\nconst orangeElement = document querySelector(' orange');\nconst orangeStyle = window getComputedStyle(orangeElement);\nassert equal(orangeStyle backgroundColor, 'rgb(255, 127, 0)');\nThe div element with class cyan should have a background-color of cyan js\nconst cyanElement = document querySelector(' cyan');\nconst cyanStyle = window getComputedStyle(cyanElement);\nassert equal(cyanStyle",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3823,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-tertiary-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ff8109324d9c9a947aff7ecd6d43dc06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-tertiary-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and raspberry classes to their respective colors Make sure to use the hex codes and not the color names --hints-- The div element with class orange should have a background-color of orange js const orangeElement = document querySelector(' orange'); const orangeStyle = window getComputedStyle(orangeElement); assert equal(orangeStyle backgroundColor, 'rgb(255, 127, 0)'); The div element with class cyan should have a background-color of cyan js const cyanElement = document querySelector(' cyan'); const cyanStyle = window getComputedStyle(cyanElement); assert equal(cyanStylebackgroundColor, 'rgb(0, 255, 255)');\nThe div element with class raspberry should have a background-color of raspberry js\nconst raspberryElement = document querySelector(' raspberry');\nconst raspberryStyle = window getComputedStyle(raspberryElement);\nassert equal(raspberryStyle backgroundColor, 'rgb(255, 0, 127)');\nAll background-color values for the color classes should be hex codes and not color names js\nassert notMatch(code, /background-color:\\s(orange|cyan|raspberry)/);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3823,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-about-tertiary-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "34b74bebafb3afed37723d2a15406357",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-bezier-curves-work.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a9367417b2b2512ae8\ntitle: Learn How Bezier Curves Work\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c9bDrs8'\nforumTopicId: 301058\ndashedName: learn-how-bezier-curves-work\n--description--\nThe last challenge introduced the animation-timing-function property and a few keywords that change the speed of an animation over its duration CSS offers an option other than keywords that provides even finer control over how the animation plays out, through the use of Bezier curves In CSS animations, Bezier curves are used with the cubic-bezier function The shape of the curve represents how the animation plays out The curve lives on a 1 by 1 coordinate system The X-axis of this coordinate system is the duration of the animation (think of it as a time scale), and the Y-axis is the change in the animation The cubic-bezier function consists of four main points that sit on this 1 by 1 grid: p0, p1, p2, and p3 p0 and p3 are set for you - they are the beginning and end points which are always located respectively at the origin (0, 0) and (1, 1) You set the x and y values for the other two points, and where you place them in the grid dictates the shape of the curve for the animation to follow This is done in CSS by declaring the x and y values of the p1 and p2 \"anchor\" points in the form: (x1, y1, x2, y2) Pulling it all together, here's an example of a Bezier curve in CSS code:\ncss\nanimation-timing-function: cubic-bezier(0 25, 0 25, 0 75, 0 75);\nIn the example above, the x and y values are equivalent for each point (x1 = 0 25 = y1 and x2 = 0 75 = y2), which if you remember from geometry class, results in a line that extends from the origin to point (1, 1) This animation is a linear change of an element during the length of an animation, and is the same as using the linear keyword In other words, it changes at a constant speed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4303,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-bezier-curves-work.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2ce8ba754f21ce179a5760f3439a16a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-bezier-curves-work.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the x and y values are equivalent for each point (x1 = 0 25 = y1 and x2 = 0 75 = y2), which if you remember from geometry class, results in a line that extends from the origin to point (1, 1) This animation is a linear change of an element during the length of an animation, and is the same as using the linear keyword In other words, it changes at a constant speed--instructions--\nFor the element with the id of ball1, change the value of the animation-timing-function property from linear to its equivalent cubic-bezier function value Use the point values given in the example above --hints--\nThe value of the animation-timing-function property for the element with the id ball1 should be the linear-equivalent cubic-bezier function js\nconst ballOne = document querySelector('#ball1');\nconst ballOneStyle = window getComputedStyle(ballOne);\nassert equal(\nballOneStyle animationTimingFunction,\n'cubic-bezier(0 25, 0 25, 0 75, 0 75)'\n);\nThe value of the animation-timing-function property for the element with the id ball2 should not change js\nconst ballTwoElement = document querySelector('#ball2');\nconst ballTwoStyle = window getComputedStyle(ballTwoElement);\nconst ball2Animation = __helpers removeWhiteSpace(ballTwoStyle animationTimingFunction);\nassert isTrue(\nball2Animation == 'ease-out' || ball2Animation == 'cubic-bezier(0,0,0 58,1)'\n);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4303,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-bezier-curves-work.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2c4acdb2f9da019c7002a80aef2f323f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\make-a-css-heartbeat-using-an-infinite-animation-count.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a8367417b2b2512ae4\ntitle: Make a CSS Heartbeat using an Infinite Animation Count\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cDZpDUr'\nforumTopicId: 301062\ndashedName: make-a-css-heartbeat-using-an-infinite-animation-count\n--description--\nHere's one more continuous animation example with the animation-iteration-count property that uses the heart you designed in a previous challenge.\nThe one-second long heartbeat animation consists of two animated pieces. The heart elements (including the :before and :after pieces) are animated to change size using the transform property, and the background div is animated to change its color using the background property.\n--instructions--\nKeep the heart beating by adding the animation-iteration-count property for both the back class and the heart class and setting the value to infinite. The heart:before and heart:after selectors do not need any animation properties.\n--hints--\nThe animation-iteration-count property for the heart class should have a value of infinite.\njs\nconst heartElement = document.querySelector('.heart');\nconst heartStyle = window.getComputedStyle(heartElement);\nassert.equal(heartStyle?.animationIterationCount, 'infinite');\nThe animation-iteration-count property for the back class should have a value of infinite.\njs\nconst backElement = document.querySelector('.back');\nconst backStyle = window.getComputedStyle(backElement);\nassert.equal(backStyle?.animationIterationCount, 'infinite');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3930,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\make-a-css-heartbeat-using-an-infinite-animation-count.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4cf2e65acdd8b9d5d5659c3906922682",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\lock-an-element-to-the-browser-window-with-fixed-positioning.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781e367417b2b2512acc\ntitle: Lock an Element to the Browser Window with Fixed Positioning\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c2MDNUR'\nforumTopicId: 301061\ndashedName: lock-an-element-to-the-browser-window-with-fixed-positioning\n--description--\nThe next layout scheme that CSS offers is the fixed position, which is a type of absolute positioning that locks an element relative to the browser window. Similar to absolute positioning, it's used with the CSS offset properties and also removes the element from the normal flow of the document. Other items no longer \"realize\" where it is positioned, which may require some layout adjustments elsewhere.\nOne key difference between the fixed and absolute positions is that an element with a fixed position won't move when the user scrolls.\n--instructions--\nThe navigation bar in the code is labeled with an id of navbar. Change its position to fixed, and offset it 0 pixels from the top and 0 pixels from the left. After you have added the code, scroll the preview window to see how the navigation stays in place.\n--hints--\nThe #navbar element should have a position set to fixed.\njs\nconst navbarElement = document.querySelector('#navbar');\nconst navbarStyle = window.getComputedStyle(navbarElement);\nassert.equal(navbarStyle?.position, 'fixed');\nYour code should use the top CSS offset of 0 pixels on the #navbar element.\njs\nconst navbarElement = document.querySelector('#navbar');\nconst navbarStyle = window.getComputedStyle(navbarElement);\nassert.equal(navbarStyle?.top, '0px');\nYour code should use the left CSS offset of 0 pixels on the #navbar element.\njs\nconst navbarElement = document.querySelector('#navbar');\nconst navbarStyle = window.getComputedStyle(navbarElement);\nassert.equal(navbarStyle?.left, '0px');\n--seed--\n--seed-contents--\n```html\nWelcome!\nHome\nContact\nI shift up when the #navbar is fixed to the browser window.\n```\n--solutions--\n```html\nWelcome!\nHome\nContact\nI shift up when the #navbar is fixed to the browser window.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\lock-an-element-to-the-browser-window-with-fixed-positioning.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c21d93dfb0e7e82dfabc1490cad7d422",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\make-motion-more-natural-using-a-bezier-curve.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a9367417b2b2512aea\ntitle: Make Motion More Natural Using a Bezier Curve\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c7akWUv'\nforumTopicId: 301063\ndashedName: make-motion-more-natural-using-a-bezier-curve\n--description--\nThis challenge animates an element to replicate the movement of a ball being juggled. Prior challenges covered the linear and ease-out cubic Bezier curves, however neither depicts the juggling movement accurately. You need to customize a Bezier curve for this.\nThe animation-timing-function automatically loops at every keyframe when the animation-iteration-count is set to infinite. Since there is a keyframe rule set in the middle of the animation duration (at 50%), it results in two identical animation progressions at the upward and downward movement of the ball.\nThe following cubic Bezier curve simulates a juggling movement:\ncss\ncubic-bezier(0.3, 0.4, 0.5, 1.6);\nNotice that the value of y2 is larger than 1. Although the cubic Bezier curve is mapped on a 1 by 1 coordinate system, and it can only accept x values from 0 to 1, the y value can be set to numbers larger than one. This results in a bouncing movement that is ideal for simulating the juggling ball.\n--instructions--\nChange value of the animation-timing-function of the element with the id of green to a cubic-bezier function with x1, y1, x2, y2 values set respectively to 0.311, 0.441, 0.444, 1.649.\n--hints--\nThe value of the animation-timing-function property for the element with the id green should be a cubic-bezier function with x1, y1, x2, y2 values as specified.\njs\nconst greenElement = document.querySelector('#green');\nconst greenStyle = window.getComputedStyle(greenElement);\nassert.equal(greenStyle?.animationTimingFunction, 'cubic-bezier(0.311, 0.441, 0.444, 1.649)');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3303,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\make-motion-more-natural-using-a-bezier-curve.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8177dc3f9f1322a7373fb866164c9deb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\move-a-relatively-positioned-element-with-css-offsets.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781e367417b2b2512aca\ntitle: Move a Relatively Positioned Element with CSS Offsets\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c9bQEA4'\nforumTopicId: 301065\ndashedName: move-a-relatively-positioned-element-with-css-offsets\n--description--\nThe CSS offsets of top or bottom, and left or right tell the browser how far to offset an item relative to where it would sit in the normal flow of the document. You're offsetting an element away from a given spot, which moves the element away from the referenced side (effectively, the opposite direction). As you saw in the last challenge, using the top offset moved the h2 downwards. Likewise, using a left offset moves an item to the right.\n--instructions--\nUse CSS offsets to move the h2 15 pixels to the right and 10 pixels up.\n--hints--\nYour code should use a CSS offset to relatively position the h2 10px upwards. In other words, move it 10px away from the bottom of where it normally sits.\njs\nconst h2Element =document.querySelector('h2')\nconst h2Style = window.getComputedStyle(h2Element);\nassert.equal(h2Style?.bottom, '10px');\nYour code should use a CSS offset to relatively position the h2 15px towards the right. In other words, move it 15px away from the left of where it normally sits.\njs\nconst h2Element =document.querySelector('h2')\nconst h2Style = window.getComputedStyle(h2Element);\nassert.equal(h2Style?.left , '15px');\n--seed--\n--seed-contents--\n```html\nOn Being Well-Positioned\nMove me!\nI still think the h2 is where it normally sits.\n```\n--solutions--\n```html\nOn Being Well-Positioned\nMove me!\nI still think the h2 is where it normally sits.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\move-a-relatively-positioned-element-with-css-offsets.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a61040097c8f5d3e5216472e78a48bd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-the-css-keyframes-and-animation-properties-work.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a7367417b2b2512adf\ntitle: Learn How the CSS @keyframes and animation Properties Work\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cakprhv'\nforumTopicId: 301059\ndashedName: learn-how-the-css-keyframes-and-animation-properties-work\n--description--\nTo animate an element, you need to know about the animation properties and the @keyframes rule The animation properties control how the animation should behave and the @keyframes rule controls what happens during that animation There are eight animation properties in total This challenge will keep it simple and cover the two most important ones first:\nanimation-name sets the name of the animation, which is later used by @keyframes to tell CSS which rules go with which animations animation-duration sets the length of time for the animation @keyframes is how to specify exactly what happens within the animation over the duration This is done by giving CSS properties for specific \"frames\" during the animation, with percentages ranging from 0% to 100% If you compare this to a movie, the CSS properties for 0% is how the element displays in the opening scene The CSS properties for 100% is how the element appears at the end, right before the credits roll Then CSS applies the magic to transition the element over the given duration to act out the scene Here's an example to illustrate the usage of @keyframes and the animation properties:\n```css\nanim {\nanimation-name: colorful;\nanimation-duration: 3s;\n}\n@keyframes colorful {\n0% {\nbackground-color: blue;\n}\n100% {\nbackground-color: yellow;\n}\n}\n```\nFor the element with the anim id, the code snippet above sets the animation-name to colorful and sets the animation-duration to 3 seconds Then the @keyframes rule links to the animation properties with the name colorful It sets the color to blue at the beginning of the animation (0%) which will transition to yellow by the end of the animation (100%) You aren't limited to only beginning-end transitions, you can set properties for the element for any percentage between 0% and 100% --instructions--\nCreate an animation for the element with the id rect, by setting the animation-name to rainbow and the animation-duration to 4 seconds",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-the-css-keyframes-and-animation-properties-work.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "950a575366547b3a14230513d3fc3b15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-the-css-keyframes-and-animation-properties-work.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the animation properties with the name colorful It sets the color to blue at the beginning of the animation (0%) which will transition to yellow by the end of the animation (100%) You aren't limited to only beginning-end transitions, you can set properties for the element for any percentage between 0% and 100% --instructions-- Create an animation for the element with the id rect, by setting the animation-name to rainbow and the animation-duration to 4 secondsNext, declare a @keyframes rule, and set the background-color at the beginning of the animation (0%) to blue, the middle of the animation (50%) to green, and the end of the animation (100%) to yellow --hints--\nThe element with id of rect should have an animation-name property with a value of rainbow js\nconst rectElement = document querySelector('#rect');\nconst rectStyle = window getComputedStyle(rectElement);\nassert equal(rectStyle animationName, 'rainbow');\nThe element with id of rect should have an animation-duration property with a value of 4s js\nconst rectElement = document querySelector('#rect');\nconst rectStyle = window getComputedStyle(rectElement);\nassert equal(rectStyle animationDuration, '4s');\nThe @keyframes rule should use the animation-name of rainbow js\nassert match(code ,/@keyframes\\s+ rainbow\\s* {/g);\nThe @keyframes rule for rainbow should use a background-color of blue at 0% js\nassert match(code,/0%\\s* {\\s* background-color:\\s* blue;\\s* }/gi);\nThe @keyframes rule for rainbow should use a background-color of green at 50% js\nassert match(code,/50%\\s* {\\s* background-color:\\s* green;\\s* }/gi);\nThe @keyframes rule for rainbow should use a background-color of yellow at 100% js\nassert match(code,/100%\\s* {\\s* background-color:\\s* yellow;\\s* }/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\learn-how-the-css-keyframes-and-animation-properties-work.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "41cd1c7c55b429f15ee96c3f9eefe273",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\modify-fill-mode-of-an-animation.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 58a7a6ebf9a6318348e2d5aa\ntitle: Modify Fill Mode of an Animation\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cVJDmcE'\nforumTopicId: 301064\ndashedName: modify-fill-mode-of-an-animation\n--description--\nThat's great, but it doesn't work right yet. Notice how the animation resets after 500ms has passed, causing the button to revert back to the original color. You want the button to stay highlighted.\nThis can be done by setting the animation-fill-mode property to forwards. The animation-fill-mode specifies the style applied to an element when the animation has finished. You can set it like so:\ncss\nanimation-fill-mode: forwards;\n--instructions--\nSet the animation-fill-mode property of button:hover to forwards so the button stays highlighted when a user hovers over it.\n--hints--\nbutton:hover should have a animation-fill-mode property with a value of forwards.\njs\nassert.match(code,/button\\s*?:\\s*?hover\\s*?{[\\s\\S]*animation-fill-mode\\s*?:\\s*?forwards\\s*?;[\\s\\S]*}/gi);\nassert.match(code,/button\\s*?:\\s*?hover\\s*?{[\\s\\S]*animation-name\\s*?:\\s*?background-color\\s*?;[\\s\\S]*}/gi);\nassert.match(code,/button\\s*?:\\s*?hover\\s*?{[\\s\\S]*animation-duration\\s*?:\\s*?500ms\\s*?;[\\s\\S]*}/gi );\n--seed--\n--seed-contents--\n```html\nRegister\n```\n--solutions--\n```html\nRegister\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2130,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\modify-fill-mode-of-an-animation.md",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "13b38f5895332e5108a55357cc6f3d46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\push-elements-left-or-right-with-the-float-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a3367417b2b2512ace\ntitle: Push Elements Left or Right with the float Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c2MDqu2'\nforumTopicId: 301066\ndashedName: push-elements-left-or-right-with-the-float-property\n--description--\nThe next positioning tool does not actually use position, but sets the float property of an element. Floating elements are removed from the normal flow of a document and pushed to either the left or right of their containing parent element. It's commonly used with the width property to specify how much horizontal space the floated element requires.\n--instructions--\nThe given markup would work well as a two-column layout, with the section and aside elements next to each other. Give the #left item a float of left and the #right item a float of right.\n--hints--\nThe element with id left should have a float value of left.\njs\nconst leftElement = document.querySelector('#left');\nconst leftStyle = window.getComputedStyle(leftElement);\nassert.equal(leftStyle?.float, 'left');\nThe element with id right should have a float value of right.\njs\nconst rightElement = document.querySelector('#right');\nconst rightStyle = window.getComputedStyle(rightElement);\nassert.equal(rightStyle?.float, 'right');\n--seed--\n--seed-contents--\n```html\nWelcome!\nContent\nGood stuff\nSidebar\nLinks\n```\n--solutions--\n```html\nWelcome!\nContent\nGood stuff\nSidebar\nLinks\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\push-elements-left-or-right-with-the-float-property.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7121c12e5dafb880697b7eff560646fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-size-of-paragraph-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781c367417b2b2512ac4\ntitle: Set the font-size of Paragraph Text\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cVJ36Cr'\nforumTopicId: 301068\ndashedName: set-the-font-size-of-paragraph-text\n--description--\nThe font-size property in CSS is not limited to headings, it can be applied to any element containing text.\n--instructions--\nChange the value of the font-size property for the paragraph to 16px to make it more visible.\n--hints--\nYour p tag should have a font-size of 16 pixels.\njs\nconst pElement =document.querySelector('p')\nconst pStyle = window.getComputedStyle(pElement);\nassert.equal(pStyle?.fontSize, '16px');\n--seed--\n--seed-contents--\n```html\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n```\n--solutions--\n```html\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1532,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-size-of-paragraph-text.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "54b6963c1526f94f5ed2c6109acead09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-line-height-of-paragraphs.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781d367417b2b2512ac5\ntitle: Set the line-height of Paragraphs\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/crVWdcv'\nforumTopicId: 301070\ndashedName: set-the-line-height-of-paragraphs\n--description--\nCSS offers the line-height property to change the height of each line in a block of text. As the name suggests, it changes the amount of vertical space that each line of text gets.\n--instructions--\nAdd a line-height property to the p tag and set it to 25px.\n--hints--\nYour code should set the line-height of the p tag to 25 pixels.\njs\nconst pElement =document.querySelector('p')\nconst pStyle = window.getComputedStyle(pElement);\nassert.equal(pStyle?.lineHeight, '25px');\n--seed--\n--seed-contents--\n```html\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n```\n--solutions--\n```html\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1610,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-line-height-of-paragraphs.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1bef015c5fca0a49315ba44f19b63695",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-size-for-multiple-heading-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781c367417b2b2512ac2\ntitle: Set the font-size for Multiple Heading Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cPpQNT3'\nforumTopicId: 301067\ndashedName: set-the-font-size-for-multiple-heading-elements\n--description--\nThe font-size property is used to specify how large the text is in a given element This rule can be used for multiple elements to create visual consistency of text on a page In this challenge, you'll set the values for all h1 through h6 tags to balance the heading sizes --instructions--\nIn the style tags, set the font-size of the:\nh1 tag to 68px h2 tag to 52px h3 tag to 40px h4 tag to 32px h5 tag to 21px h6 tag to 14px --hints--\nYour code should set the font-size property for the h1 tag to 68 pixels js\nconst fontSizeOfh1 = new __helpers CSSHelp(document) getStyle('h1') getPropertyValue('font-size');\nassert equal(fontSizeOfh1 ,'68px');\nYour code should set the font-size property for the h2 tag to 52 pixels js\nconst fontSizeOfh2 = new __helpers CSSHelp(document) getStyle('h2') getPropertyValue('font-size');\nassert equal(fontSizeOfh2 ,'52px');\nYour code should set the font-size property for the h3 tag to 40 pixels js\nconst fontSizeOfh3 = new __helpers CSSHelp(document) getStyle('h3') getPropertyValue('font-size');\nassert equal(fontSizeOfh3 ,'40px');\nYour code should set the font-size property for the h4 tag to 32 pixels js\nconst fontSizeOfh4 = new __helpers CSSHelp(document) getStyle('h4') getPropertyValue('font-size');\nassert equal(fontSizeOfh4 , '32px');\nYour code should set the font-size property for the h5 tag to 21 pixels js\nconst fontSizeOfh5 = new __helpers CSSHelp(document) getStyle('h5') getPropertyValue('font-size');\nassert equal(fontSizeOfh5 ,'21px');\nYour code should set the font-size property for the h6 tag to 14 pixels js\nconst fontSizeOfh6 = new __helpers CSSHelp(document) getStyle('h6')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-size-for-multiple-heading-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "dfae39b6f796c6cf59b1112587160db1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-size-for-multiple-heading-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": ",'40px'); Your code should set the font-size property for the h4 tag to 32 pixels js const fontSizeOfh4 = new __helpers CSSHelp(document) getStyle('h4') getPropertyValue('font-size'); assert equal(fontSizeOfh4 , '32px'); Your code should set the font-size property for the h5 tag to 21 pixels js const fontSizeOfh5 = new __helpers CSSHelp(document) getStyle('h5') getPropertyValue('font-size'); assert equal(fontSizeOfh5 ,'21px'); Your code should set the font-size property for the h6 tag to 14 pixels js const fontSizeOfh6 = new __helpers CSSHelp(document) getStyle('h6')getPropertyValue('font-size');\nassert equal(fontSizeOfh6 , '14px');\n--seed--\n--seed-contents--\n```html\nThis is h1 text\nThis is h2 text\nThis is h3 text\nThis is h4 text\nThis is h5 text\nThis is h6 text\n```\n--solutions--\n```html\nThis is h1 text\nThis is h2 text\nThis is h3 text\nThis is h4 text\nThis is h5 text\nThis is h6 text\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-size-for-multiple-heading-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "380d41913e5ea3763627a11dbcd54081",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-weight-for-multiple-heading-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781c367417b2b2512ac3\ntitle: Set the font-weight for Multiple Heading Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/crVWRHq'\nforumTopicId: 301069\ndashedName: set-the-font-weight-for-multiple-heading-elements\n--description--\nYou set the font-size of each heading tag in the last challenge, here you'll adjust the font-weight The font-weight property sets how thick or thin characters are in a section of text --instructions--\nSet the font-weight of the h1 tag to 800 Set the font-weight of the h2 tag to 600 Set the font-weight of the h3 tag to 500 Set the font-weight of the h4 tag to 400 Set the font-weight of the h5 tag to 300 Set the font-weight of the h6 tag to 200 --hints--\nYour code should set the font-weight property for the h1 tag to 800 js\nconst h1Element =document querySelector('h1')\nconst h1Style = window getComputedStyle(h1Element);\nassert equal(h1Style fontWeight, '800');\nYour code should set the font-weight property for the h2 tag to 600 js\nconst h2Element =document querySelector('h2')\nconst h2Style = window getComputedStyle(h2Element);\nassert equal(h2Style fontWeight, '600');\nYour code should set the font-weight property for the h3 tag to 500 js\nconst h3Element =document querySelector('h3')\nconst h3Style = window getComputedStyle(h3Element);\nassert equal(h3Style fontWeight, '500');\nYour code should set the font-weight property for the h4 tag to 400 js\nconst h4Element =document querySelector('h4')\nconst h4Style = window getComputedStyle(h4Element);\nassert equal(h4Style fontWeight, '400');\nYour code should set the font-weight property for the h5 tag to 300 js\nconst h5Element =document querySelector('h5')\nconst h5Style = window getComputedStyle(h5Element);\nassert equal(h5Style fontWeight, '300');\nYour code should set the font-weight property for the h6 tag to 200 js\nconst h6Element =document querySelector('h6')\nconst h6Style = window getComputedStyle(h6Element);\nassert equal(h6Style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-weight-for-multiple-heading-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3f8b6df188b7b5bf41a47e726a945d9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-weight-for-multiple-heading-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "set the font-weight property for the h4 tag to 400 js const h4Element =document querySelector('h4') const h4Style = window getComputedStyle(h4Element); assert equal(h4Style fontWeight, '400'); Your code should set the font-weight property for the h5 tag to 300 js const h5Element =document querySelector('h5') const h5Style = window getComputedStyle(h5Element); assert equal(h5Style fontWeight, '300'); Your code should set the font-weight property for the h6 tag to 200 js const h6Element =document querySelector('h6') const h6Style = window getComputedStyle(h6Element); assert equal(h6StylefontWeight, '200');\n--seed--\n--seed-contents--\n```html\nThis is h1 text\nThis is h2 text\nThis is h3 text\nThis is h4 text\nThis is h5 text\nThis is h6 text\n```\n--solutions--\n```html\nThis is h1 text\nThis is h2 text\nThis is h3 text\nThis is h4 text\nThis is h5 text\nThis is h6 text\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\set-the-font-weight-for-multiple-heading-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 243,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "26a6fbeb56781294b7fd81f2e4e5fca9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-css-animation-to-change-the-hover-state-of-a-button.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a7367417b2b2512ae0\ntitle: Use CSS Animation to Change the Hover State of a Button\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cg4vZAa'\nforumTopicId: 301073\ndashedName: use-css-animation-to-change-the-hover-state-of-a-button\n--description--\nYou can use CSS @keyframes to change the color of a button in its hover state.\nHere's an example of changing the width of an image on hover:\n```html\n```\n--instructions--\nNote that ms stands for milliseconds, where 1000ms is equal to 1s.\nUse CSS @keyframes to change the background-color of the button element so it becomes #4791d0 when a user hovers over it. The @keyframes rule should only have an entry for 100%.\n--hints--\nThe @keyframes rule should use the animation-name background-color.\njs\nassert.match(code, /@keyframes\\s+?background-color\\s*?{/g);\nThere should be one rule under @keyframes that changes the background-color to #4791d0 at 100%.\njs\nassert.match(code, /100%\\s*?{\\s*?background-color:\\s*?#4791d0;\\s*?}/gi);\n--seed--\n--seed-contents--\n```html\nRegister\n```\n--solutions--\n```html\nRegister\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-css-animation-to-change-the-hover-state-of-a-button.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ea276f218a6a70279aadce6e23b8781e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-property-skewy-to-skew-an-element-along-the-y-axis.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a6367417b2b2512adc\ntitle: Use the CSS Transform Property skewY to Skew an Element Along the Y-Axis\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c2MZ2uB'\nforumTopicId: 301075\ndashedName: use-the-css-transform-property-skewy-to-skew-an-element-along-the-y-axis\n--description--\nGiven that the skewX() function skews the selected element along the X-axis by a given degree, it is no surprise that the skewY() property skews an element along the Y (vertical) axis.\n--instructions--\nSkew the element with the id of top -10 degrees along the Y-axis by using the transform property.\n--hints--\nThe element with id top should be skewed by -10 degrees along its Y-axis.\njs\nassert.match(code, /#top\\s*?{\\s*?.*?\\s*?transform:\\s*?skewY\\(-10deg\\);/g);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1389,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-property-skewy-to-skew-an-element-along-the-y-axis.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "42777d3e82ee34d1dc336e1fd6bb39c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-property-skewx-to-skew-an-element-along-the-x-axis.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a6367417b2b2512adb\ntitle: Use the CSS Transform Property skewX to Skew an Element Along the X-Axis\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cyLP8Sr'\nforumTopicId: 301074\ndashedName: use-the-css-transform-property-skewx-to-skew-an-element-along-the-x-axis\n--description--\nThe next function of the transform property is skewX(), which skews the selected element along its X (horizontal) axis by a given degree.\nThe following code skews the paragraph element by -32 degrees along the X-axis.\ncss\np {\ntransform: skewX(-32deg);\n}\n--instructions--\nSkew the element with the id of bottom by 24 degrees along the X-axis by using the transform property.\n--hints--\nThe element with id bottom should be skewed by 24 degrees along its X-axis.\njs\nassert.match(code, /#bottom\\s*?{\\s*?.*?\\s*?transform:\\s*?skewX\\(24deg\\);/g);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1421,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-property-skewx-to-skew-an-element-along-the-x-axis.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3ee73c02d660376e05921cc6ec57a78e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-scale-property-to-change-the-size-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a5367417b2b2512ad9\ntitle: Use the CSS Transform scale Property to Change the Size of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c2MZVSg'\nforumTopicId: 301076\ndashedName: use-the-css-transform-scale-property-to-change-the-size-of-an-element\n--description--\nTo change the scale of an element, CSS has the transform property, along with its scale() function. The following code example doubles the size of all the paragraph elements on the page:\ncss\np {\ntransform: scale(2);\n}\n--instructions--\nIncrease the size of the element with the id of ball2 to 1.5 times its original size.\n--hints--\nThe transform property for #ball2 should be set to scale it to 1.5 times its size.\njs\nassert.match(code,\n/#ball2\\s*?{\\s*?left:\\s*?65%;\\s*?transform:\\s*?scale\\(1\\.5\\);\\s*?}|#ball2\\s*?{\\s*?transform:\\s*?scale\\(1\\.5\\);\\s*?left:\\s*?65%;\\s*?}/gi\n);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-scale-property-to-change-the-size-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 288,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2e21d78efefdd550c1acfb78c8f424c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-css-linear-gradient-to-create-a-striped-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a5367417b2b2512ad7\ntitle: Use a CSS Linear Gradient to Create a Striped Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c6bmQh2'\nforumTopicId: 301072\ndashedName: use-a-css-linear-gradient-to-create-a-striped-element\n--description--\nThe repeating-linear-gradient() function is very similar to linear-gradient() with the major difference that it repeats the specified gradient pattern repeating-linear-gradient() accepts a variety of values, but for simplicity, you'll work with an angle value and color stop values in this challenge The angle value is the direction of the gradient Color stops are like width values that mark where a transition takes place, and are given with a percentage or a number of pixels In the example demonstrated in the code editor, the gradient starts with the color yellow at 0 pixels which blends into the second color blue at 40 pixels away from the start Since the next color stop is also at 40 pixels, the gradient immediately changes to the third color green, which itself blends into the fourth color value red as that is 80 pixels away from the beginning of the gradient For this example, it helps to think about the color stops as pairs where every two colors blend together css\n0px [yellow -- blend -- blue] 40px [green -- blend -- red] 80px\nIf every two color stop values are the same color, the blending isn't noticeable because it's between the same color, followed by a hard transition to the next color, so you end up with stripes --instructions--\nMake stripes by changing the repeating-linear-gradient() to use a gradient angle of 45deg, then set the first two color stops to yellow, and finally the second two color stops to black --hints--\nThe angle of the repeating-linear-gradient() should be 45deg js\nassert match(code,/background:\\s* repeating-linear-gradient\\(\\s* 45deg/gi);\nThe angle of the repeating-linear-gradient() should no longer be 90deg\njs\nassert notMatch(code, /90deg/gi);\nThe color stop at 0 pixels should be yellow js\nassert match(code, /yellow\\s+ 0(px) /gi);\nThe first color stop at 40 pixels should be yellow js\nassert match(code, /yellow\\s+",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-css-linear-gradient-to-create-a-striped-element.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "274d19f896f2dc617521446a8c7b582b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-css-linear-gradient-to-create-a-striped-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "45deg, then set the first two color stops to yellow, and finally the second two color stops to black --hints-- The angle of the repeating-linear-gradient() should be 45deg js assert match(code,/background:\\s* repeating-linear-gradient\\(\\s* 45deg/gi); The angle of the repeating-linear-gradient() should no longer be 90deg js assert notMatch(code, /90deg/gi); The color stop at 0 pixels should be yellow js assert match(code, /yellow\\s+ 0(px) /gi); The first color stop at 40 pixels should be yellow js assert match(code, /yellow\\s+40px/gi);\nThe second color stop at 40 pixels should be black js\nassert match(code, /yellow\\s+ 40px,\\s* black\\s+ 40px/gi);\nThe last color stop at 80 pixels should be black js\nassert match(code, /black\\s+ 80px/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-css-linear-gradient-to-create-a-striped-element.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "154efed0ec179526212e8cc04d5a1e8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-em-tag-to-italicize-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781a367417b2b2512ab9\ntitle: Use the em Tag to Italicize Text\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cVJRBtp'\nforumTopicId: 301078\ndashedName: use-the-em-tag-to-italicize-text\n--description--\nTo emphasize text, you can use the em tag. This displays text as italicized, as the browser applies the CSS of font-style: italic; to the element.\n--instructions--\nWrap an em tag around the contents of the paragraph tag to give it emphasis.\n--hints--\nYour code should add an em tag to the markup.\njs\nassert.lengthOf(document.querySelectorAll('em'),1);\nThe em tag should wrap around the contents of the p tag but not the p tag itself.\njs\nconst paragraphElement = document.querySelector('p');\nconst emElement = document.querySelector('em');\nassert.lengthOf(paragraphElement?.children, 1);\nassert.lengthOf(emElement?.children, 2);\n--seed--\n--seed-contents--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2759,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-em-tag-to-italicize-text.md",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8d67ae5d143f5486e9079e0589c1bb60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-scale-property-to-scale-an-element-on-hover.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a5367417b2b2512ada\ntitle: Use the CSS Transform scale Property to Scale an Element on Hover\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cyLPJuM'\nforumTopicId: 301077\ndashedName: use-the-css-transform-scale-property-to-scale-an-element-on-hover\n--description--\nThe transform property has a variety of functions that let you scale, move, rotate, skew, etc., your elements. When used with pseudo-classes such as :hover that specify a certain state of an element, the transform property can easily add interactivity to your elements.\nHere's an example to scale the paragraph elements to 2.1 times their original size when a user hovers over them:\ncss\np:hover {\ntransform: scale(2.1);\n}\nNote: Applying a transform to a div element will also affect any child elements contained in the div.\n--instructions--\nAdd a CSS rule for the hover state of the div and use the transform property to scale the div element to 1.1 times its original size when a user hovers over it.\n--hints--\nThe size of the div element should scale 1.1 times when the user hovers over it.\njs\nassert.match(code, /div:hover\\s*?{\\s*?transform:\\s*?scale\\(1\\.1\\);/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1696,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-css-transform-scale-property-to-scale-an-element-on-hover.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "566fa4f2de5d9daead19dd7b1503e754",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-bezier-curve-to-move-a-graphic.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78a9367417b2b2512ae9\ntitle: Use a Bezier Curve to Move a Graphic\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c6bnRCK'\nforumTopicId: 301071\ndashedName: use-a-bezier-curve-to-move-a-graphic\n--description--\nA previous challenge discussed the ease-out keyword that describes an animation change that speeds up first and then slows down at the end of the animation On the right, the difference between the ease-out keyword (for the blue element) and linear keyword (for the red element) is demonstrated Similar animation progressions to the ease-out keyword can be achieved by using a custom cubic Bezier curve function In general, changing the p1 and p2 anchor points drives the creation of different Bezier curves, which controls how the animation progresses through time Here's an example of a Bezier curve using values to mimic the ease-out style:\ncss\nanimation-timing-function: cubic-bezier(0, 0, 0 58, 1);\nRemember that all cubic-bezier functions start with p0 at (0, 0) and end with p3 at (1, 1) In this example, the curve moves faster through the Y-axis (starts at 0, goes to p1 y value of 0, then goes to p2 y value of 1) than it moves through the X-axis (0 to start, then 0 for p1, up to 0 58 for p2) As a result, the change in the animated element progresses faster than the time of the animation for that segment Towards the end of the curve, the relationship between the change in x and y values reverses - the y value moves from 1 to 1 (no change), and the x values move from 0 58 to 1, making the animation changes progress slower compared to the animation duration --instructions--\nTo see the effect of this Bezier curve in action, change the animation-timing-function of the element with id of red to a cubic-bezier function with x1, y1, x2, y2 set respectively to 0, 0, 0 58, 1 as the values This will make both elements progress through the animation similarly",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4325,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-bezier-curve-to-move-a-graphic.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "26ea7d7f4707f4e1b74b66a0ee0481b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-bezier-curve-to-move-a-graphic.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to 1 (no change), and the x values move from 0 58 to 1, making the animation changes progress slower compared to the animation duration --instructions-- To see the effect of this Bezier curve in action, change the animation-timing-function of the element with id of red to a cubic-bezier function with x1, y1, x2, y2 set respectively to 0, 0, 0 58, 1 as the values This will make both elements progress through the animation similarly--hints--\nThe value of the animation-timing-function property of the element with the id red should be a cubic-bezier function with x1, y1, x2, y2 values set respectively to 0, 0, 0 58, 1 js\nconst redElement = document querySelector('#red');\nconst redStyle = window getComputedStyle(redElement);\nassert equal(\nredStyle animationTimingFunction, 'cubic-bezier(0, 0, 0 58, 1)'\n);\nThe element with the id red should no longer have the animation-timing-function property of linear js\nconst redElement = document querySelector('#red');\nconst redStyle = window getComputedStyle(redElement);\nassert notEqual(redStyle animationTimingFunction, 'linear');\nThe value of the animation-timing-function property for the element with the id blue should not change js\nconst blueElement = document querySelector('#blue');\nconst blueStyle = window getComputedStyle( blueElement);\nconst blueBallAnimation = __helpers removeWhiteSpace(\nblueStyle animationTimingFunction\n);\nassert isTrue(\nblueBallAnimation == 'ease-out' ||\nblueBallAnimation == 'cubic-bezier(0,0,0 58,1)'\n);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4325,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-a-bezier-curve-to-move-a-graphic.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "78866c13a95094b2c36dde131700c00f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-strong-tag-to-make-text-bold.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781a367417b2b2512ab7\ntitle: Use the strong Tag to Make Text Bold\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/ceJNBSb'\nforumTopicId: 301080\ndashedName: use-the-strong-tag-to-make-text-bold\n--description--\nTo make text bold, you can use the strong tag. This is often used to draw attention to text and symbolize that it is important. With the strong tag, the browser applies the CSS of font-weight: bold; to the element.\n--instructions--\nWrap a strong tag around the text Stanford University inside the p tag (do not include the period).\n--hints--\nYour code should add one strong tag to the markup.\njs\nassert.lengthOf(document.querySelectorAll('strong'),1);\nThe strong tag should be inside the p tag.\njs\nconst paragraphElement = document.querySelector('p');\nconst paragraphChildren = paragraphElement?.querySelectorAll(`:scope ${'strong'}`);\nassert.lengthOf(paragraphChildren, 1);\nThe strong tag should wrap around the words Stanford University.\njs\nassert.match(document.querySelector('strong')?.textContent, /^Stanford University\\.?$/gi);\n--seed--\n--seed-contents--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-strong-tag-to-make-text-bold.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3a154b245af5f11281e9b51aa0ac8c5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-u-tag-to-underline-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781a367417b2b2512ab8\ntitle: Use the u Tag to Underline Text\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cN6aQCL'\nforumTopicId: 301082\ndashedName: use-the-u-tag-to-underline-text\n--description--\nTo underline text, you can use the u tag. This is often used to signify that a section of text is important, or something to remember. With the u tag, the browser applies the CSS of text-decoration: underline; to the element.\n--instructions--\nWrap the u tag only around the text Ph.D. students.\nNote: Try to avoid using the u tag when it could be confused for a link. Anchor tags also have a default underlined formatting.\n--hints--\nYour code should add a u tag to the markup.\njs\nassert.lengthOf(document.querySelectorAll('u'), 1);\nThe u tag should wrap around the text Ph.D. students.\njs\nassert.equal(document.querySelector('u')?.textContent , 'Ph.D. students');\n--seed--\n--seed-contents--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2786,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-u-tag-to-underline-text.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "32a5a7e5cb4b25863b81102c2d596c62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-s-tag-to-strikethrough-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781b367417b2b2512aba\ntitle: Use the s Tag to Strikethrough Text\nchallengeType: 0\nforumTopicId: 301079\ndashedName: use-the-s-tag-to-strikethrough-text\n--description--\nTo strikethrough text, which is when a horizontal line cuts across the characters, you can use the s tag. It shows that a section of text is no longer valid. With the s tag, the browser applies the CSS of text-decoration: line-through; to the element.\n--instructions--\nWrap the s tag around Google inside the h4 tag and then add the word Alphabet beside it without the strikethrough formatting.\n--hints--\nYour code should add one s tag to the markup.\njs\nassert.lengthOf(document.querySelectorAll('s'),1);\nA s tag should wrap around the Google text in the h4 tag. It should not contain the word Alphabet.\njs\nassert.match(document.querySelector('h4 > s')?.textContent, /Google/gi);\nassert.notMatch(document.querySelector('h4 > s')?.textContent, /Alphabet/gi);\nYou should include the word Alphabet in the h4 tag, without strikethrough formatting.\njs\nassert.match(document.querySelector('h4')?.innerHTML, /Alphabet/gi);\n--seed--\n--seed-contents--\n```html\nGoogle\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nGoogle Alphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-s-tag-to-strikethrough-text.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8796defb42ca0ba8d37e6451f7f6a228",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-text-transform-property-to-make-text-uppercase.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d781c367417b2b2512ac0\ntitle: Use the text-transform Property to Make Text Uppercase\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cvVZQSP'\nforumTopicId: 301081\ndashedName: use-the-text-transform-property-to-make-text-uppercase\n--description--\nThe text-transform property in CSS is used to change the appearance of text. It's a convenient way to make sure text on a webpage appears consistently, without having to change the text content of the actual HTML elements.\nThe following table shows how the different text-transformvalues change the example text \"Transform me\".\nValueResultlowercase\"transform me\"uppercase\"TRANSFORM ME\"capitalize\"Transform Me\"initialUse the default valueinheritUse the text-transform value from the parent elementnoneDefault: Use the original text\n--instructions--\nTransform the text of the h4 to be uppercase using the text-transform property.\n--hints--\nThe h4 text should be uppercase.\njs\nconst h4Element =document.querySelector('h4')\nconst h4Style = window.getComputedStyle(h4Element);\nassert.equal(h4Style?.textTransform, 'uppercase');\nThe original text of the h4 should not be changed.\njs\nassert.notEqual(document.querySelector('h4')?.textContent, document.querySelector('h4')?.textContent?.toUpperCase());\n--seed--\n--seed-contents--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```\n--solutions--\n```html\nAlphabet\nGoogle was founded by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University.\nLarry Page\nSergey Brin\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\applied-visual-design\\use-the-text-transform-property-to-make-text-uppercase.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0213e5b4bf10a4a09de5c4e5655dfcab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-a-negative-margin-to-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08823\ntitle: Add a Negative Margin to an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cnpyGs3'\nforumTopicId: 16166\ndashedName: add-a-negative-margin-to-an-element\n--description--\nAn element's margin controls the amount of space between an element's border and surrounding elements.\nIf you set an element's margin to a negative value, the element will grow larger.\n--instructions--\nTry to set the margin to a negative value like the one for the red box.\nChange the margin of the blue box to -15px, so it fills the entire horizontal width of the yellow box around it.\n--hints--\nYour blue-box class should give elements -15px of margin.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst marginTop = window.getComputedStyle(blueBox)[\"margin-top\"];\nassert.strictEqual(marginTop, \"-15px\");\n--seed--\n--seed-contents--\n```html\npadding\npadding\n```\n--solutions--\n```html\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2166,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-a-negative-margin-to-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 232,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3c3950a14430876bc34f0fe08b0d82fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-different-margins-to-each-side-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1248bd9aedf08824\ntitle: Add Different Margins to Each Side of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cg4RWh4'\nforumTopicId: 16633\ndashedName: add-different-margins-to-each-side-of-an-element\n--description--\nSometimes you will want to customize an element so that it has a different margin on each of its sides.\nCSS allows you to control the margin of all four individual sides of an element with the margin-top, margin-right, margin-bottom, and margin-left properties.\n--instructions--\nGive the blue box a margin of 40px on its top and left side, but only 20px on its bottom and right side.\n--hints--\nYour blue-box class should give the top of elements 40px of margin.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst marginTop = window.getComputedStyle(blueBox)['margin-top'];\nassert.strictEqual(marginTop, '40px');\nYour blue-box class should give the right of elements 20px of margin.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst marginRight = window.getComputedStyle(blueBox)['margin-right'];\nassert.strictEqual(marginRight, '20px');\nYour blue-box class should give the bottom of elements 20px of margin.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst marginBottom = window.getComputedStyle(blueBox)['margin-bottom'];\nassert.strictEqual(marginBottom, '20px');\nYour blue-box class should give the left of elements 40px of margin.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst marginLeft = window.getComputedStyle(blueBox)['margin-left'];\nassert.strictEqual(marginLeft,'40px');\n--seed--\n--seed-contents--\n```html\nmargin\npadding\npadding\n```\n--solutions--\n```html\nmargin\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3141,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-different-margins-to-each-side-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "58c7ab1065aadbbe954edbf3c7bbbd2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-different-padding-to-each-side-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08824\ntitle: Add Different Padding to Each Side of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cB7mwUw'\nforumTopicId: 16634\ndashedName: add-different-padding-to-each-side-of-an-element\n--description--\nSometimes you will want to customize an element so that it has different amounts of padding on each of its sides.\nCSS allows you to control the padding of all four individual sides of an element with the padding-top, padding-right, padding-bottom, and padding-left properties.\n--instructions--\nGive the blue box a padding of 40px on its top and left side, but only 20px on its bottom and right side.\n--hints--\nYour blue-box class should give the top of the elements 40px of padding.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst paddingTop = window.getComputedStyle(blueBox)['padding-top'];\nassert.strictEqual(paddingTop, '40px');\nYour blue-box class should give the right of the elements 20px of padding.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst paddingRight = window.getComputedStyle(blueBox)['padding-right'];\nassert.strictEqual(paddingRight, '20px');\nYour blue-box class should give the bottom of the elements 20px of padding.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst paddingBottom = window.getComputedStyle(blueBox)['padding-bottom'];\nassert.strictEqual(paddingBottom, '20px');\nYour blue-box class should give the left of the elements 40px of padding.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst paddingLeft = window.getComputedStyle(blueBox)['padding-left'];\nassert.strictEqual(paddingLeft, '40px');\n--seed--\n--seed-contents--\n```html\nmargin\npadding\npadding\n```\n--solutions--\n```html\nmargin\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-different-padding-to-each-side-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c223b01da907dda9cb93d1540b740b89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\adjust-the-margin-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08822\ntitle: Adjust the Margin of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cVJarHW'\nforumTopicId: 16654\ndashedName: adjust-the-margin-of-an-element\n--description--\nAn element's margin controls the amount of space between an element's border and surrounding elements.\nHere, we can see that the blue box and the red box are nested within the yellow box. Note that the red box has a bigger margin than the blue box, making it appear smaller.\nWhen you increase the blue box's margin, it will increase the distance between its border and surrounding elements.\n--instructions--\nChange the margin of the blue box to match that of the red box.\n--hints--\nYour blue-box class should give elements 20px of margin.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst marginTop = window.getComputedStyle(blueBox)['margin-top'];\nassert.strictEqual(marginTop, '20px');\n--seed--\n--seed-contents--\n```html\nmargin\npadding\npadding\n```\n--solutions--\n```html\nmargin\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\adjust-the-margin-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f7819d4c8126588ddaf84d9db66384b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-rounded-corners-with-border-radius.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08814\ntitle: Add Rounded Corners with border-radius\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cbZm2hg'\nforumTopicId: 16649\ndashedName: add-rounded-corners-with-border-radius\n--description--\nYour cat photo currently has sharp corners. We can round out those corners with a CSS property called border-radius.\n--instructions--\nYou can specify a border-radius with pixels. Give your cat photo a border-radius of 10px.\nNote: This challenge allows for multiple possible solutions. For example, you may add border-radius to either the .thick-green-border class or the .smaller-image class.\n--hints--\nYour image element should have the class thick-green-border.\njs\nassert.isTrue(document.querySelector('img').classList.contains('thick-green-border'));\nYour image should have a border radius of 10px.\n```js\nconst image = document.querySelector('img');\nconst style = window.getComputedStyle(image);\nconst borderTopLeftRadius = style['border-top-left-radius'];\nconst borderTopRightRadius = style['border-top-right-radius'];\nconst borderBottomLeftRadius = style['border-bottom-left-radius'];\nconst borderBottomRightRadius = style['border-bottom-right-radius'];\nassert.strictEqual(borderTopLeftRadius, '10px');\nassert.strictEqual(borderTopRightRadius, '10px');\nassert.strictEqual(borderBottomLeftRadius, '10px');\nassert.strictEqual(borderBottomRightRadius, '10px');\n```\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-rounded-corners-with-border-radius.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "92eded0ec18cf4301337340de3b5c475",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\adjust-the-padding-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad88fee1348bd9aedf08825\ntitle: Adjust the Padding of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cED8ZC2'\nforumTopicId: 301083\ndashedName: adjust-the-padding-of-an-element\n--description--\nNow let's put our Cat Photo App away for a little while and learn more about styling HTML.\nYou may have already noticed this, but all HTML elements are essentially little rectangles.\nThree important properties control the space that surrounds each HTML element: padding, border, and margin.\nAn element's padding controls the amount of space between the element's content and its border.\nHere, we can see that the blue box and the red box are nested within the yellow box. Note that the red box has more padding than the blue box.\nWhen you increase the blue box's padding, it will increase the distance (padding) between the text and the border around it.\n--instructions--\nChange the padding of your blue box to match that of your red box.\n--hints--\nYour blue-box class should give elements 20px of padding.\njs\nconst blueBox = document.querySelector('.blue-box');\nconst paddingTop = window.getComputedStyle(blueBox)['padding-top'];\nassert.strictEqual(paddingTop, '20px');\n--seed--\n--seed-contents--\n```html\nmargin\npadding\npadding\n```\n--solutions--\n```html\nmargin\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\adjust-the-padding-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "27115e9a81d075e6cf3d9e676fd9f04a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\change-a-variable-for-a-specific-area.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9d72a1424fe3d0e10cad15\ntitle: Change a variable for a specific area\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cdRwbuW'\nforumTopicId: 301085\ndashedName: change-a-variable-for-a-specific-area\n--description--\nWhen you create your variables in :root they will set the value of that variable for the whole page.\nYou can then overwrite these variables by setting them again within a specific selector.\n--instructions--\nChange the value of --penguin-belly to white in the penguin class.\n--hints--\nThe penguin class should reassign the --penguin-belly variable to white.\njs\nassert.match(__helpers.removeCssComments(code), /\\.penguin\\s*?{[\\s\\S]*--penguin-belly\\s*?:\\s*?white\\s*?;[\\s\\S]*}/gi);\nThe penguin class should not contain the background-color property.\njs\nassert.match(__helpers.removeCssComments(code), /^((?!background-color\\s*?:\\s*?)[\\s\\S])*$/g);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4736,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\change-a-variable-for-a-specific-area.md",
      "source_type": "git_repo"
    },
    "token_count": 263,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3f29ece0e1e67d223670c3b154aba768",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\attach-a-fallback-value-to-a-css-variable.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9d7286424fe3d0e10cad13\ntitle: Attach a Fallback value to a CSS Variable\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c6bDNfp'\nforumTopicId: 301084\ndashedName: attach-a-fallback-value-to-a-css-variable\n--description--\nWhen using your variable as a CSS property value, you can attach a fallback value that your browser will revert to if the given variable is invalid.\nNote: This fallback is not used to increase browser compatibility, and it will not work on IE browsers. Rather, it is used so that the browser has a color to display if it cannot find your variable.\nHere's how you do it:\ncss\nbackground: var(--penguin-skin, black);\nThis will set background to black if your variable wasn't set. Note that this can be useful for debugging.\n--instructions--\nIt looks like there is a problem with the variables supplied to the .penguin-top and .penguin-bottom classes. Rather than fix the typo, add a fallback value of black to the background property of the .penguin-top and .penguin-bottom classes.\n--hints--\nThe fallback value of black should be used in the background property of the penguin-top class.\njs\nassert.match(__helpers.removeCssComments(code), /.penguin-top\\s*?{[\\s\\S]*background\\s*?:\\s*?var\\(\\s*?--pengiun-skin\\s*?,\\s*?black\\s*?\\)\\s*?;[\\s\\S]*}[\\s\\S]*.penguin-bottom\\s{/gi);\nThe fallback value of black should be used in background property of the penguin-bottom class.\njs\nassert.match(__helpers.removeCssComments(code), /.penguin-bottom\\s*?{[\\s\\S]*background\\s*?:\\s*?var\\(\\s*?--pengiun-skin\\s*?,\\s*?black\\s*?\\)\\s*?;[\\s\\S]*}/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\attach-a-fallback-value-to-a-css-variable.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a03c37b3e7fff683c14f867da7c95475",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\change-the-color-of-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08803\ntitle: Change the Color of Text\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cRkVmSm'\nforumTopicId: 16775\ndashedName: change-the-color-of-text\n--description--\nNow let's change the color of some of our text.\nWe can do this by changing the style of your h2 element.\nThe property that is responsible for the color of an element's text is the color style property.\nHere's how you would set your h2 element's text color to blue:\n```html\nCatPhotoApp\n```\nNote that it is a good practice to end inline style declarations with a ; .\n--instructions--\nChange your h2 element's style so that its text color is red.\n--hints--\nYour h2 element should have a style declaration.\njs\nassert.exists(document.querySelector('h2').getAttribute('style'));\nYour h2 element should have color set to red.\njs\nassert.strictEqual(document.querySelector('h2').style.color, 'red');\nYour style declaration should end with a ; .\njs\nassert.isTrue(document.querySelector('h2').getAttribute('style').endsWith(';'));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3345,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\change-the-color-of-text.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "71f15dac6fdbf49de88424384dcf6679",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-borders-around-your-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9bedf08813\ntitle: Add Borders Around Your Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c2MvnHZ'\nforumTopicId: 16630\ndashedName: add-borders-around-your-elements\n--description--\nCSS borders have properties like style, color and width For example, if we wanted to create a red, 5 pixel border around an HTML element, we could use this class:\n```html\n```\n--instructions--\nCreate a class called thick-green-border This class should add a 10px, solid, green border around an HTML element Apply the class to your cat photo Remember that you can apply multiple classes to an element using its class attribute, by separating each class name with a space For example:\nhtml\n<img class=\"class1 class2\">\n--hints--\nYour img element should have the class smaller-image js\nassert isTrue(document querySelector('img') classList contains('smaller-image'));\nYour img element should have the class thick-green-border js\nassert isTrue(document querySelector('img') classList contains('thick-green-border'));\nYour image should have a border width of 10px js\n// Note: to any future maintainers, the read width of the border is dependent on\n// the zoom For example we cannot match 10px exactly because if a campers set the zoom to 110%\n// it will be read as 9~px const image = document querySelector('img');\nconst imageBorderTopWidth = window getComputedStyle(image)[\"border-top-width\"];\nconst widthNumber = parseInt(imageBorderTopWidth);\nassert isAtLeast(widthNumber, 8);\nassert isAtMost(widthNumber, 12);\nYour image should have a border style of solid js\nconst image = document querySelector('img');\nconst borderRightStyle = window getComputedStyle(image)[\"border-right-style\"];\nassert strictEqual(borderRightStyle, 'solid');\nThe border around your img element should be green js\nconst image = document querySelector('img');\nconst borderLeftColor = window getComputedStyle(image)[\"border-left-color\"];\nassert strictEqual(borderLeftColor, 'rgb(0, 128, 0)');\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-borders-around-your-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c82450589210fea90c97be6904fd5e41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-borders-around-your-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "document querySelector('img'); const imageBorderTopWidth = window getComputedStyle(image)[\"border-top-width\"]; const widthNumber = parseInt(imageBorderTopWidth); assert isAtLeast(widthNumber, 8); assert isAtMost(widthNumber, 12); Your image should have a border style of solid js const image = document querySelector('img'); const borderRightStyle = window getComputedStyle(image)[\"border-right-style\"]; assert strictEqual(borderRightStyle, 'solid'); The border around your img element should be green js const image = document querySelector('img'); const borderLeftColor = window getComputedStyle(image)[\"border-left-color\"]; assert strictEqual(borderLeftColor, 'rgb(0, 128, 0)'); --seed-- --seed-contents-- ```html CatPhotoApp Click here to view more cat photosThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\add-borders-around-your-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a1386bce3eaf948b70a8fc917459c3d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\create-a-custom-css-variable.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9d726c424fe3d0e10cad11\ntitle: Create a custom CSS Variable\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cQd27Hr'\nforumTopicId: 301086\ndashedName: create-a-custom-css-variable\n--description--\nTo create a CSS variable, you just need to give it a name with two hyphens in front of it and assign it a value like this:\ncss\n--penguin-skin: gray;\nThis will create a variable named --penguin-skin and assign it the value of gray. Now you can use that variable elsewhere in your CSS to change the value of other properties to gray.\n--instructions--\nIn the penguin class, create a variable name --penguin-skin and give it a value of gray.\n--hints--\npenguin class should declare the --penguin-skin variable and assign it to gray.\njs\nassert.match(__helpers.removeHtmlComments(code), /\\.penguin\\s*\\{[^{}]*?--penguin-skin\\s*:\\s*gr[ae]y\\s*;[^{}]*?\\}/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\create-a-custom-css-variable.md",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "58ff6089b765b138de96563fb835b1ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\change-the-font-size-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08806\ntitle: Change the Font Size of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c3bvDc8'\nforumTopicId: 16777\ndashedName: change-the-font-size-of-an-element\n--description--\nFont size is controlled by the font-size CSS property, like this:\ncss\nh1 {\nfont-size: 30px;\n}\n--instructions--\nInside the same <style> tag that contains your red-text class, create an entry for p elements and set the font-size to 16 pixels (16px).\n--hints--\nBetween the style tags, give the p elements font-size of 16px. Browser and Text zoom should be at 100%.\njs\nassert.match(__helpers.removeCssComments(code), /p\\s*{\\s*font-size\\s*:\\s*16\\s*px\\s*;\\s*}/i);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3137,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\change-the-font-size-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d0a191b26dfb368604251a2c9c3ab49e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\give-a-background-color-to-a-div-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fed1348bd9aede07836\ntitle: Give a Background Color to a div Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cdRKMCk'\nforumTopicId: 18190\ndashedName: give-a-background-color-to-a-div-element\n--description--\nYou can set an element's background color with the background-color property.\nFor example, if you wanted an element's background color to be green, you'd put this within your style element:\ncss\n.green-background {\nbackground-color: green;\n}\n--instructions--\nCreate a class called silver-background with the background-color of silver. Assign this class to your div element.\n--hints--\nYour div element should have the class silver-background.\njs\nassert.isTrue(document.querySelector('div').classList.contains('silver-background'));\nYour div element should have a silver background.\njs\nconst div = document.querySelector('div');\nconst backgroundColor = window.getComputedStyle(div)['background-color'];\nassert.strictEqual(backgroundColor, 'rgb(192, 192, 192)');\nA class named silver-background should be defined within the style element and the value of silver should be assigned to the background-color property.\njs\nassert.match(__helpers.removeHtmlComments(code), /\\.silver-background\\s*{\\s*background-color\\s*:\\s*silver\\s*;?\\s*}/);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4633,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\give-a-background-color-to-a-div-element.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "76d41679cd7b06168eb2328f70a7a703",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\inherit-css-variables.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9d7295424fe3d0e10cad14\ntitle: Inherit CSS Variables\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cyLZZhZ'\nforumTopicId: 301088\ndashedName: inherit-css-variables\n--description--\nWhen you create a variable, it is available for you to use inside the selector in which you create it. It also is available in any of that selector's descendants. This happens because CSS variables are inherited, just like ordinary properties.\nTo make use of inheritance, CSS variables are often defined in the :root element.\n:root is a pseudo-class selector that matches the root element of the document, usually the html element. By creating your variables in :root, they will be available globally and can be accessed from any other selector in the style sheet.\n--instructions--\nDefine a variable named --penguin-belly in the :root selector and give it the value of pink. You can then see that the variable is inherited and that all the child elements which use it get pink backgrounds.\n--hints--\nThe --penguin-belly variable should be declared in the :root and assigned the value pink.\njs\nassert.match(\n__helpers.removeCssComments(code),\n/:root\\s*?{[\\s\\S]*--penguin-belly\\s*?:\\s*?pink\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5055,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\inherit-css-variables.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5171863efefb5fb674beb2dc8b25dc21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\improve-compatibility-with-browser-fallbacks.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5b7d72c338cd7e35b63f3e14\ntitle: Improve Compatibility with Browser Fallbacks\nchallengeType: 0\nforumTopicId: 301087\ndashedName: improve-compatibility-with-browser-fallbacks\n--description--\nWhen working with CSS you will likely run into browser compatibility issues at some point. This is why it's important to provide browser fallbacks to avoid potential problems.\nWhen your browser parses the CSS of a webpage, it ignores any properties that it doesn't recognize or support. For example, if you use a CSS variable to assign a background color on a site, Internet Explorer will ignore the background color because it does not support CSS variables. In that case, the browser will use whatever value it has for that property. If it can't find any other value set for that property, it will revert to the default value, which is typically not ideal.\nThis means that if you do want to provide a browser fallback, it's as easy as providing another more widely supported value immediately before your declaration. That way an older browser will have something to fall back on, while a newer browser will just interpret whatever declaration comes later in the cascade.\n--instructions--\nIt looks like a variable is being used to set the background color of the .red-box class. Let's improve our browser compatibility by adding another background declaration right before the existing declaration and set its value to red.\n--hints--\nYour .red-box rule should include a fallback with the background set to red immediately before the existing background declaration.\njs\nconst spacelessCode = __helpers.removeWhiteSpace(__helpers.removeCssComments(code));\nassert.match(\nspacelessCode,\n/\\.red-box{background:(red|#ff0000|#f00|rgb\\(255,0,0\\)|rgb\\(100%,0%,0%\\)|hsl\\(0,100%,50%\\));background:var\\(--red-color\\);height:200px;width:200px;}/gi\n);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2315,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\improve-compatibility-with-browser-fallbacks.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1aab41c070b00bc8cd89c563605b922f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\make-circular-images-with-a-border-radius.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08815\ntitle: Make Circular Images with a border-radius\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c2MvrcB'\nforumTopicId: 18229\ndashedName: make-circular-images-with-a-border-radius\n--description--\nIn addition to pixels, you can also specify the border-radius using a percentage.\n--instructions--\nGive your cat photo a border-radius of 50%.\n--hints--\nYour image should have a border radius of 50%, making it perfectly circular.\njs\nconst image = document.querySelector('img');\nconst borderTopLeftRadius = window.getComputedStyle(image)['border-top-left-radius'];\nassert.strictEqual(parseInt(borderTopLeftRadius), 50);\nThe border-radius value should use a percentage value of 50%.\njs\nassert.match(__helpers.removeCssComments(code), /50%/g);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4048,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\make-circular-images-with-a-border-radius.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5a5d80d90fdcbccf5560ae132b120458",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\import-a-google-font.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08807\ntitle: Import a Google Font\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cM9MRsJ'\nforumTopicId: 18200\ndashedName: import-a-google-font\n--description--\nIn addition to specifying common fonts that are found on most operating systems, we can also specify non-standard, custom web fonts for use on our website There are many sources for web fonts on the Internet For this example we will focus on the Google Fonts library Google Fonts is a free library of web fonts that you can use in your CSS by referencing the font's URL So, let's go ahead and import and apply a Google font (note that if Google is blocked in your country, you will need to skip this challenge) To import a Google Font, you can copy the font's URL from the Google Fonts library and then paste it in your HTML For this challenge, we'll import the Lobster font To do this, copy the following code snippet and paste it into the top of your code editor (before the opening style element):\nhtml\n<link href=\"https://fonts googleapis com/css family=Lobster\" rel=\"stylesheet\" type=\"text/css\">\nNow you can use the Lobster font in your CSS by using Lobster as the FAMILY_NAME as in the following example:\ncss\nfont-family: FAMILY_NAME, GENERIC_NAME;\nThe GENERIC_NAME is optional, and is a fallback font in case the other specified font is not available This is covered in the next challenge Family names are case-sensitive and need to be wrapped in quotes if there is a space in the name For example, you need quotes to use the \"Open Sans\" font, but not to use the Lobster font --instructions--\nImport the Lobster font to your web page Then, use an element selector to set Lobster as the font-family for your h2 element --hints--\nYou should import the Lobster font js\nassert exists(document querySelector('link[href*=\"googleapis\" i]'));\nYour h2 element should use the font Lobster js\nconst h2 = document querySelector('h2');\nconst fontFamily = window getComputedStyle(h2)['font-family'];\nassert match(fontFamily, /lobster/i);\nYou should only use an h2 element selector to change the font js\nassert match(__helpers removeHtmlComments(code), /\\s*[^\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\import-a-google-font.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6dc5b845cc8351c33f5a59bd82944ab9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\import-a-google-font.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "font --instructions-- Import the Lobster font to your web page Then, use an element selector to set Lobster as the font-family for your h2 element --hints-- You should import the Lobster font js assert exists(document querySelector('link[href*=\"googleapis\" i]')); Your h2 element should use the font Lobster js const h2 = document querySelector('h2'); const fontFamily = window getComputedStyle(h2)['font-family']; assert match(fontFamily, /lobster/i); You should only use an h2 element selector to change the font js assert match(__helpers removeHtmlComments(code), /\\s*[^\\]h2\\s*\\{\\s*font-family\\s*:\\s*('|\"|)Lobster\\1\\s*(,\\s*('|\"|)[a-z -]+\\3\\s*) (;\\s*\\}|\\})/gi);\nYour p element should still use the font monospace js\nconst paragraphElement = document querySelector('p');\nconst fontFamily = window getComputedStyle(paragraphElement)['font-family'];\nassert match(fontFamily, /monospace/i);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\import-a-google-font.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "79556139b2eddf181adaf16aa28467dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\inherit-styles-from-the-body-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08746\ntitle: Inherit Styles from the Body Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c9bmdtR'\nforumTopicId: 18204\ndashedName: inherit-styles-from-the-body-element\n--description--\nNow we've proven that every HTML page has a body element, and that its body element can also be styled with CSS Remember, you can style your body element just like any other HTML element, and all your other elements will inherit your body element's styles --instructions--\nFirst, create an h1 element with the text Hello World Then, let's give all elements on your page the color of green by adding color: green; to your body element's style declaration Finally, give your body element the font-family of monospace by adding font-family: monospace; to your body element's style declaration --hints--\nYou should create an h1 element js\nassert isNotEmpty(document querySelectorAll('h1'));\nYour h1 element should have the text Hello World js\nassert match(\ndocument querySelector('h1') textContent,\n/hello world/i\n);\nYour h1 element should have a closing tag js\nconst commentlessCode = __helpers removeHtmlComments(code);\nassert match(commentlessCode, /<\\/h1>/g);\nassert match(commentlessCode, /<h1/g);\nassert lengthOf(commentlessCode match(/<\\/h1>/g), commentlessCode match(/<h1/g) length);\nYour body element should have the color property of green js\nconst bodyElement = document querySelector('body');\nconst color = window getComputedStyle(bodyElement)['color'];\nassert strictEqual(color, 'rgb(0, 128, 0)');\nYour body element should have the font-family property of monospace js\nconst bodyElement = document querySelector('body');\nconst fontFamily = window getComputedStyle(bodyElement)['font-family'];\nassert include(fontFamily toLowerCase(), \"monospace\");\nYour h1 element should inherit the font monospace from your body element js\nconst h1Element = document querySelector('h1');\nconst fontFamily = window getComputedStyle(h1Element)['font-family'];\nassert include(fontFamily toLowerCase(), \"monospace\");\nYour h1 element should inherit the color green from your body element js\nconst h1Element = document querySelector('h1');\nconst color = window getComputedStyle(h1Element)['color'];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\inherit-styles-from-the-body-element.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "15d4197518b1faff97bfd646606c0b54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\inherit-styles-from-the-body-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Your body element should have the font-family property of monospace js const bodyElement = document querySelector('body'); const fontFamily = window getComputedStyle(bodyElement)['font-family']; assert include(fontFamily toLowerCase(), \"monospace\"); Your h1 element should inherit the font monospace from your body element js const h1Element = document querySelector('h1'); const fontFamily = window getComputedStyle(h1Element)['font-family']; assert include(fontFamily toLowerCase(), \"monospace\"); Your h1 element should inherit the color green from your body element js const h1Element = document querySelector('h1'); const color = window getComputedStyle(h1Element)['color']; assertstrictEqual(color, 'rgb(0, 128, 0)');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\nHello World ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\inherit-styles-from-the-body-element.md",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2055c85e9209eb287ddf63d6c8a91921",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-class-declarations-with-inline-styles.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf06756\ntitle: Override Class Declarations with Inline Styles\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cGJDRha'\nforumTopicId: 18252\ndashedName: override-class-declarations-with-inline-styles\n--description--\nSo we've proven that id declarations override class declarations, regardless of where they are declared in your style element CSS.\nThere are other ways that you can override CSS. Do you remember inline styles?\n--instructions--\nUse an inline style to try to make our h1 element white. Remember, inline styles look like this:\n```html\n```\nLeave the `blue-text` and `pink-text` classes on your `h1` element.\n# --hints--\nYour `h1` element should have the class `pink-text`.\n```js\nassert.isTrue(document.querySelector('h1').classList.contains('pink-text'));\n```\nYour `h1` element should have the class `blue-text`.\n```js\nassert.isTrue(document.querySelector('h1').classList.contains('blue-text'));\n```\nYour `h1` element should have the id of `orange-text`.\n```js\nassert.strictEqual(document.querySelector('h1').getAttribute('id'), 'orange-text');\n```\nYour `h1` element should have an inline style.\n```js\nassert.exists(document.querySelector('h1[style]'));\n```\nYour `h1` element should be white.\n```js\nconst h1Element = document.querySelector('h1');\nconst color = window.getComputedStyle(h1Element)['color'];\nassert.strictEqual(color, 'rgb(255, 255, 255)');\n```\n# --seed--\n## --seed-contents--\n```html\nHello World!\n```\n# --solutions--\n```html\nHello World!\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2120,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-class-declarations-with-inline-styles.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "04d42fb869ccbbb92445fec108611e0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-styles-in-subsequent-css.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf04756\ntitle: Override Styles in Subsequent CSS\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cGJDQug'\nforumTopicId: 18253\ndashedName: override-styles-in-subsequent-css\n--description--\nOur pink-text class overrode our body element's CSS declaration!\nWe just proved that our classes will override the body element's CSS. So the next logical question is, what can we do to override our pink-text class?\n--instructions--\nCreate an additional CSS class called blue-text that gives an element the color blue. Make sure it's below your pink-text class declaration.\nApply the blue-text class to your h1 element in addition to your pink-text class, and let's see which one wins.\nApplying multiple class attributes to an HTML element is done with a space between them like this:\nhtml\nclass=\"class1 class2\"\nNote: It doesn't matter which order the classes are listed in the HTML element.\nHowever, the order of the class declarations in the <style> section is what is important. The second declaration will always take precedence over the first. Because .blue-text is declared second, it overrides the attributes of .pink-text.\n--hints--\nYour h1 element should have the class pink-text.\njs\nassert.isTrue(document.querySelector('h1').classList.contains('pink-text'));\nYour h1 element should have the class blue-text.\njs\nassert.isTrue(document.querySelector('h1').classList.contains('blue-text'));\nBoth blue-text and pink-text should belong to the same h1 element.\njs\nassert.isTrue(document.querySelector('.pink-text').classList.contains('blue-text'));\nYour h1 element should be blue.\njs\nconst h1Element = document.querySelector('h1');\nconst color = window.getComputedStyle(h1Element)['color'];\nassert.strictEqual(color, 'rgb(0, 0, 255)');\n--seed--\n--seed-contents--\n```html\nHello World!\n```\n--solutions--\n```html\nHello World!\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2355,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-styles-in-subsequent-css.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cdd9dcc8b9574794c923c66614ad6189",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\prioritize-one-style-over-another.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08756\ntitle: Prioritize One Style Over Another\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cZ8wnHv'\nforumTopicId: 18258\ndashedName: prioritize-one-style-over-another\n--description--\nSometimes your HTML elements will receive multiple styles that conflict with one another.\nFor example, your h1 element can't be both green and pink at the same time.\nLet's see what happens when we create a class that makes text pink, then apply it to an element. Will our class override the body element's color: green; CSS property?\n--instructions--\nCreate a CSS class called pink-text that gives an element the color pink.\nGive your h1 element the class of pink-text.\n--hints--\nYour h1 element should have the class pink-text.\njs\nassert.isTrue(document.querySelector('h1').classList.contains('pink-text'));\nYour <style> should have a pink-text CSS class that changes the color.\njs\nassert.match(__helpers.removeCssComments(code), /\\.pink-text\\s*\\{\\s*color\\s*:\\s*.+\\s*;?\\s*\\}/g);\nYour h1 element should be pink.\njs\nconst h1Element = document.querySelector('h1');\nconst color = window.getComputedStyle(h1Element)['color'];\nassert.strictEqual(color, 'rgb(255, 192, 203)');\n--seed--\n--seed-contents--\n```html\nHello World!\n```\n--solutions--\n```html\nHello World!\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1643,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\prioritize-one-style-over-another.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c8923d9e4512db121c84cda8346b8861",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-all-other-styles-by-using-important.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf07756\ntitle: Override All Other Styles by using Important\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cm24rcp'\nforumTopicId: 18249\ndashedName: override-all-other-styles-by-using-important\n--description--\nYay We just proved that inline styles will override all the CSS declarations in your style element But wait There's one last way to override CSS This is the most powerful method of all But before we do it, let's talk about why you would ever want to override CSS In many situations, you will use CSS libraries These may accidentally override your own CSS So when you absolutely need to be sure that an element has specific CSS, you can use important Let's go all the way back to our pink-text class declaration Remember that our pink-text class was overridden by subsequent class declarations, id declarations, and inline styles --instructions--\nLet's add the keyword important to your pink-text element's color declaration to make 100% sure that your h1 element will be pink An example of how to do this is:\ncss\ncolor: red important;\n--hints--\nYour h1 element should have the class pink-text js\nassert isTrue(document querySelector('h1') classList contains('pink-text'));\nYour h1 element should have the class blue-text js\nassert isTrue(document querySelector('h1') classList contains('blue-text'));\nYour h1 element should have the id of orange-text js\nassert strictEqual(document querySelector('h1') getAttribute('id'), 'orange-text');\nYour h1 element should have the inline style of color: white js\nconst commentessCode = __helpers removeHtmlComments(code);\nassert match(commentessCode, /<h1 *style/gi);\nassert match(commentessCode, /<h1 *style *color\\s* :/gi);\nYour pink-text class declaration should have the important keyword to override all other declarations js\nassert match(__helpers removeCssComments(code), /\\ pink-text\\s* \\{[\\s\\S]* color: *pink * important\\s*; [^\\ ]*\\}/g);\nYour h1 element should be pink js\nconst h1Element = document querySelector('h1');\nconst color = window getComputedStyle(h1Element)['color'];\nassert strictEqual(color, 'rgb(255, 192, 203)');\n--seed--\n--seed-contents--\n```html\nHello World",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-all-other-styles-by-using-important.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a85647b9c29d35883fe9bd23fad359b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-all-other-styles-by-using-important.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the inline style of color: white js const commentessCode = __helpers removeHtmlComments(code); assert match(commentessCode, /<h1 *style/gi); assert match(commentessCode, /<h1 *style *color\\s* :/gi); Your pink-text class declaration should have the important keyword to override all other declarations js assert match(__helpers removeCssComments(code), /\\ pink-text\\s* \\{[\\s\\S]* color: *pink * important\\s*; [^\\ ]*\\}/g); Your h1 element should be pink js const h1Element = document querySelector('h1'); const color = window getComputedStyle(h1Element)['color']; assert strictEqual(color, 'rgb(255, 192, 203)'); --seed-- --seed-contents-- ```html Hello World```\n--solutions--\n```html\nHello World ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-all-other-styles-by-using-important.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "235a66831e88dbea9012a34752e0d4ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\set-the-font-family-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aede08807\ntitle: Set the Font Family of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c3bvpCg'\nforumTopicId: 18278\ndashedName: set-the-font-family-of-an-element\n--description--\nYou can set which font an element should use, by using the font-family property.\nFor example, if you wanted to set your h2 element's font to sans-serif, you would use the following CSS:\ncss\nh2 {\nfont-family: sans-serif;\n}\n--instructions--\nMake all of your p elements use the monospace font.\n--hints--\nYour p elements should use the font monospace.\njs\nconst notRed = document.querySelector('p:not(.red-text)');\nconst fontFamily = window.getComputedStyle(notRed)['font-family'];\nassert.match(fontFamily, /monospace/i);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\set-the-font-family-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7ade4b28fae32f018ca6c94fae8d7124",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\set-the-id-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87eee1348bd9aede07836\ntitle: Set the id of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cN6MEc2'\nforumTopicId: 18279\ndashedName: set-the-id-of-an-element\n--description--\nIn addition to classes, each HTML element can also have an id attribute.\nThere are several benefits to using id attributes: You can use an id to style a single element and later you'll learn that you can use them to select and modify specific elements with JavaScript.\nid attributes should be unique. Browsers won't enforce this, but it is a widely agreed upon best practice. So please don't give more than one element the same id attribute.\nHere's an example of how you give your h2 element the id of cat-photo-app:\n```html\n```\n# --instructions--\nGive your `form` element the id `cat-photo-form`.\n# --hints--\nYour `form` element should have the id of `cat-photo-form`.\n```js\nassert.strictEqual(document.querySelector('form').getAttribute('id'), 'cat-photo-form');\n```\n# --seed--\n## --seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n# --solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\set-the-id-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "199c27ae1ef40e61cf9555c1206a7112",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\size-your-images.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9acdf08812\ntitle: Size Your Images\nchallengeType: 0\nforumTopicId: 18282\ndashedName: size-your-images\n--description--\nCSS has a property called width that controls an element's width. Just like with fonts, we'll use px (pixels) to specify the image's width.\nFor example, if we wanted to create a CSS class called larger-image that gave HTML elements a width of 500 pixels, we'd use:\n```html\n```\n--instructions--\nCreate a class called smaller-image and use it to resize the image so that it's only 100 pixels wide.\n--hints--\nYour img element should have the class smaller-image.\njs\nconst relaxingCatImage = document.querySelector(\"img[src='https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg']\");\nconst catImageClass = relaxingCatImage.getAttribute('class').trim().split(/\\s+/g);\nassert.include(catImageClass, 'smaller-image');\nYour image should be 100 pixels wide.\njs\nconst image = document.querySelector('img');\nconst width = image.getBoundingClientRect().width;\nassert.isBelow(width, 200);\nassert.match(__helpers.removeCssComments(code), /\\.smaller-image\\s*{\\s*width\\s*:\\s*100px\\s*(;\\s*}|})/i);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\size-your-images.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7e3496a1e4b3c3651fd7ce4bc7fbe49f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-class-declarations-by-styling-id-attributes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd8aedf06756\ntitle: Override Class Declarations by Styling ID Attributes\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cRkpDhB'\nforumTopicId: 18251\ndashedName: override-class-declarations-by-styling-id-attributes\n--description--\nWe just proved that browsers read CSS from top to bottom in order of their declaration That means that, in the event of a conflict, the browser will use whichever CSS declaration came last Notice that if we even had put blue-text before pink-text in our h1 element's classes, it would still look at the declaration order and not the order of their use But we're not done yet There are other ways that you can override CSS Do you remember id attributes Let's override your pink-text and blue-text classes, and make your h1 element orange, by giving the h1 element an id and then styling that id --instructions--\nGive your h1 element the id attribute of orange-text Remember, id styles look like this:\n```html\n```\nLeave the `blue-text` and `pink-text` classes on your `h1` element Create a CSS declaration for your `orange-text` id in your `style` element Here's an example of what this looks like:\n```css\n#brown-text {\ncolor: brown;\n}\n```\n**Note:** It doesn't matter whether you declare this CSS above or below `pink-text` class, since the `id` attribute will always take precedence # --hints--\nYour `h1` element should have the class `pink-text` ```js\nassert isTrue(document querySelector('h1') classList contains('pink-text'));\n```\nYour `h1` element should have the class `blue-text` ```js\nassert isTrue(document querySelector('h1') classList contains('blue-text'));\n```\nYour `h1` element should have the id of `orange-text` ```js\nassert strictEqual(document querySelector('h1') getAttribute('id'),'orange-text');\n```\nThere should be only one `h1` element ```js\nassert lengthOf(document querySelectorAll('h1'), 1);\n```\nYour `orange-text` id should have a CSS declaration ```js\nassert match(__helpers removeCssComments(code), /#orange-text\\s*{/gi);\n```\nYour `h1` should not have any `style` attributes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-class-declarations-by-styling-id-attributes.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "561421e6330bd241993182f253041e3a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-class-declarations-by-styling-id-attributes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have the class `pink-text` ```js assert isTrue(document querySelector('h1') classList contains('pink-text')); ``` Your `h1` element should have the class `blue-text` ```js assert isTrue(document querySelector('h1') classList contains('blue-text')); ``` Your `h1` element should have the id of `orange-text` ```js assert strictEqual(document querySelector('h1') getAttribute('id'),'orange-text'); ``` There should be only one `h1` element ```js assert lengthOf(document querySelectorAll('h1'), 1); ``` Your `orange-text` id should have a CSS declaration ```js assert match(__helpers removeCssComments(code), /#orange-text\\s*{/gi); ``` Your `h1` should not have any `style` attributes```js\nassert notMatch(__helpers removeHtmlComments(code), //gi);\n```\nYour `h1` element should be orange ```js\nconst h1Element = document querySelector('h1');\nconst color = window getComputedStyle(h1Element)['color'];\nassert strictEqual(color, 'rgb(255, 165, 0)');\n```\n# --seed--\n## --seed-contents--\n```html\nHello World ```\n# --solutions--\n```html\nHello World ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3024,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\override-class-declarations-by-styling-id-attributes.md",
      "source_type": "git_repo"
    },
    "token_count": 268,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "48d9d4d3fb48c2d8083808d0f171cba3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\understand-absolute-versus-relative-units.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad82fee1322bd9aedf08721\ntitle: Understand Absolute versus Relative Units\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cN66JSL'\nforumTopicId: 301089\ndashedName: understand-absolute-versus-relative-units\n--description--\nThe last several challenges all set an element's margin or padding with pixels (px). Pixels are a type of length unit, which is what tells the browser how to size or space an item. In addition to px, CSS has a number of different length unit options that you can use.\nThe two main types of length units are absolute and relative. Absolute units tie to physical units of length. For example, in and mm refer to inches and millimeters, respectively. Absolute length units approximate the actual measurement on a screen, but there are some differences depending on a screen's resolution.\nRelative units, such as em or rem, are relative to another length value. For example, em is based on the size of an element's font. If you use it to set the font-size property itself, it's relative to the parent's font-size.\nNote: There are several relative unit options that are tied to the size of the viewport. They are covered in the Responsive Web Design Principles section.\n--instructions--\nAdd a padding property to the element with class red-box and set it to 1.5em.\n--hints--\nYour red-box class should have a padding property.\n```js\nconst redBox =document.querySelector('.red-box');\nconst style = window.getComputedStyle(redBox);\nassert.notEqual(style['padding-top'], '0px');\nassert.notEqual(style['padding-right'], '0px');\nassert.notEqual(style['padding-bottom'], '0px');\nassert.notEqual(style['padding-left'], '0px');\n```\nYour red-box class should give elements 1.5em of padding.\njs\nassert.match(__helpers.removeCssComments(code), /\\.red-box\\s*?{[\\s\\S]*padding\\s*:\\s*?1\\.5em/gi);\n--seed--\n--seed-contents--\n```html\nmargin\npadding\npadding\n```\n--solutions--\n```html\nmargin\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\understand-absolute-versus-relative-units.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a480304b279cc84bdbc815afc5973fae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\style-the-html-body-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08736\ntitle: Style the HTML Body Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cB77PHW'\nforumTopicId: 18313\ndashedName: style-the-html-body-element\n--description--\nNow let's start fresh and talk about CSS inheritance.\nEvery HTML page has a body element.\n--instructions--\nWe can prove that the body element exists here by giving it a background-color of black.\nWe can do this by adding the following to our style element:\ncss\nbody {\nbackground-color: black;\n}\n--hints--\nYour body element should have the background-color of black.\n```js\nconst body = document.querySelector('body');\nconst backgroundColor = window.getComputedStyle(body)['background-color'];\nassert.strictEqual(backgroundColor, 'rgb(0, 0, 0)');\n```\nYour CSS rule should be properly formatted with both opening and closing curly brackets.\njs\nassert.match(code, /<style>\\s*body\\s*\\{\\s*background.*\\s*:\\s*.*;\\s*\\}\\s*<\\/style>/i);\nYour CSS rule should end with a semicolon.\njs\nassert.match(code, /<style>\\s*body\\s*\\{\\s*background.*\\s*:\\s*.*;\\s*\\}\\s*<\\/style>/i);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\style-the-html-body-element.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cb8fdf7a95303a44cb4062d562731aaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\style-multiple-elements-with-a-css-class.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aefe08806\ntitle: Style Multiple Elements with a CSS Class\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cRkVbsQ'\nforumTopicId: 18311\ndashedName: style-multiple-elements-with-a-css-class\n--description--\nClasses allow you to use the same CSS styles on multiple HTML elements. You can see this by applying your red-text class to the first p element.\n--hints--\nYour h2 element should be red.\njs\nconst h2Element = document.querySelector('h2');\nconst color = window.getComputedStyle(h2Element)['color'];\nassert.strictEqual(color, 'rgb(255, 0, 0)');\nYour h2 element should have the class red-text.\njs\nassert.isTrue(document.querySelector('h2').classList.contains('red-text'));\nYour first p element should be red.\njs\nconst paragraph = document.querySelectorAll('p')[0];\nconst color = window.getComputedStyle(paragraph )['color'];\nassert.strictEqual(color, 'rgb(255, 0, 0)');\nYour second and third p elements should not be red.\n```js\nconst paragraph2 = document.querySelectorAll('p')[1];\nconst paragraph3 = document.querySelectorAll('p')[2];\nconst color2 = window.getComputedStyle(paragraph2)['color'];\nconst color3 = window.getComputedStyle(paragraph3)['color'];\nassert.notStrictEqual(color2, 'rgb(255, 0, 0)');\nassert.notStrictEqual(color3, 'rgb(255, 0, 0)');\n```\nYour first p element should have the class red-text.\njs\nassert.isTrue(document.querySelectorAll('p')[0].classList.contains('red-text'));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\style-multiple-elements-with-a-css-class.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "29d8f0a61222c064a5213331f854f176",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\specify-how-fonts-should-degrade.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08808\ntitle: Specify How Fonts Should Degrade\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cpVKBfQ'\nforumTopicId: 18304\ndashedName: specify-how-fonts-should-degrade\n--description--\nThere are several default fonts that are available in all browsers These generic font families include monospace, serif and sans-serif When one font isn't available, you can tell the browser to \"degrade\" to another font For example, if you wanted an element to use the Helvetica font, but degrade to the sans-serif font when Helvetica isn't available, you will specify it as follows:\ncss\np {\nfont-family: Helvetica, sans-serif;\n}\nGeneric font family names are not case-sensitive Also, they do not need quotes because they are CSS keywords --instructions--\nTo begin, apply the monospace font to the h2 element, so that it now has two fonts - Lobster and monospace In the last challenge, you imported the Lobster font using the link tag Now comment out that import of the Lobster font (using the HTML comments you learned before) from Google Fonts so that it isn't available anymore Notice how your h2 element degrades to the monospace font Note: If you have the Lobster font installed on your computer, you won't see the degradation because your browser is able to find the font --hints--\nYour h2 element should use the font Lobster js\nconst h2Element = document querySelector('h2');\nconst fontFamily = window getComputedStyle(h2Element)['font-family'];\nassert match(fontFamily, /^\" lobster/i);\nYour h2 element should degrade to the font monospace when Lobster is not available js\nassert match(__helpers removeCssComments(code), /\\s*h2\\s*\\{\\s*font-family\\s*\\:\\s*(\\'|\"|)Lobster\\1\\s*,\\s*monospace\\s*; \\s*\\}/gi);\nYou should comment out your call to Google for the Lobster font by putting < -- in front of it js\nassert match(code, /< --[^fc]/gi);\nYou should close your comment by adding --> js\nassert match(code, /[^fc]-->/gi);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\specify-how-fonts-should-degrade.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "364ea6c38d8c243e4a8ed1dcdc4198a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\specify-how-fonts-should-degrade.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "fontFamily = window getComputedStyle(h2Element)['font-family']; assert match(fontFamily, /^\" lobster/i); Your h2 element should degrade to the font monospace when Lobster is not available js assert match(__helpers removeCssComments(code), /\\s*h2\\s*\\{\\s*font-family\\s*\\:\\s*(\\'|\"|)Lobster\\1\\s*,\\s*monospace\\s*; \\s*\\}/gi); You should comment out your call to Google for the Lobster font by putting < -- in front of it js assert match(code, /< --[^fc]/gi); You should close your comment by adding --> js assert match(code, /[^fc]-->/gi); --seed-- --seed-contents-- ```html CatPhotoApp Click here to view more cat photosThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\specify-how-fonts-should-degrade.md",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4124efefde91554155be6836f3c6716a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-media-query-to-change-a-variable.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9d72ad424fe3d0e10cad16\ntitle: Use a media query to change a variable\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cWmL8UP'\nforumTopicId: 301091\ndashedName: use-a-media-query-to-change-a-variable\n--description--\nCSS Variables can simplify the way you use media queries.\nFor instance, when your screen is smaller or larger than your media query break point, you can change the value of a variable, and it will apply its style wherever it is used.\n--instructions--\nIn the :root selector of the media query, change it so --penguin-size is redefined and given a value of 200px. Also, redefine --penguin-skin and give it a value of black. Then resize the preview to see this change in action.\n--hints--\n:root should reassign the --penguin-size variable to 200px.\njs\nassert.match(__helpers.removeCssComments(code), /media\\s*?\\(\\s*?max-width\\s*?:\\s*?350px\\s*?\\)\\s*?{[\\s\\S]*:root\\s*?{[\\s\\S]*--penguin-size\\s*?:\\s*?200px\\s*?;[\\s\\S]*}[\\s\\S]*}/gi);\n:root should reassign the --penguin-skin variable to black.\njs\nassert.match(__helpers.removeCssComments(code), /media\\s*?\\(\\s*?max-width\\s*?:\\s*?350px\\s*?\\)\\s*?{[\\s\\S]*:root\\s*?{[\\s\\S]*--penguin-skin\\s*?:\\s*?black\\s*?;[\\s\\S]*}[\\s\\S]*}/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5628,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-media-query-to-change-a-variable.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "457d5a21c720aef0b4a67269efc73fc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-css-class-to-style-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aecf08806\ntitle: Use a CSS Class to Style an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/c2MvDtV'\nforumTopicId: 18337\ndashedName: use-a-css-class-to-style-an-element\n--description--\nClasses are reusable styles that can be added to HTML elements Here's an example CSS class declaration:\n```html\n```\nYou can see that we've created a CSS class called blue-text within the <style> tag You can apply a class to an HTML element like this: <h2 class=\"blue-text\">CatPhotoApp</h2> Note that in your CSS style element, class names start with a period In your HTML elements' class attribute, the class name does not include the period --instructions--\nInside your style element, change the h2 selector to red-text and update the color's value from blue to red Give your h2 element the class attribute with a value of red-text --hints--\nYour h2 element should be red js\nconst h2Element = document querySelector('h2');\nconst color = window getComputedStyle(h2Element)['color'];\nassert strictEqual(color, 'rgb(255, 0, 0)');\nYour h2 element should have the class red-text js\nassert isTrue(document querySelector('h2') classList contains('red-text'));\nYour stylesheet should declare a red-text class and have its color set to red js\nassert match(__helpers removeCssComments(code), /\\ red-text\\s*\\{\\s*color\\s*:\\s*red; \\s*\\}/g);\nYou should not use inline style declarations like style=\"color: red\" in your h2 element js\nassert notExists(document querySelector('h2') getAttribute('style'));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3995,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-css-class-to-style-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0479abf7f7039de4038b09881b23687f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-css-class-to-style-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "its color set to red js assert match(__helpers removeCssComments(code), /\\ red-text\\s*\\{\\s*color\\s*:\\s*red; \\s*\\}/g); You should not use inline style declarations like style=\"color: red\" in your h2 element js assert notExists(document querySelector('h2') getAttribute('style')); --seed-- --seed-contents-- ```html CatPhotoApp Click here to view more cat photos Things cats love: catnip laser pointers lasagna Top 3 things cats hate: flea treatment thunder other cats Indoor Outdoor Loving Lazy Energetic Submit ``` --solutions-- ```html CatPhotoApp Click here to view more cat photosThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3995,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-css-class-to-style-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bae25a0debf7b7cc4dc43fcd98f7c0f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-custom-css-variable.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9d727a424fe3d0e10cad12\ntitle: Use a custom CSS Variable\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cM989ck'\nforumTopicId: 301090\ndashedName: use-a-custom-css-variable\n--description--\nAfter you create your variable, you can assign its value to other CSS properties by referencing the name you gave it css\nbackground: var(--penguin-skin);\nThis will change the background of whatever element you are targeting to gray because that is the value of the --penguin-skin variable Note that styles will not be applied unless the variable names are an exact match --instructions--\nApply the --penguin-skin variable to the background property of the penguin-top, penguin-bottom, right-hand and left-hand classes --hints--\nThe --penguin-skin variable should be applied to the background property of the penguin-top class js\nassert match(__helpers removeCssComments(code), / penguin-top\\s* {[\\s\\S]*background\\s* :\\s* var\\s* \\(\\s* --penguin-skin\\s* \\)\\s* ;[\\s\\S]*}[\\s\\S]* penguin-bottom\\s{/gi);\nThe --penguin-skin variable should be applied to the background property of the penguin-bottom class js\nassert match(__helpers removeCssComments(code), / penguin-bottom\\s* {[\\s\\S]*background\\s* :\\s* var\\s* \\(\\s* --penguin-skin\\s* \\)\\s* ;[\\s\\S]*}[\\s\\S]* right-hand\\s{/gi);\nThe --penguin-skin variable should be applied to the background property of the right-hand class js\nassert match(__helpers removeCssComments(code), / right-hand\\s* {[\\s\\S]*background\\s* :\\s* var\\s* \\(\\s* --penguin-skin\\s* \\)\\s* ;[\\s\\S]*}[\\s\\S]* left-hand\\s{/gi);\nThe --penguin-skin variable should be applied to the background property of the left-hand class js\nassert match(__helpers removeCssComments(code), / left-hand\\s* {[\\s\\S]*background\\s* :\\s* var\\s* \\(\\s* --penguin-skin\\s* \\)\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5755,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-custom-css-variable.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6d9cb7f1a9e537a3b560554facaff79b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-custom-css-variable.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to the background property of the penguin-bottom class js assert match(__helpers removeCssComments(code), / penguin-bottom\\s* {[\\s\\S]*background\\s* :\\s* var\\s* \\(\\s* --penguin-skin\\s* \\)\\s* ;[\\s\\S]*}[\\s\\S]* right-hand\\s{/gi); The --penguin-skin variable should be applied to the background property of the right-hand class js assert match(__helpers removeCssComments(code), / right-hand\\s* {[\\s\\S]*background\\s* :\\s* var\\s* \\(\\s* --penguin-skin\\s* \\)\\s* ;[\\s\\S]*}[\\s\\S]* left-hand\\s{/gi); The --penguin-skin variable should be applied to the background property of the left-hand class js assert match(__helpers removeCssComments(code), / left-hand\\s* {[\\s\\S]*background\\s* :\\s* var\\s* \\(\\s* --penguin-skin\\s* \\)\\s*;[\\s\\S]*}/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5755,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-a-custom-css-variable.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1b87e6ea66bb2de26dcb6f7db2b225fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-abbreviated-hex-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08719\ntitle: Use Abbreviated Hex Code\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cRkpKAm'\nforumTopicId: 18338\ndashedName: use-abbreviated-hex-code\n--description--\nMany people feel overwhelmed by the possibilities of more than 16 million colors And it's difficult to remember hex code Fortunately, you can shorten it For example, red's hex code #FF0000 can be shortened to #F00 This shortened form gives one digit for red, one digit for green, and one digit for blue This reduces the total number of possible colors to around 4,000 But browsers will interpret #FF0000 and #F00 as exactly the same color --instructions--\nGo ahead, try using the abbreviated hex codes to color the correct elements ColorShort Hex CodeCyan#0FFGreen#0F0Red#F00Fuchsia#F0F\n--hints--\nYour h1 element with the text I am red should be given the color red js\nconst redText = document querySelector(' red-text');\nconst color = window getComputedStyle(redText)['color'];\nassert strictEqual(color, 'rgb(255, 0, 0)');\nThe abbreviated hex code for the color red should be used instead of the hex code #FF0000 js\nassert match(code,/\\ red-text\\s* {\\s* color\\s*:\\s* #F00\\s* ; \\s* }/gi);\nYour h1 element with the text I am green should be given the color green js\nconst greenText = document querySelector(' green-text');\nconst color = window getComputedStyle(greenText)['color'];\nassert strictEqual(color, 'rgb(0, 255, 0)');\nThe abbreviated hex code for the color green should be used instead of the hex code #00FF00 js\nassert match(__helpers removeCssComments(code), /\\ green-text\\s* {\\s* color\\s*:\\s* #0F0\\s* ; \\s* }/gi);\nYour h1 element with the text I am cyan should be given the color cyan js\nconst cyanText = document querySelector(' cyan-text');\nconst color = window getComputedStyle(cyanText)['color'];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-abbreviated-hex-code.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "046fdfdc39d8a64983c4fa3b63cf0ec1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-abbreviated-hex-code.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "color green js const greenText = document querySelector(' green-text'); const color = window getComputedStyle(greenText)['color']; assert strictEqual(color, 'rgb(0, 255, 0)'); The abbreviated hex code for the color green should be used instead of the hex code #00FF00 js assert match(__helpers removeCssComments(code), /\\ green-text\\s* {\\s* color\\s*:\\s* #0F0\\s* ; \\s* }/gi); Your h1 element with the text I am cyan should be given the color cyan js const cyanText = document querySelector(' cyan-text'); const color = window getComputedStyle(cyanText)['color']; assertstrictEqual(color, 'rgb(0, 255, 255)');\nThe abbreviated hex code for the color cyan should be used instead of the hex code #00FFFF js\nassert match(__helpers removeCssComments(code), /\\ cyan-text\\s* {\\s* color\\s*:\\s* #0FF\\s* ; \\s* }/gi);\nYour h1 element with the text I am fuchsia should be given the color fuchsia js\nconst fuchsiaText = document querySelector(' fuchsia-text');\nconst color = window getComputedStyle(fuchsiaText)['color'];\nassert strictEqual(color,'rgb(255, 0, 255)');\nThe abbreviated hex code for the color fuchsia should be used instead of the hex code #FF00FF js\nassert match(__helpers removeCssComments(code), /\\ fuchsia-text\\s* {\\s* color\\s*:\\s* #F0F\\s* ; \\s* }/gi);\n--seed--\n--seed-contents--\n```html\nI am red I am fuchsia I am cyan I am green ```\n--solutions--\n```html\nI am red I am fuchsia I am cyan I am green ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-abbreviated-hex-code.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f56e09e1f1145715a7f9a5d530d4abd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-an-id-attribute-to-style-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87dee1348bd9aede07836\ntitle: Use an id Attribute to Style an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cakyZfL'\nforumTopicId: 18339\ndashedName: use-an-id-attribute-to-style-an-element\n--description--\nOne cool thing about id attributes is that, like classes, you can style them using CSS However, an id is not reusable and should only be applied to one element An id also has a higher specificity (importance) than a class so if both are applied to the same element and have conflicting styles, the styles of the id will be applied Here's an example of how you can take your element with the id attribute of cat-photo-element and give it the background color of green In your style element:\n```css\ncat-photo-element {\nbackground-color: green;\n}\n```\nNote that inside your style element, you always reference classes by putting a in front of their names You always reference ids by putting a # in front of their names --instructions--\nTry giving your form, which now has the id attribute of cat-photo-form, a green background --hints--\nYour form element should have the id of cat-photo-form js\nassert strictEqual(document querySelector('form') getAttribute('id'), 'cat-photo-form');\nYour form element should have the background-color of green js\nconst catPhotoForm = document querySelector('#cat-photo-form');\nconst backgroundColor = window getComputedStyle(catPhotoForm)['background-color'];\nassert strictEqual(backgroundColor, 'rgb(0, 128, 0)');\nYour form element should have an id attribute js\nassert match(__helpers removeHtmlComments(code), /<form *cat-photo-form *>/gi);\nassert lengthOf(__helpers removeHtmlComments(code) match(/<form *cat-photo-form *>/gi), 1)\nYou should not give your form any class or style attributes js\nassert notMatch(__helpers removeHtmlComments(code), /<form *style *>/gi);\nassert notMatch(__helpers removeHtmlComments(code), /<form *class *>/gi);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5489,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-an-id-attribute-to-style-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b97372901bdde084cb287e163a624069",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-an-id-attribute-to-style-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "background-color of green js const catPhotoForm = document querySelector('#cat-photo-form'); const backgroundColor = window getComputedStyle(catPhotoForm)['background-color']; assert strictEqual(backgroundColor, 'rgb(0, 128, 0)'); Your form element should have an id attribute js assert match(__helpers removeHtmlComments(code), /<form *cat-photo-form *>/gi); assert lengthOf(__helpers removeHtmlComments(code) match(/<form *cat-photo-form *>/gi), 1) You should not give your form any class or style attributes js assert notMatch(__helpers removeHtmlComments(code), /<form *style *>/gi); assert notMatch(__helpers removeHtmlComments(code), /<form *class *>/gi); --seed-- --seed-contents-- ```html CatPhotoApp Click here to view more cat photosThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5489,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-an-id-attribute-to-style-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 288,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6f0d2542c870305c592c92caa2f9e95a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-attribute-selectors-to-style-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 58c383d33e2e3259241f3076\ntitle: Use Attribute Selectors to Style Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cnpymfJ'\nforumTopicId: 301092\ndashedName: use-attribute-selectors-to-style-elements\n--description--\nYou have been adding id or class attributes to elements that you wish to specifically style These are known as ID and class selectors There are other CSS Selectors you can use to select custom groups of elements to style Let's bring out CatPhotoApp again to practice using CSS Selectors For this challenge, you will use the [attr=value] attribute selector to style the checkboxes in CatPhotoApp This selector matches and styles elements with a specific attribute value For example, the below code changes the margins of all elements with the attribute type and a corresponding value of radio:\ncss\n[type='radio'] {\nmargin: 20px 0px 20px 0px;\n}\n--instructions--\nUsing the type attribute selector, try to give the checkboxes in CatPhotoApp a top margin of 10px and a bottom margin of 15px --hints--\nThe type attribute selector should be used to select the checkboxes js\nassert match(__helpers removeHtmlComments(code), /<style>[\\s\\S]* \\[\\s* type\\s* =\\s* (\"|')checkbox\\1\\s* \\]\\s* {[\\s\\S]* }[\\s\\S]* <\\/style>/gi);\nThe top margins of the checkboxes should be 10px js\nconst checkboxes = document querySelectorAll(\"[type='checkbox']\");\nassert isNotEmpty(checkboxes);\ncheckboxes forEach(function(checkbox) {\nconst marginTop = window getComputedStyle(checkbox)['margin-top'];\nassert strictEqual(marginTop, '10px');\n});\nThe bottom margins of the checkboxes should be 15px js\nconst checkboxes = document querySelectorAll(\"[type='checkbox']\");\nassert isNotEmpty(checkboxes);\ncheckboxes forEach(function(checkbox) {\nconst marginBottom = window getComputedStyle(checkbox)['margin-bottom'];\nassert strictEqual(marginBottom, '15px');\n});\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5433,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-attribute-selectors-to-style-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7dc40d5385747f1782120c777946d7cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-attribute-selectors-to-style-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "type\\s* =\\s* (\"|')checkbox\\1\\s* \\]\\s* {[\\s\\S]* }[\\s\\S]* <\\/style>/gi); The top margins of the checkboxes should be 10px js const checkboxes = document querySelectorAll(\"[type='checkbox']\"); assert isNotEmpty(checkboxes); checkboxes forEach(function(checkbox) { const marginTop = window getComputedStyle(checkbox)['margin-top']; assert strictEqual(marginTop, '10px'); }); The bottom margins of the checkboxes should be 15px js const checkboxes = document querySelectorAll(\"[type='checkbox']\"); assert isNotEmpty(checkboxes); checkboxes forEach(function(checkbox) { const marginBottom = window getComputedStyle(checkbox)['margin-bottom']; assert strictEqual(marginBottom, '15px'); }); --seed-- --seed-contents-- ```html CatPhotoApp Click here to view more cat photosThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5433,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-attribute-selectors-to-style-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d3510dbf02c4c46bf6c4e124b7b220c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-css-variables-to-change-several-elements-at-once.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9d725e424fe3d0e10cad10\ntitle: Use CSS Variables to change several elements at once\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c6bDECm'\nforumTopicId: 301093\ndashedName: use-css-variables-to-change-several-elements-at-once\n--description--\nCSS Variables are a powerful way to change many CSS style properties at once by changing only one value.\nFollow the instructions below to see how changing just three values can change the styling of many elements.\n--instructions--\nIn the penguin class, change the black value to gray, the gray value to white, and the yellow value to orange.\n--hints--\npenguin class should declare the --penguin-skin variable and assign it to gray.\njs\nassert.match(__helpers.removeHtmlComments(code), /.penguin\\s*?{[\\s\\S]*--penguin-skin\\s*?:\\s*?gray\\s*?;[\\s\\S]*}/gi);\npenguin class should declare the --penguin-belly variable and assign it to white.\njs\nassert.match(code, /.penguin\\s*?{[\\s\\S]*--penguin-belly\\s*?:\\s*?white\\s*?;[\\s\\S]*}/gi);\npenguin class should declare the --penguin-beak variable and assign it to orange.\njs\nassert.match(code, /.penguin\\s*?{[\\s\\S]*--penguin-beak\\s*?:\\s*?orange\\s*?;[\\s\\S]*}/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5063,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-css-variables-to-change-several-elements-at-once.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9d01d27815acfcdb91686a62d376e0bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-padding-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08826\ntitle: Use Clockwise Notation to Specify the Padding of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cB7mBS9'\nforumTopicId: 18346\ndashedName: use-clockwise-notation-to-specify-the-padding-of-an-element\n--description--\nInstead of specifying an element's padding-top, padding-right, padding-bottom, and padding-left properties individually, you can specify them all in one line, like this:\ncss\npadding: 10px 20px 10px 20px;\nThese four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific padding instructions --instructions--\nUse Clockwise Notation to give the blue-box class a padding of 40px on its top and left side, but only 20px on its bottom and right side --hints--\nYour blue-box class should give the top of elements 40px of padding js\nconst blueBox = document querySelector(' blue-box');\nconst paddingTop = window getComputedStyle(blueBox)['padding-top'];\nassert strictEqual(paddingTop, '40px');\nYour blue-box class should give the right of elements 20px of padding js\nconst blueBox = document querySelector(' blue-box');\nconst paddingRight = window getComputedStyle(blueBox)['padding-right'];\nassert strictEqual(paddingRight, '20px');\nYour blue-box class should give the bottom of elements 20px of padding js\nconst blueBox = document querySelector(' blue-box');\nconst paddingBottom = window getComputedStyle(blueBox)['padding-bottom'];\nassert strictEqual(paddingBottom, '20px');\nYour blue-box class should give the left of elements 40px of padding js\nconst blueBox = document querySelector(' blue-box');\nconst paddingLeft = window getComputedStyle(blueBox)['padding-left'];\nassert strictEqual(paddingLeft, '40px');\nYou should use the clockwise notation to set the padding of blue-box class js\nconst css =  __helpers removeCssComments(document querySelector('style:not( fcc-hide-header)') textContent);\nassert match(css, /\\ blue-box\\s*{[\\s\\S]*padding\\s*:\\s*\\d+px\\s+\\d+px\\s+\\d+px\\s+\\d+px(;\\s*[^}]+\\s*}|;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3471,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-padding-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b9ce13ea0c3ebff57af00c5e422e34ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-padding-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "give the bottom of elements 20px of padding js const blueBox = document querySelector(' blue-box'); const paddingBottom = window getComputedStyle(blueBox)['padding-bottom']; assert strictEqual(paddingBottom, '20px'); Your blue-box class should give the left of elements 40px of padding js const blueBox = document querySelector(' blue-box'); const paddingLeft = window getComputedStyle(blueBox)['padding-left']; assert strictEqual(paddingLeft, '40px'); You should use the clockwise notation to set the padding of blue-box class js const css = __helpers removeCssComments(document querySelector('style:not( fcc-hide-header)') textContent); assert match(css, /\\ blue-box\\s*{[\\s\\S]*padding\\s*:\\s*\\d+px\\s+\\d+px\\s+\\d+px\\s+\\d+px(;\\s*[^}]+\\s*}|;\\s*})/);\n--seed--\n--seed-contents--\n```html\nmargin\npadding\npadding\n```\n--solutions--\n```html\nmargin\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3471,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-padding-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c19fe0b83428326c02aa3b2797dbaffc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-hex-code-for-specific-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08726\ntitle: Use Hex Code for Specific Colors\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/c8W9mHM'\nforumTopicId: 18350\ndashedName: use-hex-code-for-specific-colors\n--description--\nDid you know there are other ways to represent colors in CSS? One of these ways is called hexadecimal code, or hex code for short.\nWe usually use decimals, or base 10 numbers, which use the symbols 0 to 9 for each digit. Hexadecimals (or hex) are base 16 numbers. This means it uses sixteen distinct symbols. Like decimals, the symbols 0-9 represent the values zero to nine. Then A,B,C,D,E,F represent the values ten to fifteen. Altogether, 0 to F can represent a digit in hexadecimal, giving us 16 total possible values. You can find more information about hexadecimal numbers here.\nIn CSS, we can use 6 hexadecimal digits to represent colors, two each for the red (R), green (G), and blue (B) components. For example, #000000 is black and is also the lowest possible value. You can find more information about the RGB color system here.\ncss\nbody {\ncolor: #000000;\n}\n--instructions--\nReplace the word black in our body element's background-color with its hex code representation, #000000.\n--hints--\nYour body element should have the background-color of black.\njs\nconst body = document.querySelector('body');\nconst backgroundColor = window.getComputedStyle(body)['background-color'];\nassert.strictEqual(backgroundColor, 'rgb(0, 0, 0)');\nThe hex code for the color black should be used instead of the word black.\njs\nassert.match(code, /body\\s*{(([\\s\\S]*;\\s*?)|\\s*?)background.*\\s*:\\s*?#000(000)?((\\s*})|(;[\\s\\S]*?}))/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-hex-code-for-specific-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f6ff0c89a4872e2cfce6edb878a9409d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-margin-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9afdf08726\ntitle: Use Clockwise Notation to Specify the Margin of an Element\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cnpybAd'\nforumTopicId: 18345\ndashedName: use-clockwise-notation-to-specify-the-margin-of-an-element\n--description--\nLet's try this again, but with margin this time Instead of specifying an element's margin-top, margin-right, margin-bottom, and margin-left properties individually, you can specify them all in one line, like this:\ncss\nmargin: 10px 20px 10px 20px;\nThese four values work like a clock: top, right, bottom, left, and will produce the exact same result as using the side-specific margin instructions --instructions--\nUse Clockwise Notation to give the element with the blue-box class a margin of 40px on its top and left side, but only 20px on its bottom and right side --hints--\nYour blue-box class should give the top of elements 40px of margin js\nconst blueBox = document querySelector(' blue-box');\nconst marginTop = window getComputedStyle(blueBox)['margin-top'];\nassert strictEqual(marginTop, '40px');\nYour blue-box class should give the right of elements 20px of margin js\nconst blueBox = document querySelector(' blue-box');\nconst marginRight = window getComputedStyle(blueBox)['margin-right'];\nassert strictEqual(marginRight, '20px');\nYour blue-box class should give the bottom of elements 20px of margin js\nconst blueBox = document querySelector(' blue-box');\nconst marginBottom = window getComputedStyle(blueBox)['margin-bottom'];\nassert strictEqual(marginBottom, '20px');\nYour blue-box class should give the left of elements 40px of margin js\nconst blueBox = document querySelector(' blue-box');\nconst marginLeft = window getComputedStyle(blueBox)['margin-left'];\nassert strictEqual(marginLeft, '40px');\nYou should use the clockwise notation to set the margin of blue-box class js\nconst cssCode = __helpers removeCssComments(document querySelector('style:not( fcc-hide-header)') textContent);\nassert match(cssCode, /\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-margin-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "02f6c45d272d0a39aae742009f3f957e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-margin-of-an-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should give the bottom of elements 20px of margin js const blueBox = document querySelector(' blue-box'); const marginBottom = window getComputedStyle(blueBox)['margin-bottom']; assert strictEqual(marginBottom, '20px'); Your blue-box class should give the left of elements 40px of margin js const blueBox = document querySelector(' blue-box'); const marginLeft = window getComputedStyle(blueBox)['margin-left']; assert strictEqual(marginLeft, '40px'); You should use the clockwise notation to set the margin of blue-box class js const cssCode = __helpers removeCssComments(document querySelector('style:not( fcc-hide-header)') textContent); assert match(cssCode, /\\blue-box\\s*{[\\s\\S]*margin[\\s]*:\\s*\\d+px\\s+\\d+px\\s+\\d+px\\s+\\d+px(;\\s*[^}]+\\s*}|; \\s*})/);\n--seed--\n--seed-contents--\n```html\nmargin\npadding\npadding\n```\n--solutions--\n```html\nmargin\npadding\npadding\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-clockwise-notation-to-specify-the-margin-of-an-element.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "34bc648ed4d60fe5959b4f93d338a85e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-rgb-values-to-color-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aede08718\ntitle: Use RGB values to Color Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/c/cRkp2fr'\nforumTopicId: 18369\ndashedName: use-rgb-values-to-color-elements\n--description--\nAnother way you can represent colors in CSS is by using RGB values.\nThe RGB value for black looks like this:\ncss\nrgb(0, 0, 0)\nThe RGB value for white looks like this:\ncss\nrgb(255, 255, 255)\nInstead of using six hexadecimal digits like you do with hex code, with RGB you specify the brightness of each color with a number between 0 and 255.\nIf you do the math, the two digits for one color equal 16 times 16, which gives us 256 total values. So RGB, which starts counting from zero, has the exact same number of possible values as hex code.\nHere's an example of how you'd change the body background to orange using its RGB code.\ncss\nbody {\nbackground-color: rgb(255, 165, 0);\n}\n--instructions--\nLet's replace the hex code in our body element's background color with the RGB value for black: rgb(0, 0, 0)\n--hints--\nYour body element should have a black background.\njs\nconst body = document.querySelector('body');\nconst backgroundColor = window.getComputedStyle(body)['background-color'];\nassert.strictEqual(backgroundColor, 'rgb(0, 0, 0)');\nYou should use rgb to give your body element a background of black.\njs\nassert.match(__helpers.removeCssComments(code), /rgb\\s*\\(\\s*0\\s*,\\s*0\\s*,\\s*0\\s*\\)/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-rgb-values-to-color-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1baf75540f0446edde7083e41526abb1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-css-selectors-to-style-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08805\ntitle: Use CSS Selectors to Style Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cJKMBT2'\nforumTopicId: 18349\ndashedName: use-css-selectors-to-style-elements\n--description--\nWith CSS, there are hundreds of CSS properties that you can use to change the way an element looks on your page When you entered <h2 style=\"color: red;\">CatPhotoApp</h2>, you were styling that individual h2 element with inline CSS, which stands for Cascading Style Sheets That's one way to specify the style of an element, but there's a better way to apply CSS At the top of your code, create a style block like this:\n```html\n```\nInside that style block, you can create a CSS selector for all h2 elements For example, if you wanted all h2 elements to be red, you would add a style rule that looks like this:\n```html\n```\nNote that it's important to have both opening and closing curly braces ({ and }) around each element's style rule(s) You also need to make sure that your element's style definition is between the opening and closing style tags Finally, be sure to add a semicolon to the end of each of your element's style rules --instructions--\nDelete your h2 element's style attribute, and instead create a CSS style block Add the necessary CSS to turn all h2 elements blue --hints--\nThe style attribute should be removed from your h2 element js\nassert notExists(document querySelector('h2') getAttribute('style'));\nYou should create a style element js\nassert exists(document querySelector('style:not( fcc-hide-header)'));\nassert isAtLeast(document querySelectorAll('style:not( fcc-hide-header)') length, 1);\nYour h2 element should be blue js\nconst h2Element = document querySelector('h2');\nconst color = window getComputedStyle(h2Element)['color'];\nassert strictEqual(color, 'rgb(0, 0, 255)');\nYour stylesheet h2 declaration should be valid with a semicolon and closing brace js\nassert match(__helpers removeCssComments(code), /h2\\s*\\{\\s*color\\s*: *;\\s*\\}/g);\nAll your style elements should be valid and have closing tags ```js\nassert match(__helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4877,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-css-selectors-to-style-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e7c84d02a51ca18ed83f869687a4ab11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-css-selectors-to-style-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert notExists(document querySelector('h2') getAttribute('style')); You should create a style element js assert exists(document querySelector('style:not( fcc-hide-header)')); assert isAtLeast(document querySelectorAll('style:not( fcc-hide-header)') length, 1); Your h2 element should be blue js const h2Element = document querySelector('h2'); const color = window getComputedStyle(h2Element)['color']; assert strictEqual(color, 'rgb(0, 0, 255)'); Your stylesheet h2 declaration should be valid with a semicolon and closing brace js assert match(__helpers removeCssComments(code), /h2\\s*\\{\\s*color\\s*: *;\\s*\\}/g); All your style elements should be valid and have closing tags ```js assert match(__helpersremoveHtmlComments(code), /<\\/style>/g);\nconst closingElementLength = __helpers removeHtmlComments(code) match(/<\\/style>/g) length;\nconst openingElementsLength = __helpers removeHtmlComments(code) match(//g) length;\nassert strictEqual(closingElementLength, openingElementsLength);\n```\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4877,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-css-selectors-to-style-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a274d1540d529b7131c85477c39aa937",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-a-submit-button-to-a-form.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedd08830\ntitle: Add a Submit Button to a Form\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cp2Nkhz'\nforumTopicId: 16627\ndashedName: add-a-submit-button-to-a-form\n--description--\nLet's add a submit button to your form. Clicking this button will send the data from your form to the URL you specified with your form's action attribute.\nHere's an example submit button:\nhtml\n<button type=\"submit\">this button submits the form</button>\n--instructions--\nAdd a button as the last element of your form element with a type of submit, and Submit as its text.\n--hints--\nYour form should have a button inside it.\njs\nconst form = document.querySelector('form');\nconst children = form.querySelectorAll(`:scope ${\"button\"}`);\nassert.isNotEmpty(children);\nYour submit button should have the attribute type set to submit.\njs\nassert.strictEqual(document.querySelector('button').getAttribute('type'), 'submit');\nYour submit button should only have the text Submit.\njs\nconst text = document.querySelector('button').textContent;\nassert.match(text,/^\\s*submit\\s*$/gi);\nYour button element should have a closing tag.\njs\nassert.match(code,/<\\/button>/g);\nassert.match(code,/<button/g);\nassert.strictEqual(code.match(/<\\/button>/g).length,code.match(/<button/g).length);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2693,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-a-submit-button-to-a-form.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "55e57ef152facae444034cbed9428d10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-rgb-to-mix-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad82fee1348bd9aedf08721\ntitle: Use RGB to Mix Colors\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cm24JU6'\nforumTopicId: 18368\ndashedName: use-rgb-to-mix-colors\n--description--\nJust like with hex code, you can mix colors in RGB by using combinations of different values --instructions--\nReplace the hex codes in our style element with their correct RGB values ColorRGBBluergb(0, 0, 255)Redrgb(255, 0, 0)Orchidrgb(218, 112, 214)Siennargb(160, 82, 45)\n--hints--\nYour h1 element with the text I am red should have the color red js\nconst redText = document querySelector(' red-text');\nconst color = window getComputedStyle(redText)['color'];\nassert strictEqual(color, 'rgb(255, 0, 0)');\nYou should use rgb for the color red js\nassert match(code, /\\ red-text\\s*{\\s*color\\s*:\\s*rgb\\(\\s*255\\s*,\\s*0\\s*,\\s*0\\s*\\)\\s*; \\s*}/gi);\nYour h1 element with the text I am orchid should have the color orchid js\nconst orchidText = document querySelector(' orchid-text');\nconst color = window getComputedStyle(orchidText)['color'];\nassert strictEqual(color, 'rgb(218, 112, 214)');\nYou should use rgb for the color orchid js\nassert match(__helpers removeCssComments(code), /\\ orchid-text\\s*{\\s*color\\s*:\\s*rgb\\(\\s*218\\s*,\\s*112\\s*,\\s*214\\s*\\)\\s*; \\s*}/gi);\nYour h1 element with the text I am blue should have the color blue js\nconst blueText = document querySelector(' blue-text');\nconst color = window getComputedStyle(blueText)['color'];\nassert strictEqual(color, 'rgb(0, 0, 255)');\nYou should use rgb for the color blue js\nassert match(__helpers removeCssComments(code), /\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3201,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-rgb-to-mix-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0cb90d369f96da35f11982e808b0c880",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-rgb-to-mix-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js const orchidText = document querySelector(' orchid-text'); const color = window getComputedStyle(orchidText)['color']; assert strictEqual(color, 'rgb(218, 112, 214)'); You should use rgb for the color orchid js assert match(__helpers removeCssComments(code), /\\ orchid-text\\s*{\\s*color\\s*:\\s*rgb\\(\\s*218\\s*,\\s*112\\s*,\\s*214\\s*\\)\\s*; \\s*}/gi); Your h1 element with the text I am blue should have the color blue js const blueText = document querySelector(' blue-text'); const color = window getComputedStyle(blueText)['color']; assert strictEqual(color, 'rgb(0, 0, 255)'); You should use rgb for the color blue js assert match(__helpers removeCssComments(code), /\\blue-text\\s*{\\s*color\\s*:\\s*rgb\\(\\s*0\\s*,\\s*0\\s*,\\s*255\\s*\\)\\s*; \\s*}/gi);\nYour h1 element with the text I am sienna should have the color sienna js\nconst siennaText = document querySelector(' sienna-text');\nconst color = window getComputedStyle(siennaText)['color'];\nassert strictEqual(color, 'rgb(160, 82, 45)');\nYou should use rgb for the color sienna js\nassert match(__helpers removeCssComments(code), /\\ sienna-text\\s*{\\s*color\\s*:\\s*rgb\\(\\s*160\\s*,\\s*82\\s*,\\s*45\\s*\\)\\s*; \\s*}/gi);\n--seed--\n--seed-contents--\n```html\nI am red I am orchid I am sienna I am blue ```\n--solutions--\n```html\nI am red I am orchid I am sienna I am blue ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3201,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-rgb-to-mix-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ffd8d4c9d47e46c8e6589905659ed7c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-placeholder-text-to-a-text-field.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08830\ntitle: Add Placeholder Text to a Text Field\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cKdJDhg'\nforumTopicId: 16647\ndashedName: add-placeholder-text-to-a-text-field\n--description--\nPlaceholder text is what is displayed in your input element before your user has inputted anything.\nYou can create placeholder text like so:\nhtml\n<input type=\"text\" placeholder=\"this is placeholder text\">\nNote: Remember that input is a void element.\n--instructions--\nSet the placeholder value of your text input to \"cat photo URL\".\n--hints--\nYou should add a placeholder attribute to the existing text input element.\njs\nassert.notEmpty(document.querySelectorAll('input[placeholder]'));\nYou should set the value of your placeholder attribute to cat photo URL.\njs\nassert.exists(document.querySelector('input'));\nassert.exists(document.querySelector('input').getAttribute('placeholder'));\nconst placeholder = document.querySelector('input').getAttribute('placeholder');\nassert.match(placeholder,/cat\\s+photo\\s+URL/gi);\nThe finished input element should not have a closing tag.\njs\nassert.notMatch(code,/<input.*\\/?>.*<\\/input>/gi);\nThe finished input element should have valid syntax.\njs\nassert.notEmpty(document.querySelectorAll('input[type=text]'));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-placeholder-text-to-a-text-field.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f9eedb3db38523d7444a4f5392df22fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-hex-code-to-mix-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08721\ntitle: Use Hex Code to Mix Colors\nchallengeType: 0\nvideoUrl: 'https://scrimba com/c/cK89PhP'\nforumTopicId: 18359\ndashedName: use-hex-code-to-mix-colors\n--description--\nTo review, hex codes use 6 hexadecimal digits to represent colors, two each for red (R), green (G), and blue (B) components From these three pure colors (red, green, and blue), we can vary the amounts of each to create over 16 million other colors For example, orange is pure red, mixed with some green, and no blue In hex code, this translates to being #FFA500 The digit 0 is the lowest number in hex code, and represents a complete absence of color The digit F is the highest number in hex code, and represents the maximum possible brightness --instructions--\nReplace the color words in our style element with their correct hex codes ColorHex CodeDodger Blue#1E90FFGreen#00FF00Orange#FFA500Red#FF0000\n--hints--\nYour h1 element with the text I am red should be given the color red js\nconst redText = document querySelector(' red-text');\nconst color = window getComputedStyle(redText)['color'];\nassert strictEqual(color, 'rgb(255, 0, 0)');\nThe hex code for the color red should be used instead of the word red js\nassert match(code, /\\ red-text\\s* {\\s* color\\s*:\\s* (#FF0000|#F00)\\s* ; \\s* }/gi);\nYour h1 element with the text I am green should be given the color green js\nconst greenText = document querySelector(' green-text');\nconst color = window getComputedStyle(greenText)['color'];\nassert strictEqual(color, 'rgb(0, 255, 0)');\nThe hex code for the color green should be used instead of the word green js\nassert match(code, /\\ green-text\\s* {\\s* color\\s*:\\s* (#00FF00|#0F0)\\s* ; \\s* }/gi);\nYour h1 element with the text I am dodger blue should be given the color dodger blue js\nconst blueText = document querySelector(' dodger-blue-text');\nconst color = window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-hex-code-to-mix-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6c8ec9e9608262950cc4496631594dca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-hex-code-to-mix-colors.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be given the color green js const greenText = document querySelector(' green-text'); const color = window getComputedStyle(greenText)['color']; assert strictEqual(color, 'rgb(0, 255, 0)'); The hex code for the color green should be used instead of the word green js assert match(code, /\\ green-text\\s* {\\s* color\\s*:\\s* (#00FF00|#0F0)\\s* ; \\s* }/gi); Your h1 element with the text I am dodger blue should be given the color dodger blue js const blueText = document querySelector(' dodger-blue-text'); const color = windowgetComputedStyle(blueText)['color'];\nassert strictEqual(color, 'rgb(30, 144, 255)');\nThe hex code for the color dodger blue should be used instead of the word dodgerblue js\nassert match(code, /\\ dodger-blue-text\\s* {\\s* color\\s*:\\s* #1E90FF\\s* ; \\s* }/gi);\nYour h1 element with the text I am orange should be given the color orange ```js\nconst orangeText = document querySelector(' orange-text');\nconst color = window getComputedStyle(orangeText)['color'];\nassert strictEqual(color, 'rgb(255, 165, 0)');\n```\nThe hex code for the color orange should be used instead of the word orange js\nassert match(code, /\\ orange-text\\s* {\\s* color\\s*:\\s* #FFA500\\s* ; \\s* }/gi);\n--seed--\n--seed-contents--\n```html\nI am red I am green I am dodger blue I am orange ```\n--solutions--\n```html\nI am red I am green I am dodger blue I am orange ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-css\\use-hex-code-to-mix-colors.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b34473ceb84026220493facbca4d4170",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\check-radio-buttons-and-checkboxes-by-default.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedd08835\ntitle: Check Radio Buttons and Checkboxes by Default\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cWk3Qh6'\nforumTopicId: 301094\ndashedName: check-radio-buttons-and-checkboxes-by-default\n--description--\nYou can set a checkbox or radio button to be checked by default using the checked attribute.\nTo do this, just add the word checked to the inside of an input element. For example:\nhtml\n<input type=\"radio\" name=\"test-name\" checked>\n--instructions--\nSet the first of your radio buttons and the first of your checkboxes to both be checked by default.\n--hints--\nYour first radio button on your form should be checked by default.\njs\nassert.isTrue(document.querySelector('input[type=\"radio\"]').checked);\nYour first checkbox on your form should be checked by default.\njs\nassert.isTrue(document.querySelector('input[type=\"checkbox\"]').checked);\nYou should not change the inner text of the Indoor label.\njs\nassert.equal(document.querySelector('label[for=\"indoor\"]')?.innerText?.trim(), 'Indoor');\nYou should not change the inner text of the Loving label.\njs\nassert.equal(document.querySelector('label[for=\"loving\"]')?.innerText?.trim(), 'Loving');\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\check-radio-buttons-and-checkboxes-by-default.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6bc8f280ebe956b542136b835d7e65a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-bulleted-unordered-list.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08827\ntitle: Create a Bulleted Unordered List\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cDKVPuv'\nforumTopicId: 16814\ndashedName: create-a-bulleted-unordered-list\n--description--\nHTML has a special element for creating unordered lists, or bullet point style lists.\nUnordered lists start with an opening <ul> element, followed by any number of <li> elements. Finally, unordered lists close with a </ul>.\nFor example:\n```html\nmilk\ncheese\n```\nwould create a bullet point style list of milk and cheese.\n--instructions--\nRemove the last two p elements and create an unordered list of three things that cats love at the bottom of the page.\n--hints--\nCreate a ul element.\njs\nassert.isNotEmpty(document.querySelectorAll('ul'));\nYou should have three li elements within your ul element.\njs\nassert.lengthOf(document.querySelectorAll('ul li'),3);\nYour ul element should have a closing tag.\njs\nassert.match(code,/<\\/ul>/gi);\nassert.match(code,/<ul/gi);\nassert.strictEqual(code.match(/<\\/ul>/gi).length,code.match(/<ul/gi).length);\nYour li elements should have closing tags.\njs\nassert.match(code,/<\\/li>/gi);\nassert.match(code,/<li[\\s>]/gi);\nassert.strictEqual(code.match(/<\\/li>/gi).length,code.match(/<li[\\s>]/gi).length);\nYour li elements should not contain an empty string or only white-space.\njs\nassert.isEmpty([...document.querySelectorAll('ul li')].filter((item) => item.textContent.trim() === \"\"));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\nPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nmilk\nmice\ncatnip\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-bulleted-unordered-list.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ead1ef6399bc57ca8ec59db49e3d28aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-images-to-your-website.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08812\ntitle: Add Images to Your Website\nchallengeType: 0\nforumTopicId: 16640\ndashedName: add-images-to-your-website\n--description--\nYou can add images to your website by using the img element, and point to a specific image's URL using the src attribute An example of this would be:\nhtml\n<img src=\"https://www freecatphotoapp com/your-image jpg\">\nNote that img is a void element All img elements must have an alt attribute The text inside an alt attribute is used for screen readers to improve accessibility and is displayed if the image fails to load Note: If the image is purely decorative, using an empty alt attribute is a best practice Ideally the alt attribute should not contain special characters unless needed Let's add an alt attribute to our img example above:\nhtml\n<img src=\"https://www freecatphotoapp com/your-image jpg\" alt=\"freeCodeCamp logo\">\n--instructions--\nLet's try to add an image to our website:\nWithin the existing main element, insert an img element before the existing p elements Now set the src attribute so that it points to the url https://cdn freecodecamp org/curriculum/cat-photo-app/relaxing-cat jpg\nFinally, don't forget to give your img element an alt attribute with applicable text --hints--\nYour page should have an image element js\nassert exists(document querySelector('img'));\nYour image should have a src attribute that points to the kitten image js\nconst url = document querySelector('img') getAttribute('src');\nassert match(url,/^https:\\/\\/cdn\\ freecodecamp\\ org\\/curriculum\\/cat-photo-app\\/relaxing-cat\\ jpg$/i);\nYour image element's alt attribute should not be empty js\nassert exists(document querySelector('img') getAttribute('alt'));\nassert isNotEmpty(document querySelector('img') getAttribute('alt'));\nassert match(__helpers removeWhiteSpace(code),/<( :img|IMG)\\S*alt=(['\"])( \\1|>)\\S+\\1\\S*\\/ >/)\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2895,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-images-to-your-website.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fbef1679980fc7b805ad3736b00970f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-images-to-your-website.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "image should have a src attribute that points to the kitten image js const url = document querySelector('img') getAttribute('src'); assert match(url,/^https:\\/\\/cdn\\ freecodecamp\\ org\\/curriculum\\/cat-photo-app\\/relaxing-cat\\ jpg$/i); Your image element's alt attribute should not be empty js assert exists(document querySelector('img') getAttribute('alt')); assert isNotEmpty(document querySelector('img') getAttribute('alt')); assert match(__helpers removeWhiteSpace(code),/<( :img|IMG)\\S*alt=(['\"])( \\1|>)\\S+\\1\\S*\\/ >/) --seed-- --seed-contents-- ```html CatPhotoApp Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniffPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ```\n--solutions--\n```html\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2895,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\add-images-to-your-website.md",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "922a65d928b09e6a3ba2eb7a17820239",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\comment-out-html.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08804\ntitle: Comment out HTML\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cGyGbca'\nforumTopicId: 16782\ndashedName: comment-out-html\n--description--\nRemember that in order to start a comment, you need to use <!-- and to end a comment, you need to use -->\nHere you'll need to end the comment before your h2 element begins.\n--instructions--\nComment out your h1 element and your p element, but not your h2 element.\n--hints--\nYour h1 element should be commented out so that it is not visible on the page.\njs\nassert.isEmpty(document.querySelectorAll('h1'));\nYour h2 element should not be commented out so that it is visible on the page.\njs\nassert.isNotEmpty(document.querySelectorAll('h2'));\nYour p element should be commented out so that it is not visible on the page.\njs\nassert.isEmpty(document.querySelectorAll('p'));\nEach of your comments should be closed with -->.\njs\nassert.isAbove(code.match(/[^fc]-->/g).length, 1);\nYou should not change the order of the h1, h2, or p elements in the code.\njs\nassert.strictEqual(code.match(/<([a-z0-9]){1,2}>/g)[0],'<h1>');\nassert.strictEqual(code.match(/<([a-z0-9]){1,2}>/g)[1],'<h2>');\nassert.strictEqual(code.match(/<([a-z0-9]){1,2}>/g)[2],'<p>');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\nCatPhotoApp\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1815,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\comment-out-html.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "647f1ec10537cc49cbc187eee0d47c46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-form-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aede08830\ntitle: Create a Form Element\nchallengeType: 0\nforumTopicId: 16817\ndashedName: create-a-form-element\n--description--\nYou can build web forms that actually submit data to a server using nothing more than pure HTML. You can do this by specifying an action attribute on your form element.\nFor example:\n```html\n```\n--instructions--\nNest the existing input element inside a form element and assign \"https://www.freecatphotoapp.com/submit-cat-photo\" to the action attribute of the form element.\n--hints--\nThe existing input element should be nested within a form element.\njs\nconst inputElem = document.querySelector('form input');\nassert.strictEqual(inputElem.getAttribute('type'),'text');\nassert.strictEqual(inputElem.getAttribute('placeholder'),'cat photo URL');\nYour form should have an action attribute which is set to https://www.freecatphotoapp.com/submit-cat-photo.\njs\nconst action = document.querySelector('form').getAttribute('action');\nassert.match(action,/^https:\\/\\/(www\\.)?freecatphotoapp\\.com\\/submit-cat-photo$/i);\nYour form element should have well-formed open and close tags.\njs\nassert.match(code,/<\\/form>/g);\nassert.match(code,/<form [^<]*>/g);\nassert.strictEqual(code.match(/<\\/form>/g).length,code.match(/<form [^<]*>/g).length);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-form-element.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9f6d02f65d7fd478ed65f5c8658693e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-text-field.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08829\ntitle: Create a Text Field\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/c2EVnf6'\nforumTopicId: 16823\ndashedName: create-a-text-field\n--description--\nNow let's create a web form.\ninput elements are a convenient way to get input from your user.\nYou can create a text input like this:\nhtml\n<input type=\"text\">\nNote that input is a void element.\n--instructions--\nCreate an input element of type text below your lists.\n--hints--\nYour app should have an input element of type text.\njs\nassert.isNotEmpty(document.querySelectorAll('input[type=text]'));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1709,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-text-field.md",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c057bfdda9027e98d900246a0f7ba683",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\declare-the-doctype-of-an-html-document.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78aa367417b2b2512aed\ntitle: Declare the Doctype of an HTML Document\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cra98AJ'\nforumTopicId: 301095\ndashedName: declare-the-doctype-of-an-html-document\n--description--\nThe challenges so far have covered specific HTML elements and their uses. However, there are a few elements that give overall structure to your page, and should be included in every HTML document.\nAt the top of your document, you need to tell the browser which version of HTML your page is using. HTML is an evolving language, and is updated regularly. Most major browsers support the latest specification, which is HTML5. However, older web pages may use previous versions of the language.\nYou tell the browser this information by adding the <!DOCTYPE ...> tag on the first line, where the ... part is the version of HTML. For HTML5, you use <!DOCTYPE html>.\nThe ! and uppercase DOCTYPE is important, especially for older browsers. The html is not case sensitive.\nNext, the rest of your HTML code needs to be wrapped in html tags. The opening <html> goes directly below the <!DOCTYPE html> line, and the closing </html> goes at the end of the page.\nHere's an example of the page structure. Your HTML code would go in the space between the two html tags.\n```html\n```\n--instructions--\nAdd a DOCTYPE tag for HTML5 to the top of the blank HTML document in the code editor. Under it, add opening and closing html tags, which wrap around an h1 element. The heading can include any text.\n--hints--\nYour code should include a <!DOCTYPE html> tag.\njs\nassert.match(code,/<!DOCTYPE\\s+?html\\s*?>/gi);\nThere should be one html element.\njs\nassert.lengthOf(document.querySelectorAll('html'), 1);\nThe html tags should wrap around one h1 element.\njs\nassert.match(code,/<html>\\s*?<h1>\\s*?.*?\\s*?<\\/h1>\\s*?<\\/html>/gi);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\nHello world\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\declare-the-doctype-of-an-html-document.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "08972058e132ebd74ad336acf98ffb05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-radio-buttons.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08834\ntitle: Create a Set of Radio Buttons\nchallengeType: 0\nforumTopicId: 16822\ndashedName: create-a-set-of-radio-buttons\n--description--\nYou can use radio buttons for questions where you want the user to only give you one answer out of multiple options Radio buttons are a type of input Each of your radio buttons can be nested within its own label element By wrapping an input element inside of a label element it will automatically associate the radio button input with the label element surrounding it All related radio buttons should have the same name attribute to create a radio button group By creating a radio group, selecting any single radio button will automatically deselect the other buttons within the same group ensuring only one answer is provided by the user Here's an example of a radio button:\nhtml\n<label>\n<input type=\"radio\" name=\"indoor-outdoor\">Indoor\n</label>\nIt is considered best practice to set a for attribute on the label element, with a value that matches the value of the id attribute of the input element This allows assistive technologies to create a linked relationship between the label and the related input element For example:\nhtml\n<input id=\"indoor\" type=\"radio\" name=\"indoor-outdoor\">\n<label for=\"indoor\">Indoor</label>\nWe can also nest the input element within the label tags:\nhtml\n<label for=\"indoor\">\n<input id=\"indoor\" type=\"radio\" name=\"indoor-outdoor\">Indoor\n</label>\n--instructions--\nAdd a pair of radio buttons to your form, each nested in its own label element One should have the option of indoor and the other should have the option of outdoor Both should share the name attribute of indoor-outdoor to create a radio group --hints--\nYour page should have two radio button elements js\nassert lengthOf(document querySelectorAll('input[type=\"radio\"]'),2);\nYour radio buttons should be given the name attribute of indoor-outdoor js\nassert lengthOf([ document querySelectorAll('input[type=\"radio\"]')] filter(input => input name === \"indoor-outdoor\"),2);\nEach of your two radio button elements should be nested in its own label element js\nassert lengthOf(document querySelectorAll('label > input[type=\"radio\"]:only-child'),2);\nEach of your label elements should have a closing tag js\nassert match(code,/<\\/label>/g);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4861,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-radio-buttons.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4765f131b6f0a70b56cf440799c9732a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-radio-buttons.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "indoor-outdoor to create a radio group --hints-- Your page should have two radio button elements js assert lengthOf(document querySelectorAll('input[type=\"radio\"]'),2); Your radio buttons should be given the name attribute of indoor-outdoor js assert lengthOf([ document querySelectorAll('input[type=\"radio\"]')] filter(input => input name === \"indoor-outdoor\"),2); Each of your two radio button elements should be nested in its own label element js assert lengthOf(document querySelectorAll('label > input[type=\"radio\"]:only-child'),2); Each of your label elements should have a closing tag js assert match(code,/<\\/label>/g); assertmatch(code,/<label/g);\nassert strictEqual(code match(/<\\/label>/g) length,code match(/<label/g) length);\nOne of your radio buttons should have the label indoor js\nconst labelTexts = [ document querySelectorAll('label')] map(label => label textContent);\nconst hasMatch = labelTexts some(label =>  label match(/indoor/gi));\nassert isTrue(hasMatch);\nOne of your radio buttons should have the label outdoor js\nconst labelTexts = [ document querySelectorAll('label')] map(label => label textContent);\nconst hasMatch = labelTexts some(label => label match(/outdoor/gi));\nassert isTrue(hasMatch);\nEach of your radio button elements should be added within the form tag js\nconst labelParent = document querySelector('label') parentNode;\nassert strictEqual(labelParent tagName,'FORM');\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4861,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-radio-buttons.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "478e31036ad37d2c98e64a2aa8b87906",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-an-ordered-list.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08828\ntitle: Create an Ordered List\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVMPUv/cQ3B8TM'\nforumTopicId: 16824\ndashedName: create-an-ordered-list\n--description--\nHTML has another special element for creating ordered lists, or numbered lists Ordered lists start with an opening <ol> element, followed by any number of <li> elements Finally, ordered lists are closed with the </ol> tag For example:\n```html\nGarfield\nSylvester\n```\nwould create a numbered list of Garfield and Sylvester --instructions--\nCreate an ordered list of the top 3 things cats hate the most --hints--\nYou should have an ordered list for Top 3 things cats hate:\njs\nconst previousElement = document querySelector('ol') previousElementSibling;\nassert match(previousElement textContent,/Top 3 things cats hate:/i);\nYou should have an unordered list for Things cats love:\njs\nconst previousElement = document querySelector('ul') previousElementSibling;\nassert match(previousElement textContent,/Things cats love:/i);\nYou should have only one ul element js\nassert lengthOf(document querySelectorAll('ul'), 1);\nYou should have only one ol element js\nassert lengthOf(document querySelectorAll('ol'), 1);\nYou should have three li elements within your ul element js\nassert lengthOf(document querySelectorAll('ul li'), 3);\nYou should have three li elements within your ol element js\nassert lengthOf(document querySelectorAll('ol li'), 3);\nYour ul element should have a closing tag js\nassert match(code,/<\\/ul>/g);\nassert strictEqual(code match(/<\\/ul>/g) length ,code match(/<ul>/g) length);\nYour ol element should have a closing tag js\nassert match(code,/<\\/ol>/g);\nassert strictEqual(code match(/<\\/ol>/g) length ,code match(/<ol>/g) length);\nYour li element should have a closing tag js\nassert match(code,/<\\/li>/g);\nassert match(code,/<li>/g);\nassert strictEqual(code match(/<\\/li>/g) length ,code match(/<li>/g) length);\nThe li elements in your unordered list should not be empty js\n[ document querySelectorAll('ul li')]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3436,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-an-ordered-list.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b23fa3874976c42628260478fe701ff2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-an-ordered-list.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "lengthOf(document querySelectorAll('ol li'), 3); Your ul element should have a closing tag js assert match(code,/<\\/ul>/g); assert strictEqual(code match(/<\\/ul>/g) length ,code match(/<ul>/g) length); Your ol element should have a closing tag js assert match(code,/<\\/ol>/g); assert strictEqual(code match(/<\\/ol>/g) length ,code match(/<ol>/g) length); Your li element should have a closing tag js assert match(code,/<\\/li>/g); assert match(code,/<li>/g); assert strictEqual(code match(/<\\/li>/g) length ,code match(/<li>/g) length); The li elements in your unordered list should not be empty js [ document querySelectorAll('ul li')]forEach((val) =>\nassert isNotEmpty(__helpers removeWhiteSpace(val textContent))\n);\nThe li elements in your ordered list should not be empty js\n[ document querySelectorAll('ol li')] forEach((val) =>\nassert isNotEmpty(__helpers removeWhiteSpace(val textContent))\n);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nhate 1\nhate 2\nhate 3\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3436,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-an-ordered-list.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8ba453888e3d425fde9ae53122e96e8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-checkboxes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08835\ntitle: Create a Set of Checkboxes\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVMPUv/cqrkJsp'\nforumTopicId: 16821\ndashedName: create-a-set-of-checkboxes\n--description--\nForms commonly use checkboxes for questions that may have more than one answer Checkboxes are a type of input Each of your checkboxes can be nested within its own label element By wrapping an input element inside of a label element it will automatically associate the checkbox input with the label element surrounding it All related checkbox inputs should have the same name attribute It is considered best practice to explicitly define the relationship between a checkbox input and its corresponding label by setting the for attribute on the label element to match the id attribute of the associated input element Here's an example of a checkbox:\nhtml\n<label for=\"loving\"><input id=\"loving\" type=\"checkbox\" name=\"personality\"> Loving</label>\n--instructions--\nAdd to your form a set of three checkboxes Each checkbox should be nested within its own label element All three should share the name attribute of personality --hints--\nYour page should have three checkbox elements js\nassert lengthOf(document querySelectorAll('input[type=\"checkbox\"]'),3);\nEach of your three checkbox elements should be nested in its own label element js\nassert lengthOf(document querySelectorAll('label > input[type=\"checkbox\"]:only-child'),3);\nMake sure each of your label elements has a closing tag js\nassert match(code,/<\\/label>/g);\nassert match(code,/<label/g);\nassert strictEqual(code match(/<\\/label>/g) length,code match(/<label/g) length)\nYour checkboxes should be given the name attribute of personality js\nassert lengthOf([ document querySelectorAll('label > input[type=\"checkbox\"]')] filter(x => x name === \"personality\"),3);\nEach of your checkboxes should be added within the form tag js\nassert strictEqual(document querySelector('label') parentNode tagName,'FORM');\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4162,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-checkboxes.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ba7943314f33ef78d7f2b6abc68dc270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-checkboxes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "querySelectorAll('label > input[type=\"checkbox\"]:only-child'),3); Make sure each of your label elements has a closing tag js assert match(code,/<\\/label>/g); assert match(code,/<label/g); assert strictEqual(code match(/<\\/label>/g) length,code match(/<label/g) length) Your checkboxes should be given the name attribute of personality js assert lengthOf([ document querySelectorAll('label > input[type=\"checkbox\"]')] filter(x => x name === \"personality\"),3); Each of your checkboxes should be added within the form tag js assert strictEqual(document querySelector('label') parentNode tagName,'FORM'); --seed-- --seed-contents-- ```html CatPhotoApp Click here to view more cat photosThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nPlayful\nLazy\nEvil\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4162,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\create-a-set-of-checkboxes.md",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "da9157af05ad9fbc564e85b6bf635b7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\fill-in-the-blank-with-placeholder-text.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08833\ntitle: Fill in the Blank with Placeholder Text\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cgR7Dc7'\nforumTopicId: 18178\ndashedName: fill-in-the-blank-with-placeholder-text\n--description--\nWeb developers traditionally use lorem ipsum text as placeholder text. The lorem ipsum text is randomly scraped from a famous passage by Cicero of Ancient Rome.\nLorem ipsum text has been used as placeholder text by typesetters since the 16th century, and this tradition continues on the web.\nWell, 5 centuries is long enough. Since we're building a CatPhotoApp, let's use something called \"kitty ipsum\" text.\n--instructions--\nReplace the text inside your p element with the first few words of this kitty ipsum text: Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\n--hints--\nYour p element should contain the first few words of the provided \"kitty ipsum\" text.\njs\nassert.match(document.querySelector('p').textContent,/Kitty(\\s)+ipsum/gi);\n--seed--\n--seed-contents--\n```html\nHello World\nCatPhotoApp\nHello Paragraph\n```\n--solutions--\n```html\nHello World\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1461,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\fill-in-the-blank-with-placeholder-text.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6362ef2fd8889e8f80ffd40b723371f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\headline-with-the-h2-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf0887a\ntitle: Headline with the h2 Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cE8Gqf3'\nforumTopicId: 18196\ndashedName: headline-with-the-h2-element\n--description--\nOver the next few lessons, we'll build an HTML5 cat photo web app piece-by-piece.\nThe h2 element you will be adding in this step will add a level two heading to the web page.\nThis element tells the browser about the structure of your website. h1 elements are often used for main headings, while h2 elements are generally used for subheadings. There are also h3, h4, h5 and h6 elements to indicate different levels of subheadings.\n--instructions--\nAdd an h2 tag that says \"CatPhotoApp\" to create a second HTML element below your \"Hello World\" h1 element.\n--hints--\nYou should create an h2 element.\njs\nassert.lengthOf(document.querySelectorAll('h2'),1);\nYour h2 element should have a closing tag.\njs\nassert.match(code,/<\\/h2>/g);\nassert.strictEqual(code.match(/<\\/h2>/g).length,code.match(/<h2>/g).length);\nYour h2 element should have the text CatPhotoApp.\njs\nassert.match(document.querySelector('h2').textContent,/cat(\\s)?photo(\\s)?app/gi);\nYour h1 element should have the text Hello World.\njs\nassert.match(document.querySelector('h1').textContent,/hello(\\s)+world/gi);\nYour h1 element should be before your h2 element.\njs\nassert.match(code,/<h1>\\s*?.*?\\s*?<\\/h1>\\s*<h2>\\s*?.*?\\s*?<\\/h2>/gi);\n--seed--\n--seed-contents--\n```html\nHello World\n```\n--solutions--\n```html\nHello World\nCatPhotoApp\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1640,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\headline-with-the-h2-element.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2049a0d2283d24c7bd0e0cf5b60b4496",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\delete-html-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fed1348bd9aedf08833\ntitle: Delete HTML Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/ckK73C9'\nforumTopicId: 17559\ndashedName: delete-html-elements\n--description--\nOur phone doesn't have much vertical space.\nLet's remove the unnecessary elements so we can start building our CatPhotoApp.\n--instructions--\nDelete your h1 element so we can simplify our view.\n--hints--\nYour h1 element should be deleted.\njs\nassert.notMatch(code,/<h1>/gi);\nassert.notMatch(code,/<\\/h1>/gi);\nYour h2 element should be on the page.\njs\nassert.match(code,/<h2>[\\w\\W]*<\\/h2>/gi);\nYour p element should be on the page.\njs\nassert.match(code,/<p>[\\w\\W]*<\\/p>/gi);\n--seed--\n--seed-contents--\n```html\nHello World\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\n```\n--solutions--\n```html\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1174,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\delete-html-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "867a47504c0bfb2fa11b3f1f635514b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\inform-with-the-paragraph-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08801\ntitle: Inform with the Paragraph Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/ceZ7DtN'\nforumTopicId: 18202\ndashedName: inform-with-the-paragraph-element\n--description--\nThe p element is the preferred element for paragraph text on websites. p is short for \"paragraph\".\nYou can create a paragraph element like this:\n```html\nI'm a p tag!\n```\n--instructions--\nCreate a p element below your h2 element, and give it the text Hello Paragraph.\nNote: As a convention, all HTML tags are written in lowercase, for example <p></p> and not <P></P>.\n--hints--\nYour code should have a valid p element.\njs\nassert.lengthOf(document.querySelectorAll('p'),1);\nYour p element should have the text Hello Paragraph.\njs\nassert.match(document.querySelector('p').textContent,/hello(\\s)+paragraph/gi);\nYour p element should have a closing tag.\njs\nassert.match(code,/<\\/p>/g);\nassert.strictEqual(code.match(/<\\/p>/g).length,code.match(/<p/g).length);\n--seed--\n--seed-contents--\n```html\nHello World\nCatPhotoApp\n```\n--solutions--\n```html\nHello World\nCatPhotoApp\nHello Paragraph\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1239,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\inform-with-the-paragraph-element.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "17e381e19958c22de8cc090c52f53b26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-external-pages-with-anchor-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08816\ntitle: Link to External Pages with Anchor Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/c8EkncB'\nforumTopicId: 18226\ndashedName: link-to-external-pages-with-anchor-elements\n--description--\nYou can use a (anchor) elements to link to content outside of your web page.\na elements need a destination web address called an href attribute. They also need anchor text. Here's an example:\nhtml\n<a href=\"https://www.freecodecamp.org\">this links to freecodecamp.org</a>\nThen your browser will display the text this links to freecodecamp.org as a link you can click. And that link will take you to the web address https://www.freecodecamp.org.\n--instructions--\nCreate an a element that links to https://www.freecatphotoapp.com and has \"cat photos\" as its anchor text.\n--hints--\nYour a element should have the anchor text of cat photos.\njs\nassert.match(document.querySelector('a').textContent,/cat photos/gi);\nYou need an a element that links to https://www.freecatphotoapp.com\njs\nassert.match(document.querySelector('a').getAttribute('href'),/^https?:\\/\\/(www\\.)?freecatphotoapp\\.com\\/?$/i);\nYour a element should have a closing tag.\njs\nassert.match(code,/<\\/a>/g);\nassert.strictEqual(code.match(/<\\/a>/g).length,code.match(/<a/g).length);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\nPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.\n```\n--solutions--\n```html\nCatPhotoApp\ncat photos\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\nPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-external-pages-with-anchor-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cb9766ec44fbb54cf5fffd10b47489d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\make-dead-links-using-the-hash-symbol.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08817\ntitle: Make Dead Links Using the Hash Symbol\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cMdkytL'\nforumTopicId: 18230\ndashedName: make-dead-links-using-the-hash-symbol\n--description--\nSometimes you want to add a elements to your website before you know where they will link.\nThis is also handy when you're changing the behavior of a link using JavaScript, which we'll learn about later.\n--instructions--\nThe current value of the href attribute is a link that points to \"https://www.freecatphotoapp.com\". Replace the href attribute value with a #, also known as a hash symbol, to create a dead link.\nFor example: href=\"#\"\n--hints--\nYour a element should be a dead link with the value of the href attribute set to \"#\".\njs\nassert.strictEqual(document.querySelector('a').getAttribute('href'),'#');\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\nPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\nPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\make-dead-links-using-the-hash-symbol.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d928350b9211ea4236f95703e377a694",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\introduction-to-html5-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aecf08801\ntitle: Introduction to HTML5 Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVMPUv/cBkZGpt7'\nforumTopicId: 301097\ndashedName: introduction-to-html5-elements\n--description--\nHTML5 introduces more descriptive HTML tags These include main, header, footer, nav, video, article, section and others These tags give a descriptive structure to your HTML, make your HTML easier to read, and help with Search Engine Optimization (SEO) and accessibility The main HTML5 tag helps search engines and other developers find the main content of your page Example usage, a main element with two child elements nested inside it:\n```html\nHello World\nHello Paragraph\n```\nNote: Many of the new HTML5 tags and their benefits are covered in the Applied Accessibility section --instructions--\nCreate a second p element with the following kitty ipsum text: Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched Then, create a main element and nest only the two p elements inside the main element --hints--\nYou should have 2 p elements with Kitty Ipsum text js\nassert lengthOf(document querySelectorAll('p'),2);\nEach of your p elements should have a closing tag js\nassert match(code,/<\\/p>/g);\nassert strictEqual(code match(/<\\/p>/g) length,code match(/<p/g) length);\nYour p element should contain the first few words of the provided additional kitty ipsum text js\nassert match(document querySelectorAll('p')[1] textContent,/Purr\\s+jump\\s+eat/gi);\nYour code should have one main element js\nassert lengthOf(document querySelectorAll('main'),1);\nThe main element should have two paragraph elements as children js\nconst main = document querySelector('main');\nconst children = main querySelectorAll(\"p\");\nassert lengthOf(children,2);\nThe opening main tag should come before the first paragraph tag js\nassert match(code,(/<main>\\s* <p>/g));\nThe closing main tag should come after the second closing paragraph tag js\nassert match(code,(/<\\/p>\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2830,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\introduction-to-html5-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4209690cfe87e5cd0ab58dcbe7386db1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\introduction-to-html5-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the provided additional kitty ipsum text js assert match(document querySelectorAll('p')[1] textContent,/Purr\\s+jump\\s+eat/gi); Your code should have one main element js assert lengthOf(document querySelectorAll('main'),1); The main element should have two paragraph elements as children js const main = document querySelector('main'); const children = main querySelectorAll(\"p\"); assert lengthOf(children,2); The opening main tag should come before the first paragraph tag js assert match(code,(/<main>\\s* <p>/g)); The closing main tag should come after the second closing paragraph tag js assert match(code,(/<\\/p>\\s*<\\/main>/g));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff ```\n--solutions--\n```html\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2830,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\introduction-to-html5-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f2a99e1c45f0629ee4fffed00a9beb11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\nest-many-elements-within-a-single-div-element.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aede08835\ntitle: Nest Many Elements within a Single div Element\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cNW4kC3'\nforumTopicId: 18246\ndashedName: nest-many-elements-within-a-single-div-element\n--description--\nThe div element, also known as a division element, is a general purpose container for other elements.\nThe div element is probably the most commonly used HTML element of all.\nJust like any other non-self-closing element, you can open a div element with <div> and close it on another line with </div>.\n--instructions--\nNest your \"Things cats love\" and \"Top 3 things cats hate\" lists all within a single div element.\nHint: Try putting your opening div tag above your \"Things cats love\" p element and your closing div tag after your closing ol tag so that both of your lists are within one div.\n--hints--\nYour p elements should be nested inside your div element.\njs\nconst div = document.querySelector('div');\nconst children = div.querySelectorAll('p');\nassert.isAbove(children.length,1);\nYour ul element should be nested inside your div element.\njs\nconst div = document.querySelector('div');\nconst children = div.querySelectorAll('ul');\nassert.notEmpty(children);\nYour ol element should be nested inside your div element.\njs\nconst div = document.querySelector('div');\nconst children = div.querySelectorAll('ol');\nassert.notEmpty(children);\nYour div element should have a closing tag.\njs\nassert.match(code,/<\\/div>/g);\nassert.strictEqual(code.match(/<\\/div>/g).length,code.match(/<div>/g).length);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4215,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\nest-many-elements-within-a-single-div-element.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "56e55bdc04c801b151730cb9f914cdf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-internal-sections-of-a-page-with-anchor-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad88fee1348bd9aedf08816\ntitle: Link to Internal Sections of a Page with Anchor Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVMPUv/cyrDRUL'\nforumTopicId: 301098\ndashedName: link-to-internal-sections-of-a-page-with-anchor-elements\n--description--\na (anchor) elements can also be used to create internal links to jump to different sections within a webpage To create an internal link, you assign a link's href attribute to a hash symbol # plus the value of the id attribute for the element that you want to internally link to, usually further down the page You then need to add the same id attribute to the element you are linking to An id is an attribute that uniquely describes an element Below is an example of an internal anchor link and its target element:\n```html\nContacts Contacts\n```\nWhen users click the Contacts link, they'll be taken to the section of the webpage with the Contacts heading element --instructions--\nChange your external link to an internal link by changing the href attribute to #footer and the text from cat photos to Jump to Bottom Remove the target=\"_blank\" attribute from the anchor tag since this causes the linked document to open in a new window tab Then add an id attribute with a value of footer to the <footer> element at the bottom of the page --hints--\nThere should be only one anchor tag on your page js\nassert lengthOf(document querySelectorAll('a'), 1);\nThere should be only one footer tag on your page js\nassert lengthOf(document querySelectorAll('footer'),1);\nThe a tag should have an href attribute set to \"#footer\" js\nassert strictEqual(document querySelector('a') getAttribute('href'), '#footer');\nThe a tag should not have a target attribute js\nassert notExists(document querySelector('a') getAttribute('target'));\nThe a text should be \"Jump to Bottom\" js\nassert match(document querySelector('a') textContent,/Jump to Bottom/gi);\nThe footer tag should have an id attribute set to \"footer\" js\nassert strictEqual(document querySelector('footer') getAttribute('id'),'footer');\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\ncat photos\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-internal-sections-of-a-page-with-anchor-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "eb85c7efbbd123d14205488a7539d5bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-internal-sections-of-a-page-with-anchor-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'#footer'); The a tag should not have a target attribute js assert notExists(document querySelector('a') getAttribute('target')); The a text should be \"Jump to Bottom\" js assert match(document querySelector('a') textContent,/Jump to Bottom/gi); The footer tag should have an id attribute set to \"footer\" js assert strictEqual(document querySelector('footer') getAttribute('id'),'footer'); --seed-- --seed-contents-- ```html CatPhotoApp cat photos Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniffPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched Meowwww loved it, hated it, loved it, hated it yet spill litter box, scratch at owner, destroy all furniture, especially couch or lay on arms while you're using the keyboard Missing until dinner time toy mouse squeak roll over With tail in the air lounge in doorway Man running from cops stops to pet cats, goes to jail Intently stare at the same spot poop in the plant pot but kitten is playing with dead mouse Get video posted to internet for chasing red dot leave fur on owners clothes meow to be let out and mesmerizing birds leave fur on owners clothes or favor packaging over toy so purr for no reason Meow to be let out play time intently sniff hand run outside as soon as door open yet destroy couch Copyright Cat Photo App\n```\n--solutions--\n```html\nCatPhotoApp\nJump to Bottom\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-internal-sections-of-a-page-with-anchor-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4def81229fe6d2a9ed436450606b3907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-internal-sections-of-a-page-with-anchor-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be let out play time intently sniff hand run outside as soon as door open yet destroy couch Copyright Cat Photo App ``` --solutions-- ```html CatPhotoApp Jump to Bottom Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratchedKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched Meowwww loved it, hated it, loved it, hated it yet spill litter box, scratch at owner, destroy all furniture, especially couch or lay on arms while you're using the keyboard Missing until dinner time toy mouse squeak roll over With tail in the air lounge in doorway Man running from cops stops to pet cats, goes to jail Intently stare at the same spot poop in the plant pot but kitten is playing with dead mouse Get video posted to internet for chasing red dot leave fur on owners clothes meow to be let out and mesmerizing birds leave fur on owners clothes or favor packaging over toy so purr for no reason Meow to be let out play time intently sniff hand run outside as soon as door open yet destroy couch Copyright Cat Photo App\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\link-to-internal-sections-of-a-page-with-anchor-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9a9b205816f32a0979ffe5802c3c8c59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\say-hello-to-html-elements.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c8c441eddfaeb5bdef\ntitle: Say Hello to HTML Elements\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cE8Gpt2'\nforumTopicId: 18276\ndashedName: say-hello-to-html-elements\n--description--\nWelcome to freeCodeCamp's HTML coding challenges. These will walk you through web development step-by-step.\nFirst, you'll start by building a simple web page using HTML. You can edit code in your code editor, which is embedded into this web page.\nDo you see the code in your code editor that says <h1>Hello</h1>? That's an HTML element.\nMost HTML elements have an opening tag and a closing tag.\nOpening tags look like this:\n```html\n```\nClosing tags look like this:\n```html\n```\nThe only difference between opening and closing tags is the forward slash after the opening bracket of a closing tag.\nEach challenge has tests you can run at any time by clicking the \"Run tests\" button. When you pass all tests, you'll be prompted to submit your solution and go to the next coding challenge.\n--instructions--\nTo pass the test on this challenge, change your h1 element's text to say Hello World.\n--hints--\nYour h1 element should have the text Hello World.\njs\nassert.match(document.querySelector('h1').textContent,/hello(\\s)+world/gi);\n--seed--\n--seed-contents--\n```html\nHello\n```\n--solutions--\n```html\nHello World\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\say-hello-to-html-elements.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "23481381b013728025d6f51f93620601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\define-the-head-and-body-of-an-html-document.md",
    "source_type": "git_repo",
    "title": "Example title",
    "content": "id: 587d78aa367417b2b2512aec\ntitle: Define the Head and Body of an HTML Document\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVMPUv/cra9bfP'\nforumTopicId: 301096\ndashedName: define-the-head-and-body-of-an-html-document\n--description--\nYou can add another level of organization in your HTML document within the html tags with the head and body elements Any markup with information about your page would go into the head tag Then any markup with the content of the page (what displays for a user) would go into the body tag Metadata elements, such as link, meta, title, and style, typically go inside the head element Here's an example of a page's layout:\n```html\nExample title\n```\n--instructions--\nEdit the markup so there's a head and a body The head element should only include the title, and the body element should only include the h1 and p --hints--\nThere should be only one head element on the page js\nconst headElems = code replace(/\\n/g, '') match(/\\<head\\s*> * \\<\\/head\\s*>/g);\nassert exists(headElems);\nassert lengthOf(headElems,1);\nThere should be only one body element on the page js\nconst bodyElems = code replace(/\\n/g, '') match(/<body\\s*> * <\\/body\\s*>/g);\nassert exists(bodyElems);\nassert lengthOf(bodyElems,1);\nThe head element should be a child of the html element ```js\nconst htmlChildren = code replace(/\\n/g, '') match(/( )<\\/html\\s>/);\nlet foundHead;\nif (htmlChildren) {\nconst { children } = htmlChildren groups;\nfoundHead = children match(/ <\\/head\\s>/);\n}\nassert exists(foundHead);\n```\nThe body element should be a child of the html element js\nconst htmlChildren = code replace(/\\n/g, '') match(/<html\\s*>( <children> * )<\\/html\\s*>/);\nlet foundBody;\nif (htmlChildren) {\nconst { children } = htmlChildren groups;\nfoundBody = children match(/<body\\s*> *<\\/body\\s*>/);\n}\nassert exists(foundBody);\nThe head element should wrap around the title element js\nconst headChildren = code replace(/\\n/g, '')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\define-the-head-and-body-of-an-html-document.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c276394bdf6c7139d180a4e24fa8343f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\define-the-head-and-body-of-an-html-document.md",
    "source_type": "git_repo",
    "title": "Example title",
    "content": "(htmlChildren) { const { children } = htmlChildren groups; foundHead = children match(/ <\\/head\\s>/); } assert exists(foundHead); ``` The body element should be a child of the html element js const htmlChildren = code replace(/\\n/g, '') match(/<html\\s*>( <children> * )<\\/html\\s*>/); let foundBody; if (htmlChildren) { const { children } = htmlChildren groups; foundBody = children match(/<body\\s*> *<\\/body\\s*>/); } assert exists(foundBody); The head element should wrap around the title element js const headChildren = code replace(/\\n/g, '')match(/<head\\s*>( <children> * )<\\/head\\s*>/);\nlet foundTitle;\nif (headChildren) {\nconst { children } = headChildren groups;\nfoundTitle = children match(/<title\\s*> * <\\/title\\s*>/);\n}\nassert exists(foundTitle);\nThe body element should wrap around both the h1 and p elements js\nconst bodyChildren = code replace(/\\n/g, '') match(/<body\\s*>( <children> * )<\\/body\\s*>/);\nlet foundElems;\nif (bodyChildren) {\nconst { children } = bodyChildren groups;\nconst h1s = children match(/<h1\\s*> *<\\/h1\\s*>/g);\nconst ps = children match(/<p\\s*> *<\\/p\\s*>/g);\nconst numH1s = h1s h1s length : 0;\nconst numPs = ps ps length : 0;\nfoundElems = numH1s === 1 && numPs === 1;\n}\nassert exists(foundElems);\n--seed--\n--seed-contents--\n```html\nThe best page ever\nThe best page ever\nCat ipsum dolor sit amet, jump launch to pounce upon little yarn mouse, bare fangs at toy run hide in litter box until treats are fed Go into a room to decide you didn't want to be in there anyway I like big cats and i can not lie kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Meow i could pee on this if i had the energy for slap owner's face at 5am until human fills food dish yet scamper Knock dish off table head butt cant eat out of my own dish scratch the furniture",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\define-the-head-and-body-of-an-html-document.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "be0b18a28a888cd479c88a7be53258de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\define-the-head-and-body-of-an-html-document.md",
    "source_type": "git_repo",
    "title": "Example title",
    "content": "in there anyway I like big cats and i can not lie kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Meow i could pee on this if i had the energy for slap owner's face at 5am until human fills food dish yet scamper Knock dish off table head butt cant eat out of my own dish scratch the furnitureMake meme, make cute face Sleep in the bathroom sink chase laser but pee in the shoe Paw at your fat belly licks your face and eat grass, throw it back up kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff ```\n--solutions--\n```html\nThe best page ever\nThe best page ever\nCat ipsum dolor sit amet, jump launch to pounce upon little yarn mouse, bare fangs at toy run hide in litter box until treats are fed Go into a room to decide you didn't want to be in there anyway I like big cats and i can not lie kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Meow i could pee on this if i had the energy for slap owner's face at 5am until human fills food dish yet scamper Knock dish off table head butt cant eat out of my own dish scratch the furniture Make meme, make cute face Sleep in the bathroom sink chase laser but pee in the shoe Paw at your fat belly licks your face and eat grass, throw it back up kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\define-the-head-and-body-of-an-html-document.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "edb8287dfaae0c86747453c39d615ada",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\nest-an-anchor-element-within-a-paragraph.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aede08817\ntitle: Nest an Anchor Element within a Paragraph\nchallengeType: 0\nforumTopicId: 18244\ndashedName: nest-an-anchor-element-within-a-paragraph\n--description--\nYou can nest links within other text elements ```html\nHere's a  link to www freecodecamp org for you to follow ```\nLet's break down the example Normal text is wrapped in the p element:\n```html\nHere's a for you to follow ```\nNext is the anchor element <a> (which requires a closing tag </a>):\nhtml\n<a> </a>\ntarget is an anchor tag attribute that specifies where to open the link The value _blank specifies to open the link in a new tab The href is an anchor tag attribute that contains the URL address of the link:\nhtml\n<a href=\"https://www freecodecamp org\" target=\"_blank\"> </a>\nThe text, link to www freecodecamp org, within the a element is called anchor text, and will display the link to click:\nhtml\n<a href=\" \" target=\" \">link to freecodecamp org</a>\nThe final output of the example will look like this:\nHere's a link to www freecodecamp org for you to follow --instructions--\nNest the existing a element within a new p element Do not create a new anchor tag The new paragraph should have text that says View more cat photos, where cat photos is a link, and the rest is plain text --hints--\nYou should only have one a element js\nassert lengthOf(document querySelectorAll('a'), 1 );\nThe a element should link to \"https://www freecatphotoapp com\" js\nassert lengthOf(document querySelectorAll('a[href=\"https://www freecatphotoapp com\"]'),1);\nYour a element should have the anchor text of cat photos\njs\nassert match(document querySelector('a') textContent,/cat\\sphotos/gi)\nYou should create a new p element There should be at least 3 total p tags in your HTML code js\nassert lengthOf(document querySelectorAll('p'),3)\nYour a element should be nested within your new p element js\nconst anchorParent = document querySelector('a[href=\"https://www freecatphotoapp com\"]') parentNode;\nassert strictEqual(anchorParent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4305,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\nest-an-anchor-element-within-a-paragraph.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fe7d0d7079d8fee2d01bad19a87f5636",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\nest-an-anchor-element-within-a-paragraph.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a element should link to \"https://www freecatphotoapp com\" js assert lengthOf(document querySelectorAll('a[href=\"https://www freecatphotoapp com\"]'),1); Your a element should have the anchor text of cat photos js assert match(document querySelector('a') textContent,/cat\\sphotos/gi) You should create a new p element There should be at least 3 total p tags in your HTML code js assert lengthOf(document querySelectorAll('p'),3) Your a element should be nested within your new p element js const anchorParent = document querySelector('a[href=\"https://www freecatphotoapp com\"]') parentNode; assert strictEqual(anchorParenttagName,\"P\")\nYour p element should have the text View more (with a space after it) js\nconst textContent = document querySelector('a[href=\"https://www freecatphotoapp com\"]') parentNode textContent;\nassert match(textContent,/View\\smore\\s/gi);\nYour a element should not have the text View more js\nassert notMatch(document querySelector('a') textContent,/View\\smore/gi);\nEach of your p elements should have a closing tag js\nassert match(code,/<\\/p>/g);\nassert match(code,/<p/g);\nassert strictEqual(code match(/<\\/p>/g) length,code match(/<p/g) length);\nEach of your a elements should have a closing tag js\nassert match(code,/<\\/a>/g);\nassert match(code,/<a/g);\nassert strictEqual(code match(/<\\/a>/g) length,code match(/<a/g) length);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\ncat photos\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ```\n--solutions--\n```html\nCatPhotoApp\nView more cat photos\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4305,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\nest-an-anchor-element-within-a-paragraph.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c1df3b2cb3d44c43c756e727a06c4a3a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\uncomment-html.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08802\ntitle: Uncomment HTML\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cBmG9T7'\nforumTopicId: 18329\ndashedName: uncomment-html\n--description--\nCommenting is a way that you can leave comments for other developers within your code without affecting the resulting output that is displayed to the end user.\nCommenting is also a convenient way to make code inactive without having to delete it entirely.\nComments in HTML start with <!-- and end with a -->\n--instructions--\nUncomment your h1, h2 and p elements.\n--hints--\nYour h1 element should be visible on the page by uncommenting it.\njs\nassert.notEmpty(document.querySelectorAll('h1'));\nYour h2 element should be visible on the page by uncommenting it.\njs\nassert.notEmpty(document.querySelectorAll('h2'));\nYour p element should be visible on the page by uncommenting it.\njs\nassert.notEmpty(document.querySelectorAll('p'));\nNo trailing comment tags should be visible on the page (i.e. -->).\njs\nconst elements = document.querySelectorAll('*');\nconst potentialComments = Array.from(elements).filter(el => el.textContent.includes('-->'));\nassert.notExists(potentialComments[1])\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\nHello World\nCatPhotoApp\nKitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\uncomment-html.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "326b98dda6bb3062c701bfd65063e51f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\use-html5-to-require-a-field.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedc08830\ntitle: Use HTML5 to Require a Field\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cMd4EcQ'\nforumTopicId: 18360\ndashedName: use-html5-to-require-a-field\n--description--\nYou can require specific form fields so that your user will not be able to submit your form until he or she has filled them out.\nFor example, if you wanted to make a text input field required, you can just add the attribute required within your input element, like this: <input type=\"text\" required>\n--instructions--\nMake your text input a required field, so that your user can't submit the form without completing this field.\nThen try to submit the form without inputting any text. See how your HTML5 form notifies you that the field is required?\n--hints--\nYour text input element should have the required attribute.\njs\nassert.isTrue(document.querySelector('input').required);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos.\nThings cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\use-html5-to-require-a-field.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5cb689ace4940f55c5d17861b120c602",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\turn-an-image-into-a-link.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bad87fee1348bd9aedf08820\ntitle: Turn an Image into a Link\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVMPUv/cRdBnUr'\nforumTopicId: 18327\ndashedName: turn-an-image-into-a-link\n--description--\nYou can make elements into links by nesting them within an a element Nest your image within an a element Here's an example:\nhtml\n<a href=\"#\"><img src=\"https://cdn freecodecamp org/curriculum/cat-photo-app/relaxing-cat jpg\" alt=\"A cute orange cat lying on its back \"></a>\nRemember to use # as your a element's href property in order to turn it into a dead link --instructions--\nPlace the existing image element within an a (anchor) element Once you've done this, hover over your image with your cursor Your cursor's normal pointer should become the link clicking pointer The photo is now a link --hints--\nThe existing img element should be nested within an a element js\nconst anchor = document querySelectorAll('a')[1];\nconst children = anchor querySelectorAll(\"img\");\nassert notEmpty(children);\nYour a element should be a dead link with an href attribute set to # js\nconst anchor = document querySelectorAll('a')[1];\nconst parentHREF = anchor querySelector(\"img\") parentNode getAttribute('href');\nassert match(parentHREF,new RegExp('#'));\nEach of your a elements should have a closing tag js\nassert match(code,/<\\/a>/g);\nassert match(code,/<a/g);\nassert strictEqual(code match(/<\\/a>/g) length, code match(/<a/g) length)\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\turn-an-image-into-a-link.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "dee84afebb30d1fcd4aeb4bab8378911",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\turn-an-image-into-a-link.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ``` --solutions-- ```html CatPhotoApp Click here to view more cat photos Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniffPurr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\turn-an-image-into-a-link.md",
      "source_type": "git_repo"
    },
    "token_count": 124,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9b5370f0f7bce1bc565552d2b5a8eef6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\use-the-value-attribute-with-radio-buttons-and-checkboxes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5c6c06847491271903d37cfd\ntitle: Use the value attribute with Radio Buttons and Checkboxes\nchallengeType: 0\nforumTopicId: 301099\ndashedName: use-the-value-attribute-with-radio-buttons-and-checkboxes\n--description--\nWhen a form gets submitted, the data is sent to the server and includes entries for the options selected Inputs of type radio and checkbox report their values from the value attribute For example:\nhtml\n<label for=\"indoor\">\n<input id=\"indoor\" value=\"indoor\" type=\"radio\" name=\"indoor-outdoor\">Indoor\n</label>\n<label for=\"outdoor\">\n<input id=\"outdoor\" value=\"outdoor\" type=\"radio\" name=\"indoor-outdoor\">Outdoor\n</label>\nHere, you have two radio inputs When the user submits the form with the indoor option selected, the form data will include the line: indoor-outdoor=indoor This is from the name and value attributes of the \"indoor\" input If you omit the value attribute, the submitted form data uses the default value, which is on In this scenario, if the user clicked the \"indoor\" option and submitted the form, the resulting form data would be indoor-outdoor=on, which is not useful So the value attribute needs to be set to something to identify the option --instructions--\nGive each of the existing radio and checkbox inputs the value attribute Do not create any new radio or checkbox elements Use the input label text, in lowercase, as the value for the attribute --hints--\nOne of your radio buttons should have the value attribute of indoor js\nconst indoorRadioButton = [ document querySelectorAll('label > input[type=\"radio\"]')] filter(x => x value === \"indoor\");\nassert notEmpty(indoorRadioButton)\nOne of your radio buttons should have the value attribute of outdoor js\nconst outdoorRadioButton = [ document querySelectorAll('label > input[type=\"radio\"]')] filter(x => x value === \"outdoor\");\nassert notEmpty(outdoorRadioButton);\nOne of your checkboxes should have the value attribute of loving js\nconst lovingCheckbox = [ document querySelectorAll('label > input[type=\"checkbox\"]')] filter(x => x value === \"loving\");\nassert notEmpty(lovingCheckbox);\nOne of your checkboxes should have the value attribute of lazy js\nconst lazyCheckbox = [ document querySelectorAll('label > input[type=\"checkbox\"]')] filter(x => x",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5116,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\use-the-value-attribute-with-radio-buttons-and-checkboxes.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8a73a711c9ac8e1ca686bc30e40c094c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\use-the-value-attribute-with-radio-buttons-and-checkboxes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "buttons should have the value attribute of outdoor js const outdoorRadioButton = [ document querySelectorAll('label > input[type=\"radio\"]')] filter(x => x value === \"outdoor\"); assert notEmpty(outdoorRadioButton); One of your checkboxes should have the value attribute of loving js const lovingCheckbox = [ document querySelectorAll('label > input[type=\"checkbox\"]')] filter(x => x value === \"loving\"); assert notEmpty(lovingCheckbox); One of your checkboxes should have the value attribute of lazy js const lazyCheckbox = [ document querySelectorAll('label > input[type=\"checkbox\"]')] filter(x => xvalue === \"lazy\");\nassert notEmpty(lazyCheckbox);\nOne of your checkboxes should have the value attribute of energetic js\nconst energeticCheckbox =  [ document querySelectorAll('label > input[type=\"checkbox\"]')] filter(x => x value === \"energetic\");\nassert notEmpty(energeticCheckbox);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```\n--solutions--\n```html\nCatPhotoApp\nClick here to view more cat photos Things cats love:\ncatnip\nlaser pointers\nlasagna\nTop 3 things cats hate:\nflea treatment\nthunder\nother cats\nIndoor\nOutdoor\nLoving\nLazy\nEnergetic\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5116,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\basic-html-and-html5\\use-the-value-attribute-with-radio-buttons-and-checkboxes.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "949551914be5edce7011d4e96a9da240",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-justify-content-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ac367417b2b2512af6\ntitle: Align Elements Using the justify-content Property\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVaDAv/c43gnHm'\nforumTopicId: 301102\ndashedName: align-elements-using-the-justify-content-property\n--description--\nSometimes the flex items within a flex container do not fill all the space in the container It is common to want to tell CSS how to align and space out the flex items a certain way Fortunately, the justify-content property has several options to do this But first, there is some important terminology to understand before reviewing those options For more info about flex-box properties read here\nRecall that setting a flex container as a row places the flex items side-by-side from left-to-right A flex container set as a column places the flex items in a vertical stack from top-to-bottom For each, the direction the flex items are arranged is called the main axis For a row, this is a horizontal line that cuts through each item And for a column, the main axis is a vertical line through the items There are several options for how to space the flex items along the line that is the main axis One of the most commonly used is justify-content: center;, which aligns all the flex items to the center inside the flex container Other options include:\nflex-start: aligns items to the start of the flex container For a row, this pushes the items to the left of the container For a column, this pushes the items to the top of the container This is the default alignment if no justify-content is specified flex-end: aligns items to the end of the flex container For a row, this pushes the items to the right of the container For a column, this pushes the items to the bottom of the container space-between: aligns items to the center of the main axis, with extra space placed between the items The first and last items are pushed to the very edge of the flex container For example, in a row the first item is against the left side of the container, the last item is against the right side of the container, then the remaining space is distributed evenly among the other items space-around: similar to space-between but the first and last items are not locked to the edges of the container, the space is distributed around all the items with a half space on either end of the flex container",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4273,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-justify-content-property.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "556a708cedabc404b46772133c8f2c05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-justify-content-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "For example, in a row the first item is against the left side of the container, the last item is against the right side of the container, then the remaining space is distributed evenly among the other items space-around: similar to space-between but the first and last items are not locked to the edges of the container, the space is distributed around all the items with a half space on either end of the flex containerspace-evenly: Distributes space evenly between the flex items with a full space at either end of the flex container --instructions--\nAn example helps show this property in action Add the CSS property justify-content to the #box-container element, and give it a value of center Bonus\nTry the other options for the justify-content property in the code editor to see their differences But note that a value of center is the only one that will pass this challenge --hints--\nThe #box-container element should have a justify-content property set to a value of center js\nconst boxContainer = document querySelector('#box-container');\nconst justifyDirection =\nwindow getComputedStyle(boxContainer)['justify-content'];\nassert strictEqual(justifyDirection, 'center');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4273,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-justify-content-property.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e302af6d231a710ee8e707bf0996ff39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-align-items-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ad367417b2b2512af8\ntitle: Align Elements Using the align-items Property\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVaDAv/c8aggtk'\nforumTopicId: 301101\ndashedName: align-elements-using-the-align-items-property\n--description--\nThe align-items property is similar to justify-content Recall that the justify-content property aligned flex items along the main axis For rows, the main axis is a horizontal line and for columns it is a vertical line Flex containers also have a cross axis which is the opposite of the main axis For rows, the cross axis is vertical and for columns, the cross axis is horizontal CSS offers the align-items property to align flex items along the cross axis For a row, it tells CSS how to push the items in the entire row up or down within the container And for a column, how to push all the items left or right within the container The different values available for align-items include:\nflex-start: aligns items to the start of the flex container For rows, this aligns items to the top of the container For columns, this aligns items to the left of the container flex-end: aligns items to the end of the flex container For rows, this aligns items to the bottom of the container For columns, this aligns items to the right of the container center: align items to the center For rows, this vertically aligns items (equal space above and below the items) For columns, this horizontally aligns them (equal space to the left and right of the items) stretch: stretch the items to fill the flex container For example, rows items are stretched to fill the flex container top-to-bottom This is the default value if no align-items value is specified baseline: align items to their baselines Baseline is a text concept, think of it as the line that the letters sit on --instructions--\nAn example helps show this property in action Add the CSS property align-items to the #box-container element, and give it a value of center Bonus\nTry the other options for the align-items property in the code editor to see their differences But note that a value of center is the only one that will pass this challenge --hints--\nThe #box-container element should have an align-items property set to a value of center js\nconst boxContainer = document querySelector('#box-container');\nconst alignment = window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-align-items-property.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3f810e6ff80d2e03a3d890acd1ac0b44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-align-items-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in action Add the CSS property align-items to the #box-container element, and give it a value of center Bonus Try the other options for the align-items property in the code editor to see their differences But note that a value of center is the only one that will pass this challenge --hints-- The #box-container element should have an align-items property set to a value of center js const boxContainer = document querySelector('#box-container'); const alignment = windowgetComputedStyle(boxContainer)['align-items'];\nassert strictEqual(alignment, 'center');\n--seed--\n--seed-contents--\n```html\nHello\nGoodbye\n```\n--solutions--\n```html\nHello\nGoodbye\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\align-elements-using-the-align-items-property.md",
      "source_type": "git_repo"
    },
    "token_count": 140,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8b9174ea9ff49ae37f46a905339be768",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\apply-the-flex-direction-property-to-create-a-column-in-the-tweet-embed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ac367417b2b2512af5\ntitle: Apply the flex-direction Property to Create a Column in the Tweet Embed\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cnzdVC9'\nforumTopicId: 301103\ndashedName: apply-the-flex-direction-property-to-create-a-column-in-the-tweet-embed\n--description--\nThe tweet embed header and footer used the flex-direction property earlier with a row value. Similarly, the items inside the .profile-name element would work well stacked as a column.\n--instructions--\nAdd the CSS property flex-direction to the header's .profile-name element and set the value to column.\n--hints--\nYour .follow-btn should be rendered on the page. Be sure to turn off any extensions such as ad blockers.\njs\nconst followButton = document.querySelector('.follow-btn');\nconst displayStyle = window.getComputedStyle(followButton)['display'];\nassert.isNotNull(followButton);\nassert.notStrictEqual(displayStyle, 'none');\nThe .profile-name element should have a flex-direction property set to column.\njs\nconst profileName = document.querySelector('.profile-name');\nconst flexDirection = window.getComputedStyle(profileName)['flex-direction'];\nassert.strictEqual(flexDirection, 'column');\n--seed--\n--seed-contents--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```\n--solutions--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\apply-the-flex-direction-property-to-create-a-column-in-the-tweet-embed.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dcf0b0ff46a20df142ae9f8b20e5b3f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\apply-the-flex-direction-property-to-create-rows-in-the-tweet-embed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ab367417b2b2512af3\ntitle: Apply the flex-direction Property to Create Rows in the Tweet Embed\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cJb8yuq'\nforumTopicId: 301104\ndashedName: apply-the-flex-direction-property-to-create-rows-in-the-tweet-embed\n--description--\nThe header and footer in the tweet embed example have child items that could be arranged as rows using the flex-direction property. This tells CSS to align the children horizontally.\n--instructions--\nAdd the CSS property flex-direction to both the header and footer and set the value to row.\n--hints--\nYour .follow-btn should be rendered on the page. Be sure to turn off any extensions such as ad blockers.\njs\nconst followButton = document.querySelector('.follow-btn');\nconst displayStyle = window.getComputedStyle(followButton)['display'];\nassert.isNotNull(followButton);\nassert.notStrictEqual(displayStyle, 'none');\nThe header should have a flex-direction property set to row.\njs\nassert.match(code, /header\\s*?{[^}]*?flex-direction:\\s*?row;/g);\nThe footer should have a flex-direction property set to row.\njs\nassert.match(code, /footer\\s*?{[^}]*?flex-direction:\\s*?row;/g);\n--seed--\n--seed-contents--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```\n--solutions--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5112,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\apply-the-flex-direction-property-to-create-rows-in-the-tweet-embed.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a5c71266b814e4a41991b1cb77aa5e30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-display-flex-to-position-two-boxes.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ab367417b2b2512af0\ntitle: 'Use display: flex to Position Two Boxes'\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cgz3QS7'\nforumTopicId: 301105\ndashedName: use-display-flex-to-position-two-boxes\n--description--\nThis section uses alternating challenge styles to show how to use CSS to position elements in a flexible way. First, a challenge will explain theory, then a practical challenge using a simple tweet component will apply the flexbox concept.\nPlacing the CSS property display: flex; on an element allows you to use other flex properties to build a responsive page.\n--instructions--\nAdd the CSS property display to #box-container and set its value to flex.\n--hints--\n#box-container should have the display property set to a value of flex.\njs\nconst boxContainer = document.querySelector('#box-container');\nconst displayStyle = window.getComputedStyle(boxContainer)['display'];\nassert.strictEqual(displayStyle, 'flex');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1698,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-display-flex-to-position-two-boxes.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "267d50fd4b125846c18547a4c5c060f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-align-items-property-in-the-tweet-embed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ad367417b2b2512af9\ntitle: Use the align-items Property in the Tweet Embed\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cd3PNfq'\nforumTopicId: 301106\ndashedName: use-the-align-items-property-in-the-tweet-embed\n--description--\nThe last challenge introduced the align-items property and gave an example. This property can be applied to a few tweet embed elements to align the flex items inside them.\n--instructions--\nAdd the CSS property align-items to the header's .follow-btn element. Set the value to center.\n--hints--\nYour .follow-btn should be rendered on the page. Be sure to turn off any extensions such as ad blockers.\njs\nconst followButton = document.querySelector('.follow-btn');\nconst displayStyle = window.getComputedStyle(followButton)['display'];\nassert.isNotNull(followButton);\nassert.notStrictEqual(displayStyle, 'none');\nThe .follow-btn element should have the align-items property set to a value of center.\njs\nconst followButton = document.querySelector('.follow-btn');\nconst alignItems = window.getComputedStyle(followButton)['align-items'];\nassert.strictEqual(alignItems, 'center');\n--seed--\n--seed-contents--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```\n--solutions--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5140,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-align-items-property-in-the-tweet-embed.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b66fd6a2784634e2a0d79c7009c888dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-align-self-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78af367417b2b2512b00\ntitle: Use the align-self Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cMbvzfv'\nforumTopicId: 301107\ndashedName: use-the-align-self-property\n--description--\nThe final property for flex items is align-self. This property allows you to adjust each item's alignment individually, instead of setting them all at once. This is useful since other common adjustment techniques using the CSS properties float, clear, and vertical-align do not work on flex items.\nalign-self accepts the same values as align-items and will override any value set by the align-items property.\n--instructions--\nAdd the CSS property align-self to both #box-1 and #box-2. Give #box-1 a value of center and give #box-2 a value of flex-end.\n--hints--\nThe #box-1 element should have the align-self property set to a value of center.\njs\nconst boxOne = document.querySelector('#box-1');\nconst alignment = window.getComputedStyle(boxOne)['align-self'];\nassert.strictEqual(alignment, 'center');\nThe #box-2 element should have the align-self property set to a value of flex-end.\njs\nconst boxTwo = document.querySelector('#box-2');\nconst alignment = window.getComputedStyle(boxTwo)['align-self'];\nassert.strictEqual(alignment, 'flex-end');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-align-self-property.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "049323cf7f5d56fee055df88b33de59b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-basis-property-to-set-the-initial-size-of-an-item.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ae367417b2b2512afd\ntitle: Use the flex-basis Property to Set the Initial Size of an Item\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/c3d9nCa'\nforumTopicId: 301108\ndashedName: use-the-flex-basis-property-to-set-the-initial-size-of-an-item\n--description--\nThe flex-basis property specifies the initial size of the item before CSS makes adjustments with flex-shrink or flex-grow.\nThe units used by the flex-basis property are the same as other size properties (px, em, %, etc.). The value auto sizes items based on the content.\n--instructions--\nSet the initial size of the boxes using flex-basis. Add the CSS property flex-basis to both #box-1 and #box-2. Give #box-1 a value of 10em and #box-2 a value of 20em.\n--hints--\nThe #box-1 element should have the flex-basis property.\njs\nconst boxOne = document.querySelector('#box-1');\nconst flexBasis = window.getComputedStyle(boxOne)['flex-basis'];\nassert.notStrictEqual(flexBasis, 'auto');\nThe #box-1 element should have a flex-basis value of 10em.\njs\nassert.match(code, /#box-1\\s*?{\\s*?.*?\\s*?.*?\\s*?flex-basis:\\s*?10em;/g);\nThe #box-2 element should have the flex-basis property.\njs\nconst boxTwo = document.querySelector('#box-2');\nconst flexBasis = window.getComputedStyle(boxTwo)['flex-basis'];\nassert.notStrictEqual(flexBasis, 'auto');\nThe #box-2 element should have a flex-basis value of 20em.\njs\nassert.match(code, /#box-2\\s*?{\\s*?.*?\\s*?.*?\\s*?flex-basis:\\s*?20em;/g);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-basis-property-to-set-the-initial-size-of-an-item.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e414a26180fd1f07b9a9d31be8d30100",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-direction-property-to-make-a-column.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ac367417b2b2512af4\ntitle: Use the flex-direction Property to Make a Column\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cZmWeA4'\nforumTopicId: 301109\ndashedName: use-the-flex-direction-property-to-make-a-column\n--description--\nThe last two challenges used the flex-direction property set to row. This property can also create a column by vertically stacking the children of a flex container.\n--instructions--\nAdd the CSS property flex-direction to the #box-container element, and give it a value of column.\n--hints--\nThe #box-container element should have a flex-direction property set to column.\njs\nconst boxContainer = document.querySelector('#box-container');\nconst flexDirection = window.getComputedStyle(boxContainer)['flex-direction'];\nassert.strictEqual(flexDirection, 'column');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1609,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-direction-property-to-make-a-column.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c9c40260dbad07fe6f042f3379c14d0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\add-flex-superpowers-to-the-tweet-embed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ab367417b2b2512af1\ntitle: Add Flex Superpowers to the Tweet Embed\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVaDAv/c9W7MhM'\nforumTopicId: 301100\ndashedName: add-flex-superpowers-to-the-tweet-embed\n--description--\nTo the right is the tweet embed that will be used as a practical example Some of the elements would look better with a different layout The last challenge demonstrated display: flex Here you'll add it to several components in the tweet embed to start adjusting their positioning --instructions--\nAdd the CSS property display: flex to all of the following items - note that the selectors are already set up in the CSS:\nheader, the header's profile-name, the header's follow-btn, the header's h3 and h4, the footer, and the footer's stats --hints--\nYour follow-btn should be rendered on the page Be sure to turn off any extensions such as ad blockers js\nconst followButton = document querySelector(' follow-btn');\nconst displayStyle = window getComputedStyle(followButton)['display'];\nassert isNotNull(followButton);\nassert notStrictEqual(displayStyle, 'none');\nYour header should have a display property set to flex js\nconst header = document querySelector('header');\nconst displayStyle = window getComputedStyle(header)['display'];\nassert strictEqual(displayStyle, 'flex');\nYour footer should have a display property set to flex js\nconst footer = document querySelector('footer');\nconst displayStyle = window getComputedStyle(footer)['display'];\nassert strictEqual(displayStyle, 'flex');\nYour h3 should have a display property set to flex js\nconst h3Element = document querySelector('h3');\nconst displayStyle = window getComputedStyle(h3Element)['display'];\nassert strictEqual(displayStyle, 'flex');\nYour h4 should have a display property set to flex js\nconst h4Element = document querySelector('h4');\nconst displayStyle = window getComputedStyle(h4Element)['display'];\nassert strictEqual(displayStyle, 'flex');\nYour profile-name should have a display property set to flex js\nconst profileName = document querySelector(' profile-name');\nconst displayStyle = window getComputedStyle(profileName)['display'];\nassert strictEqual(displayStyle, 'flex');\nYour follow-btn should have a display property set to flex js\nconst followButton = document querySelector('",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6498,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\add-flex-superpowers-to-the-tweet-embed.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "30d5845e6a2547dd1e6921000c597a75",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\add-flex-superpowers-to-the-tweet-embed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= document querySelector('h3'); const displayStyle = window getComputedStyle(h3Element)['display']; assert strictEqual(displayStyle, 'flex'); Your h4 should have a display property set to flex js const h4Element = document querySelector('h4'); const displayStyle = window getComputedStyle(h4Element)['display']; assert strictEqual(displayStyle, 'flex'); Your profile-name should have a display property set to flex js const profileName = document querySelector(' profile-name'); const displayStyle = window getComputedStyle(profileName)['display']; assert strictEqual(displayStyle, 'flex'); Your follow-btn should have a display property set to flex js const followButton = document querySelector('follow-btn');\nconst displayStyle = window getComputedStyle(followButton)['display'];\nassert strictEqual(displayStyle, 'flex');\nYour stats should have a display property set to flex js\nconst stats = document querySelector(' stats');\nconst displayStyle = window getComputedStyle(stats)['display'];\nassert strictEqual(displayStyle, 'flex');\n--seed--\n--seed-contents--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart Even if you work smart, you still have to work hard 1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```\n--solutions--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart Even if you work smart, you still have to work hard 1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6498,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\add-flex-superpowers-to-the-tweet-embed.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f9a8c54db67fb02999400795ef5fafe8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-direction-property-to-make-a-row.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ab367417b2b2512af2\ntitle: Use the flex-direction Property to Make a Row\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cBEkbfJ'\nforumTopicId: 301110\ndashedName: use-the-flex-direction-property-to-make-a-row\n--description--\nAdding display: flex to an element turns it into a flex container. This makes it possible to align any children of that element into rows or columns. You do this by adding the flex-direction property to the parent item and setting it to row or column. Creating a row will align the children horizontally, and creating a column will align the children vertically.\nOther options for flex-direction are row-reverse and column-reverse.\nNote: The default value for the flex-direction property is row.\n--instructions--\nAdd the CSS property flex-direction to the #box-container element, and give it a value of row-reverse.\n--hints--\nThe #box-container element should have a flex-direction property set to row-reverse.\njs\nconst boxContainer = document.querySelector('#box-container');\nconst flexDirection = window.getComputedStyle(boxContainer)['flex-direction'];\nassert.strictEqual(flexDirection, 'row-reverse');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-direction-property-to-make-a-row.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "521cb9952271ed9bedaaa06d1f0f30bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-shrink-property-to-shrink-items.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ad367417b2b2512afb\ntitle: Use the flex-shrink Property to Shrink Items\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cd3PBfr'\nforumTopicId: 301113\ndashedName: use-the-flex-shrink-property-to-shrink-items\n--description--\nSo far, all the properties in the challenges apply to the flex container (the parent of the flex items). However, there are several useful properties for the flex items.\nThe first is the flex-shrink property. When it's used, it allows an item to shrink if the flex container is too small. Items shrink when the width of the parent container is smaller than the combined widths of all the flex items within it.\nThe flex-shrink property takes numbers as values. The higher the number, the more it will shrink compared to the other items in the container. For example, if one item has a flex-shrink value of 1 and the other has a flex-shrink value of 3, the one with the value of 3 will shrink three times as much as the other.\n--instructions--\nAdd the CSS property flex-shrink to both #box-1 and #box-2. Give #box-1 a value of 1 and #box-2 a value of 2.\n--hints--\nThe #box-1 element should have the flex-shrink property set to a value of 1.\njs\nconst boxOne = document.querySelector('#box-1');\nconst flexShrink = window.getComputedStyle(boxOne)['flex-shrink'];\nassert.equal(flexShrink, '1');\nThe #box-2 element should have the flex-shrink property set to a value of 2.\njs\nconst boxTwo = document.querySelector('#box-2');\nconst flexShrink = window.getComputedStyle(boxTwo)['flex-shrink'];\nassert.equal(flexShrink, '2');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2417,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-shrink-property-to-shrink-items.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9216b68125436aac96fab41218772da1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-grow-property-to-expand-items.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ae367417b2b2512afc\ntitle: Use the flex-grow Property to Expand Items\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/c2p78cg'\nforumTopicId: 301111\ndashedName: use-the-flex-grow-property-to-expand-items\n--description--\nThe opposite of flex-shrink is the flex-grow property. Recall that flex-shrink controls the size of the items when the container shrinks. The flex-grow property controls the size of items when the parent container expands.\nUsing a similar example from the last challenge, if one item has a flex-grow value of 1 and the other has a flex-grow value of 3, the one with the value of 3 will grow three times as much as the other.\n--instructions--\nAdd the CSS property flex-grow to both #box-1 and #box-2. Give #box-1 a value of 1 and #box-2 a value of 2.\n--hints--\nThe #box-1 element should have the flex-grow property set to a value of 1.\njs\nconst boxOne = document.querySelector('#box-1');\nconst flexGrow = window.getComputedStyle(boxOne)['flex-grow'];\nassert.equal(flexGrow, '1');\nThe #box-2 element should have the flex-grow property set to a value of 2.\njs\nconst boxTwo = document.querySelector('#box-2');\nconst flexGrow = window.getComputedStyle(boxTwo)['flex-grow'];\nassert.equal(flexGrow, '2');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2028,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-grow-property-to-expand-items.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f630309ef5e5d9d7342e5e8a80444d36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-wrap-property-to-wrap-a-row-or-column.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ad367417b2b2512afa\ntitle: Use the flex-wrap Property to Wrap a Row or Column\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cQv9ZtG'\nforumTopicId: 301114\ndashedName: use-the-flex-wrap-property-to-wrap-a-row-or-column\n--description--\nCSS flexbox has a feature to split a flex container into multiple rows (or columns). By default, a flex container will fit all flex items together. For example, a row will all be on one line.\nHowever, using the flex-wrap property tells CSS to wrap items. This means extra items move into a new row or column. The break point of where the wrapping happens depends on the size of the items and the size of the container.\nCSS also has options for the direction of the wrap:\nnowrap: this is the default setting, and does not wrap items.wrap: wraps items onto multiple lines from top-to-bottom if they are in rows and left-to-right if they are in columns.wrap-reverse: wraps items onto multiple lines from bottom-to-top if they are in rows and right-to-left if they are in columns.\n--instructions--\nThe current layout has too many boxes for one row. Add the CSS property flex-wrap to the #box-container element, and give it a value of wrap.\n--hints--\nThe #box-container element should have the flex-wrap property set to a value of wrap.\njs\nconst boxContainer = document.querySelector('#box-container');\nconst flexWrap = window.getComputedStyle(boxContainer)['flex-wrap'];\nassert.strictEqual(flexWrap, 'wrap');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3189,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-wrap-property-to-wrap-a-row-or-column.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b13b0b9d45817ad91f7a8594baefadac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-order-property-to-rearrange-items.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ae367417b2b2512aff\ntitle: Use the order Property to Rearrange Items\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/cMbvNAG'\nforumTopicId: 301116\ndashedName: use-the-order-property-to-rearrange-items\n--description--\nThe order property is used to tell CSS the order of how flex items appear in the flex container. By default, items will appear in the same order they come in the source HTML. The property takes numbers as values, and negative numbers can be used.\n--instructions--\nAdd the CSS property order to both #box-1 and #box-2. Give #box-1 a value of 2 and give #box-2 a value of 1.\n--hints--\nThe #box-1 element should have the order property set to a value of 2.\njs\nconst boxOne = document.querySelector('#box-1');\nconst order = window.getComputedStyle(boxOne)['order'];\nassert.strictEqual(order, '2');\nThe #box-2 element should have the order property set to a value of 1.\njs\nconst boxTwo = document.querySelector('#box-2');\nconst order = window.getComputedStyle(boxTwo)['order'];\nassert.strictEqual(order, '1');\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-order-property-to-rearrange-items.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "26c47989d9ba7b9e30ce6379eb0634af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\add-columns-with-grid-template-columns.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9036d038fddaf9a66b5d32\ntitle: Add Columns with grid-template-columns\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/c7NzDHv'\nforumTopicId: 301117\ndashedName: add-columns-with-grid-template-columns\n--description--\nSimply creating a grid element doesn't get you very far. You need to define the structure of the grid as well. To add some columns to the grid, use the grid-template-columns property on a grid container as demonstrated below:\ncss\n.container {\ndisplay: grid;\ngrid-template-columns: 50px 50px;\n}\nThis will give your grid two columns that are each 50px wide. The number of parameters given to the grid-template-columns property indicates the number of columns in the grid, and the value of each parameter indicates the width of each column.\n--instructions--\nGive the grid container three columns that are each 100px wide.\n--hints--\ncontainer class should have a grid-template-columns property with three units of 100px.\njs\nconst templateColumns = new __helpers.CSSHelp(document).getStyle(\n'.container'\n)?.gridTemplateColumns;\nassert.strictEqual(templateColumns, '100px 100px 100px');\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1903,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\add-columns-with-grid-template-columns.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "926e0b01155a6244a6b09bf714f5bc67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-justify-content-property-in-the-tweet-embed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ac367417b2b2512af7\ntitle: Use the justify-content Property in the Tweet Embed\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pVaDAv/c43GgTa'\nforumTopicId: 301115\ndashedName: use-the-justify-content-property-in-the-tweet-embed\n--description--\nThe last challenge showed an example of the justify-content property. For the tweet embed, this property can be applied to align the items in the .profile-name element.\n--instructions--\nAdd the CSS property justify-content to the header's .profile-name element and set the value to any of the options from the last challenge.\n--hints--\nYour .follow-btn should be rendered on the page. Be sure to turn off any extensions such as ad blockers.\njs\nconst followButton = document.querySelector('.follow-btn');\nconst displayStyle = window.getComputedStyle(followButton)['display'];\nassert.isNotNull(followButton);\nassert.notStrictEqual(displayStyle, 'none');\nThe .profile-name element should have the justify-content property set to any of these values: center, flex-start, flex-end, space-between, space-around, or space-evenly.\njs\nassert.match(\ncode,\n/header\\s.profile-name\\s*{\\s*?.*?\\s*?.*?\\s*?\\s*?.*?\\s*?justify-content\\s*:\\s*(center|flex-start|flex-end|space-between|space-around|space-evenly)\\s*;/g\n);\n--seed--\n--seed-contents--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```\n--solutions--\n```html\nQuincy Larson\n@ossia\nFollow\nI meet so many people who are in search of that one trick that will help\nthem work smart. Even if you work smart, you still have to work hard.\n1:32 PM - 12 Jan 2018\n107 Retweets\n431 Likes\nShare\nRetweet\nLike\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-justify-content-property-in-the-tweet-embed.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3ff8567812860a7588c7e50fff8d2b44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\add-gaps-faster-with-grid-gap.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9036ee38fddaf9a66b5d37\ntitle: Add Gaps Faster with grid-gap\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/ca2qVtv'\nforumTopicId: 301118\ndashedName: add-gaps-faster-with-grid-gap\n--description--\ngrid-gap is a shorthand property for grid-row-gap and grid-column-gap from the previous two challenges that's more convenient to use. If grid-gap has one value, it will create a gap between all rows and columns. However, if there are two values, it will use the first one to set the gap between the rows and the second value for the columns.\n--instructions--\nUse grid-gap to introduce a 10px gap between the rows and 20px gap between the columns.\n--hints--\ncontainer class should have a grid-gap property that introduces a 10px gap between the rows and a 20px gap between the columns.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-gap\\s*?:\\s*?10px\\s+?20px\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1761,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\add-gaps-faster-with-grid-gap.md",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8c5621deec57fbe5164e68887350ff9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\add-rows-with-grid-template-rows.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9036e138fddaf9a66b5d33\ntitle: Add Rows with grid-template-rows\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cbp9Pua'\nforumTopicId: 301119\ndashedName: add-rows-with-grid-template-rows\n--description--\nThe grid you created in the last challenge will set the number of rows automatically. To adjust the rows manually, use the grid-template-rows property in the same way you used grid-template-columns in the previous challenge.\n--instructions--\nAdd two rows to the grid that are 50px tall each.\n--hints--\ncontainer class should have a grid-template-rows property with two units of 50px.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-template-rows\\s*?:\\s*?50px\\s*?50px\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1523,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\add-rows-with-grid-template-rows.md",
      "source_type": "git_repo"
    },
    "token_count": 240,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a0047ec0d70506030cc499298d334ec1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-shorthand-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78ae367417b2b2512afe\ntitle: Use the flex Shorthand Property\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pVaDAv/cbpW2tE'\nforumTopicId: 301112\ndashedName: use-the-flex-shorthand-property\n--description--\nThere is a shortcut available to set several flex properties at once The flex-grow, flex-shrink, and flex-basis properties can all be set together by using the flex property For example, flex: 1 0 10px; will set the item to flex-grow: 1;, flex-shrink: 0;, and flex-basis: 10px; The default property settings are flex: 0 1 auto; --instructions--\nAdd the CSS property flex to both #box-1 and #box-2 Give #box-1 the values so its flex-grow is 2, its flex-shrink is 2, and its flex-basis is 150px Give #box-2 the values so its flex-grow is 1, its flex-shrink is 1, and its flex-basis is 150px These values will cause #box-1 to grow to fill the extra space at twice the rate of #box-2 when the container is greater than 300px and shrink at twice the rate of #box-2 when the container is less than 300px 300px is the combined size of the flex-basis values of the two boxes --hints--\nThe #box-1 element should have the flex property set to a value of 2 2 150px ```js\nconst boxOne = document querySelector('#box-1');\nconst flexGrow = window getComputedStyle(boxOne)['flex-grow'];\nconst flexShrink = window getComputedStyle(boxOne)['flex-shrink'];\nconst flexBasis = window getComputedStyle(boxOne)['flex-basis'];\nassert equal(flexGrow, '2');\nassert equal(flexShrink, '2');\nassert equal(flexBasis, '150px');\n```\nThe #box-2 element should have the flex property set to a value of 1 1 150px ```js\nconst boxTwo = document querySelector('#box-2');\nconst flexGrow = window getComputedStyle(boxTwo)['flex-grow'];\nconst flexShrink = window getComputedStyle(boxTwo)['flex-shrink'];\nconst flexBasis = window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-shorthand-property.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "474dada6ac61bb1f6faf52a7a9ba49a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-shorthand-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "property set to a value of 2 2 150px ```js const boxOne = document querySelector('#box-1'); const flexGrow = window getComputedStyle(boxOne)['flex-grow']; const flexShrink = window getComputedStyle(boxOne)['flex-shrink']; const flexBasis = window getComputedStyle(boxOne)['flex-basis']; assert equal(flexGrow, '2'); assert equal(flexShrink, '2'); assert equal(flexBasis, '150px'); ``` The #box-2 element should have the flex property set to a value of 1 1 150px ```js const boxTwo = document querySelector('#box-2'); const flexGrow = window getComputedStyle(boxTwo)['flex-grow']; const flexShrink = window getComputedStyle(boxTwo)['flex-shrink']; const flexBasis = windowgetComputedStyle(boxTwo)['flex-basis'];\nassert equal(flexGrow, '1');\nassert equal(flexShrink, '1');\nassert equal(flexBasis, '150px');\n```\nYour code should use the flex property for #box-1 and #box-2 js\nassert lengthOf(code match(/flex:\\s* \\d\\s+ \\d\\s+ 150px;/g), 2);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-flexbox\\use-the-flex-shorthand-property.md",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9283ea65434646690ec3e5279c312175",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-all-items-horizontally-using-justify-items.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a90376038fddaf9a66b5d3c\ntitle: Align All Items Horizontally using justify-items\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cJbpECn'\nforumTopicId: 301120\ndashedName: align-all-items-horizontally-using-justify-items\n--description--\nSometimes you want all the items in your CSS Grid to share the same alignment. You can use the previously learned properties and align them individually, or you can align them all at once horizontally by using justify-items on your grid container. This property can accept all the same values you learned about in the previous two challenges, the difference being that it will move all the items in our grid to the desired alignment.\n--instructions--\nUse this property to center all our items horizontally.\n--hints--\ncontainer class should have a justify-items property that has the value of center.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*justify-items\\s*?:\\s*?center\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1856,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-all-items-horizontally-using-justify-items.md",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "612c34610e4e0679e3f5e4b4189ee34f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-an-item-horizontally-using-justify-self.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a90374338fddaf9a66b5d3a\ntitle: Align an Item Horizontally using justify-self\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cJbpKHq'\nforumTopicId: 301122\ndashedName: align-an-item-horizontally-using-justify-self\n--description--\nIn CSS Grid, the content of each item is located in a box which is referred to as a cell. You can align the content's position within its cell horizontally using the justify-self property on a grid item. By default, this property has a value of stretch, which will make the content fill the whole width of the cell. This CSS Grid property accepts other values as well:\nstart: aligns the content at the left of the cell,\ncenter: aligns the content in the center of the cell,\nend: aligns the content at the right of the cell.\n--instructions--\nUse the justify-self property to center the item with the class item2.\n--hints--\nitem2 class should have a justify-self property that has the value of center.\njs\nassert.match(\ncode,\n/.item2\\s*?{[\\s\\S]*justify-self\\s*?:\\s*?center\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-an-item-horizontally-using-justify-self.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "84cf197d5f0be1a3b1cdef5c3ee1dfea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-an-item-vertically-using-align-self.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a90375238fddaf9a66b5d3b\ntitle: Align an Item Vertically using align-self\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cmzd4fz'\nforumTopicId: 301123\ndashedName: align-an-item-vertically-using-align-self\n--description--\nJust as you can align an item horizontally, there's a way to align an item vertically as well. To do this, you use the align-self property on an item. This property accepts all of the same values as justify-self from the last challenge.\n--instructions--\nAlign the item with the class item3 vertically at the end.\n--hints--\nitem3 class should have a align-self property that has the value of end.\njs\nassert.match(code, /.item3\\s*?{[\\s\\S]*align-self\\s*?:\\s*?end\\s*?;[\\s\\S]*}/gi);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-an-item-vertically-using-align-self.md",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e63baf24205a796a09bcfc85120b2c24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-a-column-gap-using-grid-column-gap.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9036ee38fddaf9a66b5d35\ntitle: Create a Column Gap Using grid-column-gap\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cVZ8vfD'\nforumTopicId: 301124\ndashedName: create-a-column-gap-using-grid-column-gap\n--description--\nSo far in the grids you have created, the columns have all been tight up against each other. Sometimes you want a gap in between the columns. To add a gap between the columns, use the grid-column-gap property like this:\ncss\ngrid-column-gap: 10px;\nThis creates 10px of empty space between all of our columns.\n--instructions--\nGive the columns in the grid a 20px gap.\n--hints--\ncontainer class should have a grid-column-gap property that has the value of 20px.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-column-gap\\s*?:\\s*?20px\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1657,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-a-column-gap-using-grid-column-gap.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "58d76985df009c7e2ecac689db41ecea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-all-items-vertically-using-align-items.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fdf869fb03452672e45b\ntitle: Align All Items Vertically using align-items\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/ckzPeUv'\nforumTopicId: 301121\ndashedName: align-all-items-vertically-using-align-items\n--description--\nUsing the align-items property on a grid container will set the vertical alignment for all the items in our grid.\n--instructions--\nUse it now to move all the items to the end of each cell.\n--hints--\ncontainer class should have a align-items property that has the value of end.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*align-items\\s*?:\\s*?end\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1511,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\align-all-items-vertically-using-align-items.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d566955de8155ce50d7eda6cc3b080c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-a-row-gap-using-grid-row-gap.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9036ee38fddaf9a66b5d36\ntitle: Create a Row Gap using grid-row-gap\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cPbJ2Cv'\nforumTopicId: 301125\ndashedName: create-a-row-gap-using-grid-row-gap\n--description--\nYou can add a gap in between the rows of a grid using grid-row-gap in the same way that you added a gap in between columns in the previous challenge.\n--instructions--\nCreate a gap for the rows that is 5px tall.\n--hints--\ncontainer class should have a grid-row-gap property that has the value of 5px.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-row-gap\\s*?:\\s*?5px\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-a-row-gap-using-grid-row-gap.md",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0c3f38846dadfe6ed42370f476529e9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-grids-within-grids.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe8569fb03452672e464\ntitle: Create Grids within Grids\nchallengeType: 0\nforumTopicId: 301128\ndashedName: create-grids-within-grids\n--description--\nTurning an element into a grid only affects the behavior of its direct descendants. So by turning a direct descendant into a grid, you have a grid within a grid.\nFor example, by setting the display and grid-template-columns properties of the element with the item3 class, you create a grid within your grid.\n--instructions--\nTurn the element with the item3 class into a grid with two columns with a width of auto and 1fr using display and grid-template-columns.\n--hints--\nitem3 class should have a grid-template-columns property with auto and 1fr as values.\njs\nassert.match(\ncode,\n/.item3\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?auto\\s*?1fr\\s*?;[\\s\\S]*}/gi\n);\nitem3 class should have a display property with the value of grid.\njs\nassert.match(code, /.item3\\s*?{[\\s\\S]*display\\s*?:\\s*?grid\\s*?;[\\s\\S]*}/gi);\n--seed--\n--seed-contents--\n```html\nheader\nadvert\nparagraph1\nparagraph2\nfooter\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2237,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-grids-within-grids.md",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d7e2d96e61a21117df256be1a4dc2441",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-flexible-layouts-using-auto-fit.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe6269fb03452672e462\ntitle: Create Flexible Layouts Using auto-fit\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/c3dPph8'\nforumTopicId: 301127\ndashedName: create-flexible-layouts-using-auto-fit\n--description--\nauto-fit works almost identically to auto-fill. The only difference is that when the container's size exceeds the size of all the items combined, auto-fill keeps inserting empty rows or columns and pushes your items to the side, while auto-fit collapses those empty rows or columns and stretches your items to fit the size of the container.\nNote: If your container can't fit all your items on one row, it will move them down to a new one.\n--instructions--\nIn the second grid, use auto-fit with repeat to fill the grid with columns that have a minimum width of 60px and maximum of 1fr. Then resize the preview to see the difference.\n--hints--\ncontainer2 class should have a grid-template-columns property with repeat and auto-fit that will fill the grid with columns that have a minimum width of 60px and a maximum of 1fr.\njs\nassert.match(\ncode,\n/.container2\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?repeat\\s*?\\(\\s*?auto-fit\\s*?,\\s*?minmax\\s*?\\(\\s*?60px\\s*?,\\s*?1fr\\s*?\\)\\s*?\\)\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-flexible-layouts-using-auto-fit.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1fb16b495cc28757aa6e4dd828cd6ac1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-flexible-layouts-using-auto-fill.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe5469fb03452672e461\ntitle: Create Flexible Layouts Using auto-fill\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cmzdycW'\nforumTopicId: 301126\ndashedName: create-flexible-layouts-using-auto-fill\n--description--\nThe repeat function comes with an option called auto-fill. This allows you to automatically insert as many rows or columns of your desired size as possible depending on the size of the container. You can create flexible layouts when combining auto-fill with minmax, like this:\ncss\nrepeat(auto-fill, minmax(60px, 1fr));\nWhen the container changes size, this setup keeps inserting 60px columns and stretching them until it can insert another one. Note: If your container can't fit all your items on one row, it will move them down to a new one.\n--instructions--\nIn the first grid, use auto-fill with repeat to fill the grid with columns that have a minimum width of 60px and maximum of 1fr. Then resize the preview to see auto-fill in action.\n--hints--\ncontainer class should have a grid-template-columns property with repeat and auto-fill that will fill the grid with columns that have a minimum width of 60px and maximum of 1fr.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?repeat\\s*?\\(\\s*?auto-fill\\s*?,\\s*?minmax\\s*?\\(\\s*?60px\\s*?,\\s*?1fr\\s*?\\)\\s*?\\)\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n1\n2\n3\n4\n5\n1\n2\n3\n4\n5\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3813,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-flexible-layouts-using-auto-fill.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "37d942c875a2ad94a9f0c3abb82f4087",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-your-first-css-grid.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a858944d96184f06fd60d61\ntitle: Create Your First CSS Grid\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cqwREC4'\nforumTopicId: 301129\ndashedName: create-your-first-css-grid\n--description--\nTurn any HTML element into a grid container by setting its display property to grid. This gives you the ability to use all the other properties associated with CSS Grid.\nNote: In CSS Grid, the parent element is referred to as the container and its children are called items.\n--instructions--\nChange the display of the div with the container class to grid.\n--hints--\ncontainer class should have a display property with a value of grid.\njs\nassert.match(code, /.container\\s*?{[\\s\\S]*display\\s*?:\\s*?grid\\s*?;[\\s\\S]*}/gi);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\create-your-first-css-grid.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a2f21f6acfc448d21fce7eb2f2eca16f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\divide-the-grid-into-an-area-template.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe0569fb03452672e45c\ntitle: Divide the Grid Into an Area Template\nchallengeType: 0\nforumTopicId: 301130\ndashedName: divide-the-grid-into-an-area-template\n--description--\nYou can group cells of your grid together into an area and give the area a custom name. Do this by using grid-template-areas on the container like this:\ncss\ngrid-template-areas:\n'header header header'\n'advert content content'\n'advert footer footer';\nThe code above groups the cells of the grid into four areas: header, advert, content, and footer. Every word represents a cell and every pair of quotation marks represent a row.\n--instructions--\nChange the template so the footer area spans the entire bottom row. Defining the areas won't have any visual effect right now. Later, you will make an item use an area to see how it works.\n--hints--\ncontainer class should have a grid-template-areas property similar to the example but with the footer area spanning the whole bottom row.\njs\nassert.match(\n__helpers.removeCssComments(code),\n/.container\\s*?{[\\s\\S]*grid-template-areas\\s*?:\\s*?[\"|']\\s*?header\\s*?header\\s*?header\\s*?[\"|']\\s*?[\"|']\\s*?advert\\s*?content\\s*?content\\s*?[\"|']\\s*?[\"|']\\s*?footer\\s*?footer\\s*?footer\\s*?[\"|']\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n1\n2\n3\n4\n5\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2969,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\divide-the-grid-into-an-area-template.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8a2dccdadc7ae1b750d68ed962222650",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\limit-item-size-using-the-minmax-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe4469fb03452672e460\ntitle: Limit Item Size Using the minmax Function\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cD97RTv'\nforumTopicId: 301131\ndashedName: limit-item-size-using-the-minmax-function\n--description--\nThere's another built-in function to use with grid-template-columns and grid-template-rows called minmax. It's used to limit the size of items when the grid container changes size. To do this you need to specify the acceptable size range for your item. Here is an example:\ncss\ngrid-template-columns: 100px minmax(50px, 200px);\nIn the code above, grid-template-columns is set to create two columns; the first is 100px wide, and the second has the minimum width of 50px and the maximum width of 200px.\n--instructions--\nUsing the minmax function, replace the 1fr in the repeat function with a column size that has the minimum width of 90px and the maximum width of 1fr, and resize the preview panel to see the effect.\n--hints--\ncontainer class should have a grid-template-columns property that is set to repeat 3 columns with the minimum width of 90px and maximum width of 1fr.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?repeat\\s*?\\(\\s*?3\\s*?,\\s*?minmax\\s*?\\(\\s*?90px\\s*?,\\s*?1fr\\s*?\\)\\s*?\\)\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2241,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\limit-item-size-using-the-minmax-function.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "20e40dfb506907ddb4d2ca3619eb48ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\place-items-in-grid-areas-using-the-grid-area-property.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe1369fb03452672e45d\ntitle: Place Items in Grid Areas Using the grid-area Property\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cRrqmtV'\nforumTopicId: 301132\ndashedName: place-items-in-grid-areas-using-the-grid-area-property\n--description--\nAfter creating an area template for your grid container, as shown in the previous challenge, you can place an item in your custom area by referencing the name you gave it. To do this, you use the grid-area property on an item like this:\ncss\n.item1 {\ngrid-area: header;\n}\nThis lets the grid know that you want the item1 class to go in the area named header. In this case, the item will use the entire top row because that whole row is named as the header area.\n--instructions--\nPlace an element with the item5 class in the footer area using the grid-area property.\n--hints--\nitem5 class should have a grid-area property that has the value of footer.\njs\nassert.match(\n__helpers.removeCssComments(code),\n/.item5\\s*?{[\\s\\S]*grid-area\\s*?:\\s*?footer\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2065,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\place-items-in-grid-areas-using-the-grid-area-property.md",
      "source_type": "git_repo"
    },
    "token_count": 304,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e7ecbc2659bee56b44075cb41e5440f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\reduce-repetition-using-the-repeat-function.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe3669fb03452672e45f\ntitle: Reduce Repetition Using the repeat Function\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cQvqyHR'\nforumTopicId: 301133\ndashedName: reduce-repetition-using-the-repeat-function\n--description--\nWhen you used grid-template-columns and grid-template-rows to define the structure of a grid, you entered a value for each row or column you created.\nLet's say you want a grid with 100 rows of the same height. It isn't very practical to insert 100 values individually. Fortunately, there's a better way - by using the repeat function to specify the number of times you want your column or row to be repeated, followed by a comma and the value you want to repeat.\nHere's an example that would create the 100 row grid, each row at 50px tall.\ncss\ngrid-template-rows: repeat(100, 50px);\nYou can also repeat multiple values with the repeat function and insert the function amongst other values when defining a grid structure. Here's what that looks like:\ncss\ngrid-template-columns: repeat(2, 1fr 50px) 20px;\nThis translates to:\ncss\ngrid-template-columns: 1fr 50px 1fr 50px 20px;\nNote: The 1fr 50px is repeated twice followed by 20px.\n--instructions--\nUse repeat to remove repetition from the grid-template-columns property.\n--hints--\ncontainer class should have a grid-template-columns property that is set to repeat 3 columns with the width of 1fr.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?repeat\\s*?\\(\\s*?3\\s*?,\\s*?1fr\\s*?\\)\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\reduce-repetition-using-the-repeat-function.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "57b41fa50282f705e9bc93f43fdbbe82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-css-grid-units-to-change-the-size-of-columns-and-rows.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a9036ee38fddaf9a66b5d34\ntitle: Use CSS Grid units to Change the Size of Columns and Rows\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cvE8phd'\nforumTopicId: 301134\ndashedName: use-css-grid-units-to-change-the-size-of-columns-and-rows\n--description--\nYou can use absolute and relative units like px and em in CSS Grid to define the size of rows and columns. You can use these as well:\nfr: sets the column or row to a fraction of the available space,\nauto: sets the column or row to the width or height of its content automatically,\n%: adjusts the column or row to the percent width of its container.\nHere's the code that generates the output in the preview:\ncss\ngrid-template-columns: auto 50px 10% 2fr 1fr;\nThis snippet creates five columns. The first column is as wide as its content, the second column is 50px, the third column is 10% of its container, and for the last two columns; the remaining space is divided into three sections, two are allocated for the fourth column, and one for the fifth.\n--instructions--\nMake a grid with three columns whose widths are as follows: 1fr, 100px, and 2fr.\n--hints--\nYour container class should have a grid-template-columns property that has three columns with the following widths: 1fr, 100px, and 2fr.\njs\nassert.match(\ncode,\n/.container\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?1fr\\s*?100px\\s*?2fr\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2258,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-css-grid-units-to-change-the-size-of-columns-and-rows.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bf8c0a8d67b6b46a434394825de2c593",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-area-without-creating-an-areas-template.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe2669fb03452672e45e\ntitle: Use grid-area Without Creating an Areas Template\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/c6N7VhK'\nforumTopicId: 301135\ndashedName: use-grid-area-without-creating-an-areas-template\n--description--\nThe grid-area property you learned in the last challenge can be used in another way. If your grid doesn't have an areas template to reference, you can create an area on the fly for an item to be placed like this:\ncss\nitem1 {\ngrid-area: 1/1/2/4;\n}\nThis is using the line numbers you learned about earlier to define where the area for this item will be. The numbers in the example above represent these values:\ncss\ngrid-area: horizontal line to start at / vertical line to start at / horizontal\nline to end at / vertical line to end at;\nSo the item in the example will consume the rows between lines 1 and 2, and the columns between lines 1 and 4.\n--instructions--\nUsing the grid-area property, place the element with item5 class between the third and fourth horizontal lines and between the first and fourth vertical lines.\n--hints--\nThe item5 class should have a grid-area property to make it fill the whole area between the third and fourth horizontal lines, and first and fourth vertical lines.\njs\nassert.match(\ncode,\n/.item5\\s*?{[\\s\\S]*grid-area\\s*?:\\s*?3\\s*?\\/\\s*?1\\s*?\\/\\s*?4\\s*?\\/\\s*?4\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2283,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-area-without-creating-an-areas-template.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "41b806eb27dea7c0c1fb6302711c0ceb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-row-to-control-spacing.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a90373638fddaf9a66b5d39\ntitle: Use grid-row to Control Spacing\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/c9WBLU4'\nforumTopicId: 301137\ndashedName: use-grid-row-to-control-spacing\n--description--\nOf course, you can make items consume multiple rows just like you can with columns. You define the horizontal lines you want an item to start and stop at using the grid-row property on a grid item.\n--instructions--\nMake the element with the item5 class consume the last two rows.\n--hints--\nitem5 class should have a grid-row property.\njs\nconst styleElement = document.querySelector('style:not(.fcc-hide-header)');\nassert.match(\n__helpers.removeWhiteSpace(styleElement.textContent),\n/\\.item5{.*grid-row:.*}/g\n);\nitem5 class should have a grid-row property which results in it consuming the last two rows of the grid.\njs\nconst itemFive = document.querySelector('.item5');\nconst rowStart = getComputedStyle(itemFive).gridRowStart;\nconst rowEnd = getComputedStyle(itemFive).gridRowEnd;\nconst result = rowStart.toString() + rowEnd.toString();\nconst correctResults = [\n'24',\n'2-1',\n'2span 2',\n'2span2',\n'span 2-1',\n'-12',\n'span 2span 2',\n'span 2auto',\n'autospan 2'\n];\nassert.include(correctResults, result);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n1\n2\n3\n4\n5\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2797,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-row-to-control-spacing.md",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7b5069d4beea16b1a19c0ff0d3fa2c31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-media-queries-to-create-responsive-layouts.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a94fe7769fb03452672e463\ntitle: Use Media Queries to Create Responsive Layouts\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pByETK/cMbqeHk'\nforumTopicId: 301138\ndashedName: use-media-queries-to-create-responsive-layouts\n--description--\nCSS Grid can be an easy way to make your site more responsive by using media queries to rearrange grid areas, change dimensions of a grid, and rearrange the placement of items.\nIn the preview, when the viewport width is 300px or more, the number of columns changes from 1 to 2. The advertisement area then occupies the left column completely.\n--instructions--\nWhen the viewport width is 400px or more, make the header area occupy the top row completely and the footer area occupy the bottom row completely.\n--hints--\nWhen the viewport is 400px or more, container class should have a grid-template-areas property in which the header and footer areas occupy the top and bottom rows respectively and advert and content occupy the left and right columns of the middle row.\njs\nassert.match(\n__helpers.removeCssComments(code),\n/@media\\s*?\\(\\s*?min-width\\s*?:\\s*?400px\\s*?\\)[\\s\\S]*.container\\s*?{[\\s\\S]*grid-template-areas\\s*?:\\s*?[\"|']\\s*?header\\s*?header\\s*?[\"|']\\s*?[\"|']\\s*?advert\\s*?content\\s*?[\"|']\\s*?[\"|']\\s*?footer\\s*?footer\\s*?[\"|']\\s*?;[\\s\\S]*}/gi\n);\n--seed--\n--seed-contents--\n```html\nheader\nadvert\ncontent\nfooter\n```\n--solutions--\n```html\nheader\nadvert\ncontent\nfooter\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-media-queries-to-create-responsive-layouts.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7277346df6c42fa353b0b6099ba867a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\make-an-image-responsive.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b1367417b2b2512b09\ntitle: Make an Image Responsive\nchallengeType: 0\nforumTopicId: 301140\ndashedName: make-an-image-responsive\n--description--\nMaking images responsive with CSS is actually very simple. You just need to add these properties to an image:\ncss\nimg {\nmax-width: 100%;\nheight: auto;\n}\nThe max-width of 100% will make sure the image is never wider than the container it is in, and the height of auto will make the image keep its original aspect ratio.\n--instructions--\nAdd the style rules to the responsive-img class to make it responsive. It should never be wider than its container (in this case, it's the preview window) and it should keep its original aspect ratio. After you have added your code, resize the preview to see how your images behave.\n--hints--\nYour responsive-img class should have a max-width set to 100%.\njs\nassert.strictEqual(getComputedStyle(document.querySelector('.responsive-img')).maxWidth, '100%');\nYour responsive-img class should have a height set to auto.\njs\nassert.match(code, /height:\\s*?auto;/g);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\make-an-image-responsive.md",
      "source_type": "git_repo"
    },
    "token_count": 272,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "38c6abea8a0a59d1782b9ff5a32981b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-column-to-control-spacing.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5a90372638fddaf9a66b5d38\ntitle: Use grid-column to Control Spacing\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pByETK/cnzkDSr'\nforumTopicId: 301136\ndashedName: use-grid-column-to-control-spacing\n--description--\nUp to this point, all the properties that have been discussed are for grid containers The grid-column property is the first one for use on the grid items themselves The hypothetical horizontal and vertical lines that create the grid are referred to as lines These lines are numbered starting with 1 at the top left corner of the grid and move right for columns and down for rows, counting upward This is what the lines look like for a 3x3 grid:\ncolumn lines1234row lines1234\nTo control the number of columns an item will consume, you can use the grid-column property in conjunction with the line numbers you want the item to start and stop at Here's an example:\ncss\ngrid-column: 1 / 3;\nThis will make the item start at the first vertical line of the grid on the left and span to the 3rd line of the grid, consuming two columns --instructions--\nMake the item with the class item5 consume the last two columns of the grid --hints--\nitem5 class should have a grid-column property js\nconst styleElement = document querySelector('style:not( fcc-hide-header)');\nassert match(\n__helpers removeWhiteSpace(styleElement textContent),\n/\\ item5{ *grid-column: *}/g\n);\nitem5 class should have a grid-column property which results in it consuming the last two columns of the grid js\nconst itemFive = document querySelector(' item5');\nconst colStart = getComputedStyle(itemFive) gridColumnStart;\nconst colEnd = getComputedStyle(itemFive) gridColumnEnd;\nconst result = colStart toString() + colEnd toString();\nconst correctResults = [\n'24',\n'2-1',\n'2span 2',\n'2span2',\n'span 2-1',\n'-12',\n'span 2span 2',\n'span 2auto',\n'autospan 2'\n];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5123,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-column-to-control-spacing.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f6da4aa59e85c65237bc57a4e5faa77a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-column-to-control-spacing.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "fcc-hide-header)'); assert match( __helpers removeWhiteSpace(styleElement textContent), /\\ item5{ *grid-column: *}/g ); item5 class should have a grid-column property which results in it consuming the last two columns of the grid js const itemFive = document querySelector(' item5'); const colStart = getComputedStyle(itemFive) gridColumnStart; const colEnd = getComputedStyle(itemFive) gridColumnEnd; const result = colStart toString() + colEnd toString(); const correctResults = [ '24', '2-1', '2span 2', '2span2', 'span 2-1', '-12', 'span 2span 2', 'span 2auto', 'autospan 2' ]; assertinclude(correctResults, result);\n--seed--\n--seed-contents--\n```html\n1\n2\n3\n4\n5\n```\n--solutions--\n```html\n1\n2\n3\n4\n5\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5123,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\css-grid\\use-grid-column-to-control-spacing.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b46fdbc33690bfae200c47b25812d739",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\use-a-retina-image-for-higher-resolution-displays.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b1367417b2b2512b0a\ntitle: Use a Retina Image for Higher Resolution Displays\nchallengeType: 0\nvideoUrl: 'https://scrimba.com/p/pzrPu4/cVZ4Rfp'\nforumTopicId: 301142\ndashedName: use-a-retina-image-for-higher-resolution-displays\n--description--\nWith the increase of internet connected devices, their sizes and specifications vary, and the displays they use could be different externally and internally. Pixel density is an aspect that could be different on one device from others and this density is known as Pixel Per Inch(PPI) or Dots Per Inch(DPI). The most famous such display is the one known as a \"Retina Display\" on the latest Apple MacBook Pro notebooks, and recently iMac computers. Due to the difference in pixel density between a \"Retina\" and \"Non-Retina\" displays, some images that have not been made with a High-Resolution Display in mind could look \"pixelated\" when rendered on a High-Resolution display.\nThe simplest way to make your images properly appear on High-Resolution Displays, such as the MacBook Pros \"retina display\" is to define their width and height values as only half of what the original file is. Here is an example of an image that is only using half of the original height and width:\n```html\n```\n--instructions--\nSet the width and height of the img tag to half of their original values. In this case, both the original height and the original width are 200px.\n--hints--\nYour img tag should have a width of 100 pixels.\njs\nassert.strictEqual(document.querySelector('img').width, 100);\nYour img tag should have a height of 100 pixels.\njs\nassert.strictEqual(document.querySelector('img').height, 100);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2362,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\use-a-retina-image-for-higher-resolution-displays.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9fe3e7fb2bb57551a468553f530501cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a2-english-for-developers-certification\\a2-english-for-developers-certification.yml",
    "source_type": "git_repo",
    "title": "a2-english-for-developers-certification",
    "content": "---\nid: 651dd7e01d697d0aab7833b7\ntitle: A2 English for Developers Certification\ncertification: a2-english-for-developers\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 6721db5d9f0c116e6a0fe25a\n    title: A2 English for Developers Certification Exam",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a2-english-for-developers-certification\\a2-english-for-developers-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 85,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "83983a24057f965431ee31cd34fb32e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a1-professional-chinese\\a1-professional-chinese-certification.yml",
    "source_type": "git_repo",
    "title": "a1-professional-chinese-certification",
    "content": "---\nid: 688f1daf0133dbe2a36b140b\ntitle: A1 Professional Chinese Certification\ncertification: a1-professional-chinese-certification\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 688f1daf0133dbe2a36b140b\n    title: \"Dialogue 1: PLACEHOLDER\"",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a1-professional-chinese\\a1-professional-chinese-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 81,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c3550039de95dd988138491b242d3365",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a2-professional-chinese-certification\\a2-professional-chinese-certification.yml",
    "source_type": "git_repo",
    "title": "a2-professional-chinese-certification",
    "content": "---\nid: 682c3153086dd7cabe7f48bc\ntitle: A2 Professional Chinese Certification\ncertification: a2-professional-chinese-certification\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 682c2753317b88f1ecdad894\n    title: \"Dialogue 1: PLACEHOLDER\"",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 241,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a2-professional-chinese-certification\\a2-professional-chinese-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 80,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94a24ec874afe1a65599fa6eb0d06629",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a2-professional-spanish-certification\\a2-professional-spanish-certification.yml",
    "source_type": "git_repo",
    "title": "a2-professional-spanish-certification",
    "content": "---\nid: 681a6b22e5a782fe3459984a\ntitle: A2 Professional Spanish Certification\ncertification: a2-professional-spanish-certification\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 681a8796e5a782fe3459984b\n    title: \"Dialogue 1: PLACEHOLDER\"",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 241,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\a2-professional-spanish-certification\\a2-professional-spanish-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 82,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "51afe2dbeb8b79bc68760f182592a151",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\b1-english-for-developers-certification\\b1-english-for-developers-certification.yml",
    "source_type": "git_repo",
    "title": "b1-english-for-developers-certification",
    "content": "---\nid: 66607e53317411dd5e8aae21\ntitle: B1 English for Developers Certification\ncertification: b1-english-for-developers\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 66607e5b317411dd5e8aae22\n    title: \"Dialogue 1: I'm Tom\"",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 227,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\b1-english-for-developers-certification\\b1-english-for-developers-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 83,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "38b198cff2ae3653c52cdbfd70491815",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\back-end-development-and-apis-certification\\back-end-development-and-apis-certification.yml",
    "source_type": "git_repo",
    "title": "back-end-development-and-apis-certification",
    "content": "---\nid: 561add10cb82ac38a17523bc\ntitle: Back End Development and APIs Certification\ncertification: back-end-development-and-apis\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: bd7158d8c443edefaeb5bdef\n    title: Timestamp Microservice\n  - id: bd7158d8c443edefaeb5bdff\n    title: Request Header Parser Microservice\n  - id: bd7158d8c443edefaeb5bd0e\n    title: URL Shortener Microservice\n  - id: 5a8b073d06fa14fcfde687aa\n    title: Exercise Tracker\n  - id: bd7158d8c443edefaeb5bd0f\n    title: File Metadata Microservice",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 518,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\back-end-development-and-apis-certification\\back-end-development-and-apis-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4c6e54c46ef6cfc77d0cad5c73db01d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\create-a-media-query.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b0367417b2b2512b08\ntitle: Create a Media Query\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pzrPu4/cqwKrtm'\nforumTopicId: 301139\ndashedName: create-a-media-query\n--description--\nMedia Queries are a new technique introduced in CSS3 that change the presentation of content based on different viewport sizes The viewport is a user's visible area of a web page, and is different depending on the device used to access the site Media Queries consist of a media type, and if that media type matches the type of device the document is displayed on, the styles are applied You can have as many selectors and styles inside your media query as you want Here's an example of a media query that returns the content when the device's width is less than or equal to 100px:\ncss\n@media (max-width: 100px) {\n/* CSS Rules */\n}\nand the following media query returns the content when the device's height is more than or equal to 350px:\ncss\n@media (min-height: 350px) {\n/* CSS Rules */\n}\nRemember, the CSS inside the media query is applied only if the media type matches that of the device being used --instructions--\nAdd a media query, so that the p tag has a font-size of 10px when the device's height is less than or equal to 800px --hints--\nYou should declare a @media query for devices with a height less than or equal to 800px js\nconst media = new __helpers CSSHelp(document) getCSSRules('media');\nassert isTrue(\nmedia some(x => x media mediaText includes('(max-height: 800px)'))\n);\nYour p element should have a font-size of 10px when the device height is less than or equal to 800px js\nconst rules = new __helpers CSSHelp(document) getRuleListsWithinMedia(\n'(max-height: 800px)'\n);\nassert strictEqual(\nrules find(x => x selectorText === 'p') style fontSize,\n'10px'\n);\nYour p element should have an initial font-size of 20px when the device height is more than 800px js\nconst ifPFirst = new __helpers CSSHelp(document) getCSSRules() find(x => x selectorText === 'p' || x media);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\create-a-media-query.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "25f9e04a3bc1dc98b35063957a3e3f2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\create-a-media-query.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have a font-size of 10px when the device height is less than or equal to 800px js const rules = new __helpers CSSHelp(document) getRuleListsWithinMedia( '(max-height: 800px)' ); assert strictEqual( rules find(x => x selectorText === 'p') style fontSize, '10px' ); Your p element should have an initial font-size of 20px when the device height is more than 800px js const ifPFirst = new __helpers CSSHelp(document) getCSSRules() find(x => x selectorText === 'p' || x media); assertstrictEqual(ifPFirst style fontSize, '20px');\n--seed--\n--seed-contents--\n```html\nLorem ipsum dolor sit amet, consectetur adipiscing elit Vivamus quis tempus\nmassa Aenean erat nisl, gravida vel vestibulum cursus, interdum sit amet\nlectus Sed sit amet quam nibh Suspendisse quis tincidunt nulla In hac\nhabitasse platea dictumst Ut sit amet pretium nisl Vivamus vel mi sem Aenean sit amet consectetur sem Suspendisse pretium, purus et gravida\nconsequat, nunc ligula ultricies diam, at aliquet velit libero a dui ```\n--solutions--\n```html\nLorem ipsum dolor sit amet, consectetur adipiscing elit Vivamus quis tempus\nmassa Aenean erat nisl, gravida vel vestibulum cursus, interdum sit amet\nlectus Sed sit amet quam nibh Suspendisse quis tincidunt nulla In hac\nhabitasse platea dictumst Ut sit amet pretium nisl Vivamus vel mi sem Aenean sit amet consectetur sem Suspendisse pretium, purus et gravida\nconsequat, nunc ligula ultricies diam, at aliquet velit libero a dui ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\create-a-media-query.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "89a0e6cb030e5dd41adb973500274605",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\make-typography-responsive.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 587d78b1367417b2b2512b0c\ntitle: Make Typography Responsive\nchallengeType: 0\nvideoUrl: 'https://scrimba com/p/pzrPu4/crzN7T8'\nforumTopicId: 301141\ndashedName: make-typography-responsive\n--description--\nInstead of using em or px to size text, you can use viewport units for responsive typography Viewport units, like percentages, are relative units, but they are based off different items Viewport units are relative to the viewport dimensions (width or height) of a device, and percentages are relative to the size of the parent container element The four different viewport units are:\nvw (viewport width): 10vw would be 10% of the viewport's width vh (viewport height): 3vh would be 3% of the viewport's height vmin (viewport minimum): 70vmin would be 70% of the viewport's smaller dimension (height or width) vmax (viewport maximum): 100vmax would be 100% of the viewport's bigger dimension (height or width) Here is an example that sets a body tag to 30% of the viewport's width css\nbody {\nwidth: 30vw;\n}\n--instructions--\nSet the width of the h2 tag to 80% of the viewport's width and the width of the paragraph as 75% of the viewport's smaller dimension --hints--\nYour h2 tag should have a width of 80vw js\nassert match(\n__helpers removeCssComments(code),\n/h2\\s* {\\s* width:\\s* 80vw;\\s* }/g\n);\nYour p tag should have a width of 75vmin js\nassert match(\n__helpers removeCssComments(code),\n/p\\s* {\\s* width:\\s* 75vmin;\\s* }/g\n);\n--seed--\n--seed-contents--\n```html\nImportantus Ipsum\nLorem ipsum dolor sit amet, consectetur adipiscing elit Vivamus quis tempus\nmassa Aenean erat nisl, gravida vel vestibulum cursus, interdum sit amet\nlectus Sed sit amet quam nibh Suspendisse quis tincidunt nulla In hac\nhabitasse platea dictumst Ut sit amet pretium nisl Vivamus vel mi sem Aenean sit amet consectetur sem",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\make-typography-responsive.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "183faa60573105d9b4143847a631837f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\make-typography-responsive.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Your p tag should have a width of 75vmin js assert match( __helpers removeCssComments(code), /p\\s* {\\s* width:\\s* 75vmin;\\s* }/g ); --seed-- --seed-contents-- ```html Importantus Ipsum Lorem ipsum dolor sit amet, consectetur adipiscing elit Vivamus quis tempus massa Aenean erat nisl, gravida vel vestibulum cursus, interdum sit amet lectus Sed sit amet quam nibh Suspendisse quis tincidunt nulla In hac habitasse platea dictumst Ut sit amet pretium nisl Vivamus vel mi sem Aenean sit amet consectetur semSuspendisse pretium, purus et gravida\nconsequat, nunc ligula ultricies diam, at aliquet velit libero a dui ```\n--solutions--\n```html\nImportantus Ipsum\nLorem ipsum dolor sit amet, consectetur adipiscing elit Vivamus quis tempus\nmassa Aenean erat nisl, gravida vel vestibulum cursus, interdum sit amet\nlectus Sed sit amet quam nibh Suspendisse quis tincidunt nulla In hac\nhabitasse platea dictumst Ut sit amet pretium nisl Vivamus vel mi sem Aenean sit amet consectetur sem Suspendisse pretium, purus et gravida\nconsequat, nunc ligula ultricies diam, at aliquet velit libero a dui ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\01-responsive-web-design\\responsive-web-design-principles\\make-typography-responsive.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5f2874b5f239bbcbbcae0fa762d767c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\data-visualization-certification\\data-visualization-certification.yml",
    "source_type": "git_repo",
    "title": "data-visualization-certification",
    "content": "id: 5a553ca864b52e1d8bceea14\ntitle: Data Visualization Certification\ncertification: data-visualization\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: bd7168d8c242eddfaeb5bd13\n    title: Visualize Data with a Bar Chart\n  - id: bd7178d8c242eddfaeb5bd13\n    title: Visualize Data with a Scatterplot Graph\n  - id: bd7188d8c242eddfaeb5bd13\n    title: Visualize Data with a Heat Map\n  - id: 587d7fa6367417b2b2512bbf\n    title: Visualize Data with a Choropleth Map\n  - id: 587d7fa6367417b2b2512bc0\n    title: Visualize Data with a Treemap Diagram",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 541,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\data-visualization-certification\\data-visualization-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "639cbda99c1007540ce8025e8d307557",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\college-algebra-with-python-certification\\college-algebra-with-python-certification.yml",
    "source_type": "git_repo",
    "title": "college-algebra-with-python-certification",
    "content": "---\nid: 61531b20cc9dfa2741a5b800\ntitle: College Algebra with Python Certification\ncertification: college-algebra-with-python\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 63d83ff239c73468b059cd3f\n    title: Build a Multi-Function Calculator\n  - id: 63d83ffd39c73468b059cd40\n    title: Build a Graphing Calculator\n  - id: 63d8401039c73468b059cd41\n    title: Build Three Math Games\n  - id: 63d8401e39c73468b059cd42\n    title: Build a Financial Calculator\n  - id: 63d8402e39c73468b059cd43\n    title: Build a Data Graph Explorer",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\college-algebra-with-python-certification\\college-algebra-with-python-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8f39acac7d0a023fd4e9b6b864facf4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\data-analysis-with-python-certification\\data-analysis-with-python-certification.yml",
    "source_type": "git_repo",
    "title": "data-analysis-with-python-certification",
    "content": "id: 5e46fc95ac417301a38fb934\ntitle: Data Analysis with Python Certification\ncertification: data-analysis-with-python\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 5e46f7e5ac417301a38fb928\n    title: Mean-Variance-Standard Deviation Calculator\n  - id: 5e46f7e5ac417301a38fb929\n    title: Demographic Data Analyzer\n  - id: 5e46f7f8ac417301a38fb92a\n    title: Medical Data Visualizer\n  - id: 5e46f802ac417301a38fb92b\n    title: Page View Time Series Visualizer\n  - id: 5e4f5c4b570f7e3a4949899f\n    title: Sea Level Predictor",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\data-analysis-with-python-certification\\data-analysis-with-python-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 193,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "931ddbf6b3abd49c525e7ef0ee51bca3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\front-end-development-libraries-certification\\front-end-development-libraries-certification.yml",
    "source_type": "git_repo",
    "title": "front-end-development-libraries-certification",
    "content": "---\nid: 561acd10cb82ac38a17513bc\ntitle: Front End Development Libraries Certification\ncertification: front-end-development-libraries\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: bd7158d8c442eddfaeb5bd13\n    title: Build a Random Quote Machine\n  - id: bd7157d8c242eddfaeb5bd13\n    title: Build a Markdown Previewer\n  - id: 587d7dbc367417b2b2512bae\n    title: Build a Drum Machine\n  - id: bd7158d8c442eddfaeb5bd17\n    title: Build a JavaScript Calculator\n  - id: bd7158d8c442eddfaeb5bd0f\n    title: Build a 25 + 5 Clock",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\front-end-development-libraries-certification\\front-end-development-libraries-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 183,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3d1257ac58f005da7de34a29e6b5f008",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\foundational-c-sharp-with-microsoft-certification\\foundational-c-sharp-with-microsoft.yml",
    "source_type": "git_repo",
    "title": "foundational-c-sharp-with-microsoft",
    "content": "---\nid: 647f7da207d29547b3bee1ba\ntitle: Foundational C# with Microsoft Certification\ncertification: foundational-c-sharp-with-microsoft\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 647e22d18acb466c97ccbef8\n    title: Foundational C# with Microsoft Certification Exam",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\foundational-c-sharp-with-microsoft-certification\\foundational-c-sharp-with-microsoft.yml",
      "source_type": "git_repo"
    },
    "token_count": 81,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4de8fe51c314484f013a99a4f5f2574c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\full-stack-developer\\full-stack-developer.yml",
    "source_type": "git_repo",
    "title": "full-stack-developer",
    "content": "---\nid: 64514fda6c245de4d11eb7bb\ntitle: Certified Full Stack Developer\ncertification: full-stack-developer\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 645147516c245de4d11eb7ba\n    title: Certified Full Stack Developer Exam",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 227,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\full-stack-developer\\full-stack-developer.yml",
      "source_type": "git_repo"
    },
    "token_count": 73,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "46e86327febe6b6402fc7e1bc5960ad9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\information-security-certification\\information-security-certification.yml",
    "source_type": "git_repo",
    "title": "information-security-certification",
    "content": "id: 5e6021435ac9d0ecd8b94b00\ntitle: Information Security Certification\ncertification: information-security\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 587d824a367417b2b2512c44\n    title: Stock Price Checker\n  - id: 587d824a367417b2b2512c45\n    title: Anonymous Message Board\n  - id: 5e46f979ac417301a38fb932\n    title: Port Scanner\n  - id: 5e46f983ac417301a38fb933\n    title: SHA-1 Password Cracker\n  - id: 5e601c775ac9d0ecd8b94aff\n    title: Secure Real Time Multiplayer Game",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\information-security-certification\\information-security-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 177,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2cb3206d1d876fdd4088bcbb0431bce7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\javascript-algorithms-and-data-structures-certification\\javascript-algorithms-and-data-structures-certification.yml",
    "source_type": "git_repo",
    "title": "javascript-algorithms-and-data-structures-certification",
    "content": "id: 561abd10cb81ac38a17513bc\ntitle: Legacy JavaScript Algorithms and Data Structures Certification\ncertification: javascript-algorithms-and-data-structures\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: aaa48de84e1ecc7c742e1124\n    title: Palindrome Checker\n  - id: a7f4d8f2483413a6ce226cac\n    title: Roman Numeral Converter\n  - id: 56533eb9ac21ba0edf2244e2\n    title: Caesars Cipher\n  - id: aff0395860f5d3034dc0bfc9\n    title: Telephone Number Validator\n  - id: aa2e6f85cab2ab736c9a9b24\n    title: Cash Register",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\javascript-algorithms-and-data-structures-certification\\javascript-algorithms-and-data-structures-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 182,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "992de91b3acf3bdc68ae1d2a8c4bd713",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\javascript-algorithms-and-data-structures-v8\\javascript-algorithms-and-data-structures-certification-v8.yml",
    "source_type": "git_repo",
    "title": "javascript-algorithms-and-data-structures-certification-v8",
    "content": "id: 658180220947283cdc0689ce\ntitle: JavaScript Algorithms and Data Structures Certification\ncertification: javascript-algorithms-and-data-structures-v8\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 657bdc55a322aae1eac3838f\n    title: Build a Palindrome Checker\n  - id: 657bdc8ba322aae1eac38390\n    title: Build a Roman Numeral Converter\n  - id: 657bdcb9a322aae1eac38391\n    title: Build a Telephone Number Validator\n  - id: 657bdcc3a322aae1eac38392\n    title: Build a Cash Register\n  - id: 6555c1d3e11a1574434cf8b5\n    title: Build an RPG Creature Search App",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 561,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\javascript-algorithms-and-data-structures-v8\\javascript-algorithms-and-data-structures-certification-v8.yml",
      "source_type": "git_repo"
    },
    "token_count": 192,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b0fe6650575525fe46aeba72267bc480",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-back-end-certification\\legacy-back-end-certification.yml",
    "source_type": "git_repo",
    "title": "legacy-back-end-certification",
    "content": "id: 660add10cb82ac38a17513be\ntitle: Legacy Back End Certification\ncertification: legacy-back-end\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: bd7158d8c443edefaeb5bdef\n    title: Timestamp Microservice\n  - id: bd7158d8c443edefaeb5bdff\n    title: Request Header Parser Microservice\n  - id: bd7158d8c443edefaeb5bd0e\n    title: URL Shortener Microservice\n  - id: bd7158d8c443edefaeb5bdee\n    title: Image Search Abstraction Layer\n  - id: bd7158d8c443edefaeb5bd0f\n    title: File Metadata Microservice\n  - id: bd7158d8c443eddfaeb5bdef\n    title: Build a Voting App\n  - id: bd7158d8c443eddfaeb5bdff\n    title: Build a Nightlife Coordination App\n  - id: bd7158d8c443eddfaeb5bd0e\n    title: Chart the Stock Market\n  - id: bd7158d8c443eddfaeb5bd0f\n    title: Manage a Book Trading Club\n  - id: bd7158d8c443eddfaeb5bdee\n    title: Build a Pinterest Clone",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 848,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-back-end-certification\\legacy-back-end-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "75ffe1a98e94fbe1141a737f89e9777f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-data-visualization-certification\\legacy-data-visualization-certification.yml",
    "source_type": "git_repo",
    "title": "legacy-data-visualization-certification",
    "content": "id: 561add10cb82ac39a17513bc\ntitle: Legacy Data Visualization Certification\ncertification: legacy-data-visualization\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: bd7157d8c242eddfaeb5bd13\n    title: Build a Markdown Previewer\n  - id: bd7156d8c242eddfaeb5bd13\n    title: Build a Camper Leaderboard\n  - id: bd7155d8c242eddfaeb5bd13\n    title: Build a Recipe Box\n  - id: bd7154d8c242eddfaeb5bd13\n    title: Build the Game of Life\n  - id: bd7153d8c242eddfaeb5bd13\n    title: Build a Roguelike Dungeon Crawler Game\n  - id: bd7168d8c242eddfaeb5bd13\n    title: Visualize Data with a Bar Chart\n  - id: bd7178d8c242eddfaeb5bd13\n    title: Visualize Data with a Scatterplot Graph\n  - id: bd7188d8c242eddfaeb5bd13\n    title: Visualize Data with a Heat Map\n  - id: bd7198d8c242eddfaeb5bd13\n    title: Show National Contiguity with a Force Directed Graph\n  - id: bd7108d8c242eddfaeb5bd13\n    title: Map Data Across the Globe",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 914,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-data-visualization-certification\\legacy-data-visualization-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fb7823558c932d7a1850d6370bced802",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-full-stack-certification\\legacy-full-stack-certification.yml",
    "source_type": "git_repo",
    "title": "legacy-full-stack-certification",
    "content": "id: 561add10cb82ac38a17213bd\ntitle: Legacy Full Stack Certification\ncertification: legacy-full-stack\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 561add10cb82ac38a17513bc\n    title: Responsive Web Design Certification\n  - id: 561abd10cb81ac38a17513bc\n    title: JavaScript Algorithms and Data Structures Certification\n  - id: 561acd10cb82ac38a17513bc\n    title: Front End Libraries Certification\n  - id: 5a553ca864b52e1d8bceea14\n    title: Data Visualization Certification\n  - id: 561add10cb82ac38a17523bc\n    title: API's and Microservices Certification\n  - id: 561add10cb82ac38a17213bc\n    title: Legacy Information Security and Quality Assurance Certification",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-full-stack-certification\\legacy-full-stack-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "db13b2b90d8ba0e8ff3465d6b96bfd84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\quality-assurance-certification\\quality-assurance-certification.yml",
    "source_type": "git_repo",
    "title": "quality-assurance-certification",
    "content": "id: 5e611829481575a52dc59c0e\ntitle: Quality Assurance Certification\ncertification: quality-assurance\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 587d8249367417b2b2512c41\n    title: Metric-Imperial Converter\n  - id: 587d8249367417b2b2512c42\n    title: Issue Tracker\n  - id: 587d824a367417b2b2512c43\n    title: Personal Library\n  - id: 5e601bf95ac9d0ecd8b94afd\n    title: Sudoku Solver\n  - id: 5e601c0d5ac9d0ecd8b94afe\n    title: American British Translator",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 461,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\quality-assurance-certification\\quality-assurance-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fe66dbe9f4711cd60f4c2530dfaa521a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-front-end-certification\\legacy-front-end-certification.yml",
    "source_type": "git_repo",
    "title": "legacy-front-end-certification",
    "content": "id: 561add10cb82ac38a17513be\ntitle: Legacy Front End Certification\ncertification: legacy-front-end\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: bd7158d8c242eddfaeb5bd13\n    title: Build a Personal Portfolio Webpage\n  - id: bd7158d8c442eddfaeb5bd13\n    title: Build a Random Quote Machine\n  - id: bd7158d8c442eddfaeb5bd0f\n    title: Build a 25 + 5 Clock\n  - id: bd7158d8c442eddfaeb5bd17\n    title: Build a JavaScript Calculator\n  - id: bd7158d8c442eddfaeb5bd10\n    title: Show the Local Weather\n  - id: bd7158d8c442eddfaeb5bd1f\n    title: Use the Twitch JSON API\n  - id: bd7158d8c442eddfaeb5bd18\n    title: Stylize Stories on Camper News\n  - id: bd7158d8c442eddfaeb5bd19\n    title: Build a Wikipedia Viewer\n  - id: bd7158d8c442eedfaeb5bd1c\n    title: Build a Tic Tac Toe Game\n  - id: bd7158d8c442eddfaeb5bd1c\n    title: Build a Memory Light Game",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 848,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\legacy-front-end-certification\\legacy-front-end-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2aa7077a7b13d92f495074348093ad80",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\machine-learning-with-python-certification\\machine-learning-with-python-certification.yml",
    "source_type": "git_repo",
    "title": "machine-learning-with-python-certification",
    "content": "id: 5e46fc95ac417301a38fb935\ntitle: Machine Learning with Python Certification\ncertification: machine-learning-with-python\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 5e46f8d6ac417301a38fb92d\n    title: Rock Paper Scissors\n  - id: 5e46f8dcac417301a38fb92e\n    title: Cat and Dog Image Classifier\n  - id: 5e46f8e3ac417301a38fb92f\n    title: Book Recommendation Engine using KNN\n  - id: 5e46f8edac417301a38fb930\n    title: Linear Regression Health Costs Calculator\n  - id: 5e46f8edac417301a38fb931\n    title: Neural Network SMS Text Classifier",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\machine-learning-with-python-certification\\machine-learning-with-python-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "25706780b3b1c74a6ca0b2f09932f743",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\analytics-settings.ts",
    "source_type": "git_repo",
    "title": "analytics-settings",
    "content": "export const prodAnalyticsId = 'GTM-57R6KJM';\nexport const devAnalyticsId = 'GTM-WSS47LM';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 91,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\analytics-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 30,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "36ce00cd4f58c57fbc51a8d32ed2c0a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\responsive-web-design-certification\\responsive-web-design-certification.yml",
    "source_type": "git_repo",
    "title": "responsive-web-design-certification",
    "content": "id: 561add10cb82ac38a17513bc\ntitle: Responsive Web Design Certification\ncertification: responsive-web-design\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: bd7158d8c442eddfaeb5bd18\n    title: Build a Tribute Page\n  - id: 587d78af367417b2b2512b03\n    title: Build a Survey Form\n  - id: 587d78af367417b2b2512b04\n    title: Build a Product Landing Page\n  - id: 587d78b0367417b2b2512b05\n    title: Build a Technical Documentation Page\n  - id: bd7158d8c242eddfaeb5bd13\n    title: Build a Personal Portfolio Webpage",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 511,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\responsive-web-design-certification\\responsive-web-design-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 179,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b4162a2e2ba4825a4768eb00bb9fd558",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\scientific-computing-with-python-certification\\scientific-computing-with-python-certification.yml",
    "source_type": "git_repo",
    "title": "scientific-computing-with-python-certification",
    "content": "id: 5e44431b903586ffb414c951\ntitle: Scientific Computing with Python Certification\ncertification: scientific-computing-with-python\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 5e44412c903586ffb414c94c\n    title: Arithmetic Formatter\n  - id: 5e444136903586ffb414c94d\n    title: Time Calculator\n  - id: 5e44413e903586ffb414c94e\n    title: Budget App\n  - id: 5e444147903586ffb414c94f\n    title: Polygon Area Calculator\n  - id: 5e44414f903586ffb414c950\n    title: Probability Calculator",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 486,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\scientific-computing-with-python-certification\\scientific-computing-with-python-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 163,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e40d96c160adf55e2da6bc8724b184ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\relational-database-certification\\relational-database-certification.yml",
    "source_type": "git_repo",
    "title": "relational-database-certification",
    "content": "id: 606243f50267e718b1e755f4\ntitle: Relational Database Certification\ncertification: relational-database\nchallengeType: 7\nisPrivate: true\ntests:\n  - id: 5f1a4ef5d5d6b5ab580fc6ae\n    title: Celestial Bodies Database\n  - id: 5f9771307d4d22b9d2b75a94\n    title: World Cup Database\n  - id: 5f87ac112ae598023a42df1a\n    title: Salon Appointment Scheduler\n  - id: 602d9ff222201c65d2a019f2\n    title: Periodic Table Database\n  - id: 602da04c22201c65d2a019f4\n    title: Number Guessing Game",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 483,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\00-certifications\\relational-database-certification\\relational-database-certification.yml",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bd1e87daaf276c998ca9fe6c6f3b284f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\misc.ts",
    "source_type": "git_repo",
    "title": "misc",
    "content": "export const MAX_MOBILE_WIDTH = 767;\nexport const EX_SMALL_VIEWPORT_HEIGHT = 300;\nexport const TOOL_PANEL_HEIGHT = 37;\nexport const SEARCH_EXPOSED_WIDTH = 980;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 160,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\misc.ts",
      "source_type": "git_repo"
    },
    "token_count": 40,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8de2b64a4729d038e3d3f77a42e7a26e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\config-for-tests.ts",
    "source_type": "git_repo",
    "title": "config-for-tests",
    "content": "import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    debug: true,\n    defaultNS: 'translations',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false\n    },\n    lng: 'en',\n    ns: ['intro', 'translations'],\n    resources: { en: { intro: {}, translations: {} } },\n    returnNull: false\n  })\n  .catch((error: Error) => {\n    throw Error(error.message);\n  });\n\nexport default i18n;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 465,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\config-for-tests.ts",
      "source_type": "git_repo"
    },
    "token_count": 135,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "204baa8292f4bcc0f6d19b4e07ed72fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\growthbook-features-default.json",
    "source_type": "git_repo",
    "title": "growthbook-features-default",
    "content": "{\n  \"aa-test\": {\n    \"defaultValue\": false\n  },\n  \"aa-test-in-component\": {\n    \"defaultValue\": false\n  },\n  \"landing-top-skill-focused\": {\n    \"defaultValue\": false,\n    \"rules\": [\n      {\n        \"coverage\": 1,\n        \"hashAttribute\": \"id\",\n        \"seed\": \"landing-top-skill-focused\",\n        \"hashVersion\": 2,\n        \"variations\": [false, true],\n        \"weights\": [0 5, 0 5],\n        \"key\": \"landing-top-skill-focused\",\n        \"meta\": [\n          {\n            \"key\": \"0\",\n            \"name\": \"Control\"\n          },\n          {\n            \"key\": \"1\",\n            \"name\": \"Variation 1\"\n          }\n        ],\n        \"phase\": \"0\",\n        \"name\": \"tests the conversion rate of the new design comparing to the old one\"\n      }\n    ]\n  },\n  \"show-modal-randomly\": {\n    \"defaultValue\": false,\n    \"rules\": [\n      {\n        \"coverage\": 1,\n        \"hashAttribute\": \"id\",\n        \"seed\": \"show-modal-randomly\",\n        \"hashVersion\": 2,\n        \"variations\": [\n          false,\n          true\n        ],\n        \"weights\": [\n          0 5,\n          0 5\n        ],\n        \"key\": \"show-modal-randomly\",\n        \"meta\": [\n          {\n            \"key\": \"0\",\n            \"name\": \"Control\"\n          },\n          {\n            \"key\": \"1\",\n            \"name\": \"Variation 1\"\n          }\n        ],\n        \"phase\": \"0\",\n        \"name\": \"stg show modal randomly\"\n      }\n    ]\n  },\n  \"show-benefits\": {\n    \"defaultValue\": false,\n    \"rules\": [\n      {\n        \"coverage\": 1,\n        \"hashAttribute\": \"id\",\n        \"seed\": \"show-benefits\",\n        \"hashVersion\": 2,\n        \"variations\": [\n          false,\n          true\n        ],\n        \"weights\": [\n          0 5,\n          0",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 1993,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\growthbook-features-default.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a7a2bd53c010dc6694be594449eb68c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\growthbook-features-default.json",
    "source_type": "git_repo",
    "title": "growthbook-features-default",
    "content": "\"rules\": [ { \"coverage\": 1, \"hashAttribute\": \"id\", \"seed\": \"show-modal-randomly\", \"hashVersion\": 2, \"variations\": [ false, true ], \"weights\": [ 0 5, 0 5 ], \"key\": \"show-modal-randomly\", \"meta\": [ { \"key\": \"0\", \"name\": \"Control\" }, { \"key\": \"1\", \"name\": \"Variation 1\" } ], \"phase\": \"0\", \"name\": \"stg show modal randomly\" } ] }, \"show-benefits\": { \"defaultValue\": false, \"rules\": [ { \"coverage\": 1, \"hashAttribute\": \"id\", \"seed\": \"show-benefits\", \"hashVersion\": 2, \"variations\": [ false, true ], \"weights\": [ 0 5, 05\n        ],\n        \"key\": \"show-benefits\",\n        \"meta\": [\n          {\n            \"key\": \"0\",\n            \"name\": \"Control\"\n          },\n          {\n            \"key\": \"1\",\n            \"name\": \"Variation 1\"\n          }\n        ],\n        \"phase\": \"0\",\n        \"name\": \"prod-show-benefits\"\n      }\n    ]\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 1993,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\growthbook-features-default.json",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "308e7ed59c2a4aa50632c7d4ab205982",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\config.js",
    "source_type": "git_repo",
    "title": "config",
    "content": "/* global preval */\n\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nconst envData = require('../config/env.json');\nconst { i18nextCodes } = require('../../shared/config/i18n');\n\nconst { clientLocale } = envData;\n\nconst i18nextCode = i18nextCodes[clientLocale]; i18n use(initReactI18next) init({\n  fallbackLng: 'en',\n  lng: i18nextCode,\n  // we only load one language since each language will have it's own server\n  // They need to be evaluated ahead of time, to prevent Webpack from bundling\n  // the entire locales directory To avoid double imports when the locale is\n  // english, we simply export nothing from the preval\n  resources: {\n    [i18nextCode]: {\n      translations: preval`\n      const envData = require(' /config/env json');\n      const { clientLocale } = envData;\n      if (clientLocale == 'english') {\n        module exports = require(' /locales/' + clientLocale + '/translations json');\n      }\n    `,\n      trending: preval`\n      const envData = require(' /config/env json');\n      const { clientLocale } = envData;\n      if (clientLocale == 'english') {\n        module exports = require(' /locales/' + clientLocale + '/trending json');\n      }\n    `,\n      intro: preval`\n      const envData = require(' /config/env json');\n      const { clientLocale } = envData;\n      if (clientLocale == 'english') {\n        module exports = require(' /locales/' + clientLocale + '/intro json');\n      }\n    `,\n      metaTags: preval`\n      const envData = require(' /config/env json');\n      const { clientLocale } = envData;\n      if (clientLocale == 'english') {\n        module exports = require(' /locales/' + clientLocale + '/meta-tags json');\n      }\n    `,\n      links: preval`\n      const envData = require(' /config/env json');\n      const { clientLocale } = envData;\n      if (clientLocale == 'english') {\n        module exports = require(' /locales/' + clientLocale + '/links json');\n      }\n    `,\n      'search-bar': preval`\n      const envData = require(' /config/env",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3120,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\config.js",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2de8add145515c9a256d6a9533829aa1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\config.js",
    "source_type": "git_repo",
    "title": "config",
    "content": "+ clientLocale + '/intro json'); } `, metaTags: preval` const envData = require(' /config/env json'); const { clientLocale } = envData; if (clientLocale == 'english') { module exports = require(' /locales/' + clientLocale + '/meta-tags json'); } `, links: preval` const envData = require(' /config/env json'); const { clientLocale } = envData; if (clientLocale == 'english') { module exports = require(' /locales/' + clientLocale + '/links json'); } `, 'search-bar': preval` const envData = require(' /config/envjson');\n      const { clientLocale } = envData;\n      if (clientLocale == 'english') {\n        module exports = require(' /locales/' + clientLocale + '/search-bar json');\n      }\n    `\n    },\n    en: {\n      translations: preval`module exports = require(' /locales/english/translations json')`,\n      trending: preval`module exports = require(' /locales/english/trending json')`,\n      intro: preval`module exports = require(' /locales/english/intro json')`,\n      metaTags: preval`module exports = require(' /locales/english/meta-tags json')`,\n      links: preval`module exports = require(' /locales/english/links json')`,\n      'search-bar': preval`module exports = require(' /locales/english/search-bar json')`\n    }\n  },\n  ns: ['translations', 'trending', 'intro', 'metaTags', 'links', 'search-bar'],\n  defaultNS: 'translations',\n  returnObjects: true,\n  // Uncomment the next line for debug logging\n  // debug: true,\n  interpolation: {\n    escapeValue: false\n  },\n  react: {\n    useSuspense: true\n  },\n  returnNull: false\n});\n\ni18n.languages = clientLocale;\n\nexport default i18n;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3120,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\config.js",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4e040bf76bf0d75462ea38c61a00717e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales.test.ts",
    "source_type": "git_repo",
    "title": "locales.test",
    "content": "import fs from 'fs';\nimport { setup } from 'jest-json-schema-extended';\nimport { availableLangs, LangNames, LangCodes } from '../../shared/config/i18n';\nimport {\n  catalogSuperBlocks,\n  SuperBlocks\n} from '../../shared/config/curriculum';\nimport intro from './locales/english/intro.json';\n\nsetup();\n\ninterface Intro {\n  [key: string]: {\n    title: string;\n    summary?: string[];\n    intro: string[];\n    blocks: {\n      [block: string]: {\n        title: string;\n        intro: string[];\n      };\n    };\n  };\n}\n\nconst filesThatShouldExist = [\n  {\n    name: 'translations.json'\n  },\n  {\n    name: 'motivation.json'\n  },\n  {\n    name: 'intro.json'\n  },\n  {\n    name: 'meta-tags.json'\n  },\n  {\n    name: 'links.json'\n  }\n];\n\nconst path = `${__dirname}/locales`;\n\ndescribe('Locale tests:', () => {\n  availableLangs.client.forEach(lang => {\n    describe(`-- ${lang} --`, () => {\n      filesThatShouldExist.forEach(file => {\n        // check that each json file exists\n        test(`${file.name} file exists`, () => {\n          const exists = fs.existsSync(`${path}/${lang}/${file.name}`);\n          expect(exists).toBeTruthy();\n        });\n      });\n\ntest(`has an entry in the langDisplayNames enum`, () => {\n        expect(\n          Object.keys(LangNames)\n            .map(langCode => langCode.toLowerCase())\n            .includes(lang)\n        ).toBe(true);\n      });\n\ntest(`has an entry in the langCodes enum`, () => {\n        expect(\n          Object.keys(LangCodes)\n            .map(langCode => langCode.toLowerCase())\n            .includes(lang)\n        ).toBe(true);\n      });\n    });\n  });\n});\n\ndescribe('Intro file structure tests:', () => {\n  const typedIntro = intro as unknown as Intro;\n  const superblocks = Object.values(SuperBlocks);\n  for (const superBlock of superblocks) {\n    expect(typeof typedIntro[superBlock].title).toBe('string');\n\n// catalog superblocks should have a summary\n    if (catalogSuperBlocks.includes(superBlock)) {\n      expect(typedIntro[superBlock].intro).toBeInstanceOf(Array);\n    }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2436,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "432305fd78e5bbd3f70865db76f93af8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales.test.ts",
    "source_type": "git_repo",
    "title": "locales.test",
    "content": "entry in the langDisplayNames enum`, () => { expect( Object.keys(LangNames) .map(langCode => langCode.toLowerCase()) .includes(lang) ).toBe(true); }); test(`has an entry in the langCodes enum`, () => { expect( Object.keys(LangCodes) .map(langCode => langCode.toLowerCase()) .includes(lang) ).toBe(true); }); }); }); }); describe('Intro file structure tests:', () => { const typedIntro = intro as unknown as Intro; const superblocks = Object.values(SuperBlocks); for (const superBlock of superblocks) { expect(typeof typedIntro[superBlock].title).toBe('string'); // catalog superblocks should have a summary if (catalogSuperBlocks.includes(superBlock)) { expect(typedIntro[superBlock].intro).toBeInstanceOf(Array); }\n\nexpect(typedIntro[superBlock].intro).toBeInstanceOf(Array);\n    expect(typedIntro[superBlock].blocks).toBeInstanceOf(Object);\n    const blocks = Object.keys(typedIntro[superBlock].blocks);\n    blocks.forEach(block => {\n      expect(typeof typedIntro[superBlock].blocks[block].title).toBe('string');\n      expect(typedIntro[superBlock].blocks[block].intro).toBeInstanceOf(Array);\n    });\n  }\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2436,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4c12944ba6fef0cc44f44fce98a8b216",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\declarations.d.ts",
    "source_type": "git_repo",
    "title": "declarations.d",
    "content": "declare module '@freecodecamp/loop-protect';\ndeclare module '@freecodecamp/strip-comments';\ndeclare module '@types/react-redux';\ndeclare module '@types/validator';\ndeclare module '@types/lodash-es';\ndeclare module '*.svg' {\n  const content: string;\n  export default content;\n}\ndeclare module '*.woff' {\n  const url: string;\n  export default url;\n}\n\ndeclare module '*.png' {\n  const content: string;\n  export default content;\n}\n\ndeclare module 'sha-1' {\n  export default function sha1(str: string): string;\n}\n\n// This has to be declared as var, not let or const, to be added to globalThis\n// eslint-disable-next-line no-var\ndeclare var MathJax: {\n  Hub: {\n    Config: (attributes: {\n      tex2jax: {\n        inlineMath: Array<string[]>;\n        processEscapes: boolean;\n        processClass: string;\n      };\n    }) => void;\n    Queue: (attributes: unknown[]) => void;\n  };\n};\n\ndeclare module 'monaco-editor/esm/vs/base/common/platform.js';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 940,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\declarations.d.ts",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6bef10719af0b460143cadc3f816a5bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\html.tsx",
    "source_type": "git_repo",
    "title": "html",
    "content": "import React from 'react';\nimport { clientLocale } from '../config/env.json';\nimport { rtlLangs } from '../../shared/config/i18n';\n\ninterface HTMLProps {\n  body: string;\n  bodyAttributes?: Record<string, unknown>;\n  headComponents?: React.ReactNode[];\n  htmlAttributes?: Record<string, unknown>;\n  postBodyComponents?: React.ReactNode[];\n  preBodyComponents?: React.ReactNode[];\n}\n\nexport default function HTML({\n  body,\n  bodyAttributes,\n  headComponents,\n  htmlAttributes,\n  postBodyComponents,\n  preBodyComponents\n}: HTMLProps): JSX.Element {\n  const rtlDirectionAttribute = { dir: 'rtl' };\n  const isRtlLanguage: boolean = rtlLangs.includes(clientLocale);\n\nreturn (\n    <html\n      id='__fcc-html'\n      {...(isRtlLanguage && rtlDirectionAttribute)}\n      {...htmlAttributes}\n      lang='en'\n    >\n      <head>\n        <meta charSet='utf-8' />\n        <meta content='ie=edge' httpEquiv='x-ua-compatible' />\n        <meta\n          content='width=device-width, initial-scale=1.0, shrink-to-fit=no'\n          name='viewport'\n        />\n        {headComponents}\n      </head>\n      <body {...bodyAttributes}>\n        {preBodyComponents}\n        <div\n          className='tex2jax_ignore'\n          dangerouslySetInnerHTML={{ __html: body }}\n          id='___gatsby'\n          key={'body'}\n        />\n        {postBodyComponents}\n      </body>\n    </html>\n  );\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1364,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\html.tsx",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bae5295fbfaa47d302f1ab606c1b4983",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\i18next.d.ts",
    "source_type": "git_repo",
    "title": "i18next.d",
    "content": "import 'i18next';\n\n// This should not be necessary when upgrading to v23.0.0\ndeclare module 'i18next' {\n  interface CustomTypeOptions {\n    returnNull: false;\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 165,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\i18next.d.ts",
      "source_type": "git_repo"
    },
    "token_count": 45,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "feb1c9bc7449b823afa0827aed6c54f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\reset.d.ts",
    "source_type": "git_repo",
    "title": "reset.d",
    "content": "import '@total-typescript/ts-reset';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 37,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\reset.d.ts",
      "source_type": "git_repo"
    },
    "token_count": 8,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f15e5d4b40dd61445454462c2e2b537e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
    "source_type": "git_repo",
    "title": "schema-validation",
    "content": "import path from 'path';\nimport { readFile } from 'fs/promises';\nimport { availableLangs } from '../../shared/config/i18n';\nimport introSchema from './locales/english/intro.json';\nimport linksSchema from './locales/english/links.json';\nimport metaTagsSchema from './locales/english/meta-tags.json';\nimport motivationSchema from './locales/english/motivation.json';\nimport translationsSchema from './locales/english/translations.json';\n\ntype MotivationalQuotes = { quote: string; author: string }[];\n\n/**\n * Flattens a nested object structure into a single\n * object with property chains as keys.\n * @param {Object} obj Object to flatten\n * @param {String} namespace Used for property chaining\n */\nconst flattenAnObject = (obj: Record<string, unknown>, namespace = '') => {\n  const flattened: Record<string, unknown> = {};\n  Object.keys(obj).forEach(key => {\n    const value = obj[key];\n    const field = namespace ? `${namespace}.${key}` : key;\n    if (Array.isArray(value)) {\n      flattened[field] = value;\n    } else if (typeof value === 'object') {\n      Object.assign(\n        flattened,\n        flattenAnObject(value as Record<string, unknown>, field)\n      );\n    } else {\n      flattened[field] = value;\n    }\n  });\n  return flattened;\n};\n\n/**\n * Checks if a translation object is missing keys\n * that are present in the schema.\n * @param {String[]} file Array of translation object's keys\n * @param {String[]} schema Array of matching schema's keys\n * @param {String} path string path to file\n */\nconst findMissingKeys = (file: string[], schema: string[], path: string) => {\n  const missingKeys = [];\n  for (const key of schema) {\n    if (!file.includes(key)) {\n      missingKeys.push(key);\n    }\n  }\n  if (missingKeys.length) {\n    console.warn(\n      `${path} is missing these required keys: ${missingKeys.join(', ')}`\n    );\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7726,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "f6a193b7f4d8351974f665eb42732a76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
    "source_type": "git_repo",
    "title": "schema-validation",
    "content": "* that are present in the schema. * @param {String[]} file Array of translation object's keys * @param {String[]} schema Array of matching schema's keys * @param {String} path string path to file */ const findMissingKeys = (file: string[], schema: string[], path: string) => { const missingKeys = []; for (const key of schema) { if (!file.includes(key)) { missingKeys.push(key); } } if (missingKeys.length) { console.warn( `${path} is missing these required keys: ${missingKeys.join(', ')}` ); } };\n\n/**\n * Checks if a translation object has extra\n * keys which are NOT present in the schema.\n * @param {String[]} file Array of translation object's keys\n * @param {String[]} schema Array of matching schema's keys\n * @param {String} path string path to file\n */\nconst findExtraneousKeys = (file: string[], schema: string[], path: string) => {\n  const extraKeys = [];\n  for (const key of file) {\n    if (!schema.includes(key)) {\n      extraKeys.push(key);\n    }\n  }\n  if (extraKeys.length) {\n    console.warn(\n      `${path} has these keys that are not in the schema: ${extraKeys.join(\n        ', '\n      )}`\n    );\n  }\n};\n\n/**\n * Validates that all values in the object are non-empty. Includes\n * validation of nested objects.\n * @param {Object} obj The object to check the values of\n * @param {String} namespace String for tracking nested properties\n */\nconst noEmptyObjectValues = (\n  obj: Record<string, unknown>,\n  namespace = ''\n): string[] => {\n  const emptyKeys = [];\n  for (const key of Object.keys(obj)) {\n    const value = obj[key];\n    const field = namespace ? `${namespace}.${key}` : key;\n    if (Array.isArray(value)) {\n      if (!value.length) {\n        emptyKeys.push(field);\n      }\n    } else if (typeof value === 'object') {\n      emptyKeys.push(\n        noEmptyObjectValues(value as Record<string, unknown>, field)\n      );\n    } else if (!value) {\n      emptyKeys.push(field);\n    }\n  }\n  return emptyKeys.flat();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7726,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "2fbf7773d934cc1d97423b26a7929d63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
    "source_type": "git_repo",
    "title": "schema-validation",
    "content": "String for tracking nested properties */ const noEmptyObjectValues = ( obj: Record<string, unknown>, namespace = '' ): string[] => { const emptyKeys = []; for (const key of Object.keys(obj)) { const value = obj[key]; const field = namespace ? `${namespace}.${key}` : key; if (Array.isArray(value)) { if (!value.length) { emptyKeys.push(field); } } else if (typeof value === 'object') { emptyKeys.push( noEmptyObjectValues(value as Record<string, unknown>, field) ); } else if (!value) { emptyKeys.push(field); } } return emptyKeys.flat(); };\n\n/**\n * Grab the schema keys once, to avoid overhead of\n * fetching within iterative function.\n */\nconst translationSchemaKeys = Object.keys(flattenAnObject(translationsSchema));\nconst motivationSchemaKeys = Object.keys(flattenAnObject(motivationSchema));\nconst introSchemaKeys = Object.keys(flattenAnObject(introSchema));\nconst metaTagsSchemaKeys = Object.keys(flattenAnObject(metaTagsSchema));\nconst linksSchemaKeys = Object.keys(flattenAnObject(linksSchema));\n\n/**\n * Function that checks the translations.json file\n * for each available client language.\n * @param {String[]} languages List of languages to test\n */\nconst translationSchemaValidation = (languages: string[]) => {\n  languages.forEach(language => {\n    void readJsonFile(language, 'translations').then(fileJson => {\n      schemaValidation(\n        language,\n        'translations',\n        fileJson,\n        translationSchemaKeys\n      );\n    });\n  });\n};\n\n/**\n * Function that checks the motivation.json file\n * for each available client language.\n * @param {String[]} languages List of languages to test\n */\nconst motivationSchemaValidation = (languages: string[]) => {\n  languages.forEach(language => {\n    void readJsonFile(language, 'motivation').then(fileJson => {\n      schemaValidation(language, 'motivation', fileJson, motivationSchemaKeys);\n    });\n  });\n};\n\n/**\n * Function that checks the intro.json file\n * for each available client language.\n * @param {String[]} languages List of languages to test\n */\nconst introSchemaValidation = (languages: string[]) => {\n  languages.forEach(language => {\n    void readJsonFile(language, 'intro').then(fileJson => {\n      schemaValidation(language, 'intro', fileJson, introSchemaKeys);\n    });\n  });\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7726,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "90dadb804c8eeeb1b65267858c4ed5d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
    "source_type": "git_repo",
    "title": "schema-validation",
    "content": "{String[]} languages List of languages to test */ const motivationSchemaValidation = (languages: string[]) => { languages.forEach(language => { void readJsonFile(language, 'motivation').then(fileJson => { schemaValidation(language, 'motivation', fileJson, motivationSchemaKeys); }); }); }; /** * Function that checks the intro.json file * for each available client language. * @param {String[]} languages List of languages to test */ const introSchemaValidation = (languages: string[]) => { languages.forEach(language => { void readJsonFile(language, 'intro').then(fileJson => { schemaValidation(language, 'intro', fileJson, introSchemaKeys); }); }); };\n\n/**\n * Function that checks the meta-tags.json file\n * for each available client language.\n * @param {String[]} languages List of languages to test\n */\nconst metaTagsSchemaValidation = (languages: string[]) => {\n  languages.forEach(language => {\n    void readJsonFile(language, 'meta-tags').then(fileJson => {\n      schemaValidation(language, 'meta-tags', fileJson, metaTagsSchemaKeys);\n    });\n  });\n};\n\n/**\n * Function that checks the links.json file\n * for each available client language.\n * @param {String[]} languages List of languages to test\n */\nconst linksSchemaValidation = (languages: string[]) => {\n  languages.forEach(language => {\n    void readJsonFile(language, 'links').then(fileJson => {\n      schemaValidation(language, 'links', fileJson, linksSchemaKeys);\n    });\n  });\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7726,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5ee2328ae5aa9ee35510d891741d0a42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
    "source_type": "git_repo",
    "title": "schema-validation",
    "content": "{String[]} languages List of languages to test */ const metaTagsSchemaValidation = (languages: string[]) => { languages.forEach(language => { void readJsonFile(language, 'meta-tags').then(fileJson => { schemaValidation(language, 'meta-tags', fileJson, metaTagsSchemaKeys); }); }); }; /** * Function that checks the links.json file * for each available client language. * @param {String[]} languages List of languages to test */ const linksSchemaValidation = (languages: string[]) => { languages.forEach(language => { void readJsonFile(language, 'links').then(fileJson => { schemaValidation(language, 'links', fileJson, linksSchemaKeys); }); }); };\n\n/**\n * Common Function that checks the json file\n * @param {String} language the language to test\n * @param {String} fileName the fileName of json file to test\n * @param {Object} fileJson the fileJson got by readJsonFile\n * @param {String[]} schemaKeys Array of matching schema's keys\n */\nconst schemaValidation = (\n  language: string,\n  fileName: string,\n  fileJson: Record<string, unknown>,\n  schemaKeys: string[]\n) => {\n  const fileKeys = Object.keys(flattenAnObject(fileJson));\n  findMissingKeys(fileKeys, schemaKeys, `${language}/${fileName}.json`);\n  findExtraneousKeys(fileKeys, schemaKeys, `${language}/${fileName}.json`);\n  const emptyKeys = noEmptyObjectValues(fileJson);\n  if (emptyKeys.length) {\n    console.warn(\n      `${language}/${fileName}.json has these empty keys: ${emptyKeys.join(\n        ', '\n      )}`\n    );\n  }\n  // Special line to assert that objects in motivational quote are correct\n  if (\n    fileName === 'motivation' &&\n    !(fileJson.motivationalQuotes as MotivationalQuotes).every(\n      object =>\n        Object.prototype.hasOwnProperty.call(object, 'quote') &&\n        Object.prototype.hasOwnProperty.call(object, 'author')\n    )\n  ) {\n    console.warn(`${language}/${fileName}.json has malformed quote objects.`);\n  }\n  console.info(`${language} ${fileName}.json validation complete`);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7726,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "9c289fdf0b2131aee81c04ad15418fa4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
    "source_type": "git_repo",
    "title": "schema-validation",
    "content": "schemaKeys: string[] ) => { const fileKeys = Object.keys(flattenAnObject(fileJson)); findMissingKeys(fileKeys, schemaKeys, `${language}/${fileName}.json`); findExtraneousKeys(fileKeys, schemaKeys, `${language}/${fileName}.json`); const emptyKeys = noEmptyObjectValues(fileJson); if (emptyKeys.length) { console.warn( `${language}/${fileName}.json has these empty keys: ${emptyKeys.join( ', ' )}` ); } // Special line to assert that objects in motivational quote are correct if ( fileName === 'motivation' && !(fileJson.motivationalQuotes as MotivationalQuotes).every( object => Object.prototype.hasOwnProperty.call(object, 'quote') && Object.prototype.hasOwnProperty.call(object, 'author') ) ) { console.warn(`${language}/${fileName}.json has malformed quote objects.`); } console.info(`${language} ${fileName}.json validation complete`); };\n\nconst readJsonFile = async (language: string, fileName: string) => {\n  const filePath = path.join(\n    __dirname,\n    `/locales/${language}/${fileName}.json`\n  );\n  const file = await readFile(filePath, 'utf8');\n  const fileJson = JSON.parse(file) as Record<string, unknown>;\n  return fileJson;\n};\n\nconst translatedLangs = availableLangs.client.filter(\n  x => String(x) !== 'english'\n);\n\ntranslationSchemaValidation(translatedLangs);\nmotivationSchemaValidation(translatedLangs);\nintroSchemaValidation(translatedLangs);\nmetaTagsSchemaValidation(translatedLangs);\nlinksSchemaValidation(translatedLangs);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7726,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\schema-validation.ts",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "fca3ed285f1cb8931528246c4dfafe84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\static\\python-input-sw.js",
    "source_type": "git_repo",
    "title": "python-input-sw",
    "content": "self.addEventListener('install', function() {\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', function() {\n  self.clients.claim();\n})\n\nlet resolver;\n\nself.onmessage = function(event) {\n  if (resolver) resolver(event.data);\n}\n\nself.addEventListener('fetch', (event) => {\n  const url = new URL(event.request.url);\n  if (url.pathname === '/python/intercept-input/') {\n    const response = new Promise((resolve) => {\n      resolver = (data) => resolve(new Response(data));\n    });\n    event.respondWith(response);\n  }\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 531,
      "relative_path": "git_repos\\freeCodeCamp\\client\\static\\python-input-sw.js",
      "source_type": "git_repo"
    },
    "token_count": 118,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8072aa45cfc9b1103d16a4899fd6867c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\create-env.ts",
    "source_type": "git_repo",
    "title": "create-env",
    "content": "import { spawn } from 'child_process';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport { availableLangs, Languages } from '../../shared/config/i18n';\nimport env from './read-env';\n\nconst configPath = path.resolve(__dirname, '../config');\n\nconst { FREECODECAMP_NODE_ENV } = process.env;\n\nfunction checkClientLocale() {\n  if (!process.env.CLIENT_LOCALE) throw Error('CLIENT_LOCALE is not set');\n  if (!availableLangs.client.includes(process.env.CLIENT_LOCALE as Languages)) {\n    throw Error(`\n\nCLIENT_LOCALE, ${process.env.CLIENT_LOCALE}, is not an available language in shared/config/i18n.ts\n\n`);\n  }\n}\n\nfunction checkCurriculumLocale() {\n  if (!process.env.CURRICULUM_LOCALE)\n    throw Error('CURRICULUM_LOCALE is not set');\n  if (\n    !availableLangs.curriculum.includes(\n      process.env.CURRICULUM_LOCALE as Languages\n    )\n  ) {\n    throw Error(`\n\nCURRICULUM_LOCALE, ${process.env.CURRICULUM_LOCALE}, is not an available language in shared/config/i18n.ts\n\n`);\n  }\n}\n\nfunction checkDeploymentEnv() {\n  if (!process.env.DEPLOYMENT_ENV) throw Error('DEPLOYMENT_ENV is not set');\n  if (!['staging', 'production'].includes(process.env.DEPLOYMENT_ENV)) {\n    throw Error(`\n\n${process.env.DEPLOYMENT_ENV} is not a valid value for DEPLOYMENT_ENV.\nOnly 'staging' and 'production' are valid deployment environments.\n`);\n  }\n}\n\ncheckClientLocale();\ncheckCurriculumLocale();\ncheckDeploymentEnv();\n\nif (FREECODECAMP_NODE_ENV !== 'development') {\n  const locationKeys = [\n    'homeLocation',\n    'apiLocation',\n    'forumLocation',\n    'newsLocation',\n    'radioLocation'\n  ];\n  const deploymentKeys = [\n    'clientLocale',\n    'curriculumLocale',\n    'deploymentEnv',\n    'environment',\n    'showUpcomingChanges',\n    'showDailyCodingChallenges'\n  ];\n  const searchKeys = ['algoliaAppId', 'algoliaAPIKey'];\n  const donationKeys = ['stripePublicKey', 'paypalClientId', 'patreonClientId'];\n  const abTestingKeys = ['growthbookUri'];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3961,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\create-env.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2b70aad24d42e4192ce3bc3d12d46ee0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\create-env.ts",
    "source_type": "git_repo",
    "title": "create-env",
    "content": "if (!process.env.DEPLOYMENT_ENV) throw Error('DEPLOYMENT_ENV is not set'); if (!['staging', 'production'].includes(process.env.DEPLOYMENT_ENV)) { throw Error(` ${process.env.DEPLOYMENT_ENV} is not a valid value for DEPLOYMENT_ENV. Only 'staging' and 'production' are valid deployment environments. `); } } checkClientLocale(); checkCurriculumLocale(); checkDeploymentEnv(); if (FREECODECAMP_NODE_ENV !== 'development') { const locationKeys = [ 'homeLocation', 'apiLocation', 'forumLocation', 'newsLocation', 'radioLocation' ]; const deploymentKeys = [ 'clientLocale', 'curriculumLocale', 'deploymentEnv', 'environment', 'showUpcomingChanges', 'showDailyCodingChallenges' ]; const searchKeys = ['algoliaAppId', 'algoliaAPIKey']; const donationKeys = ['stripePublicKey', 'paypalClientId', 'patreonClientId']; const abTestingKeys = ['growthbookUri'];\n\nconst expectedVariables = locationKeys.concat(\n    deploymentKeys,\n    searchKeys,\n    donationKeys,\n    abTestingKeys\n  );\n  const actualVariables = Object.keys(env as Record<string, unknown>);\n  if (expectedVariables.length !== actualVariables.length) {\n    const extraVariables = actualVariables\n      .filter(x => !expectedVariables.includes(x))\n      .toString();\n    const missingVariables = expectedVariables\n      .filter(x => !actualVariables.includes(x))\n      .toString();\n\nthrow Error(\n      `\n\nEnv. variable validation failed. Make sure only expected variables are used and configured.\n\n` +\n        (extraVariables ? `Extra variables: ${extraVariables}\\n` : '') +\n        (missingVariables ? `Missing variables: ${missingVariables}` : '')\n    );\n  }\n\nfor (const key of expectedVariables) {\n    const envVal = env[key as keyof typeof env];\n    if (typeof envVal === 'undefined' || envVal === null) {\n      throw Error(`\n\nEnv. variable ${key} is missing, build cannot continue\n\n`);\n    }\n  }\n\nif (env['environment'] !== 'production')\n    throw Error(`\n\nProduction environment should be 'production'\n\n`);\n\nif (env['showUpcomingChanges'] && env['deploymentEnv'] !== 'staging')\n    throw Error(`\n\nSHOW_UPCOMING_CHANGES should never be 'true' in production",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3961,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\create-env.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3eb84a697f067f00decdccd02f2053cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\create-env.ts",
    "source_type": "git_repo",
    "title": "create-env",
    "content": ": '') + (missingVariables ? `Missing variables: ${missingVariables}` : '') ); } for (const key of expectedVariables) { const envVal = env[key as keyof typeof env]; if (typeof envVal === 'undefined' || envVal === null) { throw Error(` Env. variable ${key} is missing, build cannot continue `); } } if (env['environment'] !== 'production') throw Error(` Production environment should be 'production' `); if (env['showUpcomingChanges'] && env['deploymentEnv'] !== 'staging') throw Error(` SHOW_UPCOMING_CHANGES should never be 'true' in production\n\n`);\n} else {\n  if (fs.existsSync(`${configPath}/env.json`)) {\n    const { showUpcomingChanges } = JSON.parse(\n      fs.readFileSync(`${configPath}/env.json`, 'utf-8')\n    ) as { showUpcomingChanges: boolean };\n\nif (env['showUpcomingChanges'] !== showUpcomingChanges) {\n      console.log('Feature flags have been changed, cleaning client cache.');\n      const child = spawn('pnpm', ['run', '-w', 'clean:client']);\n      child.stdout.setEncoding('utf8');\n      child.stdout.on('data', function (data) {\n        console.log(data);\n      });\n      child.on('error', err => {\n        console.error(err);\n      });\n    }\n  }\n}\n\nfs.writeFileSync(`${configPath}/env.json`, JSON.stringify(env));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3961,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\create-env.ts",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e31c0f3bf7ee7dd060cb7ef8ff299da9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\download-trending.ts",
    "source_type": "git_repo",
    "title": "download-trending",
    "content": "import { readFileSync, writeFileSync } from 'fs';\nimport path from 'path';\n\nimport fetch from 'node-fetch';\nimport yaml from 'js-yaml';\nimport { config } from 'dotenv';\n\nimport { trendingSchemaValidator } from './schema/trending-schema';\n\nconfig({ path: path.resolve(__dirname, '../../.env') });\n\nconst createCdnUrl = (lang: string) =>\n  `https://cdn.freecodecamp.org/universal/trending/${lang}.yaml`;\n\nconst download = async (clientLocale: string) => {\n  const url = createCdnUrl(clientLocale);\n\nconst trendingLocation = path.resolve(\n    __dirname,\n    `../i18n/locales/${clientLocale}/trending.json`\n  );\n\nconst loadLocalTrendingJSON = () => {\n    const localTrendingJSON = readFileSync(trendingLocation, 'utf8');\n\nif (!localTrendingJSON) {\n      throw new Error(\n        `\n        ----------------------------------------------------\n        Error: ${trendingLocation} is missing.\n        ----------------------------------------------------\n        `\n      );\n    }\n\nreturn localTrendingJSON;\n  };\n\nconst loadTrendingJSON = async () => {\n    try {\n      const res = await fetch(url);\n\nif (!res.ok) {\n        throw new Error(\n          `\n          ----------------------------------------------------\n          Error: The CDN is missing the trending YAML file.\n          ----------------------------------------------------\n          Unable to fetch the ${clientLocale} footer: ${res.statusText}\n          `\n        );\n      }\n\nconst data = await res.text();\n      const trendingJSON = JSON.stringify(yaml.load(data));\n\nreturn trendingJSON;\n    } catch (error) {\n      if (process.env.FREECODECAMP_NODE_ENV === 'production') {\n        throw new Error((error as Error).message);\n      }\n\nreturn loadLocalTrendingJSON();\n    }\n  };\n\nconst trendingJSON = await loadTrendingJSON();\n\nwriteFileSync(trendingLocation, trendingJSON);\n\nconst trendingObject = JSON.parse(trendingJSON) as Record<string, string>;\n  const validationError =\n    (trendingSchemaValidator(trendingObject).error as Error) || null;\n\nif (validationError) {\n    throw new Error(\n      `\n    ----------------------------------------------------\n    Error: The trending JSON is invalid.\n    ----------------------------------------------------\n    Unable to validate the ${clientLocale} trending JSON schema: ${validationError.message}\n    `\n    );\n  }\n};\n\nconst locale = process.env.CLIENT_LOCALE;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2716,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\download-trending.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "62811b3816eff2b969f62687c9b5fa00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\download-trending.ts",
    "source_type": "git_repo",
    "title": "download-trending",
    "content": "JSON.stringify(yaml.load(data)); return trendingJSON; } catch (error) { if (process.env.FREECODECAMP_NODE_ENV === 'production') { throw new Error((error as Error).message); } return loadLocalTrendingJSON(); } }; const trendingJSON = await loadTrendingJSON(); writeFileSync(trendingLocation, trendingJSON); const trendingObject = JSON.parse(trendingJSON) as Record<string, string>; const validationError = (trendingSchemaValidator(trendingObject).error as Error) || null; if (validationError) { throw new Error( ` ---------------------------------------------------- Error: The trending JSON is invalid. ---------------------------------------------------- Unable to validate the ${clientLocale} trending JSON schema: ${validationError.message} ` ); } }; const locale = process.env.CLIENT_LOCALE;\n\nif (!locale) throw Error('CLIENT_LOCALE must be set to a valid locale');\n\nvoid download(locale);\n// TODO: remove the need to fallback to english once we're confident it's\n// unnecessary (client/i18n/config.js will need all references to 'en' removing)\nif (locale !== 'english') void download('english');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2716,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\download-trending.ts",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3e2a9f3e75ce08f1d4a8359909a15066",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\static\\funding.json",
    "source_type": "git_repo",
    "title": "funding",
    "content": "{\n  \"version\": \"v1 0 0\",\n  \"entity\": {\n    \"type\": \"organisation\",\n    \"role\": \"owner\",\n    \"name\": \"freeCodeCamp\",\n    \"email\": \"team@freecodecamp org\",\n    \"phone\": \"+1-415-663-6049\",\n    \"description\": \"freeCodeCamp is a 501(c)(3) tax-exempt charity that helps people learn math, programming, and computer science for free Since 2014, more than 40,000 graduates have gotten developer jobs at companies like Google, Microsoft, and Amazon We provide thousands of hours of coding curriculum, all open source and accessible to everyone \",\n    \"webpageUrl\": {\n      \"url\": \"https://www freecodecamp org\"\n    }\n  },\n  \"projects\": [\n    {\n      \"guid\": \"freecodecamp-core-curriculum\",\n      \"name\": \"freeCodeCamp Core Curriculum\",\n      \"description\": \"An open-source curriculum that teaches full-stack web development, Python, data science, and machine learning The curriculum includes interactive coding challenges, projects, and certification paths — all accessible online for free It’s the most-starred GitHub repo in the world, with over 400,000 stars and tens of thousands of contributors \",\n      \"webpageUrl\": {\n        \"url\": \"https://www freecodecamp org/learn\"\n      },\n      \"repositoryUrl\": {\n        \"url\": \"https://github com/freeCodeCamp/freeCodeCamp\",\n        \"wellKnown\": \"https://github com/freeCodeCamp/freeCodeCamp/raw/refs/heads/main/ github/ well-known/funding-manifest-urls\"\n      },\n      \"licenses\": [\n        \"spdx:BSD-3-Clause\"\n      ],\n      \"tags\": [\n        \"education\",\n        \"programming\",\n        \"full-stack\",\n        \"python\",\n        \"machine-learning\",\n        \"open-source\",\n        \"developer-tools\",\n        \"nonprofit\",\n        \"javascript\",\n        \"certification\"\n      ]\n    },\n    {\n      \"guid\": \"freecodecamp-learn-platform\",\n      \"name\": \"freeCodeCamp Learning Platform\",\n      \"description\": \"The freeCodeCamp Learning Platform is an open-source web application that delivers our interactive curriculum to millions of learners worldwide",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 4694,
      "relative_path": "git_repos\\freeCodeCamp\\client\\static\\funding.json",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "2a83b83a984164eb6f49e4513cde37b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\static\\funding.json",
    "source_type": "git_repo",
    "title": "funding",
    "content": "the world, with over 400,000 stars and tens of thousands of contributors \", \"webpageUrl\": { \"url\": \"https://www freecodecamp org/learn\" }, \"repositoryUrl\": { \"url\": \"https://github com/freeCodeCamp/freeCodeCamp\", \"wellKnown\": \"https://github com/freeCodeCamp/freeCodeCamp/raw/refs/heads/main/ github/ well-known/funding-manifest-urls\" }, \"licenses\": [ \"spdx:BSD-3-Clause\" ], \"tags\": [ \"education\", \"programming\", \"full-stack\", \"python\", \"machine-learning\", \"open-source\", \"developer-tools\", \"nonprofit\", \"javascript\", \"certification\" ] }, { \"guid\": \"freecodecamp-learn-platform\", \"name\": \"freeCodeCamp Learning Platform\", \"description\": \"The freeCodeCamp Learning Platform is an open-source web application that delivers our interactive curriculum to millions of learners worldwideIt includes features like code editors, project submission systems, exam environments, and certification tracking, all designed to provide a highly-accessible learning experience \",\n      \"webpageUrl\": {\n        \"url\": \"https://www freecodecamp org\"\n      },\n      \"repositoryUrl\": {\n        \"url\": \"https://github com/freeCodeCamp/freeCodeCamp\",\n        \"wellKnown\": \"https://github com/freeCodeCamp/freeCodeCamp/raw/refs/heads/main/ github/ well-known/funding-manifest-urls\"\n      },\n      \"licenses\": [\n        \"spdx:BSD-3-Clause\"\n      ],\n      \"tags\": [\n        \"education\",\n        \"web-platform\",\n        \"open-source\",\n        \"developer-tools\",\n        \"nonprofit\",\n        \"javascript\",\n        \"learning\"\n      ]\n    }\n  ],\n  \"funding\": {\n    \"channels\": [\n      {\n        \"guid\": \"github-sponsors\",\n        \"type\": \"payment-provider\",\n        \"address\": \"https://github com/sponsors/freeCodeCamp\",\n        \"description\": \"Support freeCodeCamp via GitHub Sponsors \"\n      },\n      {\n        \"guid\": \"donate-page\",\n        \"type\": \"payment-provider\",\n        \"address\": \"https://donate freecodecamp org\",\n        \"description\": \"Donate directly through our official donation page",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 4694,
      "relative_path": "git_repos\\freeCodeCamp\\client\\static\\funding.json",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3893212e3d9826e5ba3649d6c729ec26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\static\\funding.json",
    "source_type": "git_repo",
    "title": "funding",
    "content": "a highly-accessible learning experience \", \"webpageUrl\": { \"url\": \"https://www freecodecamp org\" }, \"repositoryUrl\": { \"url\": \"https://github com/freeCodeCamp/freeCodeCamp\", \"wellKnown\": \"https://github com/freeCodeCamp/freeCodeCamp/raw/refs/heads/main/ github/ well-known/funding-manifest-urls\" }, \"licenses\": [ \"spdx:BSD-3-Clause\" ], \"tags\": [ \"education\", \"web-platform\", \"open-source\", \"developer-tools\", \"nonprofit\", \"javascript\", \"learning\" ] } ], \"funding\": { \"channels\": [ { \"guid\": \"github-sponsors\", \"type\": \"payment-provider\", \"address\": \"https://github com/sponsors/freeCodeCamp\", \"description\": \"Support freeCodeCamp via GitHub Sponsors \" }, { \"guid\": \"donate-page\", \"type\": \"payment-provider\", \"address\": \"https://donate freecodecamp org\", \"description\": \"Donate directly through our official donation page\"\n      }\n    ],\n    \"plans\": [\n      {\n        \"guid\": \"monthly-donations\",\n        \"status\": \"active\",\n        \"name\": \"Monthly Support Plan\",\n        \"description\": \"Join over 11,000 monthly donors supporting freeCodeCamp's mission to provide free coding education \",\n        \"amount\": 0,\n        \"currency\": \"USD\",\n        \"frequency\": \"monthly\",\n        \"channels\": [\n          \"donate-page\",\n          \"github-sponsors\"\n        ]\n      },\n      {\n        \"guid\": \"one-time-donations\",\n        \"status\": \"active\",\n        \"name\": \"One-Time Donation\",\n        \"description\": \"Make a one-time contribution to support our charity's open source development work \",\n        \"amount\": 0,\n        \"currency\": \"USD\",\n        \"frequency\": \"one-time\",\n        \"channels\": [\n          \"donate-page\"\n        ]\n      }\n    ],\n    \"history\": [\n      {\n        \"year\": 2023,\n        \"income\": 2170474,\n        \"expenses\": 1425284,\n        \"taxes\": 0,\n        \"currency\": \"USD\",\n        \"description\": \"Revenue: $2 17M; Expenses: $1 43M; Net Assets: $6 9M",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 4694,
      "relative_path": "git_repos\\freeCodeCamp\\client\\static\\funding.json",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "d98ef4f57acf009c8c990ed7cc257433",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\static\\funding.json",
    "source_type": "git_repo",
    "title": "funding",
    "content": "to provide free coding education \", \"amount\": 0, \"currency\": \"USD\", \"frequency\": \"monthly\", \"channels\": [ \"donate-page\", \"github-sponsors\" ] }, { \"guid\": \"one-time-donations\", \"status\": \"active\", \"name\": \"One-Time Donation\", \"description\": \"Make a one-time contribution to support our charity's open source development work \", \"amount\": 0, \"currency\": \"USD\", \"frequency\": \"one-time\", \"channels\": [ \"donate-page\" ] } ], \"history\": [ { \"year\": 2023, \"income\": 2170474, \"expenses\": 1425284, \"taxes\": 0, \"currency\": \"USD\", \"description\": \"Revenue: $2 17M; Expenses: $1 43M; Net Assets: $6 9M\"\n      },\n      {\n        \"year\": 2022,\n        \"income\": 4278462,\n        \"expenses\": 1390551,\n        \"taxes\": 0,\n        \"currency\": \"USD\",\n        \"description\": \"Revenue: $4 28M; Expenses: $1 39M; Net Assets: $4 99M \"\n      },\n      {\n        \"year\": 2021,\n        \"income\": 3236638,\n        \"expenses\": 881167,\n        \"taxes\": 0,\n        \"currency\": \"USD\",\n        \"description\": \"Revenue: $3 24M; Expenses: $881K; Net Assets: $2 69M \"\n      }\n    ]\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 4694,
      "relative_path": "git_repos\\freeCodeCamp\\client\\static\\funding.json",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "cfcfe371cd9ff3b57e210d20e831edf6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.ts",
    "source_type": "git_repo",
    "title": "generate-search-placeholder",
    "content": "import { writeFileSync, readdirSync, lstatSync } from 'fs';\nimport { join, resolve } from 'path';\nimport algoliasearch from 'algoliasearch';\nimport i18n from 'i18next';\nimport backend from 'i18next-fs-backend';\n\nimport {\n  algoliaAppId,\n  algoliaAPIKey,\n  clientLocale,\n  environment\n} from '../config/env.json';\nimport { newsIndex } from '../src/utils/algolia-locale-setup';\nimport { i18nextCodes } from '../../shared/config/i18n';\n\nconst i18nextCode = i18nextCodes[clientLocale as keyof typeof i18nextCodes];\n\ni18n\n  .use(backend)\n  .init({\n    defaultNS: 'translations',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false\n    },\n    initImmediate: false,\n    preload: readdirSync(join(__dirname, '../i18n/locales')).filter(\n      fileName => {\n        const joinedPath = join(join(__dirname, '../i18n/locales'), fileName);\n        const isDirectory = lstatSync(joinedPath).isDirectory();\n        return isDirectory;\n      }\n    ),\n    lng: i18nextCode,\n    ns: ['translations'],\n    backend: {\n      loadPath: resolve(\n        __dirname,\n        `../i18n/locales/${clientLocale}/translations.json`\n      )\n    }\n  })\n  .catch((error: Error) => {\n    throw Error(error.message);\n  });\n\nconst t = i18n.t.bind(i18n);\n\nexport const roundDownToNearestHundred = (num: number) =>\n  Math.floor(num / 100) * 100;\n\nexport const convertToLocalizedString = (num: number, ISOCode: string) =>\n  num.toLocaleString(ISOCode);\n\ninterface GenerateSearchPlaceholderOptions {\n  locale?: string;\n  mockRecordsNum?: number;\n}\n\nexport const generateSearchPlaceholder = async (\n  options: GenerateSearchPlaceholderOptions = {}\n) => {\n  const { locale, mockRecordsNum } = options;\n  let placeholderText = t('search.placeholder.default');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3310,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.ts",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8f71cb70c5febd7afd498ce8e28c65d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.ts",
    "source_type": "git_repo",
    "title": "generate-search-placeholder",
    "content": "ns: ['translations'], backend: { loadPath: resolve( __dirname, `../i18n/locales/${clientLocale}/translations.json` ) } }) .catch((error: Error) => { throw Error(error.message); }); const t = i18n.t.bind(i18n); export const roundDownToNearestHundred = (num: number) => Math.floor(num / 100) * 100; export const convertToLocalizedString = (num: number, ISOCode: string) => num.toLocaleString(ISOCode); interface GenerateSearchPlaceholderOptions { locale?: string; mockRecordsNum?: number; } export const generateSearchPlaceholder = async ( options: GenerateSearchPlaceholderOptions = {} ) => { const { locale, mockRecordsNum } = options; let placeholderText = t('search.placeholder.default');\n\ntry {\n    let totalRecords = mockRecordsNum || 0;\n    if (!mockRecordsNum) {\n      const algoliaClient = algoliasearch(algoliaAppId, algoliaAPIKey);\n      const index = algoliaClient.initIndex(newsIndex);\n      const res = await index.search('');\n      totalRecords = res.nbHits;\n    }\n    const roundedTotalRecords = roundDownToNearestHundred(totalRecords);\n\nif (roundedTotalRecords >= 100) {\n      placeholderText = i18n.t('search.placeholder.numbered', {\n        roundedTotalRecords: convertToLocalizedString(\n          roundedTotalRecords,\n          i18nextCode\n        )\n      });\n    }\n  } catch (_err) {\n    if (environment === 'production') {\n      console.warn(`\n  ----------------------------------------------------------\n  Warning: Could not get the total number of Algolia records\n  ----------------------------------------------------------\n  Make sure that Algolia keys and index are set up correctly.\n\nFalling back to the default search placeholder text.\n  ----------------------------------------------------------\n`);\n    }\n  }\n\nwriteFileSync(\n    resolve(\n      __dirname,\n      `../i18n/locales/${locale ? locale : clientLocale}/search-bar.json`\n    ),\n    JSON.stringify({\n      placeholder: placeholderText\n    })\n  );\n\nreturn placeholderText; // for testing\n};\n\nvoid generateSearchPlaceholder();\n// TODO: remove the need to fallback to english once we're confident it's\n// unnecessary (client/i18n/config.js will need all references to 'en' removing)\nif (clientLocale !== 'english')\n  void generateSearchPlaceholder({ locale: 'english' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3310,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e84e314cc29b796c5c89812884dc1105",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
    "source_type": "git_repo",
    "title": "generate-search-placeholder.test",
    "content": "import { clientLocale } from '../config/env.json';\nimport {\n  convertToLocalizedString,\n  generateSearchPlaceholder,\n  roundDownToNearestHundred\n} from './generate-search-placeholder';\n\ndescribe('Search bar placeholder tests:', () => {\n  describe('Number rounding', () => {\n    test('Numbers less than 100 return 0', () => {\n      const testArr = [0, 1, 50, 99];\n\ntestArr.forEach(num => {\n        expect(roundDownToNearestHundred(num)).toEqual(0);\n      });\n    });\n\ntest('Numbers greater than 100 return a number rounded down to the nearest 100', () => {\n      const testArr = [\n        {\n          num: 100,\n          expected: 100\n        },\n        {\n          num: 101,\n          expected: 100\n        },\n        {\n          num: 199,\n          expected: 100\n        },\n        {\n          num: 999,\n          expected: 900\n        },\n        {\n          num: 1000,\n          expected: 1000\n        },\n        {\n          num: 1001,\n          expected: 1000\n        },\n        {\n          num: 1999,\n          expected: 1900\n        },\n        {\n          num: 10000,\n          expected: 10000\n        },\n        {\n          num: 10001,\n          expected: 10000\n        },\n        {\n          num: 19999,\n          expected: 19900\n        }\n      ];\n\ntestArr.forEach(obj => {\n        expect(roundDownToNearestHundred(obj.num)).toEqual(obj.expected);\n      });\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4273,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c89dd639ee7dd3768d15c021f0f73ff7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
    "source_type": "git_repo",
    "title": "generate-search-placeholder.test",
    "content": "100', () => { const testArr = [ { num: 100, expected: 100 }, { num: 101, expected: 100 }, { num: 199, expected: 100 }, { num: 999, expected: 900 }, { num: 1000, expected: 1000 }, { num: 1001, expected: 1000 }, { num: 1999, expected: 1900 }, { num: 10000, expected: 10000 }, { num: 10001, expected: 10000 }, { num: 19999, expected: 19900 } ]; testArr.forEach(obj => { expect(roundDownToNearestHundred(obj.num)).toEqual(obj.expected); }); }); });\n\ndescribe('Number formatting', () => {\n    test('Numbers are converted to the correct decimal or comma format for each locale', () => {\n      const testArr = [\n        {\n          num: 100,\n          locale: 'en',\n          expected: '100'\n        },\n        {\n          num: 100,\n          locale: 'zh',\n          expected: '100'\n        },\n        {\n          num: 100,\n          locale: 'de',\n          expected: '100'\n        },\n        {\n          num: 1000,\n          locale: 'en',\n          expected: '1,000'\n        },\n        {\n          num: 1000,\n          locale: 'zh',\n          expected: '1,000'\n        },\n        {\n          num: 1000,\n          locale: 'de',\n          expected: '1.000'\n        },\n        {\n          num: 10000,\n          locale: 'en',\n          expected: '10,000'\n        },\n        {\n          num: 10000,\n          locale: 'zh',\n          expected: '10,000'\n        },\n        {\n          num: 10000,\n          locale: 'de',\n          expected: '10.000'\n        },\n        {\n          num: 100000,\n          locale: 'en',\n          expected: '100,000'\n        },\n        {\n          num: 100000,\n          locale: 'zh',\n          expected: '100,000'\n        },\n        {\n          num: 100000,\n          locale: 'de',\n          expected: '100.000'\n        }\n      ];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4273,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "fbabb12a6315840b1d1ed9d2ed1917cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
    "source_type": "git_repo",
    "title": "generate-search-placeholder.test",
    "content": "expected: '100' }, { num: 1000, locale: 'en', expected: '1,000' }, { num: 1000, locale: 'zh', expected: '1,000' }, { num: 1000, locale: 'de', expected: '1.000' }, { num: 10000, locale: 'en', expected: '10,000' }, { num: 10000, locale: 'zh', expected: '10,000' }, { num: 10000, locale: 'de', expected: '10.000' }, { num: 100000, locale: 'en', expected: '100,000' }, { num: 100000, locale: 'zh', expected: '100,000' }, { num: 100000, locale: 'de', expected: '100.000' } ];\n\ntestArr.forEach(obj => {\n        const { num, locale, expected } = obj;\n        expect(convertToLocalizedString(num, locale)).toEqual(expected);\n      });\n    });\n  });\n\n// Note: Only test the English locale to prevent duplicate tests,\n  // and just to ensure the logic is working as expected.\n  if (clientLocale === 'english') {\n    describe('Placeholder strings', () => {\n      test('When the total number of hits is less than 100 the expected placeholder is generated', async () => {\n        const expected = 'Search our news articles, tutorials, and books';\n        const placeholderText = await generateSearchPlaceholder({\n          mockRecordsNum: 99,\n          locale: 'english'\n        });\n\nexpect(placeholderText).toEqual(expected);\n      });\n\ntest('When the total number of hits is equal to 100 the expected placeholder is generated', async () => {\n        const placeholderText = await generateSearchPlaceholder({\n          mockRecordsNum: 100,\n          locale: 'english'\n        });\n        const expected = 'Search 100+ news articles, tutorials, and books';\n\nexpect(placeholderText).toEqual(expected);\n      });\n\ntest('When the total number of hits is greater than 100 the expected placeholder is generated', async () => {\n        const placeholderText = await generateSearchPlaceholder({\n          mockRecordsNum: 11000,\n          locale: 'english'\n        });\n        const expected = 'Search 11,000+ news articles, tutorials, and books';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4273,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "913df10d9c93781ccef51843cffe335d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
    "source_type": "git_repo",
    "title": "generate-search-placeholder.test",
    "content": "of hits is equal to 100 the expected placeholder is generated', async () => { const placeholderText = await generateSearchPlaceholder({ mockRecordsNum: 100, locale: 'english' }); const expected = 'Search 100+ news articles, tutorials, and books'; expect(placeholderText).toEqual(expected); }); test('When the total number of hits is greater than 100 the expected placeholder is generated', async () => { const placeholderText = await generateSearchPlaceholder({ mockRecordsNum: 11000, locale: 'english' }); const expected = 'Search 11,000+ news articles, tutorials, and books';\n\nexpect(placeholderText).toEqual(expected);\n      });\n    });\n  }\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4273,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\generate-search-placeholder.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 143,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6b7dfa58d4a12c891057fa1e7fc547d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\read-env.ts",
    "source_type": "git_repo",
    "title": "read-env",
    "content": "import path from 'path';\nimport { config } from 'dotenv';\n\nconst envPath = path.resolve(__dirname, '../../.env');\nconst { error } = config({ path: envPath });\n\nif (error) {\n  console.warn(`\n  ----------------------------------------------------\n  Warning: .env file not found.\n  ----------------------------------------------------\n  Please copy sample.env to .env\n\nYou can ignore this warning if using a different way\n  to setup this environment.\n  ----------------------------------------------------\n  `);\n}\n\nconst {\n  HOME_LOCATION: homeLocation,\n  API_LOCATION: apiLocation,\n  FORUM_LOCATION: forumLocation,\n  NEWS_LOCATION: newsLocation,\n  RADIO_LOCATION: radioLocation,\n  CLIENT_LOCALE: clientLocale,\n  CURRICULUM_LOCALE: curriculumLocale,\n  ALGOLIA_APP_ID: algoliaAppId,\n  ALGOLIA_API_KEY: algoliaAPIKey,\n  STRIPE_PUBLIC_KEY: stripePublicKey,\n  PAYPAL_CLIENT_ID: paypalClientId,\n  PATREON_CLIENT_ID: patreonClientId,\n  DEPLOYMENT_ENV: deploymentEnv,\n  SHOW_UPCOMING_CHANGES: showUpcomingChanges,\n  SHOW_DAILY_CODING_CHALLENGES: showDailyCodingChallenges,\n  GROWTHBOOK_URI: growthbookUri\n} = process.env;\n\nconst locations = {\n  homeLocation,\n  apiLocation,\n  forumLocation,\n  newsLocation,\n  radioLocation: !radioLocation\n    ? 'https://coderadio.freecodecamp.org'\n    : radioLocation\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2338,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\read-env.ts",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "844beef6d637067cfb3ca08524518ae3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\read-env.ts",
    "source_type": "git_repo",
    "title": "read-env",
    "content": "found. ---------------------------------------------------- Please copy sample.env to .env You can ignore this warning if using a different way to setup this environment. ---------------------------------------------------- `); } const { HOME_LOCATION: homeLocation, API_LOCATION: apiLocation, FORUM_LOCATION: forumLocation, NEWS_LOCATION: newsLocation, RADIO_LOCATION: radioLocation, CLIENT_LOCALE: clientLocale, CURRICULUM_LOCALE: curriculumLocale, ALGOLIA_APP_ID: algoliaAppId, ALGOLIA_API_KEY: algoliaAPIKey, STRIPE_PUBLIC_KEY: stripePublicKey, PAYPAL_CLIENT_ID: paypalClientId, PATREON_CLIENT_ID: patreonClientId, DEPLOYMENT_ENV: deploymentEnv, SHOW_UPCOMING_CHANGES: showUpcomingChanges, SHOW_DAILY_CODING_CHALLENGES: showDailyCodingChallenges, GROWTHBOOK_URI: growthbookUri } = process.env; const locations = { homeLocation, apiLocation, forumLocation, newsLocation, radioLocation: !radioLocation ? 'https://coderadio.freecodecamp.org' : radioLocation };\n\nexport default Object.assign(locations, {\n  clientLocale,\n  curriculumLocale,\n  deploymentEnv,\n  environment: process.env.FREECODECAMP_NODE_ENV || 'development',\n  algoliaAppId:\n    !algoliaAppId || algoliaAppId === 'app_id_from_algolia_dashboard'\n      ? ''\n      : algoliaAppId,\n  algoliaAPIKey:\n    !algoliaAPIKey || algoliaAPIKey === 'api_key_from_algolia_dashboard'\n      ? ''\n      : algoliaAPIKey,\n  stripePublicKey:\n    !stripePublicKey || stripePublicKey === 'pk_from_stripe_dashboard'\n      ? null\n      : stripePublicKey,\n  paypalClientId:\n    !paypalClientId || paypalClientId === 'id_from_paypal_dashboard'\n      ? null\n      : paypalClientId,\n  patreonClientId:\n    !patreonClientId || patreonClientId === 'id_from_patreon_dashboard'\n      ? null\n      : patreonClientId,\n  showUpcomingChanges: showUpcomingChanges === 'true',\n  showDailyCodingChallenges: showDailyCodingChallenges === 'true',\n  growthbookUri:\n    !growthbookUri || growthbookUri === 'api_URI_from_Growthbook_dashboard'\n      ? null\n      : growthbookUri\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2338,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\read-env.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5e6ede85fcd7e61df8bbffbf1e8e44dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\build-challenges.js",
    "source_type": "git_repo",
    "title": "build-challenges",
    "content": "const path = require('path');\n\nconst _ = require('lodash');\n\nconst envData = require('../config/env.json');\nconst {\n  getChallengesForLang,\n  generateChallengeCreator,\n  ENGLISH_CHALLENGES_DIR,\n  META_DIR,\n  I18N_CHALLENGES_DIR,\n  getChallengesDirForLang\n} = require('../../curriculum/get-challenges');\n\nconst { curriculumLocale } = envData;\n\nexports.localeChallengesRootDir = getChallengesDirForLang(curriculumLocale);\n\nexports.replaceChallengeNode = () => {\n  return async function replaceChallengeNode(filePath) {\n    // get the meta so that challengeOrder is accurate\n    const blockNameRe = /\\d\\d-[-\\w]+\\/([^/]+)\\//;\n    const posix = path.normalize(filePath).split(path.sep).join(path.posix.sep);\n    const blockName = posix.match(blockNameRe)[1];\n    const metaPath = path.resolve(META_DIR, `${blockName}/meta.json`);\n    delete require.cache[require.resolve(metaPath)];\n    const meta = require(metaPath);\n    const englishPath = path.resolve(\n      ENGLISH_CHALLENGES_DIR,\n      'english',\n      filePath\n    );\n    const i18nPath = path.resolve(\n      I18N_CHALLENGES_DIR,\n      curriculumLocale,\n      filePath\n    );\n    // TODO: reimplement hot-reloading of certifications\n    const createChallenge = generateChallengeCreator(\n      curriculumLocale,\n      englishPath,\n      i18nPath\n    );\n    return await createChallenge(filePath, meta);\n  };\n};\n\nexports.buildChallenges = async function buildChallenges() {\n  const curriculum = await getChallengesForLang(curriculumLocale);\n  const superBlocks = Object.keys(curriculum);\n  const blocks = superBlocks\n    .map(superBlock => curriculum[superBlock].blocks)\n    .reduce((blocks, superBlock) => {\n      const currentBlocks = Object.keys(superBlock).map(key => superBlock[key]);\n      return blocks.concat(_.flatten(currentBlocks));\n    }, []);\n\nconst builtChallenges = blocks\n    .filter(block => !block.isPrivate)\n    .map(({ challenges }) => challenges)\n    .reduce((accu, current) => accu.concat(current), []);\n  return builtChallenges;\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2008,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\build-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9d5aaa9fec5683f454f74bb59da9eb19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\serve\\serve.json",
    "source_type": "git_repo",
    "title": "serve",
    "content": "{\n  \"directoryListing\": false,\n  \"headers\": [\n    {\n      \"source\": \"{**/* html,**/app-data json,**/page-data json}\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=0, must-revalidate\"\n        }\n      ]\n    },\n    {\n      \"source\": \"**/*-@( | ) @(js|woff|ttf|svg|png)\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=172800, immutable\"\n        }\n      ]\n    },\n    {\n      \"source\": \"js/test-runner/*/* js\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=172800, immutable\"\n        }\n      ]\n    },\n    {\n      \"source\": \"{misc/* js,sw js,python-input-sw js}\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=0, must-revalidate\"\n        }\n      ]\n    },\n    {\n      \"source\": \"{js/sass sync js}\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=14400, stale-while-revalidate=172800, must-revalidate\"\n        }\n      ]\n    },\n    {\n      \"source\": \"manifest webmanifest\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=86400, stale-while-revalidate=86400, must-revalidate\"\n        }\n      ]\n    }\n  ],\n  \"trailingSlash\": false,\n  \"rewrites\": [\n    {\n      \"source\": \"/certification/**\",\n      \"destination\": \"/certification/index html\"\n    }\n  ],\n  \"redirects\": [\n    {\n      \"source\": \"/challenges/:superblock /:block /:challenge \",\n      \"destination\": \"/learn/:superblock /:block /:challenge",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 25047,
      "relative_path": "git_repos\\freeCodeCamp\\client\\serve\\serve.json",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c6081c99b6a84038a12f491c0b304767",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\serve\\serve.json",
    "source_type": "git_repo",
    "title": "serve",
    "content": "\"{misc/* js,sw js,python-input-sw js}\", \"headers\": [ { \"key\": \"Cache-Control\", \"value\": \"public, max-age=0, must-revalidate\" } ] }, { \"source\": \"{js/sass sync js}\", \"headers\": [ { \"key\": \"Cache-Control\", \"value\": \"public, max-age=14400, stale-while-revalidate=172800, must-revalidate\" } ] }, { \"source\": \"manifest webmanifest\", \"headers\": [ { \"key\": \"Cache-Control\", \"value\": \"public, max-age=86400, stale-while-revalidate=86400, must-revalidate\" } ] } ], \"trailingSlash\": false, \"rewrites\": [ { \"source\": \"/certification/**\", \"destination\": \"/certification/index html\" } ], \"redirects\": [ { \"source\": \"/challenges/:superblock /:block /:challenge \", \"destination\": \"/learn/:superblock /:block /:challenge\"\n    },\n    {\n      \"source\": \"/learn/apis-and-microservices/apis-and-microservices-projects\",\n      \"destination\": \"/learn/back-end-development-and-apis/back-end-development-and-apis-projects\"\n    },\n    {\n      \"source\": \"/learn/apis-and-microservices/apis-and-microservices-projects/:challenge\",\n      \"destination\": \"/learn/back-end-development-and-apis/back-end-development-and-apis-projects/:challenge\"\n    },\n    {\n      \"source\": \"/learn/apis-and-microservices/:block /:challenge \",\n      \"destination\": \"/learn/back-end-development-and-apis/:block /:challenge \"\n    },\n    {\n      \"source\": \"/certification/:username/apis-and-microservices\",\n      \"destination\": \"/certification/:username/back-end-development-and-apis\"\n    },\n    {\n      \"source\": \"/learn/front-end-libraries/front-end-libraries-projects\",\n      \"destination\": \"/learn/front-end-development-libraries/front-end-development-libraries-projects\"\n    },\n    {\n      \"source\": \"/learn/front-end-libraries/front-end-libraries-projects/:challenge\",\n      \"destination\": \"/learn/front-end-development-libraries/front-end-development-libraries-projects/:challenge\"\n    },\n    {\n      \"source\": \"/learn/front-end-libraries/:block /:challenge \",\n      \"destination\": \"/learn/front-end-development-libraries/:block /:challenge",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 25047,
      "relative_path": "git_repos\\freeCodeCamp\\client\\serve\\serve.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "da66ce107fdc4a8f5718982f426ef55b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\serve\\serve.json",
    "source_type": "git_repo",
    "title": "serve",
    "content": "] } ], \"trailingSlash\": false, \"rewrites\": [ { \"source\": \"/certification/**\", \"destination\": \"/certification/index html\" } ], \"redirects\": [ { \"source\": \"/challenges/:superblock /:block /:challenge \", \"destination\": \"/learn/:superblock /:block /:challenge\" }, { \"source\": \"/learn/apis-and-microservices/apis-and-microservices-projects\", \"destination\": \"/learn/back-end-development-and-apis/back-end-development-and-apis-projects\" }, { \"source\": \"/learn/apis-and-microservices/apis-and-microservices-projects/:challenge\", \"destination\": \"/learn/back-end-development-and-apis/back-end-development-and-apis-projects/:challenge\" }, { \"source\": \"/learn/apis-and-microservices/:block /:challenge \", \"destination\": \"/learn/back-end-development-and-apis/:block /:challenge \" }, { \"source\": \"/certification/:username/apis-and-microservices\", \"destination\": \"/certification/:username/back-end-development-and-apis\" }, { \"source\": \"/learn/front-end-libraries/front-end-libraries-projects\", \"destination\": \"/learn/front-end-development-libraries/front-end-development-libraries-projects\" }, { \"source\": \"/learn/front-end-libraries/front-end-libraries-projects/:challenge\", \"destination\": \"/learn/front-end-development-libraries/front-end-development-libraries-projects/:challenge\" }, { \"source\": \"/learn/front-end-libraries/:block /:challenge \", \"destination\": \"/learn/front-end-development-libraries/:block /:challenge\"\n    },\n    {\n      \"source\": \"/certification/:username/front-end-libraries\",\n      \"destination\": \"/certification/:username/front-end-development-libraries\"\n    },\n    {\n      \"source\": \"/learn/javascript-algorithms-and-data-structures/es6/explore-differences-between-the-var-and-let-keywords\",\n      \"destination\": \"/learn/javascript-algorithms-and-data-structures/basic-javascript/explore-differences-between-the-var-and-let-keywords\"\n    },\n    {\n      \"source\": \"/learn/javascript-algorithms-and-data-structures/es6/declare-a-read-only-variable-with-the-const-keyword\",\n      \"destination\": \"/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-a-read-only-variable-with-the-const-keyword\"\n    },\n    {\n      \"source\": \"/learn/responsive-web-design/applied-visual-design/adjust-the-size-of-a-header-versus-a-paragraph-tag\",\n      \"destination\": \"/learn/responsive-web-design/applied-visual-design/adjust-the-size-of-a-heading-element-versus-a-paragraph-element\"\n    },\n    {\n      \"source\": \"/learn/project-euler/project-euler-problems-1-to-100/problem-1-multiples-of-3-and-5\",\n      \"destination\": \"/learn/project-euler/project-euler-problems-1-to-100/problem-1-multiples-of-3-or-5\"\n    },\n    {\n      \"source\": \"/learn/coding-interview-prep/take-home-projects/build-a-simon-game\",\n      \"destination\": \"/learn/coding-interview-prep/take-home-projects/build-a-memory-light-game\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-are-best-practices-for-tables-and-accessibility\",\n      \"destination\": \"/learn/full-stack-developer/lecture-accessible-tables-forms/what-are-best-practices-for-tables-and-accessibility\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/why-is-it-important-for-inputs-to-have-an-associated-label\",\n      \"destination\": \"/learn/full-stack-developer/lecture-accessible-tables-forms/why-is-it-important-for-inputs-to-have-an-associated-label\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-is-the-purpose-of-wai-aria\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-purpose-of-wai-aria\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-are-aria-roles\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-are-aria-roles\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-are-the-roles-of-the-aria-label-and-aria-labelledby-attributes\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-are-the-roles-of-the-aria-label-and-aria-labelledby-attributes\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-is-the-aria-hidden-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-hidden-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-is-the-aria-expanded-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-expanded-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-is-the-aria-live-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-live-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-are-some-common-aria-states-used-on-custom-control-elements\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-are-some-common-aria-states-used-on-custom-control-elements\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-is-the-aria-controls-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-controls-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-is-the-aria-describedby-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-describedby-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/when-is-the-alt-attribute-needed\",\n      \"destination\": \"/learn/full-stack-developer/lecture-accessible-media-elements/when-is-the-alt-attribute-needed\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-are-the-accessibility-benefits-for-good-link-text\",\n      \"destination\": \"/learn/full-stack-developer/lecture-accessible-media-elements/what-are-the-accessibility-benefits-for-good-link-text\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-are-good-ways-to-make-audio-and-video-content-accessible\",\n      \"destination\": \"/learn/full-stack-developer/lecture-accessible-media-elements/what-are-good-ways-to-make-audio-and-video-content-accessible\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-accessibility-and-good-html-structure/what-are-some-ways-to-make-web-applications-keyboard-accessible\",\n      \"destination\": \"/learn/full-stack-developer/lecture-accessible-media-elements/what-are-some-ways-to-make-web-applications-keyboard-accessible\"\n    },\n    {\n      \"source\": \"/learn/relational-database/learn-relational-databases-by-building-a-mario-database/build-a-mario-database\",\n      \"destination\": \"/learn/relational-database/learn-relational-databases-by-building-a-database-of-video-game-characters/build-a-database-of-video-game-characters\"\n    },\n    {\n      \"source\": \"/learn/javascript-algorithms-and-data-structures-v8/build-a-pokemon-search-app-project/build-a-pokemon-search-app\",\n      \"destination\": \"/learn/javascript-algorithms-and-data-structures-v8/build-an-rpg-creature-search-app-project/build-an-rpg-creature-search-app\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-media/what-are-common-ways-to-optimize-media-assets\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-images-and-svgs/what-are-common-ways-to-optimize-media-assets\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-media/what-are-the-different-types-of-image-licenses\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-images-and-svgs/what-are-the-different-types-of-image-licenses\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-media/what-are-svgs\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-images-and-svgs/what-are-svgs\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-media/what-are-the-roles-of-the-html-audio-and-video-elements\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-audio-and-video-elements/what-are-the-roles-of-the-html-audio-and-video-elements\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-what-is-html/what-is-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-html-attributes/what-is-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-what-is-html/what-are-attributes\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-html-attributes/what-are-attributes\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-what-is-html/what-is-the-role-of-the-link-element-in-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-the-html-boilerplate/what-is-the-role-of-the-link-element-in-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-what-is-html/what-is-an-html-boilerplate\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-the-html-boilerplate/what-is-an-html-boilerplate\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-what-is-html/what-is-utf-8-character-encoding\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-the-html-boilerplate/what-is-utf-8-character-encoding\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/when-should-you-use-the-emphasis-element-over-the-idiomatic-text-element\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-nuanced-semantic-elements/when-should-you-use-the-emphasis-element-over-the-idiomatic-text-element\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/when-should-you-use-the-strong-element-over-the-bring-attention-to-element\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-nuanced-semantic-elements/when-should-you-use-the-strong-element-over-the-bring-attention-to-element\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/what-are-description-lists\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-nuanced-semantic-elements/what-are-description-lists\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/how-do-block-and-inline-quotes-work-in-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-text-and-time-semantic-elements/how-do-block-and-inline-quotes-work-in-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/how-do-you-display-abbreviations-and-acronyms-in-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-text-and-time-semantic-elements/how-do-you-display-abbreviations-and-acronyms-in-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/how-do-you-display-addresses-in-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-text-and-time-semantic-elements/how-do-you-display-addresses-in-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/how-do-you-display-times-and-dates-in-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-text-and-time-semantic-elements/how-do-you-display-times-and-dates-in-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/how-do-you-display-mathematical-equations-and-chemical-formulas-in-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-specialized-semantic-elements/how-do-you-display-mathematical-equations-and-chemical-formulas-in-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/how-do-you-represent-computer-code-in-html\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-specialized-semantic-elements/how-do-you-represent-computer-code-in-html\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-importance-of-semantic-html/what-are-the-u-s-and-ruby-elements-used-for\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-specialized-semantic-elements/what-are-the-u-s-and-ruby-elements-used-for\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/what-is-a-string-object-and-how-does-it-differ-from-string-primitive\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-types-and-objects/what-is-a-string-object-and-how-does-it-differ-from-string-primitive\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/what-is-the-tostring-method-and-how-does-it-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-types-and-objects/what-is-the-tostring-method-and-how-does-it-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/what-is-the-number-constructor-and-how-does-it-work-for-type-coercion\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-types-and-objects/what-is-the-number-constructor-and-how-does-it-work-for-type-coercion\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/what-are-some-common-practices-for-naming-variables-and-functions\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-arrays-variables-and-naming-practices/what-are-some-common-practices-for-naming-variables-and-functions\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/how-do-you-get-the-length-for-an-array-and-how-can-you-create-an-empty-array-of-fixed-length\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-arrays-variables-and-naming-practices/how-do-you-get-the-length-for-an-array-and-how-can-you-create-an-empty-array-of-fixed-length\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/what-are-linters-and-formatters-and-how-can-they-help-you-with-code-consistency\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-code-quality-and-execution-concepts/what-are-linters-and-formatters-and-how-can-they-help-you-with-code-consistency\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/what-is-memory-management-and-how-does-it-work-in-javascript\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-code-quality-and-execution-concepts/what-is-memory-management-and-how-does-it-work-in-javascript\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-understanding-core-javascript-fundamentals/what-are-closures-and-how-do-they-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-code-quality-and-execution-concepts/what-are-closures-and-how-do-they-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-is-the-number-type-in-javascript-and-what-are-the-different-types-of-numbers-available\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-numbers-and-arithmetic-operators/what-is-the-number-type-in-javascript-and-what-are-the-different-types-of-numbers-available\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-the-different-arithmetic-operators-in-javascript\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-numbers-and-arithmetic-operators/what-are-the-different-arithmetic-operators-in-javascript\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-happens-when-you-try-to-do-calculations-with-numbers-and-strings\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-numbers-and-arithmetic-operators/what-happens-when-you-try-to-do-calculations-with-numbers-and-strings\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/how-does-operator-precedence-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-operator-behavior/how-does-operator-precedence-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/how-do-the-increment-and-decrement-operators-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-operator-behavior/how-do-the-increment-and-decrement-operators-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-compound-assignment-operators-in-javascript-and-how-do-they-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-operator-behavior/what-are-compound-assignment-operators-in-javascript-and-how-do-they-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-booleans-and-how-do-they-work-with-equality-and-inequality-operators\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-comparison-and-boolean-operators/what-are-booleans-and-how-do-they-work-with-equality-and-inequality-operators\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-comparison-operators-and-how-do-they-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-comparison-and-boolean-operators/what-are-comparison-operators-and-how-do-they-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-unary-operators-and-how-do-they-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-unary-and-bitwise-operators/what-are-unary-operators-and-how-do-they-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-bitwise-operators-and-how-do-they-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-unary-and-bitwise-operators/what-are-bitwise-operators-and-how-do-they-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-conditional-statements-and-how-do-if-else-if-else-statements-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-conditional-logic-and-math-methods/what-are-conditional-statements-and-how-do-if-else-if-else-statements-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-are-binary-logical-operators-and-how-do-they-work\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-conditional-logic-and-math-methods/what-are-binary-logical-operators-and-how-do-they-work\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-numbers-booleans-and-the-math-object/what-is-the-math-object-in-javascript-and-what-are-some-common-methods\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-conditional-logic-and-math-methods/what-is-the-math-object-in-javascript-and-what-are-some-common-methods\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-expanded-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-aria-expanded-aria-live-and-common-aria-states/what-is-the-aria-expanded-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-live-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-aria-expanded-aria-live-and-common-aria-states/what-is-the-aria-live-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-are-some-common-aria-states-used-on-custom-control-elements\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-aria-expanded-aria-live-and-common-aria-states/what-are-some-common-aria-states-used-on-custom-control-elements\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-introduction-to-aria/what-is-the-aria-controls-attribute\",\n      \"destination\": \"/learn/full-stack-developer/lecture-understanding-aria-expanded-aria-live-and-common-aria-states/what-is-the-aria-controls-attribute\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-common-string-methods/what-is-ascii-and-how-does-it-work-with-charcodeat-and-fromcharcode\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-string-character-methods/what-is-ascii-and-how-does-it-work-with-charcodeat-and-fromcharcode\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-common-string-methods/how-can-you-test-if-a-string-contains-a-substring\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-string-search-and-slice-methods/how-can-you-test-if-a-string-contains-a-substring\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-common-string-methods/how-can-you-extract-a-substring-from-a-string\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-string-search-and-slice-methods/how-can-you-extract-a-substring-from-a-string\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-common-string-methods/how-can-you-change-the-casing-for-a-string\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-string-formatting-methods/how-can-you-change-the-casing-for-a-string\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-common-string-methods/how-can-you-trim-whitespace-from-a-string\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-string-formatting-methods/how-can-you-trim-whitespace-from-a-string\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-common-string-methods/how-can-you-replace-parts-of-a-string-with-another\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-string-modification-methods/how-can-you-replace-parts-of-a-string-with-another\"\n    },\n    {\n      \"source\": \"/learn/full-stack-developer/lecture-working-with-common-string-methods/how-can-you-repeat-a-string-x-number-of-times\",\n      \"destination\": \"/learn/full-stack-developer/lecture-working-with-string-modification-methods/how-can-you-repeat-a-string-x-number-of-times\"\n    }\n  ]\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 25047,
      "relative_path": "git_repos\\freeCodeCamp\\client\\serve\\serve.json",
      "source_type": "git_repo"
    },
    "token_count": 5501,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2196a312874a7d5eab1b4440a4b31655",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\declarations.d.ts",
    "source_type": "git_repo",
    "title": "declarations.d",
    "content": "declare global {\n  interface Window {\n    // This is a feature Gatsby adds to the `window` object.\n    // https://github.com/gatsbyjs/gatsby/blob/deb41cdfefbefe0c170b5dd7c10a19ba2b338f6e/packages/gatsby/cache-dir/production-app.js#L28\n    ___loader: {\n      enqueue: () => void;\n      hovering: (path: string | null) => void;\n    };\n  }\n}\n\nexport {};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 351,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\declarations.d.ts",
      "source_type": "git_repo"
    },
    "token_count": 105,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "68098dbaae3a4dba8e0aa1732be0f043",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\sort-challengefiles.test.ts",
    "source_type": "git_repo",
    "title": "sort-challengefiles.test",
    "content": "import { challengeFiles } from './__fixtures__/challenges';\nimport { sortChallengeFiles } from './sort-challengefiles';\n\ndescribe('sort-files', () => {\n  describe('sortChallengeFiles', () => {\n    it('should return an array', () => {\n      const sorted = sortChallengeFiles(challengeFiles);\n      expect(Array.isArray(sorted)).toBe(true);\n    });\n    it('should not modify the challenges', () => {\n      const sorted = sortChallengeFiles(challengeFiles);\n      const expected = challengeFiles;\n      expect(sorted).toEqual(expect.arrayContaining(expected));\n      expect(sorted.length).toEqual(expected.length);\n    });\n\nit('should sort the objects into jsx, html, css, js, ts order', () => {\n      const sorted = sortChallengeFiles(challengeFiles);\n      const sortedKeys = sorted.map(({ fileKey }) => fileKey);\n      const expected = [\n        'indexjsx',\n        'indexhtml',\n        'stylescss',\n        'scriptjs',\n        'indexts'\n      ];\n      expect(sortedKeys).toStrictEqual(expected);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1019,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\sort-challengefiles.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "50a13576b0d4d265925edf084a437183",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\sort-challengefiles.ts",
    "source_type": "git_repo",
    "title": "sort-challengefiles",
    "content": "export function sortChallengeFiles<File extends { fileKey: string }>(\n  challengeFiles: File[]\n): File[] {\n  return challengeFiles.toSorted((a, b) => {\n    if (a.fileKey === 'indexjsx') return -1;\n    if (b.fileKey === 'indexjsx') return 1;\n    if (a.fileKey === 'indexhtml') return -1;\n    if (b.fileKey === 'indexhtml') return 1;\n    if (a.fileKey === 'stylescss') return -1;\n    if (b.fileKey === 'stylescss') return 1;\n    if (a.fileKey === 'scriptjs') return -1;\n    if (b.fileKey === 'scriptjs') return 1;\n    if (a.fileKey === 'indexts') return -1;\n    if (b.fileKey === 'indexts') return 1;\n    return 0;\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 621,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\sort-challengefiles.ts",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b7565f0264b952fc40212abe12af0f0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "import { Certification } from '../../shared/config/certification-settings';\n\nconst idToPath = new Map(\n  Object.entries({\n    '561add10cb82ac38a17523bc': Certification.BackEndDevApis,\n    '5a553ca864b52e1d8bceea14': Certification.DataVis,\n    '561acd10cb82ac38a17513bc': Certification.FrontEndDevLibs,\n    '5e611829481575a52dc59c0e': Certification.QualityAssurance,\n    '5e6021435ac9d0ecd8b94b00': Certification.InfoSec,\n    '561abd10cb81ac38a17513bc': Certification.JsAlgoDataStruct,\n    '561add10cb82ac38a17513bc': Certification.RespWebDesign,\n    '660add10cb82ac38a17513be': Certification.LegacyBackEnd,\n    '561add10cb82ac39a17513bc': Certification.LegacyDataVis,\n    '561add10cb82ac38a17513be': Certification.LegacyFrontEnd,\n    '561add10cb82ac38a17213bc': Certification.LegacyInfoSecQa,\n    '561add10cb82ac38a17213bd': Certification.LegacyFullStack,\n    '5e44431b903586ffb414c951': Certification.SciCompPy,\n    '5e46fc95ac417301a38fb934': Certification.DataAnalysisPy,\n    '5e46fc95ac417301a38fb935': Certification.MachineLearningPy\n  })\n);\n\nexport const getCertIds = (): IterableIterator<string> => idToPath.keys();\nexport const getPathFromID = (id: string): string | undefined =>\n  idToPath.get(id);\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1290,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3727da4893cb922625c18a994eb6946f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\test-utils.tsx",
    "source_type": "git_repo",
    "title": "test-utils",
    "content": "import React, { type ReactElement } from 'react';\nimport { render as rtlRender } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport type { Store } from 'redux';\n\nfunction render(ui: ReactElement, store: Store) {\n  function Wrapper({ children }: { children: ReactElement }) {\n    return <Provider store={store}>{children}</Provider>;\n  }\n  return rtlRender(ui, { wrapper: Wrapper });\n}\n\n// re-export everything\n// eslint-disable-next-line import/export\nexport * from '@testing-library/react';\n// override render method\n// eslint-disable-next-line import/export\nexport { render };",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 606,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\test-utils.tsx",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "54639c3cd456dd9f32e85ef9d0f683bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "module.exports = require('./challenge-page-creator');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 54,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 10,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ed314dd132a9468d21c4e92b6f5c8c44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\tags.tsx",
    "source_type": "git_repo",
    "title": "tags",
    "content": "import i18next from 'i18next';\nimport React from 'react';\n\nimport { isMathJaxAllowed, mathJaxSrc } from '../src/utils/math-jax';\n\nexport function getheadTagComponents(): JSX.Element[] {\n  const socialImage =\n    'https://cdn.freecodecamp.org/platform/universal/fcc_meta_1920X1080-indigo.png';\n\nconst headTags = [\n    <meta content='freeCodeCamp.org' key='og:title' name='og:title' />,\n    <meta\n      content={i18next.t('metaTags:social-description')}\n      key='og:description'\n      name='og:description'\n    />,\n    <meta content={socialImage} key='og:image' property='og:image' />,\n    <meta\n      content='summary_large_image'\n      key='twitter:card'\n      name='twitter:card'\n    />,\n    <meta\n      content={socialImage}\n      key='twitter:image:src'\n      name='twitter:image:src'\n    />,\n    <meta\n      content='freeCodeCamp.org'\n      key='twitter:title'\n      name='twitter:title'\n    />,\n    <meta\n      content={i18next.t('metaTags:social-description')}\n      key='twitter:description'\n      name='twitter:description'\n    />,\n    <meta\n      content='$ilp.uphold.com/LJmbPn7WD4JB'\n      key='monetization'\n      name='monetization'\n    />\n  ];\n  return headTags;\n}\n\nexport function getPostBodyComponents(superblock: string): JSX.Element[] {\n  const scripts = [];\n  const mathJaxScriptElement = (\n    <script\n      async={false}\n      id='mathjax'\n      key='mathjax'\n      src={mathJaxSrc}\n      type='text/javascript'\n    />\n  );\n\nif (isMathJaxAllowed(superblock)) {\n    scripts.push(mathJaxScriptElement);\n  }\n\nreturn scripts.filter(Boolean);\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1569,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\tags.tsx",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6e2e39071c3dbd3cbd783d4f1ccffeee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.tsx",
    "source_type": "git_repo",
    "title": "layout-selector",
    "content": "import React from 'react';\n\nimport CertificationLayout from '../../src/components/layouts/certification';\nimport DefaultLayout from '../../src/components/layouts/default';\nimport FourOhFourPage from '../../src/pages/404';\n\ninterface LayoutSelectorProps {\n  element: JSX.Element;\n  props: {\n    data: { challengeNode?: { challenge?: { usesMultifileEditor?: boolean } } };\n    location: { pathname: string };\n    pageContext?: { challengeMeta?: { block?: string; superBlock?: string } };\n    params: { '*'?: string };\n    path: string;\n  };\n}\nexport default function layoutSelector({\n  element,\n  props\n}: LayoutSelectorProps): JSX.Element {\n  const {\n    location: { pathname }\n  } = props;\n\nconst isDailyChallenge = props.path === '/learn/daily-coding-challenge/*';\n  const dailyChallengeParam = props.params['*'];\n\nconst isChallenge = !!props.pageContext?.challengeMeta || isDailyChallenge;\n\nif (element.type === FourOhFourPage) {\n    return (\n      <DefaultLayout pathname={pathname} showFooter={true}>\n        {element}\n      </DefaultLayout>\n    );\n  } else if (/\\/certification\\//.test(pathname)) {\n    return (\n      <CertificationLayout pathname={pathname}>{element}</CertificationLayout>\n    );\n  } else if (isChallenge) {\n    return (\n      <DefaultLayout\n        pathname={pathname}\n        showFooter={false}\n        isChallenge={true}\n        isDailyChallenge={isDailyChallenge}\n        dailyChallengeParam={dailyChallengeParam}\n        usesMultifileEditor={\n          props.data?.challengeNode?.challenge?.usesMultifileEditor\n        }\n        block={props.pageContext?.challengeMeta?.block}\n        superBlock={props.pageContext?.challengeMeta?.superBlock}\n      >\n        {element}\n      </DefaultLayout>\n    );\n  } else {\n    return (\n      <DefaultLayout pathname={pathname} showFooter={true}>\n        {element}\n      </DefaultLayout>\n    );\n  }\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.tsx",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6cb377d925598f94d811a4987852426e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\page-loading.ts",
    "source_type": "git_repo",
    "title": "page-loading",
    "content": "/**\n * The function is useful in cases where we want to preload a page\n * but the link of the page isn't rendered on the screen.\n * For more details, see https://github.com/freeCodeCamp/freeCodeCamp/pull/55472.\n */\nexport const preloadPage = (path?: string) => {\n  if (!window.___loader || !path) return;\n\nwindow.___loader.hovering(path);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 344,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\page-loading.ts",
      "source_type": "git_repo"
    },
    "token_count": 87,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0deba29a8294898966d0fa24a7694599",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\__fixtures__\\challenges.ts",
    "source_type": "git_repo",
    "title": "challenges",
    "content": "import { ChallengeFile } from \"../../src/redux/prop-types\";\n\nexport const challengeFiles: ChallengeFile[] = [\n  {\n    contents: 'some ts',\n    error: null,\n    ext: 'ts',\n    head: '',\n    history: ['index.ts'],\n    fileKey: 'indexts',\n    name: 'index',\n    seed: 'some ts',\n    tail: '',\n    editableRegionBoundaries: [],\n    usesMultifileEditor: true,\n    path: 'index.ts',\n  },\n  {\n    contents: 'some css',\n    error: null,\n    ext: 'css',\n    head: '',\n    history: ['styles.css'],\n    fileKey: 'stylescss',\n    name: 'styles',\n    seed: 'some css',\n    tail: '',\n    editableRegionBoundaries: [],\n    usesMultifileEditor: true,\n    path: 'styles.css',\n  },\n  {\n    contents: 'some html',\n    error: null,\n    ext: 'html',\n    head: '',\n    history: ['index.html'],\n    fileKey: 'indexhtml',\n    name: 'index',\n    seed: 'some html',\n    tail: '',\n    editableRegionBoundaries: [],\n    usesMultifileEditor: true,\n    path: 'index.html',\n  },\n  {\n    contents: 'some js',\n    error: null,\n    ext: 'js',\n    head: '',\n    history: ['script.js'],\n    fileKey: 'scriptjs',\n    name: 'script',\n    seed: 'some js',\n    tail: '',\n    editableRegionBoundaries: [],\n    usesMultifileEditor: true,\n    path: 'script.js',\n  },\n  {\n    contents: 'some jsx',\n    error: null,\n    ext: 'jsx',\n    head: '',\n    history: ['index.jsx'],\n    fileKey: 'indexjsx',\n    name: 'index',\n    seed: 'some jsx',\n    tail: '',\n    editableRegionBoundaries: [],\n    usesMultifileEditor: true,\n    path: 'index.jsx',\n  }\n]",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1503,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\__fixtures__\\challenges.ts",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "aa2d425f56b3cd746dc2098e1bbb6d6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.test.tsx",
    "source_type": "git_repo",
    "title": "layout-selector.test",
    "content": "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ShallowRenderer from 'react-test-renderer/shallow';\n\nimport FourOhFourPage from '../../src/pages/404';\nimport Certification from '../../src/pages/certification';\nimport Learn from '../../src/pages/learn';\nimport { createStore } from '../../src/redux/create-store';\nimport layoutSelector from './layout-selector';\n\njest.mock('../../src/analytics');\n\nconst store = createStore();\n\n// TODO: rather than testing which props passed from layoutSelector to the\n// component it renders, test that the rendered component has the expected\n// features (i.e. has a footer or not, etc.). That should be possible in\n// react-testing-library.\n\ninterface NameAndProps {\n  props: Record<string, unknown>;\n  name: string;\n}\nfunction getComponentNameAndProps(\n  elementType: React.JSXElementConstructor<never>,\n  pathname: string,\n  pageContext?: { challengeMeta?: { block?: string; superBlock?: string } }\n): NameAndProps {\n  const utils = ShallowRenderer.createRenderer();\n  const LayoutReactComponent = layoutSelector({\n    element: { type: elementType, props: {}, key: '' },\n    props: {\n      data: {},\n      location: {\n        pathname\n      },\n      pageContext,\n      params: { '*': '' },\n      path: ''\n    }\n  });\n  utils.render(<Provider store={store}>{LayoutReactComponent}</Provider>);\n  const view = utils.getRenderOutput();\n  return {\n    props: view.props.children.props as Record<string, unknown>,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    name: view.props.children.type.WrappedComponent.displayName\n    // TODO: Revisit this when react-test-renderer is replaced with\n    // react-testing-library\n  };\n}\n\nconst challengePageContext = {\n  challengeMeta: {\n    block: 'Basic HTML and HTML5',\n    superBlock: 'responsive-web-design'\n  }\n};",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4117,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.test.tsx",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6b46417f4d0356c53ce5a75e2c51afc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.test.tsx",
    "source_type": "git_repo",
    "title": "layout-selector.test",
    "content": "type: elementType, props: {}, key: '' }, props: { data: {}, location: { pathname }, pageContext, params: { '*': '' }, path: '' } }); utils.render(<Provider store={store}>{LayoutReactComponent}</Provider>); const view = utils.getRenderOutput(); return { props: view.props.children.props as Record<string, unknown>, // eslint-disable-next-line @typescript-eslint/ban-ts-comment // @ts-ignore // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment name: view.props.children.type.WrappedComponent.displayName // TODO: Revisit this when react-test-renderer is replaced with // react-testing-library }; } const challengePageContext = { challengeMeta: { block: 'Basic HTML and HTML5', superBlock: 'responsive-web-design' } };\n\ntest('Challenges should have DefaultLayout and no footer', () => {\n  const challengePath =\n    '/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements';\n  const componentObj = getComponentNameAndProps(\n    Learn,\n    challengePath,\n    challengePageContext\n  );\n  expect(componentObj.name).toEqual('DefaultLayout');\n  expect(componentObj.props.showFooter).toEqual(false);\n});\n\ntest('SuperBlock path should have DefaultLayout and footer', () => {\n  const superBlockPath = '/learn/responsive-web-design/';\n  const componentObj = getComponentNameAndProps(Learn, superBlockPath);\n  expect(componentObj.name).toEqual('DefaultLayout');\n  expect(componentObj.props.showFooter).toEqual(true);\n});\n\ntest('i18n challenge path should have DefaultLayout and no footer', () => {\n  const challengePath =\n    'espanol/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements/';\n  const componentObj = getComponentNameAndProps(\n    Learn,\n    challengePath,\n    challengePageContext\n  );\n  expect(componentObj.name).toEqual('DefaultLayout');\n  expect(componentObj.props.showFooter).toEqual(false);\n});\n\ntest('i18n superBlock path should have DefaultLayout and footer', () => {\n  const superBlockPath = '/learn/responsive-web-design/';\n  const componentObj = getComponentNameAndProps(Learn, superBlockPath);\n  expect(componentObj.name).toEqual('DefaultLayout');\n  expect(componentObj.props.showFooter).toEqual(true);\n});",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4117,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.test.tsx",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a19b4f68d3fb2f4b9ee029b4156761ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.test.tsx",
    "source_type": "git_repo",
    "title": "layout-selector.test",
    "content": "); expect(componentObj.name).toEqual('DefaultLayout'); expect(componentObj.props.showFooter).toEqual(false); }); test('SuperBlock path should have DefaultLayout and footer', () => { const superBlockPath = '/learn/responsive-web-design/'; const componentObj = getComponentNameAndProps(Learn, superBlockPath); expect(componentObj.name).toEqual('DefaultLayout'); expect(componentObj.props.showFooter).toEqual(true); }); test('i18n challenge path should have DefaultLayout and no footer', () => { const challengePath = 'espanol/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements/'; const componentObj = getComponentNameAndProps( Learn, challengePath, challengePageContext ); expect(componentObj.name).toEqual('DefaultLayout'); expect(componentObj.props.showFooter).toEqual(false); }); test('i18n superBlock path should have DefaultLayout and footer', () => { const superBlockPath = '/learn/responsive-web-design/'; const componentObj = getComponentNameAndProps(Learn, superBlockPath); expect(componentObj.name).toEqual('DefaultLayout'); expect(componentObj.props.showFooter).toEqual(true); });\n\ntest('404 page should have DefaultLayout and footer', () => {\n  const challengePath =\n    '/espanol/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements/';\n  const componentObj = getComponentNameAndProps(FourOhFourPage, challengePath);\n  expect(componentObj.name).toEqual('DefaultLayout');\n  expect(componentObj.props.showFooter).toEqual(true);\n});\n\ntest('Certification path should have CertificationLayout', () => {\n  const challengePath =\n    '/certification/mot01/javascript-algorithms-and-data-structures/';\n  const componentObj = getComponentNameAndProps(Certification, challengePath);\n  expect(componentObj.name).toEqual('CertificationLayout');\n});",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4117,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\layout-selector.test.tsx",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ef935f5dfab424e41c34565cdd02e35b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
    "source_type": "git_repo",
    "title": "challenge-page-creator",
    "content": "const path = require('path');\nconst { viewTypes } = require('../../../shared/config/challenge-types');\n\nconst backend = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/projects/backend/show.tsx'\n);\nconst classic = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/classic/show.tsx'\n);\nconst frontend = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/projects/frontend/show.tsx'\n);\nconst codeAlly = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/codeally/show.tsx'\n);\nconst intro = path.resolve(\n  __dirname,\n  '../../src/templates/Introduction/intro.tsx'\n);\nconst superBlockIntro = path.resolve(\n  __dirname,\n  '../../src/templates/Introduction/super-block-intro.tsx'\n);\nconst quiz = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/quiz/show.tsx'\n);\n\nconst exam = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/exam/show.tsx'\n);\n\nconst msTrophy = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/ms-trophy/show.tsx'\n);\n\nconst fillInTheBlank = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/fill-in-the-blank/show.tsx'\n);\n\nconst generic = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/generic/show.tsx'\n);\n\nconst examDownload = path.resolve(\n  __dirname,\n  '../../src/templates/Challenges/exam-download/show.tsx'\n);\n\nconst views = {\n  backend,\n  classic,\n  modern: classic,\n  frontend,\n  quiz,\n  codeAlly,\n  exam,\n  msTrophy,\n  fillInTheBlank,\n  generic,\n  examDownload\n};\n\nfunction getIsFirstStepInBlock(id, edges) {\n  const current = edges[id];\n  const previous = edges[id - 1];\n\nif (!previous) return true;\n  return previous.node.challenge.block !== current.node.challenge.block;\n}\n\nfunction getTemplateComponent(challengeType) {\n  return views[viewTypes[challengeType]];\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5343,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b359f9e9bd5b76fc2b8ec8e1f49fc8ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
    "source_type": "git_repo",
    "title": "challenge-page-creator",
    "content": "'../../src/templates/Challenges/exam/show.tsx' ); const msTrophy = path.resolve( __dirname, '../../src/templates/Challenges/ms-trophy/show.tsx' ); const fillInTheBlank = path.resolve( __dirname, '../../src/templates/Challenges/fill-in-the-blank/show.tsx' ); const generic = path.resolve( __dirname, '../../src/templates/Challenges/generic/show.tsx' ); const examDownload = path.resolve( __dirname, '../../src/templates/Challenges/exam-download/show.tsx' ); const views = { backend, classic, modern: classic, frontend, quiz, codeAlly, exam, msTrophy, fillInTheBlank, generic, examDownload }; function getIsFirstStepInBlock(id, edges) { const current = edges[id]; const previous = edges[id - 1]; if (!previous) return true; return previous.node.challenge.block !== current.node.challenge.block; } function getTemplateComponent(challengeType) { return views[viewTypes[challengeType]]; }\n\nexports.createChallengePages = function (\n  createPage,\n  { idToNextPathCurrentCurriculum, idToPrevPathCurrentCurriculum }\n) {\n  return function ({ node }, index, allChallengeEdges) {\n    const {\n      dashedName,\n      disableLoopProtectTests,\n      disableLoopProtectPreview,\n      certification,\n      superBlock,\n      chapter,\n      module,\n      block,\n      fields: { slug, blockHashSlug },\n      required = [],\n      template,\n      challengeType,\n      id,\n      isLastChallengeInBlock\n    } = node.challenge;\n    // TODO: challengeType === 7 and isPrivate are the same, right? If so, we\n    // should remove one of them.",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5343,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8d9e793dd5d17c402d8899610a597063",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
    "source_type": "git_repo",
    "title": "challenge-page-creator",
    "content": "true; return previous.node.challenge.block !== current.node.challenge.block; } function getTemplateComponent(challengeType) { return views[viewTypes[challengeType]]; } exports.createChallengePages = function ( createPage, { idToNextPathCurrentCurriculum, idToPrevPathCurrentCurriculum } ) { return function ({ node }, index, allChallengeEdges) { const { dashedName, disableLoopProtectTests, disableLoopProtectPreview, certification, superBlock, chapter, module, block, fields: { slug, blockHashSlug }, required = [], template, challengeType, id, isLastChallengeInBlock } = node.challenge; // TODO: challengeType === 7 and isPrivate are the same, right? If so, we // should remove one of them.\n\ncreatePage({\n      path: slug,\n      component: getTemplateComponent(challengeType),\n      context: {\n        challengeMeta: {\n          blockHashSlug,\n          dashedName,\n          certification,\n          disableLoopProtectTests,\n          disableLoopProtectPreview,\n          superBlock,\n          chapter,\n          module,\n          block,\n          isFirstStep: getIsFirstStepInBlock(index, allChallengeEdges),\n          template,\n          required,\n          isLastChallengeInBlock: isLastChallengeInBlock,\n          nextChallengePath: idToNextPathCurrentCurriculum[node.id],\n          prevChallengePath: idToPrevPathCurrentCurriculum[node.id],\n          id\n        },\n        projectPreview: getProjectPreviewConfig(\n          node.challenge,\n          allChallengeEdges\n        ),\n        id: node.id\n      }\n    });\n  };\n};\n\n// TODO: figure out a cleaner way to get the last challenge in a block. Create\n// it during the curriculum build process and attach it to the first challenge?\n// That would remove the need to analyse allChallengeEdges.\nfunction getProjectPreviewConfig(challenge, allChallengeEdges) {\n  const { block } = challenge;\n\nconst challengesInBlock = allChallengeEdges\n    .filter(({ node: { challenge } }) => challenge.block === block)\n    .map(({ node: { challenge } }) => challenge);\n  const lastChallenge = challengesInBlock[challengesInBlock.length - 1];\n  const solutionFiles = lastChallenge.solutions[0] ?? [];\n  const lastChallengeFiles = lastChallenge.challengeFiles ?? [];\n\nconst findFileByKey = (key, files) =>\n    files.find(file => file.fileKey === key);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5343,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8439b2797c2cf307edb97e4e0b4ccdd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
    "source_type": "git_repo",
    "title": "challenge-page-creator",
    "content": "attach it to the first challenge? // That would remove the need to analyse allChallengeEdges. function getProjectPreviewConfig(challenge, allChallengeEdges) { const { block } = challenge; const challengesInBlock = allChallengeEdges .filter(({ node: { challenge } }) => challenge.block === block) .map(({ node: { challenge } }) => challenge); const lastChallenge = challengesInBlock[challengesInBlock.length - 1]; const solutionFiles = lastChallenge.solutions[0] ?? []; const lastChallengeFiles = lastChallenge.challengeFiles ?? []; const findFileByKey = (key, files) => files.find(file => file.fileKey === key);\n\nconst projectPreviewChallengeFiles = lastChallengeFiles.map(file => ({\n    ...file,\n    contents:\n      findFileByKey(file.fileKey, solutionFiles)?.contents ?? file.contents\n  }));\n\nreturn {\n    challengeData: {\n      challengeType: lastChallenge.challengeType,\n      challengeFiles: projectPreviewChallengeFiles\n    }\n  };\n}\n\nexports.createBlockIntroPages = function (createPage) {\n  return function (edge) {\n    const {\n      fields: { slug },\n      frontmatter: { block },\n      id\n    } = edge.node;\n\ncreatePage({\n      path: slug,\n      component: intro,\n      context: {\n        block,\n        id\n      }\n    });\n  };\n};\n\nexports.createSuperBlockIntroPages = function (createPage) {\n  return function (edge) {\n    const {\n      fields: { slug },\n      frontmatter: { superBlock, certification, title }\n    } = edge.node;\n\nif (!certification) {\n      throw Error(\n        `superBlockIntro page, '${superBlock}' must have certification in frontmatter`\n      );\n    }\n\n// TODO: throw if it encounters an unknown certification. Also, handle\n    // coding-interview-prep. it's not a certification, but it is a superBlock.\n\ncreatePage({\n      path: slug,\n      component: superBlockIntro,\n      context: {\n        certification,\n        superBlock,\n        title\n      }\n    });\n  };\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5343,
      "relative_path": "git_repos\\freeCodeCamp\\client\\utils\\gatsby\\challenge-page-creator.js",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4a9f52057486d35b2e76ecf82c4dfeb4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\static\\the-fastest-web-page-on-the-internet\\index.html",
    "source_type": "git_repo",
    "title": "The Fastest Web Page on the Internet",
    "content": "The Fastest Web Page on the Internet\nThis is the fastest web page on the internet.\nThis is raw HTML with no CSS and no JavaScript.\nUnfortunately, this doesn't do anything.\nI guess speed isn't everything, after all.\nLearn to code more useful websites than this one",
    "metadata": {
      "file_extension": ".html",
      "file_type": "html",
      "file_size": 737,
      "relative_path": "git_repos\\freeCodeCamp\\client\\static\\the-fastest-web-page-on-the-internet\\index.html",
      "source_type": "git_repo"
    },
    "token_count": 57,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2c665e53ccb4026c92cca54584f3eb55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\static\\json\\cats.json",
    "source_type": "git_repo",
    "title": "cats",
    "content": "[\n  {\n    \"id\": 0,\n    \"imageLink\": \"https://cdn.freecodecamp.org/curriculum/legacy-json-apis-ajax/funny-cat.jpg\",\n    \"altText\": \"A white cat wearing a green, helmet shaped melon on its head. \",\n    \"codeNames\": [\n      \"Juggernaut\",\n      \"Mrs. Wallace\",\n      \"Buttercup\"\n    ]\n  },\n  {\n    \"id\": 1,\n    \"imageLink\": \"https://cdn.freecodecamp.org/curriculum/legacy-json-apis-ajax/grumpy-cat.jpg\",\n    \"altText\": \"A white cat with blue eyes, looking very grumpy. \",\n    \"codeNames\": [\n      \"Oscar\",\n      \"Scrooge\",\n      \"Tyrion\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"imageLink\": \"https://cdn.freecodecamp.org/curriculum/legacy-json-apis-ajax/mischievous-cat.jpg\",\n    \"altText\": \"A ginger cat with one eye closed and mouth in a grin-like expression. Looking very mischievous. \",\n    \"codeNames\": [\n      \"The Doctor\",\n      \"Loki\",\n      \"Joker\"\n    ]\n  }\n]",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 858,
      "relative_path": "git_repos\\freeCodeCamp\\client\\static\\json\\cats.json",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "77e4e105439f9880b603a7dd06d8c19a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\analytics\\call-ga.test.ts",
    "source_type": "git_repo",
    "title": "call-ga.test",
    "content": "import callGA, { GAevent } from './call-ga';\nimport TagManager from '.';\n\njest.mock('.', () => ({\n  dataLayer: jest.fn()\n}));\n\ndescribe('callGA function', () => {\n  it('calls TagManager dataLayer with the same arguments', () => {\n    const eventDataMock: GAevent = {\n      event: 'donation',\n      action: 'Donate Page Stripe Payment Submission',\n      duration: 'month',\n      amount: 500,\n      completed_challenges: 100,\n      completed_challenges_session: 10,\n      isSignedIn: true\n    };\n    callGA(eventDataMock);\n    expect(TagManager.dataLayer).toHaveBeenCalledWith({\n      dataLayer: eventDataMock\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 626,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\analytics\\call-ga.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 151,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b977cbd5eb76ffe1d721c6574ef20c96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\analytics\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "import TagManager from 'react-gtm-module';\n\nimport {\n  devAnalyticsId,\n  prodAnalyticsId\n} from '../../config/analytics-settings';\n\nimport envData from '../../config/env.json';\n\nconst { deploymentEnv } = envData;\n\nconst analyticsIDSelector = () => {\n  if (deploymentEnv === 'staging') return devAnalyticsId;\n  else return prodAnalyticsId;\n};\n\nconst gtmId = analyticsIDSelector();\n\nif (typeof document !== `undefined`) {\n  TagManager.initialize({ gtmId });\n}\n\nexport default TagManager;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 486,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\analytics\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 112,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "28c271193ddbf68f9320aff2729af4c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\assets\\chapter-icon.tsx",
    "source_type": "git_repo",
    "title": "chapter-icon",
    "content": "import React from 'react';\nimport { FsdChapters } from '../../../shared/config/chapters';\nimport DatabaseIcon from './icons/database';\nimport JavaScriptIcon from './icons/javascript';\nimport ReactIcon from './icons/react';\nimport ResponsiveDesign from './icons/responsive-design';\nimport FreeCodeCampIcon from './icons/freecodecamp';\nimport Html from './icons/html';\nimport Css from './icons/css';\nimport NodeIcon from './icons/node';\nimport Python from './icons/python';\nimport Graduation from './icons/graduation';\n\nconst iconMap = {\n  [FsdChapters.Welcome]: FreeCodeCampIcon,\n  [FsdChapters.Html]: Html,\n  [FsdChapters.Css]: Css,\n  [FsdChapters.Javascript]: JavaScriptIcon,\n  [FsdChapters.FrontendLibraries]: ReactIcon,\n  [FsdChapters.RelationalDatabases]: DatabaseIcon,\n  [FsdChapters.BackendJavascript]: NodeIcon,\n  [FsdChapters.Python]: Python,\n  [FsdChapters.Career]: Graduation\n};\n\ntype ChapterIconProps = {\n  chapter: FsdChapters;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function ChapterIcon(props: ChapterIconProps): JSX.Element {\n  const { chapter, ...iconProps } = props;\n  const Icon = iconMap[chapter] ?? ResponsiveDesign;\n\nreturn <Icon {...iconProps} />;\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1177,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\assets\\chapter-icon.tsx",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9fe3d06c2015e3dbb7a422d8666cb7c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\analytics\\call-ga.ts",
    "source_type": "git_repo",
    "title": "call-ga",
    "content": "import {\n  DonationAmount,\n  DonationDuration\n} from '../../../shared/config/donation-settings';\nimport { ChallengeFiles } from '../redux/prop-types';\nimport TagManager from '.';\n\ntype DonationEventAction =\n  | 'Donate Page PayPal Payment Submission'\n  | 'Donate Page Stripe Card Payment Submission'\n  | 'Donate Page Stripe Payment Submission'\n  | 'Modal PayPal Payment Submission'\n  | 'Modal Stripe Card Payment Submission'\n  | 'Modal Stripe Payment Submission'\n  | 'Certificate PayPal Payment Submission'\n  | 'Certificate Stripe Card Payment Submission'\n  | 'Certificate Stripe Payment Submission';\n\ninterface DonationEvent {\n  event: 'donation';\n  action: DonationEventAction;\n  duration: DonationDuration;\n  amount: DonationAmount;\n  completed_challenges: number;\n  completed_challenges_session: number;\n  isSignedIn: boolean;\n}\n\ntype DonationRelatedEventAction =\n  | 'Learn Donation Alert Click'\n  | 'Certification Donation Alert Click'\n  | 'Modal Become Supporter Click'\n  | 'Donate Page Patreon Payment Redirection'\n  | 'Modal Patreon Payment Redirection'\n  | 'Amount Confirmation Clicked'\n  | 'Select Amount Tab Clicked'\n  | 'Edit Amount Clicked'\n  | 'Certificate Patreon Payment Redirection';\n\ninterface DonationRelatedEvent {\n  event: 'donation_related';\n  action: DonationRelatedEventAction;\n  amount?: DonationAmount;\n}\n\ntype DonationViewEventAction =\n  | 'Displayed Block Donation Modal'\n  | 'Displayed Progress Donation Modal'\n  | 'Displayed Donate Page'\n  | 'Displayed Certificate Donation';\n\ninterface DonationViewEvent {\n  event: 'donation_view';\n  action: DonationViewEventAction;\n}\n\ninterface PageViewEvent {\n  event: 'pageview';\n  pagePath: string;\n}\n\ninterface ExperimentViewEvent {\n  event: 'experiment_viewed';\n  event_category: 'experiment';\n  experiment_id: string;\n  variation_id: number;\n}\n\ninterface ChallengeFailedEvent {\n  event: 'challenge_failed';\n  challenge_id: string;\n  challenge_path: string;\n  challenge_files: ChallengeFiles;\n}\n\ninterface UserData {\n  event: 'user_data';\n  user_id: string;\n}\n\ninterface SignIn {\n  event: 'sign_in';\n}\n\ninterface SignOut {\n  event: 'sign_out';\n  user_id: undefined;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2440,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\analytics\\call-ga.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9ba1416300cce089943cb15c7c91361f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\analytics\\call-ga.ts",
    "source_type": "git_repo",
    "title": "call-ga",
    "content": "Modal' | 'Displayed Progress Donation Modal' | 'Displayed Donate Page' | 'Displayed Certificate Donation'; interface DonationViewEvent { event: 'donation_view'; action: DonationViewEventAction; } interface PageViewEvent { event: 'pageview'; pagePath: string; } interface ExperimentViewEvent { event: 'experiment_viewed'; event_category: 'experiment'; experiment_id: string; variation_id: number; } interface ChallengeFailedEvent { event: 'challenge_failed'; challenge_id: string; challenge_path: string; challenge_files: ChallengeFiles; } interface UserData { event: 'user_data'; user_id: string; } interface SignIn { event: 'sign_in'; } interface SignOut { event: 'sign_out'; user_id: undefined; }\n\nexport type GAevent =\n  | DonationViewEvent\n  | DonationEvent\n  | DonationRelatedEvent\n  | PageViewEvent\n  | ExperimentViewEvent\n  | ChallengeFailedEvent\n  | UserData\n  | SignOut\n  | SignIn;\n\nexport default function callGA(payload: GAevent) {\n  TagManager.dataLayer({\n    dataLayer: payload\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2440,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\analytics\\call-ga.ts",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "05ef0762a025ace986d62e8e67b28a71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\schema\\trending-schema.ts",
    "source_type": "git_repo",
    "title": "trending-schema",
    "content": "import Joi from 'joi'; const schema = Joi object() keys({\n  article0title: Joi string() required(),\n  article0link: Joi string() uri({ scheme: 'https' }) required(),\n  article1title: Joi string() required(),\n  article1link: Joi string() uri({ scheme: 'https' }) required(),\n  article2title: Joi string() required(),\n  article2link: Joi string() uri({ scheme: 'https' }) required(),\n  article3title: Joi string() required(),\n  article3link: Joi string() uri({ scheme: 'https' }) required(),\n  article4title: Joi string() required(),\n  article4link: Joi string() uri({ scheme: 'https' }) required(),\n  article5title: Joi string() required(),\n  article5link: Joi string() uri({ scheme: 'https' }) required(),\n  article6title: Joi string() required(),\n  article6link: Joi string() uri({ scheme: 'https' }) required(),\n  article7title: Joi string() required(),\n  article7link: Joi string() uri({ scheme: 'https' }) required(),\n  article8title: Joi string() required(),\n  article8link: Joi string() uri({ scheme: 'https' }) required(),\n  article9title: Joi string() required(),\n  article9link: Joi string() uri({ scheme: 'https' }) required(),\n  article10title: Joi string() required(),\n  article10link: Joi string() uri({ scheme: 'https' }) required(),\n  article11title: Joi string() required(),\n  article11link: Joi string() uri({ scheme: 'https' }) required(),\n  article12title: Joi string() required(),\n  article12link: Joi string() uri({ scheme: 'https' }) required(),\n  article13title: Joi string() required(),\n  article13link: Joi string() uri({ scheme: 'https' }) required(),\n  article14title: Joi string() required(),\n  article14link: Joi string() uri({ scheme: 'https' }) required(),\n  article15title: Joi string() required(),\n  article15link: Joi string() uri({ scheme: 'https' }) required(),\n  article16title: Joi string() required(),\n  article16link: Joi string() uri({ scheme: 'https' }) required(),\n  article17title: Joi string()",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3493,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\schema\\trending-schema.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6cbbde6e8c98a3349697993277921a9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\schema\\trending-schema.ts",
    "source_type": "git_repo",
    "title": "trending-schema",
    "content": "required(), article11title: Joi string() required(), article11link: Joi string() uri({ scheme: 'https' }) required(), article12title: Joi string() required(), article12link: Joi string() uri({ scheme: 'https' }) required(), article13title: Joi string() required(), article13link: Joi string() uri({ scheme: 'https' }) required(), article14title: Joi string() required(), article14link: Joi string() uri({ scheme: 'https' }) required(), article15title: Joi string() required(), article15link: Joi string() uri({ scheme: 'https' }) required(), article16title: Joi string() required(), article16link: Joi string() uri({ scheme: 'https' }) required(), article17title: Joi string()required(),\n  article17link: Joi string() uri({ scheme: 'https' }) required(),\n  article18title: Joi string() required(),\n  article18link: Joi string() uri({ scheme: 'https' }) required(),\n  article19title: Joi string() required(),\n  article19link: Joi string() uri({ scheme: 'https' }) required(),\n  article20title: Joi string() required(),\n  article20link: Joi string() uri({ scheme: 'https' }) required(),\n  article21title: Joi string() required(),\n  article21link: Joi string() uri({ scheme: 'https' }) required(),\n  article22title: Joi string() required(),\n  article22link: Joi string() uri({ scheme: 'https' }) required(),\n  article23title: Joi string() required(),\n  article23link: Joi string() uri({ scheme: 'https' }) required(),\n  article24title: Joi string() required(),\n  article24link: Joi string() uri({ scheme: 'https' }) required(),\n  article25title: Joi string() required(),\n  article25link: Joi string() uri({ scheme: 'https' }) required(),\n  article26title: Joi string() required(),\n  article26link: Joi string() uri({ scheme: 'https' }) required(),\n  article27title: Joi string() required(),\n  article27link: Joi string() uri({ scheme: 'https' }) required(),\n  article28title: Joi string() required(),\n  article28link: Joi string() uri({ scheme: 'https' }) required(),\n  article29title: Joi",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3493,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\schema\\trending-schema.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e9b04dbd2e27776c1f94eb709f04b10e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tools\\schema\\trending-schema.ts",
    "source_type": "git_repo",
    "title": "trending-schema",
    "content": "}) required(), article23title: Joi string() required(), article23link: Joi string() uri({ scheme: 'https' }) required(), article24title: Joi string() required(), article24link: Joi string() uri({ scheme: 'https' }) required(), article25title: Joi string() required(), article25link: Joi string() uri({ scheme: 'https' }) required(), article26title: Joi string() required(), article26link: Joi string() uri({ scheme: 'https' }) required(), article27title: Joi string() required(), article27link: Joi string() uri({ scheme: 'https' }) required(), article28title: Joi string() required(), article28link: Joi string() uri({ scheme: 'https' }) required(), article29title: Joistring() required(),\n  article29link: Joi string() uri({ scheme: 'https' }) required()\n});\n\nexport const trendingSchemaValidator = (\n  trendingObj: Record<string, string>\n): Joi.ValidationResult => {\n  return schema.validate(trendingObj);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3493,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tools\\schema\\trending-schema.ts",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7611b625de8951d58cd01713467f1557",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\assets\\superblock-icon.tsx",
    "source_type": "git_repo",
    "title": "superblock-icon",
    "content": "import React from 'react';\nimport { SuperBlocks } from '../../../shared/config/curriculum';\nimport APIIcon from './icons/api';\nimport D3Icon from './icons/d3';\nimport DatabaseIcon from './icons/database';\nimport JavaScriptIcon from './icons/javascript';\nimport ReactIcon from './icons/react';\nimport TensorflowIcon from './icons/tensorflow';\nimport Algorithm from './icons/algorithm';\nimport Analytics from './icons/analytics';\nimport Clipboard from './icons/clipboard';\nimport PythonIcon from './icons/python';\nimport ResponsiveDesign from './icons/responsive-design';\nimport Shield from './icons/shield';\nimport VikingHelmet from './icons/viking-helmet';\nimport Graduation from './icons/graduation';\nimport CollegeAlgebra from './icons/college-algebra';\nimport CSharpLogo from './icons/c-sharp-logo';\nimport A2EnglishIcon from './icons/a2-english';\nimport B1EnglishIcon from './icons/b1-english';\nimport RosettaCodeIcon from './icons/rosetta-code';\nimport Code from './icons/code';",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 2595,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\assets\\superblock-icon.tsx",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3ed4fdbfe38fa96f2d2fc2374389a341",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\assets\\superblock-icon.tsx",
    "source_type": "git_repo",
    "title": "superblock-icon",
    "content": "import D3Icon from './icons/d3'; import DatabaseIcon from './icons/database'; import JavaScriptIcon from './icons/javascript'; import ReactIcon from './icons/react'; import TensorflowIcon from './icons/tensorflow'; import Algorithm from './icons/algorithm'; import Analytics from './icons/analytics'; import Clipboard from './icons/clipboard'; import PythonIcon from './icons/python'; import ResponsiveDesign from './icons/responsive-design'; import Shield from './icons/shield'; import VikingHelmet from './icons/viking-helmet'; import Graduation from './icons/graduation'; import CollegeAlgebra from './icons/college-algebra'; import CSharpLogo from './icons/c-sharp-logo'; import A2EnglishIcon from './icons/a2-english'; import B1EnglishIcon from './icons/b1-english'; import RosettaCodeIcon from './icons/rosetta-code'; import Code from './icons/code';\n\nconst iconMap = {\n  [SuperBlocks.RespWebDesignNew]: ResponsiveDesign,\n  [SuperBlocks.RespWebDesign]: ResponsiveDesign,\n  [SuperBlocks.JsAlgoDataStruct]: JavaScriptIcon,\n  [SuperBlocks.JsAlgoDataStructNew]: JavaScriptIcon,\n  [SuperBlocks.FrontEndDevLibs]: ReactIcon,\n  [SuperBlocks.DataVis]: D3Icon,\n  [SuperBlocks.BackEndDevApis]: APIIcon,\n  [SuperBlocks.RelationalDb]: DatabaseIcon,\n  [SuperBlocks.QualityAssurance]: Clipboard,\n  [SuperBlocks.SciCompPy]: PythonIcon,\n  [SuperBlocks.DataAnalysisPy]: Analytics,\n  [SuperBlocks.InfoSec]: Shield,\n  [SuperBlocks.MachineLearningPy]: TensorflowIcon,\n  [SuperBlocks.CodingInterviewPrep]: Algorithm,\n  [SuperBlocks.TheOdinProject]: VikingHelmet,\n  [SuperBlocks.ProjectEuler]: Graduation,\n  [SuperBlocks.CollegeAlgebraPy]: CollegeAlgebra,\n  [SuperBlocks.FoundationalCSharp]: CSharpLogo,\n  [SuperBlocks.FullStackDeveloper]: Code,\n  [SuperBlocks.A2English]: A2EnglishIcon,\n  [SuperBlocks.B1English]: B1EnglishIcon,\n  [SuperBlocks.A2Spanish]: A2EnglishIcon,\n  [SuperBlocks.A2Chinese]: A2EnglishIcon,\n  [SuperBlocks.A1Chinese]: A2EnglishIcon,\n  [SuperBlocks.RosettaCode]: RosettaCodeIcon,\n  [SuperBlocks.PythonForEverybody]: PythonIcon,\n  [SuperBlocks.BasicHtml]: Code,\n  [SuperBlocks.SemanticHtml]: Code,\n  [SuperBlocks.DevPlayground]: Code\n};",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 2595,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\assets\\superblock-icon.tsx",
      "source_type": "git_repo"
    },
    "token_count": 544,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d8ba751a3dcb008a681456d681827e4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\assets\\superblock-icon.tsx",
    "source_type": "git_repo",
    "title": "superblock-icon",
    "content": "'./icons/a2-english'; import B1EnglishIcon from './icons/b1-english'; import RosettaCodeIcon from './icons/rosetta-code'; import Code from './icons/code'; const iconMap = { [SuperBlocks.RespWebDesignNew]: ResponsiveDesign, [SuperBlocks.RespWebDesign]: ResponsiveDesign, [SuperBlocks.JsAlgoDataStruct]: JavaScriptIcon, [SuperBlocks.JsAlgoDataStructNew]: JavaScriptIcon, [SuperBlocks.FrontEndDevLibs]: ReactIcon, [SuperBlocks.DataVis]: D3Icon, [SuperBlocks.BackEndDevApis]: APIIcon, [SuperBlocks.RelationalDb]: DatabaseIcon, [SuperBlocks.QualityAssurance]: Clipboard, [SuperBlocks.SciCompPy]: PythonIcon, [SuperBlocks.DataAnalysisPy]: Analytics, [SuperBlocks.InfoSec]: Shield, [SuperBlocks.MachineLearningPy]: TensorflowIcon, [SuperBlocks.CodingInterviewPrep]: Algorithm, [SuperBlocks.TheOdinProject]: VikingHelmet, [SuperBlocks.ProjectEuler]: Graduation, [SuperBlocks.CollegeAlgebraPy]: CollegeAlgebra, [SuperBlocks.FoundationalCSharp]: CSharpLogo, [SuperBlocks.FullStackDeveloper]: Code, [SuperBlocks.A2English]: A2EnglishIcon, [SuperBlocks.B1English]: B1EnglishIcon, [SuperBlocks.A2Spanish]: A2EnglishIcon, [SuperBlocks.A2Chinese]: A2EnglishIcon, [SuperBlocks.A1Chinese]: A2EnglishIcon, [SuperBlocks.RosettaCode]: RosettaCodeIcon, [SuperBlocks.PythonForEverybody]: PythonIcon, [SuperBlocks.BasicHtml]: Code, [SuperBlocks.SemanticHtml]: Code, [SuperBlocks.DevPlayground]: Code };\n\ntype SuperBlockIconProps = {\n  superBlock: SuperBlocks;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function SuperBlockIcon(props: SuperBlockIconProps): JSX.Element {\n  const { superBlock, ...iconProps } = props;\n  const Icon = iconMap[superBlock] ? iconMap[superBlock] : ResponsiveDesign;\n\nreturn <Icon {...iconProps} />;\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 2595,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\assets\\superblock-icon.tsx",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b115fd5c925d8ebf0de34e3cd8d4ba18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-profile-or-four-oh-four.tsx",
    "source_type": "git_repo",
    "title": "show-profile-or-four-oh-four",
    "content": "import { isEmpty } from 'lodash-es';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { isBrowser } from '../../utils/index';\nimport FourOhFour from '../components/FourOhFour';\nimport Loader from '../components/helpers/loader';\nimport Profile from '../components/profile/profile';\nimport { fetchProfileForUser } from '../redux/actions';\nimport {\n  userSelector,\n  userProfileFetchStateSelector,\n  createUserByNameSelector\n} from '../redux/selectors';\nimport type { User } from '../redux/prop-types';\nimport { Socials } from '../components/profile/components/internet';\n\ninterface ShowProfileOrFourOhFourProps {\n  fetchProfileForUser: (username: string) => void;\n  updateMyPortfolio: () => void;\n  submitNewAbout: () => void;\n  updateMySocials: (formValues: Socials) => void;\n  isSessionUser: boolean;\n  maybeUser?: string;\n  requestedUser: User | null;\n  showLoading: boolean;\n}\n\nconst makeMapStateToProps =\n  () =>\n  (state: unknown, { maybeUser = '' }) => {\n    const username = maybeUser.toLowerCase();\n    const requestedUser = (\n      createUserByNameSelector as (\n        maybeUser: string\n      ) => (state: unknown) => User | null\n    )(username)(state);\n    const sessionUser = userSelector(state) as User | null;\n    const isSessionUser = username === sessionUser?.username;\n    const fetchState = userProfileFetchStateSelector(state) as {\n      pending: boolean;\n    };\n\nreturn {\n      requestedUser,\n      isSessionUser,\n      showLoading: fetchState.pending\n    };\n  };\n\nconst mapDispatchToProps: {\n  fetchProfileForUser: ShowProfileOrFourOhFourProps['fetchProfileForUser'];\n} = {\n  fetchProfileForUser\n};\n\nfunction ShowProfileOrFourOhFour({\n  requestedUser,\n  maybeUser,\n  fetchProfileForUser,\n  isSessionUser,\n  showLoading\n}: ShowProfileOrFourOhFourProps) {\n  useEffect(() => {\n    // If the user is not already in the store, fetch it\n    if (isEmpty(requestedUser) && maybeUser) {\n      fetchProfileForUser(maybeUser);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nif (!isBrowser()) {\n    return null;\n  }",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 2408,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-profile-or-four-oh-four.tsx",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e48b0d4c64184a12f4d960cb0f6ecf65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-profile-or-four-oh-four.tsx",
    "source_type": "git_repo",
    "title": "show-profile-or-four-oh-four",
    "content": "const isSessionUser = username === sessionUser?.username; const fetchState = userProfileFetchStateSelector(state) as { pending: boolean; }; return { requestedUser, isSessionUser, showLoading: fetchState.pending }; }; const mapDispatchToProps: { fetchProfileForUser: ShowProfileOrFourOhFourProps['fetchProfileForUser']; } = { fetchProfileForUser }; function ShowProfileOrFourOhFour({ requestedUser, maybeUser, fetchProfileForUser, isSessionUser, showLoading }: ShowProfileOrFourOhFourProps) { useEffect(() => { // If the user is not already in the store, fetch it if (isEmpty(requestedUser) && maybeUser) { fetchProfileForUser(maybeUser); } // eslint-disable-next-line react-hooks/exhaustive-deps }, []); if (!isBrowser()) { return null; }\n\nreturn isEmpty(requestedUser) ? (\n    showLoading ? (\n      <Loader fullScreen={true} />\n    ) : (\n      <FourOhFour />\n    )\n  ) : (\n    <Profile isSessionUser={isSessionUser} user={requestedUser} />\n  );\n}\n\nexport default connect(\n  makeMapStateToProps,\n  mapDispatchToProps\n)(ShowProfileOrFourOhFour);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 2408,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-profile-or-four-oh-four.tsx",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "50aab93f9443b0b1b452f2124113d49f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
    "source_type": "git_repo",
    "title": "show-daily-coding-challenge",
    "content": "import React, { useEffect, useState } from 'react';\nimport { useParams } from '@gatsbyjs/reach-router';\nimport store from 'store';\nimport ShowClassic from '../templates/Challenges/classic/show';\nimport { Loader } from '../components/helpers';\nimport {\n  DailyCodingChallengeLanguages,\n  DailyCodingChallengeNode,\n  DailyCodingChallengePageContext\n} from '../redux/prop-types';\nimport DailyCodingChallengeNotFound from '../components/daily-coding-challenge/not-found';\nimport FourOhFour from '../components/FourOhFour';\nimport { apiLocation, showDailyCodingChallenges } from '../../config/env.json';\nimport { isValidDateString } from '../components/daily-coding-challenge/helpers';\nimport {\n  validateDailyCodingChallengeSchema,\n  type DailyCodingChallengeFromDb\n} from '../utils/daily-coding-challenge-validator';\n\ninterface DailyCodingChallengeLanguageData {\n  data: {\n    challengeNode: DailyCodingChallengeNode;\n  };\n  pageContext: DailyCodingChallengePageContext;\n}\n\ninterface DailyCodingChallengeDataFormatted {\n  javascript: DailyCodingChallengeLanguageData;\n  python: DailyCodingChallengeLanguageData;\n}\n\n// This is not included in the data from the DB (Daily Challenge API) - so we add it in\nfunction formatDescription(str: string) {\n  return `<section id=\"description\">\\n${str}\\n</section>`;\n}\n\nfunction formatChallengeData({\n  date,\n  id,\n  challengeNumber,\n  title,\n  description,\n  javascript,\n  python\n}: DailyCodingChallengeFromDb) {\n  const baseChallengeProps = {\n    date,\n    id,\n    challengeNumber,\n    title,\n    description: formatDescription(description),\n    superBlock: 'daily-coding-challenge',\n    block: 'daily-coding-challenge',\n    usesMultifileEditor: true,\n\n// props to satisfy the show classic component\n    instructions: '',\n    demoType: null,\n    hooks: undefined,\n    hasEditableBoundaries: false,\n    forumTopicId: undefined,\n    notes: '',\n    videoUrl: undefined,\n    translationPending: false\n  };\n\nconst pageContext = {\n    challengeMeta: {\n      id,\n      superBlock: 'daily-coding-challenge',\n      block: 'daily-coding-challenge',\n      disableLoopProtectTests: true,",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6459,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "3079a463358db48881adf0e6c75b23b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
    "source_type": "git_repo",
    "title": "show-daily-coding-challenge",
    "content": "it in function formatDescription(str: string) { return `<section id=\"description\">\\n${str}\\n</section>`; } function formatChallengeData({ date, id, challengeNumber, title, description, javascript, python }: DailyCodingChallengeFromDb) { const baseChallengeProps = { date, id, challengeNumber, title, description: formatDescription(description), superBlock: 'daily-coding-challenge', block: 'daily-coding-challenge', usesMultifileEditor: true, // props to satisfy the show classic component instructions: '', demoType: null, hooks: undefined, hasEditableBoundaries: false, forumTopicId: undefined, notes: '', videoUrl: undefined, translationPending: false }; const pageContext = { challengeMeta: { id, superBlock: 'daily-coding-challenge', block: 'daily-coding-challenge', disableLoopProtectTests: true,\n\n// props to satisfy the show classic component\n      isFirstStep: false,\n      nextChallegePath: undefined,\n      prevChallengePath: undefined,\n      disableLoopProtectPreview: false\n    },\n\n// props to satisfy the show classic component\n    projectPreview: {\n      challengeData: undefined\n    }\n  };",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6459,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "8297f3fee047772303378878a73c5148",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
    "source_type": "git_repo",
    "title": "show-daily-coding-challenge",
    "content": "formatDescription(description), superBlock: 'daily-coding-challenge', block: 'daily-coding-challenge', usesMultifileEditor: true, // props to satisfy the show classic component instructions: '', demoType: null, hooks: undefined, hasEditableBoundaries: false, forumTopicId: undefined, notes: '', videoUrl: undefined, translationPending: false }; const pageContext = { challengeMeta: { id, superBlock: 'daily-coding-challenge', block: 'daily-coding-challenge', disableLoopProtectTests: true, // props to satisfy the show classic component isFirstStep: false, nextChallegePath: undefined, prevChallengePath: undefined, disableLoopProtectPreview: false }, // props to satisfy the show classic component projectPreview: { challengeData: undefined } };\n\nconst props = {\n    javascript: {\n      data: {\n        challengeNode: {\n          challenge: {\n            ...baseChallengeProps,\n            helpCategory: 'JavaScript',\n            challengeType: 28,\n            fields: {\n              blockName: 'daily-coding-challenge',\n              tests: javascript.tests\n            },\n            challengeFiles: [\n              {\n                name: 'script',\n                ext: 'js',\n                contents: javascript.challengeFiles[0].contents,\n                head: '',\n                tail: '',\n                path: '',\n                history: ['script.js'],\n                fileKey: 'scriptjs'\n              }\n            ]\n          }\n        }\n      },\n      pageContext\n    },\n    python: {\n      data: {\n        challengeNode: {\n          challenge: {\n            ...baseChallengeProps,\n            helpCategory: 'Python',\n            challengeType: 29,\n            fields: {\n              blockName: 'daily-coding-challenge',\n              tests: python.tests\n            },\n            challengeFiles: [\n              {\n                fileKey: 'mainpy',\n                ext: 'py',\n                name: 'main',\n                contents: python.challengeFiles[0].contents,\n                head: '',\n                path: '',\n                tail: '',\n                editableRegionBoundaries: [],\n                history: ['main.py']\n              }\n            ]\n          }\n        }\n      },\n      pageContext\n    }\n  };\n\nreturn props;\n}\n\nfunction ShowDailyCodingChallenge(): JSX.Element {\n  const { date } = useParams<{ date?: string }>();",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6459,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "39c877de32a8a08af64b18a648a2ecbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
    "source_type": "git_repo",
    "title": "show-daily-coding-challenge",
    "content": "history: ['script.js'], fileKey: 'scriptjs' } ] } } }, pageContext }, python: { data: { challengeNode: { challenge: { ...baseChallengeProps, helpCategory: 'Python', challengeType: 29, fields: { blockName: 'daily-coding-challenge', tests: python.tests }, challengeFiles: [ { fileKey: 'mainpy', ext: 'py', name: 'main', contents: python.challengeFiles[0].contents, head: '', path: '', tail: '', editableRegionBoundaries: [], history: ['main.py'] } ] } } }, pageContext } }; return props; } function ShowDailyCodingChallenge(): JSX.Element { const { date } = useParams<{ date?: string }>();\n\nconst initLanguage =\n    (store.get(\n      'dailyCodingChallengeLanguage'\n    ) as DailyCodingChallengeLanguages) ?? 'javascript';\n\nconst [isLoading, setIsLoading] = useState(true);\n  const [challengeFound, setChallengeFound] = useState(false);\n  const [challengeProps, setChallengeProps] =\n    useState<null | DailyCodingChallengeDataFormatted>(null);\n  const [dailyCodingChallengeLanguage, setDailyCodingChallengeLanguage] =\n    useState<DailyCodingChallengeLanguages>(initLanguage);\n\nconst fetchChallenge = async (date: string) => {\n    try {\n      const response = await fetch(\n        `${apiLocation}/daily-coding-challenge/date/${date}`\n      );\n      const challengeData = await response.json();\n\nif (challengeData) {\n        const validDailyCodingChallenge = validateDailyCodingChallengeSchema(\n          challengeData as DailyCodingChallengeFromDb\n        );\n\nif ('error' in validDailyCodingChallenge) {\n          throw new Error(\n            `Challenge data validation failed: ${validDailyCodingChallenge.error?.message || 'Unknown validation error'}`\n          );\n        }\n\nconst formattedChallengeData = formatChallengeData(\n          challengeData as DailyCodingChallengeFromDb\n        ) as DailyCodingChallengeDataFormatted;\n\nsetChallengeProps(formattedChallengeData);\n        setChallengeFound(true);\n      } else {\n        setChallengeFound(false);\n      }\n    } catch (error) {\n      setChallengeFound(false);\n      console.error('Error fetching data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6459,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3e2ba775717520ef177dc87cabbd6a17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
    "source_type": "git_repo",
    "title": "show-daily-coding-challenge",
    "content": "try { const response = await fetch( `${apiLocation}/daily-coding-challenge/date/${date}` ); const challengeData = await response.json(); if (challengeData) { const validDailyCodingChallenge = validateDailyCodingChallengeSchema( challengeData as DailyCodingChallengeFromDb ); if ('error' in validDailyCodingChallenge) { throw new Error( `Challenge data validation failed: ${validDailyCodingChallenge.error?.message || 'Unknown validation error'}` ); } const formattedChallengeData = formatChallengeData( challengeData as DailyCodingChallengeFromDb ) as DailyCodingChallengeDataFormatted; setChallengeProps(formattedChallengeData); setChallengeFound(true); } else { setChallengeFound(false); } } catch (error) { setChallengeFound(false); console.error('Error fetching data:', error); } finally { setIsLoading(false); } };\n\nuseEffect(() => {\n    // If date is invalid, stop loading/fetching and show the not found page\n    if (!date || !isValidDateString(date)) {\n      setIsLoading(false);\n      setChallengeFound(false);\n      return;\n    }\n\nvoid fetchChallenge(date);\n  }, [date]);\n\nif (!showDailyCodingChallenges) {\n    return <FourOhFour />;\n  }\n\nif (isLoading) return <Loader />;\n\nif (!challengeFound || !challengeProps)\n    return <DailyCodingChallengeNotFound />;\n\nreturn (\n    <ShowClassic\n      isDailyCodingChallenge={true}\n      dailyCodingChallengeLanguage={dailyCodingChallengeLanguage}\n      setDailyCodingChallengeLanguage={setDailyCodingChallengeLanguage}\n      {...challengeProps[dailyCodingChallengeLanguage]}\n    />\n  );\n}\n\nShowDailyCodingChallenge.displayName = 'ShowDailyCodingChallenge';\n\nexport default ShowDailyCodingChallenge;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6459,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-daily-coding-challenge.tsx",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "540ff1632da6a46b0af25c859c2544c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.test.tsx",
    "source_type": "git_repo",
    "title": "show-settings.test",
    "content": "/* eslint-disable */\n// @ts-nocheck Likely need to not use ShallowRenderer\nimport React from 'react';\nimport ShallowRenderer from 'react-test-renderer/shallow';\nimport envData from '../../config/env.json';\n\nimport { ShowSettings } from './show-settings';\n\nconst { apiLocation } = envData as Record<string, string>;\n\njest.mock('../analytics');\n\ndescribe('<ShowSettings />', () => {\n  it('renders to the DOM when user is logged in', () => {\n    const shallow = new ShallowRenderer();\n    shallow.render(<ShowSettings {...loggedInProps} />);\n    expect(navigate).toHaveBeenCalledTimes(0);\n    const result = shallow.getRenderOutput();\n    expect(result.type.toString()).toBe('Symbol(react.fragment)');\n    // Renders Helmet component rather than Loader\n    expect(result.props.children[0].props.title).toEqual(\n      'buttons.settings | freeCodeCamp.org'\n    );\n  });\n\nit('redirects to sign in page when user is not logged in', () => {\n    const shallow = new ShallowRenderer();\n    shallow.render(<ShowSettings {...loggedOutProps} />);\n    expect(navigate).toHaveBeenCalledTimes(1);\n    expect(navigate).toHaveBeenCalledWith(`${apiLocation}/signin`);\n    const result = shallow.getRenderOutput();\n    // Renders Loader rather than ShowSettings\n    expect(result.type.displayName).toBe('Loader');\n  });\n});\n\nconst navigate = jest.fn();\nconst loggedInProps = {\n  createFlashMessage: jest.fn(),\n  hardGoTo: jest.fn(),\n  isSignedIn: true,\n  navigate: navigate,\n  showLoading: false,\n  submitNewAbout: jest.fn(),\n  toggleTheme: jest.fn(),\n  updateSocials: jest.fn(),\n  updateIsHonest: jest.fn(),\n  updatePortfolio: jest.fn(),\n  updateQuincyEmail: jest.fn(),\n  user: {\n    about: '',\n    completedChallenges: []\n  },\n  verifyCert: jest.fn()\n};\nconst loggedOutProps = { ...loggedInProps };\nloggedOutProps.isSignedIn = false;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1818,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.test.tsx",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5cb50db886dc43f02fc8283be8269fc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
    "source_type": "git_repo",
    "title": "show-project-links",
    "content": "import { find } from 'lodash-es';\nimport React, { useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Table, Spacer } from '@freecodecamp/ui';\n\nimport { Link } from '../components/helpers';\nimport ProjectModal from '../components/SolutionViewer/project-modal';\nimport type {\n  ChallengeData,\n  CompletedChallenge,\n  User\n} from '../redux/prop-types';\nimport { certsToProjects } from '../../config/cert-and-project-map';\n\nimport { SolutionDisplayWidget } from '../components/solution-display-widget';\nimport ProjectPreviewModal from '../templates/Challenges/components/project-preview-modal';\nimport ExamResultsModal from '../components/SolutionViewer/exam-results-modal';\n\nimport { openModal } from '../templates/Challenges/redux/actions';\n\nimport { regenerateMissingProperties } from '../../../shared/utils/polyvinyl';\nimport '../components/layouts/project-links.css';\nimport { Certification } from '../../../shared/config/certification-settings';\ninterface ShowProjectLinksProps {\n  certSlug: Certification;\n  name: string;\n  user: User;\n  openModal: (arg: string) => void;\n}\n\ntype SolutionState = {\n  projectTitle: string;\n  completedChallenge: CompletedChallenge | null;\n  showCode: boolean;\n};\n\nconst initSolutionState: SolutionState = {\n  projectTitle: '',\n  completedChallenge: null,\n  showCode: false\n};\n\nconst mapDispatchToProps = {\n  openModal\n};\n\nconst ShowProjectLinks = (props: ShowProjectLinksProps): JSX.Element => {\n  const [solutionState, setSolutionState] = useState(initSolutionState);\n\nconst handleSolutionModalHide = () => setSolutionState(initSolutionState);\n\nconst { t } = useTranslation();\n\nconst getProjectSolution = (projectId: string, projectTitle: string) => {\n    const {\n      user: { completedChallenges },\n      openModal\n    } = props;\n    const completedProject = find(\n      completedChallenges,\n      ({ id }) => projectId === id\n    );\n\nif (!completedProject) {\n      return null;\n    }\n\nconst showUserCode = () =>\n      setSolutionState({\n        projectTitle,\n        completedChallenge: completedProject,\n        showCode: true\n      });",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 7059,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8ee82a63ef937d46bcbea5b9ec54b9b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
    "source_type": "git_repo",
    "title": "show-project-links",
    "content": "}; const ShowProjectLinks = (props: ShowProjectLinksProps): JSX.Element => { const [solutionState, setSolutionState] = useState(initSolutionState); const handleSolutionModalHide = () => setSolutionState(initSolutionState); const { t } = useTranslation(); const getProjectSolution = (projectId: string, projectTitle: string) => { const { user: { completedChallenges }, openModal } = props; const completedProject = find( completedChallenges, ({ id }) => projectId === id ); if (!completedProject) { return null; } const showUserCode = () => setSolutionState({ projectTitle, completedChallenge: completedProject, showCode: true });\n\nconst showProjectPreview = () => {\n      setSolutionState({\n        projectTitle,\n        completedChallenge: completedProject,\n        showCode: false\n      });\n      openModal('projectPreview');\n    };\n\nconst showExamResults = () => {\n      setSolutionState({\n        projectTitle,\n        completedChallenge: completedProject,\n        showCode: false\n      });\n      openModal('examResults');\n    };\n\nreturn (\n      <SolutionDisplayWidget\n        completedChallenge={completedProject}\n        projectTitle={projectTitle}\n        displayContext='certification'\n        showUserCode={showUserCode}\n        showProjectPreview={showProjectPreview}\n        showExamResults={showExamResults}\n      ></SolutionDisplayWidget>\n    );\n  };\n\nconst ProjectsFor = ({ certSlug }: { certSlug: Certification }) => {\n    if (certSlug === Certification.LegacyFullStack) {\n      const certs = [\n        { name: Certification.RespWebDesign },\n        { name: Certification.JsAlgoDataStruct },\n        { name: Certification.LegacyFrontEnd },\n        { name: Certification.LegacyDataVis },\n        { name: Certification.BackEndDevApis },\n        { name: Certification.LegacyInfoSecQa }\n      ] as const;\n\nreturn (\n        <>\n          {certs.map((cert, ind) => {\n            const certLocation = `/certification/${username}/${cert.name}`;\n\nreturn (\n              <tr key={ind}>\n                <td>\n                  <Link className='project-link' to={certLocation} external>\n                    {t(`certification.title.${cert.name}`)}\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </>\n      );\n    }",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 7059,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "8aa32a130b4c9905bd40e98cede0ca20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
    "source_type": "git_repo",
    "title": "show-project-links",
    "content": "ProjectsFor = ({ certSlug }: { certSlug: Certification }) => { if (certSlug === Certification.LegacyFullStack) { const certs = [ { name: Certification.RespWebDesign }, { name: Certification.JsAlgoDataStruct }, { name: Certification.LegacyFrontEnd }, { name: Certification.LegacyDataVis }, { name: Certification.BackEndDevApis }, { name: Certification.LegacyInfoSecQa } ] as const; return ( <> {certs.map((cert, ind) => { const certLocation = `/certification/${username}/${cert.name}`; return ( <tr key={ind}> <td> <Link className='project-link' to={certLocation} external> {t(`certification.title.${cert.name}`)} </Link> </td> </tr> ); })} </> ); }\n\nconst projects = certsToProjects[certSlug];\n    return (\n      <>\n        {projects.map(({ link, title, id }) => (\n          <tr key={id}>\n            <td className='col-xs-8'>\n              <Link to={link}>\n                {t(`certification.projects.title.${title}`, title)}\n              </Link>\n            </td>\n            <td className='col-xs-4'>{getProjectSolution(id, title)}</td>\n          </tr>\n        ))}\n      </>\n    );\n  };\n\nconst {\n    certSlug,\n    name,\n    user: { username }\n  } = props;\n  const { completedChallenge, showCode, projectTitle } = solutionState;\n  const examResults = completedChallenge?.examResults;\n\nconst getCertHeading = (cert: Certification) => {\n    if (cert === Certification.LegacyFullStack) {\n      return 'certification.project.heading-legacy-full-stack';\n    } else if (cert === Certification.FoundationalCSharp) {\n      return 'certification.project.heading-exam';\n    } else {\n      return 'certification.project.heading';\n    }\n  };\n\nconst challengeData: ChallengeData | null = completedChallenge\n    ? {\n        ...completedChallenge,\n        // // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        challengeFiles:\n          completedChallenge?.challengeFiles?.map(\n            regenerateMissingProperties\n          ) ?? null\n      }\n    : null;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 7059,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "9da20bdda9dfef54cde50cb7352a42e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
    "source_type": "git_repo",
    "title": "show-project-links",
    "content": "const { certSlug, name, user: { username } } = props; const { completedChallenge, showCode, projectTitle } = solutionState; const examResults = completedChallenge?.examResults; const getCertHeading = (cert: Certification) => { if (cert === Certification.LegacyFullStack) { return 'certification.project.heading-legacy-full-stack'; } else if (cert === Certification.FoundationalCSharp) { return 'certification.project.heading-exam'; } else { return 'certification.project.heading'; } }; const challengeData: ChallengeData | null = completedChallenge ? { ...completedChallenge, // // eslint-disable-next-line @typescript-eslint/no-unsafe-argument challengeFiles: completedChallenge?.challengeFiles?.map( regenerateMissingProperties ) ?? null } : null;\n\nreturn (\n    <div data-playwright-test-label='project-links'>\n      {t(getCertHeading(certSlug), { user: name })}\n      <Spacer size='m' />\n      <Table striped>\n        <thead>\n          <tr>\n            <th>\n              <span className='sr-only'>{t('settings.headings.certs')}</span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <ProjectsFor certSlug={certSlug} />\n        </tbody>\n      </Table>\n      <Spacer size='m' />\n      <ProjectModal\n        challengeFiles={completedChallenge?.challengeFiles ?? null}\n        handleSolutionModalHide={handleSolutionModalHide}\n        isOpen={showCode}\n        projectTitle={projectTitle}\n        // 'solution' is theoretically never 'null', if it a JsAlgoData cert\n        // which is the only time we use the modal\n        solution={completedChallenge?.solution as undefined | string}\n      />\n      <ProjectPreviewModal\n        challengeData={challengeData}\n        closeText={t('buttons.close')}\n        previewTitle={projectTitle}\n      />\n      <ExamResultsModal projectTitle={projectTitle} examResults={examResults} />",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 7059,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "988dc5418cdd12a5238ea9f0c55f608e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
    "source_type": "git_repo",
    "title": "show-project-links",
    "content": ": null; return ( <div data-playwright-test-label='project-links'> {t(getCertHeading(certSlug), { user: name })} <Spacer size='m' /> <Table striped> <thead> <tr> <th> <span className='sr-only'>{t('settings.headings.certs')}</span> </th> </tr> </thead> <tbody> <ProjectsFor certSlug={certSlug} /> </tbody> </Table> <Spacer size='m' /> <ProjectModal challengeFiles={completedChallenge?.challengeFiles ?? null} handleSolutionModalHide={handleSolutionModalHide} isOpen={showCode} projectTitle={projectTitle} // 'solution' is theoretically never 'null', if it a JsAlgoData cert // which is the only time we use the modal solution={completedChallenge?.solution as undefined | string} /> <ProjectPreviewModal challengeData={challengeData} closeText={t('buttons.close')} previewTitle={projectTitle} /> <ExamResultsModal projectTitle={projectTitle} examResults={examResults} />\n\n{certSlug !== Certification.FoundationalCSharp && (\n        <Trans i18nKey='certification.project.footnote'>\n          If you suspect that any of these projects violate the{' '}\n          <a\n            href='https://www.freecodecamp.org/news/academic-honesty-policy/'\n            rel='noreferrer'\n            target='_blank'\n          >\n            academic honesty policy\n          </a>\n          , please{' '}\n          <a\n            href={`/user/${username}/report-user`}\n            rel='noreferrer'\n            target='_blank'\n          >\n            report this to our team\n          </a>\n          .\n        </Trans>\n      )}\n    </div>\n  );\n};\n\nShowProjectLinks.displayName = 'ShowProjectLinks';\n\nexport default connect(null, mapDispatchToProps)(ShowProjectLinks);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 7059,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-project-links.tsx",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a576ece7c96bf2a3d1c8817483a7513f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-unsubscribed.tsx",
    "source_type": "git_repo",
    "title": "show-unsubscribed",
    "content": "import type { RouteComponentProps } from '@gatsbyjs/reach-router';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Panel, Button, Spacer } from '@freecodecamp/ui';\n\nimport envData from '../../config/env.json';\nimport FullWidthRow from '../components/helpers/full-width-row';\n\nconst { apiLocation } = envData;\n\ntype ShowUnsubscribedProps = Pick<RouteComponentProps, 'path'> & {\n  unsubscribeId?: string;\n};\n\nfunction ShowUnsubscribed({\n  unsubscribeId\n}: ShowUnsubscribedProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Helmet>\n        <title>{t('metaTags:youre-unsubscribed')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Container>\n        <main>\n          <FullWidthRow>\n            <Spacer size='l' />\n            <Panel variant='primary' className='text-center'>\n              <Spacer size='m' />\n              <h2 data-playwright-test-label='main-heading'>\n                {t('misc.unsubscribed')}\n              </h2>\n              <p data-playwright-test-label='motivation-text'>\n                {t('misc.keep-coding')}\n              </p>\n            </Panel>\n          </FullWidthRow>\n          {unsubscribeId ? (\n            <FullWidthRow>\n              <Button\n                block={true}\n                size='large'\n                variant='primary'\n                href={`${apiLocation}/resubscribe/${unsubscribeId}`}\n              >\n                {t('buttons.resubscribe')}\n              </Button>\n            </FullWidthRow>\n          ) : null}\n          <Spacer size='l' />\n        </main>\n      </Container>\n    </>\n  );\n}\n\nShowUnsubscribed.displayName = 'ShowUnsubscribed';\n\nexport default ShowUnsubscribed;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1747,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-unsubscribed.tsx",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a889221638888ed432e6fdd1d95e9c09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.css",
    "source_type": "git_repo",
    "title": "show-update-email",
    "content": ".update-email-field {\n  display: flex;\n  gap: 1em;\n  align-items: center;\n}\n\n.update-email-field label {\n  margin-bottom: unset;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 131,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.css",
      "source_type": "git_repo"
    },
    "token_count": 35,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e72387aa00552aadb718e03eaeacb0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "import {\n  Certification,\n  legacyCertifications,\n  upcomingCertifications,\n  currentCertifications\n} from '../../shared/config/certification-settings';\nimport config from '../config/env.json';\n\nconst { showUpcomingChanges } = config;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 48,
    "chunk_index": 0,
    "total_chunks": 42
  },
  {
    "id": "3511bd22fb66d35283288f942cabd25d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "import {\n  Certification,\n  legacyCertifications,\n  upcomingCertifications,\n  currentCertifications\n} from '../../shared/config/certification-settings';\nimport config from '../config/env.json';\n\nconst { showUpcomingChanges } = config;const responsiveWebBase =\n  '/learn/responsive-web-design/responsive-web-design-projects';\nconst responsiveWeb22Base = '/learn/2022/responsive-web-design';\nconst jsAlgoBase =\n  '/learn/javascript-algorithms-and-data-structures/' +\n  'javascript-algorithms-and-data-structures-projects';\nconst jsAlgo22Base = '/learn/javascript-algorithms-and-data-structures-v8';\nconst feLibsBase =\n  '/learn/front-end-development-libraries/front-end-development-libraries-projects';\nconst dataVisBase = '/learn/data-visualization/data-visualization-projects';\nconst relationalDatabaseBase = '/learn/relational-database';\nconst apiMicroBase =\n  '/learn/back-end-development-and-apis/back-end-development-and-apis-projects';\nconst qaBase = '/learn/quality-assurance/quality-assurance-projects';\nconst infoSecBase = '/learn/information-security/information-security-projects';\nconst sciCompPyBase = '/learn/scientific-computing-with-python';\nconst dataAnalysisPyBase =\n  '/learn/data-analysis-with-python/data-analysis-with-python-projects';\nconst machineLearningPyBase =\n  '/learn/machine-learning-with-python/machine-learning-with-python-projects';\nconst collegeAlgebraPyBase = '/learn/college-algebra-with-python';\nconst takeHomeBase = '/learn/coding-interview-prep/take-home-projects';\nconst foundationalCSharpBase =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam';\nconst fullStackDeveloperBase = '/learn/full-stack-developer';\nconst a2EnglishBase = '/learn/a2-english-for-developers';\nconst b1EnglishBase = '/learn/b1-english-for-developers';\nconst a2SpanishBase = '/learn/a2-professional-spanish';\nconst a2ChineseBase = '/learn/a2-professional-chinese';\nconst a1ChineseBase = '/learn/a1-professional-chinese';\nconst legacyFrontEndBase = feLibsBase;\nconst legacyFrontEndResponsiveBase = responsiveWebBase;\nconst legacyFrontEndTakeHomeBase = takeHomeBase;\nconst legacyBackEndBase = apiMicroBase;\nconst legacyBackEndTakeHomeBase = takeHomeBase;\nconst legacyDataVisBase = dataVisBase;\nconst legacyDataVisFrontEndBase = feLibsBase;\nconst legacyDataVisTakeHomeBase = takeHomeBase;\nconst legacyInfosecQaQaBase = qaBase;\nconst legacyInfosecQaInfosecBase = infoSecBase;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 573,
    "chunk_index": 1,
    "total_chunks": 42
  },
  {
    "id": "183fa517e123777269b1fd8f489576a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "const collegeAlgebraPyBase = '/learn/college-algebra-with-python'; const takeHomeBase = '/learn/coding-interview-prep/take-home-projects'; const foundationalCSharpBase = '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam'; const fullStackDeveloperBase = '/learn/full-stack-developer'; const a2EnglishBase = '/learn/a2-english-for-developers'; const b1EnglishBase = '/learn/b1-english-for-developers'; const a2SpanishBase = '/learn/a2-professional-spanish'; const a2ChineseBase = '/learn/a2-professional-chinese'; const a1ChineseBase = '/learn/a1-professional-chinese'; const legacyFrontEndBase = feLibsBase; const legacyFrontEndResponsiveBase = responsiveWebBase; const legacyFrontEndTakeHomeBase = takeHomeBase; const legacyBackEndBase = apiMicroBase; const legacyBackEndTakeHomeBase = takeHomeBase; const legacyDataVisBase = dataVisBase; const legacyDataVisFrontEndBase = feLibsBase; const legacyDataVisTakeHomeBase = takeHomeBase; const legacyInfosecQaQaBase = qaBase; const legacyInfosecQaInfosecBase = infoSecBase;// TODO: generate this automatically in a separate file\n// from the md/meta json files for each cert and projects\nconst fullstackCert = {\n  id: '561add10cb82ac38a17213bd',\n  title: 'Legacy Full Stack',\n  certSlug: Certification LegacyFullStack,\n  projects: null\n  // Requirements are other certs and is\n  // handled elsewhere\n} as const;\nconst allStandardCerts = [\n  {\n    id: '561add10cb82ac38a17513bc',\n    title: 'Responsive Web Design',\n    certSlug: Certification RespWebDesign,\n    projects: [\n      {\n        id: '587d78af367417b2b2512b03',\n        title: 'Build a Survey Form',\n        link: getResponsiveWebDesignPath('build-a-survey-form'),\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 2,
    "total_chunks": 42
  },
  {
    "id": "50ffd21e57bf44ca175be473b964b0f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "infoSecBase;// TODO: generate this automatically in a separate file // from the md/meta json files for each cert and projects const fullstackCert = { id: '561add10cb82ac38a17213bd', title: 'Legacy Full Stack', certSlug: Certification LegacyFullStack, projects: null // Requirements are other certs and is // handled elsewhere } as const; const allStandardCerts = [ { id: '561add10cb82ac38a17513bc', title: 'Responsive Web Design', certSlug: Certification RespWebDesign, projects: [ { id: '587d78af367417b2b2512b03', title: 'Build a Survey Form', link: getResponsiveWebDesignPath('build-a-survey-form'), certSlug: CertificationRespWebDesign\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd18',\n        title: 'Build a Tribute Page',\n        link: getResponsiveWebDesignPath('build-a-tribute-page'),\n        certSlug: Certification RespWebDesign\n      },\n      {\n        id: '587d78b0367417b2b2512b05',\n        title: 'Build a Technical Documentation Page',\n        link: getResponsiveWebDesignPath(\n          'build-a-technical-documentation-page'\n        ),\n        certSlug: Certification RespWebDesign\n      },\n      {\n        id: '587d78af367417b2b2512b04',\n        title: 'Build a Product Landing Page',\n        link: getResponsiveWebDesignPath('build-a-product-landing-page'),\n        certSlug: Certification RespWebDesign\n      },\n      {\n        id: 'bd7158d8c242eddfaeb5bd13',\n        title: 'Build a Personal Portfolio Webpage',\n        link: getResponsiveWebDesignPath('build-a-personal-portfolio-webpage'),\n        certSlug: Certification RespWebDesign\n      }\n    ]\n  },\n  {\n    id: '658180220947283cdc0689ce',\n    title: 'JavaScript Algorithms and Data Structures',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 3,
    "total_chunks": 42
  },
  {
    "id": "8b57d7d9fdb500449dcef8708282a4c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "CertificationRespWebDesign }, { id: 'bd7158d8c442eddfaeb5bd18', title: 'Build a Tribute Page', link: getResponsiveWebDesignPath('build-a-tribute-page'), certSlug: Certification RespWebDesign }, { id: '587d78b0367417b2b2512b05', title: 'Build a Technical Documentation Page', link: getResponsiveWebDesignPath( 'build-a-technical-documentation-page' ), certSlug: Certification RespWebDesign }, { id: '587d78af367417b2b2512b04', title: 'Build a Product Landing Page', link: getResponsiveWebDesignPath('build-a-product-landing-page'), certSlug: Certification RespWebDesign }, { id: 'bd7158d8c242eddfaeb5bd13', title: 'Build a Personal Portfolio Webpage', link: getResponsiveWebDesignPath('build-a-personal-portfolio-webpage'), certSlug: Certification RespWebDesign } ] }, { id: '658180220947283cdc0689ce', title: 'JavaScript Algorithms and Data Structures', certSlug: CertificationJsAlgoDataStructNew,\n    projects: [\n      {\n        id: '657bdc55a322aae1eac3838f',\n        title: 'Build a Palindrome Checker',\n        link: getJavaScriptAlgoPath('build-a-palindrome-checker'),\n        certSlug: Certification JsAlgoDataStructNew\n      },\n      {\n        id: '657bdc8ba322aae1eac38390',\n        title: 'Build a Roman Numeral Converter',\n        link: getJavaScriptAlgoPath('build-a-roman-numeral-converter'),\n        certSlug: Certification JsAlgoDataStructNew\n      },\n      {\n        id: '657bdcb9a322aae1eac38391',\n        title: 'Build a Telephone Number Validator',\n        link: getJavaScriptAlgoPath('build-a-telephone-number-validator'),\n        certSlug: Certification JsAlgoDataStructNew\n      },\n      {\n        id: '657bdcc3a322aae1eac38392',\n        title: 'Build a Cash Register',\n        link: getJavaScriptAlgoPath('build-a-cash-register'),\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 42
  },
  {
    "id": "430ae2230c5f656bcad1628be165cf29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "getResponsiveWebDesignPath('build-a-personal-portfolio-webpage'), certSlug: Certification RespWebDesign } ] }, { id: '658180220947283cdc0689ce', title: 'JavaScript Algorithms and Data Structures', certSlug: CertificationJsAlgoDataStructNew, projects: [ { id: '657bdc55a322aae1eac3838f', title: 'Build a Palindrome Checker', link: getJavaScriptAlgoPath('build-a-palindrome-checker'), certSlug: Certification JsAlgoDataStructNew }, { id: '657bdc8ba322aae1eac38390', title: 'Build a Roman Numeral Converter', link: getJavaScriptAlgoPath('build-a-roman-numeral-converter'), certSlug: Certification JsAlgoDataStructNew }, { id: '657bdcb9a322aae1eac38391', title: 'Build a Telephone Number Validator', link: getJavaScriptAlgoPath('build-a-telephone-number-validator'), certSlug: Certification JsAlgoDataStructNew }, { id: '657bdcc3a322aae1eac38392', title: 'Build a Cash Register', link: getJavaScriptAlgoPath('build-a-cash-register'), certSlug: CertificationJsAlgoDataStructNew\n      },\n      {\n        id: '6555c1d3e11a1574434cf8b5',\n        title: 'Build an RPG Creature Search App',\n        link: getJavaScriptAlgoPath('build-an-rpg-creature-search-app'),\n        certSlug: Certification JsAlgoDataStructNew\n      }\n    ]\n  },\n  {\n    id: '561acd10cb82ac38a17513bc',\n    title: 'Front End Development Libraries',\n    certSlug: Certification FrontEndDevLibs,\n    projects: [\n      {\n        id: 'bd7158d8c442eddfaeb5bd13',\n        title: 'Build a Random Quote Machine',\n        link: `${feLibsBase}/build-a-random-quote-machine`,\n        certSlug: Certification FrontEndDevLibs\n      },\n      {\n        id: 'bd7157d8c242eddfaeb5bd13',\n        title: 'Build a Markdown Previewer',\n        link: `${feLibsBase}/build-a-markdown-previewer`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 5,
    "total_chunks": 42
  },
  {
    "id": "174e3fc527e18a1697b7aca834d9b86a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "getJavaScriptAlgoPath('build-a-telephone-number-validator'), certSlug: Certification JsAlgoDataStructNew }, { id: '657bdcc3a322aae1eac38392', title: 'Build a Cash Register', link: getJavaScriptAlgoPath('build-a-cash-register'), certSlug: CertificationJsAlgoDataStructNew }, { id: '6555c1d3e11a1574434cf8b5', title: 'Build an RPG Creature Search App', link: getJavaScriptAlgoPath('build-an-rpg-creature-search-app'), certSlug: Certification JsAlgoDataStructNew } ] }, { id: '561acd10cb82ac38a17513bc', title: 'Front End Development Libraries', certSlug: Certification FrontEndDevLibs, projects: [ { id: 'bd7158d8c442eddfaeb5bd13', title: 'Build a Random Quote Machine', link: `${feLibsBase}/build-a-random-quote-machine`, certSlug: Certification FrontEndDevLibs }, { id: 'bd7157d8c242eddfaeb5bd13', title: 'Build a Markdown Previewer', link: `${feLibsBase}/build-a-markdown-previewer`, certSlug: CertificationFrontEndDevLibs\n      },\n      {\n        id: '587d7dbc367417b2b2512bae',\n        title: 'Build a Drum Machine',\n        link: `${feLibsBase}/build-a-drum-machine`,\n        certSlug: Certification FrontEndDevLibs\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd17',\n        title: 'Build a JavaScript Calculator',\n        link: `${feLibsBase}/build-a-javascript-calculator`,\n        certSlug: Certification FrontEndDevLibs\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd0f',\n        title: 'Build a 25 + 5 Clock',\n        link: `${feLibsBase}/build-a-25--5-clock`,\n        certSlug: Certification FrontEndDevLibs\n      }\n    ]\n  },\n  {\n    id: '5a553ca864b52e1d8bceea14',\n    title: 'Data Visualization',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 42
  },
  {
    "id": "08fbda7a2afb63c14c34615dda353e53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Random Quote Machine', link: `${feLibsBase}/build-a-random-quote-machine`, certSlug: Certification FrontEndDevLibs }, { id: 'bd7157d8c242eddfaeb5bd13', title: 'Build a Markdown Previewer', link: `${feLibsBase}/build-a-markdown-previewer`, certSlug: CertificationFrontEndDevLibs }, { id: '587d7dbc367417b2b2512bae', title: 'Build a Drum Machine', link: `${feLibsBase}/build-a-drum-machine`, certSlug: Certification FrontEndDevLibs }, { id: 'bd7158d8c442eddfaeb5bd17', title: 'Build a JavaScript Calculator', link: `${feLibsBase}/build-a-javascript-calculator`, certSlug: Certification FrontEndDevLibs }, { id: 'bd7158d8c442eddfaeb5bd0f', title: 'Build a 25 + 5 Clock', link: `${feLibsBase}/build-a-25--5-clock`, certSlug: Certification FrontEndDevLibs } ] }, { id: '5a553ca864b52e1d8bceea14', title: 'Data Visualization', certSlug: CertificationDataVis,\n    projects: [\n      {\n        id: 'bd7168d8c242eddfaeb5bd13',\n        title: 'Visualize Data with a Bar Chart',\n        link: `${dataVisBase}/visualize-data-with-a-bar-chart`,\n        certSlug: Certification DataVis\n      },\n      {\n        id: 'bd7178d8c242eddfaeb5bd13',\n        title: 'Visualize Data with a Scatterplot Graph',\n        link: `${dataVisBase}/visualize-data-with-a-scatterplot-graph`,\n        certSlug: Certification DataVis\n      },\n      {\n        id: 'bd7188d8c242eddfaeb5bd13',\n        title: 'Visualize Data with a Heat Map',\n        link: `${dataVisBase}/visualize-data-with-a-heat-map`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 7,
    "total_chunks": 42
  },
  {
    "id": "72c3ad0a1ebcfcd7965917b755db0297",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "FrontEndDevLibs }, { id: 'bd7158d8c442eddfaeb5bd0f', title: 'Build a 25 + 5 Clock', link: `${feLibsBase}/build-a-25--5-clock`, certSlug: Certification FrontEndDevLibs } ] }, { id: '5a553ca864b52e1d8bceea14', title: 'Data Visualization', certSlug: CertificationDataVis, projects: [ { id: 'bd7168d8c242eddfaeb5bd13', title: 'Visualize Data with a Bar Chart', link: `${dataVisBase}/visualize-data-with-a-bar-chart`, certSlug: Certification DataVis }, { id: 'bd7178d8c242eddfaeb5bd13', title: 'Visualize Data with a Scatterplot Graph', link: `${dataVisBase}/visualize-data-with-a-scatterplot-graph`, certSlug: Certification DataVis }, { id: 'bd7188d8c242eddfaeb5bd13', title: 'Visualize Data with a Heat Map', link: `${dataVisBase}/visualize-data-with-a-heat-map`, certSlug: CertificationDataVis\n      },\n      {\n        id: '587d7fa6367417b2b2512bbf',\n        title: 'Visualize Data with a Choropleth Map',\n        link: `${dataVisBase}/visualize-data-with-a-choropleth-map`,\n        certSlug: Certification DataVis\n      },\n      {\n        id: '587d7fa6367417b2b2512bc0',\n        title: 'Visualize Data with a Treemap Diagram',\n        link: `${dataVisBase}/visualize-data-with-a-treemap-diagram`,\n        certSlug: Certification DataVis\n      }\n    ]\n  },\n  {\n    id: '606243f50267e718b1e755f4',\n    title: 'Relational Database',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 8,
    "total_chunks": 42
  },
  {
    "id": "23f8efac59b4f2a2bbdb66873afcc9a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Certification DataVis }, { id: 'bd7178d8c242eddfaeb5bd13', title: 'Visualize Data with a Scatterplot Graph', link: `${dataVisBase}/visualize-data-with-a-scatterplot-graph`, certSlug: Certification DataVis }, { id: 'bd7188d8c242eddfaeb5bd13', title: 'Visualize Data with a Heat Map', link: `${dataVisBase}/visualize-data-with-a-heat-map`, certSlug: CertificationDataVis }, { id: '587d7fa6367417b2b2512bbf', title: 'Visualize Data with a Choropleth Map', link: `${dataVisBase}/visualize-data-with-a-choropleth-map`, certSlug: Certification DataVis }, { id: '587d7fa6367417b2b2512bc0', title: 'Visualize Data with a Treemap Diagram', link: `${dataVisBase}/visualize-data-with-a-treemap-diagram`, certSlug: Certification DataVis } ] }, { id: '606243f50267e718b1e755f4', title: 'Relational Database', certSlug: CertificationRelationalDb,\n    projects: [\n      {\n        id: '5f1a4ef5d5d6b5ab580fc6ae',\n        title: 'Celestial Bodies Database',\n        link: `${relationalDatabaseBase}/build-a-celestial-bodies-database-project/build-a-celestial-bodies-database`,\n        certSlug: Certification RelationalDb\n      },\n      {\n        id: '5f9771307d4d22b9d2b75a94',\n        title: 'World Cup Database',\n        link: `${relationalDatabaseBase}/build-a-world-cup-database-project/build-a-world-cup-database`,\n        certSlug: Certification RelationalDb\n      },\n      {\n        id: '5f87ac112ae598023a42df1a',\n        title: 'Salon Appointment Scheduler',\n        link: `${relationalDatabaseBase}/build-a-salon-appointment-scheduler-project/build-a-salon-appointment-scheduler`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 9,
    "total_chunks": 42
  },
  {
    "id": "e012abf0b9428af7b78686ef15b40659",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Data with a Choropleth Map', link: `${dataVisBase}/visualize-data-with-a-choropleth-map`, certSlug: Certification DataVis }, { id: '587d7fa6367417b2b2512bc0', title: 'Visualize Data with a Treemap Diagram', link: `${dataVisBase}/visualize-data-with-a-treemap-diagram`, certSlug: Certification DataVis } ] }, { id: '606243f50267e718b1e755f4', title: 'Relational Database', certSlug: CertificationRelationalDb, projects: [ { id: '5f1a4ef5d5d6b5ab580fc6ae', title: 'Celestial Bodies Database', link: `${relationalDatabaseBase}/build-a-celestial-bodies-database-project/build-a-celestial-bodies-database`, certSlug: Certification RelationalDb }, { id: '5f9771307d4d22b9d2b75a94', title: 'World Cup Database', link: `${relationalDatabaseBase}/build-a-world-cup-database-project/build-a-world-cup-database`, certSlug: Certification RelationalDb }, { id: '5f87ac112ae598023a42df1a', title: 'Salon Appointment Scheduler', link: `${relationalDatabaseBase}/build-a-salon-appointment-scheduler-project/build-a-salon-appointment-scheduler`, certSlug: CertificationRelationalDb\n      },\n      {\n        id: '602d9ff222201c65d2a019f2',\n        title: 'Periodic Table Database',\n        link: `${relationalDatabaseBase}/build-a-periodic-table-database-project/build-a-periodic-table-database`,\n        certSlug: Certification RelationalDb\n      },\n      {\n        id: '602da04c22201c65d2a019f4',\n        title: 'Number Guessing Game',\n        link: `${relationalDatabaseBase}/build-a-number-guessing-game-project/build-a-number-guessing-game`,\n        certSlug: Certification RelationalDb\n      }\n    ]\n  },\n  {\n    id: '561add10cb82ac38a17523bc',\n    title: 'Back End Development and APIs',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 10,
    "total_chunks": 42
  },
  {
    "id": "4beb838b6fa6ebe31506e375ae41034e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "id: '5f1a4ef5d5d6b5ab580fc6ae', title: 'Celestial Bodies Database', link: `${relationalDatabaseBase}/build-a-celestial-bodies-database-project/build-a-celestial-bodies-database`, certSlug: Certification RelationalDb }, { id: '5f9771307d4d22b9d2b75a94', title: 'World Cup Database', link: `${relationalDatabaseBase}/build-a-world-cup-database-project/build-a-world-cup-database`, certSlug: Certification RelationalDb }, { id: '5f87ac112ae598023a42df1a', title: 'Salon Appointment Scheduler', link: `${relationalDatabaseBase}/build-a-salon-appointment-scheduler-project/build-a-salon-appointment-scheduler`, certSlug: CertificationRelationalDb }, { id: '602d9ff222201c65d2a019f2', title: 'Periodic Table Database', link: `${relationalDatabaseBase}/build-a-periodic-table-database-project/build-a-periodic-table-database`, certSlug: Certification RelationalDb }, { id: '602da04c22201c65d2a019f4', title: 'Number Guessing Game', link: `${relationalDatabaseBase}/build-a-number-guessing-game-project/build-a-number-guessing-game`, certSlug: Certification RelationalDb } ] }, { id: '561add10cb82ac38a17523bc', title: 'Back End Development and APIs', certSlug: CertificationBackEndDevApis,\n    projects: [\n      {\n        id: 'bd7158d8c443edefaeb5bdef',\n        title: 'Timestamp Microservice',\n        link: `${apiMicroBase}/timestamp-microservice`,\n        certSlug: Certification BackEndDevApis\n      },\n      {\n        id: 'bd7158d8c443edefaeb5bdff',\n        title: 'Request Header Parser Microservice',\n        link: `${apiMicroBase}/request-header-parser-microservice`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 11,
    "total_chunks": 42
  },
  {
    "id": "401917b0389d01cf1567885b817107f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "id: '5f87ac112ae598023a42df1a', title: 'Salon Appointment Scheduler', link: `${relationalDatabaseBase}/build-a-salon-appointment-scheduler-project/build-a-salon-appointment-scheduler`, certSlug: CertificationRelationalDb }, { id: '602d9ff222201c65d2a019f2', title: 'Periodic Table Database', link: `${relationalDatabaseBase}/build-a-periodic-table-database-project/build-a-periodic-table-database`, certSlug: Certification RelationalDb }, { id: '602da04c22201c65d2a019f4', title: 'Number Guessing Game', link: `${relationalDatabaseBase}/build-a-number-guessing-game-project/build-a-number-guessing-game`, certSlug: Certification RelationalDb } ] }, { id: '561add10cb82ac38a17523bc', title: 'Back End Development and APIs', certSlug: CertificationBackEndDevApis, projects: [ { id: 'bd7158d8c443edefaeb5bdef', title: 'Timestamp Microservice', link: `${apiMicroBase}/timestamp-microservice`, certSlug: Certification BackEndDevApis }, { id: 'bd7158d8c443edefaeb5bdff', title: 'Request Header Parser Microservice', link: `${apiMicroBase}/request-header-parser-microservice`, certSlug: CertificationBackEndDevApis\n      },\n      {\n        id: 'bd7158d8c443edefaeb5bd0e',\n        title: 'URL Shortener Microservice',\n        link: `${apiMicroBase}/url-shortener-microservice`,\n        certSlug: Certification BackEndDevApis\n      },\n      {\n        id: '5a8b073d06fa14fcfde687aa',\n        title: 'Exercise Tracker',\n        link: `${apiMicroBase}/exercise-tracker`,\n        certSlug: Certification BackEndDevApis\n      },\n      {\n        id: 'bd7158d8c443edefaeb5bd0f',\n        title: 'File Metadata Microservice',\n        link: `${apiMicroBase}/file-metadata-microservice`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 12,
    "total_chunks": 42
  },
  {
    "id": "318d8f91caccdc6adebb03b457fb0045",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "] }, { id: '561add10cb82ac38a17523bc', title: 'Back End Development and APIs', certSlug: CertificationBackEndDevApis, projects: [ { id: 'bd7158d8c443edefaeb5bdef', title: 'Timestamp Microservice', link: `${apiMicroBase}/timestamp-microservice`, certSlug: Certification BackEndDevApis }, { id: 'bd7158d8c443edefaeb5bdff', title: 'Request Header Parser Microservice', link: `${apiMicroBase}/request-header-parser-microservice`, certSlug: CertificationBackEndDevApis }, { id: 'bd7158d8c443edefaeb5bd0e', title: 'URL Shortener Microservice', link: `${apiMicroBase}/url-shortener-microservice`, certSlug: Certification BackEndDevApis }, { id: '5a8b073d06fa14fcfde687aa', title: 'Exercise Tracker', link: `${apiMicroBase}/exercise-tracker`, certSlug: Certification BackEndDevApis }, { id: 'bd7158d8c443edefaeb5bd0f', title: 'File Metadata Microservice', link: `${apiMicroBase}/file-metadata-microservice`, certSlug: CertificationBackEndDevApis\n      }\n    ]\n  },\n  {\n    id: '5e611829481575a52dc59c0e',\n    title: 'Quality Assurance',\n    certSlug: Certification QualityAssurance,\n    projects: [\n      {\n        id: '587d8249367417b2b2512c41',\n        title: 'Metric-Imperial Converter',\n        link: `${qaBase}/metric-imperial-converter`,\n        certSlug: Certification QualityAssurance\n      },\n      {\n        id: '587d8249367417b2b2512c42',\n        title: 'Issue Tracker',\n        link: `${qaBase}/issue-tracker`,\n        certSlug: Certification QualityAssurance\n      },\n      {\n        id: '587d824a367417b2b2512c43',\n        title: 'Personal Library',\n        link: `${qaBase}/personal-library`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 13,
    "total_chunks": 42
  },
  {
    "id": "0d281fa28ee8a86162641244c8c138d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "`${apiMicroBase}/url-shortener-microservice`, certSlug: Certification BackEndDevApis }, { id: '5a8b073d06fa14fcfde687aa', title: 'Exercise Tracker', link: `${apiMicroBase}/exercise-tracker`, certSlug: Certification BackEndDevApis }, { id: 'bd7158d8c443edefaeb5bd0f', title: 'File Metadata Microservice', link: `${apiMicroBase}/file-metadata-microservice`, certSlug: CertificationBackEndDevApis } ] }, { id: '5e611829481575a52dc59c0e', title: 'Quality Assurance', certSlug: Certification QualityAssurance, projects: [ { id: '587d8249367417b2b2512c41', title: 'Metric-Imperial Converter', link: `${qaBase}/metric-imperial-converter`, certSlug: Certification QualityAssurance }, { id: '587d8249367417b2b2512c42', title: 'Issue Tracker', link: `${qaBase}/issue-tracker`, certSlug: Certification QualityAssurance }, { id: '587d824a367417b2b2512c43', title: 'Personal Library', link: `${qaBase}/personal-library`, certSlug: CertificationQualityAssurance\n      },\n      {\n        id: '5e601bf95ac9d0ecd8b94afd',\n        title: 'Sudoku Solver',\n        link: `${qaBase}/sudoku-solver`,\n        certSlug: Certification QualityAssurance\n      },\n      {\n        id: '5e601c0d5ac9d0ecd8b94afe',\n        title: 'American British Translator',\n        link: `${qaBase}/american-british-translator`,\n        certSlug: Certification QualityAssurance\n      }\n    ]\n  },\n  {\n    id: '5e44431b903586ffb414c951',\n    title: 'Scientific Computing with Python',\n    certSlug: Certification SciCompPy,\n    projects: [\n      {\n        id: '5e44412c903586ffb414c94c',\n        title: 'Arithmetic Formatter',\n        link: `${sciCompPyBase}/build-an-arithmetic-formatter-project/build-an-arithmetic-formatter-project`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 14,
    "total_chunks": 42
  },
  {
    "id": "08de977af3880a571e98574b6cb433c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Certification QualityAssurance }, { id: '587d8249367417b2b2512c42', title: 'Issue Tracker', link: `${qaBase}/issue-tracker`, certSlug: Certification QualityAssurance }, { id: '587d824a367417b2b2512c43', title: 'Personal Library', link: `${qaBase}/personal-library`, certSlug: CertificationQualityAssurance }, { id: '5e601bf95ac9d0ecd8b94afd', title: 'Sudoku Solver', link: `${qaBase}/sudoku-solver`, certSlug: Certification QualityAssurance }, { id: '5e601c0d5ac9d0ecd8b94afe', title: 'American British Translator', link: `${qaBase}/american-british-translator`, certSlug: Certification QualityAssurance } ] }, { id: '5e44431b903586ffb414c951', title: 'Scientific Computing with Python', certSlug: Certification SciCompPy, projects: [ { id: '5e44412c903586ffb414c94c', title: 'Arithmetic Formatter', link: `${sciCompPyBase}/build-an-arithmetic-formatter-project/build-an-arithmetic-formatter-project`, certSlug: CertificationSciCompPy\n      },\n      {\n        id: '5e444136903586ffb414c94d',\n        title: 'Time Calculator',\n        link: `${sciCompPyBase}/build-a-time-calculator-project/build-a-time-calculator-project`,\n        certSlug: Certification SciCompPy\n      },\n      {\n        id: '5e44413e903586ffb414c94e',\n        title: 'Budget App',\n        link: `${sciCompPyBase}/build-a-budget-app-project/build-a-budget-app-project`,\n        certSlug: Certification SciCompPy\n      },\n      {\n        id: '5e444147903586ffb414c94f',\n        title: 'Polygon Area Calculator',\n        link: `${sciCompPyBase}/build-a-polygon-area-calculator-project/build-a-polygon-area-calculator-project`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 15,
    "total_chunks": 42
  },
  {
    "id": "68f0b899de4e09ebeaccc643afed9477",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "QualityAssurance }, { id: '5e601c0d5ac9d0ecd8b94afe', title: 'American British Translator', link: `${qaBase}/american-british-translator`, certSlug: Certification QualityAssurance } ] }, { id: '5e44431b903586ffb414c951', title: 'Scientific Computing with Python', certSlug: Certification SciCompPy, projects: [ { id: '5e44412c903586ffb414c94c', title: 'Arithmetic Formatter', link: `${sciCompPyBase}/build-an-arithmetic-formatter-project/build-an-arithmetic-formatter-project`, certSlug: CertificationSciCompPy }, { id: '5e444136903586ffb414c94d', title: 'Time Calculator', link: `${sciCompPyBase}/build-a-time-calculator-project/build-a-time-calculator-project`, certSlug: Certification SciCompPy }, { id: '5e44413e903586ffb414c94e', title: 'Budget App', link: `${sciCompPyBase}/build-a-budget-app-project/build-a-budget-app-project`, certSlug: Certification SciCompPy }, { id: '5e444147903586ffb414c94f', title: 'Polygon Area Calculator', link: `${sciCompPyBase}/build-a-polygon-area-calculator-project/build-a-polygon-area-calculator-project`, certSlug: CertificationSciCompPy\n      },\n      {\n        id: '5e44414f903586ffb414c950',\n        title: 'Probability Calculator',\n        link: `${sciCompPyBase}/build-a-probability-calculator-project/build-a-probability-calculator-project`,\n        certSlug: Certification SciCompPy\n      }\n    ]\n  },\n  {\n    id: '5e46fc95ac417301a38fb934',\n    title: 'Data Analysis with Python',\n    certSlug: Certification DataAnalysisPy,\n    projects: [\n      {\n        id: '5e46f7e5ac417301a38fb928',\n        title: 'Mean-Variance-Standard Deviation Calculator',\n        link: `${dataAnalysisPyBase}/mean-variance-standard-deviation-calculator`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 16,
    "total_chunks": 42
  },
  {
    "id": "99a075612489822d03af8398a861b0d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "CertificationSciCompPy }, { id: '5e444136903586ffb414c94d', title: 'Time Calculator', link: `${sciCompPyBase}/build-a-time-calculator-project/build-a-time-calculator-project`, certSlug: Certification SciCompPy }, { id: '5e44413e903586ffb414c94e', title: 'Budget App', link: `${sciCompPyBase}/build-a-budget-app-project/build-a-budget-app-project`, certSlug: Certification SciCompPy }, { id: '5e444147903586ffb414c94f', title: 'Polygon Area Calculator', link: `${sciCompPyBase}/build-a-polygon-area-calculator-project/build-a-polygon-area-calculator-project`, certSlug: CertificationSciCompPy }, { id: '5e44414f903586ffb414c950', title: 'Probability Calculator', link: `${sciCompPyBase}/build-a-probability-calculator-project/build-a-probability-calculator-project`, certSlug: Certification SciCompPy } ] }, { id: '5e46fc95ac417301a38fb934', title: 'Data Analysis with Python', certSlug: Certification DataAnalysisPy, projects: [ { id: '5e46f7e5ac417301a38fb928', title: 'Mean-Variance-Standard Deviation Calculator', link: `${dataAnalysisPyBase}/mean-variance-standard-deviation-calculator`, certSlug: CertificationDataAnalysisPy\n      },\n      {\n        id: '5e46f7e5ac417301a38fb929',\n        title: 'Demographic Data Analyzer',\n        link: `${dataAnalysisPyBase}/demographic-data-analyzer`,\n        certSlug: Certification DataAnalysisPy\n      },\n      {\n        id: '5e46f7f8ac417301a38fb92a',\n        title: 'Medical Data Visualizer',\n        link: `${dataAnalysisPyBase}/medical-data-visualizer`,\n        certSlug: Certification DataAnalysisPy\n      },\n      {\n        id: '5e46f802ac417301a38fb92b',\n        title: 'Page View Time Series Visualizer',\n        link: `${dataAnalysisPyBase}/page-view-time-series-visualizer`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 17,
    "total_chunks": 42
  },
  {
    "id": "74e1885adddc435174181d567c13d17b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "'5e44414f903586ffb414c950', title: 'Probability Calculator', link: `${sciCompPyBase}/build-a-probability-calculator-project/build-a-probability-calculator-project`, certSlug: Certification SciCompPy } ] }, { id: '5e46fc95ac417301a38fb934', title: 'Data Analysis with Python', certSlug: Certification DataAnalysisPy, projects: [ { id: '5e46f7e5ac417301a38fb928', title: 'Mean-Variance-Standard Deviation Calculator', link: `${dataAnalysisPyBase}/mean-variance-standard-deviation-calculator`, certSlug: CertificationDataAnalysisPy }, { id: '5e46f7e5ac417301a38fb929', title: 'Demographic Data Analyzer', link: `${dataAnalysisPyBase}/demographic-data-analyzer`, certSlug: Certification DataAnalysisPy }, { id: '5e46f7f8ac417301a38fb92a', title: 'Medical Data Visualizer', link: `${dataAnalysisPyBase}/medical-data-visualizer`, certSlug: Certification DataAnalysisPy }, { id: '5e46f802ac417301a38fb92b', title: 'Page View Time Series Visualizer', link: `${dataAnalysisPyBase}/page-view-time-series-visualizer`, certSlug: CertificationDataAnalysisPy\n      },\n      {\n        id: '5e4f5c4b570f7e3a4949899f',\n        title: 'Sea Level Predictor',\n        link: `${dataAnalysisPyBase}/sea-level-predictor`,\n        certSlug: Certification DataAnalysisPy\n      }\n    ]\n  }, {\n    id: '5e6021435ac9d0ecd8b94b00',\n    title: 'Information Security',\n    certSlug: Certification InfoSec,\n    projects: [\n      {\n        id: '587d824a367417b2b2512c44',\n        title: 'Stock Price Checker',\n        link: `${infoSecBase}/stock-price-checker`,\n        certSlug: Certification InfoSec\n      },\n      {\n        id: '587d824a367417b2b2512c45',\n        title: 'Anonymous Message Board',\n        link: `${infoSecBase}/anonymous-message-board`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 18,
    "total_chunks": 42
  },
  {
    "id": "35fd9ea801a569f66b71c6cb6d2935d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "id: '5e46f7f8ac417301a38fb92a', title: 'Medical Data Visualizer', link: `${dataAnalysisPyBase}/medical-data-visualizer`, certSlug: Certification DataAnalysisPy }, { id: '5e46f802ac417301a38fb92b', title: 'Page View Time Series Visualizer', link: `${dataAnalysisPyBase}/page-view-time-series-visualizer`, certSlug: CertificationDataAnalysisPy }, { id: '5e4f5c4b570f7e3a4949899f', title: 'Sea Level Predictor', link: `${dataAnalysisPyBase}/sea-level-predictor`, certSlug: Certification DataAnalysisPy } ] }, { id: '5e6021435ac9d0ecd8b94b00', title: 'Information Security', certSlug: Certification InfoSec, projects: [ { id: '587d824a367417b2b2512c44', title: 'Stock Price Checker', link: `${infoSecBase}/stock-price-checker`, certSlug: Certification InfoSec }, { id: '587d824a367417b2b2512c45', title: 'Anonymous Message Board', link: `${infoSecBase}/anonymous-message-board`, certSlug: CertificationInfoSec\n      },\n      {\n        id: '5e46f979ac417301a38fb932',\n        title: 'Port Scanner',\n        link: `${infoSecBase}/port-scanner`,\n        certSlug: Certification InfoSec\n      },\n      {\n        id: '5e46f983ac417301a38fb933',\n        title: 'SHA-1 Password Cracker',\n        link: `${infoSecBase}/sha-1-password-cracker`,\n        certSlug: Certification InfoSec\n      },\n      {\n        id: '5e601c775ac9d0ecd8b94aff',\n        title: 'Secure Real Time Multiplayer Game',\n        link: `${infoSecBase}/secure-real-time-multiplayer-game`,\n        certSlug: Certification InfoSec\n      }\n    ]\n  },\n  {\n    id: '5e46fc95ac417301a38fb935',\n    title: 'Machine Learning with Python',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 19,
    "total_chunks": 42
  },
  {
    "id": "fe4deab0fc4a0045e64db9f17e54add5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "id: '587d824a367417b2b2512c44', title: 'Stock Price Checker', link: `${infoSecBase}/stock-price-checker`, certSlug: Certification InfoSec }, { id: '587d824a367417b2b2512c45', title: 'Anonymous Message Board', link: `${infoSecBase}/anonymous-message-board`, certSlug: CertificationInfoSec }, { id: '5e46f979ac417301a38fb932', title: 'Port Scanner', link: `${infoSecBase}/port-scanner`, certSlug: Certification InfoSec }, { id: '5e46f983ac417301a38fb933', title: 'SHA-1 Password Cracker', link: `${infoSecBase}/sha-1-password-cracker`, certSlug: Certification InfoSec }, { id: '5e601c775ac9d0ecd8b94aff', title: 'Secure Real Time Multiplayer Game', link: `${infoSecBase}/secure-real-time-multiplayer-game`, certSlug: Certification InfoSec } ] }, { id: '5e46fc95ac417301a38fb935', title: 'Machine Learning with Python', certSlug: CertificationMachineLearningPy,\n    projects: [\n      {\n        id: '5e46f8d6ac417301a38fb92d',\n        title: 'Rock Paper Scissors',\n        link: `${machineLearningPyBase}/rock-paper-scissors`,\n        certSlug: Certification MachineLearningPy\n      },\n      {\n        id: '5e46f8dcac417301a38fb92e',\n        title: 'Cat and Dog Image Classifier',\n        link: `${machineLearningPyBase}/cat-and-dog-image-classifier`,\n        certSlug: Certification MachineLearningPy\n      },\n      {\n        id: '5e46f8e3ac417301a38fb92f',\n        title: 'Book Recommendation Engine using KNN',\n        link: `${machineLearningPyBase}/book-recommendation-engine-using-knn`,\n        certSlug: Certification MachineLearningPy\n      },\n      {\n        id: '5e46f8edac417301a38fb930',\n        title: 'Linear Regression Health Costs Calculator',\n        link: `${machineLearningPyBase}/linear-regression-health-costs-calculator`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 20,
    "total_chunks": 42
  },
  {
    "id": "bc4d7eec70e674028b9e4215c9433d78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "link: `${infoSecBase}/secure-real-time-multiplayer-game`, certSlug: Certification InfoSec } ] }, { id: '5e46fc95ac417301a38fb935', title: 'Machine Learning with Python', certSlug: CertificationMachineLearningPy, projects: [ { id: '5e46f8d6ac417301a38fb92d', title: 'Rock Paper Scissors', link: `${machineLearningPyBase}/rock-paper-scissors`, certSlug: Certification MachineLearningPy }, { id: '5e46f8dcac417301a38fb92e', title: 'Cat and Dog Image Classifier', link: `${machineLearningPyBase}/cat-and-dog-image-classifier`, certSlug: Certification MachineLearningPy }, { id: '5e46f8e3ac417301a38fb92f', title: 'Book Recommendation Engine using KNN', link: `${machineLearningPyBase}/book-recommendation-engine-using-knn`, certSlug: Certification MachineLearningPy }, { id: '5e46f8edac417301a38fb930', title: 'Linear Regression Health Costs Calculator', link: `${machineLearningPyBase}/linear-regression-health-costs-calculator`, certSlug: CertificationMachineLearningPy\n      },\n      {\n        id: '5e46f8edac417301a38fb931',\n        title: 'Neural Network SMS Text Classifier',\n        link: `${machineLearningPyBase}/neural-network-sms-text-classifier`,\n        certSlug: Certification MachineLearningPy\n      }\n    ]\n  },\n  {\n    id: '61531b20cc9dfa2741a5b800',\n    title: 'College Algebra with Python',\n    certSlug: Certification CollegeAlgebraPy,\n    projects: [\n      {\n        id: '63d83ff239c73468b059cd3f',\n        title: 'Build a Multi-Function Calculator',\n        link: getCollegeAlgebraPyPath('build-a-multi-function-calculator'),\n        certSlug: Certification CollegeAlgebraPy\n      },\n      {\n        id: '63d83ffd39c73468b059cd40',\n        title: 'Build a Graphing Calculator',\n        link: getCollegeAlgebraPyPath('build-a-graphing-calculator'),\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 21,
    "total_chunks": 42
  },
  {
    "id": "65645a5a5b957f18c6c16cab941a957a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "link: `${machineLearningPyBase}/book-recommendation-engine-using-knn`, certSlug: Certification MachineLearningPy }, { id: '5e46f8edac417301a38fb930', title: 'Linear Regression Health Costs Calculator', link: `${machineLearningPyBase}/linear-regression-health-costs-calculator`, certSlug: CertificationMachineLearningPy }, { id: '5e46f8edac417301a38fb931', title: 'Neural Network SMS Text Classifier', link: `${machineLearningPyBase}/neural-network-sms-text-classifier`, certSlug: Certification MachineLearningPy } ] }, { id: '61531b20cc9dfa2741a5b800', title: 'College Algebra with Python', certSlug: Certification CollegeAlgebraPy, projects: [ { id: '63d83ff239c73468b059cd3f', title: 'Build a Multi-Function Calculator', link: getCollegeAlgebraPyPath('build-a-multi-function-calculator'), certSlug: Certification CollegeAlgebraPy }, { id: '63d83ffd39c73468b059cd40', title: 'Build a Graphing Calculator', link: getCollegeAlgebraPyPath('build-a-graphing-calculator'), certSlug: CertificationCollegeAlgebraPy\n      },\n      {\n        id: '63d8401039c73468b059cd41',\n        title: 'Build Three Math Games',\n        link: getCollegeAlgebraPyPath('build-three-math-games'),\n        certSlug: Certification CollegeAlgebraPy\n      },\n      {\n        id: '63d8401e39c73468b059cd42',\n        title: 'Build a Financial Calculator',\n        link: getCollegeAlgebraPyPath('build-a-financial-calculator'),\n        certSlug: Certification CollegeAlgebraPy\n      },\n      {\n        id: '63d8402e39c73468b059cd43',\n        title: 'Build a Data Graph Explorer',\n        link: getCollegeAlgebraPyPath('build-a-data-graph-explorer'),\n        certSlug: Certification CollegeAlgebraPy\n      }\n    ]\n  },\n  // Legacy certifications\n  {\n    id: '561add10cb82ac38a17513be',\n    title: 'Legacy Front End',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 22,
    "total_chunks": 42
  },
  {
    "id": "26a1f38fc60d36570b5793afcf31c2a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "link: getCollegeAlgebraPyPath('build-a-multi-function-calculator'), certSlug: Certification CollegeAlgebraPy }, { id: '63d83ffd39c73468b059cd40', title: 'Build a Graphing Calculator', link: getCollegeAlgebraPyPath('build-a-graphing-calculator'), certSlug: CertificationCollegeAlgebraPy }, { id: '63d8401039c73468b059cd41', title: 'Build Three Math Games', link: getCollegeAlgebraPyPath('build-three-math-games'), certSlug: Certification CollegeAlgebraPy }, { id: '63d8401e39c73468b059cd42', title: 'Build a Financial Calculator', link: getCollegeAlgebraPyPath('build-a-financial-calculator'), certSlug: Certification CollegeAlgebraPy }, { id: '63d8402e39c73468b059cd43', title: 'Build a Data Graph Explorer', link: getCollegeAlgebraPyPath('build-a-data-graph-explorer'), certSlug: Certification CollegeAlgebraPy } ] }, // Legacy certifications { id: '561add10cb82ac38a17513be', title: 'Legacy Front End', certSlug: CertificationLegacyFrontEnd,\n    projects: [\n      {\n        id: 'bd7158d8c242eddfaeb5bd13',\n        title: 'Build a Personal Portfolio Webpage',\n        link: `${legacyFrontEndResponsiveBase}/build-a-personal-portfolio-webpage`,\n        certSlug: Certification LegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd13',\n        title: 'Build a Random Quote Machine',\n        link: `${legacyFrontEndBase}/build-a-random-quote-machine`,\n        certSlug: Certification LegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd0f',\n        title: 'Build a 25 + 5 Clock',\n        link: `${legacyFrontEndBase}/build-a-25--5-clock`,\n        certSlug: Certification LegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd17',\n        title: 'Build a JavaScript Calculator',\n        link: `${legacyFrontEndBase}/build-a-javascript-calculator`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 23,
    "total_chunks": 42
  },
  {
    "id": "b3a56da97fee9eaa5db58e735ba49c5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "CollegeAlgebraPy } ] }, // Legacy certifications { id: '561add10cb82ac38a17513be', title: 'Legacy Front End', certSlug: CertificationLegacyFrontEnd, projects: [ { id: 'bd7158d8c242eddfaeb5bd13', title: 'Build a Personal Portfolio Webpage', link: `${legacyFrontEndResponsiveBase}/build-a-personal-portfolio-webpage`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd13', title: 'Build a Random Quote Machine', link: `${legacyFrontEndBase}/build-a-random-quote-machine`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd0f', title: 'Build a 25 + 5 Clock', link: `${legacyFrontEndBase}/build-a-25--5-clock`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd17', title: 'Build a JavaScript Calculator', link: `${legacyFrontEndBase}/build-a-javascript-calculator`, certSlug: CertificationLegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd10',\n        title: 'Show the Local Weather',\n        link: `${legacyFrontEndTakeHomeBase}/show-the-local-weather`,\n        certSlug: Certification LegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd1f',\n        title: 'Use the TwitchTV JSON API',\n        link: `${legacyFrontEndTakeHomeBase}/use-the-twitch-json-api`,\n        certSlug: Certification LegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd18',\n        title: 'Build a Tribute Page',\n        link: `${legacyFrontEndResponsiveBase}/build-a-tribute-page`,\n        certSlug: Certification LegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd19',\n        title: 'Build a Wikipedia Viewer',\n        link: `${legacyFrontEndTakeHomeBase}/build-a-wikipedia-viewer`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 24,
    "total_chunks": 42
  },
  {
    "id": "c80afcc37ced83ed24348c9e101ec4ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "5 Clock', link: `${legacyFrontEndBase}/build-a-25--5-clock`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd17', title: 'Build a JavaScript Calculator', link: `${legacyFrontEndBase}/build-a-javascript-calculator`, certSlug: CertificationLegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd10', title: 'Show the Local Weather', link: `${legacyFrontEndTakeHomeBase}/show-the-local-weather`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd1f', title: 'Use the TwitchTV JSON API', link: `${legacyFrontEndTakeHomeBase}/use-the-twitch-json-api`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd18', title: 'Build a Tribute Page', link: `${legacyFrontEndResponsiveBase}/build-a-tribute-page`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd19', title: 'Build a Wikipedia Viewer', link: `${legacyFrontEndTakeHomeBase}/build-a-wikipedia-viewer`, certSlug: CertificationLegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eedfaeb5bd1c',\n        title: 'Build a Tic Tac Toe Game',\n        link: `${legacyFrontEndTakeHomeBase}/build-a-tic-tac-toe-game`,\n        certSlug: Certification LegacyFrontEnd\n      },\n      {\n        id: 'bd7158d8c442eddfaeb5bd1c',\n        title: 'Build a Memory Light Game',\n        link: `${legacyFrontEndTakeHomeBase}/build-a-memory-light-game`,\n        certSlug: Certification LegacyFrontEnd\n      }\n    ]\n  },\n  {\n    id: '561abd10cb81ac38a17513bc',\n    title: 'Legacy JavaScript Algorithms and Data Structures',\n    certSlug: Certification JsAlgoDataStruct,\n    projects: [\n      {\n        id: 'aaa48de84e1ecc7c742e1124',\n        title: 'Palindrome Checker',\n        link: `${jsAlgoBase}/palindrome-checker`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 25,
    "total_chunks": 42
  },
  {
    "id": "57e9b410579da7721075baabf6457f2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "`${legacyFrontEndResponsiveBase}/build-a-tribute-page`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd19', title: 'Build a Wikipedia Viewer', link: `${legacyFrontEndTakeHomeBase}/build-a-wikipedia-viewer`, certSlug: CertificationLegacyFrontEnd }, { id: 'bd7158d8c442eedfaeb5bd1c', title: 'Build a Tic Tac Toe Game', link: `${legacyFrontEndTakeHomeBase}/build-a-tic-tac-toe-game`, certSlug: Certification LegacyFrontEnd }, { id: 'bd7158d8c442eddfaeb5bd1c', title: 'Build a Memory Light Game', link: `${legacyFrontEndTakeHomeBase}/build-a-memory-light-game`, certSlug: Certification LegacyFrontEnd } ] }, { id: '561abd10cb81ac38a17513bc', title: 'Legacy JavaScript Algorithms and Data Structures', certSlug: Certification JsAlgoDataStruct, projects: [ { id: 'aaa48de84e1ecc7c742e1124', title: 'Palindrome Checker', link: `${jsAlgoBase}/palindrome-checker`, certSlug: CertificationJsAlgoDataStruct\n      },\n      {\n        id: 'a7f4d8f2483413a6ce226cac',\n        title: 'Roman Numeral Converter',\n        link: `${jsAlgoBase}/roman-numeral-converter`,\n        certSlug: Certification JsAlgoDataStruct\n      },\n      {\n        id: '56533eb9ac21ba0edf2244e2',\n        title: 'Caesars Cipher',\n        link: `${jsAlgoBase}/caesars-cipher`,\n        certSlug: Certification JsAlgoDataStruct\n      },\n      {\n        id: 'aff0395860f5d3034dc0bfc9',\n        title: 'Telephone Number Validator',\n        link: `${jsAlgoBase}/telephone-number-validator`,\n        certSlug: Certification JsAlgoDataStruct\n      },\n      {\n        id: 'aa2e6f85cab2ab736c9a9b24',\n        title: 'Cash Register',\n        link: `${jsAlgoBase}/cash-register`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 26,
    "total_chunks": 42
  },
  {
    "id": "cf72b6db36b601725a9f1f1801f26142",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "] }, { id: '561abd10cb81ac38a17513bc', title: 'Legacy JavaScript Algorithms and Data Structures', certSlug: Certification JsAlgoDataStruct, projects: [ { id: 'aaa48de84e1ecc7c742e1124', title: 'Palindrome Checker', link: `${jsAlgoBase}/palindrome-checker`, certSlug: CertificationJsAlgoDataStruct }, { id: 'a7f4d8f2483413a6ce226cac', title: 'Roman Numeral Converter', link: `${jsAlgoBase}/roman-numeral-converter`, certSlug: Certification JsAlgoDataStruct }, { id: '56533eb9ac21ba0edf2244e2', title: 'Caesars Cipher', link: `${jsAlgoBase}/caesars-cipher`, certSlug: Certification JsAlgoDataStruct }, { id: 'aff0395860f5d3034dc0bfc9', title: 'Telephone Number Validator', link: `${jsAlgoBase}/telephone-number-validator`, certSlug: Certification JsAlgoDataStruct }, { id: 'aa2e6f85cab2ab736c9a9b24', title: 'Cash Register', link: `${jsAlgoBase}/cash-register`, certSlug: CertificationJsAlgoDataStruct\n      }\n    ]\n  },\n  {\n    id: '660add10cb82ac38a17513be',\n    title: 'Legacy Back End',\n    certSlug: Certification LegacyBackEnd,\n    projects: [\n      {\n        id: 'bd7158d8c443edefaeb5bdef',\n        title: 'Timestamp Microservice',\n        link: `${legacyBackEndBase}/timestamp-microservice`,\n        certSlug: Certification LegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443edefaeb5bdff',\n        title: 'Request Header Parser Microservice',\n        link: `${legacyBackEndBase}/request-header-parser-microservice`,\n        certSlug: Certification LegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443edefaeb5bd0e',\n        title: 'URL Shortener Microservice',\n        link: `${legacyBackEndBase}/url-shortener-microservice`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 27,
    "total_chunks": 42
  },
  {
    "id": "afbcf085a64779f4d766df8786ee0579",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "}, { id: 'aff0395860f5d3034dc0bfc9', title: 'Telephone Number Validator', link: `${jsAlgoBase}/telephone-number-validator`, certSlug: Certification JsAlgoDataStruct }, { id: 'aa2e6f85cab2ab736c9a9b24', title: 'Cash Register', link: `${jsAlgoBase}/cash-register`, certSlug: CertificationJsAlgoDataStruct } ] }, { id: '660add10cb82ac38a17513be', title: 'Legacy Back End', certSlug: Certification LegacyBackEnd, projects: [ { id: 'bd7158d8c443edefaeb5bdef', title: 'Timestamp Microservice', link: `${legacyBackEndBase}/timestamp-microservice`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443edefaeb5bdff', title: 'Request Header Parser Microservice', link: `${legacyBackEndBase}/request-header-parser-microservice`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443edefaeb5bd0e', title: 'URL Shortener Microservice', link: `${legacyBackEndBase}/url-shortener-microservice`, certSlug: CertificationLegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443edefaeb5bdee',\n        title: 'Image Search Abstraction Layer',\n        link: `${legacyBackEndTakeHomeBase}/build-an-image-search-abstraction-layer`,\n        certSlug: Certification LegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443edefaeb5bd0f',\n        title: 'File Metadata Microservice',\n        link: `${legacyBackEndBase}/file-metadata-microservice`,\n        certSlug: Certification LegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443eddfaeb5bdef',\n        title: 'Build a Voting App',\n        link: `${legacyBackEndTakeHomeBase}/build-a-voting-app`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 28,
    "total_chunks": 42
  },
  {
    "id": "7da92af1fc618c54cbef042ae09245e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "id: 'bd7158d8c443edefaeb5bdef', title: 'Timestamp Microservice', link: `${legacyBackEndBase}/timestamp-microservice`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443edefaeb5bdff', title: 'Request Header Parser Microservice', link: `${legacyBackEndBase}/request-header-parser-microservice`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443edefaeb5bd0e', title: 'URL Shortener Microservice', link: `${legacyBackEndBase}/url-shortener-microservice`, certSlug: CertificationLegacyBackEnd }, { id: 'bd7158d8c443edefaeb5bdee', title: 'Image Search Abstraction Layer', link: `${legacyBackEndTakeHomeBase}/build-an-image-search-abstraction-layer`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443edefaeb5bd0f', title: 'File Metadata Microservice', link: `${legacyBackEndBase}/file-metadata-microservice`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bdef', title: 'Build a Voting App', link: `${legacyBackEndTakeHomeBase}/build-a-voting-app`, certSlug: CertificationLegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443eddfaeb5bdff',\n        title: 'Build a Nightlife Coordination App',\n        link: `${legacyBackEndTakeHomeBase}/build-a-nightlife-coordination-app`,\n        certSlug: Certification LegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443eddfaeb5bd0e',\n        title: 'Chart the Stock Market',\n        link: `${legacyBackEndTakeHomeBase}/chart-the-stock-market`,\n        certSlug: Certification LegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443eddfaeb5bd0f',\n        title: 'Manage a Book Trading Club',\n        link: `${legacyBackEndTakeHomeBase}/manage-a-book-trading-club`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 29,
    "total_chunks": 42
  },
  {
    "id": "a103f41da3df5ad0a3aa569315572d22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Abstraction Layer', link: `${legacyBackEndTakeHomeBase}/build-an-image-search-abstraction-layer`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443edefaeb5bd0f', title: 'File Metadata Microservice', link: `${legacyBackEndBase}/file-metadata-microservice`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bdef', title: 'Build a Voting App', link: `${legacyBackEndTakeHomeBase}/build-a-voting-app`, certSlug: CertificationLegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bdff', title: 'Build a Nightlife Coordination App', link: `${legacyBackEndTakeHomeBase}/build-a-nightlife-coordination-app`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bd0e', title: 'Chart the Stock Market', link: `${legacyBackEndTakeHomeBase}/chart-the-stock-market`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bd0f', title: 'Manage a Book Trading Club', link: `${legacyBackEndTakeHomeBase}/manage-a-book-trading-club`, certSlug: CertificationLegacyBackEnd\n      },\n      {\n        id: 'bd7158d8c443eddfaeb5bdee',\n        title: 'Build a Pinterest Clone',\n        link: `${legacyBackEndTakeHomeBase}/build-a-pinterest-clone`,\n        certSlug: Certification LegacyBackEnd\n      }\n    ]\n  }, {\n    id: '561add10cb82ac39a17513bc',\n    title: 'Legacy Data Visualization',\n    certSlug: Certification LegacyDataVis,\n    projects: [\n      {\n        id: 'bd7157d8c242eddfaeb5bd13',\n        title: 'Build a Markdown Previewer',\n        link: `${legacyDataVisFrontEndBase}/build-a-markdown-previewer`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 30,
    "total_chunks": 42
  },
  {
    "id": "c20b9862768e5e5cafa27b07831887ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Coordination App', link: `${legacyBackEndTakeHomeBase}/build-a-nightlife-coordination-app`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bd0e', title: 'Chart the Stock Market', link: `${legacyBackEndTakeHomeBase}/chart-the-stock-market`, certSlug: Certification LegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bd0f', title: 'Manage a Book Trading Club', link: `${legacyBackEndTakeHomeBase}/manage-a-book-trading-club`, certSlug: CertificationLegacyBackEnd }, { id: 'bd7158d8c443eddfaeb5bdee', title: 'Build a Pinterest Clone', link: `${legacyBackEndTakeHomeBase}/build-a-pinterest-clone`, certSlug: Certification LegacyBackEnd } ] }, { id: '561add10cb82ac39a17513bc', title: 'Legacy Data Visualization', certSlug: Certification LegacyDataVis, projects: [ { id: 'bd7157d8c242eddfaeb5bd13', title: 'Build a Markdown Previewer', link: `${legacyDataVisFrontEndBase}/build-a-markdown-previewer`, certSlug: CertificationLegacyDataVis\n      },\n      {\n        id: 'bd7156d8c242eddfaeb5bd13',\n        title: 'Build a freeCodeCamp Forum Homepage',\n        link: `${legacyDataVisTakeHomeBase}/build-a-freecodecamp-forum-homepage`,\n        certSlug: Certification LegacyDataVis\n      },\n      {\n        id: 'bd7155d8c242eddfaeb5bd13',\n        title: 'Build a Recipe Box',\n        link: `${legacyDataVisTakeHomeBase}/build-a-recipe-box`,\n        certSlug: Certification LegacyDataVis\n      },\n      {\n        id: 'bd7154d8c242eddfaeb5bd13',\n        title: 'Build the Game of Life',\n        link: `${legacyDataVisTakeHomeBase}/build-the-game-of-life`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 31,
    "total_chunks": 42
  },
  {
    "id": "7faee312199a6b0fcbeaa8e5c378ec86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Clone', link: `${legacyBackEndTakeHomeBase}/build-a-pinterest-clone`, certSlug: Certification LegacyBackEnd } ] }, { id: '561add10cb82ac39a17513bc', title: 'Legacy Data Visualization', certSlug: Certification LegacyDataVis, projects: [ { id: 'bd7157d8c242eddfaeb5bd13', title: 'Build a Markdown Previewer', link: `${legacyDataVisFrontEndBase}/build-a-markdown-previewer`, certSlug: CertificationLegacyDataVis }, { id: 'bd7156d8c242eddfaeb5bd13', title: 'Build a freeCodeCamp Forum Homepage', link: `${legacyDataVisTakeHomeBase}/build-a-freecodecamp-forum-homepage`, certSlug: Certification LegacyDataVis }, { id: 'bd7155d8c242eddfaeb5bd13', title: 'Build a Recipe Box', link: `${legacyDataVisTakeHomeBase}/build-a-recipe-box`, certSlug: Certification LegacyDataVis }, { id: 'bd7154d8c242eddfaeb5bd13', title: 'Build the Game of Life', link: `${legacyDataVisTakeHomeBase}/build-the-game-of-life`, certSlug: CertificationLegacyDataVis\n      },\n      {\n        id: 'bd7153d8c242eddfaeb5bd13',\n        title: 'Build a Roguelike Dungeon Crawler Game',\n        link: `${legacyDataVisTakeHomeBase}/build-a-roguelike-dungeon-crawler-game`,\n        certSlug: Certification LegacyDataVis\n      },\n      {\n        id: 'bd7168d8c242eddfaeb5bd13',\n        title: 'Visualize Data with a Bar Chart',\n        link: `${legacyDataVisBase}/visualize-data-with-a-bar-chart`,\n        certSlug: Certification LegacyDataVis\n      },\n      {\n        id: 'bd7178d8c242eddfaeb5bd13',\n        title: 'Visualize Data with a Scatterplot Graph',\n        link: `${legacyDataVisBase}/visualize-data-with-a-scatterplot-graph`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 32,
    "total_chunks": 42
  },
  {
    "id": "c0fe98f544a9e8548ea0dff8e6f6ed77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "LegacyDataVis }, { id: 'bd7155d8c242eddfaeb5bd13', title: 'Build a Recipe Box', link: `${legacyDataVisTakeHomeBase}/build-a-recipe-box`, certSlug: Certification LegacyDataVis }, { id: 'bd7154d8c242eddfaeb5bd13', title: 'Build the Game of Life', link: `${legacyDataVisTakeHomeBase}/build-the-game-of-life`, certSlug: CertificationLegacyDataVis }, { id: 'bd7153d8c242eddfaeb5bd13', title: 'Build a Roguelike Dungeon Crawler Game', link: `${legacyDataVisTakeHomeBase}/build-a-roguelike-dungeon-crawler-game`, certSlug: Certification LegacyDataVis }, { id: 'bd7168d8c242eddfaeb5bd13', title: 'Visualize Data with a Bar Chart', link: `${legacyDataVisBase}/visualize-data-with-a-bar-chart`, certSlug: Certification LegacyDataVis }, { id: 'bd7178d8c242eddfaeb5bd13', title: 'Visualize Data with a Scatterplot Graph', link: `${legacyDataVisBase}/visualize-data-with-a-scatterplot-graph`, certSlug: CertificationLegacyDataVis\n      },\n      {\n        id: 'bd7188d8c242eddfaeb5bd13',\n        title: 'Visualize Data with a Heat Map',\n        link: `${legacyDataVisBase}/visualize-data-with-a-heat-map`,\n        certSlug: Certification LegacyDataVis\n      },\n      {\n        id: 'bd7198d8c242eddfaeb5bd13',\n        title: 'Show National Contiguity with a Force Directed Graph',\n        link: `${legacyDataVisTakeHomeBase}/show-national-contiguity-with-a-force-directed-graph`,\n        certSlug: Certification LegacyDataVis\n      },\n      {\n        id: 'bd7108d8c242eddfaeb5bd13',\n        title: 'Map Data Across the Globe',\n        link: `${legacyDataVisTakeHomeBase}/map-data-across-the-globe`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 33,
    "total_chunks": 42
  },
  {
    "id": "9dbb46458bdad0930e02c801b248521c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "'bd7168d8c242eddfaeb5bd13', title: 'Visualize Data with a Bar Chart', link: `${legacyDataVisBase}/visualize-data-with-a-bar-chart`, certSlug: Certification LegacyDataVis }, { id: 'bd7178d8c242eddfaeb5bd13', title: 'Visualize Data with a Scatterplot Graph', link: `${legacyDataVisBase}/visualize-data-with-a-scatterplot-graph`, certSlug: CertificationLegacyDataVis }, { id: 'bd7188d8c242eddfaeb5bd13', title: 'Visualize Data with a Heat Map', link: `${legacyDataVisBase}/visualize-data-with-a-heat-map`, certSlug: Certification LegacyDataVis }, { id: 'bd7198d8c242eddfaeb5bd13', title: 'Show National Contiguity with a Force Directed Graph', link: `${legacyDataVisTakeHomeBase}/show-national-contiguity-with-a-force-directed-graph`, certSlug: Certification LegacyDataVis }, { id: 'bd7108d8c242eddfaeb5bd13', title: 'Map Data Across the Globe', link: `${legacyDataVisTakeHomeBase}/map-data-across-the-globe`, certSlug: CertificationLegacyDataVis\n      }\n    ]\n  },\n  {\n    id: '561add10cb82ac38a17213bc',\n    title: 'Legacy Information Security and Quality Assurance',\n    // Keep this as information-security-and-quality-assurance\n    certSlug: Certification LegacyInfoSecQa,\n    projects: [\n      // Keep this as information-security-and-quality-assurance\n      {\n        id: '587d8249367417b2b2512c41',\n        title: 'Metric-Imperial Converter',\n        link: `${legacyInfosecQaQaBase}/metric-imperial-converter`,\n        certSlug: Certification LegacyInfoSecQa\n      },\n      {\n        id: '587d8249367417b2b2512c42',\n        title: 'Issue Tracker',\n        link: `${legacyInfosecQaQaBase}/issue-tracker`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 34,
    "total_chunks": 42
  },
  {
    "id": "cc9475d169a6ccb41ba0f7c956629b9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "National Contiguity with a Force Directed Graph', link: `${legacyDataVisTakeHomeBase}/show-national-contiguity-with-a-force-directed-graph`, certSlug: Certification LegacyDataVis }, { id: 'bd7108d8c242eddfaeb5bd13', title: 'Map Data Across the Globe', link: `${legacyDataVisTakeHomeBase}/map-data-across-the-globe`, certSlug: CertificationLegacyDataVis } ] }, { id: '561add10cb82ac38a17213bc', title: 'Legacy Information Security and Quality Assurance', // Keep this as information-security-and-quality-assurance certSlug: Certification LegacyInfoSecQa, projects: [ // Keep this as information-security-and-quality-assurance { id: '587d8249367417b2b2512c41', title: 'Metric-Imperial Converter', link: `${legacyInfosecQaQaBase}/metric-imperial-converter`, certSlug: Certification LegacyInfoSecQa }, { id: '587d8249367417b2b2512c42', title: 'Issue Tracker', link: `${legacyInfosecQaQaBase}/issue-tracker`, certSlug: CertificationLegacyInfoSecQa\n      },\n      {\n        id: '587d824a367417b2b2512c43',\n        title: 'Personal Library',\n        link: `${legacyInfosecQaQaBase}/personal-library`,\n        certSlug: Certification LegacyInfoSecQa\n      },\n      {\n        id: '587d824a367417b2b2512c44',\n        title: 'Stock Price Checker',\n        link: `${legacyInfosecQaInfosecBase}/stock-price-checker`,\n        certSlug: Certification LegacyInfoSecQa\n      },\n      {\n        id: '587d824a367417b2b2512c45',\n        title: 'Anonymous Message Board',\n        link: `${legacyInfosecQaInfosecBase}/anonymous-message-board`,\n        certSlug: Certification LegacyInfoSecQa\n      }\n    ]\n  },\n  {\n    id: '647e3159823e0ef219c7359b',\n    title: 'Foundational C# with Microsoft',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 35,
    "total_chunks": 42
  },
  {
    "id": "8d08a7f3505dcbe6fbdd633c5586a0d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "this as information-security-and-quality-assurance { id: '587d8249367417b2b2512c41', title: 'Metric-Imperial Converter', link: `${legacyInfosecQaQaBase}/metric-imperial-converter`, certSlug: Certification LegacyInfoSecQa }, { id: '587d8249367417b2b2512c42', title: 'Issue Tracker', link: `${legacyInfosecQaQaBase}/issue-tracker`, certSlug: CertificationLegacyInfoSecQa }, { id: '587d824a367417b2b2512c43', title: 'Personal Library', link: `${legacyInfosecQaQaBase}/personal-library`, certSlug: Certification LegacyInfoSecQa }, { id: '587d824a367417b2b2512c44', title: 'Stock Price Checker', link: `${legacyInfosecQaInfosecBase}/stock-price-checker`, certSlug: Certification LegacyInfoSecQa }, { id: '587d824a367417b2b2512c45', title: 'Anonymous Message Board', link: `${legacyInfosecQaInfosecBase}/anonymous-message-board`, certSlug: Certification LegacyInfoSecQa } ] }, { id: '647e3159823e0ef219c7359b', title: 'Foundational C# with Microsoft', certSlug: CertificationFoundationalCSharp,\n    projects: [\n      {\n        id: '647e22d18acb466c97ccbef8',\n        title: 'Foundational C# with Microsoft Certification Exam',\n        link: `${foundationalCSharpBase}/foundational-c-sharp-with-microsoft-certification-exam`,\n        certSlug: Certification FoundationalCSharp\n      }\n    ]\n  },\n  // Upcoming Certifications\n  {\n    id: '64514fda6c245de4d11eb7bb',\n    title: 'Certified Full Stack Developer',\n    certSlug: Certification FullStackDeveloper,\n    projects: [\n      {\n        id: '645147516c245de4d11eb7ba',\n        title: 'Certified Full Stack Developer Exam',\n        link: `${fullStackDeveloperBase}/exam-certified-full-stack-developer/exam-certified-full-stack-developer`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 36,
    "total_chunks": 42
  },
  {
    "id": "d2a3c1b50a5ad520d7d1acd750d25dfe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "LegacyInfoSecQa }, { id: '587d824a367417b2b2512c45', title: 'Anonymous Message Board', link: `${legacyInfosecQaInfosecBase}/anonymous-message-board`, certSlug: Certification LegacyInfoSecQa } ] }, { id: '647e3159823e0ef219c7359b', title: 'Foundational C# with Microsoft', certSlug: CertificationFoundationalCSharp, projects: [ { id: '647e22d18acb466c97ccbef8', title: 'Foundational C# with Microsoft Certification Exam', link: `${foundationalCSharpBase}/foundational-c-sharp-with-microsoft-certification-exam`, certSlug: Certification FoundationalCSharp } ] }, // Upcoming Certifications { id: '64514fda6c245de4d11eb7bb', title: 'Certified Full Stack Developer', certSlug: Certification FullStackDeveloper, projects: [ { id: '645147516c245de4d11eb7ba', title: 'Certified Full Stack Developer Exam', link: `${fullStackDeveloperBase}/exam-certified-full-stack-developer/exam-certified-full-stack-developer`, certSlug: CertificationFullStackDeveloper\n      }\n    ]\n  },\n  {\n    id: '651dd7e01d697d0aab7833b7',\n    title: 'A2 English for Developers',\n    certSlug: Certification A2English,\n    projects: [\n      {\n        id: '651dd3e06ffb500e3f2ce478',\n        title: 'A2 English for Developers Certification Exam',\n        link: `${a2EnglishBase}/a2-english-for-developers-certification-exam/a2-english-for-developers-certification-exam`,\n        certSlug: Certification A2English\n      }\n    ]\n  },\n  {\n    id: '66607e53317411dd5e8aae21',\n    title: 'B1 English for Developers',\n    certSlug: Certification B1English,\n    projects: [\n      {\n        id: '66607e5b317411dd5e8aae22',\n        title: \"Dialogue 1: I'm Tom\",\n        link: `${b1EnglishBase}/learn-how-to-describe-places-and-events/dialogue-1-im-tom`,\n        certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 37,
    "total_chunks": 42
  },
  {
    "id": "15d51a99882bfa9829a840ef6804eb74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Certification FullStackDeveloper, projects: [ { id: '645147516c245de4d11eb7ba', title: 'Certified Full Stack Developer Exam', link: `${fullStackDeveloperBase}/exam-certified-full-stack-developer/exam-certified-full-stack-developer`, certSlug: CertificationFullStackDeveloper } ] }, { id: '651dd7e01d697d0aab7833b7', title: 'A2 English for Developers', certSlug: Certification A2English, projects: [ { id: '651dd3e06ffb500e3f2ce478', title: 'A2 English for Developers Certification Exam', link: `${a2EnglishBase}/a2-english-for-developers-certification-exam/a2-english-for-developers-certification-exam`, certSlug: Certification A2English } ] }, { id: '66607e53317411dd5e8aae21', title: 'B1 English for Developers', certSlug: Certification B1English, projects: [ { id: '66607e5b317411dd5e8aae22', title: \"Dialogue 1: I'm Tom\", link: `${b1EnglishBase}/learn-how-to-describe-places-and-events/dialogue-1-im-tom`, certSlug: CertificationB1English\n      }\n    ]\n  },\n  {\n    id: '681a6b22e5a782fe3459984a',\n    title: 'A2 Professional Spanish',\n    certSlug: Certification A2Spanish,\n    projects: [\n      {\n        id: '681a8796e5a782fe3459984b',\n        title: 'Dialogue 1: PLACEHOLDER',\n        link: `${a2SpanishBase}/talk-about-who-you-are-by-using-key-verbs\n/text-1`,\n        certSlug: Certification A2Spanish\n      }\n    ]\n  },\n  {\n    id: '682c3153086dd7cabe7f48bc',\n    title: 'A2 Professional Chinese',\n    certSlug: Certification",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 38,
    "total_chunks": 42
  },
  {
    "id": "694de9def32cc13ab12ccbe98d400685",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "Developers Certification Exam', link: `${a2EnglishBase}/a2-english-for-developers-certification-exam/a2-english-for-developers-certification-exam`, certSlug: Certification A2English } ] }, { id: '66607e53317411dd5e8aae21', title: 'B1 English for Developers', certSlug: Certification B1English, projects: [ { id: '66607e5b317411dd5e8aae22', title: \"Dialogue 1: I'm Tom\", link: `${b1EnglishBase}/learn-how-to-describe-places-and-events/dialogue-1-im-tom`, certSlug: CertificationB1English } ] }, { id: '681a6b22e5a782fe3459984a', title: 'A2 Professional Spanish', certSlug: Certification A2Spanish, projects: [ { id: '681a8796e5a782fe3459984b', title: 'Dialogue 1: PLACEHOLDER', link: `${a2SpanishBase}/talk-about-who-you-are-by-using-key-verbs /text-1`, certSlug: Certification A2Spanish } ] }, { id: '682c3153086dd7cabe7f48bc', title: 'A2 Professional Chinese', certSlug: CertificationA2Chinese,\n    projects: [\n      {\n        id: '682c2753317b88f1ecdad894',\n        title: 'Dialogue 1: PLACEHOLDER',\n        link: `${a2ChineseBase}/talk-about-what-you-do-by-using-key-verbs\n/text-1`,\n        certSlug: Certification A2Chinese\n      }\n    ]\n  },\n  {\n    id: '682c3153086dd7cabe7f48bc',\n    title: 'A1 Professional Chinese',\n    certSlug: Certification A1Chinese,\n    projects: [\n      {\n        id: '682c2753317b88f1ecdad894',\n        title: 'Dialogue 1: PLACEHOLDER',\n        link: `${a1ChineseBase}/learn-essential-courtesies-at-the-office\n/text-1`,\n        certSlug: Certification A1Chinese\n      }\n    ]\n  }\n] as const;\n\nfunction getResponsiveWebDesignPath(project: string) {\n  return `${responsiveWeb22Base}/${project}-project/${project}`;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 39,
    "total_chunks": 42
  },
  {
    "id": "a9b302002d93d3749f6ffc15f0cf8dea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "1: PLACEHOLDER', link: `${a2SpanishBase}/talk-about-who-you-are-by-using-key-verbs /text-1`, certSlug: Certification A2Spanish } ] }, { id: '682c3153086dd7cabe7f48bc', title: 'A2 Professional Chinese', certSlug: CertificationA2Chinese, projects: [ { id: '682c2753317b88f1ecdad894', title: 'Dialogue 1: PLACEHOLDER', link: `${a2ChineseBase}/talk-about-what-you-do-by-using-key-verbs /text-1`, certSlug: Certification A2Chinese } ] }, { id: '682c3153086dd7cabe7f48bc', title: 'A1 Professional Chinese', certSlug: Certification A1Chinese, projects: [ { id: '682c2753317b88f1ecdad894', title: 'Dialogue 1: PLACEHOLDER', link: `${a1ChineseBase}/learn-essential-courtesies-at-the-office /text-1`, certSlug: Certification A1Chinese } ] } ] as const; function getResponsiveWebDesignPath(project: string) { return `${responsiveWeb22Base}/${project}-project/${project}`; }\n\nfunction getCollegeAlgebraPyPath(project: string) {\n  return `${collegeAlgebraPyBase}/${project}-project/${project}`;\n}\n\nfunction getJavaScriptAlgoPath(project: string) {\n  return `${jsAlgo22Base}/${project}-project/${project}`;\n}\n\ntype FilteredCert<T, U> = T extends { certSlug: U } ? T : never;\n\ntype CurrentCert = FilteredCert<\n  (typeof allStandardCerts)[number],\n  (typeof currentCertifications)[number]\n>;\n\ntype LegacyCert = FilteredCert<\n  (typeof allStandardCerts)[number],\n  (typeof legacyCertifications)[number]\n>;\n\ntype UpcomingCert = FilteredCert<\n  (typeof allStandardCerts)[number],\n  (typeof upcomingCertifications)[number]\n>;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 40,
    "total_chunks": 42
  },
  {
    "id": "c4f5dc4262d64bc27a5f12a67e71cf9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
    "source_type": "git_repo",
    "title": "cert-and-project-map",
    "content": "1: PLACEHOLDER', link: `${a1ChineseBase}/learn-essential-courtesies-at-the-office /text-1`, certSlug: Certification A1Chinese } ] } ] as const; function getResponsiveWebDesignPath(project: string) { return `${responsiveWeb22Base}/${project}-project/${project}`; } function getCollegeAlgebraPyPath(project: string) { return `${collegeAlgebraPyBase}/${project}-project/${project}`; } function getJavaScriptAlgoPath(project: string) { return `${jsAlgo22Base}/${project}-project/${project}`; } type FilteredCert<T, U> = T extends { certSlug: U } ? T : never; type CurrentCert = FilteredCert< (typeof allStandardCerts)[number], (typeof currentCertifications)[number] >; type LegacyCert = FilteredCert< (typeof allStandardCerts)[number], (typeof legacyCertifications)[number] >; type UpcomingCert = FilteredCert< (typeof allStandardCerts)[number], (typeof upcomingCertifications)[number] >;\n\nconst currentCerts = allStandardCerts.filter((cert): cert is CurrentCert =>\n  currentCertifications.includes(cert.certSlug)\n);\nconst legacyCerts = allStandardCerts.filter((cert): cert is LegacyCert =>\n  legacyCertifications.includes(cert.certSlug)\n);\nconst upcomingCerts = allStandardCerts.filter((cert): cert is UpcomingCert =>\n  upcomingCertifications.includes(cert.certSlug)\n);\nconst liveCerts = showUpcomingChanges\n  ? [...currentCerts, ...legacyCerts, fullstackCert, ...upcomingCerts]\n  : [...currentCerts, ...legacyCerts, fullstackCert];\n\ntype CertsToProjects = Record<\n  (typeof allStandardCerts)[number]['certSlug'],\n  (typeof allStandardCerts)[number]['projects']\n>;\n\nconst certsToProjects = allStandardCerts.reduce((acc, curr) => {\n  return {\n    ...acc,\n    [curr.certSlug]: curr.projects\n  };\n}, {} as CertsToProjects);\n\nexport type CertTitle =\n  | (typeof liveCerts)[number]['title']\n  | 'Legacy Full Stack';\n\nexport { liveCerts, certsToProjects };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 31968,
      "relative_path": "git_repos\\freeCodeCamp\\client\\config\\cert-and-project-map.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 41,
    "total_chunks": 42
  },
  {
    "id": "d59c78968625aff1996ae9dcf04fd9dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.tsx",
    "source_type": "git_repo",
    "title": "show-update-email",
    "content": "import React, {\n  useState,\n  useEffect,\n  type FormEvent,\n  type ChangeEvent\n} from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport isEmail from 'validator/lib/isEmail';\nimport {\n  Container,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Col,\n  Row,\n  Button,\n  Spacer\n} from '@freecodecamp/ui';\n\nimport envData from '../../config/env.json';\nimport { Loader, Link } from '../components/helpers';\nimport './show-update-email.css';\nimport { isSignedInSelector, userSelector } from '../redux/selectors';\nimport { hardGoTo as navigate } from '../redux/actions';\nimport { updateMyEmail } from '../redux/settings/actions';\nimport { maybeEmailRE } from '../utils';\nimport type { User } from '../redux/prop-types';\n\nconst { apiLocation } = envData;\n\ninterface ShowUpdateEmailProps {\n  isNewEmail: boolean;\n  updateMyEmail: (e: string) => void;\n  path?: string;\n  isSignedIn: boolean;\n  navigate: (location: string) => void;\n}\n\nconst mapStateToProps = createSelector(\n  userSelector,\n  isSignedInSelector,\n  (user: User | null, isSignedIn) => ({\n    isNewEmail: !user?.email || user.emailVerified,\n    isSignedIn\n  })\n);\n\nconst mapDispatchToProps = { updateMyEmail, navigate };\n\nfunction ShowUpdateEmail({\n  isNewEmail,\n  updateMyEmail,\n  isSignedIn,\n  navigate\n}: ShowUpdateEmailProps) {\n  const { t } = useTranslation();\n  const [emailValue, setEmailValue] = useState('');\n\nuseEffect(() => {\n    if (!isSignedIn) navigate(`${apiLocation}/signin`);\n  }, [isSignedIn, navigate]);\n  if (!isSignedIn) return <Loader fullScreen={true} />;\n\nfunction handleSubmit(event: FormEvent) {\n    event.preventDefault();\n    updateMyEmail(emailValue);\n  }\n\nfunction onChange(event: ChangeEvent<HTMLInputElement>) {\n    setEmailValue(event.target.value);\n    return null;\n  }\n\nconst emailValidationState = maybeEmailRE.test(emailValue)\n    ? isEmail(emailValue)\n      ? 'success'\n      : 'error'\n    : null;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3778,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.tsx",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e3af5fac07ba8d85f48dc922c9e5dcc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.tsx",
    "source_type": "git_repo",
    "title": "show-update-email",
    "content": "isNewEmail: !user?.email || user.emailVerified, isSignedIn }) ); const mapDispatchToProps = { updateMyEmail, navigate }; function ShowUpdateEmail({ isNewEmail, updateMyEmail, isSignedIn, navigate }: ShowUpdateEmailProps) { const { t } = useTranslation(); const [emailValue, setEmailValue] = useState(''); useEffect(() => { if (!isSignedIn) navigate(`${apiLocation}/signin`); }, [isSignedIn, navigate]); if (!isSignedIn) return <Loader fullScreen={true} />; function handleSubmit(event: FormEvent) { event.preventDefault(); updateMyEmail(emailValue); } function onChange(event: ChangeEvent<HTMLInputElement>) { setEmailValue(event.target.value); return null; } const emailValidationState = maybeEmailRE.test(emailValue) ? isEmail(emailValue) ? 'success' : 'error' : null;\n\nreturn (\n    <>\n      <Helmet>\n        <title>{t('misc.update-email-1')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Container>\n        <Spacer size='m' />\n        <h2 className='text-center'>{t('misc.update-email-2')}</h2>\n        <Row>\n          <Col sm={6} smOffset={3}>\n            <Row>\n              <form\n                onSubmit={handleSubmit}\n                data-playwright-test-label='update-email-form'\n              >\n                <FormGroup\n                  className='update-email-field'\n                  validationState={emailValidationState}\n                >\n                  <ControlLabel htmlFor='emailInput'>\n                    {t('misc.email')}\n                  </ControlLabel>\n                  <FormControl\n                    id='emailInput'\n                    onChange={onChange}\n                    placeholder='camperbot@example.com'\n                    required={true}\n                    type='email'\n                  />\n                </FormGroup>\n                <Button\n                  block={true}\n                  size='large'\n                  variant='primary'\n                  disabled={emailValidationState !== 'success'}\n                  type='submit'\n                >\n                  {isNewEmail\n                    ? t('buttons.update-email')\n                    : t('buttons.verify-email')}\n                </Button>\n              </form>\n              <p className='text-center'>\n                <Link to='/signout'>{t('buttons.sign-out')}</Link>\n              </p>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nShowUpdateEmail.displayName = 'ShowUpdateEmail';",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3778,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.tsx",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2532db6fb787a066158939c2b2b64ee2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.tsx",
    "source_type": "git_repo",
    "title": "show-update-email",
    "content": "? 'success' : 'error' : null; return ( <> <Helmet> <title>{t('misc.update-email-1')} | freeCodeCamp.org</title> </Helmet> <Container> <Spacer size='m' /> <h2 className='text-center'>{t('misc.update-email-2')}</h2> <Row> <Col sm={6} smOffset={3}> <Row> <form onSubmit={handleSubmit} data-playwright-test-label='update-email-form' > <FormGroup className='update-email-field' validationState={emailValidationState} > <ControlLabel htmlFor='emailInput'> {t('misc.email')} </ControlLabel> <FormControl id='emailInput' onChange={onChange} placeholder='camperbot@example.com' required={true} type='email' /> </FormGroup> <Button block={true} size='large' variant='primary' disabled={emailValidationState !== 'success'} type='submit' > {isNewEmail ? t('buttons.update-email') : t('buttons.verify-email')} </Button> </form> <p className='text-center'> <Link to='/signout'>{t('buttons.sign-out')}</Link> </p> </Row> </Col> </Row> </Container> </> ); } ShowUpdateEmail.displayName = 'ShowUpdateEmail';\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUpdateEmail);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3778,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-update-email.tsx",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ad80b390302b9cbdfa3b759550b8f71d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\app-mount-notifier.test.tsx",
    "source_type": "git_repo",
    "title": "app-mount-notifier.test",
    "content": "import { render, waitFor } from '@testing-library/react';\nimport React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { Provider } from 'react-redux';\n\nimport { i18nextCodes } from '../../../shared/config/i18n';\nimport i18nTestConfig from '../../i18n/config-for-tests';\nimport { createStore } from '../redux/create-store';\nimport AppMountNotifier from './app-mount-notifier';\n\njest.unmock('react-i18next');\n\ntype Language = keyof typeof i18nextCodes;\ntype LanguagePair = [string, string];\n\nconst store = createStore();\n\n// Create a nested array for languages\nconst languages = Object.keys(i18nextCodes).map(\n  (key): LanguagePair => [i18nextCodes[key as Language], key]\n);\n\ndescribe('AppMountNotifier', () => {\n  const setup = (lang: string) => {\n    i18nTestConfig.language = lang;\n\nrender(\n      <Provider store={store}>\n        <I18nextProvider i18n={i18nTestConfig}>\n          <AppMountNotifier>\n            <p>App content</p>\n          </AppMountNotifier>\n        </I18nextProvider>\n      </Provider>\n    );\n  };\n\ntest.each(languages)(\n    'should set the lang attribute to %s if the language is %s',\n    async langCode => {\n      setup(langCode);\n\nawait waitFor(() => {\n        /* eslint-disable-next-line testing-library/no-node-access */\n        expect(document.querySelector('html')).toHaveAttribute(\n          'lang',\n          langCode\n        );\n      });\n    }\n  );\n});",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1418,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\app-mount-notifier.test.tsx",
      "source_type": "git_repo"
    },
    "token_count": 332,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "10fe43478276a5679349bc0ec019e02f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
    "source_type": "git_repo",
    "title": "show-settings",
    "content": "import React, { useRef } from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { Container, Spacer } from '@freecodecamp/ui';\nimport { useFeatureIsOn } from '@growthbook/growthbook-react';\n\nimport store from 'store';\nimport envData from '../../config/env.json';\nimport { createFlashMessage } from '../components/Flash/redux';\nimport { Loader } from '../components/helpers';\nimport Certification from '../components/settings/certification';\nimport MiscSettings from '../components/settings/misc-settings';\nimport DangerZone from '../components/settings/danger-zone';\nimport Email from '../components/settings/email';\nimport Honesty from '../components/settings/honesty';\nimport Privacy from '../components/settings/privacy';\nimport UserToken from '../components/settings/user-token';\nimport ExamToken from '../components/settings/exam-token';\nimport { hardGoTo as navigate } from '../redux/actions';\nimport {\n  signInLoadingSelector,\n  userSelector,\n  isSignedInSelector,\n  userTokenSelector\n} from '../redux/selectors';\nimport type { User } from '../redux/prop-types';\nimport {\n  submitNewAbout,\n  updateMyHonesty,\n  updateMyQuincyEmail,\n  updateMySound,\n  updateMyKeyboardShortcuts,\n  verifyCert,\n  resetMyEditorLayout\n} from '../redux/settings/actions';\n\nconst { apiLocation } = envData;\n\n// TODO: update types for actions\ntype ShowSettingsProps = {\n  createFlashMessage: typeof createFlashMessage;\n  isSignedIn: boolean;\n  navigate: (location: string) => void;\n  showLoading: boolean;\n  toggleSoundMode: (sound: boolean) => void;\n  resetEditorLayout: () => void;\n  toggleKeyboardShortcuts: (keyboardShortcuts: boolean) => void;\n  updateIsHonest: () => void;\n  updateQuincyEmail: (isSendQuincyEmail: boolean) => void;\n  user: User | null;\n  verifyCert: typeof verifyCert;\n  path?: string;\n  userToken: string | null;\n};",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6989,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "6a9568be7060077e2cc3e710964a0888",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
    "source_type": "git_repo",
    "title": "show-settings",
    "content": "{ submitNewAbout, updateMyHonesty, updateMyQuincyEmail, updateMySound, updateMyKeyboardShortcuts, verifyCert, resetMyEditorLayout } from '../redux/settings/actions'; const { apiLocation } = envData; // TODO: update types for actions type ShowSettingsProps = { createFlashMessage: typeof createFlashMessage; isSignedIn: boolean; navigate: (location: string) => void; showLoading: boolean; toggleSoundMode: (sound: boolean) => void; resetEditorLayout: () => void; toggleKeyboardShortcuts: (keyboardShortcuts: boolean) => void; updateIsHonest: () => void; updateQuincyEmail: (isSendQuincyEmail: boolean) => void; user: User | null; verifyCert: typeof verifyCert; path?: string; userToken: string | null; };\n\nconst mapStateToProps = createSelector(\n  signInLoadingSelector,\n  userSelector,\n  isSignedInSelector,\n  userTokenSelector,\n  (\n    showLoading: boolean,\n    user: User | null,\n    isSignedIn,\n    userToken: string | null\n  ) => ({\n    showLoading,\n    user,\n    isSignedIn,\n    userToken\n  })\n);\n\nconst mapDispatchToProps = {\n  createFlashMessage,\n  navigate,\n  submitNewAbout,\n  toggleSoundMode: (sound: boolean) => updateMySound({ sound }),\n  toggleKeyboardShortcuts: (keyboardShortcuts: boolean) =>\n    updateMyKeyboardShortcuts({ keyboardShortcuts }),\n  updateIsHonest: updateMyHonesty,\n  updateQuincyEmail: (sendQuincyEmail: boolean) =>\n    updateMyQuincyEmail({ sendQuincyEmail }),\n  resetEditorLayout: () => resetMyEditorLayout(),\n  verifyCert\n};\n\nexport function ShowSettings(props: ShowSettingsProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    createFlashMessage,\n    isSignedIn,\n    toggleSoundMode,\n    toggleKeyboardShortcuts,\n    resetEditorLayout,\n    user,\n    navigate,\n    showLoading,\n    updateQuincyEmail,\n    updateIsHonest,\n    verifyCert,\n    userToken\n  } = props;\n\nconst isSignedInRef = useRef(isSignedIn);\n\nconst examTokenFlag = useFeatureIsOn('exam-token-widget');",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6989,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "4b7b473dc5e8f5c0bb142cf55eafb794",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
    "source_type": "git_repo",
    "title": "show-settings",
    "content": "userToken }) ); const mapDispatchToProps = { createFlashMessage, navigate, submitNewAbout, toggleSoundMode: (sound: boolean) => updateMySound({ sound }), toggleKeyboardShortcuts: (keyboardShortcuts: boolean) => updateMyKeyboardShortcuts({ keyboardShortcuts }), updateIsHonest: updateMyHonesty, updateQuincyEmail: (sendQuincyEmail: boolean) => updateMyQuincyEmail({ sendQuincyEmail }), resetEditorLayout: () => resetMyEditorLayout(), verifyCert }; export function ShowSettings(props: ShowSettingsProps): JSX.Element { const { t } = useTranslation(); const { createFlashMessage, isSignedIn, toggleSoundMode, toggleKeyboardShortcuts, resetEditorLayout, user, navigate, showLoading, updateQuincyEmail, updateIsHonest, verifyCert, userToken } = props; const isSignedInRef = useRef(isSignedIn); const examTokenFlag = useFeatureIsOn('exam-token-widget');\n\nif (showLoading || !user) {\n    return <Loader fullScreen={true} />;\n  }\n\nif (!isSignedInRef.current) {\n    navigate(`${apiLocation}/signin`);\n    return <Loader fullScreen={true} />;\n  }\n\nconst {\n    completedChallenges,\n    email,\n    is2018DataVisCert,\n    isApisMicroservicesCert,\n    isJsAlgoDataStructCert,\n    isBackEndCert,\n    isDataVisCert,\n    isFrontEndCert,\n    isInfosecQaCert,\n    isQaCertV7,\n    isInfosecCertV7,\n    isFrontEndLibsCert,\n    isFullStackCert,\n    isRespWebDesignCert,\n    isSciCompPyCertV7,\n    isDataAnalysisPyCertV7,\n    isMachineLearningPyCertV7,\n    isRelationalDatabaseCertV8,\n    isCollegeAlgebraPyCertV8,\n    isFoundationalCSharpCertV8,\n    isJsAlgoDataStructCertV8,\n    isEmailVerified,\n    isHonest,\n    sendQuincyEmail,\n    username,\n    keyboardShortcuts\n  } = user; const sound = (store get('fcc-sound') as boolean) false;\n  const editorLayout = (store get('challenge-layout') as boolean) false;\n  return (\n    <>\n      <Helmet title={`${t('buttons settings')} | freeCodeCamp",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6989,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "1189a01eb549b007838dd2b78d7f3823",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
    "source_type": "git_repo",
    "title": "show-settings",
    "content": "= useFeatureIsOn('exam-token-widget'); if (showLoading || !user) { return <Loader fullScreen={true} />; } if (!isSignedInRef.current) { navigate(`${apiLocation}/signin`); return <Loader fullScreen={true} />; } const { completedChallenges, email, is2018DataVisCert, isApisMicroservicesCert, isJsAlgoDataStructCert, isBackEndCert, isDataVisCert, isFrontEndCert, isInfosecQaCert, isQaCertV7, isInfosecCertV7, isFrontEndLibsCert, isFullStackCert, isRespWebDesignCert, isSciCompPyCertV7, isDataAnalysisPyCertV7, isMachineLearningPyCertV7, isRelationalDatabaseCertV8, isCollegeAlgebraPyCertV8, isFoundationalCSharpCertV8, isJsAlgoDataStructCertV8, isEmailVerified, isHonest, sendQuincyEmail, username, keyboardShortcuts } = user; const sound = (store get('fcc-sound') as boolean) false; const editorLayout = (store get('challenge-layout') as boolean) false; return ( <> <Helmet title={`${t('buttons settings')} | freeCodeCamporg`} />\n      <Container>\n        <main>\n          <Spacer size='l' />\n          <h1\n            id='content-start'\n            className='text-center'\n            style={{ overflowWrap: 'break-word' }}\n            data-playwright-test-label='settings-heading'\n          >\n            {t('settings",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6989,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5446f7382b41734ef18578d83ccb589a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
    "source_type": "git_repo",
    "title": "show-settings",
    "content": "return <Loader fullScreen={true} />; } const { completedChallenges, email, is2018DataVisCert, isApisMicroservicesCert, isJsAlgoDataStructCert, isBackEndCert, isDataVisCert, isFrontEndCert, isInfosecQaCert, isQaCertV7, isInfosecCertV7, isFrontEndLibsCert, isFullStackCert, isRespWebDesignCert, isSciCompPyCertV7, isDataAnalysisPyCertV7, isMachineLearningPyCertV7, isRelationalDatabaseCertV8, isCollegeAlgebraPyCertV8, isFoundationalCSharpCertV8, isJsAlgoDataStructCertV8, isEmailVerified, isHonest, sendQuincyEmail, username, keyboardShortcuts } = user; const sound = (store get('fcc-sound') as boolean) false; const editorLayout = (store get('challenge-layout') as boolean) false; return ( <> <Helmet title={`${t('buttons settings')} | freeCodeCamporg`} /> <Container> <main> <Spacer size='l' /> <h1 id='content-start' className='text-center' style={{ overflowWrap: 'break-word' }} data-playwright-test-label='settings-heading' > {t('settingsfor', { username: username })}\n          </h1>\n          <MiscSettings\n            keyboardShortcuts={keyboardShortcuts}\n            sound={sound}\n            editorLayout={editorLayout}\n            resetEditorLayout={resetEditorLayout}\n            toggleKeyboardShortcuts={toggleKeyboardShortcuts}\n            toggleSoundMode={toggleSoundMode}\n          />\n          <Spacer size='m' />\n          <Privacy />\n          <Spacer size='m' />\n          <Email\n            email={email}\n            isEmailVerified={isEmailVerified}\n            sendQuincyEmail={sendQuincyEmail}\n            updateQuincyEmail={updateQuincyEmail}\n          />\n          <Spacer size='m' />\n          <Honesty isHonest={isHonest} updateIsHonest={updateIsHonest} />\n          <Spacer size='m' />\n          {examTokenFlag && <ExamToken />}\n          <Certification\n            completedChallenges={completedChallenges}\n            createFlashMessage={createFlashMessage}\n            is2018DataVisCert={is2018DataVisCert}\n            isApisMicroservicesCert={isApisMicroservicesCert}\n            isBackEndCert={isBackEndCert}\n            isDataAnalysisPyCertV7={isDataAnalysisPyCertV7}\n            isDataVisCert={isDataVisCert}\n            isCollegeAlgebraPyCertV8={isCollegeAlgebraPyCertV8}\n            isFoundationalCSharpCertV8={isFoundationalCSharpCertV8}\n            isFrontEndCert={isFrontEndCert}\n            isFrontEndLibsCert={isFrontEndLibsCert}\n            isFullStackCert={isFullStackCert}\n            isHonest={isHonest}\n            isInfosecCertV7={isInfosecCertV7}\n            isInfosecQaCert={isInfosecQaCert}\n            isJsAlgoDataStructCert={isJsAlgoDataStructCert}\n            isMachineLearningPyCertV7={isMachineLearningPyCertV7}\n            isQaCertV7={isQaCertV7}\n            isRelationalDatabaseCertV8={isRelationalDatabaseCertV8}\n            isRespWebDesignCert={isRespWebDesignCert}\n            isSciCompPyCertV7={isSciCompPyCertV7}\n            isJsAlgoDataStructCertV8={isJsAlgoDataStructCertV8}\n            username={username}\n            verifyCert={verifyCert}\n            isEmailVerified={isEmailVerified}\n          />\n          {userToken && (\n            <>\n              <Spacer size='m' />\n              <UserToken />\n            </>\n          )}\n          <Spacer size='m' />\n          <DangerZone />\n        </main>\n      </Container>\n    </>\n  );\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6989,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
      "source_type": "git_repo"
    },
    "token_count": 853,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "1641e086aa389d42637778238d8aa04d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
    "source_type": "git_repo",
    "title": "show-settings",
    "content": "<Spacer size='m' /> <Privacy /> <Spacer size='m' /> <Email email={email} isEmailVerified={isEmailVerified} sendQuincyEmail={sendQuincyEmail} updateQuincyEmail={updateQuincyEmail} /> <Spacer size='m' /> <Honesty isHonest={isHonest} updateIsHonest={updateIsHonest} /> <Spacer size='m' /> {examTokenFlag && <ExamToken />} <Certification completedChallenges={completedChallenges} createFlashMessage={createFlashMessage} is2018DataVisCert={is2018DataVisCert} isApisMicroservicesCert={isApisMicroservicesCert} isBackEndCert={isBackEndCert} isDataAnalysisPyCertV7={isDataAnalysisPyCertV7} isDataVisCert={isDataVisCert} isCollegeAlgebraPyCertV8={isCollegeAlgebraPyCertV8} isFoundationalCSharpCertV8={isFoundationalCSharpCertV8} isFrontEndCert={isFrontEndCert} isFrontEndLibsCert={isFrontEndLibsCert} isFullStackCert={isFullStackCert} isHonest={isHonest} isInfosecCertV7={isInfosecCertV7} isInfosecQaCert={isInfosecQaCert} isJsAlgoDataStructCert={isJsAlgoDataStructCert} isMachineLearningPyCertV7={isMachineLearningPyCertV7} isQaCertV7={isQaCertV7} isRelationalDatabaseCertV8={isRelationalDatabaseCertV8} isRespWebDesignCert={isRespWebDesignCert} isSciCompPyCertV7={isSciCompPyCertV7} isJsAlgoDataStructCertV8={isJsAlgoDataStructCertV8} username={username} verifyCert={verifyCert} isEmailVerified={isEmailVerified} /> {userToken && ( <> <Spacer size='m' /> <UserToken /> </> )} <Spacer size='m' /> <DangerZone /> </main> </Container> </> ); }\n\nShowSettings.displayName = 'ShowSettings';\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSettings);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 6989,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-settings.tsx",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "6171b83173db93bfcdb3d2a704480424",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\app-mount-notifier.tsx",
    "source_type": "git_repo",
    "title": "app-mount-notifier",
    "content": "import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { appMount } from '../redux/actions';\n\ninterface AppMountNotifierProps {\n  children: React.ReactNode;\n  appMount: () => void;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ appMount }, dispatch);\n\nconst AppMountNotifier = ({\n  children,\n  appMount\n}: AppMountNotifierProps): JSX.Element => {\n  useEffect(() => {\n    appMount();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nconst { i18n } = useTranslation();\n\nreturn (\n    <>\n      <Helmet htmlAttributes={{ lang: i18n.language }} />\n      {children}\n    </>\n  );\n};\n\nAppMountNotifier.displayName = 'AppMountNotifier';\n\nexport default connect(null, mapDispatchToProps)(AppMountNotifier);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 927,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\app-mount-notifier.tsx",
      "source_type": "git_repo"
    },
    "token_count": 206,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "90c3dc8af66bb832d382762aa7d0183b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
    "source_type": "git_repo",
    "title": "show-user",
    "content": "import React, { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport type { TFunction } from 'i18next';\nimport { Trans, withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport {\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Panel,\n  Col,\n  Row,\n  Button,\n  Spacer\n} from '@freecodecamp/ui';\n\nimport Login from '../components/Header/components/login';\nimport { Loader, FullWidthRow } from '../components/helpers';\nimport { reportUser } from '../redux/actions';\nimport {\n  userFetchStateSelector,\n  isSignedInSelector,\n  userSelector\n} from '../redux/selectors';\nimport { UserFetchState } from '../redux/prop-types';\n\ninterface ShowUserProps {\n  email: string;\n  isSignedIn: boolean;\n  reportUser: (payload: {\n    username: string;\n    reportDescription: string;\n  }) => void;\n  t: TFunction;\n  userFetchState: UserFetchState;\n  username: string;\n}\n\nconst mapStateToProps = createSelector(\n  isSignedInSelector,\n  userFetchStateSelector,\n  userSelector,\n  (\n    isSignedIn,\n    userFetchState: UserFetchState,\n    { email }: { email: string }\n  ) => ({\n    isSignedIn,\n    userFetchState,\n    email\n  })\n);\n\nconst mapDispatchToProps = {\n  reportUser\n};\n\nfunction ShowUser({\n  email,\n  isSignedIn,\n  reportUser,\n  t,\n  userFetchState,\n  username\n}: ShowUserProps) {\n  const [textarea, setTextarea] = useState('');\n\nfunction handleChange(e: React.ChangeEvent<HTMLTextAreaElement>) {\n    setTextarea(e.target.value.slice());\n  }\n\nfunction handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    reportUser({ username, reportDescription: textarea });\n  }\n\nconst { pending, complete, errored } = userFetchState;\n  if (pending && !complete) {\n    return <Loader fullScreen={true} />;\n  }",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3786,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "0e60dc329b3811ca55040aaffe6a2a2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
    "source_type": "git_repo",
    "title": "show-user",
    "content": "( isSignedIn, userFetchState: UserFetchState, { email }: { email: string } ) => ({ isSignedIn, userFetchState, email }) ); const mapDispatchToProps = { reportUser }; function ShowUser({ email, isSignedIn, reportUser, t, userFetchState, username }: ShowUserProps) { const [textarea, setTextarea] = useState(''); function handleChange(e: React.ChangeEvent<HTMLTextAreaElement>) { setTextarea(e.target.value.slice()); } function handleSubmit(e: React.FormEvent) { e.preventDefault(); reportUser({ username, reportDescription: textarea }); } const { pending, complete, errored } = userFetchState; if (pending && !complete) { return <Loader fullScreen={true} />; }\n\nif ((complete || errored) && !isSignedIn) {\n    return (\n      <main>\n        <FullWidthRow>\n          <Spacer size='l' />\n          <Panel variant='primary' className='text-center'>\n            <Panel.Heading>\n              <Panel.Title>{t('report.sign-in')}</Panel.Title>\n            </Panel.Heading>\n            <Panel.Body className='text-center'>\n              <Spacer size='l' />\n              <Col md={6} mdOffset={3} sm={8} smOffset={2} xs={12}>\n                <Login block={true}>{t('buttons.click-here')}</Login>\n              </Col>\n              <Spacer size='xl' />\n            </Panel.Body>\n          </Panel>\n        </FullWidthRow>\n      </main>\n    );\n  }",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3786,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "4a2a2b2c993faf35a379516712fc00a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
    "source_type": "git_repo",
    "title": "show-user",
    "content": "React.ChangeEvent<HTMLTextAreaElement>) { setTextarea(e.target.value.slice()); } function handleSubmit(e: React.FormEvent) { e.preventDefault(); reportUser({ username, reportDescription: textarea }); } const { pending, complete, errored } = userFetchState; if (pending && !complete) { return <Loader fullScreen={true} />; } if ((complete || errored) && !isSignedIn) { return ( <main> <FullWidthRow> <Spacer size='l' /> <Panel variant='primary' className='text-center'> <Panel.Heading> <Panel.Title>{t('report.sign-in')}</Panel.Title> </Panel.Heading> <Panel.Body className='text-center'> <Spacer size='l' /> <Col md={6} mdOffset={3} sm={8} smOffset={2} xs={12}> <Login block={true}>{t('buttons.click-here')}</Login> </Col> <Spacer size='xl' /> </Panel.Body> </Panel> </FullWidthRow> </main> ); }\n\nreturn (\n    <>\n      <Helmet>\n        <title>{t('report.portfolio')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Spacer size='l' />\n      <Row className='text-center overflow-fix'>\n        <Col sm={8} smOffset={2} xs={12}>\n          <h2>{t('report.portfolio-2', { username: username })}</h2>\n        </Col>\n      </Row>\n      <Row className='overflow-fix'>\n        <Col sm={6} smOffset={3} xs={12}>\n          <p>\n            <Trans i18nKey='report.notify-1'>\n              <strong>{{ email }}</strong>\n            </Trans>\n          </p>\n          <p>{t('report.notify-2')}</p>\n          <form onSubmit={handleSubmit}>\n            <FormGroup controlId='report-user-textarea'>\n              <ControlLabel>{t('report.what')}</ControlLabel>\n              <FormControl\n                componentClass='textarea'\n                onChange={handleChange}\n                placeholder={t('report.details')}\n                value={textarea}\n              />\n            </FormGroup>\n            <Button block={true} variant='primary' type='submit'>\n              {t('report.submit')}\n            </Button>\n            <Spacer size='m' />\n          </form>\n        </Col>\n      </Row>\n    </>\n  );\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3786,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ae895c73b0b92fb6df57ec52ff90b44b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
    "source_type": "git_repo",
    "title": "show-user",
    "content": "<Spacer size='xl' /> </Panel.Body> </Panel> </FullWidthRow> </main> ); } return ( <> <Helmet> <title>{t('report.portfolio')} | freeCodeCamp.org</title> </Helmet> <Spacer size='l' /> <Row className='text-center overflow-fix'> <Col sm={8} smOffset={2} xs={12}> <h2>{t('report.portfolio-2', { username: username })}</h2> </Col> </Row> <Row className='overflow-fix'> <Col sm={6} smOffset={3} xs={12}> <p> <Trans i18nKey='report.notify-1'> <strong>{{ email }}</strong> </Trans> </p> <p>{t('report.notify-2')}</p> <form onSubmit={handleSubmit}> <FormGroup controlId='report-user-textarea'> <ControlLabel>{t('report.what')}</ControlLabel> <FormControl componentClass='textarea' onChange={handleChange} placeholder={t('report.details')} value={textarea} /> </FormGroup> <Button block={true} variant='primary' type='submit'> {t('report.submit')} </Button> <Spacer size='m' /> </form> </Col> </Row> </> ); }\n\nShowUser.displayName = 'ShowUser';\n\nexport default withTranslation()(\n  connect(mapStateToProps, mapDispatchToProps)(ShowUser)\n);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3786,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-user.tsx",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "dbc6f5ed92870c10852e8349c25573a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.ts",
    "source_type": "git_repo",
    "title": "create-language-redirect",
    "content": "const createLanguageRedirect = ({\n  clientLocale,\n  lang\n}: {\n  clientLocale: string;\n  lang: string;\n}): string => {\n  // return early if requesting the same page\n  if (clientLocale === lang) return window?.location.toString();\n\nconst pathArray = window?.location?.pathname?.split('/');\n  const path = pathArray\n    .filter(item => (item !== clientLocale && item !== lang ? item : ''))\n    .join('/');\n\nconst hostTail = window?.location?.host;\n  const nextLocation = `${window?.location?.protocol}//${hostTail}`;\n\nif (lang === 'english') return `${nextLocation}/${path}`;\n\nreturn `${nextLocation}/${lang}/${path}`;\n};\n\nexport default createLanguageRedirect;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 667,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.ts",
      "source_type": "git_repo"
    },
    "token_count": 153,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9c686dc92ab32a6750226ebbb88444d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\redirect-daily-challenge-archive.tsx",
    "source_type": "git_repo",
    "title": "redirect-daily-challenge-archive",
    "content": "import { withPrefix } from 'gatsby';\nimport createRedirect from './create-redirect';\n\nexport default createRedirect(\n  withPrefix('/learn/daily-coding-challenge/archive')\n);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 174,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\redirect-daily-challenge-archive.tsx",
      "source_type": "git_repo"
    },
    "token_count": 37,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "79555af366c45e9daaed774cac3a0d3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\create-redirect.ts",
    "source_type": "git_repo",
    "title": "create-redirect",
    "content": "import { navigate } from 'gatsby';\nimport type { RouteComponentProps } from '@gatsbyjs/reach-router';\n\nconst createRedirect =\n  (to = '/'): ((_props: RouteComponentProps) => JSX.Element | null) =>\n  () => {\n    if (typeof window !== 'undefined') {\n      void navigate(to);\n    }\n    return null;\n  };\n\nexport default createRedirect;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 333,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\create-redirect.ts",
      "source_type": "git_repo"
    },
    "token_count": 79,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "498beaef5d692e0a2520b362202631b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\redirect-home.ts",
    "source_type": "git_repo",
    "title": "redirect-home",
    "content": "import { withPrefix } from 'gatsby';\nimport createRedirect from './create-redirect';\n\nexport default createRedirect(withPrefix('/'));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 134,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\redirect-home.ts",
      "source_type": "git_repo"
    },
    "token_count": 26,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "63f41701cd6f2b229fac6973615669b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\404.tsx",
    "source_type": "git_repo",
    "title": "404",
    "content": "import { Router } from '@gatsbyjs/reach-router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowProfileOrFourOhFour from '../client-only-routes/show-profile-or-four-oh-four';\nimport FourOhFour from '../components/FourOhFour';\n\nfunction FourOhFourPage(): JSX.Element {\n  return (\n    <Router>\n      {/* Error from installing @types/react-helmet and @types/react-redux */}\n      {/* eslint-disable-next-line @typescript-eslint/ban-ts-comment */}\n      {/* @ts-ignore */}\n      <ShowProfileOrFourOhFour path={withPrefix('/:maybeUser')} />\n\n<FourOhFour default />\n    </Router>\n  );\n}\n\nFourOhFourPage.displayName = 'FourOhFourPage';\n\nexport default FourOhFourPage;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 696,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\404.tsx",
      "source_type": "git_repo"
    },
    "token_count": 161,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "453940b9d3efa7629bd710fad6aeafc1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\blocked.tsx",
    "source_type": "git_repo",
    "title": "blocked",
    "content": "import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Container, Col, Row, Spacer } from '@freecodecamp/ui';\n\nfunction BlockedPage(): JSX.Element {\n  return (\n    <>\n      <Helmet title={`Access Denied | freeCodeCamp.org`} />\n      <Container className='text-center'>\n        <Spacer size='l' />\n        <Row>\n          <Col lg={8} lgOffset={2} sm={10} smOffset={1} xs={12}>\n            <h1 id='content-start' data-playwright-test-label='main-heading'>\n              We can&apos;t log you in.\n            </h1>\n            <Spacer size='l' />\n            <Col lg={10} lgOffset={1} sm={10} smOffset={1} xs={12}>\n              <div\n                className='text-start'\n                data-playwright-test-label='blocked-body-text'\n              >\n                <p>\n                  United States export control and economic sanctions rules\n                  don&apos;t allow us to log in visitors from your region. Sorry\n                  about this. The situation may change in the future.\n                </p>\n                <p>\n                  If you want, you can{' '}\n                  <a\n                    href='https://www.okta.com/blocked'\n                    data-playwright-test-label='learn-more-link'\n                  >\n                    learn more about these restrictions\n                  </a>\n                  .\n                </p>\n              </div>\n            </Col>\n          </Col>\n        </Row>\n        <Spacer size='l' />\n      </Container>\n    </>\n  );\n}\n\nBlockedPage.displayName = 'BlockedPage';\n\nexport default BlockedPage;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1584,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\blocked.tsx",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9a7eb90fd847444107a215070aae1ae9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\catalog.css",
    "source_type": "git_repo",
    "title": "catalog",
    "content": ".catalog-wrap {\n  display: flex;\n  gap: 2rem;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n}\n\n.catalog-item {\n  padding: 1rem;\n  background-color: var(--primary-background);\n  width: 400px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.catalog-item-bottom {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 399,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\catalog.css",
      "source_type": "git_repo"
    },
    "token_count": 107,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8bc68afeafbc139deffb7721bc6c0c95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
    "source_type": "git_repo",
    "title": "create-language-redirect.test",
    "content": "import createLanguageRedirect from './create-language-redirect';\n\ndescribe('createLanguageRedirect for clientLocale === english', () => {\n  const envVars = {\n    clientLocale: 'english'\n  };\n\ndescribe('challenge page', () => {\n    const currentPageURL =\n      'https://www.freecodecamp.org/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const chinesePageURL =\n      'https://www.freecodecamp.org/chinese/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const espanolPageURL =\n      'https://www.freecodecamp.org/espanol/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const chineseTraditionalPageURL =\n      'https://www.freecodecamp.org/chinese-traditional/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const dothrakiPageURL =\n      'https://www.freecodecamp.org/dothraki/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n\nconst originalLocation = window.location;\n\nbeforeEach(() => {\n      Object.defineProperty(window, 'location', {\n        writable: true,\n        value: new URL(currentPageURL)\n      });\n    });\n\nafterEach(() => {\n      window.location = originalLocation;\n    });\n\n[\n      { lang: 'english', url: currentPageURL },\n      { lang: 'chinese', url: chinesePageURL },\n      { lang: 'espanol', url: espanolPageURL },\n      { lang: 'chinese-traditional', url: chineseTraditionalPageURL },\n      { lang: 'dothraki', url: dothrakiPageURL }\n    ].forEach(({ lang, url }) => {\n      it(\n        lang === 'english'\n          ? `should redirect to same version of page for lang == english`\n          : `should redirect to ${lang} version of page`,\n        () => {\n          const receivedPageURL = createLanguageRedirect({\n            ...envVars,\n            lang\n          });\n          expect(receivedPageURL).toBe(url);\n        }\n      );\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6707,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "55a218317635279eba27c6e87ac46811",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
    "source_type": "git_repo",
    "title": "create-language-redirect.test",
    "content": "[ { lang: 'english', url: currentPageURL }, { lang: 'chinese', url: chinesePageURL }, { lang: 'espanol', url: espanolPageURL }, { lang: 'chinese-traditional', url: chineseTraditionalPageURL }, { lang: 'dothraki', url: dothrakiPageURL } ].forEach(({ lang, url }) => { it( lang === 'english' ? `should redirect to same version of page for lang == english` : `should redirect to ${lang} version of page`, () => { const receivedPageURL = createLanguageRedirect({ ...envVars, lang }); expect(receivedPageURL).toBe(url); } ); }); });\n\ndescribe('settings page', () => {\n    const currentPageURL = 'https://www.freecodecamp.org/settings';\n    const chinesePageURL = 'https://www.freecodecamp.org/chinese/settings';\n    const espanolPageURL = 'https://www.freecodecamp.org/espanol/settings';\n    const chineseTraditionalPageURL =\n      'https://www.freecodecamp.org/chinese-traditional/settings';\n    const dothrakiPageURL = 'https://www.freecodecamp.org/dothraki/settings';\n\nconst originalLocation = window.location;\n\nbeforeEach(() => {\n      Object.defineProperty(window, 'location', {\n        writable: true,\n        value: new URL(currentPageURL)\n      });\n    });\n\nafterEach(() => {\n      window.location = originalLocation;\n    });\n\n[\n      { lang: 'english', url: currentPageURL },\n      { lang: 'chinese', url: chinesePageURL },\n      { lang: 'espanol', url: espanolPageURL },\n      { lang: 'chinese-traditional', url: chineseTraditionalPageURL },\n      { lang: 'dothraki', url: dothrakiPageURL }\n    ].forEach(({ lang, url }) => {\n      it(\n        lang === 'english'\n          ? `should redirect to same version of page for lang == english`\n          : `should redirect to ${lang} version of page`,\n        () => {\n          const receivedPageURL = createLanguageRedirect({\n            ...envVars,\n            lang\n          });\n          expect(receivedPageURL).toBe(url);\n        }\n      );\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6707,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "a7cba019162dab781e516698f98e1ecd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
    "source_type": "git_repo",
    "title": "create-language-redirect.test",
    "content": "{ lang: 'english', url: currentPageURL }, { lang: 'chinese', url: chinesePageURL }, { lang: 'espanol', url: espanolPageURL }, { lang: 'chinese-traditional', url: chineseTraditionalPageURL }, { lang: 'dothraki', url: dothrakiPageURL } ].forEach(({ lang, url }) => { it( lang === 'english' ? `should redirect to same version of page for lang == english` : `should redirect to ${lang} version of page`, () => { const receivedPageURL = createLanguageRedirect({ ...envVars, lang }); expect(receivedPageURL).toBe(url); } ); }); }); });\n\ndescribe('createLanguageRedirect for clientLocale === chinese', () => {\n  const envVars = {\n    clientLocale: 'chinese'\n  };\n\ndescribe('challenge page', () => {\n    const currentPageURL =\n      'https://www.freecodecamp.org/chinese/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const englishPageURL =\n      'https://www.freecodecamp.org/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const espanolPageURL =\n      'https://www.freecodecamp.org/espanol/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const chineseTraditionalPageURL =\n      'https://www.freecodecamp.org/chinese-traditional/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n    const dothrakiPageURL =\n      'https://www.freecodecamp.org/dothraki/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element';\n\nconst originalLocation = window.location;\n\nbeforeEach(() => {\n      Object.defineProperty(window, 'location', {\n        writable: true,\n        value: new URL(currentPageURL)\n      });\n    });\n\nafterEach(() => {\n      window.location = originalLocation;\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6707,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "e1cd1c4fb2831d1abfd2b80be4fa19dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
    "source_type": "git_repo",
    "title": "create-language-redirect.test",
    "content": "receivedPageURL = createLanguageRedirect({ ...envVars, lang }); expect(receivedPageURL).toBe(url); } ); }); }); }); describe('createLanguageRedirect for clientLocale === chinese', () => { const envVars = { clientLocale: 'chinese' }; describe('challenge page', () => { const currentPageURL = 'https://www.freecodecamp.org/chinese/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element'; const englishPageURL = 'https://www.freecodecamp.org/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element'; const espanolPageURL = 'https://www.freecodecamp.org/espanol/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element'; const chineseTraditionalPageURL = 'https://www.freecodecamp.org/chinese-traditional/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element'; const dothrakiPageURL = 'https://www.freecodecamp.org/dothraki/learn/responsive-web-design/basic-html-and-html5/inform-with-the-paragraph-element'; const originalLocation = window.location; beforeEach(() => { Object.defineProperty(window, 'location', { writable: true, value: new URL(currentPageURL) }); }); afterEach(() => { window.location = originalLocation; });\n\n[\n      { lang: 'chinese', url: currentPageURL },\n      { lang: 'english', url: englishPageURL },\n      { lang: 'espanol', url: espanolPageURL },\n      { lang: 'chinese-traditional', url: chineseTraditionalPageURL },\n      { lang: 'dothraki', url: dothrakiPageURL }\n    ].forEach(({ lang, url }) => {\n      it(\n        lang === 'chinese'\n          ? `should redirect to same version of page for lang == chinese`\n          : `should redirect to ${lang} version of page`,\n        () => {\n          const receivedPageURL = createLanguageRedirect({\n            ...envVars,\n            lang\n          });\n          expect(receivedPageURL).toBe(url);\n        }\n      );\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6707,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "beeea91d3a78f023b71b55dc36bc06ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
    "source_type": "git_repo",
    "title": "create-language-redirect.test",
    "content": "[ { lang: 'chinese', url: currentPageURL }, { lang: 'english', url: englishPageURL }, { lang: 'espanol', url: espanolPageURL }, { lang: 'chinese-traditional', url: chineseTraditionalPageURL }, { lang: 'dothraki', url: dothrakiPageURL } ].forEach(({ lang, url }) => { it( lang === 'chinese' ? `should redirect to same version of page for lang == chinese` : `should redirect to ${lang} version of page`, () => { const receivedPageURL = createLanguageRedirect({ ...envVars, lang }); expect(receivedPageURL).toBe(url); } ); }); });\n\ndescribe('settings page', () => {\n    const currentPageURL = 'https://www.freecodecamp.org/chinese/settings';\n    const englishPageURL = 'https://www.freecodecamp.org/settings';\n    const espanolPageURL = 'https://www.freecodecamp.org/espanol/settings';\n    const chineseTraditionalPageURL =\n      'https://www.freecodecamp.org/chinese-traditional/settings';\n    const dothrakiPageURL = 'https://www.freecodecamp.org/dothraki/settings';\n\nconst originalLocation = window.location;\n\nbeforeEach(() => {\n      Object.defineProperty(window, 'location', {\n        writable: true,\n        value: new URL(currentPageURL)\n      });\n    });\n\nafterEach(() => {\n      window.location = originalLocation;\n    });\n\n[\n      { lang: 'chinese', url: currentPageURL },\n      { lang: 'english', url: englishPageURL },\n      { lang: 'espanol', url: espanolPageURL },\n      { lang: 'chinese-traditional', url: chineseTraditionalPageURL },\n      { lang: 'dothraki', url: dothrakiPageURL }\n    ].forEach(({ lang, url }) => {\n      it(\n        lang === 'chinese'\n          ? `should redirect to same version of page for lang == chinese`\n          : `should redirect to ${lang} version of page`,\n        () => {\n          const receivedPageURL = createLanguageRedirect({\n            ...envVars,\n            lang\n          });\n          expect(receivedPageURL).toBe(url);\n        }\n      );\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6707,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\components\\create-language-redirect.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "48587916d2cb687a3bf640b615a1b346",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\catalog.tsx",
    "source_type": "git_repo",
    "title": "catalog",
    "content": "import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Spacer } from '@freecodecamp/ui';\nimport { ButtonLink } from '../components/helpers';\nimport { catalog } from '../../../shared/config/catalog';\nimport { showUpcomingChanges } from '../../config/env.json';\nimport FourOhFour from '../components/FourOhFour';\n\nimport './catalog.css';\n\nconst CatalogPage = () => {\n  const { t } = useTranslation();\n\nreturn showUpcomingChanges ? (\n    <main>\n      <Spacer size='l' />\n      <h1 className='text-center'>{t('curriculum.catalog.title')}</h1>\n      <Spacer size='l' />\n      <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n        <section className='catalog-wrap'>\n          {catalog.map(course => {\n            const { superBlock, level, hours } = course;\n\nconst { title, summary } = t(`intro:${superBlock}`, {\n              returnObjects: true\n            }) as {\n              title: string;\n              summary: string[];\n            };\n\nreturn (\n              <div className='catalog-item' key={superBlock}>\n                <div className='catalog-item-top'>\n                  <h2>{title}</h2>\n                  <hr />\n                  {summary.map(text => (\n                    <p key='text'>{text}</p>\n                  ))}\n                </div>\n                <div className='catalog-item-bottom'>\n                  <div>\n                    {t(`curriculum.catalog.levels.${level}`)} &bull; {hours}{' '}\n                    hours\n                  </div>\n                  <ButtonLink href={`/learn/${superBlock}`}>\n                    {t('buttons.go-to-course')}\n                  </ButtonLink>\n                </div>\n              </div>\n            );\n          })}\n        </section>\n      </Col>\n      <Spacer size='l' />\n    </main>\n  ) : (\n    <FourOhFour />\n  );\n};\n\nexport default CatalogPage;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1880,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\catalog.tsx",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2e4db84580dc1ad988eb5b0c60005997",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "import { isEmpty } from 'lodash-es';\nimport { QRCodeSVG } from 'qrcode.react';\nimport React, { useEffect, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\nimport { Container, Col, Row, Image, Button, Spacer } from '@freecodecamp/ui';\n\nimport envData from '../../config/env.json';\nimport { getLangCode } from '../../../shared/config/i18n';\nimport FreeCodeCampLogo from '../assets/icons/freecodecamp-logo';\nimport MicrosoftLogo from '../assets/icons/microsoft-logo';\nimport { createFlashMessage } from '../components/Flash/redux';\nimport { Loader } from '../components/helpers';\nimport RedirectHome from '../components/redirect-home';\nimport { LocalStorageThemes } from '../redux/types';\nimport { showCert, fetchProfileForUser } from '../redux/actions';\nimport {\n  showCertSelector,\n  showCertFetchStateSelector,\n  userFetchStateSelector,\n  isDonatingSelector,\n  usernameSelector,\n  createUserByNameSelector,\n  isSignedInSelector\n} from '../redux/selectors';\nimport type { UserFetchState, User } from '../redux/prop-types';\nimport { liveCerts } from '../../config/cert-and-project-map';\nimport {\n  certificateMissingErrorMessage,\n  reallyWeirdErrorMessage,\n  standardErrorMessage\n} from '../utils/error-messages';\n\nimport { PaymentContext } from '../../../shared/config/donation-settings';\nimport ribbon from '../assets/images/ribbon.svg';\nimport {\n  Certification,\n  CertSlug,\n  linkedInCredentialIds\n} from '../../../shared/config/certification-settings';\nimport MultiTierDonationForm from '../components/Donation/multi-tier-donation-form';\nimport callGA from '../analytics/call-ga';\nimport ShowProjectLinks from './show-project-links';\n\nconst { clientLocale } = envData;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 14
  },
  {
    "id": "e1aabfecb57899bd6966bb6b35ceed32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "{ showCert, fetchProfileForUser } from '../redux/actions'; import { showCertSelector, showCertFetchStateSelector, userFetchStateSelector, isDonatingSelector, usernameSelector, createUserByNameSelector, isSignedInSelector } from '../redux/selectors'; import type { UserFetchState, User } from '../redux/prop-types'; import { liveCerts } from '../../config/cert-and-project-map'; import { certificateMissingErrorMessage, reallyWeirdErrorMessage, standardErrorMessage } from '../utils/error-messages'; import { PaymentContext } from '../../../shared/config/donation-settings'; import ribbon from '../assets/images/ribbon.svg'; import { Certification, CertSlug, linkedInCredentialIds } from '../../../shared/config/certification-settings'; import MultiTierDonationForm from '../components/Donation/multi-tier-donation-form'; import callGA from '../analytics/call-ga'; import ShowProjectLinks from './show-project-links'; const { clientLocale } = envData;\n\nconst localeCode = getLangCode(clientLocale);\ntype Cert = {\n  username: string;\n  name: string;\n  certSlug: CertSlug;\n  certTitle: string;\n  completionTime: number;\n  date: number;\n};\ninterface ShowCertificationProps {\n  cert: Cert;\n  certDashedName: string;\n  certSlug: string;\n  createFlashMessage: typeof createFlashMessage;\n  fetchProfileForUser: (username: string) => void;\n  fetchState: {\n    pending: boolean;\n    complete: boolean;\n    errored: boolean;\n  };\n  isDonating: boolean;\n  isValidCert: boolean;\n  isSignedIn: boolean;\n  location: {\n    pathname: string;\n  };\n  showCert: ({\n    username,\n    certSlug\n  }: {\n    username: string;\n    certSlug: string;\n  }) => void;\n  signedInUserName: string;\n  user: User | null;\n  userFetchState: UserFetchState;\n  userFullName: string;\n  username: string;\n}\n\nconst mapStateToProps = (state: unknown, props: ShowCertificationProps) => {\n  const isValidCert = liveCerts.some(\n    ({ certSlug }) => String(certSlug) === props.certSlug\n  );\n\nconst { username } = props;\n\nconst userByNameSelector = createUserByNameSelector(username) as (\n    state: unknown\n  ) => User | null;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 14
  },
  {
    "id": "057a66b71838abd82732accf5bf6ece5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "boolean; isValidCert: boolean; isSignedIn: boolean; location: { pathname: string; }; showCert: ({ username, certSlug }: { username: string; certSlug: string; }) => void; signedInUserName: string; user: User | null; userFetchState: UserFetchState; userFullName: string; username: string; } const mapStateToProps = (state: unknown, props: ShowCertificationProps) => { const isValidCert = liveCerts.some( ({ certSlug }) => String(certSlug) === props.certSlug ); const { username } = props; const userByNameSelector = createUserByNameSelector(username) as ( state: unknown ) => User | null;\n\nreturn createSelector(\n    showCertSelector,\n    showCertFetchStateSelector,\n    usernameSelector,\n    userByNameSelector,\n    userFetchStateSelector,\n    isDonatingSelector,\n    isSignedInSelector,\n    (\n      cert: Cert,\n      fetchState: ShowCertificationProps['fetchState'],\n      signedInUserName: string,\n      user: User | null,\n      userFetchState: UserFetchState,\n      isDonating: boolean,\n      isSignedIn: boolean\n    ) => ({\n      cert,\n      fetchState,\n      isValidCert,\n      signedInUserName,\n      user,\n      userFetchState,\n      isDonating,\n      isSignedIn\n    })\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    { createFlashMessage, showCert, fetchProfileForUser },\n    dispatch\n  );\n\nconst DonationCloseBtn = ({ onClick }: { onClick: () => void }) => {\n  const { t } = useTranslation();\n\nreturn (\n    <div>\n      <Button block={true} size='small' variant='primary' onClick={onClick}>\n        {t('buttons.close')}\n      </Button>\n    </div>\n  );\n};\n\nconst DonationSection = ({\n  isDonationSubmitted,\n  handleProcessing,\n  hideDonationSection\n}: {\n  isDonationSubmitted: boolean;\n  handleProcessing: () => void;\n  hideDonationSection: () => void;\n}) => {\n  const { t } = useTranslation();",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 2,
    "total_chunks": 14
  },
  {
    "id": "cb70c5a04dfb34d5ba4fea6a0fa93ac6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "}; const mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators( { createFlashMessage, showCert, fetchProfileForUser }, dispatch ); const DonationCloseBtn = ({ onClick }: { onClick: () => void }) => { const { t } = useTranslation(); return ( <div> <Button block={true} size='small' variant='primary' onClick={onClick}> {t('buttons.close')} </Button> </div> ); }; const DonationSection = ({ isDonationSubmitted, handleProcessing, hideDonationSection }: { isDonationSubmitted: boolean; handleProcessing: () => void; hideDonationSection: () => void; }) => { const { t } = useTranslation();\n\nreturn (\n    <div\n      className='donation-section'\n      data-playwright-test-label='donation-section'\n    >\n      <Spacer size='l' />\n      {!isDonationSubmitted && (\n        <Row>\n          <Col lg={8} lgOffset={2} sm={10} smOffset={1} xs={12}>\n            <p data-playwright-test-label='donation-text'>\n              {t('donate.only-you')}\n            </p>\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <Col\n          lg={8}\n          lgOffset={2}\n          sm={10}\n          smOffset={1}\n          xs={12}\n          data-playwright-test-label='donation-form'\n        >\n          <MultiTierDonationForm\n            defaultTheme={LocalStorageThemes.Light}\n            handleProcessing={handleProcessing}\n            isMinimalForm={true}\n            paymentContext={PaymentContext.Certificate}\n          />\n        </Col>\n      </Row>\n      <Spacer size='m' />\n      <Row>\n        <Col sm={4} smOffset={4} xs={6} xsOffset={3}>\n          {isDonationSubmitted && (\n            <DonationCloseBtn onClick={hideDonationSection} />\n          )}\n        </Col>\n      </Row>\n      <Spacer size='l' />\n    </div>\n  );\n};\n\nconst ShareCertBtns = ({\n  username,\n  certDate,\n  certTitle,\n  certSlug,\n  certURL\n}: {\n  username: string;\n  certDate: Date;\n  certTitle: string;\n  certSlug: CertSlug;\n  certURL: string;\n}) => {\n  const { t } = useTranslation();",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 14
  },
  {
    "id": "2ad069d265225ad58b379feecc9f35ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "{t('donate.only-you')} </p> </Col> </Row> )} <Row> <Col lg={8} lgOffset={2} sm={10} smOffset={1} xs={12} data-playwright-test-label='donation-form' > <MultiTierDonationForm defaultTheme={LocalStorageThemes.Light} handleProcessing={handleProcessing} isMinimalForm={true} paymentContext={PaymentContext.Certificate} /> </Col> </Row> <Spacer size='m' /> <Row> <Col sm={4} smOffset={4} xs={6} xsOffset={3}> {isDonationSubmitted && ( <DonationCloseBtn onClick={hideDonationSection} /> )} </Col> </Row> <Spacer size='l' /> </div> ); }; const ShareCertBtns = ({ username, certDate, certTitle, certSlug, certURL }: { username: string; certDate: Date; certTitle: string; certSlug: CertSlug; certURL: string; }) => { const { t } = useTranslation();\n\nconst certYear = certDate.getFullYear();\n  const certMonth = certDate.getMonth();\n  const urlFriendlyCertTitle = encodeURIComponent(certTitle);\n  const linkedInCredentialId = `${username}-${linkedInCredentialIds[certSlug]}`;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 4,
    "total_chunks": 14
  },
  {
    "id": "6cc23c5d531c6ac20b218eb50db69e8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "handleProcessing={handleProcessing} isMinimalForm={true} paymentContext={PaymentContext.Certificate} /> </Col> </Row> <Spacer size='m' /> <Row> <Col sm={4} smOffset={4} xs={6} xsOffset={3}> {isDonationSubmitted && ( <DonationCloseBtn onClick={hideDonationSection} /> )} </Col> </Row> <Spacer size='l' /> </div> ); }; const ShareCertBtns = ({ username, certDate, certTitle, certSlug, certURL }: { username: string; certDate: Date; certTitle: string; certSlug: CertSlug; certURL: string; }) => { const { t } = useTranslation(); const certYear = certDate.getFullYear(); const certMonth = certDate.getMonth(); const urlFriendlyCertTitle = encodeURIComponent(certTitle); const linkedInCredentialId = `${username}-${linkedInCredentialIds[certSlug]}`;\n\nreturn (\n    <Row className='text-center'>\n      <Col xs={12}>\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=${urlFriendlyCertTitle}&organizationId=4831032&issueYear=${certYear}&issueMonth=${\n            certMonth + 1\n          }&certUrl=${certURL}&certId=${linkedInCredentialId}`}\n          target='_blank'\n          data-playwright-test-label='linkedin-share-btn'\n        >\n          {t('profile.add-linkedin')}\n        </Button>\n        <Spacer size='m' />\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`https://twitter.com/intent/tweet?text=${t('profile.tweet', {\n            certTitle: urlFriendlyCertTitle,\n            certURL\n          })}`}\n          target='_blank'\n          data-playwright-test-label='twitter-share-btn'\n        >\n          {t('profile.add-twitter')}\n        </Button>\n        <Spacer size='m' />\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`https://bsky.app/intent/compose?text=${t('profile.tweet', {\n            certTitle: urlFriendlyCertTitle,\n            certURL\n          })}`}\n          target='_blank'\n          data-playwright-test-label='bluesky-share-btn'\n        >\n          {t('profile.add-bluesky')}\n        </Button>\n        <Spacer size='m' />\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`https://threads.net/intent/post?text=${t('profile.tweet', {\n            certTitle: urlFriendlyCertTitle,\n            certURL\n          })}`}\n          target='_blank'\n          data-playwright-test-label='thread-share-btn'\n        >\n          {t('profile.add-threads')}\n        </Button>\n      </Col>\n      <Spacer size='l' />\n    </Row>\n  );\n};",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 5,
    "total_chunks": 14
  },
  {
    "id": "1a5c7081efc3e8693ab30fb36cab3962",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "xs={12}> <Button block={true} size='large' variant='primary' href={`https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=${urlFriendlyCertTitle}&organizationId=4831032&issueYear=${certYear}&issueMonth=${ certMonth + 1 }&certUrl=${certURL}&certId=${linkedInCredentialId}`} target='_blank' data-playwright-test-label='linkedin-share-btn' > {t('profile.add-linkedin')} </Button> <Spacer size='m' /> <Button block={true} size='large' variant='primary' href={`https://twitter.com/intent/tweet?text=${t('profile.tweet', { certTitle: urlFriendlyCertTitle, certURL })}`} target='_blank' data-playwright-test-label='twitter-share-btn' > {t('profile.add-twitter')} </Button> <Spacer size='m' /> <Button block={true} size='large' variant='primary' href={`https://bsky.app/intent/compose?text=${t('profile.tweet', { certTitle: urlFriendlyCertTitle, certURL })}`} target='_blank' data-playwright-test-label='bluesky-share-btn' > {t('profile.add-bluesky')} </Button> <Spacer size='m' /> <Button block={true} size='large' variant='primary' href={`https://threads.net/intent/post?text=${t('profile.tweet', { certTitle: urlFriendlyCertTitle, certURL })}`} target='_blank' data-playwright-test-label='thread-share-btn' > {t('profile.add-threads')} </Button> </Col> <Spacer size='l' /> </Row> ); };\n\nconst ShowCertification = (props: ShowCertificationProps): JSX.Element => {\n  const { t } = useTranslation();\n  const [isDonationSubmitted, setIsDonationSubmitted] = useState(false);\n  const [isDonationDisplayed, setIsDonationDisplayed] = useState(false);\n  const [isDonationClosed, setIsDonationClosed] = useState(false);\n\nuseEffect(() => {\n    const { username, certSlug, isValidCert, showCert } = props;\n    if (isValidCert) {\n      showCert({ username, certSlug });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 6,
    "total_chunks": 14
  },
  {
    "id": "9d5ab26ae6829e972ae300cd9789cd69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "<Button block={true} size='large' variant='primary' href={`https://threads.net/intent/post?text=${t('profile.tweet', { certTitle: urlFriendlyCertTitle, certURL })}`} target='_blank' data-playwright-test-label='thread-share-btn' > {t('profile.add-threads')} </Button> </Col> <Spacer size='l' /> </Row> ); }; const ShowCertification = (props: ShowCertificationProps): JSX.Element => { const { t } = useTranslation(); const [isDonationSubmitted, setIsDonationSubmitted] = useState(false); const [isDonationDisplayed, setIsDonationDisplayed] = useState(false); const [isDonationClosed, setIsDonationClosed] = useState(false); useEffect(() => { const { username, certSlug, isValidCert, showCert } = props; if (isValidCert) { showCert({ username, certSlug }); } // eslint-disable-next-line react-hooks/exhaustive-deps }, []);\n\nuseEffect(() => {\n    const {\n      userFetchState: { complete: userComplete },\n      signedInUserName,\n      isDonating,\n      isSignedIn,\n      cert: { username = '' },\n      fetchProfileForUser,\n      user\n    } = props;\n\nconst isSessionUser = isSignedIn && signedInUserName === username;\n\nif (isEmpty(user) && username) {\n      fetchProfileForUser(username);\n    }\n\nif (!isDonationDisplayed && userComplete && isSessionUser && !isDonating) {\n      setIsDonationDisplayed(true);\n      callGA({\n        event: 'donation_view',\n        action: 'Displayed Certificate Donation'\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    isDonationDisplayed,\n    props.userFetchState,\n    props.signedInUserName,\n    props.isDonating,\n    props.cert\n  ]);\n\nconst hideDonationSection = () => {\n    setIsDonationDisplayed(false);\n    setIsDonationClosed(true);\n  };\n\nconst handleProcessing = () => {\n    setIsDonationSubmitted(true);\n  };\n\nconst {\n    cert,\n    fetchState,\n    isValidCert,\n    createFlashMessage,\n    signedInUserName,\n    location: { pathname },\n    user\n  } = props;\n  const { pending, complete, errored } = fetchState;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 7,
    "total_chunks": 14
  },
  {
    "id": "d4e97094cdbadbbd688dd36a44a56833",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "(isEmpty(user) && username) { fetchProfileForUser(username); } if (!isDonationDisplayed && userComplete && isSessionUser && !isDonating) { setIsDonationDisplayed(true); callGA({ event: 'donation_view', action: 'Displayed Certificate Donation' }); } // eslint-disable-next-line react-hooks/exhaustive-deps }, [ isDonationDisplayed, props.userFetchState, props.signedInUserName, props.isDonating, props.cert ]); const hideDonationSection = () => { setIsDonationDisplayed(false); setIsDonationClosed(true); }; const handleProcessing = () => { setIsDonationSubmitted(true); }; const { cert, fetchState, isValidCert, createFlashMessage, signedInUserName, location: { pathname }, user } = props; const { pending, complete, errored } = fetchState;\n\nuseEffect(() => {\n    if (!isValidCert) {\n      createFlashMessage(certificateMissingErrorMessage);\n    } else if (!pending && errored) {\n      createFlashMessage(standardErrorMessage);\n    } else if (!pending && !complete && !errored) {\n      createFlashMessage(reallyWeirdErrorMessage);\n    }\n  }, [isValidCert, createFlashMessage, pending, errored, complete]);\n\nif (!isValidCert) {\n    return <RedirectHome />;\n  }\n\nif (pending || !user) {\n    return <Loader fullScreen={true} />;\n  }\n\nif (errored || !complete) {\n    return <RedirectHome />;\n  }\n\nconst {\n    date,\n    name: userFullName = null,\n    username,\n    certTitle,\n    certSlug,\n    completionTime\n  } = cert;\n\nconst displayName = userFullName ?? username;\n\nconst certDate = new Date(date);\n\nconst certURL = `https://freecodecamp.org${pathname}`;\n\nconst isMicrosoftCert = certSlug === Certification.FoundationalCSharp; return (\n    <Container className='certificate-outer-wrapper'>\n      {isDonationDisplayed && isDonationClosed",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 8,
    "total_chunks": 14
  },
  {
    "id": "63dee10bdee9f836dbb0eac3a7726c98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "createFlashMessage(reallyWeirdErrorMessage); } }, [isValidCert, createFlashMessage, pending, errored, complete]); if (!isValidCert) { return <RedirectHome />; } if (pending || !user) { return <Loader fullScreen={true} />; } if (errored || !complete) { return <RedirectHome />; } const { date, name: userFullName = null, username, certTitle, certSlug, completionTime } = cert; const displayName = userFullName ?? username; const certDate = new Date(date); const certURL = `https://freecodecamp.org${pathname}`; const isMicrosoftCert = certSlug === Certification.FoundationalCSharp; return ( <Container className='certificate-outer-wrapper'> {isDonationDisplayed && isDonationClosed(\n        <DonationSection\n          hideDonationSection={hideDonationSection}\n          handleProcessing={handleProcessing}\n          isDonationSubmitted={isDonationSubmitted}\n        />\n      ) : (\n        ''\n      )}\n      <div\n        className='certificate-wrapper'\n        data-playwright-test-label='cert-wrapper'\n      >\n        <div className='certification-namespace'>\n          <header data-playwright-test-label='cert-header'>\n            <Col sm={12}>\n              {isMicrosoftCert (\n                <>\n                  <div\n                    className='dual-logo fcc-logo'\n                    data-playwright-test-label='cert-fcc-logo'\n                  >\n                    <FreeCodeCampLogo aria-hidden='true' />\n                  </div>\n                  <div\n                    className='dual-logo ms-logo'\n                    data-playwright-test-label='cert-microsoft-logo'\n                  >\n                    <MicrosoftLogo aria-hidden='true' />\n                  </div>\n                </>\n              ) : (\n                <div\n                  className='logo'\n                  data-playwright-test-label='cert-fcc-logo'\n                >\n                  <FreeCodeCampLogo aria-hidden='true' />\n                </div>\n              )}\n            </Col>\n          </header>\n          <main className='information'>\n            <div\n              className='information-container'\n              data-playwright-test-label='cert-info-container'\n            >\n              <Trans\n                i18nKey={\n                  isMicrosoftCert 'certification fulltextNoHours'\n                    : 'certification fulltext'\n                }\n                title={t(`certification title",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 9,
    "total_chunks": 14
  },
  {
    "id": "e08d873db5f70629246240e6d7005f63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "{isDonationDisplayed && isDonationClosed( <DonationSection hideDonationSection={hideDonationSection} handleProcessing={handleProcessing} isDonationSubmitted={isDonationSubmitted} /> ) : ( '' )} <div className='certificate-wrapper' data-playwright-test-label='cert-wrapper' > <div className='certification-namespace'> <header data-playwright-test-label='cert-header'> <Col sm={12}> {isMicrosoftCert ( <> <div className='dual-logo fcc-logo' data-playwright-test-label='cert-fcc-logo' > <FreeCodeCampLogo aria-hidden='true' /> </div> <div className='dual-logo ms-logo' data-playwright-test-label='cert-microsoft-logo' > <MicrosoftLogo aria-hidden='true' /> </div> </> ) : ( <div className='logo' data-playwright-test-label='cert-fcc-logo' > <FreeCodeCampLogo aria-hidden='true' /> </div> )} </Col> </header> <main className='information'> <div className='information-container' data-playwright-test-label='cert-info-container' > <Trans i18nKey={ isMicrosoftCert 'certification fulltextNoHours' : 'certification fulltext' } title={t(`certification title${certSlug}`, certTitle)}\n              >\n                <h3>placeholder</h3>\n                <h1>\n                  <strong>{{ user: displayName }}</strong>\n                </h1>\n                <h3 data-playwright-test-label='successful-completion'>\n                  placeholder\n                </h3>\n                <h1 data-playwright-test-label='certification-title'>\n                  <strong>\n                    {{\n                      title: t(`certification title ${certSlug}`, certTitle)\n                    }}\n                  </strong>\n                </h1>\n                <h4 data-playwright-test-label='issue-date'>\n                  {{\n                    time: certDate toLocaleString([localeCode, 'en-US'], {\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric'\n                    })\n                  }}\n                </h4>\n                <h5 style={{ marginTop: '15px' }}>{{ completionTime }}</h5>\n              </Trans>\n            </div>\n          </main>\n          <footer data-playwright-test-label='cert-footer'>\n            <div className='signatures'>\n              {isMicrosoftCert",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 10,
    "total_chunks": 14
  },
  {
    "id": "b3f143ed5cc25eb40509e2420b20d488",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "</Col> </header> <main className='information'> <div className='information-container' data-playwright-test-label='cert-info-container' > <Trans i18nKey={ isMicrosoftCert 'certification fulltextNoHours' : 'certification fulltext' } title={t(`certification title${certSlug}`, certTitle)} > <h3>placeholder</h3> <h1> <strong>{{ user: displayName }}</strong> </h1> <h3 data-playwright-test-label='successful-completion'> placeholder </h3> <h1 data-playwright-test-label='certification-title'> <strong> {{ title: t(`certification title ${certSlug}`, certTitle) }} </strong> </h1> <h4 data-playwright-test-label='issue-date'> {{ time: certDate toLocaleString([localeCode, 'en-US'], { year: 'numeric', month: 'long', day: 'numeric' }) }} </h4> <h5 style={{ marginTop: '15px' }}>{{ completionTime }}</h5> </Trans> </div> </main> <footer data-playwright-test-label='cert-footer'> <div className='signatures'> {isMicrosoftCert(\n                <>\n                  <div>\n                    <Image\n                      data-playwright-test-label='quincy-signature'\n                      alt={t('certification quincy-larson-signature')}\n                      src={\n                        'https://cdn freecodecamp org' +\n                        '/platform/english/images/quincy-larson-signature svg'\n                      }\n                    />\n                    <p className='signee-name'>\n                      <strong>Quincy Larson</strong>\n                    </p>\n                    <p className='signee-role'>\n                      {t('certification executive')}\n                    </p>\n                  </div>\n                  <div className='microsoft-signature'>\n                    <Image\n                      data-playwright-test-label='microsoft-signature'\n                      alt={t('certification julia-liuson-signature')}\n                      src={\n                        'https://cdn freecodecamp org' +\n                        '/platform/english/images/microsoft-signature png'\n                      }\n                    />\n                    <div className='signature-underline'></div>\n                    <p className='signee-name'>\n                      <strong>Julia Liuson</strong>\n                    </p>\n                    <p className='signee-role'>\n                      {t('certification",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 11,
    "total_chunks": 14
  },
  {
    "id": "4c7bde4b1c4b05a2137589ece9252d7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "{ year: 'numeric', month: 'long', day: 'numeric' }) }} </h4> <h5 style={{ marginTop: '15px' }}>{{ completionTime }}</h5> </Trans> </div> </main> <footer data-playwright-test-label='cert-footer'> <div className='signatures'> {isMicrosoftCert( <> <div> <Image data-playwright-test-label='quincy-signature' alt={t('certification quincy-larson-signature')} src={ 'https://cdn freecodecamp org' + '/platform/english/images/quincy-larson-signature svg' } /> <p className='signee-name'> <strong>Quincy Larson</strong> </p> <p className='signee-role'> {t('certification executive')} </p> </div> <div className='microsoft-signature'> <Image data-playwright-test-label='microsoft-signature' alt={t('certification julia-liuson-signature')} src={ 'https://cdn freecodecamp org' + '/platform/english/images/microsoft-signature png' } /> <div className='signature-underline'></div> <p className='signee-name'> <strong>Julia Liuson</strong> </p> <p className='signee-role'> {t('certificationms-president')}\n                    </p>\n                  </div>\n                </>\n              ) : (\n                <div>\n                  <Image\n                    data-playwright-test-label='quincy-signature'\n                    alt={t('certification quincy-larson-signature')}\n                    src={\n                      'https://cdn freecodecamp org' +\n                      '/platform/english/images/quincy-larson-signature svg'\n                    }\n                  />\n                  <p className='signee-name'>\n                    <strong>Quincy Larson</strong>\n                  </p>\n                  <p className='signee-role'>{t('certification executive')}</p>\n                </div>\n              )}\n            </div>\n            { isMicrosoftCert && (\n              <>\n                <span className='ribbon-wrap'>\n                  <Image alt='' className='ribbon' src={ribbon} />\n                </span>\n                <span className='qr-wrap'>\n                  <QRCodeSVG className='qr-code' value={certURL} />\n                </span>\n              </>\n            )}\n            <Row>\n              <p className='verify'>\n                {t('certification",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 12,
    "total_chunks": 14
  },
  {
    "id": "1e163883de7c8c78ead1d644a636e9cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
    "source_type": "git_repo",
    "title": "show-certification",
    "content": "src={ 'https://cdn freecodecamp org' + '/platform/english/images/microsoft-signature png' } /> <div className='signature-underline'></div> <p className='signee-name'> <strong>Julia Liuson</strong> </p> <p className='signee-role'> {t('certificationms-president')} </p> </div> </> ) : ( <div> <Image data-playwright-test-label='quincy-signature' alt={t('certification quincy-larson-signature')} src={ 'https://cdn freecodecamp org' + '/platform/english/images/quincy-larson-signature svg' } /> <p className='signee-name'> <strong>Quincy Larson</strong> </p> <p className='signee-role'>{t('certification executive')}</p> </div> )} </div> { isMicrosoftCert && ( <> <span className='ribbon-wrap'> <Image alt='' className='ribbon' src={ribbon} /> </span> <span className='qr-wrap'> <QRCodeSVG className='qr-code' value={certURL} /> </span> </> )} <Row> <p className='verify'> {t('certificationverify')}\n                <br />\n                {certURL}\n              </p>\n            </Row>\n          </footer>\n        </div>\n      </div>\n      <div\n        className='row certificate-links'\n        data-playwright-test-label='cert-links'\n      >\n        <Spacer size='l' />\n        {signedInUserName === username (\n          <ShareCertBtns\n            username={username}\n            certDate={certDate}\n            certSlug={certSlug}\n            certTitle={certTitle}\n            certURL={certURL}\n          />\n        ) : (\n          ''\n        )}\n        <Spacer size='l' />\n        <ShowProjectLinks certSlug={certSlug} name={displayName} user={user} />\n        <Spacer size='l' />\n      </div>\n    </Container>\n  );\n};\n\nShowCertification.displayName = 'ShowCertification';\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowCertification);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 16871,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\client-only-routes\\show-certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 13,
    "total_chunks": 14
  },
  {
    "id": "d12771d0c2b0abf30047ecdc4d071c87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\certification.tsx",
    "source_type": "git_repo",
    "title": "certification",
    "content": "import { Router } from '@gatsbyjs/reach-router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowCertification from '../client-only-routes/show-certification';\nimport RedirectHome from '../components/redirect-home';\n\nimport './certification.css';\n\nfunction Certification(): JSX.Element {\n  return (\n    <Router>\n      <ShowCertification\n        // Error from installing @types/react-helmet and @types/react-redux\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        path={withPrefix('/certification/:username/:certSlug')}\n      />\n\n<RedirectHome default />\n    </Router>\n  );\n}\n\nexport default Certification;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 690,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\certification.tsx",
      "source_type": "git_repo"
    },
    "token_count": 144,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2f4e909846553c247397b3332caf5f26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\challenges.test.tsx",
    "source_type": "git_repo",
    "title": "challenges.test",
    "content": "import {\n  createHistory,\n  createMemorySource,\n  LocationProvider\n} from '@gatsbyjs/reach-router';\nimport { render } from '@testing-library/react';\nimport { navigate, withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport Challenges from './challenges';\n\ndescribe('Challenges', () => {\n  // Source: https://testing-library.com/docs/example-reach-router/\n  function renderWithRouterWrapper({\n    route = '/',\n    history = createHistory(createMemorySource(route))\n  } = {}) {\n    return {\n      ...render(\n        <LocationProvider history={history}>\n          <Challenges />\n        </LocationProvider>\n      ),\n      // adding `history` to the returned utilities to allow us\n      // to reference it in our tests (just try to avoid using\n      // this to test implementation details).\n      history\n    };\n  }\n\nconst challenges = withPrefix('/challenges');\n  const learn = withPrefix('/learn');\n\nit('should handle redirect to /learn', () => {\n    renderWithRouterWrapper({ route: challenges });\n\nexpect(navigate).toHaveBeenLastCalledWith(learn);\n  });\n\nit('should handle redirect to /learn/:super-block', () => {\n    renderWithRouterWrapper({ route: `${challenges}/super-block` });\n\nexpect(navigate).toHaveBeenLastCalledWith(`${learn}/super-block`);\n  });\n\nit('should handle redirect to /learn/:super-block/:block', () => {\n    renderWithRouterWrapper({ route: `${challenges}/super-block/block` });\n\nexpect(navigate).toHaveBeenLastCalledWith(`${learn}/super-block/block`);\n  });\n\nit('should handle redirect to /learn/:super-block/:block/:challenge', () => {\n    renderWithRouterWrapper({\n      route: `${challenges}/super-block/block/challenge`\n    });\n\nexpect(navigate).toHaveBeenLastCalledWith(\n      `${learn}/super-block/block/challenge`\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1795,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\challenges.test.tsx",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "13e2251ebba19f2f8e978da9fa914bb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\challenges.tsx",
    "source_type": "git_repo",
    "title": "challenges",
    "content": "// This exists purely to redirect legacy challenge paths to /learn that could\n// exist in the web (posts, url shares, etc).\n\nimport { Router, RouteComponentProps } from '@gatsbyjs/reach-router';\nimport { navigate, withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport toLearnPath from '../utils/to-learn-path';\n\ntype RouteComponentPropsExtended = RouteComponentProps & {\n  block?: string;\n  challenge?: string;\n  superBlock?: string;\n};\n\nfunction Redirect(props: RouteComponentPropsExtended): null {\n  if (typeof window !== 'undefined') {\n    void navigate(toLearnPath(props));\n  }\n\nreturn null;\n}\n\nfunction Challenges(): JSX.Element {\n  return (\n    <Router basepath={withPrefix('/challenges')}>\n      <Redirect path='/:superBlock/' />\n      <Redirect path='/:superBlock/:block/' />\n      <Redirect path='/:superBlock/:block/:challenge' />\n      <Redirect default={true} />\n    </Router>\n  );\n}\n\nChallenges.displayName = 'Challenges';\n\nexport default Challenges;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 975,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\challenges.tsx",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "35fb5a05f072b2923cf9e779d78ca9dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.css",
    "source_type": "git_repo",
    "title": "email-sign-up",
    "content": ".email-sign-up strong,\n.email-sign-up p {\n  font-size: 1rem;\n}\n\n/*\nThis is a temporary fix until the component library is revisited.\nSee https://github.com/freeCodeCamp/freeCodeCamp/issues/52131#issuecomment-1788840851.\n*/\n.email-list-opt {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n@media (min-width: 500px) {\n  .email-sign-up strong,\n  .email-sign-up p {\n    font-size: 1.17rem;\n  }\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 384,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.css",
      "source_type": "git_repo"
    },
    "token_count": 111,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5f057b5063e2fbef2400c2a41818b957",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\index.tsx",
    "source_type": "git_repo",
    "title": "index",
    "content": "import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SEO from '../components/seo';\nimport LandingTopB from '../components/landing/components/landing-top-b';\nimport LandingTop from '../components/landing/components/landing-top';\nimport Testimonials from '../components/landing/components/testimonials';\nimport Certifications from '../components/landing/components/certifications';\nimport Faq from '../components/landing/components/faq';\nimport Benefits from '../components/landing/components/benefits';\nimport '../components/landing/landing.css';\n\ntype LandingProps = {\n  showLandingPageRedesign: boolean;\n};\n\nconst Landing = ({ showLandingPageRedesign }: LandingProps) => (\n  <main className={`landing-page`}>\n    {showLandingPageRedesign ? <LandingTopB /> : <LandingTop />}\n    <Benefits />\n    <Testimonials />\n    <Certifications />\n    <Faq />\n  </main>\n);\n\nfunction IndexPage(): JSX.Element {\n  const { t } = useTranslation();\n\nreturn (\n    <>\n      <SEO title={t('metaTags:title')} />\n      <Landing showLandingPageRedesign={true} />\n    </>\n  );\n}\n\nIndexPage.displayName = 'IndexPage';\n\nexport default IndexPage;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1151,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\index.tsx",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c8cd29e41264bfcfc0eb7d91dae87d21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
    "source_type": "git_repo",
    "title": "donate",
    "content": "import { Container, Col, Row, Spacer } from '@freecodecamp/ui';\nimport type { TFunction } from 'i18next';\nimport React, { useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport MultiTierDonationForm from '../components/Donation/multi-tier-donation-form';\nimport {\n  CtaText,\n  ThankYouMessage,\n  DonationFaqText,\n  SupportBenefitsText,\n  CurrentInitiativesText,\n  CommunityAchievementsText,\n  GetSupporterBenefitsText\n} from '../components/Donation/donation-text-components';\nimport { Loader } from '../components/helpers';\nimport {\n  signInLoadingSelector,\n  userSelector,\n  donationFormStateSelector\n} from '../redux/selectors';\nimport { PaymentContext } from '../../../shared/config/donation-settings';\nimport { DonateFormState } from '../redux/types';\nimport callGA from '../analytics/call-ga';\nimport type { User } from '../redux/prop-types';\ninterface DonatePageProps {\n  isDonating?: boolean;\n  showLoading: boolean;\n  t: TFunction;\n  donationFormState: DonateFormState;\n}\n\nconst mapStateToProps = createSelector(\n  userSelector,\n  signInLoadingSelector,\n  donationFormStateSelector,\n  (\n    user: User | null,\n    showLoading: boolean,\n    donationFormState: DonateFormState\n  ) => ({\n    isDonating: user?.isDonating || false,\n    showLoading,\n    donationFormState\n  })\n);\n\nfunction DonatePage({\n  isDonating = false,\n  showLoading,\n  t,\n  donationFormState\n}: DonatePageProps) {\n  useEffect(() => {\n    callGA({\n      event: 'donation_view',\n      action: `Displayed Donate Page`\n    });\n  }, []); return showLoading (\n    <Loader fullScreen={true} />\n  ) : (\n    <>\n      <Helmet title={`${t('donate title')} | freeCodeCamp",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4063,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b9407060f4ca76666b00b161df042fb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
    "source_type": "git_repo",
    "title": "donate",
    "content": "{ isDonating?: boolean; showLoading: boolean; t: TFunction; donationFormState: DonateFormState; } const mapStateToProps = createSelector( userSelector, signInLoadingSelector, donationFormStateSelector, ( user: User | null, showLoading: boolean, donationFormState: DonateFormState ) => ({ isDonating: user?.isDonating || false, showLoading, donationFormState }) ); function DonatePage({ isDonating = false, showLoading, t, donationFormState }: DonatePageProps) { useEffect(() => { callGA({ event: 'donation_view', action: `Displayed Donate Page` }); }, []); return showLoading ( <Loader fullScreen={true} /> ) : ( <> <Helmet title={`${t('donate title')} | freeCodeCamporg`} />\n      <Container fluid={true} className='gradient-container'>\n        <Container className='donate-supporter-page-section'>\n          <main>\n            <Row className={'donation-section'}>\n              <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}>\n                {isDonating (\n                  <ThankYouMessage\n                    askForDonation={ donationFormState success}\n                  />\n                ) : (\n                  <CtaText />\n                )}\n              </Col>\n              <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}>\n                { isDonating || donationFormState success (\n                  <MultiTierDonationForm\n                    paymentContext={PaymentContext",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4063,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1b1545a3a646dc4683d2b9e0b5545b3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
    "source_type": "git_repo",
    "title": "donate",
    "content": "t, donationFormState }: DonatePageProps) { useEffect(() => { callGA({ event: 'donation_view', action: `Displayed Donate Page` }); }, []); return showLoading ( <Loader fullScreen={true} /> ) : ( <> <Helmet title={`${t('donate title')} | freeCodeCamporg`} /> <Container fluid={true} className='gradient-container'> <Container className='donate-supporter-page-section'> <main> <Row className={'donation-section'}> <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}> {isDonating ( <ThankYouMessage askForDonation={ donationFormState success} /> ) : ( <CtaText /> )} </Col> <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}> { isDonating || donationFormState success ( <MultiTierDonationForm paymentContext={PaymentContextDonatePage}\n                  />\n                ) : null}\n              </Col>\n            </Row>\n          </main>\n        </Container>\n      </Container>\n      <Container className='donate-supporter-page-section'>\n        <Row>\n          <Col lg={6} lgOffset={0} md={8} mdOffset={2} sm={10}>\n            <Spacer size='l' />\n            <SupportBenefitsText />\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={6} lgOffset={0} md={8} mdOffset={2} sm={10}>\n            <Spacer size='l' />\n            <CurrentInitiativesText />\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={6} lgOffset={0} md={8} mdOffset={2} sm={10}>\n            <Spacer size='l' />\n            <CommunityAchievementsText />\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={6} lgOffset={0} md={8} mdOffset={2} sm={10}>\n            <GetSupporterBenefitsText isDonating={Boolean(isDonating)} />\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid={true}>\n        <Row>\n          <Col sm={12}>\n            <Spacer size='l' />\n            <hr />\n            <Spacer size='l' />\n          </Col>\n        </Row>\n      </Container>\n      <Container className='donate-supporter-page-section'>\n        <Row>\n          <Col lg={10} lgOffset={0} md={8} mdOffset={2} sm={10}>\n            <DonationFaqText />\n          </Col>\n        </Row>\n        <Spacer size='l' />\n      </Container>\n    </>\n  );\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4063,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
      "source_type": "git_repo"
    },
    "token_count": 585,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "727c6bdd40ec036b7e9735f7f1ea3eea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
    "source_type": "git_repo",
    "title": "donate",
    "content": "<Col lg={6} lgOffset={0} md={8} mdOffset={2} sm={10}> <Spacer size='l' /> <CurrentInitiativesText /> </Col> </Row> <Row> <Col lg={6} lgOffset={0} md={8} mdOffset={2} sm={10}> <Spacer size='l' /> <CommunityAchievementsText /> </Col> </Row> <Row> <Col lg={6} lgOffset={0} md={8} mdOffset={2} sm={10}> <GetSupporterBenefitsText isDonating={Boolean(isDonating)} /> </Col> </Row> </Container> <Container fluid={true}> <Row> <Col sm={12}> <Spacer size='l' /> <hr /> <Spacer size='l' /> </Col> </Row> </Container> <Container className='donate-supporter-page-section'> <Row> <Col lg={10} lgOffset={0} md={8} mdOffset={2} sm={10}> <DonationFaqText /> </Col> </Row> <Spacer size='l' /> </Container> </> ); }\n\nDonatePage.displayName = 'DonatePage';\n\nexport default connect(mapStateToProps)(withTranslation()(DonatePage));",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4063,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\donate.tsx",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b51832d9eacb7440b3e0eed0b872e04e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\settings.tsx",
    "source_type": "git_repo",
    "title": "settings",
    "content": "import { Router } from '@gatsbyjs/reach-router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowSettings from '../client-only-routes/show-settings';\nimport RedirectHome from '../components/redirect-home';\n\nfunction Settings(): JSX.Element {\n  return (\n    <Router>\n      <ShowSettings path={withPrefix('/settings')} />\n\n<RedirectHome default />\n    </Router>\n  );\n}\n\nSettings.displayName = 'Settings';\n\nexport default Settings;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 463,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\settings.tsx",
      "source_type": "git_repo"
    },
    "token_count": 96,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c13529e7a15989a74dfe5e0b808190e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\learn.tsx",
    "source_type": "git_repo",
    "title": "learn",
    "content": "import { graphql } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Container, Col, Row, Spacer } from '@freecodecamp/ui';\n\nimport Intro from '../components/Intro';\nimport Map from '../components/Map';\nimport LearnLayout from '../components/layouts/learn';\nimport {\n  isSignedInSelector,\n  userSelector,\n  userFetchStateSelector\n} from '../redux/selectors';\n\nimport callGA from '../analytics/call-ga';\n\ninterface FetchState {\n  pending: boolean;\n  complete: boolean;\n  errored: boolean;\n}\n\ntype MaybeUser = {\n  name: string;\n  username: string;\n  completedChallengeCount: number;\n  isDonating: boolean;\n} | null;\n\nconst mapStateToProps = createSelector(\n  userFetchStateSelector,\n  isSignedInSelector,\n  userSelector,\n  (fetchState: FetchState, isSignedIn: boolean, user: MaybeUser) => ({\n    fetchState,\n    isSignedIn,\n    user\n  })\n);\n\ninterface Slug {\n  slug: string;\n}\n\ninterface LearnPageProps {\n  isSignedIn: boolean;\n  fetchState: FetchState;\n  state: Record<string, unknown>;\n  user: MaybeUser;\n  data: {\n    challengeNode: {\n      challenge: {\n        fields: Slug;\n      };\n    };\n  };\n}\n\nconst EMPTY_USER = { name: '', completedChallengeCount: 0, isDonating: false };\n\nfunction LearnPage({\n  isSignedIn,\n  fetchState: { pending, complete },\n  user,\n  data: {\n    challengeNode: {\n      challenge: {\n        fields: { slug }\n      }\n    }\n  }\n}: LearnPageProps) {\n  const { name, completedChallengeCount, isDonating } = user ?? EMPTY_USER;\n\nconst { t } = useTranslation();",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 2831,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\learn.tsx",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "eb63301cdd1cc0969458602c917ec518",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\learn.tsx",
    "source_type": "git_repo",
    "title": "learn",
    "content": "interface LearnPageProps { isSignedIn: boolean; fetchState: FetchState; state: Record<string, unknown>; user: MaybeUser; data: { challengeNode: { challenge: { fields: Slug; }; }; }; } const EMPTY_USER = { name: '', completedChallengeCount: 0, isDonating: false }; function LearnPage({ isSignedIn, fetchState: { pending, complete }, user, data: { challengeNode: { challenge: { fields: { slug } } } } }: LearnPageProps) { const { name, completedChallengeCount, isDonating } = user ?? EMPTY_USER; const { t } = useTranslation();\n\nconst onLearnDonationAlertClick = () => {\n    callGA({\n      event: 'donation_related',\n      action: `Learn Donation Alert Click`\n    });\n  };\n  return (\n    <LearnLayout>\n      <Helmet title={t('metaTags:title')} />\n      <Container>\n        <Row>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <Intro\n              complete={complete}\n              completedChallengeCount={completedChallengeCount}\n              isSignedIn={isSignedIn}\n              name={name}\n              pending={pending}\n              slug={slug}\n              onLearnDonationAlertClick={onLearnDonationAlertClick}\n              isDonating={isDonating}\n            />\n            <Map />\n            <Spacer size='l' />\n          </Col>\n        </Row>\n      </Container>\n    </LearnLayout>\n  );\n}\n\nLearnPage.displayName = 'LearnPage';\n\nexport default connect(mapStateToProps)(LearnPage);\n\nexport const query = graphql`\n  query LearnPageQuery {\n    challengeNode(\n      challenge: {\n        superOrder: { eq: 0 }\n        order: { eq: 0 }\n        challengeOrder: { eq: 0 }\n      }\n    ) {\n      challenge {\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 2831,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\learn.tsx",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4603383114b32b90453083058ab2a8ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\unsubscribed.tsx",
    "source_type": "git_repo",
    "title": "unsubscribed",
    "content": "import { Router } from '@gatsbyjs/reach-router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowUnsubscribed from '../client-only-routes/show-unsubscribed';\nimport RedirectHome from '../components/redirect-home';\n\nfunction Unsubscribed(): JSX.Element {\n  return (\n    <Router>\n      <ShowUnsubscribed path={withPrefix('/unsubscribed/:unsubscribeId')} />\n\n<ShowUnsubscribed path={withPrefix('/unsubscribed')} />\n\n<RedirectHome default />\n    </Router>\n  );\n}\n\nUnsubscribed.displayName = 'Unsubscribed';\n\nexport default Unsubscribed;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 573,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\unsubscribed.tsx",
      "source_type": "git_repo"
    },
    "token_count": 130,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "00b00fefe490e530bf75b43a6a5918c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\update-email.tsx",
    "source_type": "git_repo",
    "title": "update-email",
    "content": "import { Router } from '@gatsbyjs/reach-router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowUpdateEmail from '../client-only-routes/show-update-email';\nimport RedirectHome from '../components/redirect-home';\n\nfunction UpdateEmail(): JSX.Element {\n  return (\n    <Router>\n      <ShowUpdateEmail path={withPrefix('/update-email')} />\n\n<RedirectHome default />\n    </Router>\n  );\n}\n\nUpdateEmail.displayName = 'UpdateEmail';\n\nexport default UpdateEmail;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 489,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\update-email.tsx",
      "source_type": "git_repo"
    },
    "token_count": 104,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "613df8877694ed1f7d65192c2bab1e46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\update-stripe-card.tsx",
    "source_type": "git_repo",
    "title": "update-stripe-card",
    "content": "import { useLocation } from '@gatsbyjs/reach-router';\n\nimport React, { type FormEvent, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Container, Row, Col, Button, Spacer } from '@freecodecamp/ui';\nimport BigCallToAction from '../components/landing/components/big-call-to-action';\n\nimport {\n  isSignedInSelector,\n  isDonatingSelector,\n  updateCardStateSelector\n} from '../redux/selectors';\nimport { updateCard, updateCardComplete } from '../redux/actions';\nimport { UpdateCardState } from '../redux/types';\nimport CardUpdateAlertHandler from '../components/Donation/card-update-alert-handler';\n\ninterface UpdateStripeCardProps {\n  isNewEmail: boolean;\n  resetDonationFormState: () => void;\n  isSignedIn: boolean;\n  isDonating: boolean;\n  updateCardState: UpdateCardState;\n  updateCard: () => void;\n  updateCardComplete: () => void;\n}\n\nconst mapStateToProps = createSelector(\n  isSignedInSelector,\n  isDonatingSelector,\n  updateCardStateSelector,\n  (\n    isSignedIn: boolean,\n    isDonating: boolean,\n    updateCardState: UpdateCardState\n  ) => ({\n    isSignedIn,\n    isDonating,\n    updateCardState\n  })\n);\n\nconst mapDispatchToProps = { updateCard, updateCardComplete };\n\nfunction ConditionalContent({\n  isSignedIn,\n  isDonating,\n  handleClick,\n  updateCardState\n}: {\n  isSignedIn: boolean;\n  isDonating: boolean;\n  handleClick: (e?: FormEvent) => void;\n  updateCardState: UpdateCardState;\n}) {\n  const { t } = useTranslation();",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3847,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\update-stripe-card.tsx",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c1b541cc60006ee52b38cf6994662229",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\update-stripe-card.tsx",
    "source_type": "git_repo",
    "title": "update-stripe-card",
    "content": "boolean; resetDonationFormState: () => void; isSignedIn: boolean; isDonating: boolean; updateCardState: UpdateCardState; updateCard: () => void; updateCardComplete: () => void; } const mapStateToProps = createSelector( isSignedInSelector, isDonatingSelector, updateCardStateSelector, ( isSignedIn: boolean, isDonating: boolean, updateCardState: UpdateCardState ) => ({ isSignedIn, isDonating, updateCardState }) ); const mapDispatchToProps = { updateCard, updateCardComplete }; function ConditionalContent({ isSignedIn, isDonating, handleClick, updateCardState }: { isSignedIn: boolean; isDonating: boolean; handleClick: (e?: FormEvent) => void; updateCardState: UpdateCardState; }) { const { t } = useTranslation();\n\nif (isSignedIn && !isDonating) {\n    return (\n      <>\n        <h1 className='text-center'>{t('learn.donation-record-not-found')}</h1>\n        <Spacer size='m' />\n        <p className='text-center'>{t('learn.contact-support-mistake')}</p>\n      </>\n    );\n  } else if (isSignedIn && isDonating) {\n    const { success, error, redirecting } = updateCardState;\n    if (redirecting || error || success) {\n      return (\n        <CardUpdateAlertHandler\n          success={success}\n          error={error}\n          redirecting={redirecting}\n          reset={handleClick}\n        />\n      );\n    } else\n      return (\n        <>\n          <Spacer size='m' />\n          <Button block={true} onClick={handleClick}>\n            {t('buttons.update-card')}\n          </Button>\n        </>\n      );\n  } else\n    return (\n      <>\n        <h1 className='text-center'>{t('learn.sign-in-card-update')}</h1>\n        <Spacer size='m' />\n        <BigCallToAction text={t('buttons.sign-in')} />\n      </>\n    );\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3847,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\update-stripe-card.tsx",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "34e09808bb808ff925ad6cebfcf45ce9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\update-stripe-card.tsx",
    "source_type": "git_repo",
    "title": "update-stripe-card",
    "content": "!isDonating) { return ( <> <h1 className='text-center'>{t('learn.donation-record-not-found')}</h1> <Spacer size='m' /> <p className='text-center'>{t('learn.contact-support-mistake')}</p> </> ); } else if (isSignedIn && isDonating) { const { success, error, redirecting } = updateCardState; if (redirecting || error || success) { return ( <CardUpdateAlertHandler success={success} error={error} redirecting={redirecting} reset={handleClick} /> ); } else return ( <> <Spacer size='m' /> <Button block={true} onClick={handleClick}> {t('buttons.update-card')} </Button> </> ); } else return ( <> <h1 className='text-center'>{t('learn.sign-in-card-update')}</h1> <Spacer size='m' /> <BigCallToAction text={t('buttons.sign-in')} /> </> ); }\n\nfunction UpdateStripeCard({\n  isSignedIn,\n  isDonating,\n  updateCardState,\n  updateCard,\n  updateCardComplete\n}: UpdateStripeCardProps) {\n  function handleClick(event?: FormEvent) {\n    updateCard();\n    if (event) event.preventDefault();\n  }\n  const { t } = useTranslation();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const isUpdateSuccessful = searchParams.get('session_id') !== null;\n\nuseEffect(() => {\n    if (isUpdateSuccessful) {\n      updateCardComplete();\n    }\n  }, [isUpdateSuccessful, updateCardComplete]);\n\nreturn (\n    <>\n      <Helmet>\n        <title>{t('misc.update-your-card')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Container className='page-wrapper-80'>\n        <Row>\n          <Col sm={6} smOffset={3}>\n            <Spacer size='l' />\n            <ConditionalContent\n              isSignedIn={isSignedIn}\n              isDonating={isDonating}\n              handleClick={handleClick}\n              updateCardState={updateCardState}\n            />\n            <Spacer size='l' />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nUpdateStripeCard.displayName = 'Update-Stripe-Card';\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateStripeCard);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3847,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\update-stripe-card.tsx",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9d9ed2fe493070657be4532fda13f367",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
    "source_type": "git_repo",
    "title": "supporters",
    "content": "import React from 'react';\nimport Helmet from 'react-helmet';\nimport { withTranslation, useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Container, Row, Col, Spacer } from '@freecodecamp/ui';\nimport BigCallToAction from '../components/landing/components/big-call-to-action';\n\nimport {\n  isSignedInSelector,\n  isDonatingSelector,\n  updateCardStateSelector\n} from '../redux/selectors';\nimport { updateCard, updateCardComplete } from '../redux/actions';\nimport { UpdateCardState } from '../redux/types';\n\nimport {\n  DonationFaqText,\n  ThankYouMessage,\n  SupportBenefitsText,\n  CurrentInitiativesText\n} from '../components/Donation/donation-text-components';\nimport SupporterBadge from '../assets/icons/supporter-badge';\n\ninterface SupportersPageProps {\n  isNewEmail: boolean;\n  resetDonationFormState: () => void;\n  isSignedIn: boolean;\n  isDonating: boolean;\n  updateCardState: UpdateCardState;\n  updateCard: () => void;\n  updateCardComplete: () => void;\n}\n\nconst mapStateToProps = createSelector(\n  isSignedInSelector,\n  isDonatingSelector,\n  updateCardStateSelector,\n  (\n    isSignedIn: boolean,\n    isDonating: boolean,\n    updateCardState: UpdateCardState\n  ) => ({\n    isSignedIn,\n    isDonating,\n    updateCardState\n  })\n);\n\nconst mapDispatchToProps = { updateCard, updateCardComplete };\n\nfunction ConditionalContent({\n  isSignedIn,\n  isDonating\n}: {\n  isSignedIn: boolean;\n  isDonating: boolean;\n}) {\n  const { t } = useTranslation();",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4035,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "168e27931547defdc56c33f6184ff409",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
    "source_type": "git_repo",
    "title": "supporters",
    "content": "'../components/Donation/donation-text-components'; import SupporterBadge from '../assets/icons/supporter-badge'; interface SupportersPageProps { isNewEmail: boolean; resetDonationFormState: () => void; isSignedIn: boolean; isDonating: boolean; updateCardState: UpdateCardState; updateCard: () => void; updateCardComplete: () => void; } const mapStateToProps = createSelector( isSignedInSelector, isDonatingSelector, updateCardStateSelector, ( isSignedIn: boolean, isDonating: boolean, updateCardState: UpdateCardState ) => ({ isSignedIn, isDonating, updateCardState }) ); const mapDispatchToProps = { updateCard, updateCardComplete }; function ConditionalContent({ isSignedIn, isDonating }: { isSignedIn: boolean; isDonating: boolean; }) { const { t } = useTranslation();\n\nif (isSignedIn && !isDonating) {\n    return (\n      <Col md={12}>\n        <Spacer size='l' />\n        <h1 id='content-start' className='text-center'>\n          {t('learn.donation-record-not-found')}\n        </h1>\n        <Spacer size='m' />\n        <p className='text-center'>{t('learn.contact-support-mistake')}</p>\n        <Spacer size='l' />\n      </Col>\n    );\n  } else if (isSignedIn && isDonating) {\n    return (\n      <>\n        <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}>\n          <div className='supporter-badge-container'>\n            <SupporterBadge />\n          </div>\n          <ThankYouMessage askForDonation={false} thankContributon={true} />\n        </Col>\n        <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}>\n          <CurrentInitiativesText isSupportersPage={true} />\n          <Spacer size='m' />\n          <SupportBenefitsText isSupportersPage={true} />\n        </Col>\n      </>\n    );\n  } else\n    return (\n      <Col md={12}>\n        <Spacer size='l' />\n        <h1 id='content-start' className='text-center'>\n          {t('learn.sign-in-see-benefits')}\n        </h1>\n        <Spacer size='l' />\n        <BigCallToAction text={t('buttons.sign-in')} />\n        <Spacer size='l' />\n      </Col>\n    );\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4035,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
      "source_type": "git_repo"
    },
    "token_count": 531,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "a780e956ee772fb68206402ae88687e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
    "source_type": "git_repo",
    "title": "supporters",
    "content": "className='text-center'>{t('learn.contact-support-mistake')}</p> <Spacer size='l' /> </Col> ); } else if (isSignedIn && isDonating) { return ( <> <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}> <div className='supporter-badge-container'> <SupporterBadge /> </div> <ThankYouMessage askForDonation={false} thankContributon={true} /> </Col> <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}> <CurrentInitiativesText isSupportersPage={true} /> <Spacer size='m' /> <SupportBenefitsText isSupportersPage={true} /> </Col> </> ); } else return ( <Col md={12}> <Spacer size='l' /> <h1 id='content-start' className='text-center'> {t('learn.sign-in-see-benefits')} </h1> <Spacer size='l' /> <BigCallToAction text={t('buttons.sign-in')} /> <Spacer size='l' /> </Col> ); }\n\nfunction SupportersPage({ isSignedIn, isDonating }: SupportersPageProps) {\n  const { t } = useTranslation();",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4035,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
      "source_type": "git_repo"
    },
    "token_count": 274,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "761e6730273ef203200f5afbbccf6d24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
    "source_type": "git_repo",
    "title": "supporters",
    "content": "return ( <> <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}> <div className='supporter-badge-container'> <SupporterBadge /> </div> <ThankYouMessage askForDonation={false} thankContributon={true} /> </Col> <Col lg={6} lgOffset={0} md={8} mdOffset={1} sm={12}> <CurrentInitiativesText isSupportersPage={true} /> <Spacer size='m' /> <SupportBenefitsText isSupportersPage={true} /> </Col> </> ); } else return ( <Col md={12}> <Spacer size='l' /> <h1 id='content-start' className='text-center'> {t('learn.sign-in-see-benefits')} </h1> <Spacer size='l' /> <BigCallToAction text={t('buttons.sign-in')} /> <Spacer size='l' /> </Col> ); } function SupportersPage({ isSignedIn, isDonating }: SupportersPageProps) { const { t } = useTranslation();\n\nreturn (\n    <>\n      <Helmet>\n        <title>{t('misc.supporters-page-title')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Container\n        fluid={true}\n        className={`${isDonating && 'supporters-background'} `}\n      >\n        <Container className='donate-supporter-page-section'>\n          <main>\n            <Row className={'donation-section'}>\n              <ConditionalContent\n                isSignedIn={isSignedIn}\n                isDonating={isDonating}\n              />\n            </Row>\n          </main>\n        </Container>\n      </Container>\n      <Container fluid={true}>\n        <Row>\n          <Col sm={12}>\n            <hr />\n          </Col>\n        </Row>\n      </Container>\n      <Container className='donate-supporter-page-section'>\n        <Spacer size='l' />\n        <Row>\n          <Col lg={10} lgOffset={0} md={8} mdOffset={2} sm={10}>\n            <DonationFaqText />\n          </Col>\n        </Row>\n        <Spacer size='l' />\n      </Container>\n    </>\n  );\n}\n\nSupportersPage.displayName = 'Supporters-Page';\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(SupportersPage));",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4035,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\supporters.tsx",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "74bc95286ff2bcbc1a0a38e6aaac2ab1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
    "source_type": "git_repo",
    "title": "email-sign-up",
    "content": "import React, { useEffect, useRef } from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\nimport { Container, Col, Row, Button, Spacer } from '@freecodecamp/ui';\n\nimport createRedirect from '../components/create-redirect';\nimport { Loader, Link } from '../components/helpers';\nimport { apiLocation } from '../../config/env.json';\n\nimport { acceptTerms } from '../redux/actions';\nimport {\n  signInLoadingSelector,\n  userSelector,\n  isSignedInSelector\n} from '../redux/selectors';\nimport type { User } from '../redux/prop-types';\n\nimport './email-sign-up.css';\ninterface AcceptPrivacyTermsProps {\n  acceptTerms: (accept: boolean | null) => void;\n  acceptedPrivacyTerms: boolean;\n  isSignedIn: boolean;\n  showLoading: boolean;\n  completedChallengeCount: number;\n}\n\nconst mapStateToProps = createSelector(\n  userSelector,\n  isSignedInSelector,\n  signInLoadingSelector,\n  (user: User | null, isSignedIn: boolean, showLoading: boolean) => ({\n    acceptedPrivacyTerms: !!user?.acceptedPrivacyTerms,\n    isSignedIn,\n    showLoading,\n    completedChallengeCount: user?.completedChallengeCount ?? 0\n  })\n);\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ acceptTerms }, dispatch);\nconst RedirectToLearn = createRedirect('/learn');",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "84f7d07db85373370007036948853297",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
    "source_type": "git_repo",
    "title": "email-sign-up",
    "content": "{ signInLoadingSelector, userSelector, isSignedInSelector } from '../redux/selectors'; import type { User } from '../redux/prop-types'; import './email-sign-up.css'; interface AcceptPrivacyTermsProps { acceptTerms: (accept: boolean | null) => void; acceptedPrivacyTerms: boolean; isSignedIn: boolean; showLoading: boolean; completedChallengeCount: number; } const mapStateToProps = createSelector( userSelector, isSignedInSelector, signInLoadingSelector, (user: User | null, isSignedIn: boolean, showLoading: boolean) => ({ acceptedPrivacyTerms: !!user?.acceptedPrivacyTerms, isSignedIn, showLoading, completedChallengeCount: user?.completedChallengeCount ?? 0 }) ); const mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({ acceptTerms }, dispatch); const RedirectToLearn = createRedirect('/learn');\n\nfunction EmailListOptIn({\n  isSignedIn,\n  acceptTerms\n}: {\n  isSignedIn: boolean;\n  acceptTerms: (accepted: boolean) => void;\n}) {\n  const { t } = useTranslation();\n  if (isSignedIn) {\n    return (\n      <Container>\n        <Row className='email-list-opt'>\n          <Col md={4} mdOffset={2} sm={5} smOffset={1} xs={12}>\n            <Button\n              block={true}\n              size='large'\n              variant='primary'\n              onClick={() => acceptTerms(true)}\n            >\n              {t('buttons.yes-please')}\n            </Button>\n            <Spacer size='xs' />\n          </Col>\n          <Col md={4} sm={5} xs={12}>\n            <Button\n              block={true}\n              size='large'\n              variant='primary'\n              onClick={() => acceptTerms(false)}\n            >\n              {t('buttons.no-thanks')}\n            </Button>\n            <Spacer size='xs' />\n          </Col>\n        </Row>\n      </Container>\n    );\n  } else {\n    return (\n      <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n        <Spacer size='xs' />\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`${apiLocation}/signin`}\n        >\n          {t('buttons.sign-up-email-list')}\n        </Button>\n        <Spacer size='xs' />\n      </Col>\n    );\n  }\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "ea0893d05b8a4aec4810d9a5d94a9720",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
    "source_type": "git_repo",
    "title": "email-sign-up",
    "content": "{ return ( <Container> <Row className='email-list-opt'> <Col md={4} mdOffset={2} sm={5} smOffset={1} xs={12}> <Button block={true} size='large' variant='primary' onClick={() => acceptTerms(true)} > {t('buttons.yes-please')} </Button> <Spacer size='xs' /> </Col> <Col md={4} sm={5} xs={12}> <Button block={true} size='large' variant='primary' onClick={() => acceptTerms(false)} > {t('buttons.no-thanks')} </Button> <Spacer size='xs' /> </Col> </Row> </Container> ); } else { return ( <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}> <Spacer size='xs' /> <Button block={true} size='large' variant='primary' href={`${apiLocation}/signin`} > {t('buttons.sign-up-email-list')} </Button> <Spacer size='xs' /> </Col> ); } }\n\nfunction AcceptPrivacyTerms({\n  acceptTerms,\n  acceptedPrivacyTerms,\n  isSignedIn,\n  showLoading,\n  completedChallengeCount\n}: AcceptPrivacyTermsProps) {\n  const { t } = useTranslation();\n  const acceptedPrivacyRef = useRef(acceptedPrivacyTerms);\n  const acceptTermsRef = useRef(acceptTerms);\n  const newAccount = isSignedIn && completedChallengeCount < 1;\n\nuseEffect(() => {\n    acceptedPrivacyRef.current = acceptedPrivacyTerms;\n    acceptTermsRef.current = acceptTerms;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "931b82e70b155be8dd671f3fdab836a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
    "source_type": "git_repo",
    "title": "email-sign-up",
    "content": "); } else { return ( <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}> <Spacer size='xs' /> <Button block={true} size='large' variant='primary' href={`${apiLocation}/signin`} > {t('buttons.sign-up-email-list')} </Button> <Spacer size='xs' /> </Col> ); } } function AcceptPrivacyTerms({ acceptTerms, acceptedPrivacyTerms, isSignedIn, showLoading, completedChallengeCount }: AcceptPrivacyTermsProps) { const { t } = useTranslation(); const acceptedPrivacyRef = useRef(acceptedPrivacyTerms); const acceptTermsRef = useRef(acceptTerms); const newAccount = isSignedIn && completedChallengeCount < 1; useEffect(() => { acceptedPrivacyRef.current = acceptedPrivacyTerms; acceptTermsRef.current = acceptTerms; // eslint-disable-next-line react-hooks/exhaustive-deps }, []);\n\nreturn acceptedPrivacyTerms ? (\n    <RedirectToLearn />\n  ) : (\n    <>\n      <Helmet>\n        <title>{t('misc.email-signup')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Container>\n        <Row>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <Spacer size='l' />\n            <h1 className='text-center'>\n              {newAccount\n                ? t('misc.brand-new-account')\n                : t('misc.email-signup')}\n            </h1>\n            <Spacer size='xs' />\n          </Col>\n        </Row>\n        {newAccount && (\n          <Row>\n            <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n              <p>\n                <Trans i18nKey='misc.duplicate-account-warning'>\n                  <Link className='inline' to='/settings#danger-zone' />\n                </Trans>\n              </p>\n              <hr />\n            </Col>\n          </Row>\n        )}\n        <Row className='email-sign-up'>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <Spacer size='xs' />\n            <p>{t('misc.email-blast')}</p>\n            <Spacer size='xs' />\n          </Col>\n          {showLoading ? (\n            <Loader fullScreen={true} />\n          ) : (\n            <EmailListOptIn isSignedIn={isSignedIn} acceptTerms={acceptTerms} />\n          )}\n          <Col xs={12}>\n            <Spacer size='m' />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
      "source_type": "git_repo"
    },
    "token_count": 562,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9237851bef909edc6df2afb9617250f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
    "source_type": "git_repo",
    "title": "email-sign-up",
    "content": "{newAccount ? t('misc.brand-new-account') : t('misc.email-signup')} </h1> <Spacer size='xs' /> </Col> </Row> {newAccount && ( <Row> <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}> <p> <Trans i18nKey='misc.duplicate-account-warning'> <Link className='inline' to='/settings#danger-zone' /> </Trans> </p> <hr /> </Col> </Row> )} <Row className='email-sign-up'> <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}> <Spacer size='xs' /> <p>{t('misc.email-blast')}</p> <Spacer size='xs' /> </Col> {showLoading ? ( <Loader fullScreen={true} /> ) : ( <EmailListOptIn isSignedIn={isSignedIn} acceptTerms={acceptTerms} /> )} <Col xs={12}> <Spacer size='m' /> </Col> </Row> </Container> </> ); }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AcceptPrivacyTerms);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\email-sign-up.tsx",
      "source_type": "git_repo"
    },
    "token_count": 251,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "63c5ee29a1928ac42e47801ea9a54126",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\pages\\user.tsx",
    "source_type": "git_repo",
    "title": "user",
    "content": "import { Router } from '@gatsbyjs/reach-router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowUser from '../client-only-routes/show-user';\nimport RedirectHome from '../components/redirect-home';\n\nfunction User(): JSX.Element {\n  return (\n    <Router>\n      {/* @ts-expect-error Adding path property breaks username typing */}\n      <ShowUser path={withPrefix('/user/:username/report-user')} />\n\n<RedirectHome default />\n    </Router>\n  );\n}\n\nUser.displayName = 'User';\n\nexport default User;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 528,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\pages\\user.tsx",
      "source_type": "git_repo"
    },
    "token_count": 114,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c33a87068ef08456757f611de5636503",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\accept-terms-saga.js",
    "source_type": "git_repo",
    "title": "accept-terms-saga",
    "content": "import { navigate } from 'gatsby';\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\nimport { createFlashMessage } from '../components/Flash/redux';\nimport { putUserAcceptsTerms } from '../utils/ajax';\nimport { acceptTermsComplete, acceptTermsError } from './actions';\n\nfunction* acceptTermsSaga({ payload: quincyEmails }) {\n  try {\n    const { data } = yield call(putUserAcceptsTerms, quincyEmails);\n\nyield put(acceptTermsComplete(quincyEmails));\n    yield put(createFlashMessage(data));\n  } catch (e) {\n    yield put(acceptTermsError(e));\n  }\n}\n\nfunction* acceptCompleteSaga() {\n  yield call(navigate, '/learn');\n}\n\nexport function createAcceptTermsSaga(types) {\n  return [\n    takeEvery(types.acceptTerms, acceptTermsSaga),\n    takeEvery(types.acceptTermsComplete, acceptCompleteSaga)\n  ];\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 809,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\accept-terms-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 195,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c30f335dd2b72c348eb65238847793b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\action-types.js",
    "source_type": "git_repo",
    "title": "action-types",
    "content": "import { createTypes, createAsyncTypes } from '../utils/create-types';\n\nexport const ns = 'app';\n\nexport const actionTypes = createTypes(\n  [\n    'setTheme',\n    'initializeTheme',\n    'toggleTheme',\n    'appMount',\n    'hardGoTo',\n    'allowSectionDonationRequests',\n    'setRenderStartTime',\n    'preventSectionDonationRequests',\n    'setIsRandomCompletionThreshold',\n    'openDonationModal',\n    'closeDonationModal',\n    'openSignoutModal',\n    'closeSignoutModal',\n    'onlineStatusChange',\n    'serverStatusChange',\n    'resetUserData',\n    'tryToShowDonationModal',\n    'startExam',\n    'stopExam',\n    'clearExamResults',\n    'linkMsUsername',\n    'unlinkMsUsername',\n    'setMsUsername',\n    'setIsProcessing',\n    'submitComplete',\n    'submitSurvey',\n    'submitSurveyComplete',\n    'updateComplete',\n    'updateFailed',\n    'updateDonationFormState',\n    'updateUserToken',\n    'postChargeProcessing',\n    'updateAllChallengesInfo',\n    'updateCardRedirecting',\n    ...createAsyncTypes('updateCard'),\n    ...createAsyncTypes('fetchUser'),\n    ...createAsyncTypes('postCharge'),\n    ...createAsyncTypes('fetchProfileForUser'),\n    ...createAsyncTypes('acceptTerms'),\n    ...createAsyncTypes('showCert'),\n    ...createAsyncTypes('reportUser'),\n    ...createAsyncTypes('deleteUserToken'),\n    ...createAsyncTypes('saveChallenge'),\n    'fetchUserTimeout'\n  ],\n  ns\n);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1376,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\action-types.js",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b302651294bab2c78f51f33a8a933849",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\app-mount-saga.js",
    "source_type": "git_repo",
    "title": "app-mount-saga",
    "content": "import qs from 'query-string';\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { createFlashMessage } from '../components/Flash/redux';\n\nfunction* parseMessagesSaga() {\n  const search = window.location.search.slice();\n  // TODO(Bouncey): Find a way to clear the search with causing a re-render\n  if (search) {\n    const { messages } = qs.parse(search, { arrayFormat: 'index' });\n    if (messages) {\n      const flashMap = qs.parse(messages, { arrayFormat: 'index' });\n      const flash = Object.keys(flashMap).reduce(\n        (acc, type) => [\n          ...acc,\n          ...flashMap[type].map(message => ({ type, message }))\n        ],\n        []\n      );\n      for (let i = 0; i < flash.length; i++) {\n        yield put(createFlashMessage(flash[i]));\n      }\n    }\n  }\n}\n\nexport function createAppMountSaga(types) {\n  return [takeEvery(types.appMount, parseMessagesSaga)];\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 888,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\app-mount-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 219,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7128aeb8fcc3cf1d874acaa28c003b1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\create-store.ts",
    "source_type": "git_repo",
    "title": "create-store",
    "content": "import { createStore as reduxCreateStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport { createEpicMiddleware } from 'redux-observable';\nimport createSagaMiddleware from 'redux-saga';\n\nimport envData from '../../config/env.json';\nimport { isBrowser } from '../../utils';\nimport rootEpic from './root-epic';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\n\ndeclare const module: {\n  hot?: {\n    accept: (path: string, callback: () => void) => void;\n  };\n};\n\nconst { environment } = envData;\n\nconst clientSide = isBrowser();\n\nconst sagaMiddleware = createSagaMiddleware({\n  context: {\n    document: clientSide ? document : {}\n  }\n});\nconst epicMiddleware = createEpicMiddleware({\n  dependencies: {\n    window: clientSide ? window : {},\n    location: clientSide ? window.location : {},\n    document: clientSide ? document : {}\n  }\n});\n\nconst composeEnhancers = composeWithDevTools({\n  // options like actionSanitizer, stateSanitizer\n});\n\nexport const createStore = (preloadedState = {}) => {\n  let store;\n  if (environment === 'production') {\n    store = reduxCreateStore(\n      rootReducer,\n      preloadedState,\n      applyMiddleware(sagaMiddleware, epicMiddleware)\n    );\n  } else {\n    store = reduxCreateStore(\n      rootReducer,\n      preloadedState,\n      composeEnhancers(applyMiddleware(sagaMiddleware, epicMiddleware))\n    );\n  }\n  sagaMiddleware.run(rootSaga);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  epicMiddleware.run(rootEpic);\n\nif (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./root-reducer', () => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-require-imports\n      const nextRootReducer = require('./root-reducer');\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2003,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\create-store.ts",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b3be24edf416ae8ac6d3592fe3ace698",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\actions.ts",
    "source_type": "git_repo",
    "title": "actions",
    "content": "import { createAction } from 'redux-actions';\n\nimport { actionTypes } from './action-types';\n\nexport const appMount = createAction(actionTypes.appMount);\n\nexport const tryToShowDonationModal = createAction(\n  actionTypes.tryToShowDonationModal\n);\n\nexport const allowSectionDonationRequests = createAction(\n  actionTypes.allowSectionDonationRequests\n);\nexport const setRenderStartTime = createAction(actionTypes.setRenderStartTime);\nexport const closeDonationModal = createAction(actionTypes.closeDonationModal);\nexport const openDonationModal = createAction(actionTypes.openDonationModal);\nexport const preventSectionDonationRequests = createAction(\n  actionTypes.preventSectionDonationRequests\n);\nexport const setIsRandomCompletionThreshold = createAction(\n  actionTypes.setIsRandomCompletionThreshold\n);\nexport const updateDonationFormState = createAction(\n  actionTypes.updateDonationFormState\n);\n\nexport const onlineStatusChange = createAction(actionTypes.onlineStatusChange);\nexport const serverStatusChange = createAction(actionTypes.serverStatusChange);\n\n// TODO: re-evaluate this since /internal is no longer used.\n// `hardGoTo` is used to hit the API server directly\n// without going through /internal\n// used for things like /signin and /signout\nexport const hardGoTo = createAction(actionTypes.hardGoTo);\n\nexport const submitComplete = createAction(actionTypes.submitComplete);\nexport const updateComplete = createAction(actionTypes.updateComplete);\nexport const updateFailed = createAction(actionTypes.updateFailed);\n\nexport const saveChallenge = createAction(actionTypes.saveChallenge);\nexport const saveChallengeComplete = createAction(\n  actionTypes.saveChallengeComplete\n);\n\nexport const acceptTerms = createAction(actionTypes.acceptTerms);\nexport const acceptTermsComplete = createAction(\n  actionTypes.acceptTermsComplete\n);\nexport const acceptTermsError = createAction(actionTypes.acceptTermsError);\n\nexport const fetchUser = createAction(actionTypes.fetchUser);\nexport const fetchUserComplete = createAction(actionTypes.fetchUserComplete);\nexport const fetchUserTimeout = createAction(actionTypes.fetchUserTimeout);\nexport const fetchUserError = createAction(actionTypes.fetchUserError);\n\nexport const toggleTheme = createAction(actionTypes.toggleTheme);\nexport const setTheme = createAction(actionTypes.setTheme);\nexport const initializeTheme = createAction(actionTypes.initializeTheme);\n\nexport const updateAllChallengesInfo = createAction(\n  actionTypes.updateAllChallengesInfo\n);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4950,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\actions.ts",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6b5dc7e4c9e4b50351c1bf2099a2a2fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\actions.ts",
    "source_type": "git_repo",
    "title": "actions",
    "content": "export const updateFailed = createAction(actionTypes.updateFailed); export const saveChallenge = createAction(actionTypes.saveChallenge); export const saveChallengeComplete = createAction( actionTypes.saveChallengeComplete ); export const acceptTerms = createAction(actionTypes.acceptTerms); export const acceptTermsComplete = createAction( actionTypes.acceptTermsComplete ); export const acceptTermsError = createAction(actionTypes.acceptTermsError); export const fetchUser = createAction(actionTypes.fetchUser); export const fetchUserComplete = createAction(actionTypes.fetchUserComplete); export const fetchUserTimeout = createAction(actionTypes.fetchUserTimeout); export const fetchUserError = createAction(actionTypes.fetchUserError); export const toggleTheme = createAction(actionTypes.toggleTheme); export const setTheme = createAction(actionTypes.setTheme); export const initializeTheme = createAction(actionTypes.initializeTheme); export const updateAllChallengesInfo = createAction( actionTypes.updateAllChallengesInfo );\n\nexport const postCharge = createAction(actionTypes.postCharge);\nexport const postChargeProcessing = createAction(\n  actionTypes.postChargeProcessing\n);\nexport const postChargeComplete = createAction(actionTypes.postChargeComplete);\nexport const postChargeError = createAction(actionTypes.postChargeError);\n\nexport const updateCard = createAction(actionTypes.updateCard);\nexport const updateCardError = createAction(actionTypes.updateCardError);\nexport const updateCardComplete = createAction(actionTypes.updateCardComplete);\nexport const updateCardRedirecting = createAction(\n  actionTypes.updateCardRedirecting\n);\n\nexport const fetchProfileForUser = createAction(\n  actionTypes.fetchProfileForUser\n);\nexport const fetchProfileForUserComplete = createAction(\n  actionTypes.fetchProfileForUserComplete\n);\nexport const fetchProfileForUserError = createAction(\n  actionTypes.fetchProfileForUserError\n);\n\nexport const reportUser = createAction(actionTypes.reportUser);\nexport const reportUserComplete = createAction(actionTypes.reportUserComplete);\nexport const reportUserError = createAction(actionTypes.reportUserError);\n\nexport const resetUserData = createAction(actionTypes.resetUserData);\n\nexport const showCert = createAction(actionTypes.showCert);\nexport const showCertComplete = createAction(actionTypes.showCertComplete);\nexport const showCertError = createAction(actionTypes.showCertError);\n\nexport const updateUserToken = createAction(actionTypes.updateUserToken);\nexport const deleteUserToken = createAction(actionTypes.deleteUserToken);\nexport const deleteUserTokenComplete = createAction(\n  actionTypes.deleteUserTokenComplete\n);\n\nexport const startExam = createAction(actionTypes.startExam);\nexport const stopExam = createAction(actionTypes.stopExam);\nexport const clearExamResults = createAction(actionTypes.clearExamResults);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4950,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\actions.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8a71cdaeb979200bc70dc8506eb65d73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\actions.ts",
    "source_type": "git_repo",
    "title": "actions",
    "content": "actionTypes.fetchProfileForUserComplete ); export const fetchProfileForUserError = createAction( actionTypes.fetchProfileForUserError ); export const reportUser = createAction(actionTypes.reportUser); export const reportUserComplete = createAction(actionTypes.reportUserComplete); export const reportUserError = createAction(actionTypes.reportUserError); export const resetUserData = createAction(actionTypes.resetUserData); export const showCert = createAction(actionTypes.showCert); export const showCertComplete = createAction(actionTypes.showCertComplete); export const showCertError = createAction(actionTypes.showCertError); export const updateUserToken = createAction(actionTypes.updateUserToken); export const deleteUserToken = createAction(actionTypes.deleteUserToken); export const deleteUserTokenComplete = createAction( actionTypes.deleteUserTokenComplete ); export const startExam = createAction(actionTypes.startExam); export const stopExam = createAction(actionTypes.stopExam); export const clearExamResults = createAction(actionTypes.clearExamResults);\n\nexport const linkMsUsername = createAction(actionTypes.linkMsUsername);\nexport const unlinkMsUsername = createAction(actionTypes.unlinkMsUsername);\nexport const setMsUsername = createAction(actionTypes.setMsUsername);\n\nexport const submitSurvey = createAction(actionTypes.submitSurvey);\nexport const submitSurveyComplete = createAction(\n  actionTypes.submitSurveyComplete\n);\n\nexport const setIsProcessing = createAction(actionTypes.setIsProcessing);\n\nexport const closeSignoutModal = createAction(actionTypes.closeSignoutModal);\nexport const openSignoutModal = createAction(actionTypes.openSignoutModal);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4950,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\actions.ts",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3b41cc8d200ac961572384d10f8a14d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\error-saga.js",
    "source_type": "git_repo",
    "title": "error-saga",
    "content": "import { navigate } from 'gatsby';\nimport { isError } from 'lodash-es';\nimport { takeEvery, put } from 'redux-saga/effects';\n\nimport { createFlashMessage } from '../components/Flash/redux';\nimport { isHandledError, unwrapHandledError } from '../utils/handled-error';\nimport { reportClientSideError } from '../utils/report-error';\nimport { reportedErrorMessage } from '../utils/error-messages';\n\nconst errorActionSelector = action => isError(action.payload);\n\nfunction* errorHandlerSaga({ payload: error }) {\n  if (isHandledError(error)) {\n    const { type, message, redirectTo } = unwrapHandledError(error);\n    if (redirectTo) {\n      navigate(redirectTo);\n    }\n    yield put(createFlashMessage({ type, message }));\n    return;\n  }\n  reportClientSideError('Unhandled Error caught in error-saga', error);\n  yield put(createFlashMessage(reportedErrorMessage));\n}\n\nconst errorSagas = [takeEvery(errorActionSelector, errorHandlerSaga)];\n\nexport default errorSagas;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 963,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\error-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 209,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "10742e4367a94a47854207f94539889f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
    "source_type": "git_repo",
    "title": "donation-saga",
    "content": "import i18next from 'i18next';\nimport {\n  call,\n  delay,\n  put,\n  select,\n  take,\n  takeEvery,\n  takeLeading\n} from 'redux-saga/effects';\nimport callGA from '../analytics/call-ga';\nimport {\n  addDonation,\n  postChargeStripe,\n  postChargeStripeCard,\n  updateStripeCard\n} from '../utils/ajax';\nimport { stringifyDonationEvents } from '../utils/analytics-strings';\nimport { stripe } from '../utils/stripe';\nimport { PaymentProvider } from '../../../shared/config/donation-settings';\nimport {\n  getSessionChallengeData,\n  saveCurrentCount\n} from '../utils/session-storage';\n\nimport { actionTypes as appTypes } from './action-types';\nimport {\n  openDonationModal,\n  postChargeComplete,\n  postChargeProcessing,\n  postChargeError,\n  preventSectionDonationRequests,\n  updateCardError,\n  updateCardRedirecting\n} from './actions';\nimport {\n  isDonatingSelector,\n  donatableSectionRecentlyCompletedSelector,\n  shouldRequestDonationSelector,\n  isSignedInSelector,\n  completedChallengesSelector\n} from './selectors';\n\nconst defaultDonationErrorMessage = i18next.t('donate.error-2');\nconst updateCardErrorMessage = i18next.t('donate.error-3');\n\nfunction* showDonateModalSaga() {\n  let shouldRequestDonation = yield select(shouldRequestDonationSelector);\n  const MODAL_SHOWN_KEY = 'modalShownTimestamp';\n  const modalShownTimestamp = sessionStorage.getItem(MODAL_SHOWN_KEY);\n  // If the modal has been shown in the last 20 seconds, the animation should\n  // still be running:\n  const isAnimationRunning = Date.now() - modalShownTimestamp < 20000;\n  const shouldShowModal = shouldRequestDonation || isAnimationRunning;\n  const donatableSectionRecentlyCompleted = yield select(\n    donatableSectionRecentlyCompletedSelector\n  );\n\nif (shouldShowModal) {\n    yield delay(200);\n    yield put(openDonationModal());\n    if (!donatableSectionRecentlyCompleted) {\n      sessionStorage.setItem(MODAL_SHOWN_KEY, Date.now());\n    }\n    yield take(appTypes.closeDonationModal);\n    if (!donatableSectionRecentlyCompleted) {\n      yield call(saveCurrentCount);\n    }\n  }",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2fd9c80c185afc92829e4d0f3356e1c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
    "source_type": "git_repo",
    "title": "donation-saga",
    "content": "{ let shouldRequestDonation = yield select(shouldRequestDonationSelector); const MODAL_SHOWN_KEY = 'modalShownTimestamp'; const modalShownTimestamp = sessionStorage.getItem(MODAL_SHOWN_KEY); // If the modal has been shown in the last 20 seconds, the animation should // still be running: const isAnimationRunning = Date.now() - modalShownTimestamp < 20000; const shouldShowModal = shouldRequestDonation || isAnimationRunning; const donatableSectionRecentlyCompleted = yield select( donatableSectionRecentlyCompletedSelector ); if (shouldShowModal) { yield delay(200); yield put(openDonationModal()); if (!donatableSectionRecentlyCompleted) { sessionStorage.setItem(MODAL_SHOWN_KEY, Date.now()); } yield take(appTypes.closeDonationModal); if (!donatableSectionRecentlyCompleted) { yield call(saveCurrentCount); } }\n\n/* users can complete donatable section but have less than 10 completed challenge\n     to show the donation modal.*/\n  if (donatableSectionRecentlyCompleted) {\n    yield put(preventSectionDonationRequests());\n  }\n}\n\nexport function* postChargeSaga({\n  payload,\n  payload: {\n    paymentProvider,\n    paymentContext,\n    amount,\n    duration,\n    handleAuthentication,\n    paymentMethodId\n  }\n}) {\n  try {\n    const isSignedIn = yield select(isSignedInSelector);\n    if (paymentProvider !== PaymentProvider.Patreon) {\n      yield put(postChargeProcessing());\n    }\n\nif (paymentProvider === PaymentProvider.Stripe) {\n      const response = yield call(postChargeStripe, payload);\n      const error = response?.data?.error;\n      if (error) {\n        throw error;\n      }\n    } else if (paymentProvider === PaymentProvider.StripeCard) {\n      const optimizedPayload = { paymentMethodId, amount, duration };\n      const response = yield call(postChargeStripeCard, optimizedPayload);\n      const error = response?.data?.error;\n      if (error) {\n        yield stripeCardErrorHandler(\n          error,\n          handleAuthentication,\n          error.client_secret,\n          response.paymentMethodId,\n          optimizedPayload\n        );",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "22072c7997af31724edfa4f9a4bf0659",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
    "source_type": "git_repo",
    "title": "donation-saga",
    "content": "paymentMethodId } }) { try { const isSignedIn = yield select(isSignedInSelector); if (paymentProvider !== PaymentProvider.Patreon) { yield put(postChargeProcessing()); } if (paymentProvider === PaymentProvider.Stripe) { const response = yield call(postChargeStripe, payload); const error = response?.data?.error; if (error) { throw error; } } else if (paymentProvider === PaymentProvider.StripeCard) { const optimizedPayload = { paymentMethodId, amount, duration }; const response = yield call(postChargeStripeCard, optimizedPayload); const error = response?.data?.error; if (error) { yield stripeCardErrorHandler( error, handleAuthentication, error.client_secret, response.paymentMethodId, optimizedPayload );\n\n//if the authentication does not throw an error, add a donation\n        yield call(addDonation, { amount, duration });\n      }\n    } else if (paymentProvider === PaymentProvider.Paypal) {\n      // If the user is signed in and the payment goes through call api\n      // look into skip add donation\n      // what to do with \"data\" that comes through\n\nif (isSignedIn) yield call(addDonation, { amount, duration });\n    }\n    if (\n      [\n        PaymentProvider.Paypal,\n        PaymentProvider.Stripe,\n        PaymentProvider.StripeCard\n      ].includes(paymentProvider)\n    ) {\n      yield put(postChargeComplete());\n      yield call(setDonationCookie);\n    }\n    if (paymentProvider === PaymentProvider.Patreon) {\n      yield call(callGA, {\n        event: 'donation_related',\n        action: stringifyDonationEvents(paymentContext, paymentProvider)\n      });\n    } else {\n      const completedChallenges = yield select(completedChallengesSelector);\n      const sessionChallengeData = yield call(getSessionChallengeData);\n      const completedChallengesInSession = sessionChallengeData.currentCount;\n      yield call(callGA, {\n        event: 'donation',\n        action: stringifyDonationEvents(paymentContext, paymentProvider),\n        duration,\n        amount,\n        completed_challenges: completedChallenges.length,\n        completed_challenges_session: completedChallengesInSession,\n        isSignedIn\n      });\n    }\n  } catch (error) {\n    const err =\n      error.response && error.response.data\n        ? error.response.data.error\n        : defaultDonationErrorMessage;\n    yield put(postChargeError(err));\n  }\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d31ac98f9500b46f38960fdfecf5f6c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
    "source_type": "git_repo",
    "title": "donation-saga",
    "content": "PaymentProvider.Stripe, PaymentProvider.StripeCard ].includes(paymentProvider) ) { yield put(postChargeComplete()); yield call(setDonationCookie); } if (paymentProvider === PaymentProvider.Patreon) { yield call(callGA, { event: 'donation_related', action: stringifyDonationEvents(paymentContext, paymentProvider) }); } else { const completedChallenges = yield select(completedChallengesSelector); const sessionChallengeData = yield call(getSessionChallengeData); const completedChallengesInSession = sessionChallengeData.currentCount; yield call(callGA, { event: 'donation', action: stringifyDonationEvents(paymentContext, paymentProvider), duration, amount, completed_challenges: completedChallenges.length, completed_challenges_session: completedChallengesInSession, isSignedIn }); } } catch (error) { const err = error.response && error.response.data ? error.response.data.error : defaultDonationErrorMessage; yield put(postChargeError(err)); } }\n\nfunction* stripeCardErrorHandler(\n  error,\n  handleAuthentication,\n  clientSecret,\n  paymentMethodId\n) {\n  if (error.type === 'UserActionRequired' && clientSecret) {\n    yield handleAuthentication(clientSecret, paymentMethodId)\n      .then(result => {\n        if (result?.paymentIntent?.status !== 'succeeded')\n          throw result.error || { type: 'StripeAuthorizationFailed' };\n      })\n      .catch(error => {\n        throw error;\n      });\n  } else {\n    throw error;\n  }\n}\n\nexport function* setDonationCookie() {\n  if (document?.cookie) {\n    const isDonating = yield select(isDonatingSelector);\n    const isDonorCookieSet = document.cookie\n      .split(';')\n      .some(item => item.trim().startsWith('isDonor=true'));\n    if (isDonating) {\n      if (!isDonorCookieSet) {\n        document.cookie = 'isDonor=true';\n      }\n    }\n  }\n}\n\nexport function* updateCardSaga() {\n  yield put(updateCardRedirecting());\n  try {\n    const {\n      data: { sessionId }\n    } = yield call(updateStripeCard);\n\nif (!sessionId) throw new Error('No sessionId');\n    (yield stripe).redirectToCheckout({ sessionId });\n  } catch {\n    yield put(updateCardError(updateCardErrorMessage));\n  }\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "a86ef5fa86369fb3d25e764d901b3b9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
    "source_type": "git_repo",
    "title": "donation-saga",
    "content": "}); } else { throw error; } } export function* setDonationCookie() { if (document?.cookie) { const isDonating = yield select(isDonatingSelector); const isDonorCookieSet = document.cookie .split(';') .some(item => item.trim().startsWith('isDonor=true')); if (isDonating) { if (!isDonorCookieSet) { document.cookie = 'isDonor=true'; } } } } export function* updateCardSaga() { yield put(updateCardRedirecting()); try { const { data: { sessionId } } = yield call(updateStripeCard); if (!sessionId) throw new Error('No sessionId'); (yield stripe).redirectToCheckout({ sessionId }); } catch { yield put(updateCardError(updateCardErrorMessage)); } }\n\nexport function createDonationSaga(types) {\n  return [\n    takeEvery(types.tryToShowDonationModal, showDonateModalSaga),\n    takeLeading(types.postCharge, postChargeSaga),\n    takeEvery(types.fetchUserComplete, setDonationCookie),\n    takeLeading(types.updateCard, updateCardSaga)\n  ];\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\donation-saga.js",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "60a13f0a08b79d82c9d6547a40cfa10c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\failed-updates-epic.js",
    "source_type": "git_repo",
    "title": "failed-updates-epic",
    "content": "import { ofType } from 'redux-observable';\nimport { empty, merge } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  ignoreElements,\n  map,\n  switchMap,\n  tap\n} from 'rxjs/operators';\nimport store from 'store';\nimport { v4 as uuid } from 'uuid';\n\nimport { challengeTypes } from '../../../shared/config/challenge-types';\nimport { isGoodXHRStatus } from '../templates/Challenges/utils';\nimport postUpdate$ from '../templates/Challenges/utils/post-update';\nimport { actionTypes } from './action-types';\nimport { serverStatusChange } from './actions';\nimport { isServerOnlineSelector, isSignedInSelector } from './selectors';\n\nconst key = 'fcc-failed-updates';\n\nfunction delay(time = 0, fn) {\n  return setTimeout(fn, time);\n}\n\n// check if backendEndProjects have a solution\nconst isSubmitable = failure =>\n  failure.payload.challengeType !== challengeTypes.backEndProject ||\n  failure.payload.solution;\n\nfunction failedUpdateEpic(action$, state$) {\n  const storeUpdates = action$.pipe(\n    ofType(actionTypes.updateFailed),\n    tap(({ payload = {} }) => {\n      if ('endpoint' in payload && 'payload' in payload) {\n        const failures = store.get(key) || [];\n        payload.id = uuid();\n        store.set(key, [...failures, payload]);\n      }\n    }),\n    map(() => serverStatusChange(false))\n  );\n\nconst flushUpdates = action$.pipe(\n    ofType(actionTypes.fetchUserComplete, actionTypes.updateComplete),\n    filter(() => isSignedInSelector(state$.value)),\n    filter(() => store.get(key)),\n    filter(() => isServerOnlineSelector(state$.value)),\n    tap(() => {\n      let failures = store.get(key);\n      failures = Array.isArray(failures) ? failures : [];\n\nlet submitableFailures = failures.filter(isSubmitable);\n\n// delete unsubmitable failed challenges\n      store.set(key, submitableFailures);\n      failures = submitableFailures;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3363,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\failed-updates-epic.js",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "26f91fd0486a6d718f54369d022c6a47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\src\\redux\\failed-updates-epic.js",
    "source_type": "git_repo",
    "title": "failed-updates-epic",
    "content": "payload = {} }) => { if ('endpoint' in payload && 'payload' in payload) { const failures = store.get(key) || []; payload.id = uuid(); store.set(key, [...failures, payload]); } }), map(() => serverStatusChange(false)) ); const flushUpdates = action$.pipe( ofType(actionTypes.fetchUserComplete, actionTypes.updateComplete), filter(() => isSignedInSelector(state$.value)), filter(() => store.get(key)), filter(() => isServerOnlineSelector(state$.value)), tap(() => { let failures = store.get(key); failures = Array.isArray(failures) ? failures : []; let submitableFailures = failures.filter(isSubmitable); // delete unsubmitable failed challenges store.set(key, submitableFailures); failures = submitableFailures;\n\nlet delayTime = 100;\n      const batch = failures.map((update, i) => {\n        // we stagger the updates here so we don't hammer the server\n        // *********************************************************\n        // progressively increase additional delay by the amount of updates\n        // 1st: 100ms delay\n        // 2nd: 200ms delay\n        // 3rd: 400ms delay\n        // 4th: 700ms delay\n        // 5th: 1100ms delay\n        // 6th: 1600ms delay\n        // and so-on\n        delayTime += 100 * i;\n        return delay(delayTime, () =>\n          postUpdate$(update)\n            .pipe(\n              switchMap(({ response, data }) => {\n                if (data?.message || isGoodXHRStatus(response?.status)) {\n                  console.info(`${update.id} succeeded`);\n                  // the request completed successfully\n                  const failures = store.get(key) || [];\n                  const newFailures = failures.filter(x => x.id !== update.id);\n                  store.set(key, newFailures);\n                }\n                return empty();\n              }),\n              catchError(() => empty())\n            )\n            .toPromise()\n        );\n      });\n      Promise.all(batch)\n        .then(() => console.info('progress updates processed where possible'))\n        .catch(err =>\n          console.warn('unable to process progress updates', err.message)\n        );\n    }),\n    ignoreElements()\n  );\n\nreturn merge(storeUpdates, flushUpdates);\n}\n\nexport default failedUpdateEpic;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3363,
      "relative_path": "git_repos\\freeCodeCamp\\client\\src\\redux\\failed-updates-epic.js",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 2
  }
]