[
  {
    "id": "0382e29c8f5a2bed2e715588bfcf6ce0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s*/) Your second then() method should log data to the console js assert match(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\ freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 799,
    "chunk_index": 59,
    "total_chunks": 95
  },
  {
    "id": "f6fb8374aca47c457d81711e1c92cd1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s*/) Your second then() method should log data to the console js assert match(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\ freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 806,
    "chunk_index": 60,
    "total_chunks": 95
  },
  {
    "id": "0715e74481dcca9ddc74c8191192f978",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s*/) Your second then() method should log data to the console js assert match(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\ freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 808,
    "chunk_index": 61,
    "total_chunks": 95
  },
  {
    "id": "6a4881b0a56c54f7d298f811842c0b52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s*/) Your second then() method should log data to the console js assert match(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\ freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 830,
    "chunk_index": 62,
    "total_chunks": 95
  },
  {
    "id": "a5bab684bf0518fc4b093e3e0424d2cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s*/) Your second then() method should log data to the console js assert match(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\ freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/)\nYour",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 832,
    "chunk_index": 63,
    "total_chunks": 95
  },
  {
    "id": "ee81101c7b10fcb0c9bcbdea34f810a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s*/) Your second then() method should log data to the console js assert match(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\ freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 817,
    "chunk_index": 64,
    "total_chunks": 95
  },
  {
    "id": "ddd115b40321f764ee905e80dc90963a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "Your second then() method should log data to the console js assert match(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\ freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 775,
    "chunk_index": 65,
    "total_chunks": 95
  },
  {
    "id": "4f84f460f4eb92b8b605ea76ad3918d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\ json\\(\\s*\\)\\s*\\)\\s*\\ then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticks",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 753,
    "chunk_index": 66,
    "total_chunks": 95
  },
  {
    "id": "d37bfa92d6758432e0e599c30ce48ae8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n \\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 67,
    "total_chunks": 95
  },
  {
    "id": "96ef099f39ea7ffcf10eea32dd12ec65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "\\s* console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 68,
    "total_chunks": 95
  },
  {
    "id": "a75ed92a0d57861618b47ab5c3b5ea5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 69,
    "total_chunks": 95
  },
  {
    "id": "87545164f32ed8c9ce5d080b4bf1558c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 70,
    "total_chunks": 95
  },
  {
    "id": "40873ff5b65f5cfc863557c8e341d3e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 709,
    "chunk_index": 71,
    "total_chunks": 95
  },
  {
    "id": "17d66354f91e7f36d83c4dceb0099f46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 732,
    "chunk_index": 72,
    "total_chunks": 95
  },
  {
    "id": "12d694b69a1a5947976791041a4b532f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 743,
    "chunk_index": 73,
    "total_chunks": 95
  },
  {
    "id": "d1dd29d5dd6832be8ba494a8757d4c05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 768,
    "chunk_index": 74,
    "total_chunks": 95
  },
  {
    "id": "7fb43712a150d74183e1262a5ff69b59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 770,
    "chunk_index": 75,
    "total_chunks": 95
  },
  {
    "id": "8eb14f05391fab3ba52d707cff06cbd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 772,
    "chunk_index": 76,
    "total_chunks": 95
  },
  {
    "id": "56237055d9be286643c6baf71cdb05e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 784,
    "chunk_index": 77,
    "total_chunks": 95
  },
  {
    "id": "1802417bda3038dfd5c8781861d4a83a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 785,
    "chunk_index": 78,
    "total_chunks": 95
  },
  {
    "id": "5db8e19efe44a6bb163a5feba4dbef0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 792,
    "chunk_index": 79,
    "total_chunks": 95
  },
  {
    "id": "ba1869f4407e14503f78f325205e3afd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 794,
    "chunk_index": 80,
    "total_chunks": 95
  },
  {
    "id": "6c6ecf92c3ab837d9b679410ec8820d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 816,
    "chunk_index": 81,
    "total_chunks": 95
  },
  {
    "id": "12a41fa2ae0f2bbbe5a62f57b0d8dea2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 817,
    "chunk_index": 82,
    "total_chunks": 95
  },
  {
    "id": "f947a55529c58169becadafbd4479ffc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 820,
    "chunk_index": 83,
    "total_chunks": 95
  },
  {
    "id": "dabfbc1e56bf62a86c52d51f42693a2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 822,
    "chunk_index": 84,
    "total_chunks": 95
  },
  {
    "id": "ca7f15ba125c0dfb215851f8f5afdb68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 838,
    "chunk_index": 85,
    "total_chunks": 95
  },
  {
    "id": "20f9891c25394c4d7aef7f45b05bbbc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 854,
    "chunk_index": 86,
    "total_chunks": 95
  },
  {
    "id": "2ac3af217eb13cfbd163d8a8a0800b01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;\\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 855,
    "chunk_index": 87,
    "total_chunks": 95
  },
  {
    "id": "ac5063b8caba8e6a43d226e2c2d90ec9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;\\n(\\s*)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 858,
    "chunk_index": 88,
    "total_chunks": 95
  },
  {
    "id": "15c76d69e68df0ad033471814b30edd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;\\n(\\s*)\\}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 860,
    "chunk_index": 89,
    "total_chunks": 95
  },
  {
    "id": "b0769f971b5d28cd2c61f4f75ab66bce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;\\n(\\s*)\\}\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 866,
    "chunk_index": 90,
    "total_chunks": 95
  },
  {
    "id": "263843561c7b1e2ab3c6d23bf68f3d0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "console\\log\\(\\s*data\\s*\\)\\s*; \\n \\s*\\}\\s*\\)/) Your second then() should not have a semicolon js assert notMatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\ org\\/curriculum\\/news\\-author\\-page\\/authors\\ json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\s*;/) You should chain thecatch() method to the secondthen() you already havejs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(/) You should add an err parameter to yourcatch() methodjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)/) Yourcatch() method should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;\\n(\\s*)\\}\\s*\\)\\s*;/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp News Author Page\nfreeCodeCamp News Author Page\nLoad More Authors\n```\n```css\n* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--main-bg-color: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-purple: #5a01a7;\n--golden-yellow: #feac32;\n}\nbody {\nbackground-color: var(--main-bg-color);\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 985,
    "chunk_index": 91,
    "total_chunks": 95
  },
  {
    "id": "be36d6c9784a7162f6022362fb64e700",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "should have an arrow function syntaxjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{/) Yourcatch() method should use consoleerror() to log err to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;\\n(\\s*)\\}\\s*\\)\\s*;/) --seed-- --seed-contents-- ```html freeCodeCamp News Author Page freeCodeCamp News Author Page Load More Authors ``` ```css * { margin: 0; padding: 0; box-sizing: border-box; } :root { --main-bg-color: #1b1b32; --light-grey: #f5f6f7; --dark-purple: #5a01a7; --golden-yellow: #feac32; } body { background-color: var(--main-bg-color); text-align: center; }title {\ncolor: var(--light-grey);\nmargin: 20px 0;\n}\nauthor-container {\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 542,
    "chunk_index": 92,
    "total_chunks": 95
  },
  {
    "id": "646714635a2132c9798262b7ae05ffd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "to the console with the text `There was an error: ${err}`Don't forget to use backticksjs assertmatch(code, /fetch\\(\\s*('|\"|`)https:\\/\\/cdn\\freecodecamp\\org\\/curriculum\\/news\\-author\\-page\\/authors\\json\\1\\s*\\)\\s*\\then\\(\\s*(\\(\\s*res\\s*\\)|res)\\s*=>\\s*res\\json\\(\\s*\\)\\s*\\)\\s*\\then\\(\\s*(\\(\\s*data\\s*\\)|data)\\s*=>\\s*\\{\\s*\\n\\s*console\\log\\(\\s*data\\s*\\)\\s*;\\n\\s*\\}\\s*\\)\\n\\s*\\catch\\(\\s*(\\(\\s*err\\s*\\)|err)\\s*=>\\s*\\{\\n(\\s*)console\\error\\(\\s*`There\\swas\\san\\serror:\\s\\$\\{\\s*err\\s*\\}`\\s*\\)\\s*;\\n(\\s*)\\}\\s*\\)\\s*;/) --seed-- --seed-contents-- ```html freeCodeCamp News Author Page freeCodeCamp News Author Page Load More Authors ``` ```css * { margin: 0; padding: 0; box-sizing: border-box; } :root { --main-bg-color: #1b1b32; --light-grey: #f5f6f7; --dark-purple: #5a01a7; --golden-yellow: #feac32; } body { background-color: var(--main-bg-color); text-align: center; }title { color: var(--light-grey); margin: 20px 0; } author-container { display: flex; flex-wrap: wrap; justify-content: center; }user-card {\nborder-radius: 15px;\nwidth: 300px;\nheight: 350px;\nbackground-color: var(--light-grey);\nmargin: 20px;\n} user-img {\nwidth: 150px;\nheight: 150px;\nobject-fit: cover;\n} purple-divider {\nbackground-color: var(--dark-purple);\nwidth: 100%;\nheight: 15px;\n} author-name {\nmargin: 10px;\n} bio {\nmargin: 20px;\n} error-msg {\ncolor: var(--light-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 93,
    "total_chunks": 95
  },
  {
    "id": "eba3683ea5d5d9020adbc4935b355558",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp News Author Page",
    "content": "#1b1b32; --light-grey: #f5f6f7; --dark-purple: #5a01a7; --golden-yellow: #feac32; } body { background-color: var(--main-bg-color); text-align: center; }title { color: var(--light-grey); margin: 20px 0; } author-container { display: flex; flex-wrap: wrap; justify-content: center; }user-card { border-radius: 15px; width: 300px; height: 350px; background-color: var(--light-grey); margin: 20px; } user-img { width: 150px; height: 150px; object-fit: cover; } purple-divider { background-color: var(--dark-purple); width: 100%; height: 15px; } author-name { margin: 10px; } bio { margin: 20px; } error-msg { color: var(--light-grey); }btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px;\ncolor: var(--main-bg-color);\nfont-size: 14px;\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\n```\n```js\nconst authorContainer = document getElementById('author-container');\nconst loadMoreBtn = document getElementById('load-more-btn');\nfetch('https://cdn freecodecamp org/curriculum/news-author-page/authors json') then((res) => res json()) then((data) => {\nconsole log(data);\n})\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7036,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fcc-authors-page\\641da51a9810e74411262fcc.md",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 94,
    "total_chunks": 95
  },
  {
    "id": "a4b27ef22e43c8d9c852eb5db32bffb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619be946958c6009844f1dee.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619be946958c6009844f1dee\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nStart the penguin's face, by adding two div elements within penguin-head, and giving them both a class of face --hints--\nYou should add two div elements within penguin-head Expected --fcc-expected-- penguin-head > div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin-head > div'), 2);\nYou should give the first div a class of face, but found --fcc-actual-- js\nassert include(document querySelector(' penguin-head > div:nth-of-type(1)') className, 'face');\nYou should give the second div a class of face, but found --fcc-actual-- js\nassert include(document querySelector(' penguin-head > div:nth-of-type(2)') className, 'face');\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619be946958c6009844f1dee.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "cc95b70a0e4aedbca80f8b9ecdfe0f2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619be946958c6009844f1dee.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619be946958c6009844f1dee.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "095665537507835312d0207d387502fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619be946958c6009844f1dee.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619be946958c6009844f1dee.md",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "10f3165fde1633af6fa5121ed2cca7e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c155df0063a0a3fec0e32.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619c155df0063a0a3fec0e32\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nGive the face elements a width of 60%, a height of 70%, and a background-color of white --hints--\nYou should use the face selector js\nassert match(code, /\\ face\\s*\\{/);\nYou should give face a width property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' face') width);\nYou should give face a width of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' face') width, '60%');\nYou should give face a height property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' face') height);\nYou should give face a height of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' face') height, '70%');\nYou should give face a background-color property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' face') backgroundColor);\nYou should give face a background-color of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' face') backgroundColor, 'white');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c155df0063a0a3fec0e32.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f696242cc687a7b0fef945ce1a438909",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c155df0063a0a3fec0e32.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "backgroundColor, 'white'); --seed-- --seed-contents-- ```html Penguin ``` ```css body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}\n--fcc-editable-region--\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c155df0063a0a3fec0e32.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5e8f73c98ee87803d97f3eebc22b6814",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c155df0063a0a3fec0e32.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } --fcc-editable-region-- --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c155df0063a0a3fec0e32.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7d60473e7e48dd885a98f6b9988585ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c16debd0c270b01c5ce38.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619c16debd0c270b01c5ce38\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nMake the top corners of the face elements have a radius of 70%, and the bottom corners have a radius of 60% --hints--\nYou should give face a border-radius of 70% 70% 60% 60% js\nassert equal(new __helpers CSSHelp(document) getStyle(' face') borderTopLeftRadius, '70%');\nassert equal(new __helpers CSSHelp(document) getStyle(' face') borderTopRightRadius, '70%');\nassert equal(new __helpers CSSHelp(document) getStyle(' face') borderBottomLeftRadius, '60%');\nassert equal(new __helpers CSSHelp(document) getStyle(' face') borderBottomRightRadius, '60%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c16debd0c270b01c5ce38.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8aedb93ebd97dd677d7969bd08623b46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c16debd0c270b01c5ce38.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}\n--fcc-editable-region-- face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619c16debd0c270b01c5ce38.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c1480e7ebf84728ceba7b35e6da48416",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619cfdf2e63ddf05feab86ad.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619cfdf2e63ddf05feab86ad\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nPosition the face elements so that they are 15% from the top --hints--\nYou should give face a top property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' face') top);\nYou should give face a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' face') top, '15%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2982,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619cfdf2e63ddf05feab86ad.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "17f2e51574ebd00dda73c962c3c29017",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619cfdf2e63ddf05feab86ad.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } --fcc-editable-region--face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2982,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619cfdf2e63ddf05feab86ad.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4cb7e02988d5b182bd19c9ab2571ed0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d019488f98c06acbbb71a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d019488f98c06acbbb71a\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nCurrently, the two face elements are on top of each other Fix this, by adding a class of left to the first face element, and a class of right to the second face element --hints--\nYou should give a class of left to the first face element js\nassert include(document querySelector(' face:nth-of-type(1)') className, 'left');\nYou should give a class of right to the second face element js\nassert include(document querySelector(' face:nth-of-type(2)') className, 'right');\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3139,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d019488f98c06acbbb71a.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "df59250aae0b1c090c2b4a591d6fe2f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d019488f98c06acbbb71a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3139,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d019488f98c06acbbb71a.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "da98fb1a0edb59bc4e3c9570094d7c8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d019488f98c06acbbb71a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: white; border-radius: 70% 70% 60% 60%; top: 15%; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3139,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d019488f98c06acbbb71a.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "40725cb3ff6758112900fb5cde377f35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d022dc8400c0763829a17.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d022dc8400c0763829a17\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nTarget the face element with the left class, and position it 5% left of its parent --hints--\nYou should use the face left selector js\nassert match(code, /\\ face\\ left\\s*\\{/);\nYou should give face left a left property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' face left') left);\nYou should give face left a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' face left') left, '5%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d022dc8400c0763829a17.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "58bb5c6863f528d34a2406c1f5504fac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d022dc8400c0763829a17.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d022dc8400c0763829a17.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ffd21dd0e44b795086ad7031880a9c3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d022dc8400c0763829a17.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "z-index: 1; } face { width: 60%; height: 70%; background-color: white; border-radius: 70% 70% 60% 60%; top: 15%; } --fcc-editable-region-- --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d022dc8400c0763829a17.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "eca84061eb99302821e70680eacce30a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d02c7bc95bf0827a5d296.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d02c7bc95bf0827a5d296\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nTarget the face element with the right class, and position it 5% right of its parent --hints--\nYou should use the face right selector js\nassert match(code, /\\ face\\ right\\s*\\{/);\nYou should give face right a right property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' face right') right);\nYou should give face right a right of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' face right') right, '5%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d02c7bc95bf0827a5d296.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "48b9c8c06e5fc5160a76e68c85aac800",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d02c7bc95bf0827a5d296.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n}\n--fcc-editable-region-- face left {\nleft: 5%;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d02c7bc95bf0827a5d296.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "92df37c7180838c2b467694e093a5167",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d02c7bc95bf0827a5d296.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "60%; height: 70%; background-color: white; border-radius: 70% 70% 60% 60%; top: 15%; } --fcc-editable-region-- face left { left: 5%; } --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d02c7bc95bf0827a5d296.md",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ac5445cc1f210b98f360003a0b8b12e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d03dadadb6509a16f4f5f.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d03dadadb6509a16f4f5f\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nTarget the chin element, and give it a width of 90%, height of 70%, and background-color of white --hints--\nYou should use the chin selector js\nassert match(code, /\\ chin\\s*\\{/);\nYou should give chin a width property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' chin') width);\nYou should give chin a width of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') width, '90%');\nYou should give chin a height property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' chin') height);\nYou should give chin a height of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') height, '70%');\nYou should give chin a background-color property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' chin') backgroundColor);\nYou should give chin a background-color of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') backgroundColor, 'white');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3898,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d03dadadb6509a16f4f5f.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "cb7e235e505ec1b99788d0421088d10a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d03dadadb6509a16f4f5f.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "backgroundColor, 'white'); --seed-- --seed-contents-- ```html Penguin ``` ```css body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}\n--fcc-editable-region--\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3898,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d03dadadb6509a16f4f5f.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9a7aad46392f6871043c3fe9f08db234",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d03dadadb6509a16f4f5f.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: white; border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } --fcc-editable-region-- --fcc-editable-region--penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3898,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d03dadadb6509a16f4f5f.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "551d121bc5fcf354d9a1049ee99e2e0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d033915012509031f309a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d033915012509031f309a\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nBelow the face right element, add a div element with a class of chin --hints--\nYou should add one div element within penguin-head Expected --fcc-expected-- penguin-head > div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin-head > div'), 3);\nYou should give the div a class of chin js\nassert exists(document querySelector(' penguin-head > div chin'));\nYou should place the div element below the face right element js\nassert exists(document querySelector(' face right + chin'));\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d033915012509031f309a.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b79fdb5b3eac548823892b8f4bcae000",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d033915012509031f309a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d033915012509031f309a.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4a15b3907cea400173a086436eba15e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d033915012509031f309a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "white; border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d033915012509031f309a.md",
      "source_type": "git_repo"
    },
    "token_count": 243,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "347b351e86910c090a9214ccb49c003c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0503e03a790a4179d463.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0503e03a790a4179d463\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nPosition the chin element such that it is 25% from the top, and 5% from the left of its parent Then, give the top corners a radius of 70%, and the bottom corners a radius of 100% --hints--\nYou should give chin a top property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' chin') top);\nYou should give chin a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') top, '25%');\nYou should give chin a left property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' chin') left);\nYou should give chin a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') left, '5%');\nYou should give chin a border-radius of 70% 70% 100% 100% js\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') borderTopLeftRadius, '70%');\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') borderTopRightRadius, '70%');\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') borderBottomRightRadius, '100%');\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') borderBottomLeftRadius, '100%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4050,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0503e03a790a4179d463.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7ed0e1de295fc4380c72109a52e0cdea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0503e03a790a4179d463.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "borderTopLeftRadius, '70%'); assert equal(new __helpers CSSHelp(document) getStyle(' chin') borderTopRightRadius, '70%'); assert equal(new __helpers CSSHelp(document) getStyle(' chin') borderBottomRightRadius, '100%'); assert equal(new __helpers CSSHelp(document) getStyle(' chin') borderBottomLeftRadius, '100%'); --seed-- --seed-contents-- ```html Penguin ``` ```css body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4050,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0503e03a790a4179d463.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c64b8c2c15678b87bb8f67d76b6d573e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0503e03a790a4179d463.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: white; border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } faceright {\nright: 5%;\n}\n--fcc-editable-region-- chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: white;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4050,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0503e03a790a4179d463.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1cf26d697f19b15e441df9906ddf0a64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d05c54dabca0b10058235.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d05c54dabca0b10058235\ntitle: Step 54\nchallengeType: 0\ndashedName: step-54\n--description--\nSo far, the face and chin elements have the same background-color Create a custom CSS property called --penguin-face, and set it to white --hints--\nYou should use the :root selector js\nassert match(code, /:root\\s*\\{/);\nYou should give :root a --penguin-face property js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(':root') getPropertyValue('--penguin-face'));\nYou should give :root a --penguin-face of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(':root') getPropVal('--penguin-face', true), 'white');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d05c54dabca0b10058235.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "62bc4cd708f3a213434bca09f5370958",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d05c54dabca0b10058235.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: white;\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d05c54dabca0b10058235.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "20f84a8f728de12dbf07cc69fca47f45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d05c54dabca0b10058235.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 60%; height: 70%; background-color: white; border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: white; top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d05c54dabca0b10058235.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4503381f714628cbf3bc9550f7927a57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0882f54bf40bdc4671ed.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0882f54bf40bdc4671ed\ntitle: Step 55\nchallengeType: 0\ndashedName: step-55\n--description--\nWhere relevant, replace property values with your --penguin-face variable --hints--\nYou should give face a background-color of var(--penguin-face) js\nassert equal(new __helpers CSSHelp(document) getStyle(' face') getPropVal('background-color', true), 'var(--penguin-face)');\nYou should give chin a background-color of var(--penguin-face) js\nassert equal(new __helpers CSSHelp(document) getStyle(' chin') getPropVal('background-color', true), 'var(--penguin-face)');\nYou should not use var(--penguin-face) in the penguin-body selector js\nassert notInclude(new __helpers CSSHelp(document) getStyle(' penguin-body') getPropVal('background-color', true), 'var(--penguin-face)');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n--fcc-editable-region--\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3612,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0882f54bf40bdc4671ed.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4a3b42ead5a58ed7205bb6793d43ca12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0882f54bf40bdc4671ed.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: white;\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: white;\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3612,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0882f54bf40bdc4671ed.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "457cf1ad378a01d7a80e14a553f5ba4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0882f54bf40bdc4671ed.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} face { width: 60%; height: 70%; background-color: white; border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: white; top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 235%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3612,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0882f54bf40bdc4671ed.md",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2115a5d707e75adbfb0def66d50d3e84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0b51ca42ed0d74582186.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0b51ca42ed0d74582186\ntitle: Step 57\nchallengeType: 0\ndashedName: step-57\n--description--\nTarget the eye elements, and give them a width of 15%, height of 17%, and background-color of black --hints--\nYou should use the eye selector js\nassert match(code, /\\ eye\\s*\\{/);\nYou should give eye a width of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye') width, '15%');\nYou should give eye a height of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye') height, '17%');\nYou should give eye a background-color of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye') backgroundColor, 'black');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0b51ca42ed0d74582186.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "dca501bf77fc98ce312832892e60227b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0b51ca42ed0d74582186.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}\n--fcc-editable-region--\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0b51ca42ed0d74582186.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5562c08d21f2a3c2a4da51a05cf6474f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0b51ca42ed0d74582186.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } --fcc-editable-region-- --fcc-editable-region--penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0b51ca42ed0d74582186.md",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a6f60ea23d12f684fc4b806c045430cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d090cd8d6db0c93dc5087.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d090cd8d6db0c93dc5087\ntitle: Step 56\nchallengeType: 0\ndashedName: step-56\n--description--\nBelow the chin element, add two div elements each with a class of eye Also, give the first eye element a class of left, and the second eye element a class of right --hints--\nYou should add two div elements within penguin-head Expected --fcc-expected-- penguin-head > div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin-head > div'), 5);\nYou should give the first new div a class of eye js\nassert exists(document querySelector(' penguin-head > div eye'));\nYou should give the second new div a class of eye js\nassert lengthOf(document querySelectorAll(' penguin-head > div eye'), 2);\nYou should give the first new div a class of left js\nassert exists(document querySelector(' penguin-head > div eye left'));\nYou should give the second new div a class of right js\nassert exists(document querySelector(' penguin-head > div eye right'));\nYou should place div eye left after div chin js\nassert exists(document querySelector(' chin + eye left'));\nYou should place div eye right after div eye left js\nassert exists(document querySelector(' eye left + eye right'));\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d090cd8d6db0c93dc5087.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "457993e875b41cc16dad606df292a76a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d090cd8d6db0c93dc5087.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "You should place div eye right after div eye left js assert exists(document querySelector(' eye left + eye right')); --seed-- --seed-contents-- ```html Penguin --fcc-editable-region-- --fcc-editable-region-- ``` ```css :root { --penguin-face: white; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d090cd8d6db0c93dc5087.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "46fe5a0e26ffa31a873ad9404bec0b5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d090cd8d6db0c93dc5087.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4148,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d090cd8d6db0c93dc5087.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a2dd0216197ce3a4e51dc54afb9a0477",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0bc9cb05360e1bf549c3.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0bc9cb05360e1bf549c3\ntitle: Step 58\nchallengeType: 0\ndashedName: step-58\n--description--\nPosition the eye elements 45% from the top of their parent, and give all corners a radius of 50% --hints--\nYou should give eye a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye') top, '45%');\nYou should give eye a border-radius of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye') borderRadius, '50%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0bc9cb05360e1bf549c3.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "60bbdbed5020066d28b9bde909544d5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0bc9cb05360e1bf549c3.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}\n--fcc-editable-region-- eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0bc9cb05360e1bf549c3.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0bf29ab446be81c9feda865788d1094e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0bc9cb05360e1bf549c3.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } --fcc-editable-region-- eye { width: 15%; height: 17%; background-color: black; } --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0bc9cb05360e1bf549c3.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "98cafc5ceeea32f9c3f7e59552c85715",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0d18ca99870f884a7bff.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0d18ca99870f884a7bff\ntitle: Step 60\nchallengeType: 0\ndashedName: step-60\n--description--\nWithin each eye element, add a div with a class of eye-lid --hints--\nYou should add one div element within eye left, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' eye left > div'), 1);\nYou should add one div element within eye right, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' eye right > div'), 1);\nYou should give the first new div a class of eye-lid js\nassert exists(document querySelector(' eye left > div eye-lid'));\nYou should give the second new div a class of eye-lid js\nassert exists(document querySelector(' eye right > div eye-lid'));\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0d18ca99870f884a7bff.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "20ddb6b2dec066cbe6639499c511f0ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0d18ca99870f884a7bff.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; }penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0d18ca99870f884a7bff.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "539ada53cc038828346dfe6f89980ad2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0d18ca99870f884a7bff.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0d18ca99870f884a7bff.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9d3720baf17a49e0ea0355c2725a130c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0c1594c38c0ebae75878.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0c1594c38c0ebae75878\ntitle: Step 59\nchallengeType: 0\ndashedName: step-59\n--description--\nTarget the eye element with the left class, and position it 25% from the left of its parent Then, target the eye element with the right class, and position it 25% from the right of its parent --hints--\nYou should use the eye left selector js\nassert match(code, /\\ eye\\ left\\s*\\{/);\nYou should give eye left a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye left') left, '25%');\nYou should use the eye right selector js\nassert match(code, /\\ eye\\ right\\s*\\{/);\nYou should give eye right a right of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye right') right, '25%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3861,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0c1594c38c0ebae75878.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "10f430e679ff23561d6437120d0a3234",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0c1594c38c0ebae75878.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n}\n--fcc-editable-region--\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3861,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0c1594c38c0ebae75878.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "904bc960a1b0716bc7fa0d9d924c8b7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0c1594c38c0ebae75878.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } --fcc-editable-region-- --fcc-editable-region--penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3861,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0c1594c38c0ebae75878.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1ce7ec951e2284f3b424c3231e39ac78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0e56f9ca9710fcb974e3.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0e56f9ca9710fcb974e3\ntitle: Step 62\nchallengeType: 0\ndashedName: step-62\n--description--\nPosition the eye-lid elements 25% from the top, and -23% from the left of their parents Then, give all corners a radius of 50% --hints--\nYou should give eye-lid a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye-lid') top, '25%');\nYou should give eye-lid a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye-lid') left, '-23%');\nYou should give eye-lid a border-radius of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye-lid') borderRadius, '50%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4028,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0e56f9ca9710fcb974e3.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "10000696204067ae54c3ed7870096877",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0e56f9ca9710fcb974e3.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4028,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0e56f9ca9710fcb974e3.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a06a5aeb486a68e996ba92427ab54c50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0e56f9ca9710fcb974e3.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } --fcc-editable-region--eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4028,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0e56f9ca9710fcb974e3.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "416a01661f0743be6e7cbf78f825c620",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0daf214542102739b0da.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0daf214542102739b0da\ntitle: Step 61\nchallengeType: 0\ndashedName: step-61\n--description--\nTarget the eye-lid elements, and give them a width of 150%, height of 100%, and background-color of --penguin-face --hints--\nYou should use the eye-lid selector js\nassert match(code, /\\ eye-lid\\s*\\{/);\nYou should give eye-lid a width of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye-lid') width, '150%');\nYou should give eye-lid a height of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye-lid') height, '100%');\nYou should give eye-lid a background-color of var(--penguin-face) js\nassert equal(new __helpers CSSHelp(document) getStyle(' eye-lid') getPropVal('background-color', true), 'var(--penguin-face)');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4045,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0daf214542102739b0da.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "fc53c5d8c3f72faead20dd5445f244d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0daf214542102739b0da.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}\n--fcc-editable-region--\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4045,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0daf214542102739b0da.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c34c5b221fe435008d9b33926f4345dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0daf214542102739b0da.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } --fcc-editable-region-- --fcc-editable-region--penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4045,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0daf214542102739b0da.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0bc26edaefdb9cc90cafa16fc702326e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0fc9825c271253df28d4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0fc9825c271253df28d4\ntitle: Step 64\nchallengeType: 0\ndashedName: step-64\n--description--\nTarget the blush elements, and give them a width of 15%, height of 10%, and background-color of pink --hints--\nYou should use the blush selector js\nassert match(code, /\\ blush\\s*\\{/);\nYou should give blush a width of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' blush') width, '15%');\nYou should give blush a height of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' blush') height, '10%');\nYou should give blush a background-color of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' blush') backgroundColor, 'pink');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0fc9825c271253df28d4.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "89061abd95d0e762a798cc71f4c36a32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0fc9825c271253df28d4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0fc9825c271253df28d4.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1390391da10d05010d3a752698b306d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0fc9825c271253df28d4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0fc9825c271253df28d4.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5aa94d2a7c509bf8c0339ca51343948a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d0eec0ac40611b41e2ccc\ntitle: Step 63\nchallengeType: 0\ndashedName: step-63\n--description--\nBelow the eye right element, add two div elements each with a class of blush Also, give the first blush element a class of left, and the second blush element a class of right --hints--\nYou should add two div elements within penguin-head Expected --fcc-expected-- penguin-head > div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin-head > div'), 7);\nYou should give the first new div a class of blush js\nassert exists(document querySelector(' penguin-head > div blush'));\nYou should give the second new div a class of blush js\nassert lengthOf(document querySelectorAll(' penguin-head > div blush'), 2);\nYou should give the first new div a class of left js\nassert exists(document querySelector(' penguin-head > div blush left'));\nYou should give the second new div a class of right js\nassert exists(document querySelector(' penguin-head > div blush right'));\nYou should place blush right after blush left js\nassert exists(document querySelector(' blush left + blush right'));\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "be1cbf674da5660b3b1d113d1bc386c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "blush right')); You should place blush right after blush left js assert exists(document querySelector(' blush left + blush right')); --seed-- --seed-contents-- ```html Penguin --fcc-editable-region-- --fcc-editable-region-- ``` ```css :root { --penguin-face: white; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8a6478f536fe97f65198695f45496a46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "3053c9d81826a29b993582c60f54b5ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d0eec0ac40611b41e2ccc.md",
      "source_type": "git_repo"
    },
    "token_count": 251,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "7d4832c9447b95d5570fdbbb76211737",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d102d786c3d13124c37c6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d102d786c3d13124c37c6\ntitle: Step 65\nchallengeType: 0\ndashedName: step-65\n--description--\nPosition the blush elements 65% from the top of their parent, and give all corners a radius of 50% --hints--\nYou should give blush a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' blush') top, '65%');\nYou should give blush a border-radius of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' blush') borderRadius, '50%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d102d786c3d13124c37c6.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f592c8a45785160c3749b12c0c58f2bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d102d786c3d13124c37c6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n}\n--fcc-editable-region-- blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d102d786c3d13124c37c6.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9fe3290805fb34b8a8ffaa24c7a717ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d102d786c3d13124c37c6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } --fcc-editable-region-- blush { width: 15%; height: 10%; background-color: pink; } --fcc-editable-region--penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d102d786c3d13124c37c6.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "57d611d41c07d292d57a614814f00253",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d10cc98145f14820399c5\ntitle: Step 67\nchallengeType: 0\ndashedName: step-67\n--description--\nBelow the blush right element, add two div elements each with a class of beak Also, give the first beak element a class of top, and the second beak element a class of bottom --hints--\nYou should add two div elements within penguin-head Expected --fcc-expected-- div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin-head > div'), 9);\nYou should give the first new div a class of beak js\nassert exists(document querySelector(' penguin-head > div beak'));\nYou should give the second new div a class of beak js\nassert lengthOf(document querySelectorAll(' penguin-head > div beak'), 2);\nYou should give the first new div a class of top js\nassert exists(document querySelector(' penguin-head > div beak top'));\nYou should give the second new div a class of bottom js\nassert exists(document querySelector(' penguin-head > div beak bottom'));\nYou should place div beak top after div blush right js\nassert exists(document querySelector(' blush right + beak top'));\nYou should place div beak bottom after div beak top js\nassert exists(document querySelector(' beak top + beak bottom'));\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "adafc52a384c8c270f7d84f179716f57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "You should place div beak bottom after div beak top js assert exists(document querySelector(' beak top + beak bottom')); --seed-- --seed-contents-- ```html Penguin --fcc-editable-region-- --fcc-editable-region-- ``` ```css :root { --penguin-face: white; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "231ddf44d4bb09aa23656d722cd1ebb3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "c98c36b85009bb4d224713b704d28613",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d10cc98145f14820399c5.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "2ee2213258dc06def743d3b644143a53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d115e2adcd71538e82ebb.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d115e2adcd71538e82ebb\ntitle: Step 68\nchallengeType: 0\ndashedName: step-68\n--description--\nTarget the beak elements, and give them a height of 10%, background-color of orange, and give all corners a radius of 50% --hints--\nYou should use the beak selector js\nassert match(code, /\\ beak\\s*\\{/);\nYou should give beak a height of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak') height, '10%');\nYou should give beak a background-color of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak') backgroundColor, 'orange');\nYou should give beak a border-radius of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak') borderRadius, '50%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d115e2adcd71538e82ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8e018a4d0965db1a8534e5640b9ece95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d115e2adcd71538e82ebb.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d115e2adcd71538e82ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f309dfa1eea2d2cdd7e8af70e70f82cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d115e2adcd71538e82ebb.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d115e2adcd71538e82ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8009900a6dd3b6229f57bd93a9b91e2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d107edf7ddf13cc77106a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d107edf7ddf13cc77106a\ntitle: Step 66\nchallengeType: 0\ndashedName: step-66\n--description--\nTarget the blush element with a class of left, and position it 15% left of its parent Then, target the blush element with a class of right, and position it 15% right of its parent --hints--\nYou should use the blush left selector js\nassert match(code, /\\ blush\\ left\\s*\\{/);\nYou should give blush left a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' blush left') left, '15%');\nYou should use the blush right selector js\nassert match(code, /\\ blush\\ right\\s*\\{/);\nYou should give blush right a right of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' blush right') right, '15%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d107edf7ddf13cc77106a.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "65984fc38d3194ac45ceb2ac3787f476",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d107edf7ddf13cc77106a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d107edf7ddf13cc77106a.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "087a69d8beb37f0fd8f4f8e60c0e68f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d107edf7ddf13cc77106a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d107edf7ddf13cc77106a.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3f8a00486f230037a54812603e5220e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d129a417d0716a94de913\ntitle: Step 70\nchallengeType: 0\ndashedName: step-70\n--description--\nTarget the beak element with a class of bottom, and give it a width that's 4% smaller than beak top, 5% further from the top, and 2% further from the left of its parent than beak top --hints--\nYou should use the beak bottom selector js\nassert match(code, /\\ beak\\ bottom\\s*\\{/);\nYou should give beak bottom a width of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak bottom') width, '16%');\nYou should give beak bottom a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak bottom') top, '65%');\nYou should give beak bottom a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak bottom') left, '42%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "56a926627563fc84fbe5657d959dbc0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "Penguin ``` ```css :root { --penguin-face: white; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "de2ecc925af2fa86507bef57eb40ddfb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; }eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n}\n--fcc-editable-region-- beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "94c9b1018e70624c639afba0828c9bda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: orange; border-radius: 50%; } --fcc-editable-region-- beak top { width: 20%; top: 60%; left: 40%; } --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4699,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d129a417d0716a94de913.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ed7dbb0aef30660dc8333a146d1084cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d11e6d5ef9515d2a16033\ntitle: Step 69\nchallengeType: 0\ndashedName: step-69\n--description--\nTarget the beak element with a class of top, give it a width of 20%, and position it 60% from the top, and 40% from the left of its parent --hints--\nYou should use the beak top selector js\nassert match(code, /\\ beak\\ top\\s*\\{/);\nYou should give beak top a width of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak top') width, '20%');\nYou should give beak top a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak top') top, '60%');\nYou should give beak top a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak top') left, '40%');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4572,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "e6232b51d2e59e45ec7e16395031032d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "Penguin ``` ```css :root { --penguin-face: white; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4572,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "9598af1cd89defb58faf492a4d77ceb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; }eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4572,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "87ee2d91352800cd492bab129c89a4a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: orange; border-radius: 50%; } --fcc-editable-region-- --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4572,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d11e6d5ef9515d2a16033.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "5072bb41dfbf88ebda0c67f4449c0f65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1340361095175f4b5115.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1340361095175f4b5115\ntitle: Step 71\nchallengeType: 0\ndashedName: step-71\n--description--\nThe penguin's body looks a bit plain Spruce him up by adding a div element with a class of shirt, immediately before the penguin-body element --hints--\nYou should add a div element within penguin Expected --fcc-expected-- div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin > div'), 3);\nYou should give the new div a class of shirt js\nassert exists(document querySelector(' penguin > div shirt'));\nYou should place the new div before penguin-body js\nassert exists(document querySelector(' shirt + penguin-body'));\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4495,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1340361095175f4b5115.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ada23e30ae39069479a550366a77dc4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1340361095175f4b5115.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4495,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1340361095175f4b5115.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3fb7c2c9a923a2d88e2b99306957ada7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1340361095175f4b5115.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; }blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4495,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1340361095175f4b5115.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "77060baf95f04a5111b4b441f96c01e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15797b580c1828b05426.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d15797b580c1828b05426\ntitle: Step 72\nchallengeType: 0\ndashedName: step-72\n--description--\nWithin the shirt element, add a div with the following emoji as content: 💜\n--hints--\nYou should add a div element within div shirt Expected --fcc-expected-- div element, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' shirt > div'), 1);\nYou should give the new div a content of 💜, but found --fcc-actual-- js\nassert equal(document querySelector(' shirt > div') textContent, '💜');\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15797b580c1828b05426.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "498ce9cdea1a362c44c8f832781d1f63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15797b580c1828b05426.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15797b580c1828b05426.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ff7f8e8e17182af1c3c8770603dc0189",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15797b580c1828b05426.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; }blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15797b580c1828b05426.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a36ed76ff53d282c866251549027ad39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15d955d9d418c4487bbc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d15d955d9d418c4487bbc\ntitle: Step 73\nchallengeType: 0\ndashedName: step-73\n--description--\nWithin shirt, after the div element, add a p element with the following content: I CSS\n--hints--\nYou should add one p element within shirt, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' shirt > p'), 1);\nYou should give the p element the content I CSS, but found --fcc-actual-- js\nassert equal(document querySelector(' shirt > p') textContent, 'I CSS');\n--seed--\n--seed-contents--\n```html\nPenguin\n--fcc-editable-region--\n💜\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4363,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15d955d9d418c4487bbc.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ff962aa0279103589954ea271e4b3649",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15d955d9d418c4487bbc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4363,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15d955d9d418c4487bbc.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "207abdb16b621cb99b96b7034018947c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15d955d9d418c4487bbc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; }blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4363,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d15d955d9d418c4487bbc.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "52a869b9f1f6c29c242ea9fb1f45b1de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1c5fc9f8941a400955da.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1c5fc9f8941a400955da\ntitle: Step 75\nchallengeType: 0\ndashedName: step-75\n--description--\nIn some browsers, the heart emoji may look slightly different from the previous step This is because some of the character's properties were overridden by the font-weight style of bold Fix this, by targeting the div with the heart emoji, and setting its font-weight to its original value --hints--\nYou should use the shirt div selector to target the div with the heart emoji js\nassert match(code, /\\ shirt div\\s*\\{/);\nYou should give the shirt div a font-weight of initial or normal js\nassert include(['normal', 'initial'], new __helpers CSSHelp(document) getStyle(' shirt div') fontWeight);\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1c5fc9f8941a400955da.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "de60a396482f63d21729f1e558ebcd96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1c5fc9f8941a400955da.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1c5fc9f8941a400955da.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9550092305b1a76a01a809574e2a3008",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1c5fc9f8941a400955da.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; }blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n}\n--fcc-editable-region-- shirt {\nfont: bold 25px Helvetica, sans-serif;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1c5fc9f8941a400955da.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7feb69da4092c48678f8c37d1ec0eacb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1629a8adc61960ca8b40\ntitle: Step 74\nchallengeType: 0\ndashedName: step-74\n--description--\nTarget the shirt element, and set its font-size to 25px, font-family to Helvetica with a fallback of sans-serif, and font-weight to bold --hints--\nYou should use the shirt selector js\nassert match(code, /\\ shirt\\s*\\{/);\nYou should give shirt a font-size of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt') fontSize, '25px');\nYou should give shirt a font-family of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt') fontFamily, 'Helvetica, sans-serif');\nYou should give shirt a font-weight of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt') fontWeight, 'bold');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4798,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "edec59e241915dd5e4e73205d669f5a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4798,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "107506664faf2b9971fc682028fa65ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4798,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "3ba8fb3b2088ca5924efbc0cdf186db0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } --fcc-editable-region-- --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4798,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1629a8adc61960ca8b40.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "f17697a9bea240c6516b3b4af6b4ca2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1e7a8e81a61c5a819dc4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1e7a8e81a61c5a819dc4\ntitle: Step 78\nchallengeType: 0\ndashedName: step-78\n--description--\nFor the shirt's final touch, set the color to #6a6969 --hints--\nYou should give shirt a color of #6a6969 js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt') color, 'rgb(106, 105, 105)');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4356,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1e7a8e81a61c5a819dc4.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "09e94cf7a07ddf337804bf14da4e176c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1e7a8e81a61c5a819dc4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; }face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4356,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1e7a8e81a61c5a819dc4.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7efd2e85b420d656b7fd33bb7af87935",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1e7a8e81a61c5a819dc4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: orange; border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } --fcc-editable-region--shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4356,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1e7a8e81a61c5a819dc4.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8279ed5cdd33ec7520d541b5537c51f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1dab9ff3421ae1976991.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1dab9ff3421ae1976991\ntitle: Step 76\nchallengeType: 0\ndashedName: step-76\n--description--\nPosition the div with the heart emoji 22 5px from the top, and 12px from the left of its parent --hints--\nYou should give shirt div a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt div') top, '22 5px');\nYou should give shirt div a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt div') left, '12px');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4539,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1dab9ff3421ae1976991.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "fee2e425740f14fd7ba53e709d62bd94",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1dab9ff3421ae1976991.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4539,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1dab9ff3421ae1976991.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c7dfbdd4a9f13680af941325defafd14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1dab9ff3421ae1976991.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; }blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n}\n--fcc-editable-region-- shirt {\nfont: bold 25px Helvetica, sans-serif;\n} shirt div {\nfont-weight: initial;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4539,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1dab9ff3421ae1976991.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b2cdfbb6697e7e8cffb83bb3ba25bbdc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1ed33c9a071cf657a0d6\ntitle: Step 79\nchallengeType: 0\ndashedName: step-79\n--description--\nFun fact: Penguins cannot stand without at least two feet Within the penguin-body element, add two div elements each with a class of foot Give the first foot a class of left, and the second foot a class of right --hints--\nYou should add two div elements within penguin-body Expected --fcc-expected-- div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin-body > div'), 2);\nYou should give the first new div a class of foot js\nassert exists(document querySelector(' penguin-body > div foot'));\nYou should give the second new div a class of foot js\nassert lengthOf(document querySelectorAll(' penguin-body > div foot'), 2);\nYou should give one div a class of left js\nassert exists(document querySelector(' penguin-body > div foot left'));\nYou should give the other div a class of right js\nassert exists(document querySelector(' penguin-body > div foot right'));\nYou should place foot right after foot left js\nassert exists(document querySelector(' foot left + foot right'));\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "6ebe819985b2c6298bb77f226972a3a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "should place foot right after foot left js assert exists(document querySelector(' foot left + foot right')); --seed-- --seed-contents-- ```html Penguin 💜 I CSS --fcc-editable-region-- --fcc-editable-region-- ``` ```css :root { --penguin-face: white; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f1d97dfbc6de1caa65163a18157743a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "0a8b1fa14398ef462777b492a11e749d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: orange; border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1ed33c9a071cf657a0d6.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6b7ce377fa40094c4b89794b5252cd04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1deb8b04811b8839ffe4\ntitle: Step 77\nchallengeType: 0\ndashedName: step-77\n--description--\nPosition the shirt element 165px from the top, and 127 5px from the left of its parent Then, increase its stacking order such that it appears above the penguin-body element --hints--\nYou should give shirt a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt') top, '165px');\nYou should give shirt a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt') left, '127 5px');\nYou should give the shirt element a z-index of 1 js\nassert equal(new __helpers CSSHelp(document) getStyle(' shirt') zIndex, '1');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "54289ef434ce416fd95ccfa660e8e64a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1681143cf70e28c5dfe838de73acb919",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n}\n--fcc-editable-region-- shirt {\nfont: bold 25px Helvetica, sans-serif;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}\n--fcc-editable-region-- penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "03cca6b740ac043be8d5383f0ae83c7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "orange; border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } --fcc-editable-region-- shirt { font: bold 25px Helvetica, sans-serif; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } --fcc-editable-region-- penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1deb8b04811b8839ffe4.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "8be10fa5a91771a4e79d81a18b41ac4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d1fb5d244c31db8a7fdb7\ntitle: Step 80\nchallengeType: 0\ndashedName: step-80\n--description--\nTarget the foot elements, and give them a width of 15%, height of 30%, and background-color of orange --hints--\nYou should use the foot selector js\nassert match(code, /\\ foot\\s*\\{/);\nYou should give foot a width of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot') width, '15%');\nYou should give foot a height of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot') height, '30%');\nYou should give foot a background-color of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot') backgroundColor, 'orange');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "a0b79df0c491b78b6910a8d1b30aac9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e459010f586d80bb81224586814daa54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "035249f24d28c1651b8af6078df5448a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d1fb5d244c31db8a7fdb7.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "c5437e17526b17bc3094a1273c9a159b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d204bd73ae51e743b8e94\ntitle: Step 81\nchallengeType: 0\ndashedName: step-81\n--description--\nPosition the foot elements 85% from the top of their parent, and give all corners a radius of 50% --hints--\nYou should give foot a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot') top, '85%');\nYou should give foot a border-radius of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot') borderRadius, '50%');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "babb179f4b296989be9ff92ee6d088f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "bb22c9f9967f8a0889d77f35b6cf4411",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; }blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: orange;\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2ef14289f587ef7b20660017c0120bbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } --fcc-editable-region-- foot { width: 15%; height: 30%; background-color: orange; } --fcc-editable-region--ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d204bd73ae51e743b8e94.md",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "dfb4d22e605c701c6af14e968ac8a245",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d21fe6a3f9b2016be9d9d\ntitle: Step 83\nchallengeType: 0\ndashedName: step-83\n--description--\nTarget the foot element with a class of left, and position it 25% left of its parent Then, target the foot element with a class of right, and position it 25% right of its parent --hints--\nYou should use the foot left selector js\nassert match(code, /\\ foot\\ left\\s*\\{/);\nYou should give foot left a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot left') left, '25%');\nYou should use the foot right selector js\nassert match(code, /\\ foot\\ right\\s*\\{/);\nYou should give foot right a right of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot right') right, '25%');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "a5e7dbd51f326bbeff8d6a156fd1002e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "36422ad52dddba8d81aa69c58464e6e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "18e426b5d38723c497dcf055a0944e74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\n}\n--fcc-editable-region-- ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d21fe6a3f9b2016be9d9d.md",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "1a1fa268398676e84e27c21ba99528c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d20b12996101f430920fb\ntitle: Step 82\nchallengeType: 0\ndashedName: step-82\n--description--\nThe penguin's beak and feet share the same color Create a new custom CSS variable named --penguin-picorna, and replace all relevant property values with it --hints--\nYou should give :root a --penguin-picorna property js\nassert exists(new __helpers CSSHelp(document) getStyle(':root') getPropertyValue('--penguin-picorna'));\nYou should give --penguin-picorna a value of orange, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(':root') getPropVal('--penguin-picorna', true), 'orange');\nYou should give beak a background-color of var(--penguin-picorna), but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' beak') getPropVal('background-color', true), 'var(--penguin-picorna)');\nYou should give foot a background-color of var(--penguin-picorna), but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot') getPropVal('background-color', true), 'var(--penguin-picorna)');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n--fcc-editable-region--\n:root {\n--penguin-face: white;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5379,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "4e470e54ac33166f9f5b34430533335a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "a background-color of var(--penguin-picorna), but found --fcc-actual-- js assert equal(new __helpers CSSHelp(document) getStyle(' foot') getPropVal('background-color', true), 'var(--penguin-picorna)'); --seed-- --seed-contents-- ```html Penguin 💜 I CSS ``` ```css --fcc-editable-region-- :root { --penguin-face: white; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5379,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "67cded0bf7ee5f659965cf016ba2a9d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: orange;\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5379,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "b2fc88e5f35614f546908d16bded3490",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: orange; border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: orange;\ntop: 85%;\nborder-radius: 50%;\n}\n--fcc-editable-region-- ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5379,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d20b12996101f430920fb.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "7bfd201473b1f391655a8c4b7166dbde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d229b0e542520cd91c685\ntitle: Step 84\nchallengeType: 0\ndashedName: step-84\n--description--\nTo make the penguin's feet look more penguiny, rotate the left foot by 80deg, and the right by -80deg --hints--\nYou should give foot left a transform of rotate(80deg) ```js\nconst leftFoot = new __helpers CSSHelp(document) getStyle(' foot left');\nif (leftFoot transform) {\nassert equal(leftFoot getPropVal('transform', true), 'rotate(80deg)');\n} else {\nassert equal(leftFoot getPropVal('rotate', true), '80deg');\n}\n```\nYou should give foot right a transform of rotate(-80deg) ```js\nconst rightFoot = new __helpers CSSHelp(document) getStyle(' foot right');\nif (rightFoot transform) {\nassert equal(rightFoot getPropVal('transform', true), 'rotate(-80deg)');\n} else {\nassert equal(rightFoot getPropVal('rotate', true), '-80deg');\n}\n```\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5230,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d5735e0170505749203674e4bec9a0e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "```css :root { --penguin-face: white; --penguin-picorna: orange; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5230,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "83671121589fd9decece7a25599fdd00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; }eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5230,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "fc955c05a8a82e4c82fd7325055c16e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\n}\n--fcc-editable-region-- foot left {\nleft: 25%;\n} foot right {\nright: 25%;\n}\n--fcc-editable-region-- ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5230,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d229b0e542520cd91c685.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "3338aaa8673f29a121327eee6e70cc97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d23089e787e216a7043d6\ntitle: Step 85\nchallengeType: 0\ndashedName: step-85\n--description--\nChange the stacking order of the foot elements such that they appear beneath the penguin-body element --hints--\nYou should give foot a z-index of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' foot') zIndex, '-1');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "0bb4a7db267762b8d5891b5d13d73e79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; }face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "89a9b2b02b1eb105ea467f2a6f3c6cfa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; }shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\n}\n--fcc-editable-region-- foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "846a67a23b9068d851032c120783e910",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } --fcc-editable-region-- foot { width: 15%; height: 30%; background-color: var(--penguin-picorna); top: 85%; border-radius: 50%; } --fcc-editable-region-- foot left { left: 25%; transform: rotate(80deg); } foot right { right: 25%; transform: rotate(-80deg); }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d23089e787e216a7043d6.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "a67a858ae204d651e9d3d7472d3ba1a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d237a107c10221ed743fa\ntitle: Step 86\nchallengeType: 0\ndashedName: step-86\n--description--\nFun fact: Penguins cannot fly without wings Within penguin-body, before the foot elements, add two div elements each with a class of arm Give the first arm a class of left, and the second arm a class of right --hints--\nYou should add two div elements within penguin-body Expected --fcc-expected-- div elements, but found --fcc-actual-- js\nassert lengthOf(document querySelectorAll(' penguin-body > div'), 4);\nYou should give the first new div a class of arm js\nassert exists(document querySelector(' penguin-body > div arm'));\nYou should give the second new div a class of arm js\nassert lengthOf(document querySelectorAll(' penguin-body > div arm'), 2);\nYou should give one div a class of left js\nassert exists(document querySelector(' penguin-body > div arm left'));\nYou should give the other div a class of right js\nassert exists(document querySelector(' penguin-body > div arm right'));\nYou should place arm right after arm left js\nassert exists(document querySelector(' arm left + arm right'));\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5657,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "466c7cba432ae7dc8bb5739ffd54582e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "arm right after arm left js assert exists(document querySelector(' arm left + arm right')); --seed-- --seed-contents-- ```html Penguin 💜 I CSS --fcc-editable-region-- --fcc-editable-region-- ``` ```css :root { --penguin-face: white; --penguin-picorna: orange; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5657,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1139ab87d0a83d03924675a6eb7df27d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5657,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2c1729375c4b0d03dc368d95ba1a7ef8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5657,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d237a107c10221ed743fa.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6571676d6216f8e460860c2e162ee667",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d26b12e651022d80cd017\ntitle: Step 87\nchallengeType: 0\ndashedName: step-87\n--description--\nTarget the arm elements, and give them a width of 30%, a height of 60%, and a background of linear gradient at 90deg from clockwise, starting at gray, and ending at rgb(209, 210, 199) --hints--\nYou should use the arm selector js\nassert match(code, /\\ arm\\s*\\{/);\nYou should give arm a width of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') width, '30%');\nYou should give arm a height of --fcc-expected--, found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') height, '60%');\nYou should give arm a background of linear-gradient(90deg, gray, rgb(209, 210, 199)) js\nassert include(['linear-gradient(90deg,gray,rgb(209,210,199))', 'rgba(0,0,0,0)linear-gradient(90deg,gray,rgb(209,210,199))repeatscroll0%0%'], new __helpers CSSHelp(document) getStyle(' arm') getPropVal('background', true));\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "a22ed6cc16165e54b7acba8abc1a1f2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "linear-gradient(90deg, gray, rgb(209, 210, 199)) js assert include(['linear-gradient(90deg,gray,rgb(209,210,199))', 'rgba(0,0,0,0)linear-gradient(90deg,gray,rgb(209,210,199))repeatscroll0%0%'], new __helpers CSSHelp(document) getStyle(' arm') getPropVal('background', true)); --seed-- --seed-contents-- ```html Penguin 💜 I CSS ``` ```css :root { --penguin-face: white; --penguin-picorna: orange; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "9f84758fca575936f6361c50927b0d1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, gray, rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; }face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "7b828425c90de24873bfc609352311f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; }shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}\n--fcc-editable-region--\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "e269515501e32c9b6ecc6e6ff7be4a23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } --fcc-editable-region-- --fcc-editable-region-- foot { width: 15%; height: 30%; background-color: var(--penguin-picorna); top: 85%; border-radius: 50%; z-index: -1; } foot left { left: 25%; transform: rotate(80deg); } foot right { right: 25%; transform: rotate(-80deg); }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d26b12e651022d80cd017.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "596b25f81e6a600e1e3ad22dcbcb3238",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d2712853306238f41828e\ntitle: Step 88\nchallengeType: 0\ndashedName: step-88\n--description--\nCreate a custom CSS variable named --penguin-skin, and set it to gray Then, replace all relevant property values with it --hints--\nYou should give :root a --penguin-skin property js\nassert exists(new __helpers CSSHelp(document) getStyle(':root') getPropertyValue('--penguin-skin'));\nYou should give --penguin-skin a value of gray, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(':root') getPropVal('--penguin-skin', true), 'gray');\nYou should give penguin-head a background of linear-gradient(45deg, var(--penguin-skin), rgb(239, 240, 228)) js\nassert equal(new __helpers CSSHelp(document) getStyle(' penguin-head') getPropVal('background', true), 'linear-gradient(45deg,var(--penguin-skin),rgb(239,240,228))');\nYou should give penguin-body::before a background-color of var(--penguin-skin), but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' penguin-body::before') getPropVal('background-color', true), 'var(--penguin-skin)');\nYou should give arm a background of linear-gradient(90deg, var(--penguin-skin), rgb(209, 210, 199)) js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') getPropVal('background', true), 'linear-gradient(90deg,var(--penguin-skin),rgb(209,210,199))');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n--fcc-editable-region--\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c0ac937f741163436f4b16cbd4bc42e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color of var(--penguin-skin), but found --fcc-actual-- js assert equal(new __helpers CSSHelp(document) getStyle(' penguin-body::before') getPropVal('background-color', true), 'var(--penguin-skin)'); You should give arm a background of linear-gradient(90deg, var(--penguin-skin), rgb(209, 210, 199)) js assert equal(new __helpers CSSHelp(document) getStyle(' arm') getPropVal('background', true), 'linear-gradient(90deg,var(--penguin-skin),rgb(209,210,199))'); --seed-- --seed-contents-- ```html Penguin 💜 I CSS ``` ```css --fcc-editable-region-- :root { --penguin-face: white; --penguin-picorna: orange; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; }left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "b3208caba38ea38cce56a47dd93e2f4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\ngray,\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "ec4c896d1da2f90ba8c69a766a5f17b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; }blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: gray;\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\ngray,\nrgb(209, 210, 199)\n);\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "eeb82bb95e3f20ae93df762422f977d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: gray; top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } arm { width: 30%; height: 60%; background: linear-gradient( 90deg, gray, rgb(209, 210, 199) ); } --fcc-editable-region--foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2712853306238f41828e.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "80b6f295a72862f33b4ca29025f37888",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d2bd9c1d43c2526e96f1f\ntitle: Step 90\nchallengeType: 0\ndashedName: step-90\n--description--\nWithin the arm left selector, alter the origin of the transform function to be the top left corner of its parent --hints--\nYou should use the transform-origin property to do this js\nassert notEmpty(new __helpers CSSHelp(document) getStyle(' arm left') transformOrigin);\nYou should give arm left a transform-origin of 0% 0% or top left js\nassert include(['0% 0%', 'left top', '0% 0% 0px', 'left top 0px'], new __helpers CSSHelp(document) getStyle(' arm left') transformOrigin);\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "2c7a28669c83601509be64e6d1e88dd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "08a2cf0188f905f6692439e233c748f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blushleft {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "6d7eb1ef10b9545a576ca3006f46abb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\n}\n--fcc-editable-region-- arm left {\ntop: 35%;\nleft: 5%;\n} arm right {\ntop: 0%;\nright: -5%;\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2bd9c1d43c2526e96f1f.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6a259063c53010bf095824670cc51f0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d2d4e80400325ff89664a\ntitle: Step 91\nchallengeType: 0\ndashedName: step-91\n--description--\nTo keep the linear gradient on the correct side of the penguin's left arm, first rotate it by 130deg, then invert the x-axis --hints--\nYou should give arm left a transform of rotate(130deg) scaleX(-1) ```js\nconst leftArm = new __helpers CSSHelp(document) getStyle(' arm left');\nif (leftArm rotate && leftArm transform) {\nassert equal(leftArm getPropVal('rotate', true), '130deg');\nassert equal(leftArm getPropVal('transform', true), 'scaleX(-1)');\n} else {\nassert equal(leftArm getPropVal('transform', true), 'rotate(130deg)scaleX(-1)');\n}\n```\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8cec7a8d264cd4ccddbe44f0f83a1975",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f7b0d67a15929dc0a66ca4fdab014668",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "dbcb81855d4ef75aab2535220cca1146",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\n}\n--fcc-editable-region-- arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\n}\n--fcc-editable-region-- arm right {\ntop: 0%;\nright: -5%;\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2d4e80400325ff89664a.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "67dd3529cdd6d14c1ff1c345b07c1a66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d2b7a84e78b246f2d17a2\ntitle: Step 89\nchallengeType: 0\ndashedName: step-89\n--description--\nTarget the arm element with a class of left, and position it 35% from the top, and 5% from the left of its parent Then, target the arm element with a class of right, and position it 0% from the top, and -5% from the right of its parent --hints--\nYou should use the arm left selector js\nassert match(code, /\\ arm\\ left\\s*\\{/);\nYou should give arm left a top of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm left') top, '35%');\nYou should give arm left a left of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm left') left, '5%');\nYou should use the arm right selector js\nassert match(code, /\\ arm\\ right\\s*\\{/);\nYou should give arm right a top of 0% js\nassert include(['0%', '0', '0px'], new __helpers CSSHelp(document) getStyle(' arm right') top);\nYou should give arm right a right of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm right') right, '-5%');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "21a890ae3f366d290e53c6b22db9752b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "--fcc-expected--, but found --fcc-actual-- js assert equal(new __helpers CSSHelp(document) getStyle(' arm right') right, '-5%'); --seed-- --seed-contents-- ```html Penguin 💜 I CSS ``` ```css :root { --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; }back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "03dab70b8f5634273e2ac67ffe8f3125",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "} penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "cd531147d63e584f9c1ce8780e860064",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\n}\n--fcc-editable-region--\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2b7a84e78b246f2d17a2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "3816117ecc09bb057d8e7c539c63632d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d2ebc81ba81271460850d\ntitle: Step 92\nchallengeType: 0\ndashedName: step-92\n--description--\nRotate the right arm by 45deg counterclockwise --hints--\nYou should give arm right a transform of rotate(-45deg) ```js\nconst rightArm = new __helpers CSSHelp(document) getStyle(' arm right');\nif (rightArm transform) {\nassert equal(rightArm getPropVal('transform', true), 'rotate(-45deg)');\n} else {\nassert equal(rightArm getPropVal('rotate', true), '-45deg');\n}\n```\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "106e94f586dfee45949f23173260b12e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "7d97b4bdd175640c7affba0da8c8cd5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blushleft {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "961b472fff10644c027e13f186a146c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n}\n--fcc-editable-region-- arm right {\ntop: 0%;\nright: -5%;\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2ebc81ba81271460850d.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d4e554a2b9feb8832457b578fe0ea250",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d2f0e9440bc27caee1cec\ntitle: Step 93\nchallengeType: 0\ndashedName: step-93\n--description--\nFun fact: Most, if not all, flippers are not naturally rectangles Give the arm elements' top-left, top-right, and bottom-right corners a radius of 30%, and the bottom-left corner a radius of 120% --hints--\nYou should give arm a border-radius of 30% 30% 30% 120% js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') borderTopLeftRadius, '30%');\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') borderTopRightRadius, '30%');\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') borderBottomRightRadius, '30%');\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') borderBottomLeftRadius, '120%');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "f4ce4dc2cc7507081fa7272ec81c066d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; }penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3907b9c4fdeab215eb855b6c5df41593",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; }eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "88d7ca96f5c92ae78613eca8f15dbb1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; }penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}\n--fcc-editable-region-- arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\n}\n--fcc-editable-region-- arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2f0e9440bc27caee1cec.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "e22f92481706b3cdefdbad8540d004b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d2fd3ff4f772882e3d998\ntitle: Step 94\nchallengeType: 0\ndashedName: step-94\n--description--\nChange the arm elements' stacking order such that they appear behind the penguin-body element --hints--\nYou should give arm a z-index of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm') zIndex, '-1');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d66b1f7f9b5458e83cc0d49121f090a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f2b7662122fe3172d1e6be4866162e8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blushleft {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "0de0837070d960bb268282fb47dc4123",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } --fcc-editable-region--arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\n}\n--fcc-editable-region-- arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5294,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d2fd3ff4f772882e3d998.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b7e71b88dd0892f4afad5aced7c76af0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d324f5915c929f36ae91d\ntitle: Step 96\nchallengeType: 0\ndashedName: step-96\n--description--\nGive wave four waypoints starting at 10%, and incrementing by 10% --hints--\nYou should add a 10% waypoint for @keyframes wave js\nassert isTrue([ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] some(css => css keyText === '10%'));\nYou should add a 20% waypoint for @keyframes wave js\nassert isTrue([ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] some(css => css keyText === '20%'));\nYou should add a 30% waypoint for @keyframes wave js\nassert isTrue([ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] some(css => css keyText === '30%'));\nYou should add a 40% waypoint for @keyframes wave js\nassert isTrue([ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] some(css => css keyText === '40%'));\nYou should have 4 waypoints in your keyframe js\nassert lengthOf([ ([ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules || [])], 4);\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "b397307f16b23e8f2c5a792ea4e6c5bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "rule name === 'wave') cssRules] some(css => css keyText === '40%')); You should have 4 waypoints in your keyframe js assert lengthOf([ ([ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules || [])], 4); --seed-- --seed-contents-- ```html Penguin 💜 I CSS ``` ```css :root { --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; }left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2b0247f0e32f1a2b4222a0b1a6363b3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; }face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "cb2491cfee0aa714a216f7d65ad51c8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beakbottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n} arm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "b51aa2fc843845f695e239dc4be42924",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } arm { width: 30%; height: 60%; background: linear-gradient( 90deg, var(--penguin-skin), rgb(209, 210, 199) ); border-radius: 30% 30% 30% 120%; z-index: -1; } arm left { top: 35%; left: 5%; transform-origin: top left; transform: rotate(130deg) scaleX(-1); } armright {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n--fcc-editable-region--\n@keyframes wave {\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d324f5915c929f36ae91d.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "ab963e04fad3d1a23e018c148847dd57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d30350883802921bfcccc\ntitle: Step 95\nchallengeType: 0\ndashedName: step-95\n--description--\nNow, you are going to use CSS animations to make the penguin wave Define a new @keyframes named wave --hints--\nYou should define a new @keyframes rule js\nassert notEmpty(new __helpers CSSHelp(document) getCSSRules('keyframes'));\nYou should give the @keyframes rule a name of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] name, 'wave');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "128e7bb46e5108f9c48f3642f1a6d1e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; }penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "5ee41b74b5cfa4f3c4d672068d59e13d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blushleft {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "e8209510971c34fb4baa5353983e74a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n--fcc-editable-region--\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d30350883802921bfcccc.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "0eadd4259a3396aaf603f8be4326395e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d32c7fa21f32aaa91d499\ntitle: Step 97\nchallengeType: 0\ndashedName: step-97\n--description--\nWithin the first waypoint, rotate to 110deg, and retain the scaling of the left arm --hints--\nYou should give the 10% waypoint a transform of rotate(110deg) scaleX(-1) ```js\nconst wave10Percent = [ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] find(css => css keyText === '10%');\nconst rotateProp = wave10Percent style rotate replace(/\\s+/g, '');\nconst transformProp = wave10Percent style transform replace(/\\s+/g, '');\nif (rotateProp && transformProp) {\nassert equal(rotateProp, '110deg');\nassert equal(transformProp, 'scaleX(-1)');\n} else {\nassert equal(transformProp, 'rotate(110deg)scaleX(-1)');\n}\n```\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5791,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "b76dc25755efc9968e66bfa00cf73039",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5791,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "588cc6d2c9d1bcb43faae2ab72060d85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; }eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5791,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "2bc10bbf1809ac2500ec0db65d20cb4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n--fcc-editable-region--\n@keyframes wave {\n10% {\n}\n20% {\n}\n30% {\n}\n40% {\n}\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5791,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "f345783f012b7ac398a85b0ce6c13d2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "height: 60%; background: linear-gradient( 90deg, var(--penguin-skin), rgb(209, 210, 199) ); border-radius: 30% 30% 30% 120%; z-index: -1; } arm left { top: 35%; left: 5%; transform-origin: top left; transform: rotate(130deg) scaleX(-1); } arm right { top: 0%; right: -5%; transform: rotate(-45deg); } --fcc-editable-region-- @keyframes wave { 10% { } 20% { } 30% { } 40% { } } --fcc-editable-region-- foot { width: 15%; height: 30%; background-color: var(--penguin-picorna); top: 85%; border-radius: 50%; z-index: -1; } footleft {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5791,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d32c7fa21f32aaa91d499.md",
      "source_type": "git_repo"
    },
    "token_count": 277,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "00818046063f83908a519d3d0c9271f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d333b738e3c2b5d58b095\ntitle: Step 98\nchallengeType: 0\ndashedName: step-98\n--description--\nWithin the second waypoint, rotate to 130deg, and retain the scaling of the left arm --hints--\nYou should give the 20% waypoint a transform of rotate(130deg) scaleX(-1) ```js\nconst wave20Percent = [ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] find(css => css keyText === '20%');\nconst transformProp = wave20Percent style transform replace(/\\s+/g, '');\nconst rotateProp = wave20Percent style rotate replace(/\\s+/g, '');\nif (rotateProp && transformProp) {\nassert equal(rotateProp, '130deg');\nassert equal(transformProp, 'scaleX(-1)');\n} else {\nassert equal(transformProp, 'rotate(130deg)scaleX(-1)');\n}\n```\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "def35974e410ac78bedb6c46034df3f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "9223504579d5309df416bc55fcdfddef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; }eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c6abe4a771592bbd920d7ed196352bf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n--fcc-editable-region--\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\n}\n30% {\n}\n40% {\n}\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "807a3d17474aa263fc63c5b30cecc38e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } arm { width: 30%; height: 60%; background: linear-gradient( 90deg, var(--penguin-skin), rgb(209, 210, 199) ); border-radius: 30% 30% 30% 120%; z-index: -1; } arm left { top: 35%; left: 5%; transform-origin: top left; transform: rotate(130deg) scaleX(-1); } arm right { top: 0%; right: -5%; transform: rotate(-45deg); } --fcc-editable-region-- @keyframes wave { 10% { transform: rotate(110deg) scaleX(-1); } 20% { } 30% { } 40% { } } --fcc-editable-region--foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d333b738e3c2b5d58b095.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "ebd8e506f5af6688b553025ef9225296",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d337765b9f02c10e93722\ntitle: Step 99\nchallengeType: 0\ndashedName: step-99\n--description--\nFor the third and fourth waypoints, repeat the transform pattern once more --hints--\nYou should give the 30% waypoint a transform of rotate(110deg) scaleX(-1) ```js\nconst wave30Percent = [ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] find(css => css keyText === '30%');\nconst transformProp = wave30Percent style transform replace(/\\s+/g, '');\nconst rotateProp = wave30Percent style rotate replace(/\\s+/g, '');\nif (rotateProp && transformProp) {\nassert equal(rotateProp, '110deg');\nassert equal(transformProp, 'scaleX(-1)');\n} else {\nassert equal(transformProp, 'rotate(110deg)scaleX(-1)');\n}\n```\nYou should give the 40% waypoint a transform of rotate(130deg) scaleX(-1) ```js\nconst wave40Percent = [ [ new __helpers CSSHelp(document) getCSSRules('keyframes')] find(rule => rule name === 'wave') cssRules] find(css => css keyText === '40%');\nconst transformProp = wave40Percent style transform replace(/\\s+/g, '');\nconst rotateProp = wave40Percent style rotate replace(/\\s+/g, '');\nif (rotateProp && transformProp) {\nassert equal(rotateProp, '130deg');\nassert equal(transformProp, 'scaleX(-1)');\n} else {\nassert equal(transformProp, 'rotate(130deg)scaleX(-1)');\n}\n```\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "74b19d5ff6181a9e99c94b305fabb22e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "=== '40%'); const transformProp = wave40Percent style transform replace(/\\s+/g, ''); const rotateProp = wave40Percent style rotate replace(/\\s+/g, ''); if (rotateProp && transformProp) { assert equal(rotateProp, '130deg'); assert equal(transformProp, 'scaleX(-1)'); } else { assert equal(transformProp, 'rotate(130deg)scaleX(-1)'); } ``` --seed-- --seed-contents-- ```html Penguin 💜 I CSS ``` ```css :root { --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; }left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "5612486798b302d96bec194b2613b039",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; }face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "43c9f4da7d9d6ae6556a8b09e3238e7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beakbottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n} arm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "cd4fade6f5db957ed67ee063c4c5ed94",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } arm { width: 30%; height: 60%; background: linear-gradient( 90deg, var(--penguin-skin), rgb(209, 210, 199) ); border-radius: 30% 30% 30% 120%; z-index: -1; } arm left { top: 35%; left: 5%; transform-origin: top left; transform: rotate(130deg) scaleX(-1); } armright {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n--fcc-editable-region--\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\ntransform: rotate(130deg) scaleX(-1);\n}\n30% {\n}\n40% {\n}\n}\n--fcc-editable-region-- foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d337765b9f02c10e93722.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "8a16db71139665ef49857f65bcd301f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d33c51140292cc5a21742\ntitle: Step 100\nchallengeType: 0\ndashedName: step-100\n--description--\nUse the wave animation on the left arm Have the animation last 3s, infinitely iterate, and have a linear timing function --hints--\nYou should give arm left an animation-name of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm left') animationName, 'wave');\nYou should give arm left an animation-duration of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm left') animationDuration, '3s');\nYou should give arm left an animation-iteration-count of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm left') animationIterationCount, 'infinite');\nYou should give arm left an animation-timing-function of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' arm left') animationTimingFunction, 'linear');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "babeb46af4fec00f6d6a4e5b1005561c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "96a1b8d3ceef62154be05b6c9c5fa875",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ position: absolute; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; }eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "28f55adb5cd3faff3ea8fde469e0b9db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n}\n--fcc-editable-region-- arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\n}\n--fcc-editable-region-- arm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "df5ecd3dba95a63c24350f262543ac11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; } arm { width: 30%; height: 60%; background: linear-gradient( 90deg, var(--penguin-skin), rgb(209, 210, 199) ); border-radius: 30% 30% 30% 120%; z-index: -1; } --fcc-editable-region-- arm left { top: 35%; left: 5%; transform-origin: top left; transform: rotate(130deg) scaleX(-1); } --fcc-editable-region-- armright {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\ntransform: rotate(130deg) scaleX(-1);\n}\n30% {\ntransform: rotate(110deg) scaleX(-1);\n}\n40% {\ntransform: rotate(130deg) scaleX(-1);\n}\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d33c51140292cc5a21742.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a31df58934b6d3edd35d5babe870d32c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d3482f505452d861d0f62\ntitle: Step 101\nchallengeType: 0\ndashedName: step-101\n--description--\nTarget the penguin element when it is active, and increase its size by 50% in both dimensions --hints--\nYou should use the penguin:active selector js\nassert match(code, /\\ penguin:active\\s*\\{/);\nYou should give penguin:active a transform of scale(1 5) js\nassert equal(new __helpers CSSHelp(document) getStyle(' penguin:active') getPropVal('transform', true), 'scale(1 5)');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}\n--fcc-editable-region--\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "52a4013d8b1d6b67366fe2065dd85c2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } --fcc-editable-region-- --fcc-editable-region--penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "9fc38c972c8fc82aa0a5bf2413229c4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; }blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "00e183e13cbc92d149627148984fe136",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\nanimation: 3s linear infinite wave;\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\ntransform: rotate(130deg) scaleX(-1);\n}\n30% {\ntransform: rotate(110deg) scaleX(-1);\n}\n40% {\ntransform: rotate(130deg) scaleX(-1);\n}\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "39248adbb6c4d26a31dd4b6b422fdf1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "scaleX(-1); animation: 3s linear infinite wave; } arm right { top: 0%; right: -5%; transform: rotate(-45deg); } @keyframes wave { 10% { transform: rotate(110deg) scaleX(-1); } 20% { transform: rotate(130deg) scaleX(-1); } 30% { transform: rotate(110deg) scaleX(-1); } 40% { transform: rotate(130deg) scaleX(-1); } } foot { width: 15%; height: 30%; background-color: var(--penguin-picorna); top: 85%; border-radius: 50%; z-index: -1; } foot left { left: 25%; transform: rotate(80deg); } foot right { right: 25%; transform: rotate(-80deg); }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3482f505452d861d0f62.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6c2bc66a0534addc713c32fec766172d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\61a8fe15a6a31306e60d1e89.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 61a8fe15a6a31306e60d1e89\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nNormalize your page, by setting the width to 100%, and height to 100vh.\n--hints--\nYou should give body a width of --fcc-expected--, but found --fcc-actual--.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.width, '100%');\nYou should give body a height of --fcc-expected--, but found --fcc-actual--.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.height, '100vh');\n--seed--\n--seed-contents--\n```html\nPenguin\n```\n```css\n--fcc-editable-region--\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\61a8fe15a6a31306e60d1e89.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ffe61f10f98777f1b04211455e16613e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d3561a951bf2e41a24f10\ntitle: Step 102\nchallengeType: 0\ndashedName: step-102\n--description--\nWhen you activate the penguin element, it might look as though you can drag it around This is not true Indicate this to users, by giving the active element a cursor property of not-allowed --hints--\nYou should give penguin:active a cursor property of not-allowed js\nassert equal(new __helpers CSSHelp(document) getStyle(' penguin:active') cursor, 'not-allowed');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n} penguin * {\nposition: absolute;\n}\n--fcc-editable-region-- penguin:active {\ntransform: scale(1 5);\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5737,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "e846878281e875bf7727b82ecd261e69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; } penguin * { position: absolute; } --fcc-editable-region-- penguin:active { transform: scale(1 5); } --fcc-editable-region--penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5737,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "ed5611ea77dc8c42bb7a4533da3db313",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; } blushleft {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5737,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "54ec7aa350de5adc86bfc1d9faa0e72f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\nanimation: 3s linear infinite wave;\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\ntransform: rotate(130deg) scaleX(-1);\n}\n30% {\ntransform: rotate(110deg) scaleX(-1);\n}\n40% {\ntransform: rotate(130deg) scaleX(-1);\n}\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5737,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "481b72a1fa530bb8de6d9133bb004433",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "scaleX(-1); animation: 3s linear infinite wave; } arm right { top: 0%; right: -5%; transform: rotate(-45deg); } @keyframes wave { 10% { transform: rotate(110deg) scaleX(-1); } 20% { transform: rotate(130deg) scaleX(-1); } 30% { transform: rotate(110deg) scaleX(-1); } 40% { transform: rotate(130deg) scaleX(-1); } } foot { width: 15%; height: 30%; background-color: var(--penguin-picorna); top: 85%; border-radius: 50%; z-index: -1; } foot left { left: 25%; transform: rotate(80deg); } foot right { right: 25%; transform: rotate(-80deg); }ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5737,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3561a951bf2e41a24f10.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "e91161278e018e83c3ecbcd85b22a7ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537c5f81f0cf325b4a854c.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 61537c5f81f0cf325b4a854c\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nAdd a header element within the body element and assign a class of header to it.\nInside the header, create an h1 with css flexbox photo gallery as the text.\n--hints--\nYou should have a header element within your body element.\njs\nassert.exists(document.querySelector('body')?.querySelector('header'));\nYour header element should have a class with header as the value.\njs\nassert.isTrue(document?.querySelector('body')?.querySelector('header')?.classList?.contains('header'));\nYour header element should have an h1 element inside it.\njs\nassert.exists(document.querySelector('.header')?.querySelector('h1'));\nYour h1 element should have the text css flexbox photo gallery inside it.\njs\nassert.equal(document?.querySelector('.header')?.querySelector('h1')?.innerText, 'css flexbox photo gallery');\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nPhoto Gallery\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1340,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537c5f81f0cf325b4a854c.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d138925e024c33fd7eb674e69bd7c66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537bb9b1a29430ac15ad38.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 61537bb9b1a29430ac15ad38\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nStart this project by linking your styles.css file to the page.\n--hints--\nYour link element should have an href attribute with the value styles.css.\njs\nassert.match(code, /<link[\\s\\S]*?href=('|\"|`)(\\.\\/)?styles\\.css\\1/)\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nPhoto Gallery\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537bb9b1a29430ac15ad38.md",
      "source_type": "git_repo"
    },
    "token_count": 136,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "315ae60b6c480cd33f1d905e7c6d7726",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537c9eecea6a335db6da79.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 61537c9eecea6a335db6da79\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nBelow your .header element, create a new div element and assign it a class of gallery. This div will act as a container for the gallery images.\nInside that .gallery element, create nine img elements.\n--hints--\nYou should create a div element in your body element.\njs\nassert.isAtLeast(document.querySelector('body')?.querySelectorAll('div')?.length, 1);\nYour new div element should have a class with gallery set as the value.\njs\nassert.exists(document.querySelector('body')?.querySelector('.gallery'));\nYour new div element should come after your .header element.\njs\nassert.exists(document.querySelector('header')?.nextElementSibling?.classList?.contains('gallery'));\nYour .gallery element should have nine img elements.\njs\nassert.lengthOf(document.querySelector('.gallery')?.querySelectorAll('img'), 9);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nPhoto Gallery\ncss flexbox photo gallery\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1436,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537c9eecea6a335db6da79.md",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4bad12f39c74311e031e8eb12d6cf88f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\615380dff67172357fcf0425.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 615380dff67172357fcf0425\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nNow your images are too big.\nCreate a .gallery img selector to target them. Give them all a width of 100% and a max-width of 350px.\nAlso set the height property to 300px to keep your images a uniform size.\n--hints--\nYou should have a .gallery img selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('.gallery img'));\nYour .gallery img selector should have a width property set to 100% as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery img')?.width, '100%');\nYour .gallery img selector should have a max-width property set to 350px as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery img')?.maxWidth, '350px');\nYour .gallery img selector should have a height property set to 300px as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery img')?.height, '300px');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\615380dff67172357fcf0425.md",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1a6ede7c7ef12f7f2c6ad2fead6a8601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153893900438b4643590367.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153893900438b4643590367\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nAlign your header text in the center Make the text uppercase using the text-transform property with uppercase as the value Give it a padding of 32px on all sides Set the background to #0a0a23 and the text to #fff as the color values Add a border-bottom with 4px solid #fdb347 as the value --hints--\nYou should have a header selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' header'));\nYour header selector should have a text-align property set to center as the value js\nassert equal(new __helpers CSSHelp(document) getStyle(' header') textAlign, 'center');\nYour header selector should have a text-transform property set to uppercase as the value js\nassert equal(new __helpers CSSHelp(document) getStyle(' header') textTransform, 'uppercase');\nYour header selector should have a padding property set to 32px as the value js\nassert equal(new __helpers CSSHelp(document) getStyle(' header') padding, '32px');\nYour header selector should have a background-color property set to #0a0a23 as the value js\nassert equal(new __helpers CSSHelp(document) getStyle(' header') backgroundColor, 'rgb(10, 10, 35)');\nYour header selector should have a color property set to #fff as the value js\nassert equal(new __helpers CSSHelp(document) getStyle(' header') color, 'rgb(255, 255, 255)');\nYour header selector should have a border-bottom property set to 4px solid #fdb347 as the value js\nassert equal(new __helpers CSSHelp(document) getStyle(' header') borderBottom, '4px solid rgb(253, 179, 71)');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody  {\nmargin: 0;\nfont-family: sans-serif;\nbackground-color: #f5f6f7;\n}\n--fcc-editable-region--\n--fcc-editable-region-- gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153893900438b4643590367.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "36cf56b6d03e0ec9465c1f6dd5c724c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537d86bdc3dd343688fceb.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 61537d86bdc3dd343688fceb\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nNext, give each img a src attribute according to its order in the document The first img should have a src of https://cdn freecodecamp org/curriculum/css-photo-gallery/1 jpg The rest should be the same, except replace the 1 with the number the img is in the document --hints--\nAll nine of your img elements should have a src attribute js\nconst images = [ document querySelectorAll('img')];\nassert isTrue(images every(image => image getAttribute('src')));\nYour first img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/1 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [0] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/1 jpg');\nYour second img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/2 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [1] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/2 jpg');\nYour third img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/3 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [2] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/3 jpg');\nYour fourth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/4 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [3] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/4 jpg');\nYour fifth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/5 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [4] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/5 jpg');\nYour sixth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/6 jpg set as the src attribute value js\nassert equal(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537d86bdc3dd343688fceb.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cab5a347e8f1317c48005e436e9fedbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537d86bdc3dd343688fceb.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/3 jpg'); Your fourth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/4 jpg set as the src attribute value js assert equal(document querySelectorAll('img') [3] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/4 jpg'); Your fifth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/5 jpg set as the src attribute value js assert equal(document querySelectorAll('img') [4] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/5 jpg'); Your sixth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/6 jpg set as the src attribute value js assert equal(documentquerySelectorAll('img') [5] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/6 jpg');\nYour seventh img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/7 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [6] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/7 jpg');\nYour eighth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/8 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [7] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/8 jpg');\nYour ninth img element should have https://cdn freecodecamp org/curriculum/css-photo-gallery/9 jpg set as the src attribute value js\nassert equal(document querySelectorAll('img') [8] getAttribute('src'), 'https://cdn freecodecamp org/curriculum/css-photo-gallery/9 jpg');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3811,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61537d86bdc3dd343688fceb.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "eecebc1815d34684c7eb593acd265f6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d36103839c82efa95dd34\ntitle: Step 103\nchallengeType: 0\ndashedName: step-103\n--description--\nChange the penguin element's transition behavior during transformation to have a duration of 1s, a timing function of ease-in-out, and a delay of 0ms --hints--\nYou should give penguin a transition-duration of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' penguin') transitionDuration, '1s');\nYou should give penguin a transition-timing-function of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' penguin') transitionTimingFunction, 'ease-in-out');\nYou should give penguin a transition-delay of --fcc-expected--, but found --fcc-actual-- js\nassert equal(new __helpers CSSHelp(document) getStyle(' penguin') transitionDelay, '0ms');\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6181,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ee5f282514be58079568f9ca3913ef64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n}\n--fcc-editable-region-- penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\n}\n--fcc-editable-region-- penguin * {\nposition: absolute;\n} penguin:active {\ntransform: scale(1 5);\ncursor: not-allowed;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6181,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "62e695ed8ef6fb50ae746d6f5aa992d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "margin-top: 75px; z-index: 4; position: relative; } --fcc-editable-region-- penguin * { position: absolute; } penguin:active { transform: scale(1 5); cursor: not-allowed; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6181,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "de37916221dfdd115b227348587d3e6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\nanimation: 3s linear infinite wave;\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\ntransform: rotate(130deg) scaleX(-1);\n}\n30% {\ntransform: rotate(110deg) scaleX(-1);\n}\n40% {\ntransform: rotate(130deg) scaleX(-1);\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6181,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c37d1e58d7a5fb23e4c8e1a34a4c1c36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "30%; height: 60%; background: linear-gradient( 90deg, var(--penguin-skin), rgb(209, 210, 199) ); border-radius: 30% 30% 30% 120%; z-index: -1; } arm left { top: 35%; left: 5%; transform-origin: top left; transform: rotate(130deg) scaleX(-1); animation: 3s linear infinite wave; } arm right { top: 0%; right: -5%; transform: rotate(-45deg); } @keyframes wave { 10% { transform: rotate(110deg) scaleX(-1); } 20% { transform: rotate(130deg) scaleX(-1); } 30% { transform: rotate(110deg) scaleX(-1); } 40% { transform: rotate(130deg) scaleX(-1); } }foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6181,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d36103839c82efa95dd34.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "e342959280187a2e8a70a506d64d2419",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153897c27f6334716ee5abe.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153897c27f6334716ee5abe\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nFlexbox is a one-dimensional CSS layout that can control the way items are spaced out and aligned within a container.\nTo use it, give an element a display property of flex. This will make the element a flex container. Any direct children of a flex container are called flex items.\nCreate a .gallery selector and make it a flex container.\n--hints--\nYou should have a .gallery selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('.gallery'));\nYour .gallery selector should have a display property set to flex as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.display, 'flex');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2356,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153897c27f6334716ee5abe.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ee40cb87728080f2054cc639184a7e65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\615392916d83fa4f02f7e2cf.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 615392916d83fa4f02f7e2cf\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nThe flex-wrap property determines how your flex items behave when the flex container is too small. Setting it to wrap will allow the items to wrap to the next row or column. nowrap (default) will prevent your items from wrapping and shrink them if needed.\nMake it so your flex items wrap to the next row when they run out of space.\n--hints--\nYour .gallery selector should have a flex-wrap property set to wrap as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.flexWrap, 'wrap');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n--fcc-editable-region--\n.gallery {\ndisplay: flex;\nflex-direction: row;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2266,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\615392916d83fa4f02f7e2cf.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "78f8501fe9ea97f60036458c8ff99b16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153908a366afb4d57185c8d.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153908a366afb4d57185c8d\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nFlexbox has a main and cross axis. The main axis is defined by the flex-direction property, which has four possible values:\nrow (default): horizontal axis with flex items from left to right\nrow-reverse: horizontal axis with flex items from right to left\ncolumn: vertical axis with flex items from top to bottom\ncolumn-reverse: vertical axis with flex items from bottom to top\nNote: The axes and directions will be different depending on the text direction. The values shown are for a left-to-right text direction.\nTry the different values to see how they affect the layout.\nWhen you are done, set an explicit flex-direction of row on the .gallery element.\n--hints--\nYour .gallery selector should have a flex-direction property set to row as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.flexDirection, 'row');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n--fcc-editable-region--\n.gallery {\ndisplay: flex;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153908a366afb4d57185c8d.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "205809947c8a3ee7324c631e630a1ab9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153938dce8b294ff8f5a4e9.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153938dce8b294ff8f5a4e9\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nThe justify-content property determines how the items inside a flex container are positioned along the main axis, affecting their position and the space around them.\nGive your .gallery selector a justify-content property with center as the value.\n--hints--\nYour .gallery selector should have a justify-content property set to center as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.justifyContent, 'center');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n--fcc-editable-region--\n.gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2216,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153938dce8b294ff8f5a4e9.md",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "35beaf2c40c97776688d0b4bcad2f747",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153947986535e5117e60615.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153947986535e5117e60615\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nThe align-items property positions the flex content along the cross axis. In this case, with your flex-direction set to row, your cross axis would be vertical.\nTo vertically center your images, give your .gallery selector an align-items property with center as the value.\n--hints--\nYour .gallery selector should have an align-items property set to center as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.alignItems, 'center');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n--fcc-editable-region--\n.gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2265,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153947986535e5117e60615.md",
      "source_type": "git_repo"
    },
    "token_count": 293,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c1ff64c8cb3c4a8d7ddfcb9eeb550229",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61539e07e7430b528fbffe21.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 61539e07e7430b528fbffe21\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nGive your .gallery selector a padding property set to 20px 10px to create some space around the container.\nThen, give it a max-width of 1400px and add a margin of 0 auto to center it.\n--hints--\nYour .gallery selector should have a padding property set to 20px 10px as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.paddingTop, '20px');\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.paddingBottom, '20px');\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.paddingLeft, '10px');\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.paddingRight, '10px');\nYour .gallery selector should have a max-width property set to 1400px as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.maxWidth, '1400px');\nYour .gallery element should be centered using a margin with 0 auto as the value.\njs\nassert.include(new __helpers.CSSHelp(document).getStyle('.gallery').cssText, 'margin: 0px auto');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n--fcc-editable-region--\n.gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2856,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61539e07e7430b528fbffe21.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "43dec145ed497eab55366e9aed323345",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a04847abee57a3a406ac.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153a04847abee57a3a406ac\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nYour images need some space between them.\nThe gap CSS shorthand property sets the gaps, also known as gutters, between rows and columns. The gap property and its row-gap and column-gap sub-properties provide this functionality for flex, grid, and multi-column layout. You apply the property to the container element.\nGive your .gallery flex container a gap property with 16px as the value.\n--hints--\nYour .gallery selector should have a gap property with 16px set as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery')?.gap, '16px');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n--fcc-editable-region--\n.gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\nmax-width: 1400px;\nmargin: 0 auto;\npadding: 20px 10px;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\nobject-fit: cover;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2473,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a04847abee57a3a406ac.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2518c8dd20521761953ac8e907832157",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61539f32a206bd53ec116465.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 61539f32a206bd53ec116465\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nNotice how some of your images have become distorted. This is because the images have different aspect ratios. Rather than setting each aspect ratio individually, you can use the object-fit property to determine how images should behave.\nGive your .gallery img selector the object-fit property and set it to cover. This will tell the image to fill the img container while maintaining aspect ratio, resulting in cropping to fit.\n--hints--\nYour .gallery img selector should have an object-fit property set to cover as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery img')?.objectFit, 'cover');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n.gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\nmax-width: 1400px;\nmargin: 0 auto;\npadding: 20px 10px;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2507,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\61539f32a206bd53ec116465.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f16482372fcae04578034b85e2346bee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3485f0b20591d26d2a1.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153a3485f0b20591d26d2a1\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nSmooth out your images a bit by giving the .gallery img selector a border-radius property with 10px set as the value.\n--hints--\nYour .gallery img selector should have a border-radius property with 10px set as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery img')?.borderRadius, '10px');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n.gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\ngap: 16px;\nmax-width: 1400px;\nmargin: 0 auto;\npadding: 20px 10px;\n}\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\nobject-fit: cover;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2231,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3485f0b20591d26d2a1.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b93c2a3179761dbd661d04269e3af612",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3952facd25a83fe8083.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153a3952facd25a83fe8083\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nThe ::after pseudo-element creates an element that is the last child of the selected element. You can use it to add an empty element after the last image. If you give it the same width as the images it will push the last image to the left when the gallery is in a two-column layout. Right now, it is in the center because you set justify-content: center on the flex container.\nExample:\nCSS\n.container::after {\ncontent: \"\";\nwidth: 860px;\n}\nCreate a new selector using an ::after pseudo-element on the .gallery element. Add a content property set to an empty string \"\" and 350px set for the width property.\n--hints--\nYour .gallery::after selector should have an empty string \"\" set for the content property.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery::after')?.content, \"\\\"\\\"\");\nYour .gallery::after selector should have 350px set for the width property.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('.gallery::after')?.width,  \"350px\");\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n}\n.header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}\n.gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\ngap: 16px;\nmax-width: 1400px;\nmargin: 0 auto;\npadding: 20px 10px;\n}\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\nobject-fit: cover;\nborder-radius: 10px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2952,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3952facd25a83fe8083.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8e22a6bdd169206f8e584caba511c3d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\615f171d05def3218035dc85.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 615f171d05def3218035dc85\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nRemove the margin from your body element, set the font-family to sans-serif, and give it a background-color of #f5f6f7 as the value.\n--hints--\nYou should have a body selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('body'));\nYour body selector should have a margin property set to 0 as the value.\n```js\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.marginTop, '0px');\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.marginBottom, '0px');\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.marginLeft, '0px');\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.marginRight, '0px');\n```\nYour body selector should have a font-family property set to sans-serif as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.fontFamily, 'sans-serif');\nYour body selector should have a background-color property set to #f5f6f7 as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('body')?.backgroundColor, 'rgb(245, 246, 247)');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n.gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2536,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\615f171d05def3218035dc85.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5593a01ce3dd76c403b8e7be3fdbf1e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6493bc0d99879635209565aa.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6493bc0d99879635209565aa\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nThe border-box sizing model does the opposite of content-box. The total width of the element, including padding and border, will be the explicit width set. The content of the element will shrink to make room for the padding and border.\nChange the box-sizing property to border-box. Notice how your blue image borders now fit within your red gallery border.\n--hints--\nYour * selector should have a box-sizing property set to border-box as the value.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('*')?.boxSizing, 'border-box');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n--fcc-editable-region--\n* {\nbox-sizing: content-box;\n}\n--fcc-editable-region--\n.gallery {\nborder: 5px solid red;\nwidth: 50%;\n}\nimg {\nwidth: 100%;\nborder: 5px solid blue;\npadding: 5px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2054,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6493bc0d99879635209565aa.md",
      "source_type": "git_repo"
    },
    "token_count": 236,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "668e23c7c7d9262c2b23da0b7f290a83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6494da0daf5df5197963671d.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6494da0daf5df5197963671d\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nNotice how the blue image border extends beyond the red gallery border. This is due to the way browsers calculate the size of container elements.\nThe box-sizing property is used to set this behavior. By default, the content-box model is used. With this model, when an element has a specific width, that width is calculated based only on the element's content. Padding and border values get added to the total width, so the element grows to accommodate these values.\nTry setting box-sizing to content-box explicitly, with the global * selector. At this point, you will not see any changes, because you are using the default value.\n--hints--\nYou should have a * selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('*'));\nYour * selector should have a box-sizing property.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('*')?.boxSizing);\nYour * selector should have its box-sizing property set to content-box.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('*')?.boxSizing, 'content-box');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\n.gallery {\nborder: 5px solid red;\nwidth: 50%;\n}\nimg {\nwidth: 100%;\nborder: 5px solid blue;\npadding: 5px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6494da0daf5df5197963671d.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a9df251cd625baab350bc3d75dd55449",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3ebb4f7f05b8401b716.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 6153a3ebb4f7f05b8401b716\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nThe alt image attribute should describe the image content Screen readers announce the alternative text in place of images If the image can't be loaded, this text is presented in place of the image To complete the project, add an alt attribute to all nine of your cat images to describe them Use a value at least five characters long for each --hints--\nAll nine of your img elements should have a alt attribute with text describing each image, with each description using at least 5 letters js\nconst images = [ document querySelectorAll('img')];\nimages forEach((image) => {\nconst alt = image getAttribute('alt');\nassert isAtLeast(alt length, 5);\n});\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n} header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n} gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\ngap: 16px;\nmax-width: 1400px;\nmargin: 0 auto;\npadding: 20px 10px;\n} gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\nobject-fit: cover;\nborder-radius: 10px;\n} gallery::after {\ncontent: \"\";\nwidth: 350px;\n}\n```\n--solutions--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\nfont-family: sans-serif;\nbackground: #f5f6f7;\n} header {\ntext-align: center;\ntext-transform: uppercase;\npadding: 32px;\nbackground-color: #0a0a23;\ncolor: #fff;\nborder-bottom: 4px solid #fdb347;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4582,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3ebb4f7f05b8401b716.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "132c5346157b3668374de0716f34eae5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3ebb4f7f05b8401b716.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "align-items: center; gap: 16px; max-width: 1400px; margin: 0 auto; padding: 20px 10px; } gallery img { width: 100%; max-width: 350px; height: 300px; object-fit: cover; border-radius: 10px; } gallery::after { content: \"\"; width: 350px; } ``` --solutions-- ```html Photo Gallery css flexbox photo gallery ``` ```css * { box-sizing: border-box; } body { margin: 0; font-family: sans-serif; background: #f5f6f7; } header { text-align: center; text-transform: uppercase; padding: 32px; background-color: #0a0a23; color: #fff; border-bottom: 4px solid #fdb347; }gallery {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\ngap: 16px;\nmax-width: 1400px;\nmargin: 0 auto;\npadding: 20px 10px;\n} gallery img {\nwidth: 100%;\nmax-width: 350px;\nheight: 300px;\nobject-fit: cover;\nborder-radius: 10px;\n} gallery::after {\ncontent: \"\";\nwidth: 350px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4582,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\6153a3ebb4f7f05b8401b716.md",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "eb6667e9351f4ac0bb0c1d052fa3bbd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\64dd136e4e8b0894f9c70d86.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 64dd136e4e8b0894f9c70d86\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nNow that you have figured out your box-sizing approach, you can clean up the CSS you added to see the changes.\nRemove your .gallery and img selectors, and all rules within.\n--hints--\nYou should not have a .gallery selector.\njs\nassert.notExists(new __helpers.CSSHelp(document).getStyle('.gallery'));\nYou should not have an img selector.\njs\nassert.notExists(new __helpers.CSSHelp(document).getStyle('img'));\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n* {\nbox-sizing: border-box;\n}\n--fcc-editable-region--\n.gallery {\nborder: 5px solid red;\nwidth: 50%;\n}\nimg {\nwidth: 100%;\nborder: 5px solid blue;\npadding: 5px;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1926,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\64dd136e4e8b0894f9c70d86.md",
      "source_type": "git_repo"
    },
    "token_count": 217,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d4d533d9e0b2830724965e80b62fb22c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ec2f7924ade2450c06bcd8.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67ec2f7924ade2450c06bcd8\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn the previous lectures, you learned about handling side effects, like data fetching, with the useEffect Hook. In this workshop, you'll build an application that fetches fruit data from an API based on user input and displays the results dynamically.\nFirst, make your FruitsSearch component return a div element with an id of search-container.\n--hints--\nYou should have a div element.\njs\nassert.lengthOf(document.querySelectorAll(\"div\"), 2);\nYour div element should have an id called search-container.\njs\nconst el = document.getElementById(\"search-container\");\nassert.exists(el);\nassert.strictEqual(el.tagName, \"DIV\");\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\n--fcc-editable-region--\nexport function FruitsSearch() {\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ec2f7924ade2450c06bcd8.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "32cc7ade9df9b01904494316bdf54465",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ec46b46f232344ebf3c114.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67ec46b46f232344ebf3c114\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nNext, you will create a form where users can search for fruits. Inside the #search-container element, create a form element.\n--hints--\nYou should have a form element inside the search-container element.\n```js\nconst searchContainer = document.getElementById(\"search-container\");\nassert.exists(searchContainer);\nconst form = searchContainer.querySelector(\"form\");\nassert.exists(form);\nassert.strictEqual(form.tagName, \"FORM\");\n```\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nreturn (\n--fcc-editable-region--\n</div>\n--fcc-editable-region--\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ec46b46f232344ebf3c114.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e7e6f3d9269fc22388ffe9dad62c539",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ec4a95b609c071f7747be0.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67ec4a95b609c071f7747be0\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nInside the form element, add a label element. Your label element should have the text Search for fruits: and an htmlFor attribute with the value of \"search-input\".\n--hints--\nYou should have a label element inside the form element.\n```js\nconst form = document.querySelector(\"form\");\nassert.exists(form);\nconst label = form.querySelector(\"label\");\nassert.exists(label);\nassert.strictEqual(label.tagName, \"LABEL\");\n```\nThe label element should have an htmlFor attribute with the value of \"search-input\".\n```js\nconst label = document.querySelector(\"form label\");\nassert.exists(label);\nconst key = Object.keys(label).find(key => key.startsWith(\"__reactProps\"));\nconst reactInstance = label[key]\nassert.exists(reactInstance);\nassert.equal(reactInstance.htmlFor, \"search-input\");\n```\nYour label element should have the text Search for fruits:.\njs\nconst label = document.querySelector(\"form label\");\nassert.exists(label);\nassert.match(label.textContent.trim(), /^Search for fruits:$/);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nreturn (\n--fcc-editable-region--\n</form>\n</div>\n--fcc-editable-region--\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ec4a95b609c071f7747be0.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8ca2854c19a630fd311a2bccefbb4d2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\64dd076a1b33c86d84b4232f.md",
    "source_type": "git_repo",
    "title": "Photo Gallery",
    "content": "id: 64dd076a1b33c86d84b4232f\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nIn order to better visualize how your elements are sized, adding a border can be helpful Give your gallery element a width of 50% and a border set to 5px solid red Then give your img elements a width of 100%, padding set to 5px, and a border set to 5px solid blue --hints--\nYou should have a gallery selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' gallery'));\nYour gallery selector should have a width property js\nassert exists(new __helpers CSSHelp(document) getStyle(' gallery') width);\nYour gallery selector should have a width property set to 50% js\nassert equal(new __helpers CSSHelp(document) getStyle(' gallery') width, '50%');\nYour gallery selector should have a border property js\nassert exists(new __helpers CSSHelp(document) getStyle(' gallery') border);\nYour gallery selector should have a border property set to 5px solid red js\nassert equal(new __helpers CSSHelp(document) getStyle(' gallery') border, '5px solid red');\nYou should have an img selector js\nassert exists(new __helpers CSSHelp(document) getStyle('img'));\nYour img selector should have a width property js\nassert exists(new __helpers CSSHelp(document) getStyle('img') width);\nYour img selector should have a width property set to 100% js\nassert equal(new __helpers CSSHelp(document) getStyle('img') width, '100%');\nYour img selector should have a padding property js\nassert exists(new __helpers CSSHelp(document) getStyle('img') padding);\nYour img selector should have a padding property set to 5px js\nassert equal(new __helpers CSSHelp(document) getStyle('img') padding, '5px');\nYour img selector should have a border property js\nassert exists(new __helpers CSSHelp(document) getStyle('img') border);\nYour img selector should have a border property set to 5px solid blue js\nassert equal(new __helpers CSSHelp(document) getStyle('img') border, '5px solid blue');\n--seed--\n--seed-contents--\n```html\nPhoto Gallery\ncss flexbox photo gallery\n```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3418,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flexbox-photo-gallery\\64dd076a1b33c86d84b4232f.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7c4f1b1be938e56915aeb844462c6f69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ecfbfe17c7d24465e0de88.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67ecfbfe17c7d24465e0de88\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nInside the form element, after the label, add an input with an id of search-input and a type of search.\n--hints--\nYou should have an input inside the form element with an id of search-input.\n```js\nconst form = document.querySelector(\"form\");\nassert.exists(form);\nconst input = form.querySelector(\"input\");\nassert.exists(input);\nassert.strictEqual(input.tagName, \"INPUT\");\nassert.strictEqual(input.getAttribute(\"id\"), \"search-input\");\n```\nYour input should have a type value of search.\n```js\nconst form = document.querySelector(\"form\");\nassert.exists(form);\nconst input = form.querySelector(\"input\");\nassert.exists(input);\nassert.strictEqual(input.tagName, \"INPUT\");\nassert.strictEqual(input.getAttribute(\"type\"), \"search\");\n```\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nreturn (\n--fcc-editable-region--\nSearch for fruits:\n</form>\n--fcc-editable-region--\n</div>\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ecfbfe17c7d24465e0de88.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "490937e8ddf3b1ac6ebbfcccda6704e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "id: 619d3711d04d623000013e9e\ntitle: Step 104\nchallengeType: 0\ndashedName: step-104\n--description--\nFinally, calculate the height of the ground element to be the height of the viewport minus the height of the penguin element Congratulations You have completed the Flappy Penguin Workshop --hints--\nYou should give ground a height of calc(100vh - 300px) js\nassert include(['calc(100vh-300px)', 'calc(-300px+100vh)'], new __helpers CSSHelp(document) getStyle(' ground') getPropVal('height', true));\n--seed--\n--seed-contents--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n} sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\ntransition: transform 1s ease-in-out 0ms;\n} penguin * {\nposition: absolute;\n} penguin:active {\ntransform: scale(1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "800a8da136ea33e19f495f113e591ee3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; } sun { width: 200px; height: 200px; background-color: yellow; position: absolute; border-radius: 50%; top: -75px; right: -75px; } penguin { width: 300px; height: 300px; margin: auto; margin-top: 75px; z-index: 4; position: relative; transition: transform 1s ease-in-out 0ms; } penguin * { position: absolute; } penguin:active { transform: scale(15);\ncursor: not-allowed;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n} chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "710ee9acdc8567a759f462d45e004e72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "right { right: 5%; } chin { width: 90%; height: 70%; background-color: var(--penguin-face); top: 25%; left: 5%; border-radius: 70% 70% 100% 100%; } eye { width: 15%; height: 17%; background-color: black; top: 45%; border-radius: 50%; } eye left { left: 25%; } eye right { right: 25%; } eye-lid { width: 150%; height: 100%; background-color: var(--penguin-face); top: 25%; left: -23%; border-radius: 50%; } blush { width: 15%; height: 10%; background-color: pink; top: 65%; border-radius: 50%; }blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n} penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "9f299612c2f78371c181579ff58ade6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; } penguin-body { width: 53%; height: 45%; background: linear-gradient( 45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, white 67% ); border-radius: 80% 80% 100% 100%; top: 40%; left: 23 5%; } penguin-body::before { content: \"\"; position: absolute; width: 50%; height: 45%; background-color: var(--penguin-skin); top: 10%; left: 25%; border-radius: 0% 0% 100% 100%; opacity: 70%; }arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\nanimation: 3s linear infinite wave;\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\ntransform: rotate(130deg) scaleX(-1);\n}\n30% {\ntransform: rotate(110deg) scaleX(-1);\n}\n40% {\ntransform: rotate(130deg) scaleX(-1);\n}\n} foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "968cd69084d252a34c3fade9e90410f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "animation: 3s linear infinite wave; } arm right { top: 0%; right: -5%; transform: rotate(-45deg); } @keyframes wave { 10% { transform: rotate(110deg) scaleX(-1); } 20% { transform: rotate(130deg) scaleX(-1); } 30% { transform: rotate(110deg) scaleX(-1); } 40% { transform: rotate(130deg) scaleX(-1); } } foot { width: 15%; height: 30%; background-color: var(--penguin-picorna); top: 85%; border-radius: 50%; z-index: -1; } foot left { left: 25%; transform: rotate(80deg); } foot right { right: 25%; transform: rotate(-80deg); } --fcc-editable-region--ground {\nwidth: 100vw;\nheight: 400px;\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n--fcc-editable-region--\n```\n--solutions--\n```html\nPenguin\n💜\nI CSS\n```\n```css\n:root {\n--penguin-face: white;\n--penguin-picorna: orange;\n--penguin-skin: gray;\n}\nbody {\nbackground: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\n} left-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\nposition: absolute;\ntransform: skew(0deg, 44deg);\nz-index: 2;\nmargin-top: 100px;\n} back-mountain {\nwidth: 300px;\nheight: 300px;\nbackground: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\nposition: absolute;\nz-index: 1;\ntransform: rotate(45deg);\nleft: 110px;\ntop: 225px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "40270858201d6c9431c908485bff5cd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "{ --penguin-face: white; --penguin-picorna: orange; --penguin-skin: gray; } body { background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222)); margin: 0; padding: 0; width: 100%; height: 100vh; overflow: hidden; } left-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255)); position: absolute; transform: skew(0deg, 44deg); z-index: 2; margin-top: 100px; } back-mountain { width: 300px; height: 300px; background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255)); position: absolute; z-index: 1; transform: rotate(45deg); left: 110px; top: 225px; }sun {\nwidth: 200px;\nheight: 200px;\nbackground-color: yellow;\nposition: absolute;\nborder-radius: 50%;\ntop: -75px;\nright: -75px;\n} penguin {\nwidth: 300px;\nheight: 300px;\nmargin: auto;\nmargin-top: 75px;\nz-index: 4;\nposition: relative;\ntransition: transform 1s ease-in-out 0ms;\n} penguin * {\nposition: absolute;\n} penguin:active {\ntransform: scale(1 5);\ncursor: not-allowed;\n} penguin-head {\nwidth: 50%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nvar(--penguin-skin),\nrgb(239, 240, 228)\n);\nborder-radius: 70% 70% 65% 65%;\ntop: 10%;\nleft: 25%;\nz-index: 1;\n} face {\nwidth: 60%;\nheight: 70%;\nbackground-color: var(--penguin-face);\nborder-radius: 70% 70% 60% 60%;\ntop: 15%;\n} face left {\nleft: 5%;\n} face right {\nright: 5%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "ab7716ca2a31a13656310b3979a0ff59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "position: relative; transition: transform 1s ease-in-out 0ms; } penguin * { position: absolute; } penguin:active { transform: scale(1 5); cursor: not-allowed; } penguin-head { width: 50%; height: 45%; background: linear-gradient( 45deg, var(--penguin-skin), rgb(239, 240, 228) ); border-radius: 70% 70% 65% 65%; top: 10%; left: 25%; z-index: 1; } face { width: 60%; height: 70%; background-color: var(--penguin-face); border-radius: 70% 70% 60% 60%; top: 15%; } face left { left: 5%; } face right { right: 5%; }chin {\nwidth: 90%;\nheight: 70%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: 5%;\nborder-radius: 70% 70% 100% 100%;\n} eye {\nwidth: 15%;\nheight: 17%;\nbackground-color: black;\ntop: 45%;\nborder-radius: 50%;\n} eye left {\nleft: 25%;\n} eye right {\nright: 25%;\n} eye-lid {\nwidth: 150%;\nheight: 100%;\nbackground-color: var(--penguin-face);\ntop: 25%;\nleft: -23%;\nborder-radius: 50%;\n} blush {\nwidth: 15%;\nheight: 10%;\nbackground-color: pink;\ntop: 65%;\nborder-radius: 50%;\n} blush left {\nleft: 15%;\n} blush right {\nright: 15%;\n} beak {\nheight: 10%;\nbackground-color: var(--penguin-picorna);\nborder-radius: 50%;\n} beak top {\nwidth: 20%;\ntop: 60%;\nleft: 40%;\n} beak bottom {\nwidth: 16%;\ntop: 65%;\nleft: 42%;\n} shirt {\nfont: bold 25px Helvetica, sans-serif;\ntop: 165px;\nleft: 127 5px;\nz-index: 1;\ncolor: #6a6969;\n} shirt div {\nfont-weight:  initial;\ntop: 22 5px;\nleft: 12px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "bb3cfa5dde8bc22683c47164cb711d31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "background-color: pink; top: 65%; border-radius: 50%; } blush left { left: 15%; } blush right { right: 15%; } beak { height: 10%; background-color: var(--penguin-picorna); border-radius: 50%; } beak top { width: 20%; top: 60%; left: 40%; } beak bottom { width: 16%; top: 65%; left: 42%; } shirt { font: bold 25px Helvetica, sans-serif; top: 165px; left: 127 5px; z-index: 1; color: #6a6969; } shirt div { font-weight: initial; top: 22 5px; left: 12px; }penguin-body {\nwidth: 53%;\nheight: 45%;\nbackground: linear-gradient(\n45deg,\nrgb(134, 133, 133) 0%,\nrgb(234, 231, 231) 25%,\nwhite 67%\n);\nborder-radius: 80% 80% 100% 100%;\ntop: 40%;\nleft: 23 5%;\n} penguin-body::before {\ncontent: \"\";\nposition: absolute;\nwidth: 50%;\nheight: 45%;\nbackground-color: var(--penguin-skin);\ntop: 10%;\nleft: 25%;\nborder-radius: 0% 0% 100% 100%;\nopacity: 70%;\n} arm {\nwidth: 30%;\nheight: 60%;\nbackground: linear-gradient(\n90deg,\nvar(--penguin-skin),\nrgb(209, 210, 199)\n);\nborder-radius: 30% 30% 30% 120%;\nz-index: -1;\n} arm left {\ntop: 35%;\nleft: 5%;\ntransform-origin: top left;\ntransform: rotate(130deg) scaleX(-1);\nanimation: 3s linear infinite wave;\n} arm right {\ntop: 0%;\nright: -5%;\ntransform: rotate(-45deg);\n}\n@keyframes wave {\n10% {\ntransform: rotate(110deg) scaleX(-1);\n}\n20% {\ntransform: rotate(130deg) scaleX(-1);\n}\n30% {\ntransform: rotate(110deg) scaleX(-1);\n}\n40% {\ntransform: rotate(130deg) scaleX(-1);\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "955916fcd830630359f5ed7bd9080058",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
    "source_type": "git_repo",
    "title": "Penguin",
    "content": "30%; height: 60%; background: linear-gradient( 90deg, var(--penguin-skin), rgb(209, 210, 199) ); border-radius: 30% 30% 30% 120%; z-index: -1; } arm left { top: 35%; left: 5%; transform-origin: top left; transform: rotate(130deg) scaleX(-1); animation: 3s linear infinite wave; } arm right { top: 0%; right: -5%; transform: rotate(-45deg); } @keyframes wave { 10% { transform: rotate(110deg) scaleX(-1); } 20% { transform: rotate(130deg) scaleX(-1); } 30% { transform: rotate(110deg) scaleX(-1); } 40% { transform: rotate(130deg) scaleX(-1); } }foot {\nwidth:  15%;\nheight: 30%;\nbackground-color: var(--penguin-picorna);\ntop: 85%;\nborder-radius: 50%;\nz-index: -1;\n} foot left {\nleft: 25%;\ntransform: rotate(80deg);\n} foot right {\nright: 25%;\ntransform: rotate(-80deg);\n} ground {\nwidth: 100vw;\nheight: calc(100vh - 300px);\nbackground: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\nz-index: 3;\nposition: absolute;\nmargin-top: -58px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-flappy-penguin\\619d3711d04d623000013e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "e3e05dceb1c2c9e6049af8f30afaa84c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed4c13de85e0aa05df5145.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67ed4c13de85e0aa05df5145\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nBind the input's displayed value to your React state by adding a value attribute to your search input set to the query state's value.\n--hints--\nYou should set the value attribute of your search input to the query state.\njs\nassert.match(code, /value=\\{query\\}/)\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nreturn (\nSearch for fruits:\n--fcc-editable-region--\n<input\nid=\"search-input\"\ntype=\"search\"\n/>\n--fcc-editable-region--\n</form>\n</div>\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2385,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed4c13de85e0aa05df5145.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f77eee2f9e08cdf97b4ff134294013d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8eeab71f4f24ba1a3a7eb.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67f8eeab71f4f24ba1a3a7eb\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nAfter the form, add a div element with an id of results that will display the search results.\n--hints--\nYou should have a div element with the id of results after the form.\n```js\nconst searchContainer = document.getElementById(\"search-container\");\nassert.exists(searchContainer);\nconst children = [...searchContainer.children];\nassert.strictEqual(children.length, 2);\nassert.strictEqual(children[0].tagName, \"FORM\");\nconst resultsDiv = children[1];\nassert.strictEqual(resultsDiv.tagName, \"DIV\");\nassert.strictEqual(resultsDiv.getAttribute(\"id\"), \"results\");\n```\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne.preventDefault();\n}\nreturn (\n--fcc-editable-region--\nSearch for fruits:\nsetQuery(e.target.value)}\n/>\n--fcc-editable-region--\n</div>\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2835,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8eeab71f4f24ba1a3a7eb.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0c599e41c2b72c50756d11361c48504f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed044dc76cf4a441618f2c.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67ed044dc76cf4a441618f2c\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nIn React, controlled inputs are a standard way to handle form data, where the input's value is synced with the component's state ```jsx\nconst MyForm = () => {\nconst [name, setName] = useState(\"\");\nreturn (\n<>\nYour name\n</>\n);\n}\n```\nYou will learn more about this pattern in a future lesson To track what the user types into the search input field, create a state variable named query with an initial value of an empty string ('') Also define its corresponding setter function, setQuery, using the useState Hook --hints--\nYou should use the array destructuring syntax for the query and setQuery variables js\nassert match(code, /(const|let|var)\\s+\\[\\s*query\\s*,\\s*setQuery\\s*\\]\\s*/);\nYou should use the useState Hook js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports FruitsSearch);\nassert isAtLeast(abuseState calls length, 1);\n}\nYour useState Hook should have an initial value of an empty string ('') js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports FruitsSearch);\nassert equal(abuseState calls[0] [0], '');\n}\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed044dc76cf4a441618f2c.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bb0064e183f69051dc4f3ccd21dfa2f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed044dc76cf4a441618f2c.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const _a = eval(script); const _b = await __helpers prepTestComponent(exports FruitsSearch); assert equal(abuseState calls[0] [0], ''); } --seed-- --seed-contents-- ```html Fruits Search ``` ```css body { font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f4f4f4; } search-container { text-align: center; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 01);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nSearch for fruits:\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed044dc76cf4a441618f2c.md",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "865916964aa4ffa74ba65f1fb71873f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed0e7faf1f2d130a275a82.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67ed0e7faf1f2d130a275a82\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nWhen the user types into the input field, a list of fruits should appear that match their query To handle this, create a state variable called results with an initial value of an empty array ([]) Also define its setter function, setResults, using the useState Hook --hints--\nYou should use the array destructuring syntax for the results and setResults variables js\nassert match(code, /(const|let|var)\\s+\\[\\s*(results)\\s*,\\s*(setResults)\\s*\\]\\s*/);\nYou should use the useState Hook js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports FruitsSearch);\nassert isAtLeast(abuseState calls length, 2);\n}\nYour useState Hook should have an initial value of an empty array ([]) ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports FruitsSearch);\nassert deepEqual(abuseState calls[1] [0], []);\n}\n```\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3353,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed0e7faf1f2d130a275a82.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f9e0ef919b94a66ec56f5aa4b91bc1d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed0e7faf1f2d130a275a82.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "= [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const _a = eval(script); const _b = await __helpers prepTestComponent(exports FruitsSearch); assert deepEqual(abuseState calls[1] [0], []); } ``` --seed-- --seed-contents-- ```html Fruits Search ``` ```css body { font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f4f4f4; } search-container { text-align: center; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 01);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\n--fcc-editable-region--\nconst [query, setQuery] = useState('');\n--fcc-editable-region--\nreturn (\nSearch for fruits:\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3353,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67ed0e7faf1f2d130a275a82.md",
      "source_type": "git_repo"
    },
    "token_count": 304,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "72e95ead9ab4aed34f4e0065bc651132",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ec758a740e34432222db.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67f8ec758a740e34432222db\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nAdd an onChange attribute to the input to capture what the user types Set it to an arrow function that takes e as an argument Inside the function, update the query state by passing e target value to the setter function, which holds the current value of the input Here's an example:\njs\n<input\nonChange={(e) => setExample(e target value)}\n/>\n--hints--\nYou should ensure that the onChange handler is defined ```js\nconst searchInput = document getElementById(\"search-input\");\nassert exists(searchInput);\nconst reactKey = Object keys(searchInput) find(key => key startsWith(\"__reactProps\"));\nconst reactProps = searchInput[reactKey];\nassert exists(reactProps);\nassert isFunction(reactProps onChange);\n```\nYour onChange handler should have an e parameter ```js\nconst searchInput = document getElementById(\"search-input\");\nassert exists(searchInput);\nconst reactKey = Object keys(searchInput) find(key => key startsWith(\"__reactProps\"));\nconst reactProps = searchInput[reactKey];\nassert match(reactProps onChange toString(), /onChange\\s(\\se\\s*)/);\n```\nYour onChange handler should call setQuery() with e target value ```js\nconst searchInput = document getElementById(\"search-input\");\nassert exists(searchInput);\nconst reactKey = Object keys(searchInput) find(key => key startsWith(\"__reactProps\"));\nconst reactProps = searchInput[reactKey];\nassert match(reactProps onChange toString(), /setQuery\\s(\\se target value\\s*)/);\n```\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3609,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ec758a740e34432222db.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "788e6330ffa57e61c1607b08eb710a95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ec758a740e34432222db.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "call setQuery() with e target value ```js const searchInput = document getElementById(\"search-input\"); assert exists(searchInput); const reactKey = Object keys(searchInput) find(key => key startsWith(\"__reactProps\")); const reactProps = searchInput[reactKey]; assert match(reactProps onChange toString(), /setQuery\\s(\\se target value\\s*)/); ``` --seed-- --seed-contents-- ```html Fruits Search ``` ```css body { font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f4f4f4; } search-container { text-align: center; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 01);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nreturn (\nSearch for fruits:\n--fcc-editable-region--\n<input\nid=\"search-input\"\ntype=\"search\"\nvalue={query}\n/>\n--fcc-editable-region--\n</form>\n</div>\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3609,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ec758a740e34432222db.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "680ed38d7ee9089b1bd9d7de3851e6e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ef57b9974052e5ef6b30.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67f8ef57b9974052e5ef6b30\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nInside the #results element, use a ternary operator to check if the length of results array is greater than zero If it is, map over the items and display each one in a p element with a class of result-item Be sure to include a key attribute with each paragraph as well If results it's empty, render a p element with the message No results found --hints--\nYour #results container should contain a list of matching fruits based on the query Each result should be a p element with the class of result-item and should show the name of the fruit ```js\nasync () => {\n{\nconst mockResults = [\"Item 1\", \"Item 2\"];\nReact useState = (arg) => {\nif (Array isArray(arg)) return [mockResults, () => {}];\nreturn [null, () => {}];\n};\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst div = await __helpers prepTestComponent(exports FruitsSearch);\nconst items = div querySelectorAll(\"p result-item\");\nassert equal(items length, mockResults length);\nassert equal(items[0] textContent, \"Item 1\");\nassert equal(items[1] textContent, \"Item 2\");\nassert isTrue(items[0] classList contains(\"result-item\"));\nassert isTrue(items[1] classList contains(\"result-item\"));\n}\n}\n```\nYour #results element should contain a p element with the text No results found when the results array is empty js\nasync () => {\n{\nReact useState = (arg) => {\nif (Array isArray(arg)) return [[], () => {}];\nreturn [null, () => {}];\n};\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst div = await __helpers prepTestComponent(exports FruitsSearch);\nconst noResultsEl = div querySelector(\"#results p\");\nassert exists(noResultsEl);\nassert equal(noResultsEl",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ef57b9974052e5ef6b30.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0da71dd9c1bc72b9668c82b8d082e0b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ef57b9974052e5ef6b30.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "text No results found when the results array is empty js async () => { { React useState = (arg) => { if (Array isArray(arg)) return [[], () => {}]; return [null, () => {}]; }; const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const _a = eval(script); const div = await __helpers prepTestComponent(exports FruitsSearch); const noResultsEl = div querySelector(\"#results p\"); assert exists(noResultsEl); assert equal(noResultsEltextContent, \"No results found\");\n}\n}\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n--fcc-editable-region--\n</div>\n--fcc-editable-region--\n</div>\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8ef57b9974052e5ef6b30.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "028eecb6fbd56d7ac3759e49384d9730",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8fd20d0afc3e03122453a.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67f8fd20d0afc3e03122453a\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nNext, you will make your app get fruit names from the API when a user types in the input First, add a useEffect hook so that it runs whenever the query state changes Make sure to pass an arrow function as the first argument to useEffect, and include query in the dependency array --hints--\nYou should use the useEffect hook js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst fruitsSearchString = exports FruitsSearch toString();\nassert match(fruitsSearchString, /useEffect\\((\\(\\)|function)\\s*(=>|\\(\\))\\s*\\{\\s*\\}\\s*/);\nYou should include query in the dependency array of your useEffect hook js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst fruitsSearchString = exports FruitsSearch toString();\nassert match(fruitsSearchString, /useEffect\\((\\(\\)|function)\\s*(=>|\\(\\))\\s*\\{\\s*\\}\\s*\\s*,\\s*\\[\\s*query\\s*\\]\\); /);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8fd20d0afc3e03122453a.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "24afd628d1d42ce037a27105a62fa4ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8fd20d0afc3e03122453a.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "fruitsSearchString = exports FruitsSearch toString(); assert match(fruitsSearchString, /useEffect\\((\\(\\)|function)\\s*(=>|\\(\\))\\s*\\{\\s*\\}\\s*\\s*,\\s*\\[\\s*query\\s*\\]\\); /); --seed-- --seed-contents-- ```html Fruits Search ``` ```css body { font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f4f4f4; } search-container { text-align: center; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0 1); } search-input { padding: 10px; width: 80%; border: 1px solid #ccc; border-radius: 5px; margin-bottom: 10px; } results { text-align: left; max-height: 150px; overflow-y: auto; }result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f8fd20d0afc3e03122453a.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1127d5c8d32f7fcb3578368a56b971c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90485c192d92ba3ba7e34.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67f90485c192d92ba3ba7e34\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nInside the useEffect callback, add an if condition to check if query trim() === '' This checks if query is an empty string or contains only spaces If so, call setResults([]) and return early --hints--\nYou should check if query trim() === '' js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst fruitsSearchString = exports FruitsSearch toString();\nassert match(fruitsSearchString, /if\\s*\\(\\s*query\\ trim\\(\\)\\s*===\\s*['\"]{2}\\s*\\)/);\nIf query trim() === '' is true, call setResults() with an empty array, then use the return keyword after that js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst fruitsSearchString = exports FruitsSearch toString();\nassert match(fruitsSearchString, /{\\s*setResults\\(\\s*\\[\\s*\\]\\s*\\)\\s*; \\s*return\\s*; \\s*}/);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90485c192d92ba3ba7e34.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e60b4a87cc36add633b6222d5ac3c66b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90485c192d92ba3ba7e34.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "= exports FruitsSearch toString(); assert match(fruitsSearchString, /{\\s*setResults\\(\\s*\\[\\s*\\]\\s*\\)\\s*; \\s*return\\s*; \\s*}/); --seed-- --seed-contents-- ```html Fruits Search ``` ```css body { font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f4f4f4; } search-container { text-align: center; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0 1); } search-input { padding: 10px; width: 80%; border: 1px solid #ccc; border-radius: 5px; margin-bottom: 10px; } results { text-align: left; max-height: 150px; overflow-y: auto; }result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\n--fcc-editable-region--\nuseEffect(() => {\n}, [query]);\n--fcc-editable-region--\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90485c192d92ba3ba7e34.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "61b721cedba71e6e6b79f77e440895b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90574263ebf363f9edd1d.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 67f90574263ebf363f9edd1d\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nIf query is not empty, you want to get fruits that match the user input from the API, but only after users stop typing for a short period to avoid making the fetch call too frequently To start, after the if statement, call setTimeout with an empty arrow function and a delay value of 700 as arguments, and store it in a variable called timeoutId This allows you to cancel the timeout later when the effect cleans up --hints--\nYou should call setTimeout and store the return value in a variable called timeoutId js\nassert match(code, /(const|let|var)\\s+timeoutId\\s*=\\s*setTimeout\\s*\\(/s);\nsetTimeout should have an empty callback function and a delay value of 700 js\nassert match(code, /(const|let|var)\\s+timeoutId\\s*=\\s*setTimeout\\s*\\(\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}\\s*,\\s*700\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\n--fcc-editable-region--\nuseEffect(() => {\nif (query",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90574263ebf363f9edd1d.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b4c1407d315f4f79acbae7aa33f8be9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90574263ebf363f9edd1d.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "0 10px rgba(0, 0, 0, 0 1); } search-input { padding: 10px; width: 80%; border: 1px solid #ccc; border-radius: 5px; margin-bottom: 10px; } results { text-align: left; max-height: 150px; overflow-y: auto; } result-item { padding: 5px; border-bottom: 1px solid #ddd; } ``` ```jsx const { useState, useEffect } = React; export function FruitsSearch() { const [query, setQuery] = useState(''); const [results, setResults] = useState([]); function handleSubmit(e) { e preventDefault(); } --fcc-editable-region-- useEffect(() => { if (querytrim() === '') {\nsetResults([]);\nreturn;\n}\n}, [query]);\n--fcc-editable-region--\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\67f90574263ebf363f9edd1d.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "df6c1003425b3519f551de8b74f0ceaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f04ebe7476ed447c4c89.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 6813f04ebe7476ed447c4c89\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nNext, call .json() on the response and store the result in a variable called data. Since you're still inside an async function, you should use await before response.json().\n--hints--\nYou should call json() on response and store it in a data variable.\njs\nassert.match(\ncode,\n/(const|let|var)\\s+data\\s*=\\s*await\\s+response\\.json\\(\\s*\\)/s\n);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne.preventDefault();\n}\nuseEffect(() => {\nif (query.trim() === '') {\nsetResults([]);\nreturn;\n}\n--fcc-editable-region--\nconst timeoutId = setTimeout(async () => {\ntry {\nconst response = await fetch(https://fruit-search.freecodecamp.rocks/api/fruits?q=${query});\n} catch {\n}\n}, 700);\n--fcc-editable-region--\n}, [query]);\nreturn (\nSearch for fruits:\nsetQuery(e.target.value)}\n/>\n{results.length > 0 ? (\nresults.map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3162,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f04ebe7476ed447c4c89.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8d70dc5c79393da018c4c2890bc62f61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813e49f0a3ec06c1e80c93b.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 6813e49f0a3ec06c1e80c93b\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nUpdate the first argument to setTimeout to an async arrow function This allows you to use await inside the delayed logic Inside that function, create a try catch block to handle any potential errors when fetching data --hints--\nYou should have an async arrow function as the first argument to setTimeout js\nassert match(code, /setTimeout\\s*\\(\\s*async\\s*\\(\\s*\\)\\s*=>\\s*{/);\nInside the async function , you should create a try catch block js\nassert match(\ncode,\n/try\\s*{[\\s\\S]* }\\s*catch\\s*(\\(\\s*\\w*\\s*\\)) \\s*{/\n);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\n--fcc-editable-region--\nuseEffect(() => {\nif (query trim() === '') {\nsetResults([]);\nreturn;\n}\nconst timeoutId = setTimeout(() => {}, 700);\n}, [query]);\n--fcc-editable-region--\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3194,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813e49f0a3ec06c1e80c93b.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fe8d805d3168da75308eb85a07d0b9c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813ee1963b142d3cce0889c.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 6813ee1963b142d3cce0889c\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nInside the try block, call the fetch function with the https://fruit-search freecodecamp rocks/api/fruits q=${query} URL, and store the result in a variable named response Since you're inside an async function, you should use await before fetch --hints--\nYou should call fetch with https://fruit-search freecodecamp rocks/api/fruits q=${query} and store the result in a response variable js\nassert match(code, /(const|let|var)\\s+response\\s*=\\s*await\\s+fetch\\(\\s*`https:\\/\\/fruit-search\\ freecodecamp\\ rocks\\/api\\/fruits\\ q=\\$\\{query\\}`\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\nuseEffect(() => {\nif (query trim() === '') {\nsetResults([]);\nreturn;\n}\n--fcc-editable-region--\nconst timeoutId = setTimeout(async () => {\ntry {\n} catch {\n}\n}, 700);\n--fcc-editable-region--\n}, [query]);\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813ee1963b142d3cce0889c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cbe78645d0ace2aaaa507a9a8c582b98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813ee1963b142d3cce0889c.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "solid #ddd; } ``` ```jsx const { useState, useEffect } = React; export function FruitsSearch() { const [query, setQuery] = useState(''); const [results, setResults] = useState([]); function handleSubmit(e) { e preventDefault(); } useEffect(() => { if (query trim() === '') { setResults([]); return; } --fcc-editable-region-- const timeoutId = setTimeout(async () => { try { } catch { } }, 700); --fcc-editable-region-- }, [query]); return ( Search for fruits: setQuery(e target value)} /> {results length > 0(\nresults map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813ee1963b142d3cce0889c.md",
      "source_type": "git_repo"
    },
    "token_count": 150,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f8c0ac23f083f83533d0864509bef932",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f4dc94d4a31c5702f594.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 6813f4dc94d4a31c5702f594\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nNow that you have the data from the API, update the results state by calling setResults and passing in an array that contains only the name property from each fruit in the data array Use the map() method for this --hints--\nYou should update setResults with data map(fruit => fruit name) js\nassert match(\ncode,\n/setResults\\s*\\(\\s*data\\ map\\(\\s*\\w+\\s*=>\\s*\\w+\\ name\\s*\\)\\s*\\)/s\n);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\nuseEffect(() => {\nif (query trim() === '') {\nsetResults([]);\nreturn;\n}\n--fcc-editable-region--\nconst timeoutId = setTimeout(async () => {\ntry {\nconst response = await fetch(https://fruit-search freecodecamp rocks/api/fruits q=${query});\nconst data = await response json();\n} catch {\n}\n}, 700);\n--fcc-editable-region--\n}, [query]);\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3247,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f4dc94d4a31c5702f594.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9cad195fc375de54300685d0ca024e71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f4dc94d4a31c5702f594.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "const [query, setQuery] = useState(''); const [results, setResults] = useState([]); function handleSubmit(e) { e preventDefault(); } useEffect(() => { if (query trim() === '') { setResults([]); return; } --fcc-editable-region-- const timeoutId = setTimeout(async () => { try { const response = await fetch(https://fruit-search freecodecamp rocks/api/fruits q=${query}); const data = await response json(); } catch { } }, 700); --fcc-editable-region-- }, [query]); return ( Search for fruits: setQuery(e target value)} /> {results length > 0 ( resultsmap(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3247,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f4dc94d4a31c5702f594.md",
      "source_type": "git_repo"
    },
    "token_count": 155,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fca96cfd94d69d476b3892013f966309",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f677aa1f742ec3808903.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 6813f677aa1f742ec3808903\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nFor the catch block, add an error parameter, then use console error to log any error that occurs while fetching or processing the data --hints--\nYour catch block should have an error parameter js\nassert match(code, /catch\\s*\\(\\s*error\\s*\\)\\s*/);\nYou should log any error in the catch block using console error js\nassert match(code, /catch\\s*\\(\\s*error\\s*\\)\\s*{[^}]*console\\ error\\s*\\([^)]*\\); \\s*\\}/);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\nuseEffect(() => {\nif (query trim() === '') {\nsetResults([]);\nreturn;\n}\n--fcc-editable-region--\nconst timeoutId = setTimeout(async () => {\ntry {\nconst response = await fetch(https://fruit-search freecodecamp rocks/api/fruits q=${query});\nconst data = await response json();\nsetResults(data map(fruit => fruit name));\n} catch {\n}\n}, 700);\n--fcc-editable-region--\n}, [query]);\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3325,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f677aa1f742ec3808903.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0c9eab7091cdcfeddc99c5eafa2efff4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f677aa1f742ec3808903.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "const [results, setResults] = useState([]); function handleSubmit(e) { e preventDefault(); } useEffect(() => { if (query trim() === '') { setResults([]); return; } --fcc-editable-region-- const timeoutId = setTimeout(async () => { try { const response = await fetch(https://fruit-search freecodecamp rocks/api/fruits q=${query}); const data = await response json(); setResults(data map(fruit => fruit name)); } catch { } }, 700); --fcc-editable-region-- }, [query]); return ( Search for fruits: setQuery(e target value)} /> {results length > 0 ( resultsmap(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3325,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813f677aa1f742ec3808903.md",
      "source_type": "git_repo"
    },
    "token_count": 154,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6ad9bc363b2424ffad585145e7e88ace",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813fe47f24095890691642f.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 6813fe47f24095890691642f\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nNext, you will need a function for when the form gets submitted Define a handleSubmit function that accepts an event object, e, and calls e preventDefault() --hints--\nYou should define a handleSubmit function with an e parameter ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst fruitsSearchString = exports FruitsSearch toString();\nassert match(fruitsSearchString, /function\\s+handleSubmit\\s(\\se\\s)\\s{/);\n```\nYou should call e preventDefault() inside the handleSubmit() function ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst fruitsSearchString = exports FruitsSearch toString();\nassert match(fruitsSearchString, /function\\s+handleSubmit\\s(\\se\\s)\\s{( |\\n)e preventDefault\\s(\\s*)/);\n```\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\n--fcc-editable-region--\nreturn (\nSearch for fruits:\nsetQuery(e target",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813fe47f24095890691642f.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "41d8aafaacdc27910b6d4df3811fb796",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813fe47f24095890691642f.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0 1); } search-input { padding: 10px; width: 80%; border: 1px solid #ccc; border-radius: 5px; margin-bottom: 10px; } results { text-align: left; max-height: 150px; overflow-y: auto; } result-item { padding: 5px; border-bottom: 1px solid #ddd; } ``` ```jsx const { useState, useEffect } = React; export function FruitsSearch() { const [query, setQuery] = useState(''); const [results, setResults] = useState([]); --fcc-editable-region-- return ( Search for fruits: setQuery(e targetvalue)}\n/>\n);\n--fcc-editable-region--\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3124,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\6813fe47f24095890691642f.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "871f730fcca54d2ee64bda506270bcf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68245535872ded3cc2900fa8.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 68245535872ded3cc2900fa8\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nPass the handleSubmit function to the onSubmit prop of the form element so the form submission can be handled correctly.\n--hints--\nThe handleSubmit function should be the value of the onSubmit attribute of the form element.\njs\nassert.match(code, /<form\\s+onSubmit\\s*=\\s*{handleSubmit}/);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n}\n.result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\n--fcc-editable-region--\nfunction handleSubmit(e) {\ne.preventDefault();\n}\nreturn (\nSearch for fruits:\nsetQuery(e.target.value)}\n/>\n);\n--fcc-editable-region--\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2529,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68245535872ded3cc2900fa8.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6a09bf1d5ef830b57531bb7e9207d5ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad8294a0ad902f1b31b612.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ad8294a0ad902f1b31b612\ntitle: Step 1\nchallengeType: 1\ndashedName: step-1\n--description--\nIn this workshop you will learn how to work with JavaScript fundamentals by building a greeting bot.\nIn this first step, you will want to output a message to the console from the greeting bot.\nRemember that you learned about console.log() and strings in the previous lectures.\nHere is a reminder of how to use console.log() with strings:\njs\nconsole.log(\"Hello, World!\");\nAdd a console.log() statement that outputs the string \"Hi there!\" to the console. Don't forget your quotes around the message!\n--hints--\nYou should have a console.log() statement in your code.\njs\nassert.match(__helpers.removeJSComments(code), /console\\.log(.*)/);\nYour console statement should have the message \"Hi there!\". Don't forget the quotes.\njs\nassert.match(__helpers.removeJSComments(code), /console\\.log\\((['\"])Hi\\s+there!\\1\\);?/);\n--seed--\n--seed-contents--\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1064,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad8294a0ad902f1b31b612.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "20d74ae2e7eff6468a9f023f8e1326ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad8ab945d266383f318cbf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ad8ab945d266383f318cbf\ntitle: Step 2\nchallengeType: 1\ndashedName: step-2\n--description--\nNow you should see the first message from the bot in the console.\nIt is time to add a second message from the bot.\nAdd another console.log statement to output the message \"I am excited to talk to you.\" to the console.\n--hints--\nYou should have a second console.log() statement in your code.\njs\nassert.lengthOf(__helpers.removeJSComments(code).match(/console\\.log(.*)/g), 2);\nYour console statement should have the message \"I am excited to talk to you.\". Don't forget the quotes.\njs\nassert.match(__helpers.removeJSComments(code), /(\"|')I\\s+am\\s+excited\\s+to\\s+talk\\s+to\\s+you.\\1/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 842,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad8ab945d266383f318cbf.md",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a4806a5930a9cc7c4ed8c673c1fa1378",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad984e92ce213a66f7e51c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ad984e92ce213a66f7e51c\ntitle: Step 4\nchallengeType: 1\ndashedName: step-4\n--description--\nWhen you need to declare variables with multiple words, you can use the camelCase naming convention.\nWhen using camelCase, the first word is all lowercase and the first letter of each subsequent word is capitalized.\nHere is an example:\njs\nlet thisIsCamelCase;\nUse let to declare a variable named botLocation.\n--hints--\nYou should use let to declare the variable.\njs\nassert.lengthOf(code.match(/let/g), 2);\nYour variable should be named botLocation.\njs\nassert.isNotNull(botLocation);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad984e92ce213a66f7e51c.md",
      "source_type": "git_repo"
    },
    "token_count": 192,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "48c9d70d5973b149fab132212c3d48b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad8d150264db3926eccfeb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ad8d150264db3926eccfeb\ntitle: Step 3\nchallengeType: 1\ndashedName: step-3\n--description--\nIn the previous lectures, you learned about the let keyword and how to declare variables in JavaScript.\nHere is a reminder of how to declare a variable using the let keyword:\njs\nlet greeting;\nUse the let keyword to declare a variable called bot.\nNOTE: You are using let here because later on in the workshop, you will be changing the value of the bot variable.\n--hints--\nYou should have the let keyword in your code.\njs\nassert.match(__helpers.removeJSComments(code), /let/g);\nYou should declare a variable called bot.\njs\nassert.isNotNull(bot);\nYou should use the let keyword to declare the variable.\njs\nassert.match(__helpers.removeJSComments(code), /let\\s+bot;?/g);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad8d150264db3926eccfeb.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "15f81c9d5737179fd4359352d325f3d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad998285df023b23dacdd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ad998285df023b23dacdd3\ntitle: Step 5\nchallengeType: 1\ndashedName: step-5\n--description--\nNow, it is time to assign some values to your bot and botLocation variables.\nIn the previous lectures, you learned how to assign values to variables like this:\njs\nvariableName = \"Here is the value\";\nRemember that what is on the right side of the assignment operator = is the value that you are assigning to the variable on the left side.\nAssign the string \"teacherBot\" to the bot variable and the string \"the universe\" to the botLocation variable.\n--hints--\nYou should assign a string to your bot variable.\njs\nassert.isString(bot);\nYour bot variable should be assigned the string \"teacherBot\".\njs\nassert.equal(bot, \"teacherBot\");\nYou should assign a string to your botLocation variable.\njs\nassert.isString(botLocation);\nYour botLocation variable should be assigned the string \"the universe\".\njs\nassert.equal(botLocation, \"the universe\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1214,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad998285df023b23dacdd3.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4dad6fcb79e585cfcd6acce39cca1164",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adb844118ba74107ce771f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66adb844118ba74107ce771f\ntitle: Step 8\nchallengeType: 1\ndashedName: step-8\n--description--\nThe next message from the bot will concern the bot's location.\nCreate a variable called botLocationSentence.\nThen use string concatenation with the + operator to join the string \"I live in \" with the botLocation variable followed by a period (.).\nAssign this value to the botLocationSentence variable.\nThen, log the value of botLocationSentence to the console.\n--hints--\nYou should have a botLocationSentence variable.\njs\nassert.isNotNull(botLocationSentence);\nYour botLocationSentence variable should hold the value of a string.\njs\nassert.isString(botLocationSentence);\nYou should use string concatenation with the + operator to join the string \"I live in \" with the botLocation variable followed by a period (.). Be mindful of spaces.\njs\nassert.equal(botLocationSentence, \"I live in the universe.\");\nYou should have a console statement in your code.\njs\nassert.lengthOf(__helpers.removeJSComments(code).match(/console\\.log(.*)/g), 5);\nYour console statement should output the botLocationSentence variable.\njs\nassert.match(__helpers.removeJSComments(code), /console\\.log\\s*\\(\\s*botLocationSentence\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\nconst botIntroduction = \"My name is \" + bot + \".\";\nconsole.log(botIntroduction);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adb844118ba74107ce771f.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a75ce796b93369687394ede447d9b8c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad9c633fa26d3c1475eae3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ad9c633fa26d3c1475eae3\ntitle: Step 6\nchallengeType: 1\ndashedName: step-6\n--description--\nNow, it is time to add another message from the bot.\nAdd another console statement to the code that logs the message \"Allow me to introduce myself.\".\n--hints--\nYou should have a third console.log() statement in your code.\njs\nassert.lengthOf(__helpers.removeJSComments(code).match(/console\\.log(.*)/g), 3);\nYour console statement should have the message \"Allow me to introduce myself.\". Don't forget the quotes.\njs\nassert.match(__helpers.removeJSComments(code), /(\"|')Allow\\s+me\\s+to\\s+introduce\\s+myself.\\1/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ad9c633fa26d3c1475eae3.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4ae1c747492fd6db61424790281ecf9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ada3f46945763dd97f43f8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ada3f46945763dd97f43f8\ntitle: Step 7\nchallengeType: 1\ndashedName: step-7\n--description--\nEarlier, you created the bot and botLocation variables. Now, you will use them to output new messages to the console.\nIn the lectures, you learned how to work with string concatenation using the + operator to concatenate strings together like this:\n```js\nlet firstName = \"John\";\nconsole.log(\"Hello, my name is \" + firstName + \".\");\n// result: \"Hello, my name is John.\"\n```\nRemember that you need to be mindful of spaces when concatenating strings with variables.\nCreate a variable called botIntroduction.\nThen use string concatenation with the + operator to join the string \"My name is \" followed by the bot variable followed by a period (.).\nAssign this value to the botIntroduction variable.\nThen, log the botIntroduction variable to the console.\n--hints--\nYou should have a variable called botIntroduction.\njs\nassert.isNotNull(botIntroduction);\nYour botIntroduction variable should hold the value of a string.\njs\nassert.isString(botIntroduction);\nYou should use string concatenation with the + operator to join the string \"My name is \" with the bot variable followed by a period (.). Be mindful of spaces. Assign this concatenated string to the botIntroduction variable.\njs\nassert.equal(botIntroduction, \"My name is teacherBot.\");\nYou should have a fourth console.log() statement in your code.\njs\nassert.lengthOf(__helpers.removeJSComments(code).match(/console\\.log(.*)/g), 4);\nYour console statement should output the botIntroduction variable.\njs\nassert.match(__helpers.removeJSComments(code), /console\\.log\\s*\\(\\s*botIntroduction\\s*\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66ada3f46945763dd97f43f8.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4177486959ae41943bc88e169477bb61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68140ab94fd0ea19c62ca87e.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "id: 68140ab94fd0ea19c62ca87e\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nBelow your timeoutId variable, return a cleanup function that clears the timeout using clearTimeout(timeoutId) This prevents multiple delayed fetches from stacking up Make sure your cleanup function is an arrow function with an implicit return And with that your Fruit Search app is complete Try out your fruit search app by typing in the name of a fruit like apple or pear to see the results appear --hints--\nYou should return an arrow function that calls clearTimeout(timeoutId) at the end of the useEffect hook js\nassert match(\ncode,\n/return\\s*\\(\\s*\\)\\s*=>\\s*clearTimeout\\s*\\(\\s*timeoutId\\s*\\)/s\n);\n--seed--\n--seed-contents--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nfunction handleSubmit(e) {\ne preventDefault();\n}\nuseEffect(() => {\nif (query trim() === '') {\nsetResults([]);\nreturn;\n}\n--fcc-editable-region--\nconst timeoutId = setTimeout(async () => {\ntry {\nconst response = await fetch(https://fruit-search freecodecamp rocks/api/fruits q=${query});\nconst data = await response json();\nsetResults(data map(fruit => fruit name));\n} catch (error) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68140ab94fd0ea19c62ca87e.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2987454116c1baea8cea18ecfff773ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68140ab94fd0ea19c62ca87e.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "} ``` ```jsx const { useState, useEffect } = React; export function FruitsSearch() { const [query, setQuery] = useState(''); const [results, setResults] = useState([]); function handleSubmit(e) { e preventDefault(); } useEffect(() => { if (query trim() === '') { setResults([]); return; } --fcc-editable-region-- const timeoutId = setTimeout(async () => { try { const response = await fetch(https://fruit-search freecodecamp rocks/api/fruits q=${query}); const data = await response json(); setResults(data map(fruit => fruit name)); } catch (error) { consoleerror(\"Error fetching data:\", error);\n}\n}, 700);\n}, [query]);\n--fcc-editable-region--\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```\n--solutions--\n```html\nFruits Search\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f4f4f4;\n}\nsearch-container {\ntext-align: center;\nbackground: white;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nsearch-input {\npadding: 10px;\nwidth: 80%;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\n}\nresults {\ntext-align: left;\nmax-height: 150px;\noverflow-y: auto;\n} result-item {\npadding: 5px;\nborder-bottom: 1px solid #ddd;\n}\n```\n```jsx\nconst { useState, useEffect } = React;\nexport function FruitsSearch() {\nconst [query, setQuery] = useState('');\nconst [results, setResults] = useState([]);\nuseEffect(() => {\nif (query trim() === '') {\nsetResults([]);\nreturn;\n}\nconst timeoutId = setTimeout(async () => {\ntry {\nconst response = await fetch(`https://fruit-search freecodecamp rocks/api/fruits q=${query}`);\nconst data = await response json();\nsetResults(data map(fruit => fruit",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68140ab94fd0ea19c62ca87e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "defe6c7fef86a089ca0c682b4bdcc5e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68140ab94fd0ea19c62ca87e.md",
    "source_type": "git_repo",
    "title": "Fruits Search",
    "content": "max-height: 150px; overflow-y: auto; } result-item { padding: 5px; border-bottom: 1px solid #ddd; } ``` ```jsx const { useState, useEffect } = React; export function FruitsSearch() { const [query, setQuery] = useState(''); const [results, setResults] = useState([]); useEffect(() => { if (query trim() === '') { setResults([]); return; } const timeoutId = setTimeout(async () => { try { const response = await fetch(`https://fruit-search freecodecamp rocks/api/fruits q=${query}`); const data = await response json(); setResults(data map(fruit => fruitname));\n} catch (error) {\nconsole error(\"Error fetching data:\", error);\n}\n}, 700);\nreturn () => clearTimeout(timeoutId);\n}, [query]);\nreturn (\nSearch for fruits:\nsetQuery(e target value)}\n/>\n{results length > 0 (\nresults map(item => (\n{item}\n))\n) : (\nNo results found\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-fruit-search-app\\68140ab94fd0ea19c62ca87e.md",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0aaef099d9be6dbeb29e14706745d92e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adbc8a9793d64250f7e609.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66adbc8a9793d64250f7e609\ntitle: Step 9\nchallengeType: 1\ndashedName: step-9\n--description--\nIn the previous lectures, you learned how to reassign values to variables like this:\n```js\nlet name = \"John\";\nconsole.log(name); // \"John\"\nname = \"Jane\";\nconsole.log(name); // \"Jane\"\n```\nUsing reassignment, assign the string \"professorBot\" to the bot variable.\n--hints--\nYou should assign the string \"professorBot\" to the bot variable.\njs\nassert.strictEqual(bot, \"professorBot\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\nconst botIntroduction = \"My name is \" + bot + \".\";\nconsole.log(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \".\";\nconsole.log(botLocationSentence);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adbc8a9793d64250f7e609.md",
      "source_type": "git_repo"
    },
    "token_count": 245,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ceca2fb005e5c4077d447c1e6d8c55bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc6046acc18453decf577.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66adc6046acc18453decf577\ntitle: Step 12\nchallengeType: 1\ndashedName: step-12\n--description--\nTo see the bot's new nickname, you will need to log a new message to the console.\nCreate a new variable called newNicknameGreeting.\nThen use string concatenation to join the string \"I love my nickname but I wish people would call me \" with the bot variable followed by a period.\nAssign the result to the newNicknameGreeting variable.\nThen, log the value of newNicknameGreeting to the console.\n--hints--\nYou should have a variable called newNicknameGreeting.\njs\nassert.isNotNull(newNicknameGreeting);\nYour newNicknameGreeting variable should be a string.\njs\nassert.isString(newNicknameGreeting);\nYou should use string concatenation to join the string \"I love my nickname but I wish people would call me \" with the bot variable followed by a period.\njs\nassert.strictEqual(newNicknameGreeting, \"I love my nickname but I wish people would call me awesomeTeacherBot.\");\nYou should have a console statement in your code.\njs\nassert.lengthOf(__helpers.removeJSComments(code).match(/console\\.log(.*)/g), 7);\nYou should log the value of newNicknameGreeting to the console.\njs\nassert.match(__helpers.removeJSComments(code), /console\\.log\\s*\\(\\s*newNicknameGreeting\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\nconst botIntroduction = \"My name is \" + bot + \".\";\nconsole.log(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \".\";\nconsole.log(botLocationSentence);\nbot = \"professorBot\";\nconst nicknameIntroduction = \"My nickname is \" + bot + \".\";\nconsole.log(nicknameIntroduction);\nbot = \"awesomeTeacherBot\";\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1962,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc6046acc18453decf577.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "da4a4f8c98297d9d4894b3390281f22e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc42868cab843ccee87d9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66adc42868cab843ccee87d9\ntitle: Step 10\nchallengeType: 1\ndashedName: step-10\n--description--\nNow it is time to see the new bot value.\nStart by creating a new variable called nicknameIntroduction.\nUse string concatenation to join the string \"My nickname is \" with the bot variable followed by a period (.).\nAssign the resulting string to the nicknameIntroduction variable.\nThen, log the value of nicknameIntroduction to the console.\n--hints--\nYou should have a variable called nicknameIntroduction.\njs\nassert.isNotNull(nicknameIntroduction);\nYour nicknameIntroduction variable should be a string.\njs\nassert.isString(nicknameIntroduction);\nYou should use string concatenation to join the string \"My nickname is \" with the bot variable followed by a period (.). Be mindful of the spaces.\njs\nassert.strictEqual(nicknameIntroduction, \"My nickname is professorBot.\");\nYou should have a console statement in your code.\njs\nassert.lengthOf(__helpers.removeJSComments(code).match(/console\\.log(.*)/g), 6);\nYou should log the value of nicknameIntroduction to the console.\njs\nassert.match(__helpers.removeJSComments(code), /console\\.log\\s*\\(\\s*nicknameIntroduction\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\nconst botIntroduction = \"My name is \" + bot + \".\";\nconsole.log(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \".\";\nconsole.log(botLocationSentence);\nbot = \"professorBot\";\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1751,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc42868cab843ccee87d9.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "76316d447b4f66b1fbe71bcd50892b84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc5919c1853448f119d11.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66adc5919c1853448f119d11\ntitle: Step 11\nchallengeType: 1\ndashedName: step-11\n--description--\nNow it looks like the bot wants to change their nickname.\nUsing reassignment, assign the string \"awesomeTeacherBot\" to the bot variable.\n--hints--\nYou should assign the string \"awesomeTeacherBot\" to the bot variable.\njs\nassert.strictEqual(bot, \"awesomeTeacherBot\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\nconst botIntroduction = \"My name is \" + bot + \".\";\nconsole.log(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \".\";\nconsole.log(botLocationSentence);\nbot = \"professorBot\";\nconst nicknameIntroduction = \"My nickname is \" + bot + \".\";\nconsole.log(nicknameIntroduction);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 985,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc5919c1853448f119d11.md",
      "source_type": "git_repo"
    },
    "token_count": 232,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "01532ac9ac738236b8d915e5e380e19d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc82170acb1464bd348eb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66adc82170acb1464bd348eb\ntitle: Step 13\nchallengeType: 1\ndashedName: step-13\n--description--\nThe last few messages from the bot will focus on the bot's favorite subject.\nStart by creating a new variable called favoriteSubject and assign it the string \"Computer Science\".\n--hints--\nYou should have a variable called favoriteSubject.\njs\nassert.isNotNull(favoriteSubject);\nYour favoriteSubject variable should be a string.\njs\nassert.isString(favoriteSubject);\nYou should assign the string \"Computer Science\" to the favoriteSubject variable.\njs\nassert.strictEqual(favoriteSubject, \"Computer Science\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\nconst botIntroduction = \"My name is \" + bot + \".\";\nconsole.log(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \".\";\nconsole.log(botLocationSentence);\nbot = \"professorBot\";\nconst nicknameIntroduction = \"My nickname is \" + bot + \".\";\nconsole.log(nicknameIntroduction);\nbot = \"awesomeTeacherBot\";\nconst newNicknameGreeting = \"I love my nickname but I wish people would call me \" + bot + \".\";\nconsole.log(newNicknameGreeting);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adc82170acb1464bd348eb.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f2dba0927315f2c6412bd7fa834e0ff8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720b1f2680ec706ed534acf.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6720b1f2680ec706ed534acf\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will practice working with different pseudo-classes and pseudo-elements by designing a greeting card. The HTML boilerplate has been provided for you.\nStart the workshop by linking the styles.css file.\n--hints--\nYour link element should be within your head element.\njs\nconst link = document.querySelector('head > link');\nassert.isNotNull(link);\nYour link element should have a rel attribute with the value stylesheet.\njs\nconst linkRelValue = document.querySelector('link')?.getAttribute('rel');\nassert.strictEqual(linkRelValue, 'stylesheet');\nYour link element should have an href attribute with the value styles.css.\njs\nconst linkHrefValue = document.querySelector('link')?.dataset?.href;\nassert.match(linkHrefValue, /^(\\.\\/)?styles\\.css$/);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nGreeting Card\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1269,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720b1f2680ec706ed534acf.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b754fcde4cc7c9a74d4f5b22f1a55972",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adcf383276814776aba3ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66adcf383276814776aba3ca\ntitle: Step 14\nchallengeType: 1\ndashedName: step-14\n--description--\nNext, create a variable called favoriteSubjectSentence.\nUse string concatenation to join the string \"My favorite subject is \" with the favoriteSubject variable followed by a period.\nAssign the result to the favoriteSubjectSentence variable.\nThen, log the value of favoriteSubjectSentence to the console.\n--hints--\nYou should have a variable called favoriteSubjectSentence.\njs\nassert.isNotNull(favoriteSubjectSentence);\nYour favoriteSubjectSentence variable should be a string.\njs\nassert.isString(favoriteSubjectSentence);\nYou should use string concatenation to join the string \"My favorite subject is \" with the favoriteSubject variable followed by a period. Be mindful of the spaces.\njs\nassert.strictEqual(favoriteSubjectSentence, \"My favorite subject is Computer Science.\");\nYou should have a console statement in your code.\njs\nassert.lengthOf(__helpers.removeJSComments(code).match(/console\\.log(.*)/g), 8);\nYou should log the value of favoriteSubjectSentence to the console.\njs\nassert.match(__helpers.removeJSComments(code), /console\\.log\\s*\\(\\s*favoriteSubjectSentence\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconsole.log(\"I am excited to talk to you.\");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole.log(\"Allow me to introduce myself.\");\nconst botIntroduction = \"My name is \" + bot + \".\";\nconsole.log(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \".\";\nconsole.log(botLocationSentence);\nbot = \"professorBot\";\nconst nicknameIntroduction = \"My nickname is \" + bot + \".\";\nconsole.log(nicknameIntroduction);\nbot = \"awesomeTeacherBot\";\nconst newNicknameGreeting = \"I love my nickname but I wish people would call me \" + bot + \".\";\nconsole.log(newNicknameGreeting);\nconst favoriteSubject = \"Computer Science\";\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2060,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66adcf383276814776aba3ca.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "15faeb728db670247e73128fae4f2674",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720b3191bbafd269bae0ae8.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6720b3191bbafd269bae0ae8\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nCreate a div element that has an id of greeting-card and a class of card.\nInside the div element, add an h1 with the text Happy Birthday!. Then add a paragraph element with a class called message and the text Wishing you all the happiness and joy on your special day!.\n--hints--\nYou should have a div element.\njs\nassert.exists(document.querySelector(\"div\"));\nThe div element should have an id of greeting-card.\njs\nassert.strictEqual(document.querySelector(\"div\").id, \"greeting-card\");\nThe div element should have a class of card.\njs\nassert.strictEqual(document.querySelector(\"#greeting-card\").className, \"card\");\nYou should have an h1 element inside the div element.\njs\nassert.exists(document.querySelector(\"div > h1\"));\nThe h1 element should contain the text Happy Birthday!.\njs\nassert.strictEqual(document.querySelector(\"div > h1\").textContent.trim(), \"Happy Birthday!\");\nYou should have a p element inside the div.\njs\nassert.exists(document.querySelector(\"div > p\"));\nThe p element should have a class of message.\njs\nassert.exists(document.querySelector(\"div > p.message\"));\nThe p element should contain the text Wishing you all the happiness and joy on your special day!.\njs\nassert.strictEqual(document.querySelector(\"div > p.message\").textContent.trim(), \"Wishing you all the happiness and joy on your special day!\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720b3191bbafd269bae0ae8.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2e7b7dd1f83d311ba0ad9368520d6eb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720b7f3155a9278d6b6a8b8.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6720b7f3155a9278d6b6a8b8\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nNow it is time to style your greeting card.\nAdd a selector for the body element, then:\nchange the font-family to be Arial followed by the generic sans-serif,\ngive a padding on all sides of 40px,\nset the text-align property to center.\n--hints--\nYou should have a body selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle(\"body\"));\nYou should set font-family to \"Arial\", sans-serif in the body selector.\njs\nassert.oneOf(new __helpers.CSSHelp(document).getStyle(\"body\")?.getPropertyValue(\"font-family\"), [\"'Arial', sans-serif\", \"Arial, sans-serif\", '\"Arial\", sans-serif']);\nYou should set padding to 40px in the body selector.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\"body\")?.getPropertyValue(\"padding\"), \"40px\");\nYou should set text-align to center in the body selector.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\"body\")?.getPropertyValue(\"text-align\"), \"center\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\n```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720b7f3155a9278d6b6a8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "60d8f82665ea03f7eab78c983f4510fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720bbb38f697e2364f41c0e.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6720bbb38f697e2364f41c0e\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nNow it's time for some color. Give the body a background-color of brown and also give the .card a background-color of white.\n--hints--\nThe body element should have a background-color of brown.\njs\nassert.oneOf(new __helpers.CSSHelp(document).getStyle(\"body\")?.getPropertyValue(\"background-color\").toUpperCase(), [\"BROWN\", \"#A52A2A\", \"RGB(165, 42, 42)\", \"HSL(0, 59%, 41%)\"]);\nYou should have a .card selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle(\".card\"));\nThe .card element should have a background-color of white.\njs\nassert.oneOf(new __helpers.CSSHelp(document).getStyle(\".card\")?.getPropertyValue(\"background-color\").toLowerCase(), [\"white\", \"#fff\", \"#ffffff\", \"rgb(255, 255, 255)\", \"hsl(0, 0%, 100%)\"]);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\n```\n```css\n--fcc-editable-region--\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1533,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6720bbb38f697e2364f41c0e.md",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "032a7b540abd038df0d8b5402efe3455",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672b42241c0c6515f26786f4.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 672b42241c0c6515f26786f4\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nNow add a new div below the .message element. The new div should have a class attribute of card-links.\n--hints--\nThe last element inside #greeting-card should be a div.\njs\nassert.strictEqual(document.querySelector(\"#greeting-card\").lastElementChild.tagName, \"DIV\");\nThe new div should have a class of card-links.\njs\nassert.strictEqual(document.querySelector(\"#greeting-card\").lastElementChild.className, \"card-links\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\n--fcc-editable-region--\nWishing you all the happiness and joy on your special day!\n--fcc-editable-region--\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1395,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672b42241c0c6515f26786f4.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "717770936295a81cb9972fce033745e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6728fda085006772a247e779.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6728fda085006772a247e779\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nGive .card a max-width of 400px, a padding of 40px on all sides, and a margin of 0 for top and bottom and auto for left and right (use the shorthand property).\n--hints--\n.card should have a max-width of 400px.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\".card\")?.getPropertyValue(\"max-width\"), \"400px\");\n.card should have a padding of 40px.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\".card\")?.getPropertyValue(\"padding\"), \"40px\");\n.card should have a margin of 0 auto.\njs\nassert.oneOf(new __helpers.CSSHelp(document).getStyle(\".card\")?.getPropertyValue(\"margin\"), [\"0 auto\", \"0 auto 0 auto\", \"0 auto 0\", \"0px auto\", \"0px auto 0px auto\", \"0px auto 0px\"]);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n--fcc-editable-region--\n.card {\nbackground-color: white;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1573,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6728fda085006772a247e779.md",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "db3f316f167ce71b90584c920055e144",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6729005c87b6320356ac1140.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6729005c87b6320356ac1140\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nThe .card element needs some more styling: add a border-radius of 10px, and a box-shadow with a value of 0 4px 8px gray.\n--hints--\nThe .card selector should have a property border-radius with value 10px.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\".card\")?.getPropertyValue(\"border-radius\"), \"10px\");\nThe .card selector should have a property box-shadow with value 0 4px 8px gray.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document).getStyle(\".card\")?.getPropertyValue(\"box-shadow\"),\n\"gray 0px 4px 8px\" // this is the value outputted by getPropertyValue\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n--fcc-editable-region--\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1494,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6729005c87b6320356ac1140.md",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3e14c8eb9abae2648d711fa3a6e01a25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672b4434dd6d6a1edc405419.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 672b4434dd6d6a1edc405419\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nAdd two a elements inside the .card-links element.\nThe first one should have a text of Send Card, a class of send-link and an href of #send.\nThe second one should have a text of Share on Social Media, a class of share-link and an href of #share.\n--hints--\nThe first a element inside .card-links should have a text of Send Card.\njs\nassert.strictEqual(document.querySelectorAll(\".card-links > a\")[0].innerText, \"Send Card\");\nThe first a element should have a class with a value of send-link.\njs\nassert.strictEqual(document.querySelectorAll(\".card-links > a\")[0].className, \"send-link\");\nThe first a element should have an href with a value of #send.\njs\nassert.match(document.querySelectorAll(\".card-links > a\")[0].href, /#send$/);\nThe second a element inside .card-links should have a text of Share on Social Media.\njs\nassert.strictEqual(document.querySelectorAll(\".card-links > a\")[1].innerText, \"Share on Social Media\");\nThe second a element should have a class with a value of share-link.\njs\nassert.strictEqual(document.querySelectorAll(\".card-links > a\")[1].className, \"share-link\");\nThe second a element should have an href with a value of #share.\njs\nassert.match(document.querySelectorAll(\".card-links > a\")[1].href, /#share$/);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2311,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672b4434dd6d6a1edc405419.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5112fb3ef9d5647874a89cf76ae0603e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672e44e811e610232fead333.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 672e44e811e610232fead333\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nAdd an h2 to #send that contains the text Sending your card..., then add a p element with the text Card successfully sent to your recipient!.\n--hints--\nThe #send element should contain a h2 element.\njs\nassert.exists(document.querySelector(\"#send > h2\"));\nThe h2 element should contain the text Sending your card....\njs\nassert.strictEqual(document.querySelector(\"#send > h2\").innerText.trim(), \"Sending your card...\");\nThe second element inside #send should be a p element.\njs\nassert.strictEqual(document.querySelector(\"#send\").children[1].tagName, \"P\");\nThe p element should have the text Card successfully sent to your recipient!.\njs\nassert.strictEqual(document.querySelector(\"#send\").children[1].innerText.trim(), \"Card successfully sent to your recipient!\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672e44e811e610232fead333.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2d49ee4bab061ba27d5c860103fd5b34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672e410ddd98b409594890b6.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 672e410ddd98b409594890b6\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nAdd two section elements, one after the other. The first should have an id of send, the second one should have an id of share.\n--hints--\nYou should have two section elements.\njs\nassert.lengthOf(document.querySelectorAll(\"section\"), 2);\nThe first section should have an id of send.\njs\nassert.strictEqual(document.querySelectorAll(\"section\")[0].id, \"send\");\nThe second section should have an id of share.\njs\nassert.strictEqual(document.querySelectorAll(\"section\")[1].id, \"share\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\672e410ddd98b409594890b6.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ebe027300da00d5d6103de2690fef5e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67332db0f793bf08f2a18528.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67332db0f793bf08f2a18528\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nTime to fill the second section!\nAdd an h2 element to the #share element that contains the text Sharing your card..., then add a p element with the text Your card was shared on social media!.\n--hints--\nThe #share element should contain a h2 element.\njs\nassert.exists(document.querySelector(\"#share > h2\"));\nThe h2 element should contain the text Sharing your card....\njs\nassert.strictEqual(document.querySelector(\"#share > h2\").innerText.trim(), \"Sharing your card...\");\nThe second element inside #share should be a p element.\njs\nassert.strictEqual(document.querySelector(\"#share\").children[1].tagName, \"P\");\nThe p element should have the text Your card was shared on social media!.\njs\nassert.strictEqual(document.querySelector(\"#share\").children[1].innerText.trim(), \"Your card was shared on social media!\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67332db0f793bf08f2a18528.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ce4dedcdb63771f9ad27f98bda857732",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66add47d27763c4862492c8c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66add47d27763c4862492c8c\ntitle: Step 15\nchallengeType: 1\ndashedName: step-15\n--description--\nFor the final step, you will log the bot's message of \"Well, it was nice to talk to you Have a nice day \" to the console And with that, your greeting bot is complete --hints--\nYou should have a console statement in your code js\nassert lengthOf(__helpers removeJSComments(code) match(/console\\ log( *)/g), 9);\nYour console statement should log the string \"Well, it was nice to talk to you Have a nice day \" js\nassert match(__helpers removeJSComments(code), /console\\ log\\s*\\(\\s*[\"']Well\\s*,\\s*it\\s*was\\s*nice\\s*to\\s*talk\\s*to\\s*you\\s*\\ \\s*Have\\s*a\\s*nice\\s*day\\s* [\"']\\s*\\)\\s*/\n);\n--seed--\n--seed-contents--\n```js\nconsole log(\"Hi there \");\nconsole log(\"I am excited to talk to you \");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole log(\"Allow me to introduce myself \");\nconst botIntroduction = \"My name is \" + bot + \" \";\nconsole log(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \" \";\nconsole log(botLocationSentence);\nbot = \"professorBot\";\nconst nicknameIntroduction = \"My nickname is \" + bot + \" \";\nconsole log(nicknameIntroduction);\nbot = \"awesomeTeacherBot\";\nconst newNicknameGreeting = \"I love my nickname but I wish people would call me \" + bot + \" \";\nconsole log(newNicknameGreeting);\nconst favoriteSubject = \"Computer Science\";\nconst favoriteSubjectSentence = \"My favorite subject is \" + favoriteSubject + \" \";\nconsole log(favoriteSubjectSentence);\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```js\nconsole log(\"Hi there \");\nconsole log(\"I am excited to talk to you \");\nlet bot;\nlet botLocation;\nbot = \"teacherBot\";\nbotLocation = \"the universe\";\nconsole log(\"Allow me to introduce myself \");\nconst botIntroduction = \"My name is \" + bot + \" \";\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2554,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66add47d27763c4862492c8c.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0dc0c13f46393ebbb7dd20bd187f8d6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66add47d27763c4862492c8c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "+ bot + \" \"; console log(newNicknameGreeting); const favoriteSubject = \"Computer Science\"; const favoriteSubjectSentence = \"My favorite subject is \" + favoriteSubject + \" \"; console log(favoriteSubjectSentence); --fcc-editable-region-- --fcc-editable-region-- ``` --solutions-- ```js console log(\"Hi there \"); console log(\"I am excited to talk to you \"); let bot; let botLocation; bot = \"teacherBot\"; botLocation = \"the universe\"; console log(\"Allow me to introduce myself \"); const botIntroduction = \"My name is \" + bot + \" \"; consolelog(botIntroduction);\nconst botLocationSentence = \"I live in \" + botLocation + \" \";\nconsole log(botLocationSentence);\nbot = \"professorBot\";\nconst nicknameIntroduction = \"My nickname is \" + bot + \" \";\nconsole log(nicknameIntroduction);\nbot = \"awesomeTeacherBot\";\nconst newNicknameGreeting = \"I love my nickname but I wish people would call me \" + bot + \" \";\nconsole log(newNicknameGreeting);\nconst favoriteSubject = \"Computer Science\";\nconst favoriteSubjectSentence = \"My favorite subject is \" + favoriteSubject + \" \";\nconsole log(favoriteSubjectSentence);\nconsole log(\"Well, it was nice to talk to you Have a nice day \");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2554,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-bot\\66add47d27763c4862492c8c.md",
      "source_type": "git_repo"
    },
    "token_count": 265,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6c5ac7b0220367cd8e761b1d8e8d5fd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67332e9debcc820d18e3e169.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67332e9debcc820d18e3e169\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nAdd a new selector that changes the background-color of the .card element to khaki when it is hovered over.\n--hints--\nYou should have a .card:hover selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle(\".card:hover\"));\nThe .card:hover selector should have a background-color set to khaki.\njs\nassert.oneOf(new __helpers.CSSHelp(document).getStyle(\".card:hover\")?.getPropertyValue(\"background-color\").toLowerCase(), [\"khaki\", \"#f0e68c\", \"rgb(240, 230, 140)\", \"hsl(54, 77%, 75%)\"]);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\nSharing your card...\nYour card was shared on social media!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67332e9debcc820d18e3e169.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7774356d5e8b5185fdeeae6b89c91abe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67332fff82eb28128f08ec2c.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67332fff82eb28128f08ec2c\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nThe transform property can transform the element look. For example, giving it a value of scale(0.9) would make the element 10% smaller.\ncss\np {\ntransform: scale(0.9);\n}\nAdd a transform property to the .card:hover selector and set to scale(1.1).\n--hints--\nThe .card:hover selector should have transform: scale(1.1).\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\".card:hover\")?.getPropertyValue(\"transform\"), \"scale(1.1)\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\nSharing your card...\nYour card was shared on social media!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n}\n--fcc-editable-region--\n.card:hover {\nbackground-color: khaki;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1859,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67332fff82eb28128f08ec2c.md",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "90e2b8142d999e6fc2aa32618e74f22f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6733319f1d586b1923e029e3.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6733319f1d586b1923e029e3\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nYou can add an emoji in front of the title using the pseudo-element ::before of the h1 element.\nCreate an h1::before selector, give it a content property and set its value to \"🥳 \" (note there is a space after the emoji).\n--hints--\nYou should have an h1::before selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle(\"h1::before\"));\nThe h1::before selector should have a content property set to \"🥳 \".\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document).getStyle(\"h1::before\")?.getPropertyValue(\"content\"),\n`\"🥳 \"`\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\nSharing your card...\nYour card was shared on social media!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0.3s, background-color 0.3s ease\n}\n.card:hover {\nbackground-color: khaki;\ntransform: scale(1.1);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2050,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6733319f1d586b1923e029e3.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "57d9f3ccd877404a2e35b83d4fd07449",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673333130a2c40204162f0c7.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 673333130a2c40204162f0c7\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nThe .message element needs some styling. Give it:\na font-size of 1.2em,\na color of gray,\na margin-bottom of 20px.\n--hints--\nYou should have a .message selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle(\".message\"));\nThe .message selector should have a font-size property set to 1.2em.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\".message\")?.getPropertyValue(\"font-size\"), \"1.2em\");\nThe .message selector should have a color property set to gray.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\".message\")?.getPropertyValue(\"color\"), \"gray\");\nThe .message selector should have a margin-bottom property set to 20px.\njs\nassert.strictEqual(new __helpers.CSSHelp(document).getStyle(\".message\")?.getPropertyValue(\"margin-bottom\"), \"20px\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\nSharing your card...\nYour card was shared on social media!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0.3s, background-color 0.3s ease\n}\n.card:hover {\nbackground-color: khaki;\ntransform: scale(1.1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673333130a2c40204162f0c7.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e7cf5ffd68de998d1726a24b73cc7fd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673332a6b63f9f1e1f81ba9b.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 673332a6b63f9f1e1f81ba9b\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nNow you can do something similar to add the emoji also after the title.\nCreate a selector that targets the pseudo-element ::after of the h1 element. Give it a content property and set its value to \" 🥳\" (note there is a space before the emoji).\n--hints--\nYou should have an h1::after selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle(\"h1::after\"));\nThe h1::after selector should have a content property set to \" 🥳\".\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document).getStyle(\"h1::after\")?.getPropertyValue(\"content\"),\n`\" 🥳\"`\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\nSharing your card...\nYour card was shared on social media!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0.3s, background-color 0.3s ease\n}\n.card:hover {\nbackground-color: khaki;\ntransform: scale(1.1);\n}\n--fcc-editable-region--\nh1::before {\ncontent: \"🥳 \";\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2102,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673332a6b63f9f1e1f81ba9b.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9b22298b6d9eef43ece17626c5769a86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333082ab35e414eb4ea70d.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333082ab35e414eb4ea70d\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nWhen the a elements are hovered, the color of the background makes a transition to a different color You can regulate how that transition happens with the transition property:\ncss\na {\ntransition: color 1s linear;\n}\nThe values that the transition property accepts are, in order, the property that the transition is applied to, the duration of the transition, and then the timing If there are multiple properties that have a transition, you can write the values for each separated by a comma:\ncss\np {\ntransition: property1 0 1s, property2 0 6s linear;\n}\nIf a value is omitted, like the timing for the first property, a default value is applied Add to the card selector transition: transform 0 3s, background-color 0 3s ease Try it out, the hover transition is complete --hints--\nThe card selector should have a property transition set to transform 0 3s, background-color 0 3s ease js\nassert oneOf(\nnew __helpers CSSHelp(document) getStyle(\" card\") getPropertyValue(\"transition\"),\n[\n\"transform 0 3s ease 0s, background-color 0 3s ease 0s\", // this is what comes out of `getPropertyValue`\n\"transform 0 3s, background-color 0 3s\" // different environment got this instead\n]\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n--fcc-editable-region-- card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2656,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333082ab35e414eb4ea70d.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7ad9e9b060399051738b71e51f1b35d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673338ebd152d736d1bd2aa4.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 673338ebd152d736d1bd2aa4\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nCreate a pseudo-class selector that targets the .card-links a elements when hovered over.\nThe background-color should change to orangered.\n--hints--\nYou should have a .card-links a:hover selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle(\".card-links a:hover\"));\nThe .card-links a:hover selector should have the background-color property set to orangered.\njs\nassert.oneOf(\nnew __helpers.CSSHelp(document).getStyle(\".card-links a:hover\")?.getPropertyValue(\"background-color\").toLowerCase(),\n[\"orangered\", \"#ff4500\", \"rgb(255, 69, 0)\",  \"hsl(16, 100%, 50%)\"]\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\nSharing your card...\nYour card was shared on social media!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0.3s, background-color 0.3s ease\n}\n.card:hover {\nbackground-color: khaki;\ntransform: scale(1.1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n}\n.message {\nfont-size: 1.2em;\ncolor: gray;\nmargin-bottom: 20px;\n}\n.card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n}\n.card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2469,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673338ebd152d736d1bd2aa4.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0634fb2f302144fd7301d92df432da91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333a3a400b0a3c68854bcc.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333a3a400b0a3c68854bcc\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nAdd a transition property to the .card-links a selector and give it a value of background-color 0.3s ease.\n--hints--\nThe .card-links a selector should have a transition property set to background-color 0.3s ease.\njs\nassert.oneOf(\nnew __helpers.CSSHelp(document).getStyle(\".card-links a\")?.getPropertyValue(\"transition\"),\n[\n\"background-color 0.3s ease 0s\", // this is what comes out of `getPropertyValue`\n\"background-color 0.3s\" // different environment got this\n]\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday!\nWishing you all the happiness and joy on your special day!\nSend Card\nShare on Social Media\nSending your card...\nCard successfully sent to your recipient!\nSharing your card...\nYour card was shared on social media!\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}\n.card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0.3s, background-color 0.3s ease\n}\n.card:hover {\nbackground-color: khaki;\ntransform: scale(1.1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n}\n.message {\nfont-size: 1.2em;\ncolor: gray;\nmargin-bottom: 20px;\n}\n.card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n}\n--fcc-editable-region--\n.card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\n}\n--fcc-editable-region--\n.card-links a:hover {\nbackground-color: orangered;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333a3a400b0a3c68854bcc.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "75fd3c7ad7b13dd3573dfc46df8fb318",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6733352ce2a5642827b4f7f0.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 6733352ce2a5642827b4f7f0\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nAdd a card-links selector, and set the margin-top property to 20px You can add display: flex to set an element to use flexbox, you will learn more about flexbox later in the course, you can consider this a small preview To space the two links so that they have the same space around, add a display property set to flex, and a justify-content set to space-around --hints--\nYou should have a card-links selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\" card-links\"));\nThe card-links selector should have a margin-top property set to 20px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\" card-links\") getPropertyValue(\"margin-top\"), \"20px\");\nThe card-links selector should have a display property set to flex js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\" card-links\") getPropertyValue(\"display\"), \"flex\");\nThe card-links selector should have a justify-content property set to space-around js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\" card-links\") getPropertyValue(\"justify-content\"), \"space-around\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2773,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\6733352ce2a5642827b4f7f0.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ffa4f2303382f4cf2f3b406bb0aff5c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673337337f794d3025ded433.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 673337337f794d3025ded433\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nTarget the a elements inside card-links and give them:\na text-decoration property set to none a font-size property set to 1em\na padding property set to 10px 20px\na border-radius property set to 5px\na color property set to white\na background-color property set to midnightblue\n--hints--\nYou should have a card-links a selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\" card-links a\"));\nThe card-links a selector should have a text-decoration property set to none js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"text-decoration\"), \"none\");\nThe card-links a selector should have a font-size property set to 1em js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"font-size\"), \"1em\");\nThe card-links a selector should have a padding property set to 10px 20px js\nassert oneOf(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"padding\"), [\"10px 20px\", \"10px 20px 10px\", \"10px 20px 10px 20px\"]);\nThe card-links a selector should have a border-radius property set to 5px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"border-radius\"), \"5px\");\nThe card-links a selector should have a color property set to white js\nassert oneOf(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"color\") toLowerCase(), [\"white\", \"#ffffff\", \"#fff\", \"rgb(255, 255, 255)\", \"hsl(0, 0%, 100%)\"]);\nThe card-links a selector should have a background-color property set to midnightblue js\nassert oneOf(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"background-color\") toLowerCase(), [\"midnightblue\", \"#191970\", \"rgb(25, 25, 112)\", \"hsl(240, 64%, 27%)\"]);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3629,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673337337f794d3025ded433.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5add8b2cfdade42233876762def77149",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673337337f794d3025ded433.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "strictEqual(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"border-radius\"), \"5px\"); The card-links a selector should have a color property set to white js assert oneOf(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"color\") toLowerCase(), [\"white\", \"#ffffff\", \"#fff\", \"rgb(255, 255, 255)\", \"hsl(0, 0%, 100%)\"]); The card-links a selector should have a background-color property set to midnightblue js assert oneOf(new __helpers CSSHelp(document) getStyle(\" card-links a\") getPropertyValue(\"background-color\") toLowerCase(), [\"midnightblue\", \"#191970\", \"rgb(25, 25, 112)\", \"hsl(240, 64%, 27%)\"]); --seed-- --seed-contents-- ```html Greeting Card Happy BirthdayWishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n} card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3629,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\673337337f794d3025ded433.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e7dd8e28a10b9ff47dc0324dbfb5a1f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333b1d5f4a7340a121973a.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333b1d5f4a7340a121973a\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nAdd a new selector that targets the card-links a elements when focused Set the outline property to 2px solid yellow --hints--\nYou should have a card-links a:focus selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\" card-links a:focus\"));\nThe card-links a:focus selector should have an outline property set to 2px solid yellow js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle(\" card-links a:focus\") getPropertyValue(\"outline\"),\n\"yellow solid 2px\" // it comes out like this from getPropertyValue\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n} card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n} card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\ntransition: background-color 0 3s ease;\n} card-links a:hover {\nbackground-color: orangered;\n} card-links a:active {\nbackground-color: midnightblue;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2586,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333b1d5f4a7340a121973a.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "76cfdeadf8ba4763fdde8b0f8009e85a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333aa0e231d43e7556c644.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333aa0e231d43e7556c644\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nAdd a new selector that targets the card-links a elements when they are active Set the background-color to midnightblue --hints--\nYou should have a card-links a:active selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\" card-links a:active\"));\nThe card-links a:active selector should have a background-color of midnightblue js\nassert oneOf(\nnew __helpers CSSHelp(document) getStyle(\" card-links a:active\") getPropertyValue(\"background-color\") toLowerCase(),\n[\"midnightblue\", \"#191970\", \"rgb(25, 25, 112)\", \"hsl(240, 64%, 27%)\"]\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n} card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n} card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\ntransition: background-color 0 3s ease;\n} card-links a:hover {\nbackground-color: orangered;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333aa0e231d43e7556c644.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "249443b4464b2fda36547793a57c0568",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333ba820f99c43904c9eff.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333ba820f99c43904c9eff\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nCreate a new selector that targets the card-links a elements if they have already been visited Set the property color to crimson --hints--\nYou should have a card-links a:visited selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\" card-links a:visited\"));\nThe card-links a:visited selector should have the property color set to crimson js\nassert oneOf(new __helpers CSSHelp(document) getStyle(\" card-links a:visited\") getPropertyValue(\"color\") toLowerCase(), [\"crimson\", \"#dc143c\", \"rgb(220, 20, 60)\", \"hsl(348, 83%, 47%)\"]);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n} card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n} card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\ntransition: background-color 0 3s ease;\n} card-links a:hover {\nbackground-color: orangered;\n} card-links a:active {\nbackground-color: midnightblue;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2649,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333ba820f99c43904c9eff.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "31232a2a39095aa00fb40686eaca9810",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333ba820f99c43904c9eff.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "3s ease } card:hover { background-color: khaki; transform: scale(1 1); } h1::before { content: \"🥳 \"; } h1::after { content: \" 🥳\"; } message { font-size: 1 2em; color: gray; margin-bottom: 20px; } card-links { margin-top: 20px; display: flex; justify-content: space-around; } card-links a { text-decoration: none; font-size: 1em; padding: 10px 20px; border-radius: 5px; color: white; background-color: midnightblue; transition: background-color 0 3s ease; } card-links a:hover { background-color: orangered; } card-links a:active { background-color: midnightblue; }card-links a:focus {\noutline: 2px solid yellow;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2649,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333ba820f99c43904c9eff.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f43e05585cee30f48bc9195fb0ba2bf9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333d70431f8a4b02596f3c.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333d70431f8a4b02596f3c\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nAnother value that can be used for the transform property is skewX, this function skews the element horizontally css\ndiv {\ntransform: skewX(7deg);\n}\nAdd a selector that targets the section elements when hovered Set the transform property to skewX(10deg) --hints--\nYou should have a section:hover selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\"section:hover\"));\nThe section:hover selector should have a transform property set to skewX(10deg) js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle(\"section:hover\") getPropertyValue(\"transform\"),\n\"skewX(10deg)\"\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n} card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n} card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\ntransition: background-color 0 3s ease;\n} card-links a:hover {\nbackground-color: orangered;\n} card-links a:active {\nbackground-color: midnightblue;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333d70431f8a4b02596f3c.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b3c552b3cfc40ea6ecca98c05248805b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333d70431f8a4b02596f3c.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "3s ease } card:hover { background-color: khaki; transform: scale(1 1); } h1::before { content: \"🥳 \"; } h1::after { content: \" 🥳\"; } message { font-size: 1 2em; color: gray; margin-bottom: 20px; } card-links { margin-top: 20px; display: flex; justify-content: space-around; } card-links a { text-decoration: none; font-size: 1em; padding: 10px 20px; border-radius: 5px; color: white; background-color: midnightblue; transition: background-color 0 3s ease; } card-links a:hover { background-color: orangered; } card-links a:active { background-color: midnightblue; }card-links a:focus {\noutline: 2px solid yellow;\n} card-links a:visited {\ncolor: crimson;\n}\nsection {\nmargin: 20px auto;\nmax-width: 600px;\nbackground-color: whitesmoke;\npadding: 20px;\nborder-radius: 10px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333d70431f8a4b02596f3c.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7e682d9a90b9ff19b47e548dc2fdf362",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a8290a27c2c625e2355042.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66a8290a27c2c625e2355042\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will practice working with HTML forms by building a Hotel Feedback Form.\nStart by adding the <!DOCTYPE html> followed by an html element with a lang attribute of en.\nInside your html element, add a head element.\n--hints--\nYou should have the <!DOCTYPE html>.\njs\nassert.match(code, /<!DOCTYPE\\s+html>/i);\nYou should have an opening html tag with the language set to english.\njs\nassert.match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>/gi);\nYou should have a closing html tag.\njs\nassert.match(code, /<\\/html>/i);\nYour DOCTYPE should come before the html element.\njs\nassert.match(code, /<!DOCTYPE\\s+html>[.\\n\\s]*<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>/im)\nYou should have an opening head tag.\njs\nassert.match(code, /<head>/i);\nYou should have a closing head tag.\njs\nassert.match(code, /<\\/head>/i);\nYour opening head tag should come before the closing head tag.\njs\nassert.match(code, /<head>[.\\n\\s]*<\\/head>/im)\nYour head element should be inside the html element.\njs\nassert.match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>[.\\n\\s]*<head>[.\\n\\s]*<\\/head>[.\\n\\s]*<\\/html>/im)\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a8290a27c2c625e2355042.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f0b546b706e52100f6e717d204fc195b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a833e88d08593618f22285.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66a833e88d08593618f22285\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nInside your head element, nest a meta element with the charset attribute set to the value \"UTF-8\".\nBelow that meta element, add a title element. The title element's text should be Hotel Feedback Form.\n--hints--\nYou should have a meta element.\njs\nassert.isNotNull(document.querySelector(\"meta\"));\nThe meta element is a void element, it should not have an end tag </meta>.\njs\nassert.notMatch(code, /<\\/meta>/i);\nYour meta tag should have a charset attribute.\njs\nassert.match(code, /<meta\\s+charset\\s*/i);\nYour charset attribute should have a value of \"UTF-8\".\njs\nassert.match(code, /charset\\s*=\\s*('|\")UTF-8\\1/i);\nYour meta element should be nested inside your head element.\njs\nassert.match(code, /<head>.*\\s*<meta.*charset.*>.*\\s*<\\/head>/si);\nYou should have an opening title tag.\njs\nassert.match(code, /<title>/i);\nYou should have a closing title tag.\njs\nassert.match(code, /<\\/title>/i);\nYour title element should be nested in your head element.\njs\nassert.match(code, /<head>.*\\s*<title>.*<\\/title>.*\\s*<\\/head>/si);\nYour title element should have the text Hotel Feedback Form. You may need to check your spelling.\njs\nconst titleText = document.querySelector('title')?.innerText.trim();\nassert.strictEqual(titleText, \"Hotel Feedback Form\");\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1657,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a833e88d08593618f22285.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3deedae54c4e943f55c34c61560332ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a8347f97a33e36ffc81b9f.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a8347f97a33e36ffc81b9f\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nTo prepare to create some actual content, add a body element below the head element.\n--hints--\nYou should have an opening body tag.\njs\nassert.match(code, /<body>/i);\nYou should have a closing body tag.\njs\nassert.match(code, /<\\/body>/i);\nYou should not change your head element. Make sure you did not delete your closing tag.\njs\nassert.match(code, /<head>/i);\nassert.match(code, /<\\/head>/i);\nYour body element should come after your head element.\njs\nassert.match(code, /<\\/head>[.\\n\\s]*<body>/im);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nHotel Feedback Form\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 889,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a8347f97a33e36ffc81b9f.md",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1e53b1d8e0e23d2f119d1c7a826930e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a8380d911e3f4270d5cadc.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a8380d911e3f4270d5cadc\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nNow, it is time to add the main element which represents the main content of the page.\n--hints--\nYou should have an opening main tag.\njs\nassert.match(code, /<main>/i);\nYou should have a closing main tag.\njs\nassert.match(code, /<\\/main>/i);\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 804,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a8380d911e3f4270d5cadc.md",
      "source_type": "git_repo"
    },
    "token_count": 152,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5ce7210e754b872e806ec9e8fb23602d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83601cd819e37f0dccd14.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a83601cd819e37f0dccd14\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nFor the introductory text, you will want to display the main title followed by a short note about leaving feedback.\nInside your body element, add a header element.\nInside the header element, add an h1 element. The h1 element's text should be Hotel Feedback Form.\nBelow your h1 element, add a p element. The p element's text should be Thank you for staying with us. Please provide feedback on your recent stay.\n--hints--\nYou should have an opening header tag.\njs\nassert.match(code, /<header>/i);\nYou should have a closing header tag.\njs\nassert.match(code, /<\\/header>/i);\nYou should have an opening h1 tag.\njs\nassert.match(code, /<h1>/i);\nYou should have a closing h1 tag.\njs\nassert.match(code, /<\\/h1>/i);\nYour h1 element should have the text Hotel Feedback Form.\njs\nconst h1 = document.querySelector('h1');\nassert.strictEqual(h1?.innerText.trim(), 'Hotel Feedback Form');\nYour h1 element should be inside the header element.\njs\nconst h1 = document.querySelector('h1');\nassert.strictEqual(h1?.parentElement.tagName, 'HEADER');\nYou should have an opening p tag.\njs\nassert.match(code, /<p>/i);\nYou should have a closing p tag.\njs\nassert.match(code, /<\\/p>/i);\nYour paragraph element should have the text Thank you for staying with us. Please provide feedback on your recent stay.\njs\nconst pElement = document.querySelector('header p');\nassert.strictEqual(pElement?.innerText.trim(), 'Thank you for staying with us. Please provide feedback on your recent stay.');\nYour paragraph element should be inside your header.\njs\nconst pElement = document.querySelector('p');\nassert.strictEqual(pElement?.parentElement.tagName, 'HEADER');\nYour paragraph element should come after your h1.\njs\nconst pElement = document.querySelector('p');\nassert.strictEqual(pElement?.previousElementSibling.tagName, 'H1');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2300,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83601cd819e37f0dccd14.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f57e1075373e185ff836a63e1dd290a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333c34e357d34620217615.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333c34e357d34620217615\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nCreate a selector for the section elements, and give them:\na margin property set to 20px auto,\na max-width set to 600px a background-color property set to whitesmoke\na padding property set to 20px\na border-radius property set to 10px\n--hints--\nYou should have a section selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\"section\"));\nThe section selector should have a margin property set to 20px auto js\nassert oneOf(new __helpers CSSHelp(document) getStyle(\"section\") getPropertyValue(\"margin\"), [\"20px auto\", \"20px auto 20px\", \"20px auto 20px auto\"]);\nThe section selector should have a max-width property set to 600px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\"section\") getPropertyValue(\"max-width\"), \"600px\");\nThe section selector should have a background-color property set to whitesmoke js\nassert oneOf(new __helpers CSSHelp(document) getStyle(\"section\") getPropertyValue(\"background-color\") toLowerCase(), [\"whitesmoke\", \"#f5f5f5\", \"rgb(245, 245, 245)\", \"hsl(0, 0%, 96%)\"]);\nThe section selector should have a padding property set to 20px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\"section\") getPropertyValue(\"padding\"), \"20px\");\nThe section selector should have a border-radius property set to 10px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\"section\") getPropertyValue(\"border-radius\"), \"10px\");\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333c34e357d34620217615.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "dd5981131bfd817910ab1cc2c9fdefef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333c34e357d34620217615.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "The section selector should have a border-radius property set to 10px js assert strictEqual(new __helpers CSSHelp(document) getStyle(\"section\") getPropertyValue(\"border-radius\"), \"10px\"); --seed-- --seed-contents-- ```html Greeting Card Happy Birthday Wishing you all the happiness and joy on your special day Send Card Share on Social Media Sending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ``` ```css body { font-family: Arial, sans-serif; padding: 40px; text-align: center; background-color: brown; }card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n} card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n} card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\ntransition: background-color 0 3s ease;\n} card-links a:hover {\nbackground-color: orangered;\n} card-links a:active {\nbackground-color: midnightblue;\n} card-links a:focus {\noutline: 2px solid yellow;\n} card-links a:visited {\ncolor: crimson;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333c34e357d34620217615.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "63dafa6597ae47dca16202d64af6e63b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83e5e491625454b6f62c3.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a83e5e491625454b6f62c3\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nForms consist of inputs where users can input their data. You can group related inputs together using the fieldset element.\nHere is an example of using a fieldset element:\n```html\n```\nInside your form element, add a fieldset element.\n--hints--\nYou should have an opening fieldset tag.\njs\nassert.match(code, /<fieldset>/i);\nYou should have a closing fieldset tag.\njs\nassert.match(code, /<\\/fieldset>/i);\nYour fieldset element should be inside the form element.\njs\nassert.isNotNull(document.querySelector('form fieldset'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1316,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83e5e491625454b6f62c3.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "276e13eedc70491769f9f02efbbe13e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83fec026a7a4631e084d2.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a83fec026a7a4631e084d2\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nWhen working with fieldset elements, it is common to use a caption to describe the group of inputs. You can use the legend element for this.\nHere is an example of using a legend element:\n```html\nPersonal Information\n```\nInside your fieldset element, add a legend element with the text Personal Information.\n--hints--\nYou should have an opening legend tag.\njs\nassert.match(code, /<legend>/);\nYou should have a closing legend tag.\njs\nassert.match(code, /<\\/legend>/);\nYour legend element should be inside the fieldset element.\njs\nassert.isNotNull(document.querySelector('fieldset legend'));\nYour legend element should contain the text Personal Information.\njs\nconst legend = document.querySelector('fieldset legend');\nassert.strictEqual(legend?.innerText.trim(), 'Personal Information');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83fec026a7a4631e084d2.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e5531561094bc75bf6dea6aaca5e99cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83bdcf425e7446900b7c4.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a83bdcf425e7446900b7c4\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nIn the previous lectures, you learned how to work with the form element like this:\n```html\n```\nThe action attribute is used to specify where the form data should be sent when the form is submitted.\nThe method attribute is used to specify the HTTP method to use when sending the form data. The most common methods are GET and POST.\nNOTE: You will learn about how HTTP methods work in later modules.\nInside your main element, add a form element with an action attribute set to \"https://hotel-feedback.freecodecamp.org\" and a method attribute set to \"POST\".\n--hints--\nYou should have an opening form tag.\njs\nassert.match(code, /<form.*>/i);\nYou should have a closing form tag.\njs\nassert.match(code, /<\\/form>/i);\nYour form element should have an action attribute set to \"https://hotel-feedback.freecodecamp.org\".\njs\nconst formElement = document.querySelector('form');\nassert.strictEqual(formElement?.getAttribute('action'), 'https://hotel-feedback.freecodecamp.org');\nYour form element should have a method attribute set to \"POST\".\njs\nconst formElement = document.querySelector('form');\nassert.strictEqual(formElement?.getAttribute('method'), 'POST');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a83bdcf425e7446900b7c4.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a3aa53c273e7bcdf7e952e69bf93f37e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a84111965a0c46df6bbd0a.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a84111965a0c46df6bbd0a\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nIn the previous lectures, you learned how to associate a label element with an input like this:\nhtml\n<label for=\"name\">Name:</label>\n<input type=\"text\" id=\"name\" name=\"name\">\nThe for attribute on the label element should match the id attribute on the input element. This is known as an explicit association.\nBelow your legend element, add a label element with the text of Name (required):. Set its for attribute to the value of \"full-name\".\nThen below your label element, add an input element with no attributes. In the next steps, you will add the necessary attributes.\n--hints--\nYou should have an opening label tag.\njs\nassert.match(code, /<label.*>/);\nYou should have a closing label tag.\njs\nassert.match(code, /<\\/label>/);\nYour label element should be placed below your legend inside the fieldset element.\njs\nassert.isNotNull(document.querySelector('fieldset legend + label'));\nYour label element should have a for attribute with the value of \"full-name\".\njs\nconst label = document.querySelector('fieldset legend + label');\nassert.strictEqual(label?.getAttribute('for'), 'full-name');\nYour label element should have the text of Name (required):.\njs\nconst label = document.querySelector('fieldset legend + label');\nassert.strictEqual(label?.innerText.trim(), 'Name (required):');\nYou should have an input element below your label element.\njs\nassert.isNotNull(document.querySelector('fieldset label + input'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\n--fcc-editable-region--\nPersonal Information\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2268,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a84111965a0c46df6bbd0a.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "01466ac55c20a0fc1fd43ecd50731d53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a93730719e1f68410cce54.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a93730719e1f68410cce54\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nThe name attribute is used to identify form data after it has been submitted to the server.\nHere is an example of how to use the name attribute:\nhtml\n<input type=\"email\" name=\"email\">\nAdd a name attribute to the input element with the value of \"name\".\n--hints--\nYou should not remove the existing input element.\njs\nassert.isNotNull(document.querySelector('fieldset input'));\nYou should not create a new input element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset input'), 1);\nYour input element should have a name attribute with the value of \"name\".\njs\nconst input = document.querySelector('fieldset input');\nassert.strictEqual(input?.getAttribute('name'), 'name');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a93730719e1f68410cce54.md",
      "source_type": "git_repo"
    },
    "token_count": 233,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2052f2929b5958e74e622bd9ac40bbad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a930b20f589b6664c51cb0.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a930b20f589b6664c51cb0\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nWhen a user provides their full name, the input will accept plaintext.\nIn the previous lectures, you learned how to work with the type attribute like this:\nhtml\n<input type=\"text\">\nFor your existing input element, add a type attribute set to \"text\".\nAlso give the input element an id attribute with the value of \"full-name\".\n--hints--\nYou should not remove the existing input element.\njs\nassert.isNotNull(document.querySelector('fieldset input'));\nYou should not create a new input element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset input'), 1);\nYour input element should have a type attribute with the value of \"text\".\njs\nconst input = document.querySelector('fieldset input');\nassert.strictEqual(input?.getAttribute('type'), 'text');\nYour input element should have an id attribute with the value of \"full-name\".\njs\nconst input = document.querySelector('fieldset input');\nassert.strictEqual(input?.getAttribute('id'), 'full-name');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1847,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a930b20f589b6664c51cb0.md",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4c4d7ab7a756a6e9b23edf203d11014d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a937e74920ba68ebe5e86d.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a937e74920ba68ebe5e86d\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nIn the previous lectures, you learned how to work with the placeholder and required attributes like this:\nhtml\n<input type=\"text\" placeholder=\"Ex. John Doe\" required>\nFor your existing input element, add a placeholder attribute with the value of \"Ex. John Doe\".\nAlso, add the required attribute to the input element.\n--hints--\nYou should not remove the existing input element.\njs\nassert.isNotNull(document.querySelector('fieldset input'));\nYour input should have a placeholder attribute with the value of \"Ex. John Doe\".\njs\nassert.strictEqual(document.querySelector('fieldset input')?.getAttribute('placeholder'), 'Ex. John Doe');\nYour input should have a required attribute.\njs\nassert.isNotNull(document.querySelector('fieldset input[required]'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1656,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a937e74920ba68ebe5e86d.md",
      "source_type": "git_repo"
    },
    "token_count": 245,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7ca9db11b415dab3ef2bf947a7fe0035",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a93bbe65a26169dbf3bc39.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a93bbe65a26169dbf3bc39\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nYour hotel feedback form should also collect an email address from the user.\nStart by adding a new label element with the text Email address (required): to the form. Your label element should have a for attribute set to the value of \"email\".\n--hints--\nYou should have a label element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset label'), 2);\nYour label element should have the text Email address (required):.\njs\nassert.strictEqual(document.querySelector('fieldset label:nth-of-type(2)')?.innerText, 'Email address (required):');\nYour label element should have a for attribute set to the value of \"email\".\njs\nassert.strictEqual(document.querySelector('fieldset label[for=\"email\"]')?.getAttribute('for'), 'email');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a93bbe65a26169dbf3bc39.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dd22077824919fcb561a269251638d2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a93c95bc58e26a8fe95818.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a93c95bc58e26a8fe95818\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nNext, add an input with the type of \"email\" below your email label. This input should have an id attribute set to the value of \"email\". Also, set the name attribute to the value of \"email\".\nThis input is also required, so make sure to add the required attribute.\nFinally, add a placeholder attribute set to \"example@email.com\".\n--hints--\nYou should have an input element below your email label.\njs\nassert.isNotNull(document.querySelector('label[for=\"email\"] + input'));\nYour input element should have a type of \"email\".\njs\nassert.isNotNull(document.querySelector('input[type=\"email\"]'));\nYour input element should have an id attribute set to \"email\".\njs\nassert.isNotNull(document.querySelector('input#email'));\nYour input element should have a name attribute set to \"email\".\njs\nassert.isNotNull(document.querySelector('input[name=\"email\"]'));\nYour input element should have a required attribute.\njs\nassert.strictEqual(document.querySelector('input#email')?.getAttribute('required'), \"\");\nYour input element should have a placeholder attribute set to \"example@email.com\".\njs\nassert.strictEqual(document.querySelector('input#email')?.getAttribute('placeholder'), \"example@email.com\");\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\n--fcc-editable-region--\nEmail address (required):\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2269,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a93c95bc58e26a8fe95818.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a69c361457043f4e80d4d436dbae6528",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333f5462f7aa53fc47bb2f.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "id: 67333f5462f7aa53fc47bb2f\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nAs last thing to complete this project, add a display property set to none to the section selector After that, create a section:target selector, and add there a display property set to block so that the section elements are visible only when the links are clicked --hints--\nThe section selector should have a display property set to none js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(\"section\") getPropertyValue(\"display\"), \"none\");\nYou should create a section:target selector js\nassert exists(new __helpers CSSHelp(document) getStyle(\"section:target\"));\nThe section:target selector should have a display property set to block js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle(\"section:target\") getPropertyValue(\"display\"),\n\"block\"\n);\n--seed--\n--seed-contents--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n} card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n} card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\ntransition: background-color 0 3s ease;\n} card-links a:hover {\nbackground-color: orangered;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333f5462f7aa53fc47bb2f.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "fb345f77c80154e17d33a8951dd5efcc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333f5462f7aa53fc47bb2f.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "transition: transform 0 3s, background-color 0 3s ease } card:hover { background-color: khaki; transform: scale(1 1); } h1::before { content: \"🥳 \"; } h1::after { content: \" 🥳\"; } message { font-size: 1 2em; color: gray; margin-bottom: 20px; } card-links { margin-top: 20px; display: flex; justify-content: space-around; } card-links a { text-decoration: none; font-size: 1em; padding: 10px 20px; border-radius: 5px; color: white; background-color: midnightblue; transition: background-color 0 3s ease; } card-links a:hover { background-color: orangered; }card-links a:active {\nbackground-color: midnightblue;\n} card-links a:focus {\noutline: 2px solid yellow;\n} card-links a:visited {\ncolor: crimson;\n}\n--fcc-editable-region--\nsection {\nmargin: 20px auto;\nmax-width: 600px;\nbackground-color: whitesmoke;\npadding: 20px;\nborder-radius: 10px;\n}\nsection:hover{\ntransform: skewX(10deg);\n}\n--fcc-editable-region--\n```\n--solutions--\n```html\nGreeting Card\nHappy Birthday Wishing you all the happiness and joy on your special day Send Card\nShare on Social Media\nSending your card Card successfully sent to your recipient Sharing your card Your card was shared on social media ```\n```css\nbody {\nfont-family: Arial, sans-serif;\npadding: 40px;\ntext-align: center;\nbackground-color: brown;\n} card {\nbackground-color: white;\nmax-width: 400px;\npadding: 40px;\nmargin: 0 auto;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px gray;\ntransition: transform 0 3s, background-color 0 3s ease\n} card:hover {\nbackground-color: khaki;\ntransform: scale(1 1);\n}\nh1::before {\ncontent: \"🥳 \";\n}\nh1::after {\ncontent: \" 🥳\";\n} message {\nfont-size: 1 2em;\ncolor: gray;\nmargin-bottom: 20px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333f5462f7aa53fc47bb2f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b420622a249918d28b61012f3fefeacf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333f5462f7aa53fc47bb2f.md",
    "source_type": "git_repo",
    "title": "Greeting Card",
    "content": "was shared on social media ``` ```css body { font-family: Arial, sans-serif; padding: 40px; text-align: center; background-color: brown; } card { background-color: white; max-width: 400px; padding: 40px; margin: 0 auto; border-radius: 10px; box-shadow: 0 4px 8px gray; transition: transform 0 3s, background-color 0 3s ease } card:hover { background-color: khaki; transform: scale(1 1); } h1::before { content: \"🥳 \"; } h1::after { content: \" 🥳\"; } message { font-size: 1 2em; color: gray; margin-bottom: 20px; }card-links {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: space-around;\n} card-links a {\ntext-decoration: none;\nfont-size: 1em;\npadding: 10px 20px;\nborder-radius: 5px;\ncolor: white;\nbackground-color: midnightblue;\ntransition: background-color 0 3s ease;\n} card-links a:hover {\nbackground-color: orangered;\n} card-links a:active {\nbackground-color: midnightblue;\n} card-links a:focus {\noutline: 2px solid yellow;\n} card-links a:visited {\ncolor: crimson;\n}\nsection {\nmargin: 20px auto;\nmax-width: 600px;\nbackground-color: whitesmoke;\npadding: 20px;\nborder-radius: 10px;\ndisplay: none;\n}\nsection:hover{\ntransform: skewX(10deg);\n}\nsection:target {\ndisplay: block;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-greeting-card\\67333f5462f7aa53fc47bb2f.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "29ae3c644efd473aa0ecf058dae87bdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9401c9d660d6bb15993e2.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9401c9d660d6bb15993e2\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nYour hotel feedback form should have an option for users to add their age.\nStart by adding a label element with the text Age (optional): to the form.\nThe for attribute should be set to \"age\".\n--hints--\nYou should have a label element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset label'), 3);\nYour label element should have a for attribute set to \"age\".\njs\nassert.isNotNull(document.querySelector('label[for=\"age\"]'));\nYour label element should have the text Age (optional):.\njs\nassert.strictEqual(document.querySelector('label[for=\"age\"]')?.textContent, \"Age (optional):\");\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1790,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9401c9d660d6bb15993e2.md",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "02aa55cd4e59115f0689cc3fa7801023",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9419e2d18476c645ce693.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9419e2d18476c645ce693\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nThe number input is used to create a numeric input field.\nHere is an example of a number input field:\nhtml\n<input type=\"number\" id=\"age\" name=\"age\" min=\"18\" max=\"100\">\nThe min and max attributes are used to set the minimum and maximum values that can be entered in the input field.\nBelow your label element, add an input with the type attribute set to \"number\" and an id of \"age\".\nThe name attribute should be set to \"age\", the min attribute should be set to \"3\" and the max attribute should be set to \"100\".\n--hints--\nYou should have a number input below your label element.\njs\nassert.isNotNull(document.querySelector('label + input[type=\"number\"]'));\nYour number input should have an id of age.\njs\nassert.isNotNull(document.querySelector('label + input#age'));\nYour number input should have a name attribute set to age.\njs\nassert.isNotNull(document.querySelector('label + input[name=\"age\"]'));\nYour number input should have a min attribute set to \"3\".\njs\nassert.isNotNull(document.querySelector('label + input[min=\"3\"]'));\nYour number input should have a max attribute set to \"100\".\njs\nassert.isNotNull(document.querySelector('label + input[max=\"100\"]'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\n--fcc-editable-region--\nAge (optional):\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2490,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9419e2d18476c645ce693.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "24ca2d6e1456560edd37cd31d9590205",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9577022877d72d8f43b4f.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9577022877d72d8f43b4f\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nThe next section of the form will ask users why they chose that particular hotel. Users will have the opportunity to select multiple options.\nStart by adding another fieldset element.\nInside the fieldset element, add a legend element with the text Why did you choose to stay at our hotel? (Check all that apply).\n--hints--\nYou should a fieldset element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset'), 3);\nYou should have a legend element inside the fieldset element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset:nth-of-type(3) legend'), 1);\nYour legend element should have the text of Why did you choose to stay at our hotel? (Check all that apply). Double check for spelling errors and spacing issues.\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(3) legend')?.innerText, 'Why did you choose to stay at our hotel? (Check all that apply)');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9577022877d72d8f43b4f.md",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4012746180c6be150b6be34ea121c53a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a94ea5df66236ebed260e8.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a94ea5df66236ebed260e8\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nThe next section in the form will be responsible for asking users if they have stayed at the hotel before.\nStart by adding a fieldset element.\nInside the fieldset element, add a legend element with the text of Was this your first time at our hotel?.\n--hints--\nYou should have a fieldset element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset'), 2);\nYou should have a legend element inside of your fieldset element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset legend'), 2);\nYour legend element should have the text of Was this your first time at our hotel?.\njs\nassert.strictEqual(document.querySelectorAll('fieldset legend')[1]?.textContent, 'Was this your first time at our hotel?');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a94ea5df66236ebed260e8.md",
      "source_type": "git_repo"
    },
    "token_count": 251,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1ec65b273e8bb89051c89745c8d6f4f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a954b2bcddba72076c1857.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a954b2bcddba72076c1857\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nBelow your first radio button, add another label element with the for attribute set to \"no-option\". The text for the label should be No.\nBelow your second label element, add a radio button with the id set to \"no-option\", and the name attribute set to \"hotel-stay\".\nWhen you are finished, you can now try out the radio buttons by selecting one option at a time.\n--hints--\nYou should have a label element below your first radio button.\njs\nassert.isNotNull(document.querySelector('fieldset:nth-of-type(2) input[type=\"radio\"] + label'));\nYour label should have a for attribute set to \"no-option\".\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(2) input[type=\"radio\"] + label')?.htmlFor, \"no-option\");\nYour label should have the text of No.\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(2) input[type=\"radio\"] + label[for=\"no-option\"]')?.textContent, 'No');\nYou should have a second input below your second label element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset:nth-of-type(2) label + input'), 2);\nYour input should have a type of radio.\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(2) label + input:nth-of-type(2)')?.getAttribute('type'), 'radio');\nYour input should have an id of \"no-option\".\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(2) label + input:nth-of-type(2)')?.id, 'no-option');\nYour input should have a name of \"hotel-stay\".\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(2) label + input:nth-of-type(2)')?.name, 'hotel-stay');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\n--fcc-editable-region--\nYes\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3195,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a954b2bcddba72076c1857.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "641a0e050e2e30952cd6c519deba159f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a96127422411756204bc1b.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a96127422411756204bc1b\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nAdd another label with the text of Personal Recommendation. The for attribute should be set to \"recommendation\".\nBelow the label element, add another checkbox input with the id, name and value attributes set to \"recommendation\".\n--hints--\nYou should have a label element below your checkbox.\njs\nassert.isNotNull(document.querySelector('fieldset:nth-of-type(3) input[type=\"checkbox\"] + label'));\nYour label element should have the text of Personal Recommendation.\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(3) input[type=\"checkbox\"] + label')?.textContent, \"Personal Recommendation\");\nYour label element should have a for attribute set to \"recommendation\".\njs\nassert.strictEqual(document.querySelector('fieldset:nth-of-type(3) input[type=\"checkbox\"] + label')?.getAttribute(\"for\"), \"recommendation\");\nYou should have a checkbox input below your label.\njs\nassert.exists(document.querySelector(\"fieldset:nth-of-type(3) label + input:nth-of-type(2)[type='checkbox']\"));\nYour checkbox should have an id set to \"recommendation\".\njs\nassert.strictEqual(document.querySelector(\"fieldset:nth-of-type(3) label + input:nth-of-type(2)[type='checkbox']\")?.id, \"recommendation\");\nYour checkbox should have a name attribute set to \"recommendation\".\njs\nassert.strictEqual(document.querySelector(\"fieldset:nth-of-type(3) label + input:nth-of-type(2)[type='checkbox']\")?.name, \"recommendation\");\nYour checkbox should have a value attribute set to \"recommendation\".\njs\nassert.strictEqual(document.querySelector(\"fieldset:nth-of-type(3) label + input:nth-of-type(2)[type='checkbox']\")?.value, \"recommendation\");\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3630,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a96127422411756204bc1b.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8310a6a1aadf95134e6c9ec7edae62dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9521bc70162712caf118d.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9521bc70162712caf118d\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nIf you want users to select one option from a list of options, you can use a set of radio buttons Here is an example of two radio buttons:\nhtml\n<input type=\"radio\" id=\"yes\" name=\"first-time\">\n<label for=\"yes\">Yes</label>\n<input type=\"radio\" id=\"no\" name=\"first-time\">\n<label for=\"no\">No</label>\nIn this example, the radio buttons are grouped together by using the same name attribute value This means that only one radio button can be selected at a time Below your legend element, add a label element with the text Yes and a for attribute set to \"yes-option\" Below your label element, add a radio button with the id set to \"yes-option\", and the name attribute set to \"hotel-stay\" --hints--\nYou should have a label element below your legend element js\nassert exists(document querySelector('fieldset:nth-of-type(2) legend + label'));\nYour label element should have a for attribute set to \"yes-option\" js\nassert strictEqual(document querySelector('fieldset:nth-of-type(2) legend + label') htmlFor, 'yes-option');\nYour label element should have the text Yes js\nassert strictEqual(document querySelector('fieldset:nth-of-type(2) legend + label') innerText, 'Yes');\nYou should have a radio button below your label element js\nassert exists(document querySelector('fieldset:nth-of-type(2) label + input[type=\"radio\"]'));\nYour radio button should have an id attribute set to \"yes-option\" js\nassert strictEqual(document querySelector('fieldset:nth-of-type(2) label + input[type=\"radio\"]') id, 'yes-option');\nYour radio button should have a name attribute set to \"hotel-stay\" js\nassert strictEqual(document querySelector('fieldset:nth-of-type(2) label + input[type=\"radio\"]') name, 'hotel-stay');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us Please provide feedback on your recent\nstay Personal Information\nName (required):\nEmail address (required):\nAge (optional):\n--fcc-editable-region--\nWas this your first time at our hotel --fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9521bc70162712caf118d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6f6cf3a021123fd910a7dc25a8d8e85e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a95d0eff8168747805f1f3.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a95d0eff8168747805f1f3\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nWhen you want a user to select multiple options from a list, you can use checkboxes Here is an example of how to work with checkboxes dealing with food options:\n```html\nFood Options\nPizza\nBurger\n```\nThe value attribute is used to specify the value that will be sent to the server when the form is submitted Below your legend element, add a label element with the text of Social Media Ads The for attribute should be set to \"ads\" Below your label element, add a checkbox input with the id, name and value attributes set to \"ads\" --hints--\nYou should have a label element below your legend js\nassert exists(document querySelector(\"fieldset:nth-of-type(3) legend + label\"));\nYour label element should have the text of Social Media Ads js\nassert strictEqual(document querySelector(\"fieldset:nth-of-type(3) legend + label\") textContent, \"Social Media Ads\");\nYour label element should have a for attribute set to \"ads\" js\nassert strictEqual(document querySelector(\"fieldset:nth-of-type(3) legend + label\") getAttribute(\"for\"), \"ads\");\nYou should have a checkbox input below your label js\nconst inputElement = document querySelector(\"fieldset:nth-of-type(3) label + input[type='checkbox']\");\nassert strictEqual(inputElement parentElement tagName, \"FIELDSET\");\nYour checkbox should have an id attribute set to \"ads\" js\nassert strictEqual(document querySelector(\"fieldset:nth-of-type(3) label + input[type='checkbox']\") id, \"ads\");\nYour checkbox should have a name attribute set to \"ads\" js\nassert strictEqual(document querySelector(\"fieldset:nth-of-type(3) label + input[type='checkbox']\") name, \"ads\");\nYour checkbox should have a value attribute set to \"ads\" js\nassert strictEqual(document querySelector(\"fieldset:nth-of-type(3) label + input[type='checkbox']\") value, \"ads\");\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us Please provide feedback on your recent\nstay Personal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3917,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a95d0eff8168747805f1f3.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "775912d099bc507ac7ea1b0f84c706fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a95d0eff8168747805f1f3.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "checkbox should have a name attribute set to \"ads\" js assert strictEqual(document querySelector(\"fieldset:nth-of-type(3) label + input[type='checkbox']\") name, \"ads\"); Your checkbox should have a value attribute set to \"ads\" js assert strictEqual(document querySelector(\"fieldset:nth-of-type(3) label + input[type='checkbox']\") value, \"ads\"); --seed-- --seed-contents-- ```html Hotel Feedback Form Hotel Feedback Form Thank you for staying with us Please provide feedback on your recent stay Personal Information Name (required): Email address (required): Age (optional): Was this your first time at our hotelYes\nNo\n--fcc-editable-region--\nWhy did you choose to stay at our hotel (Check all that apply)\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3917,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a95d0eff8168747805f1f3.md",
      "source_type": "git_repo"
    },
    "token_count": 163,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ba28aeeafc50f2a109e31452074ff6ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9689b1bf24b7750898a1b.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9689b1bf24b7750898a1b\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nFor the final label and input inside this fieldset, you will add a label element with the text of Price and the for attribute set to \"price\".\nThe checkbox input should have the id, name and value attributes set to \"price\".\nNow you can test out your form by selecting the various checkboxes.\n--hints--\nYou should have a label element with the text of Price.\njs\nassert.strictEqual(document.querySelectorAll('fieldset:nth-of-type(3) label')[4]?.textContent, 'Price');\nYour label should have the for attribute set to \"price\".\njs\nassert.strictEqual(document.querySelectorAll('fieldset:nth-of-type(3) label')[4]?.getAttribute('for'), 'price');\nYou should have a fifth checkbox input below your label.\njs\nassert.exists(document.querySelector(\"fieldset:nth-of-type(3) label + input:nth-of-type(5)[type='checkbox']\"));\nYou should have a checkbox input with an id of \"price\".\njs\nassert.strictEqual(document.querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[4]?.getAttribute('id'), 'price');\nYou should have a checkbox input with a name of \"price\".\njs\nassert.strictEqual(document.querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[4]?.getAttribute('name'), 'price');\nYour checkbox input should have a value of \"price\".\njs\nassert.strictEqual(document.querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[4]?.getAttribute('value'), 'price');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3999,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9689b1bf24b7750898a1b.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c208dc55ae021fbeae287c26109881bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a969951120be7818d8ee49.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a969951120be7818d8ee49\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nThe next section of the form will provide users with the ability to leave a rating for the hotel.\nStart by adding a new fieldset element with a legend element nested inside. The legend should have the text Ratings.\nBelow the legend element, add a label element with the text How was the service?. The for attribute should be set to \"service\".\n--hints--\nYou should have a fieldset element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset'), 4);\nYour fieldset should have a legend element.\njs\nassert.lengthOf(document.querySelectorAll('fieldset:nth-of-type(4) legend'), 1);\nYour legend should have the text Ratings.\njs\nassert.strictEqual(document.querySelectorAll('fieldset:nth-of-type(4) legend')[0]?.textContent, 'Ratings');\nYour fieldset should have a label element below the legend.\njs\nassert.lengthOf(document.querySelectorAll('fieldset:nth-of-type(4) legend + label'), 1);\nYour label should have the text How was the service?.\njs\nassert.strictEqual(document.querySelectorAll('fieldset:nth-of-type(4) legend + label')[0]?.textContent, 'How was the service?');\nYour label should have the for attribute set to \"service\".\njs\nassert.strictEqual(document.querySelectorAll('fieldset:nth-of-type(4) legend + label')[0]?.getAttribute('for'), 'service');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a969951120be7818d8ee49.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "16f932c91ada4e68bd13e1f765d79a1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a96b01f33ef178dfca9e42.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a96b01f33ef178dfca9e42\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nWhen you want users to make selections from a dropdown menu, you can use the select and option elements.\nHere is an example of using the select and option elements to create a dropdown for different cities:\n```html\nChoose a City:\nNew York\nLos Angeles\nChicago\nMiami\n```\nStart by adding a select element with the name and id attributes set to \"service\".\n--hints--\nYour fieldset should have a select element.\njs\nassert.exists(document.querySelector('fieldset:nth-of-type(4) select'));\nYour select element should have a name attribute set to \"service\".\njs\nassert.exists(document.querySelector('select[name=\"service\"]'));\nYour select element should have an id attribute set to \"service\".\njs\nassert.exists(document.querySelector('select[id=\"service\"]'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3765,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a96b01f33ef178dfca9e42.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7a542646556d5eb654b0fff40ed651e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a975260401487af226b290.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a975260401487af226b290\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nTo make an option selected by default, you can add the selected attribute to the option element you want to be selected.\nHere is an example using the selected attribute:\n```html\nAmazing\n```\nInside your select element, add the selected attribute to the option element with the value of \"excellent\".\n--hints--\nYour option element with the value of \"excellent\" should have the selected attribute.\njs\nassert.exists(document.querySelector('option[value=\"excellent\"][selected]'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\n--fcc-editable-region--\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3620,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a975260401487af226b290.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1c3edeb782e0c6a678cabf9ba898a69b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a962954f4e0d76223b37ed.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a962954f4e0d76223b37ed\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nNext, add another label element with the text of Location and the for attribute set to \"location\" For the checkbox input, the id, name and value attributes should be set to \"location\" Below that input element, add another label element with the text of Reputation and the for attribute set to \"reputation\" For the checkbox input, the id, name and value attributes should be set to \"reputation\" --hints--\nYou should have a label element with the text of Location js\nassert strictEqual(document querySelectorAll('fieldset:nth-of-type(3) label')[2] textContent, 'Location');\nYour label should have the for attribute set to \"location\" js\nassert strictEqual(document querySelectorAll('fieldset:nth-of-type(3) label')[2] getAttribute('for'), 'location');\nYou should have a third checkbox input after your label js\nassert exists(document querySelector(\"fieldset:nth-of-type(3) label + input:nth-of-type(3)[type='checkbox']\"));\nYour third checkbox input should have an id set to \"location\" js\nassert strictEqual(document querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[2] getAttribute('id'), 'location');\nYour third checkbox should have a name of \"location\" js\nassert strictEqual(document querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[2] getAttribute('name'), 'location');\nYour third checkbox should have a value of \"location\" js\nassert strictEqual(document querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[2] getAttribute('value'), 'location');\nYou should have a label element with the text of Reputation below the location checkbox js\nassert strictEqual(document querySelector('fieldset:nth-of-type(3) input[value=\"location\"] + label') textContent trim(), 'Reputation');\nYour label should have the for attribute set to \"reputation\" js\nassert strictEqual(document querySelector('fieldset:nth-of-type(3) input[value=\"location\"] + label') getAttribute('for'), 'reputation');\nYou should have a fourth checkbox input below your label js\nassert exists(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a962954f4e0d76223b37ed.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "04f8594e1ff52989f8f7ea99c4489de2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a962954f4e0d76223b37ed.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "'location'); Your third checkbox should have a value of \"location\" js assert strictEqual(document querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[2] getAttribute('value'), 'location'); You should have a label element with the text of Reputation below the location checkbox js assert strictEqual(document querySelector('fieldset:nth-of-type(3) input[value=\"location\"] + label') textContent trim(), 'Reputation'); Your label should have the for attribute set to \"reputation\" js assert strictEqual(document querySelector('fieldset:nth-of-type(3) input[value=\"location\"] + label') getAttribute('for'), 'reputation'); You should have a fourth checkbox input below your label js assert exists(documentquerySelector(\"fieldset:nth-of-type(3) label + input:nth-of-type(4)[type='checkbox']\"));\nYou should have a fourth checkbox input with an id of \"reputation\" js\nassert strictEqual(document querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[3] getAttribute('id'), 'reputation');\nYour fourth checkbox should have a name of \"reputation\" js\nassert strictEqual(document querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[3] getAttribute('name'), 'reputation');\nYour fourth checkbox should have a value of \"reputation\" js\nassert strictEqual(document querySelectorAll(\"fieldset:nth-of-type(3) label + input[type='checkbox']\")[3] getAttribute('value'), 'reputation');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us Please provide feedback on your recent\nstay Personal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel Yes\nNo\nWhy did you choose to stay at our hotel (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a962954f4e0d76223b37ed.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "576deb92a38a211cb4407207da14dc0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a975c259525b7bc2d5c776.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a975c259525b7bc2d5c776\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nYour hotel feedback form should also give users the ability to rate the food.\nStart by adding a label element with the text of How was the food?. That label element should have a for attribute set to \"food\".\nBelow your label element, add a select element with an id and name set to \"food\".\n--hints--\nYou should have a label element with the for attribute set to \"food\".\njs\nassert.exists(document.querySelector('label[for=\"food\"]'));\nYour label should have the text How was the food?.\njs\nassert.strictEqual(document.querySelector('label[for=\"food\"]')?.textContent, 'How was the food?');\nYou should have a select element with the id set to \"food\" below your label.\njs\nassert.exists(document.querySelector('label + select#food'));\nYour select element should have the name attribute set to \"food\".\njs\nassert.exists(document.querySelector('label + select[name=\"food\"]'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4039,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a975c259525b7bc2d5c776.md",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "13a6a95c0daa16fa1b577a49cbb5999f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9824ac5d9f77ec304969f.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9824ac5d9f77ec304969f\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nIf you want users to have more space to write their comments, you can use a textarea element.\nThe textarea element is a multi-line text input control that allows users to enter text that is longer than a single line. It can be used to create a comment box, a message input, or other text input that requires multiple lines.\nHere's an example of a textarea element:\n```html\n```\nThe rows attribute is used to specify the visible height of the textarea, and the cols attribute is used to specify the visible width of the textarea.\nBelow your label element, add a textarea element. In the next step, you will add the necessary attributes.\n--hints--\nYou should have a textarea element below your label.\njs\nassert.exists(document.querySelector('label + textarea'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nHow was the food?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\n--fcc-editable-region--\nOther Comments?\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9824ac5d9f77ec304969f.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6aa0d5546909604d50f3079b8161e247",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a97f40ddd40d7deb0618b7.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a97f40ddd40d7deb0618b7\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nThe last section of the form will allow users to provide any additional feedback they like about the hotel.\nStart by adding a label element with the text of Other Comments? and a for attribute set to \"comments\".\n--hints--\nYou should have a label with a for attribute set to \"comments\".\njs\nassert.exists(document.querySelector('label[for=\"comments\"]'));\nYour label should have the text Other Comments?.\njs\nassert.strictEqual(document.querySelector('label[for=\"comments\"]')?.textContent, 'Other Comments?');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nHow was the food?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4026,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a97f40ddd40d7deb0618b7.md",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ba0f1bd10989483cd5d8f36aa4477c01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a972137acd1179fa3fe8a0.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a972137acd1179fa3fe8a0\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nInside your select element, add the following five option elements with these corresponding values for the option text and value attribute:\nValue Attributes:\npoor\nsatisfactory\ngood\nvery-good\nexcellent\nOption Element Text:\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\n--hints--\nYou should have an option element with the value set to \"poor\" js\nassert exists(document querySelector('option[value=\"poor\"]'));\nYour option element with the value of \"poor\" should have the text Poor js\nassert strictEqual(document querySelector('option[value=\"poor\"]') textContent, 'Poor');\nYou should have an option element with the value set to \"satisfactory\" js\nassert exists(document querySelector('option[value=\"satisfactory\"]'));\nYour option element with the value of \"satisfactory\" should have the text Satisfactory js\nassert strictEqual(document querySelector('option[value=\"satisfactory\"]') textContent, 'Satisfactory');\nYou should have an option element with the value set to \"good\" js\nassert exists(document querySelector('option[value=\"good\"]'));\nYour option element with the value of \"good\" should have the text Good ```js\nassert strictEqual(document querySelector('option[value=\"good\"]') textContent, 'Good');\n```\nYou should have an option element with the value set to \"very-good\" js\nassert exists(document querySelector('option[value=\"very-good\"]'));\nYour option element with the value of \"very-good\" should have the text Very Good js\nassert strictEqual(document querySelector('option[value=\"very-good\"]') textContent, 'Very Good');\nYou should have an option element with the value set to \"excellent\" js\nassert exists(document querySelector('option[value=\"excellent\"]'));\nYour option element with the value of \"excellent\" should have the text Excellent ```js\nassert strictEqual(document querySelector('option[value=\"excellent\"]') textContent, 'Excellent');\n```\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us Please provide feedback on your recent\nstay Personal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4860,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a972137acd1179fa3fe8a0.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c0bb23feb281d7b8f23c28e9177d292b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a972137acd1179fa3fe8a0.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "Good'); You should have an option element with the value set to \"excellent\" js assert exists(document querySelector('option[value=\"excellent\"]')); Your option element with the value of \"excellent\" should have the text Excellent ```js assert strictEqual(document querySelector('option[value=\"excellent\"]') textContent, 'Excellent'); ``` --seed-- --seed-contents-- ```html Hotel Feedback Form Hotel Feedback Form Thank you for staying with us Please provide feedback on your recent stay Personal Information Name (required): Email address (required): Age (optional): Was this your first time at our hotelYes\nNo\nWhy did you choose to stay at our hotel (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service --fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4860,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a972137acd1179fa3fe8a0.md",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "eff46acf4d1b119fc4173337fd599aa3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9836b339fed7f9a8fe35a.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9836b339fed7f9a8fe35a\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nFor your textarea element, add an id and name attribute with the value of \"comments\".\nFor the cols attribute set the value to 30 and for the rows attribute set the value to 10.\n--hints--\nYour textarea element should have an id attribute set to \"comments\".\njs\nassert.exists(document.querySelector('textarea#comments'));\nYour textarea element should have a name attribute set to \"comments\".\njs\nassert.exists(document.querySelector('textarea[name=\"comments\"]'));\nYour textarea element should have a cols attribute set to \"30\".\njs\nassert.exists(document.querySelector('textarea[cols=\"30\"]'));\nYour textarea element should have a rows attribute set to \"10\".\njs\nassert.exists(document.querySelector('textarea[rows=\"10\"]'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nHow was the food?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nOther Comments?\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4353,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9836b339fed7f9a8fe35a.md",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bbb05eff509b8ec62c3456b4c6650907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9843525e9fa8046d709b7.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a9843525e9fa8046d709b7\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nFor the last step in the hotel feedback form workshop, you will need to add a submit button to the form.\nRemember that you learned how to work submit buttons in the previous lectures.\nAdd a button element with the type attribute set to \"submit\" and the text content set to Submit.\nAnd with that, your hotel feedback form is complete!\n--hints--\nYou should have a button inside your form.\njs\nassert.exists(document.querySelector('form button'));\nYour button should be set to the type of \"submit\".\njs\nassert.exists(document.querySelector('button[type=\"submit\"]'));\nYour button should have the text content of Submit.\njs\nassert.strictEqual(document.querySelector('button')?.textContent, 'Submit');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nHow was the food?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nOther Comments?\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nHow was the food?\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nOther Comments?\nSubmit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a9843525e9fa8046d709b7.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9634b42a231588092ad9ddca0cb9c4db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66ad24c7eb8c121000c603a6.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66ad24c7eb8c121000c603a6\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nTo make a checkbox input checked by default, you can add the checked attribute.\nHere is an example of using the checked attribute:\nhtml\n<input checked type=\"checkbox\" id=\"checked\" name=\"checked\">\nAdd the checked attribute to the checkbox input with the id of \"reputation\" to make it checked by default.\n--hints--\nYour checkbox input with the id of \"reputation\" should have the checked attribute.\njs\nassert.exists(document.querySelector(\"input#reputation[checked]\"));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel?\nYes\nNo\nWhy did you choose to stay at our hotel? (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2900,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66ad24c7eb8c121000c603a6.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b7b0c133db3164fdf4103e70932f37e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-kitty-ipsum-translator\\602da0de22201c65d2a019f6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 602da0de22201c65d2a019f6\ntitle: Build a Kitty Ipsum Translator\nchallengeType: 12\nurl: freeCodeCamp/learn-advanced-bash-by-building-a-kitty-ipsum-translator\ndashedName: build-a-kitty-ipsum-translator\n--description--\nIn this 140-lesson workshop, you will learn some more complex commands, and the details of how commands work.\n--instructions--\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 403,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-kitty-ipsum-translator\\602da0de22201c65d2a019f6.md",
      "source_type": "git_repo"
    },
    "token_count": 106,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f489e63c42a5a78c40d351f9356ee1b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\67a51d3a8a6fe123b77b0c6e.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 67a51d3a8a6fe123b77b0c6e\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\ninput elements can have a size attribute. This attribute defines the number of characters that should be visible as the user types into the input. The value of size should be a non-negative integer greater than zero. If size is not specified, or is specified with an invalid value, the input will have the default width set by the browser.\nhtml\n<label for=\"lastName\">Last Name:</label>\n<input id=\"lastName\" name=\"lastName\" type=\"text\" size=\"10\" />\nGive the name and email inputs a size attribute with a value of \"20\".\n--hints--\nYou should give the name input a size attribute with a value of \"20\".\njs\nconst label1 = document.querySelector('label:nth-of-type(1) + input');\nassert.strictEqual(label1?.getAttribute('size'), '20');\nYou should give the email input a size attribute with a value of \"20\".\njs\nconst label2 = document.querySelector('label:nth-of-type(2) + input');\nassert.strictEqual(label2?.getAttribute('size'), '20');\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us. Please provide feedback on your recent\nstay.\nPersonal Information\nName (required):\n--fcc-editable-region--\nEmail address (required):\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2100,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\67a51d3a8a6fe123b77b0c6e.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3c2e24b551b02417669dd6ecd41f4aa6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116c175a77cb64c5c10d49.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67116c175a77cb64c5c10d49\ntitle: Step 1\nchallengeType: 1\ndashedName: step-1\n--description--\nIn the previous lectures, you learned how to work with higher order functions like map, filter and reduce.\nIn this workshop, you will build a library manager app that will give you an opportunity to practice working with different higher order functions.\nTo get started, create a variable called library and assign it an empty array.\n--hints--\nYou should create a library array.\njs\nassert.isArray(library)\nYour library array should be empty.\njs\nassert.isEmpty(library)\n--seed--\n--seed-contents--\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 705,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116c175a77cb64c5c10d49.md",
      "source_type": "git_repo"
    },
    "token_count": 157,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca27b00372bf1b0ec4d11c14c1351354",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a97ca8c4cbae7d0bb6e0ad.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "id: 66a97ca8c4cbae7d0bb6e0ad\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nInside your select element, add the following five option elements with these corresponding values for the option text and value attribute:\nValue Attribute:\npoor\nsatisfactory\ngood\nvery-good\nexcellent\nOption Text:\nPoor\nSatisfactory\nGood\nVery Good\nExcellent\nDon't forget to add the selected attribute to the option element with the value of \"excellent\" --hints--\nYou should have an option element with the value set to \"poor\" js\nassert exists(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"poor\"]'));\nYour option with the value of \"poor\" should have the text \"Poor\" js\nassert strictEqual(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"poor\"]') textContent, 'Poor');\nYou should have an option element with the value set to \"satisfactory\" js\nassert exists(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"satisfactory\"]'));\nYour option with the value of \"satisfactory\" should have the text \"Satisfactory\" js\nassert strictEqual(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"satisfactory\"]') textContent, 'Satisfactory');\nYou should have an option element with the value set to \"good\" js\nassert exists(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"good\"]'));\nYour option with the value of \"good\" should have the text \"Good\" ```js\nassert strictEqual(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"good\"]') textContent, 'Good');\n```\nYou should have an option element with the value set to \"very-good\" js\nassert exists(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"very-good\"]'));\nYour option with the value of \"very-good\" should have the text \"Very Good\" js\nassert strictEqual(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"very-good\"]') textContent, 'Very Good');\nYou should have an option element with the value set to \"excellent\" js\nassert exists(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a97ca8c4cbae7d0bb6e0ad.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "94aeac6e594761fcc1820d9ed189fb18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a97ca8c4cbae7d0bb6e0ad.md",
    "source_type": "git_repo",
    "title": "Hotel Feedback Form",
    "content": "Your option with the value of \"good\" should have the text \"Good\" ```js assert strictEqual(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"good\"]') textContent, 'Good'); ``` You should have an option element with the value set to \"very-good\" js assert exists(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"very-good\"]')); Your option with the value of \"very-good\" should have the text \"Very Good\" js assert strictEqual(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"very-good\"]') textContent, 'Very Good'); You should have an option element with the value set to \"excellent\" js assert exists(documentquerySelector('fieldset:nth-of-type(4) select#food option[value=\"excellent\"]'));\nYour option with the value of \"excellent\" should have the text \"Excellent\" ```js\nassert strictEqual(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"excellent\"]') textContent, 'Excellent');\n```\nYou should have an option element with the selected attribute set to \"excellent\" js\nassert exists(document querySelector('fieldset:nth-of-type(4) select#food option[value=\"excellent\"][selected]'));\n--seed--\n--seed-contents--\n```html\nHotel Feedback Form\nHotel Feedback Form\nThank you for staying with us Please provide feedback on your recent\nstay Personal Information\nName (required):\nEmail address (required):\nAge (optional):\nWas this your first time at our hotel Yes\nNo\nWhy did you choose to stay at our hotel (Check all that apply)\nSocial Media Ads\nPersonal Recommendation\nLocation\nReputation\nPrice\nRatings\nHow was the service Poor\nSatisfactory\nGood\nVery Good\nExcellent\nHow was the food --fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-hotel-feedback-form\\66a97ca8c4cbae7d0bb6e0ad.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "05e6e37cf7306b99084850c1f5abaf5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67116d7584d0b469b14579c0\ntitle: Step 3\nchallengeType: 1\ndashedName: step-3\n--description--\nCreate another object inside the library array with the following properties and values:\n| Property | Value   |\n| ----------- | ------- |\n| title | \"Atomic Habits\"|\n| author | \"James Clear\"|\n| about | \"A practical book about discarding bad habits and building good ones\"|\n| pages | 320 |\n--hints--\nYou should have an object as the second item of your library array.\njs\nassert.isObject(library[1]);\nYour object should have a title property.\njs\nassert.property(library[1], \"title\")\nYour title property should have \"Atomic Habits\" as its value.\njs\nassert.propertyVal(library[1], \"title\", \"Atomic Habits\");\nYour object should have an author property.\njs\nassert.property(library[1], \"author\")\nYour author property should have \"James Clear\" as its value.\njs\nassert.propertyVal(library[1], \"author\", \"James Clear\");\nYour object should have an about property.\njs\nassert.property(library[1], \"about\")\nYour about property should have the value \"A practical book about discarding bad habits and building good ones\".\njs\nassert.propertyVal(library[1], \"about\", \"A practical book about discarding bad habits and building good ones\");\nYour object should have a pages property.\njs\nassert.property(library[1], \"pages\")\nThe value of your pages property should be a number.\njs\nassert.isNumber(library[1]?.pages)\nYour pages property should be set to 320.\njs\nassert.propertyVal(library[1], \"pages\", 320);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n--fcc-editable-region--\n--fcc-editable-region--\n];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1937,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c0.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "06779a69c118e30587f3ba3e53a9a9be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67116d7584d0b469b14579bf\ntitle: Step 2\nchallengeType: 1\ndashedName: step-2\n--description--\nInside the library array, create an object with the following properties and values:\n| Property | Value   |\n| ----------- | ------- |\n| title | \"Your Next Five Moves: Master the Art of Business Strategy\"|\n| author | \"Patrick Bet-David and Greg Dinkin\"|\n| about | \"A book on how to plan ahead\"|\n| pages | 320 |\n--hints--\nYou should have an object inside the library array.\njs\nassert.isObject(library[0])\nYour object should have a title property.\njs\nassert.property(library[0], \"title\")\nThe value of your title property should be \"Your Next Five Moves: Master the Art of Business Strategy\".\njs\nassert.propertyVal(library[0], \"title\", \"Your Next Five Moves: Master the Art of Business Strategy\");\nYour object should have an author property.\njs\nassert.property(library[0], \"author\")\nYour author property should have the value \"Patrick Bet-David and Greg Dinkin\".\njs\nassert.propertyVal(library[0], \"author\", \"Patrick Bet-David and Greg Dinkin\");\nYour object should have an about property.\njs\nassert.property(library[0], \"about\")\nYour about property should have the value \"A book on how to plan ahead\".\njs\nassert.propertyVal(library[0], \"about\", \"A book on how to plan ahead\");\nYour object should have a pages property.\njs\nassert.property(library[0], \"pages\")\nThe value of your pages property should be a number.\njs\nassert.isNumber(library[0]?.pages)\nYour pages property should be set to 320.\njs\nassert.propertyVal(library[0], \"pages\", 320);\n--seed--\n--seed-contents--\n```js\nconst library = [\n--fcc-editable-region--\n--fcc-editable-region--\n];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1798,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579bf.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ee9fc2337c941c548a375195240dd6f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dbe48ee5df6842385d735.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681dbe48ee5df6842385d735\ntitle: Step 4\nchallengeType: 1\ndashedName: step-4\n--description--\nThe rest of the objects representing the books have been filled in for you Now would be a good time to start working on displaying the book information in the console Over the next few steps, you will learn how to work with the map() method to achieve this goal Begin by logging the message \"Books in the Library:\\n\" to the console The newline character is added here to create a line break between this message and the list of books --hints--\nYou should log the message \"Books in the Library:\\n\" to the console js\nassert match(code, /console\\ log\\((\"|')Books\\s+in\\s+the\\s+Library:\\\\n\\1\\);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dbe48ee5df6842385d735.md",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4ca2f32a1260f7871e77ce274694db46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dbe48ee5df6842385d735.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "on displaying the book information in the console Over the next few steps, you will learn how to work with the map() method to achieve this goal Begin by logging the message \"Books in the Library:\\n\" to the console The newline character is added here to create a line break between this message and the list of books --hints-- You should log the message \"Books in the Library:\\n\" to the console js assert match(code, /console\\ log\\((\"|')Books\\s+in\\s+the\\s+Library:\\\\n\\1\\);/);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth ',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dbe48ee5df6842385d735.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d30d8ecf86cb140fe278c8a3fd72dc8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67116d7584d0b469b14579c2\ntitle: Step 11\nchallengeType: 1\ndashedName: step-11\n--description--\nTo get a list of book summaries, you can use the about property of each book Create a getBookSummaries function with a single parameter, accepting an array with book objects You can name the parameter whatever you like The getBookSummaries function should return an array of strings representing the summary for each book --hints--\nYou should create a getBookSummaries function js\nassert isFunction(getBookSummaries);\nYour getBookSummaries function should have one parameter js\nassert lengthOf(getBookSummaries, 1);\nYour getBookSummaries function should return an array js\nassert isArray(getBookSummaries(library));\nYour getBookSummaries function should return an array with the same length as the array passed to it ```js\nassert lengthOf(getBookSummaries(library), 8);\nconst _differentLibrary = [\n{\ntitle: 'Title A',\nauthor: 'Author A',\nabout: 'About A',\npages: 320,\n},\n{\ntitle: 'Title B',\nauthor: 'Author B',\nabout: 'About B',\npages: 320,\n},\n{\ntitle: 'Title C',\nauthor: 'Author C',\nabout: 'About C',\npages: 304,\n},\n];\nassert lengthOf(getBookSummaries(_differentLibrary), 3);\n```\nYour getBookSummaries function should return an array with the about property of each book from the array passed to it ```js\nconst summaries = getBookSummaries(library);\nlibrary forEach((book) => {\nassert include(summaries, book about);\n});\nconst _differentLibrary = [\n{\ntitle: 'Title A',\nauthor: 'Author A',\nabout: 'About A',\npages: 320,\n},\n{\ntitle: 'Title B',\nauthor: 'Author B',\nabout: 'About B',\npages: 320,\n},\n];\nconst differentSummaries = getBookSummaries(_differentLibrary);\n_differentLibrary forEach((book) => {\nassert include(differentSummaries, book",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c2.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6fc3fac02a06556a829b5ed396d66387",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Your getBookSummaries function should return an array with the about property of each book from the array passed to it ```js const summaries = getBookSummaries(library); library forEach((book) => { assert include(summaries, book about); }); const _differentLibrary = [ { title: 'Title A', author: 'Author A', about: 'About A', pages: 320, }, { title: 'Title B', author: 'Author B', about: 'About B', pages: 320, }, ]; const differentSummaries = getBookSummaries(_differentLibrary); _differentLibrary forEach((book) => { assert include(differentSummaries, bookabout);\n});\n```\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c2.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "fdb13c850b42f9572d7d295dd4e86326",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c2.md",
      "source_type": "git_repo"
    },
    "token_count": 233,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "47453c4001a61e645f935bab9cb863e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67116d7584d0b469b14579c3\ntitle: Step 14\nchallengeType: 1\ndashedName: step-14\n--description--\nIn earlier lectures, you learned how to work with the filter() method which is used to return a new array of filtered results Here is an example:\n```js\nconst developers = [\n{ name: \"Alice\", city: \"New York\", age: 30 },\n{ name: \"Bob\", city: \"San Francisco\", age: 25 },\n{ name: \"Charlie\", city: \"New York\", age: 35 },\n{ name: \"Diana\", city: \"Chicago\", age: 28 }\n];\nconst newYorkCityDevelopers = developers filter(dev => dev city === \"New York\");\nconsole log(newYorkCityDevelopers);\n/\n[\n{ name: \"Alice\", city: \"New York\", age: 30 },\n{ name: \"Charlie\", city: \"New York\", age: 35 }\n]\n/\n```\nCreate a getBooksByAuthor function with two parameters - an array with book objects and a string with the author The function must return an array that contains the books by a particular author --hints--\nYou should create a getBooksByAuthor function js\nassert isFunction(getBooksByAuthor);\nYour getBooksByAuthor function should have two parameters js\nassert lengthOf(getBooksByAuthor, 2);\nYour getBooksByAuthor function should return an array js\nassert isArray(getBooksByAuthor(library, ''));\nYour getBooksByAuthor function should return the correct number of books for any of the authors ```js\nconst arvidKahlBooks = getBooksByAuthor(library, 'Arvid Kahl');\nconst robertAndSharonBook = getBooksByAuthor(library, 'Robert Kiyosaki and Sharon Lechter');\nconst pbdAndGDBooks = getBooksByAuthor(library, 'Patrick Bet-David and Greg Dinkin');\nconst pbdBook = getBooksByAuthor(library, 'Patrick Bet-David');\nconst johnGordon = getBooksByAuthor(library, 'Jon Gordon');\nconst jamesClearBook = getBooksByAuthor(library, 'James Clear');\nconst JDAndSDBook = getBooksByAuthor(library, 'Jeff DeGraff and Staney DeGraff');\nassert lengthOf(arvidKahlBooks, 2);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "f177b7811f896a3438f60bc3bfd0eeae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "array js assert isArray(getBooksByAuthor(library, '')); Your getBooksByAuthor function should return the correct number of books for any of the authors ```js const arvidKahlBooks = getBooksByAuthor(library, 'Arvid Kahl'); const robertAndSharonBook = getBooksByAuthor(library, 'Robert Kiyosaki and Sharon Lechter'); const pbdAndGDBooks = getBooksByAuthor(library, 'Patrick Bet-David and Greg Dinkin'); const pbdBook = getBooksByAuthor(library, 'Patrick Bet-David'); const johnGordon = getBooksByAuthor(library, 'Jon Gordon'); const jamesClearBook = getBooksByAuthor(library, 'James Clear'); const JDAndSDBook = getBooksByAuthor(library, 'Jeff DeGraff and Staney DeGraff'); assert lengthOf(arvidKahlBooks, 2); assertlengthOf(robertAndSharonBook, 1);\nassert lengthOf(pbdAndGDBooks, 1);\nassert lengthOf(pbdBook, 1);\nassert lengthOf(johnGordon, 1);\nassert lengthOf(jamesClearBook, 1);\nassert lengthOf(JDAndSDBook, 1);\nconst _differentLibrary = [\n{\ntitle: 'Title A',\nauthor: 'Author A',\nabout: 'About A',\npages: 320,\n},\n{\ntitle: 'Title B',\nauthor: 'Author B',\nabout: 'About B',\npages: 320,\n},\n{\ntitle: 'Title C',\nauthor: 'Author B',\nabout: 'About C',\npages: 304,\n},\n];\nassert lengthOf(getBooksByAuthor(_differentLibrary, 'Author B'), 2);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "6d96180829fe300a49ae54b58d72b45c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "getBooksByAuthor(library, 'Jeff DeGraff and Staney DeGraff'); assert lengthOf(arvidKahlBooks, 2); assertlengthOf(robertAndSharonBook, 1); assert lengthOf(pbdAndGDBooks, 1); assert lengthOf(pbdBook, 1); assert lengthOf(johnGordon, 1); assert lengthOf(jamesClearBook, 1); assert lengthOf(JDAndSDBook, 1); const _differentLibrary = [ { title: 'Title A', author: 'Author A', about: 'About A', pages: 320, }, { title: 'Title B', author: 'Author B', about: 'About B', pages: 320, }, { title: 'Title C', author: 'Author B', about: 'About C', pages: 304, }, ]; assert lengthOf(getBooksByAuthor(_differentLibrary, 'Author B'), 2); assertlengthOf(getBooksByAuthor(_differentLibrary, 'Author A'), 1);\n```\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
      "source_type": "git_repo"
    },
    "token_count": 551,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "113d0e3ca37d3bc2c489cebcf2a87395",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about) join(\"\\n\");\n}\nconsole log(getBookSummaries(library));\nconsole log(\"\\nList of books by Arvid Kahl:\\n\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4691,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c3.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "80bfce93cf95e1fb8ef90fa57d87c868",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc1bbbf0d2e85ac499cf6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681dc1bbbf0d2e85ac499cf6\ntitle: Step 5\nchallengeType: 1\ndashedName: step-5\n--description--\nNext, create a function called getBookInformation with one parameter This parameter will represent the array of books when the function is called You can name this parameter whatever you like --hints--\nYou should create a getBookInformation function js\nassert isFunction(getBookInformation);\nYour getBookInformation function should have one parameter js\nassert lengthOf(getBookInformation, 1)\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth ',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc1bbbf0d2e85ac499cf6.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b0b1f540e7a2fb95c269a9b9697d2707",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc1bbbf0d2e85ac499cf6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth ', pages: 336, }, { title: 'Zero to Sold', author: 'Arvid Kahl', about: 'A book on how to bootstrap a business', pages: 500, }, ]; consolelog(\"Books in the Library:\\n\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc1bbbf0d2e85ac499cf6.md",
      "source_type": "git_repo"
    },
    "token_count": 148,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "25a8dba1346cf77950336472230d18d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67116d7584d0b469b14579c4\ntitle: Step 18\nchallengeType: 1\ndashedName: step-18\n--description--\nFor the last step of the workshop, you will review how to work with the reduce() method This method is used to process an array and condense it into a single value Here is an example:\n```js\nconst numbers = [1, 2, 3, 4, 5];\nconst sum = numbers reduce((acc, curr) => acc + curr, 0);\nconsole log(sum); // 15\n```\nIn the following example, the reducer function takes acc (which starts at 0, as specified by the second argument to reduce) and adds each number to it This will return a sum of 15 Create a getTotalPages function with a single parameter, accepting an array with book objects The function should return the total number of pages in the books from the array passed to the function Lastly, add a console log(getTotalPages(library)) below your getTotalPages function to see the result With that, your library manager workshop is complete --hints--\nYou should create a getTotalPages function js\nassert isFunction(getTotalPages);\nYour getTotalPages function should have one parameter js\nassert lengthOf(getTotalPages, 1);\nYour getTotalPages function should return a number js\nassert isNumber(getTotalPages(library));\nYour getTotalPages function should return the total number of pages in the books from the array passed to it ```js\nassert strictEqual(getTotalPages(library), 2512);\nconst _differentLibrary = [\n{\ntitle: 'Title A',\nauthor: 'Author A',\nabout: 'About A',\npages: 320,\n},\n{\ntitle: 'Title B',\nauthor: 'Author B',\nabout: 'About B',\npages: 320,\n},\n{\ntitle: 'Title C',\nauthor: 'Author C',\nabout: 'About C',\npages: 304,\n},\n]\nassert strictEqual(getTotalPages(_differentLibrary), 944);\n```\nYou should have a console log(getTotalPages(library)) js\nassert match(code, /console\\ log\\(\\s*getTotalPages\\(\\s*library\\)\\s*\\);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "4ed4adbb969c6692175b640480dc795d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "total number of pages in the books from the array passed to it ```js assert strictEqual(getTotalPages(library), 2512); const _differentLibrary = [ { title: 'Title A', author: 'Author A', about: 'About A', pages: 320, }, { title: 'Title B', author: 'Author B', about: 'About B', pages: 320, }, { title: 'Title C', author: 'Author C', about: 'About C', pages: 304, }, ] assert strictEqual(getTotalPages(_differentLibrary), 944); ``` You should have a console log(getTotalPages(library)) js assert match(code, /console\\ log\\(\\s*getTotalPages\\(\\s*library\\)\\s*\\);/);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "cccf12b390ff0e48e8eca8a5c0abb250",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about) join(\"\\n\");\n}\nconsole log(getBookSummaries(library));\nconsole log(\"\\nList of books by Arvid Kahl:\\n\");\nfunction getBooksByAuthor(catalog, author) {\nreturn catalog filter((book) => book author === author);\n}\nconsole log(getBooksByAuthor(library, \"Arvid Kahl\"));\nconsole log(\"\\nList of books by James Clear:\\n\");\nconsole log(getBooksByAuthor(library, \"James Clear\"));\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "af71ef444a80965192fa4e8c68ac413e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "]; console log(\"Books in the Library:\\n\"); function getBookInformation(catalog) { return catalog map(book => ${book title} by ${book author}) join(\"\\n\"); } console log(getBookInformation(library)); console log(\"\\nList of book summaries:\\n\"); function getBookSummaries(catalog) { return catalog map((book) => book about) join(\"\\n\"); } console log(getBookSummaries(library)); console log(\"\\nList of books by Arvid Kahl:\\n\"); function getBooksByAuthor(catalog, author) { return catalog filter((book) => book author === author); } console log(getBooksByAuthor(library, \"Arvid Kahl\")); console log(\"\\nList of books by James Clear:\\n\"); console log(getBooksByAuthor(library, \"James Clear\")); consolelog(\"\\nTotal number of pages for all library books:\\n\");\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
      "source_type": "git_repo"
    },
    "token_count": 521,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6a3a00049bde2e367e7ac145eaaa1627",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about) join(\"\\n\");\n}\nconsole log(getBookSummaries(library));\nconsole log(\"\\nList of books by Arvid Kahl:\\n\");\nfunction getBooksByAuthor(catalog, author) {\nreturn catalog filter((book) => book author === author);\n}\nconsole log(getBooksByAuthor(library, \"Arvid Kahl\"));\nconsole log(\"\\nList of books by James Clear:\\n\");\nconsole log(getBooksByAuthor(library, \"James Clear\"));\nconsole log(\"\\nTotal number of pages for all library books:\\n\");\nfunction getTotalPages(catalog) {\nreturn catalog reduce((acc, book) => acc + book pages, 0);\n}\nconsole log(getTotalPages(library));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\67116d7584d0b469b14579c4.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3abc1b6c7699967fc18dd24bfd85f819",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc623b2b18887266777b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681dc623b2b18887266777b1\ntitle: Step 6\nchallengeType: 1\ndashedName: step-6\n--description--\nIn prior lectures, you learned about the map() method which creates a new array by applying a given function to each element of the original array Here is an example:\n```js\nconst developers = [\n{ name: \"Alice\", city: \"New York\", title: \"Frontend Developer\" },\n{ name: \"Bob\", city: \"San Francisco\", title: \"Backend Developer\" }\n];\nconsole log(developers map(dev => dev name));\n// [\"Alice\", \"Bob\"]\n```\ndev in this example represents each object in the developers array Then, dot notation is used to get the name from the object Lastly, the result will be a new array of names Inside the getBookInformation function, use the map() method on the catalog parameter to return a new array of just book titles Refer to the example if you need help --hints--\nYour getBookInformation function should return an array js\nassert isArray(getBookInformation(library));\nYour getBookInformation function should return an array of strings which represents the book titles ```js\nconst testLibrary = [\n{\ntitle: \"Title A\",\nauthor: \"Author A\",\nabout: \"About A\",\npages: 320,\n},\n{\ntitle: \"Title B\",\nauthor: \"Author B\",\nabout: \"About B\",\npages: 320,\n},\n{\ntitle: \"Title C\",\nauthor: \"Author C\",\nabout: \"About C\",\npages: 304,\n},\n];\nconst expected = [\"Title A\", \"Title B\", \"Title C\"];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3308,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc623b2b18887266777b1.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9d9cb58dc40c318c68744c69849f8304",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc623b2b18887266777b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return an array js assert isArray(getBookInformation(library)); Your getBookInformation function should return an array of strings which represents the book titles ```js const testLibrary = [ { title: \"Title A\", author: \"Author A\", about: \"About A\", pages: 320, }, { title: \"Title B\", author: \"Author B\", about: \"About B\", pages: 320, }, { title: \"Title C\", author: \"Author C\", about: \"About C\", pages: 304, }, ]; const expected = [\"Title A\", \"Title B\", \"Title C\"]; assertdeepEqual(getBookInformation(testLibrary), expected);\n```\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3308,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc623b2b18887266777b1.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f3017fa6521bf65ac95752de7367477b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc623b2b18887266777b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\n--fcc-editable-region--\nfunction getBookInformation(catalog) {\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3308,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\681dc623b2b18887266777b1.md",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "05293a05b223f23864790609d226f57b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822576638d15cff700f091d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6822576638d15cff700f091d\ntitle: Step 7\nchallengeType: 1\ndashedName: step-7\n--description--\nNow it is time to see what the result will look like in the console Below your getBookInformation function, add a console log() and pass in a getBookInformation() function call with library for the argument When done correctly, you should see an array of book titles in the console --hints--\nYou should have console log(getBookInformation(library)); in your code js\nassert match(code, /console\\ log\\(\\s*getBookInformation\\(\\s*library\\s*\\)\\); /gi);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822576638d15cff700f091d.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f19b3705eacf45d5589d440b042e17ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822576638d15cff700f091d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => book title);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822576638d15cff700f091d.md",
      "source_type": "git_repo"
    },
    "token_count": 205,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ba57f50dab3fb1009234156bbb2c00ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822595203b35c00b87c0524.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6822595203b35c00b87c0524\ntitle: Step 8\nchallengeType: 1\ndashedName: step-8\n--description--\nThe array of book titles is nice, but it would be nice to display the title and author for each book like this:\njs\n[\n\"Your Next Five Moves: Master the Art of Business Strategy by Patrick Bet-David and Greg Dinkin\",\n\"Atomic Habits by James Clear\",\n\"Choose Your Enemies Wisely: Business Planning for the Audacious Few by Patrick Bet-David\", ]\nUpdate your use of the map() method to instead return an array of strings in this format: TITLE by AUTHOR You will need to use either template literals or string concatenation with the + operator to achieve this result --hints--\nYour getBookInformation function should return an array js\nassert isArray(getBookInformation(library));\nYour getBookInformation function should return an array of strings with the title and author for each book ```js\nconst testLibrary = [\n{\ntitle: \"Title A\",\nauthor: \"Author A\",\nabout: \"About A\",\npages: 320,\n},\n{\ntitle: \"Title B\",\nauthor: \"Author B\",\nabout: \"About B\",\npages: 320,\n},\n{\ntitle: \"Title C\",\nauthor: \"Author C\",\nabout: \"About C\",\npages: 304,\n},\n];\nconst expected = [\n\"Title A by Author A\",\n\"Title B by Author B\",\n\"Title C by Author C\"\n];\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3274,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822595203b35c00b87c0524.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4445bb8600482c5238604bf10135c6a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822595203b35c00b87c0524.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of strings with the title and author for each book ```js const testLibrary = [ { title: \"Title A\", author: \"Author A\", about: \"About A\", pages: 320, }, { title: \"Title B\", author: \"Author B\", about: \"About B\", pages: 320, }, { title: \"Title C\", author: \"Author C\", about: \"About C\", pages: 304, }, ]; const expected = [ \"Title A by Author A\", \"Title B by Author B\", \"Title C by Author C\" ]; assertdeepEqual(getBookInformation(testLibrary), expected);\n```\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3274,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822595203b35c00b87c0524.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d0e38a0e0f27c5f15514e9bf6ec962e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822595203b35c00b87c0524.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\n--fcc-editable-region--\nfunction getBookInformation(catalog) {\nreturn catalog map(book => book title);\n}\n--fcc-editable-region--\nconsole log(getBookInformation(library));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3274,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822595203b35c00b87c0524.md",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9cf028111025f5713f75d030d2e4a579",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682264d807fe00058c1ea013.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 682264d807fe00058c1ea013\ntitle: Step 10\nchallengeType: 1\ndashedName: step-10\n--description--\nFor the next part of the workshop, you will focus on displaying a list of book summaries to the console Begin by logging the message \"\\nList of book summaries:\\n\" to the console --hints--\nYou should log the message \"\\nList of book summaries:\\n\" to the console js\nassert match(code, /console\\ log\\((\"|')\\\\nList\\s+of\\s+book\\s+summaries:\\\\n\\1\\); /);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2364,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682264d807fe00058c1ea013.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ee5af2269fc4f5ca24faa65866901003",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682264d807fe00058c1ea013.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2364,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682264d807fe00058c1ea013.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4d27066ee68b5657e78afd85f5b9536e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68225ea2f1aae301fa4df0f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68225ea2f1aae301fa4df0f4\ntitle: Step 9\nchallengeType: 1\ndashedName: step-9\n--description--\nWhile the array of results is working, the final desired result should be a string listing all of the books with a title and author This is where the join() method comes in In earlier lectures, you learned that the join() method is used to return a new string of all of the array elements concatenated into a single string, with a specified separator between each element Here is a refresher:\n```js\nconst developers = [\"Naomi\", \"Tom\", \"Jessica\"];\nconst teamList = developers join(\"\\n\");\nconsole log(teamList);\n// Naomi\n// Tom\n// Jessica\n```\nThe separator in this case is the \\n which represents the newline character Chain the join() method with a \\n for the separator to the map() Now you should see a string in the console instead of the array of results --hints--\nYour getBookInformation function should return a string js\nassert isString(getBookInformation(library));\nYour getBookInformation function should return a single string representing the final result ```js\nconst testLibrary = [\n{\ntitle: \"Title A\",\nauthor: \"Author A\",\nabout: \"About A\",\npages: 320,\n},\n{\ntitle: \"Title B\",\nauthor: \"Author B\",\nabout: \"About B\",\npages: 320,\n},\n{\ntitle: \"Title C\",\nauthor: \"Author C\",\nabout: \"About C\",\npages: 304,\n},\n];\nconst expected = Title A by Author A\nTitle B by Author B\nTitle C by Author C;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68225ea2f1aae301fa4df0f4.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d1647aea2b9cad9c1b593049b9bdd126",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68225ea2f1aae301fa4df0f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Your getBookInformation function should return a single string representing the final result ```js const testLibrary = [ { title: \"Title A\", author: \"Author A\", about: \"About A\", pages: 320, }, { title: \"Title B\", author: \"Author B\", about: \"About B\", pages: 320, }, { title: \"Title C\", author: \"Author C\", about: \"About C\", pages: 304, }, ]; const expected = Title A by Author A Title B by Author B Title C by Author C; assertstrictEqual(getBookInformation(testLibrary), expected);\n```\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68225ea2f1aae301fa4df0f4.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5737da8878c7abda8210fbe64437f124",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68225ea2f1aae301fa4df0f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\n--fcc-editable-region--\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author})\n}\n--fcc-editable-region--\nconsole log(getBookInformation(library));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68225ea2f1aae301fa4df0f4.md",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ec0757b3290847187d36d26d6a13cedc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822694e3d34c807feeaba50.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6822694e3d34c807feeaba50\ntitle: Step 12\nchallengeType: 1\ndashedName: step-12\n--description--\nJust like in a prior step, the desired result would look nicer as a string instead of an array Chain the join() method to your existing map() method and pass in \"\\n\" for the separator to the join() Then, below your getBookSummaries function, add a console log() The console statement should call the getBookSummaries function with library for the argument Now, you should see a string for the result in the console --hints--\nYour getBookSummaries function should return a string js\nassert isString(getBookSummaries(library));\nYour getBookSummaries function should return a single string representing the final result ```js\nconst testLibrary = [\n{\ntitle: \"Title A\",\nauthor: \"Author A\",\nabout: \"About A\",\npages: 320,\n},\n{\ntitle: \"Title B\",\nauthor: \"Author B\",\nabout: \"About B\",\npages: 320,\n},\n{\ntitle: \"Title C\",\nauthor: \"Author C\",\nabout: \"About C\",\npages: 304,\n},\n];\nconst expected = About A\nAbout B\nAbout C;\nassert strictEqual(getBookSummaries(testLibrary), expected);\n```\nYou should have a console log(getBookSummaries(library)); in your code js\nassert match(code, /console\\ log\\(\\s*getBookSummaries\\(\\s*library\\s*\\)\\);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3377,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822694e3d34c807feeaba50.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "14898f0c7a2317c3a83324688ae56bba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822694e3d34c807feeaba50.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "representing the final result ```js const testLibrary = [ { title: \"Title A\", author: \"Author A\", about: \"About A\", pages: 320, }, { title: \"Title B\", author: \"Author B\", about: \"About B\", pages: 320, }, { title: \"Title C\", author: \"Author C\", about: \"About C\", pages: 304, }, ]; const expected = About A About B About C; assert strictEqual(getBookSummaries(testLibrary), expected); ``` You should have a console log(getBookSummaries(library)); in your code js assert match(code, /console\\ log\\(\\s*getBookSummaries\\(\\s*library\\s*\\)\\);/gi);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3377,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822694e3d34c807feeaba50.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a8f77b35722a8dc77b3cba4d42eba2e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822694e3d34c807feeaba50.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\n--fcc-editable-region--\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about)\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3377,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6822694e3d34c807feeaba50.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8eaf411369de9eb15a086980ede7044c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68226c92f138dd09cd5b9722.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68226c92f138dd09cd5b9722\ntitle: Step 13\nchallengeType: 1\ndashedName: step-13\n--description--\nFor this next part of the workshop, you are going to learn how to display a list of books by author Begin by logging the message \"\\nList of books by Arvid Kahl:\\n\" to the console --hints--\nYou should log the message \"\\nList of books by Arvid Kahl:\\n\" to the console js\nassert match(code, /console\\ log\\((\"|')\\\\nList\\s+of\\s+books\\s+by\\s+Arvid\\s+Kahl:\\\\n\\1\\); /);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2561,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68226c92f138dd09cd5b9722.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e03eef55c8d1b454fa2a6dd43a661b37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68226c92f138dd09cd5b9722.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about) join(\"\\n\");\n}\nconsole log(getBookSummaries(library));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2561,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\68226c92f138dd09cd5b9722.md",
      "source_type": "git_repo"
    },
    "token_count": 265,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8678cc729b5d04852fbbd112c6d6db3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827deed7fc01f074c90fc0d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6827deed7fc01f074c90fc0d\ntitle: Step 16\nchallengeType: 1\ndashedName: step-16\n--description--\nIt would be nice to test our your getBooksByAuthor function with another author Begin by logging the message \"\\nList of books by James Clear:\\n\" to the console Below that console log(), add another console log() Inside that console log(), call the getBooksByAuthor() function with library and \"James Clear\" for arguments Now, you should see all of the books for that particular author in the console --hints--\nYou should log the message \"\\nList of books by James Clear:\\n\" to the console js\nassert match(code, /console\\ log\\((\"|')\\\\nList\\s+of\\s+books\\s+by\\s+James\\s+Clear:\\\\n\\1\\); /);\nYou should have a console log(getBooksByAuthor(library, \"James Clear\")) js\nassert match(code, /console\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827deed7fc01f074c90fc0d.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9a1fdf454ae3b900cb02a9a7e3309b14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827deed7fc01f074c90fc0d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "James Clear:\\n\" to the console Below that console log(), add another console log() Inside that console log(), call the getBooksByAuthor() function with library and \"James Clear\" for arguments Now, you should see all of the books for that particular author in the console --hints-- You should log the message \"\\nList of books by James Clear:\\n\" to the console js assert match(code, /console\\ log\\((\"|')\\\\nList\\s+of\\s+books\\s+by\\s+James\\s+Clear:\\\\n\\1\\); /); You should have a console log(getBooksByAuthor(library, \"James Clear\")) js assert match(code, /console\\log\\(\\s*getBooksByAuthor\\s*\\(\\s*library\\s*,\\s*(['\"])\\s*James\\s+Clear\\s*\\1\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827deed7fc01f074c90fc0d.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8b7e99af3147c5b630b6d00d4dd83132",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827deed7fc01f074c90fc0d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about) join(\"\\n\");\n}\nconsole log(getBookSummaries(library));\nconsole log(\"\\nList of books by Arvid Kahl:\\n\");\nfunction getBooksByAuthor(catalog, author) {\nreturn catalog filter((book) => book author === author);\n}\nconsole log(getBooksByAuthor(library, \"Arvid Kahl\"));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827deed7fc01f074c90fc0d.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "bbe9bc434e0b7ac81978ee0a43eb9265",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba41a77db20a93f9d7a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c8ba41a77db20a93f9d7a1\ntitle: Step 1\nchallengeType: 1\ndashedName: step-1\n--description--\nIn this workshop, you'll review JavaScript conditionals by building a loan qualification checker app.\nThe app will check whether the user is eligible for a duplex, car, and condo loan based on their annual income and credit score. A credit score is a number that represents how good you are at managing borrowed money.\nTo get started, create the following variables and values.\n| Variable Name | Value   |\n| ----------- | ------- |\n| minIncomeForDuplex       | 60000 |\n| minCreditScoreForDuplex   | 700   |\n| minIncomeForCondo   | 45000   |\n| minCreditScoreForCondo    | 680   |\n| minIncomeForCar   | 30000   |\n| minCreditScoreForCar   | 650   |\n--hints--\nYou should create a minIncomeForDuplex variable set to 60000.\njs\nassert.equal(minIncomeForDuplex, 60000);\nYou should create a minCreditScoreForDuplex set to 700.\njs\nassert.equal(minCreditScoreForDuplex, 700);\nYou should create a minIncomeForCar variable set to 30000.\njs\nassert.equal(minIncomeForCar, 30000);\nYou should create a minCreditScoreForCar variable set to 650.\njs\nassert.equal(minCreditScoreForCar, 650);\nYou should create a minIncomeForCondo variable set to 45000.\njs\nassert.equal(minIncomeForCondo, 45000);\nYou should create a minCreditScoreForCondo variable set to 680.\njs\nassert.equal(minCreditScoreForCondo, 680);\n--seed--\n--seed-contents--\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba41a77db20a93f9d7a1.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bbc82570fbbb736a16acf3cea631198e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4ac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c8ba975ee7230e29f6c4ac\ntitle: Step 2\nchallengeType: 1\ndashedName: step-2\n--description--\nWhen the user is eligible for a loan, you'll want to display a message to them in the console.\nFor that, you'll build out a function inside which you'll have some checks that'll return what loan the applicant is eligible for.\nCreate an empty getLoanMessage function with an annualIncome and creditScore parameters.\n--hints--\nYou should create a getLoanMessage function\njs\nassert.isFunction(getLoanMessage)\nYour getLoanMessage function should have an annualIncome and creditScore as parameters.\njs\nassert.match(getLoanMessage?.toString(), /\\(\\s*annualIncome,\\s*creditScore\\s*\\)|\\(\\s*creditScore,\\s*annualIncome\\s*\\)/);\ngetLoanMessage should be an empty function.\njs\nassert.match(getLoanMessage?.toString(), /\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```js\nconst minIncomeForDuplex = 60000;\nconst minCreditScoreForDuplex = 700;\nconst minIncomeForCondo = 45000;\nconst minCreditScoreForCondo = 680;\nconst minIncomeForCar = 30000;\nconst minCreditScoreForCar = 650;\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4ac.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "73a480b52ba415a3de79908585144a4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827e10547fdd308bca1c73d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6827e10547fdd308bca1c73d\ntitle: Step 17\nchallengeType: 1\ndashedName: step-17\n--description--\nFor the last part of the workshop, you will learn how to get the total number of pages for all of the books in the library Start by logging to the message \"\\nTotal number of pages for all library books:\\n\" to the console --hints--\nYou should log the message \"\\nTotal number of pages for all library books:\\n\" to the console js\nassert match(code, /console\\ log\\(([\"'])\\\\nTotal\\s+number\\s+of\\s+pages\\s+for\\s+all\\s+library\\s+books:\\\\n\\1\\); /);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827e10547fdd308bca1c73d.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "801bb83cbe64c9baba0e4f54e149be3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827e10547fdd308bca1c73d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about) join(\"\\n\");\n}\nconsole log(getBookSummaries(library));\nconsole log(\"\\nList of books by Arvid Kahl:\\n\");\nfunction getBooksByAuthor(catalog, author) {\nreturn catalog filter((book) => book author === author);\n}\nconsole log(getBooksByAuthor(library, \"Arvid Kahl\"));\nconsole log(\"\\nList of books by James Clear:\\n\");\nconsole log(getBooksByAuthor(library, \"James Clear\"));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\6827e10547fdd308bca1c73d.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "83a5d4e0334fd053ac973d6984c4c5ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682277e2d3a05f0c5cf34d19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 682277e2d3a05f0c5cf34d19\ntitle: Step 15\nchallengeType: 1\ndashedName: step-15\n--description--\nNow, it is time to test out your function Add a console log() below your getBooksByAuthor() function Inside the console log(), call the getBooksByAuthor() function with library and \"Arvid Kahl\" for arguments Now, you should see all of the books for that particular author in the console --hints--\nYou should have a console log(getBooksByAuthor(library, \"Arvid Kahl\")) js\nassert match(code, /console\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682277e2d3a05f0c5cf34d19.md",
      "source_type": "git_repo"
    },
    "token_count": 136,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "48da2a64448d85f2ed9ec69cae6e9933",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682277e2d3a05f0c5cf34d19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 682277e2d3a05f0c5cf34d19\ntitle: Step 15\nchallengeType: 1\ndashedName: step-15\n--description--\nNow, it is time to test out your function Add a console log() below your getBooksByAuthor() function Inside the console log(), call the getBooksByAuthor() function with library and \"Arvid Kahl\" for arguments Now, you should see all of the books for that particular author in the console --hints--\nYou should have a console log(getBooksByAuthor(library, \"Arvid Kahl\")) js\nassert match(code, /console\\log\\(\\s*getBooksByAuthor\\s*\\(\\s*library\\s*,\\s*(['\"])\\s*Arvid\\s+Kahl\\s*\\1\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconst library = [\n{\ntitle: 'Your Next Five Moves: Master the Art of Business Strategy',\nauthor: 'Patrick Bet-David and Greg Dinkin',\nabout: 'A book on how to plan ahead',\npages: 320,\n},\n{\ntitle: 'Atomic Habits',\nauthor: 'James Clear',\nabout: 'A practical book about discarding bad habits and building good ones',\npages: 320,\n},\n{\ntitle: 'Choose Your Enemies Wisely: Business Planning for the Audacious Few',\nauthor: 'Patrick Bet-David',\nabout:\n\"A book that emphasizes the importance of identifying and understanding one's adversaries to succeed in the business world\",\npages: 304,\n},\n{\ntitle: 'The Embedded Entrepreneur',\nauthor: 'Arvid Kahl',\nabout: 'A book focusing on how to build an audience-driven business',\npages: 308,\n},\n{\ntitle: 'How to Be a Coffee Bean: 111 Life-Changing Ways to Create Positive Change',\nauthor: 'Jon Gordon',\nabout: 'A book about effective ways to lead a coffee bean lifestyle',\npages: 256,\n},\n{\ntitle: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation',\nauthor: 'Jeff DeGraff and Staney DeGraff',\nabout: 'A book on how to develop creativity and  innovation skills',\npages: 168,\n},\n{\ntitle: 'Rich Dad Poor Dad',\nauthor: 'Robert Kiyosaki and Sharon Lechter',\nabout: 'A book about financial literacy, financial independence, and building wealth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682277e2d3a05f0c5cf34d19.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "07fea71a1bf5be44c92c8c1bf3492080",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682277e2d3a05f0c5cf34d19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Create Positive Change', author: 'Jon Gordon', about: 'A book about effective ways to lead a coffee bean lifestyle', pages: 256, }, { title: 'The Creative Mindset: Mastering the Six Skills That Empower Innovation', author: 'Jeff DeGraff and Staney DeGraff', about: 'A book on how to develop creativity and innovation skills', pages: 168, }, { title: 'Rich Dad Poor Dad', author: 'Robert Kiyosaki and Sharon Lechter', about: 'A book about financial literacy, financial independence, and building wealth',\npages: 336,\n},\n{\ntitle: 'Zero to Sold',\nauthor: 'Arvid Kahl',\nabout: 'A book on how to bootstrap a business',\npages: 500,\n},\n];\nconsole log(\"Books in the Library:\\n\");\nfunction getBookInformation(catalog) {\nreturn catalog map(book => ${book title} by ${book author}) join(\"\\n\");\n}\nconsole log(getBookInformation(library));\nconsole log(\"\\nList of book summaries:\\n\");\nfunction getBookSummaries(catalog) {\nreturn catalog map((book) => book about) join(\"\\n\");\n}\nconsole log(getBookSummaries(library));\nconsole log(\"\\nList of books by Arvid Kahl:\\n\");\nfunction getBooksByAuthor(catalog, author) {\nreturn catalog filter((book) => book author === author);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-library-manager\\682277e2d3a05f0c5cf34d19.md",
      "source_type": "git_repo"
    },
    "token_count": 304,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e2520285a872d1294ddc88cb8d1fedfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c8ba975ee7230e29f6c4b0\ntitle: Step 5\nchallengeType: 1\ndashedName: step-5\n--description--\nNow, you should check if the applicant is qualified for a car loan only. If they are, return the string \"You qualify for a car loan.\".\n--hints--\nYour getLoanMessage function should return a string if the applicant qualifies for a car loan.\njs\nassert.isString(getLoanMessage(30000, 650));\nYour getLoanMessage function should return the string \"You qualify for a car loan.\".\njs\nassert.strictEqual(getLoanMessage(30000, 650), \"You qualify for a car loan.\");\nYour getLoanMessage function should return undefined if the applicant's annual income and credit score do not meet the requirements for a car loan.\njs\nassert.strictEqual(getLoanMessage(30000, 600), undefined);\n--seed--\n--seed-contents--\n```js\nconst minIncomeForDuplex = 60000;\nconst minCreditScoreForDuplex = 700;\nconst minIncomeForCondo = 45000;\nconst minCreditScoreForCondo = 680;\nconst minIncomeForCar = 30000;\nconst minCreditScoreForCar = 650;\nfunction getLoanMessage(annualIncome, creditScore) {\nif(creditScore >= minCreditScoreForDuplex && annualIncome >= minIncomeForDuplex) {\nreturn \"You qualify for a duplex, condo, and car loan.\"\n} else if (annualIncome >= minIncomeForCondo && creditScore >= minCreditScoreForCondo) {\nreturn \"You qualify for a condo and car loan.\"\n--fcc-editable-region--\n}\n--fcc-editable-region--\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b0.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1e88d5825578f9e1b12e36c26a6cd9b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4af.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c8ba975ee7230e29f6c4af\ntitle: Step 4\nchallengeType: 1\ndashedName: step-4\n--description--\nIf the applicant's annual income is greater than or equal to minIncomeForCondo, AND if their credit score is greater than or equal to minCreditScoreForCondo, then they qualify for a condo and car loan.\nCheck if that's true in the getLoanMessage function. If it is, return the string \"You qualify for a condo and car loan.\"\n--hints--\nYour getLoanMessage function should return a string if the applicant qualifies for a condo and car loan.\njs\nassert.isString(getLoanMessage(45000, 680));\nYour getLoanMessage function should return the string \"You qualify for a condo and car loan.\".\njs\nassert.strictEqual(getLoanMessage(45000, 680), \"You qualify for a condo and car loan.\");\nYour getLoanMessage function should return undefined if the applicant's annual income and credit score do not meet the requirements for a condo loan.\njs\nassert.strictEqual(getLoanMessage(45000, 650), undefined);\n--seed--\n--seed-contents--\n```js\nconst minIncomeForDuplex = 60000;\nconst minCreditScoreForDuplex = 700;\nconst minIncomeForCondo = 45000;\nconst minCreditScoreForCondo = 680;\nconst minIncomeForCar = 30000;\nconst minCreditScoreForCar = 650;\nfunction getLoanMessage(annualIncome, creditScore) {\nif(creditScore >= minCreditScoreForDuplex && annualIncome >= minIncomeForDuplex) {\nreturn \"You qualify for a duplex, condo, and car loan.\"\n--fcc-editable-region--\n}\n--fcc-editable-region--\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4af.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d036168b25edfa8fbad946b408bb79c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c8ba975ee7230e29f6c4b1\ntitle: Step 6\nchallengeType: 1\ndashedName: step-6\n--description--\nIf the applicant's annual income and credit score fall below minIncomeForCar and minCreditScoreForCar, then they don't qualify for any loan. So, return the string \"You don't qualify for any loans.\"\n--hints--\nYour getLoanMessage function should return a string if the applicant doesn't qualify for any loan.\njs\nassert.isString(getLoanMessage(25000, 550));\nYour getLoanMessage function should return the string \"You don't qualify for any loans.\" if the applicant does not meet the requirements for any loan.\njs\nassert.strictEqual(getLoanMessage(15000, 600), \"You don't qualify for any loans.\");\nassert.strictEqual(getLoanMessage(25000, 550), \"You don't qualify for any loans.\");\nassert.strictEqual(getLoanMessage(20000, 500), \"You don't qualify for any loans.\");\n--seed--\n--seed-contents--\n```js\nconst minIncomeForDuplex = 60000;\nconst minCreditScoreForDuplex = 700;\nconst minIncomeForCondo = 45000;\nconst minCreditScoreForCondo = 680;\nconst minIncomeForCar = 30000;\nconst minCreditScoreForCar = 650;\nfunction getLoanMessage(annualIncome, creditScore) {\nif(creditScore >= minCreditScoreForDuplex && annualIncome >= minIncomeForDuplex) {\nreturn \"You qualify for a duplex, condo, and car loan.\"\n} else if (annualIncome >= minIncomeForCondo && creditScore >= minCreditScoreForCondo) {\nreturn \"You qualify for a condo and car loan.\"\n} else if (annualIncome >= minIncomeForCar && creditScore >= minCreditScoreForCar) {\nreturn \"You qualify for a car loan.\"\n--fcc-editable-region--\n}\n--fcc-editable-region--\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b1.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4c744df3379f2f45d0d7c28b468d409d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c8ba975ee7230e29f6c4ad\ntitle: Step 3\nchallengeType: 1\ndashedName: step-3\n--description--\nTo check which loan a user is qualified for based on the annualIncome and creditScore, you have to use if/else if statement or a ternary right inside the getLoanMessage function You'll then return the appropriate message in the block of each condition Starting with the duplex loan, check if annualIncome is greater than or equal to minIncomeForDuplex AND if creditScore is greater than or equal to minCreditScoreForDuplex If that condition is true, then the applicant is eligible for a duplex loan and the other loans So, inside the check, return the string \"You qualify for a duplex, condo, and car loan \"\n--hints--\nYour getLoanMessage function should return a string js\nassert isString(getLoanMessage(65000, 750));\nassert isString(getLoanMessage(60000, 750));\nassert isString(getLoanMessage(65000, 700));\nassert isString(getLoanMessage(60000, 700));\nYour getLoanMessage function should return the string \"You qualify for a duplex, condo, and car loan \" js\nassert strictEqual(getLoanMessage(65000, 750), \"You qualify for a duplex, condo, and car loan \");\nassert strictEqual(getLoanMessage(60000, 750), \"You qualify for a duplex, condo, and car loan \");\nassert strictEqual(getLoanMessage(65000, 700), \"You qualify for a duplex, condo, and car loan \");\nassert strictEqual(getLoanMessage(60000, 700), \"You qualify for a duplex, condo, and car loan \");\nYour getLoanMessage function should return undefined if the applicant's annual income and credit score do not meet the requirements for a duplex loan js\nassert isUndefined(getLoanMessage(59000, 690));\nassert isUndefined(getLoanMessage(59000, 700));\nassert isUndefined(getLoanMessage(59000, 750));\nassert isUndefined(getLoanMessage(60000, 690));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2276,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4ad.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "65e401ee16bb3a7aaeeb0f797f5a10e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert strictEqual(getLoanMessage(60000, 750), \"You qualify for a duplex, condo, and car loan \"); assert strictEqual(getLoanMessage(65000, 700), \"You qualify for a duplex, condo, and car loan \"); assert strictEqual(getLoanMessage(60000, 700), \"You qualify for a duplex, condo, and car loan \"); Your getLoanMessage function should return undefined if the applicant's annual income and credit score do not meet the requirements for a duplex loan js assert isUndefined(getLoanMessage(59000, 690)); assert isUndefined(getLoanMessage(59000, 700)); assert isUndefined(getLoanMessage(59000, 750)); assert isUndefined(getLoanMessage(60000, 690)); assertisUndefined(getLoanMessage(65000, 690));\n--seed--\n--seed-contents--\n```js\nconst minIncomeForDuplex = 60000;\nconst minCreditScoreForDuplex = 700;\nconst minIncomeForCondo = 45000;\nconst minCreditScoreForCondo = 680;\nconst minIncomeForCar = 30000;\nconst minCreditScoreForCar = 650;\n--fcc-editable-region--\nfunction getLoanMessage(annualIncome, creditScore) {\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2276,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4ad.md",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "27ebccfc846fbf45a1601a91094dbfb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143862a5e54455d262c212e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143862a5e54455d262c212e\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nWithin your body, create a main element. Then in that element, create a section with a class set to heading.\n--hints--\nYou should have a main element.\njs\nassert.exists(document.querySelector('main'));\nYour main element should be within your body element.\njs\nassert.equal(document.querySelector('main')?.parentElement?.localName, 'body');\nYou should have a section element.\njs\nassert.exists(document.querySelector('section'));\nYour section element should be within your main element.\njs\nassert.equal(document.querySelector('section')?.parentElement?.localName, 'main');\nYour section element should have the class set to heading.\njs\nassert.isTrue(document.querySelector('section')?.classList?.contains('heading'));\n--seed--\n--seed-contents--\n```html\nMagazine\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143862a5e54455d262c212e.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7a40db9e741cc682d9f4168dba90416e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143869bb45bd85e3b1926aa.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143869bb45bd85e3b1926aa\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nWithin your heading element, create a header element with the class set to hero In that element, create an img element with the src set to https://cdn freecodecamp org/platform/universal/fcc_meta_1920X1080-indigo png, the alt set to freecodecamp logo, and the class set to hero-img The loading attribute on an img element can be set to lazy to tell the browser not to fetch the image resource until it is needed (as in, when the user scrolls the image into view) As an additional benefit, lazy loaded elements will not load until the non-lazy elements are loaded - this means users with slow internet connections can view the content of your page without having to wait for the images to load Give your new img element a loading attribute set to lazy --hints--\nYou should create a header element js\nassert exists(document querySelector('header'));\nYour header element should be within your heading element js\nassert equal(document querySelector('header') parentElement className, 'heading');\nYour header element should have the class set to hero js\nassert equal(document querySelector('header') className, 'hero');\nYou should create an img element js\nassert exists(document querySelector('img'));\nYour img element should be within your header element js\nassert equal(document querySelector('img') parentElement localName, 'header');\nYour img element should have the src set to https://cdn freecodecamp org/platform/universal/fcc_meta_1920X1080-indigo png js\nassert equal(document querySelector('img') getAttribute('src'), 'https://cdn freecodecamp org/platform/universal/fcc_meta_1920X1080-indigo png');\nYour img element should have the alt set to freecodecamp logo js\nassert equal(document querySelector('img') getAttribute('alt'), 'freecodecamp logo');\nYour img element should have the loading attribute set to lazy js\nassert equal(document querySelector('img') getAttribute('loading'), 'lazy');\nYour img element should have the class set to hero-img js\nassert equal(document querySelector('img') className, 'hero-img');\n--seed--\n--seed-contents--\n```html\nMagazine\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143869bb45bd85e3b1926aa.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0b411ffe526e430cb585c151737b00c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614385513d91ae5c251c2052.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 614385513d91ae5c251c2052\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will create a magazine page using a press release from a previous version of freeCodeCamp's curriculum Begin with adding a link element for the https://fonts googleapis com/css family=Anton%7CBaskervville%7CRaleway&display=swap font stylesheet, a link for the https://use fontawesome com/releases/v5 8 2/css/all css FontAwesome stylesheet, and a link for your /styles css stylesheet Your font stylesheet will load three separate fonts: Anton, Baskervville, and Raleway --hints--\nYour code should have three link elements js\nassert strictEqual(document querySelectorAll('link') length, 3);\nYour link elements should be inside your head element ```js\nconst headContentRegex = /( <=)[\\S|\\s]( =<\\/head\\s>)/;\nconst headElementContent = code match(headContentRegex);\nconst headElement = document createElement(\"head\");\nheadElement innerHTML = headElementContent;\nassert strictEqual(headElement querySelectorAll('link') length, 3);\n```\nYour three link elements should have a rel attribute with the value stylesheet js\nconst links = [ document querySelectorAll('link')];\nassert isTrue(links every(link => link getAttribute('rel') === 'stylesheet'));\nOne of your link elements should have the href set to https://fonts googleapis com/css family=Anton%7CBaskervville%7CRaleway&display=swap js\nconst links = [ document querySelectorAll('link')];\nassert exists(links find(link => link getAttribute('href') === 'https://fonts googleapis com/css family=Anton%7CBaskervville%7CRaleway&display=swap'));\nOne of your link elements should have the href set to https://use fontawesome com/releases/v5 8 2/css/all css js\nconst links = [ document querySelectorAll('link')];\nassert exists(links find(link => link getAttribute('href') === 'https://use fontawesome com/releases/v5 8 2/css/all css'));\nOne of your link elements should have the href set to styles css js\nconst styleElement = document querySelector('[data-href]');\nassert isNotNull(styleElement);\nassert strictEqual(styleElement getAttribute('data-href'), 'styles",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614385513d91ae5c251c2052.md",
      "source_type": "git_repo"
    },
    "token_count": 515,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "eb84ec5ae49f1527602d9b85610971c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614385513d91ae5c251c2052.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "[ document querySelectorAll('link')]; assert exists(links find(link => link getAttribute('href') === 'https://fonts googleapis com/css family=Anton%7CBaskervville%7CRaleway&display=swap')); One of your link elements should have the href set to https://use fontawesome com/releases/v5 8 2/css/all css js const links = [ document querySelectorAll('link')]; assert exists(links find(link => link getAttribute('href') === 'https://use fontawesome com/releases/v5 8 2/css/all css')); One of your link elements should have the href set to styles css js const styleElement = document querySelector('[data-href]'); assert isNotNull(styleElement); assert strictEqual(styleElement getAttribute('data-href'), 'stylescss');\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nMagazine\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614385513d91ae5c251c2052.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e0c3e2286f16add2d3bceca00e6271ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c8ba975ee7230e29f6c4b2\ntitle: Step 7\nchallengeType: 1\ndashedName: step-7\n--description--\nNow, it is time to test out your getLoanMessage function Use the table below to create 4 variables and their values:\n| Variable Name | Value   |\n| ----------- | ------- |\n| duplexLoanMsg       | getLoanMessage(85000, 850) |\n| condoLoanMsg   | getLoanMessage(65000, 690)   |\n| carLoanMsg   | getLoanMessage(45000, 660)   |\n| noLoanMsg   | getLoanMessage(25000, 550)   |\nAfter that, log each variable to the console to see the messages With that, your loan qualification checker project is complete --hints--\nYou should have a variable called duplexLoanMsg js\nassert isNotNull(duplexLoanMsg);\nYour duplexLoanMsg variable should be set to the result of getLoanMessage(85000, 850) js\nassert equal(duplexLoanMsg, getLoanMessage(85000, 850));\nYou should log the duplexLoanMsg variable to the console js\nassert match(code, /console\\ log\\(duplexLoanMsg\\)/)\nYou should have a variable called condoLoanMsg js\nassert isNotNull(condoLoanMsg);\nYour condoLoanMsg variable should be set to the result of getLoanMessage(65000, 690) js\nassert equal(condoLoanMsg, getLoanMessage(65000, 690));\nYou should log the condoLoanMsg variable to the console js\nassert match(code, /console\\ log\\(condoLoanMsg\\)/)\nYou should have a variable called carLoanMsg js\nassert isNotNull(carLoanMsg);\nYour carLoanMsg variable should be set to the result of getLoanMessage(45000, 660) js\nassert equal(carLoanMsg, getLoanMessage(45000, 660));\nYou should log the carLoanMsg variable to the console js\nassert match(code, /console\\ log\\(carLoanMsg\\)/)\nYou should have a variable called noLoanMsg js\nassert isNotNull(noLoanMsg);\nYour noLoanMsg variable should be set to the result of getLoanMessage(25000, 550) js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b2.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "587c0910c2c2f5554d42ced655bbc2f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the condoLoanMsg variable to the console js assert match(code, /console\\ log\\(condoLoanMsg\\)/) You should have a variable called carLoanMsg js assert isNotNull(carLoanMsg); Your carLoanMsg variable should be set to the result of getLoanMessage(45000, 660) js assert equal(carLoanMsg, getLoanMessage(45000, 660)); You should log the carLoanMsg variable to the console js assert match(code, /console\\ log\\(carLoanMsg\\)/) You should have a variable called noLoanMsg js assert isNotNull(noLoanMsg); Your noLoanMsg variable should be set to the result of getLoanMessage(25000, 550) js assertequal(noLoanMsg, getLoanMessage(25000, 550));\nYou should log the noLoanMsg variable to the console js\nassert match(code, /console\\ log\\(noLoanMsg\\)/)\n--seed--\n--seed-contents--\n```js\nconst minIncomeForDuplex = 60000;\nconst minCreditScoreForDuplex = 700;\nconst minIncomeForCondo = 45000;\nconst minCreditScoreForCondo = 680;\nconst minIncomeForCar = 30000;\nconst minCreditScoreForCar = 650;\nfunction getLoanMessage(annualIncome, creditScore) {\nif(creditScore >= minCreditScoreForDuplex && annualIncome >= minIncomeForDuplex) {\nreturn \"You qualify for a duplex, condo, and car loan \"\n} else if (annualIncome >= minIncomeForCondo && creditScore >= minCreditScoreForCondo) {\nreturn \"You qualify for a condo and car loan \"\n} else if (annualIncome >= minIncomeForCar && creditScore >= minCreditScoreForCar) {\nreturn \"You qualify for a car loan \"\n} else {\nreturn \"You don't qualify for any loans",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b2.md",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d64cc767f7c17b53b7b7b33959609ee6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "minCreditScoreForCar = 650; function getLoanMessage(annualIncome, creditScore) { if(creditScore >= minCreditScoreForDuplex && annualIncome >= minIncomeForDuplex) { return \"You qualify for a duplex, condo, and car loan \" } else if (annualIncome >= minIncomeForCondo && creditScore >= minCreditScoreForCondo) { return \"You qualify for a condo and car loan \" } else if (annualIncome >= minIncomeForCar && creditScore >= minCreditScoreForCar) { return \"You qualify for a car loan \" } else { return \"You don't qualify for any loans\"\n}\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```js\nconst minIncomeForDuplex = 60000;\nconst minCreditScoreForDuplex = 700;\nconst minIncomeForCondo = 45000;\nconst minCreditScoreForCondo = 680;\nconst minIncomeForCar = 30000;\nconst minCreditScoreForCar = 650;\nfunction getLoanMessage(annualIncome, creditScore) {\nif(creditScore >= minCreditScoreForDuplex && annualIncome >= minIncomeForDuplex) {\nreturn \"You qualify for a duplex, condo, and car loan \"\n} else if (annualIncome >= minIncomeForCondo && creditScore >= minCreditScoreForCondo) {\nreturn \"You qualify for a condo and car loan \"\n} else if (annualIncome >= minIncomeForCar && creditScore >= minCreditScoreForCar) {\nreturn \"You qualify for a car loan \"\n} else {\nreturn \"You don't qualify for any loans \"\n}\n}\nconst duplexLoanMsg = getLoanMessage(85000, 850)\nconsole log(duplexLoanMsg)\nconst condoLoanMsg = getLoanMessage(65000, 690)\nconsole log(condoLoanMsg)\nconst carLoanMsg = getLoanMessage(45000, 660)\nconsole log(carLoanMsg)\nconst noLoanMsg = getLoanMessage(25000, 550)\nconsole log(noLoanMsg)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-loan-qualification-checker\\66c8ba975ee7230e29f6c4b2.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "20b8431aa56aaa0486c7ac3bedd6837d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614387cbefeeba5f3654a291.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 614387cbefeeba5f3654a291\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nAfter your header element, create a div with the class set to author Within that div, create a p element with the class set to author-name and give it the text By freeCodeCamp Wrap the freeCodeCamp portion in an a element with the href set to https://freecodecamp org, and the target set to _blank Below that, add a second p element with the class publish-date and the text March 7, 2019 --hints--\nYou should create a new div element js\nassert exists(document querySelector('div'));\nYour div element should come after your header element js\nassert equal(document querySelector('div') previousElementSibling localName, 'header');\nYour div element should have the class set to author js\nassert equal(document querySelector('div') className, 'author');\nYou should create two new p elements js\nassert lengthOf(document querySelectorAll('p'), 3);\nYour two new p elements should be within your div element js\nassert exists(document querySelector('div') querySelectorAll('p') length === 2);\nYour first new p element should have a class set to author-name js\nassert equal(document querySelector('div') querySelector('p') className, 'author-name');\nYour first new p element should have the text By freeCodeCamp js\nassert equal(document querySelector('div') querySelector('p') innerText, 'By freeCodeCamp');\nYour second new p element should have a class set to publish-date js\nassert equal(document querySelector('div') querySelectorAll('p') [1] className, 'publish-date');\nYour second new p element should have the text March 7, 2019 js\nassert equal(document querySelector('div') querySelectorAll('p') [1] innerText, 'March 7, 2019');\nYou should create a new a element js\nassert exists(document querySelector('a'));\nYour a element should be within your first new p element js\nassert equal(document querySelector('div') querySelector('p') firstElementChild localName, 'a');\nYour a element should have the href set to https://freecodecamp org js\nassert equal(document querySelector('div') querySelector('p') firstElementChild getAttribute('href'), 'https://freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3962,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614387cbefeeba5f3654a291.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e044e0072830c1e18a6b65bce32a6294",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614387cbefeeba5f3654a291.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "querySelector('div') querySelectorAll('p') [1] className, 'publish-date'); Your second new p element should have the text March 7, 2019 js assert equal(document querySelector('div') querySelectorAll('p') [1] innerText, 'March 7, 2019'); You should create a new a element js assert exists(document querySelector('a')); Your a element should be within your first new p element js assert equal(document querySelector('div') querySelector('p') firstElementChild localName, 'a'); Your a element should have the href set to https://freecodecamp org js assert equal(document querySelector('div') querySelector('p') firstElementChild getAttribute('href'), 'https://freecodecamporg');\nYour a element should have the target set to _blank js\nassert equal(document querySelector('div') querySelector('p') firstElementChild getAttribute('target'), '_blank');\nYour a element should surround the text freeCodeCamp js\nassert equal(document querySelector('div') querySelector('p') firstElementChild innerText, 'freeCodeCamp');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3962,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614387cbefeeba5f3654a291.md",
      "source_type": "git_repo"
    },
    "token_count": 289,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f59ce144089497190d33b5d167ee8b43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439dc084fa5f659cf75d7c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 61439dc084fa5f659cf75d7c\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nCreate another p element below your .first-paragraph element, and give it the following text:\nmarkup\nAfter years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation! A vision! A picture in my head! A picture of this! This is what makes time travel possible: the flux capacitor!\n--hints--\nYou should create a second p element within your .text element.\njs\nassert.lengthOf(document.querySelectorAll('.text p'), 2);\nYour second p element should have the provided text.\njs\nassert.equal(document.querySelectorAll('.text p')?.[1]?.innerText, 'After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation! A vision! A picture in my head! A picture of this! This is what makes time travel possible: the flux capacitor!');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\n--fcc-editable-region--\nSoon the freeCodeCamp curriculum will be 100% project-driven learning. Instead of a series of coding challenges, you'll learn through building projects - step by step. Before we get into the details, let me emphasize: we are not changing the certifications. All 6 certifications will still have the same 5 required projects. We are only changing the optional coding challenges.\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3635,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439dc084fa5f659cf75d7c.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "77de5d3c0a43ec55d1bee12ff51b7b3d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61438ec09438696391076d6a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 61438ec09438696391076d6a\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nBelow your .heading element, create a new section element with the class set to text. Within that, create a p element with the class set to first-paragraph and the following text:\nmarkup\nSoon the freeCodeCamp curriculum will be 100% project-driven learning. Instead of a series of coding challenges, you'll learn through building projects - step by step. Before we get into the details, let me emphasize: we are not changing the certifications. All 6 certifications will still have the same 5 required projects. We are only changing the optional coding challenges.\n--hints--\nYou should create a new section element.\njs\nassert.lengthOf(document.querySelectorAll('section'), 2);\nYour new section element should come after your .heading element.\njs\nassert.equal(document.querySelectorAll('section')?.[1]?.previousElementSibling?.className, 'heading');\nYour new section element should have the class set to text.\njs\nassert.equal(document.querySelectorAll('section')?.[1]?.className, 'text');\nYou should create a new p element within your .text element.\njs\nassert.lengthOf(document.querySelector('.text')?.querySelectorAll('p'), 1);\nYour new p element should have the class set to first-paragraph.\njs\nassert.equal(document.querySelector('.text p')?.className, 'first-paragraph');\nYour new p element should have the provided text.\njs\nassert.equal(document.querySelector('.first-paragraph')?.innerText, 'Soon the freeCodeCamp curriculum will be 100% project-driven learning. Instead of a series of coding challenges, you\\'ll learn through building projects - step by step. Before we get into the details, let me emphasize: we are not changing the certifications. All 6 certifications will still have the same 5 required projects. We are only changing the optional coding challenges.');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4105,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61438ec09438696391076d6a.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5d273664a41108932a8a194ac37cdfb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61438b5b66d76a6264430f2a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 61438b5b66d76a6264430f2a\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nWithin each of your new a elements, add an i element and give them the following classes:\nYour first i element should have the class fab fa-facebook-f\nYour second i element should have the class fab fa-twitter\nYour third i element should have the class fab fa-instagram\nYour fourth i element should have the class fab fa-linkedin-in\nYour fifth i element should have the class fab fa-youtube\n--hints--\nYou should have five i elements js\nassert lengthOf(document querySelectorAll('i'), 5);\nEach a element should only have one i element js\nconst aaaaa = document querySelectorAll(' social-icons a');\nassert lengthOf(aaaaa, 5);\naaaaa forEach(\na => {\nassert lengthOf(a children, 1);\nassert equal(a children [0] localName, 'i');\n}\n);\nEach i element should have a class attribute which includes fab js\nconst iiiii = document querySelectorAll('i');\nassert lengthOf(iiiii, 5);\niiiii forEach(\ni => {\nassert isTrue(i classList contains('fab'));\n}\n);\nThe first i element should have a class attribute which includes fa-facebook-f js\nassert isTrue(document querySelectorAll('i') [0] classList contains('fa-facebook-f'));\nThe second i element should have a class attribute which includes fa-twitter js\nassert isTrue(document querySelectorAll('i') [1] classList contains('fa-twitter'));\nThe third i element should have a class attribute which includes fa-instagram js\nassert isTrue(document querySelectorAll('i') [2] classList contains('fa-instagram'));\nThe fourth i element should have a class attribute which includes fa-linkedin-in js\nassert isTrue(document querySelectorAll('i') [3] classList contains('fa-linkedin-in'));\nThe fifth i element should have a class attribute which includes fa-youtube js\nassert isTrue(document querySelectorAll('i') [4] classList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61438b5b66d76a6264430f2a.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b2218425cd00b76ff14b927537df18af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61438b5b66d76a6264430f2a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "contains('fa-facebook-f')); The second i element should have a class attribute which includes fa-twitter js assert isTrue(document querySelectorAll('i') [1] classList contains('fa-twitter')); The third i element should have a class attribute which includes fa-instagram js assert isTrue(document querySelectorAll('i') [2] classList contains('fa-instagram')); The fourth i element should have a class attribute which includes fa-linkedin-in js assert isTrue(document querySelectorAll('i') [3] classList contains('fa-linkedin-in')); The fifth i element should have a class attribute which includes fa-youtube js assert isTrue(document querySelectorAll('i') [4] classListcontains('fa-youtube'));\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61438b5b66d76a6264430f2a.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9e95d5902fa99e1660e424d86bc816c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614389f601bb4f611db98563.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 614389f601bb4f611db98563\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nBelow your author element, create a new div element with the class social-icons Add five a elements within that new div, and give them the following href attributes The first a element should have an href set to https://www facebook com/freecodecamp The second a element should have an href set to https://twitter com/freecodecamp The third a element should have an href set to https://instagram com/freecodecamp The fourth a element should have an href set to https://www linkedin com/school/free-code-camp The fifth a element should have an href set to https://www youtube com/freecodecamp --hints--\nYou should create a new div element js\nassert lengthOf(document querySelectorAll('div'), 2);\nYour new div element should come after your author element js\nassert equal(document querySelector(' author') nextElementSibling localName, 'div');\nYour new div element should have the class social-icons js\nassert isTrue(document querySelector(' author') nextElementSibling classList contains('social-icons'));\nYour social-icons element should have five a elements js\nassert lengthOf(document querySelector(' social-icons') querySelectorAll('a'), 5);\nYour first a element should have an href set to https://www facebook com/freecodecamp js\nassert include(document querySelector(' social-icons') querySelectorAll('a') [0] getAttribute('href'), 'https://www facebook com/freecodecamp');\nYour second a element should have an href set to https://twitter com/freecodecamp js\nassert include(document querySelector(' social-icons') querySelectorAll('a') [1] getAttribute('href'), 'https://twitter com/freecodecamp');\nYour third a element should have an href set to https://instagram com/freecodecamp js\nassert include(document querySelector(' social-icons') querySelectorAll('a') [2] getAttribute('href'), 'https://instagram com/freecodecamp');\nYour fourth a element should have an href set to https://www linkedin com/school/free-code-camp js\nassert include(document querySelector(' social-icons') querySelectorAll('a') [3] getAttribute('href'), 'https://www linkedin",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614389f601bb4f611db98563.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ca4017278ad1fb6142cd73403ab9594f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614389f601bb4f611db98563.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "include(document querySelector(' social-icons') querySelectorAll('a') [0] getAttribute('href'), 'https://www facebook com/freecodecamp'); Your second a element should have an href set to https://twitter com/freecodecamp js assert include(document querySelector(' social-icons') querySelectorAll('a') [1] getAttribute('href'), 'https://twitter com/freecodecamp'); Your third a element should have an href set to https://instagram com/freecodecamp js assert include(document querySelector(' social-icons') querySelectorAll('a') [2] getAttribute('href'), 'https://instagram com/freecodecamp'); Your fourth a element should have an href set to https://www linkedin com/school/free-code-camp js assert include(document querySelector(' social-icons') querySelectorAll('a') [3] getAttribute('href'), 'https://www linkedincom/school/free-code-camp');\nYour fifth a element should have an href set to https://www youtube com/freecodecamp js\nassert include(document querySelector(' social-icons') querySelectorAll('a') [4] getAttribute('href'), 'https://www youtube com/freecodecamp');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614389f601bb4f611db98563.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e3ad142a83c6fc037b94e9424436b1ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439dfc811e12666b04be6f.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 61439dfc811e12666b04be6f\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nAdd a third p element at the end of your text element, and give it the following text:\nmarkup\nIt wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\n--hints--\nYou should create a third p element in your text element js\nassert lengthOf(document querySelectorAll(' text p'), 3);\nYour third p element should have the provided text js\nassert equal(document querySelectorAll(' text p') [2] innerText, \"It wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\");\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439dfc811e12666b04be6f.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c0c67fe7642730309c0396f9d51dbd38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a1a228f7d068ab16a130.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143a1a228f7d068ab16a130\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nBelow your blockquote element, add another p element with the following text:\nmarkup\nNo more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition --hints--\nYou should add a fourth p element to your text element js\nassert lengthOf(document querySelectorAll(' text p'), 5);\nYour new p element should come after your blockquote element js\nassert equal(document querySelectorAll(' text p') [4] previousElementSibling localName, 'blockquote');\nYour new p element should have the provided text js\nassert equal(document querySelectorAll(' text p') [4] innerText, 'No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there\\'s plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition ');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5200,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a1a228f7d068ab16a130.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1b22702fc47edf4a52f49025c1d9d672",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a1a228f7d068ab16a130.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitorIt wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5200,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a1a228f7d068ab16a130.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4a96286d71c8fa1ee22d32d4fb90101c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a73279ce6369de4b9bcc.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143a73279ce6369de4b9bcc\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nCreate a fifth p element at the end of your text element, and give it the following text:\nmarkup\nThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" --hints--\nYou should add a fifth p element js\nassert lengthOf(document querySelectorAll(' text p'), 6);\nYour new p element should have the provided text js\nassert equal(document querySelectorAll(' text p') [5] innerText, 'The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" ');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5192,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a73279ce6369de4b9bcc.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0e1dd63e668fe6620d69e85f8faeee48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a73279ce6369de4b9bcc.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough)\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5192,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a73279ce6369de4b9bcc.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3d94f20d00c8b440eae2b359221b340e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439e33e4fb7967609e0c83.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 61439e33e4fb7967609e0c83\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nAfter the three p elements within your text element, create a blockquote element Within that, add an hr element, a p element with the class set to quote, and a second hr element Give the quote element the text The entire curriculum should be a series of projects --hints--\nYou should create a new blockquote element within your text element js\nassert exists(document querySelector(' text blockquote'));\nYour blockquote element should come after your three p elements js\nassert equal(document querySelector(' text') children [3] localName, 'blockquote');\nYour blockquote element should have two hr elements js\nassert lengthOf(document querySelectorAll(' text blockquote hr'), 2);\nYour blockquote element should have a p element js\nassert exists(document querySelector(' text blockquote p'));\nYour blockquote children should be in the correct order js\nconst children = document querySelector(' text blockquote') children;\nassert equal(children [0] localName, 'hr');\nassert equal(children [1] localName, 'p');\nassert equal(children [2] localName, 'hr');\nYour new p element should have the class set to quote js\nassert equal(document querySelector(' text blockquote p') className, 'quote');\nYour new p element should have the text The entire curriculum should be a series of projects js\nassert equal(document querySelector(' text blockquote p') innerText, 'The entire curriculum should be a series of projects');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439e33e4fb7967609e0c83.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "57a1dfeafcb9c5f0beb5ad5a81f83154",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439e33e4fb7967609e0c83.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of thisThis is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\61439e33e4fb7967609e0c83.md",
      "source_type": "git_repo"
    },
    "token_count": 200,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "11fa64dbddc0b5d971e0fa5091fd49fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a778bffc206ac6b1dbe3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143a778bffc206ac6b1dbe3\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nCreate one final p element at the end of your text element and give it the following text:\nmarkup\nInstead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience --hints--\nYou should add a sixth p element to the text element js\nassert lengthOf(document querySelectorAll(' text p'), 7);\nYour sixth p element should have the provided text js\nassert equal(document querySelectorAll(' text p') [6] innerText, 'Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They\\'ll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience ');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\n--fcc-editable-region--\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a778bffc206ac6b1dbe3.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "66cfbbdf37993739afe7524737aab39f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a778bffc206ac6b1dbe3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projectsInstead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" --fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a778bffc206ac6b1dbe3.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c7917c649de19bf42848ebefb21dadff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a83fcc32c26bcfae3efa.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143a83fcc32c26bcfae3efa\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nBelow your text element, create a new section element and give it a class of text text-with-images Within that, create an article element with a class set to brief-history, and an aside element with the class set to image-wrapper --hints--\nYou should create a new section element js\nassert lengthOf(document querySelectorAll('section'), 3);\nYour new section element should come after your text element js\nassert equal(document querySelectorAll('section') [2] previousElementSibling className, 'text');\nYour new section element should have the class set to text text-with-images js\nassert equal(document querySelectorAll('section') [2] className, 'text text-with-images');\nYour new section element should have an article element js\nassert exists(document querySelector(' text-with-images article'));\nYour new section element should have an aside element js\nassert exists(document querySelector(' text-with-images aside'));\nThe article element should come before the aside element js\nassert equal(document querySelector(' text-with-images article') nextElementSibling localName, 'aside');\nYour article element should have the class set to brief-history js\nassert equal(document querySelector(' text-with-images article') className, 'brief-history');\nYour aside element should have the class set to image-wrapper js\nassert equal(document querySelector(' text-with-images aside') className, 'image-wrapper');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a83fcc32c26bcfae3efa.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f7969676ac35acb8dd294061fd6e2786",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a83fcc32c26bcfae3efa.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the FutureIt\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143a83fcc32c26bcfae3efa.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f82fe68cac00e054c8340fb83c9e4425",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b97c06c3306d23d5da47.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143b97c06c3306d23d5da47\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nWithin your article element, create an h3 element with the class set to list-title and the text of A Brief History Below that, create a p element with the text Of the Curriculum Then create a ul element with the class lists --hints--\nYou should create an h3 element within your article element js\nassert exists(document querySelector('article h3'));\nYou should create a p element within your article element js\nassert exists(document querySelector('article p'));\nYou should create a ul element within your article element js\nassert exists(document querySelector('article ul'));\nYour elements within the article element should be in the correct order js\nconst children = document querySelector('article') children;\nassert equal(children [0] localName, 'h3');\nassert equal(children [1] localName, 'p');\nassert equal(children [2] localName, 'ul');\nYour new h3 element should have the class set to list-title js\nassert equal(document querySelector('article h3') className, 'list-title');\nYour new h3 element should have the text of A Brief History js\nassert equal(document querySelector('article h3') innerText, 'A Brief History');\nYour new p element should have the text of Of the Curriculum js\nassert equal(document querySelector('article p') innerText, 'Of the Curriculum');\nYour new ul element should have the class set to lists js\nassert equal(document querySelector('article ul') className, 'lists');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6707,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b97c06c3306d23d5da47.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a465466889cc017b5af1191c3064d736",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b97c06c3306d23d5da47.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of thisThis is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6707,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b97c06c3306d23d5da47.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2dc22d8a81d8c0ae21cb7ca7ea789e96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143bb50e8e48c6f5ef9d8d5.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143bb50e8e48c6f5ef9d8d5\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nWithin your aside element, create two img elements, a blockquote element, and a third img element Give the blockquote element a class set to image-quote --hints--\nYou should create three img elements within your aside element js\nassert lengthOf(document querySelectorAll('aside img'), 3);\nYou should create a blockquote element within your aside element js\nassert exists(document querySelector('aside blockquote'));\nYour blockquote element should have a class set to image-quote js\nassert isTrue(document querySelector('aside blockquote') classList contains('image-quote'));\nYour new elements should be in the correct order js\nconst children = document querySelector('aside') children;\nassert equal(children [0] localName, 'img');\nassert equal(children [1] localName, 'img');\nassert equal(children [2] localName, 'blockquote');\nassert equal(children [3] localName, 'img');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143bb50e8e48c6f5ef9d8d5.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7ecca17b70c91b7c5fe44b71c2c9a008",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143bb50e8e48c6f5ef9d8d5.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough)\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143bb50e8e48c6f5ef9d8d5.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "53983dd5bc6dd78eb45411a376888a3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143bb50e8e48c6f5ef9d8d5.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143bb50e8e48c6f5ef9d8d5.md",
      "source_type": "git_repo"
    },
    "token_count": 108,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "81019e10646062419fa12e07648f1681",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143c2a363865c715f1a3f72.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143c2a363865c715f1a3f72\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nWithin the image-wrapper element, give your first img element a src of https://cdn freecodecamp org/testable-projects-fcc/images/random-quote-machine png, an alt of image of the quote machine project, a class of image-1, a loading attribute set to lazy, a width attribute of 600, and a height attribute of 400 --hints--\nYour first img element should have a src attribute set to https://cdn freecodecamp org/testable-projects-fcc/images/random-quote-machine png js\nassert equal(document querySelectorAll(' image-wrapper img') [0] getAttribute('src'), 'https://cdn freecodecamp org/testable-projects-fcc/images/random-quote-machine png');\nYour first img element should have an alt attribute set to image of the quote machine project js\nassert equal(document querySelectorAll(' image-wrapper img') [0] getAttribute('alt'), 'image of the quote machine project');\nYour first img element should have a class attribute set to image-1 js\nassert isTrue(document querySelectorAll(' image-wrapper img') [0] classList contains('image-1'));\nYour first img element should have a loading attribute set to lazy js\nassert equal(document querySelectorAll(' image-wrapper img') [0] getAttribute('loading'), 'lazy');\nYour first img element should have a width attribute set to 600 js\nassert equal(document querySelectorAll(' image-wrapper img') [0] getAttribute('width'), '600');\nYour first img element should have a height attribute set to 400 js\nassert equal(document querySelectorAll(' image-wrapper img') [0] getAttribute('height'), '400');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143c2a363865c715f1a3f72.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "cb584dabd02323edabe3050b60b2d9fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143c2a363865c715f1a3f72.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "CURRICULUM Our efforts to restructure our curriculum with a more project-based focus By freeCodeCamp March 7, 2019 Soon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challengesAfter years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143c2a363865c715f1a3f72.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "df0162e24791397862d1b9324033be0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143c2a363865c715f1a3f72.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experienceA Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143c2a363865c715f1a3f72.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fca49c12431e1a19f68ce599c5f0802d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143b9e1f5035c6e5f2a8231\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nWithin your ul element, create six li elements Add an h4 element with a class set to list-subtitle and a p element to each of your li elements Then give the h4 and p elements the following text content, in order, with each h4 using what's on the left side of the colon, and each p using what's on the right:\nV1 - 2014: We launched freeCodeCamp with a simple list of 15 resources, including Harvard's CS50 and Stanford's Database Class V2 - 2015: We added interactive algorithm challenges V3 - 2015: We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these) V4 - 2016: We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017: We added the back end and data visualization challenges V6 - 2018: We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date --hints--\nYour ul element should have six li elements js\nassert lengthOf(document querySelectorAll(' lists li'), 6);\nEach of your new li elements should have an h4 and p element js\nconst lis = document querySelectorAll(' lists li');\nassert isNotEmpty(lis);\nlis forEach(li => {\nassert equal(li children [0] localName, 'h4');\nassert equal(li children [1] localName, 'p');\n});\nYour first h4 should have the text V1 - 2014 js\nassert equal(document querySelectorAll(' lists li h4') [0] innerText, 'V1 - 2014');\nYour first p should have the text We launched freeCodeCamp with a simple list of 15 resources, including Harvard's CS50 and Stanford's Database Class js\nassert equal(document querySelectorAll(' lists li p') [0] innerText, 'We launched freeCodeCamp with a simple list of 15 resources, including Harvard\\'s CS50 and Stanford\\'s Database Class",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10166,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "2e9b8faa854d512b5af67f11f700ddd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "[1] localName, 'p'); }); Your first h4 should have the text V1 - 2014 js assert equal(document querySelectorAll(' lists li h4') [0] innerText, 'V1 - 2014'); Your first p should have the text We launched freeCodeCamp with a simple list of 15 resources, including Harvard's CS50 and Stanford's Database Class js assert equal(document querySelectorAll(' lists li p') [0] innerText, 'We launched freeCodeCamp with a simple list of 15 resources, including Harvard\\'s CS50 and Stanford\\'s Database Class');\nYour second h4 should have the text V2 - 2015 js\nassert equal(document querySelectorAll(' lists li h4') [1] innerText, 'V2 - 2015');\nYour second p should have the text We added interactive algorithm challenges js\nassert equal(document querySelectorAll(' lists li p') [1] innerText, 'We added interactive algorithm challenges ');\nYour third h4 should have the text V3 - 2015 js\nassert equal(document querySelectorAll(' lists li h4') [2] innerText, 'V3 - 2015');\nYour third p should have the text We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these) js\nassert equal(document querySelectorAll(' lists li p') [2] innerText, 'We added our own HTML+CSS challenges (before we\\'d been relying on General Assembly\\'s Dash course for these) ');\nYour fourth h4 should have the text V4 - 2016 js\nassert equal(document querySelectorAll(' lists li h4') [3] innerText, 'V4 - 2016');\nYour fourth p should have the text We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School js\nassert equal(document querySelectorAll(' lists li p') [3] innerText, 'We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School ');\nYour fifth h4 should have the text V5 - 2017",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10166,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "60ed2c245c7186ef860869fadaae73cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "the other certs, we were still using external resources like Node School js assert equal(document querySelectorAll(' lists li p') [3] innerText, 'We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School '); Your fifth h4 should have the text V5 - 2017js\nassert equal(document querySelectorAll(' lists li h4') [4] innerText, 'V5 - 2017');\nYour fifth p should have the text We added the back end and data visualization challenges js\nassert equal(document querySelectorAll(' lists li p') [4] innerText, 'We added the back end and data visualization challenges ');\nYour sixth h4 should have the text V6 - 2018 js\nassert equal(document querySelectorAll(' lists li h4') [5] innerText, 'V6 - 2018');\nYour sixth p should have the text We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date js\nassert equal(document querySelectorAll(' lists li p') [5] innerText, 'We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date ');\nYour six h4 elements should each have the class list-subtitle js\nconst h4s = document querySelectorAll(' lists li h4');\nassert isNotEmpty(h4s);\nh4s forEach(h4 => {\nassert isTrue(h4 classList contains('list-subtitle'));\n});\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10166,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "6a77f75dc79451fd5d979a1ef69539c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of thisThis is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience --fcc-editable-region--\nA Brief History\nOf the Curriculum\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10166,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143b9e1f5035c6e5f2a8231.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "9fe508ebfac4351881f22bbedfbe13ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cd08fe927072ca3a371d.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143cd08fe927072ca3a371d\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nWithin your image-wrapper element, give the second img element a src of https://cdn freecodecamp org/testable-projects-fcc/images/calc png, an alt of image of a calculator project, a loading attribute set to lazy, a class set to image-2, a width attribute set to 400, and a height attribute set to 400 --hints--\nYour second img element should have a src set to https://cdn freecodecamp org/testable-projects-fcc/images/calc png js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [1] getAttribute('src'),\n'https://cdn freecodecamp org/testable-projects-fcc/images/calc png'\n);\nYour second img element should have an alt set to image of a calculator project js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [1] getAttribute('alt'),\n'image of a calculator project'\n);\nYour second img element should have a loading attribute set to lazy js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [1] getAttribute('loading'),\n'lazy'\n);\nYour second img element should have a class set to image-2 js\nassert isTrue(\ndocument querySelectorAll(' image-wrapper img') [1] classList contains('image-2')\n);\nYour second img element should have a width set to 400 js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [1] getAttribute('width'),\n'400'\n);\nYour second img element should have a height set to 400 js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [1] getAttribute('height'),\n'400'\n);\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8898,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cd08fe927072ca3a371d.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9319511b884915e2228b9fe6b14f096d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cd08fe927072ca3a371d.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "CURRICULUM Our efforts to restructure our curriculum with a more project-based focus By freeCodeCamp March 7, 2019 Soon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challengesAfter years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8898,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cd08fe927072ca3a371d.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "eea7087d797e6d208d48912c6ef6534a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cd08fe927072ca3a371d.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experienceA Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8898,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cd08fe927072ca3a371d.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6ce3afafbde11821cad50057d59b8209",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cdf48b634a747de42104.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143cdf48b634a747de42104\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nWithin your image-wrapper element, give your third img element a src of https://cdn freecodecamp org/testable-projects-fcc/images/survey-form-background jpeg, an alt of four people working on code, a loading attribute of lazy, a class set to image-3, a width attribute set to 600, and a height attribute set to 400 --hints--\nYour third img element should have a src set to https://cdn freecodecamp org/testable-projects-fcc/images/survey-form-background jpeg js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [2] getAttribute('src'),\n'https://cdn freecodecamp org/testable-projects-fcc/images/survey-form-background jpeg'\n);\nYour third img element should have an alt set to four people working on code js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [2] getAttribute('alt'),\n'four people working on code'\n);\nYour third img element should have a loading attribute set to lazy js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [2] getAttribute('loading'),\n'lazy'\n);\nYour third img element should have a class set to image-3 js\nassert isTrue(\ndocument querySelectorAll(' image-wrapper img') [2] classList contains('image-3')\n);\nYour third img element should have a width attribute set to 600 js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [2] getAttribute('width'),\n'600'\n);\nYour third img element should have a height attribute set to 400 js\nassert equal(\ndocument querySelectorAll(' image-wrapper img') [2] getAttribute('height'),\n'400'\n);\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cdf48b634a747de42104.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "cb0e6425327fb14577c3e497e088c224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cdf48b634a747de42104.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "CURRICULUM Our efforts to restructure our curriculum with a more project-based focus By freeCodeCamp March 7, 2019 Soon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challengesAfter years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cdf48b634a747de42104.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a4da98c4f86414fb4c0792619c5b5309",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cdf48b634a747de42104.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experienceA Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143cdf48b634a747de42104.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8c72da3014618a562eb2da4f0060d7c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d003ad9e9d76766293ec.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143d003ad9e9d76766293ec\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nWithin your image-quote element, nest an hr element, a p element and a second hr element Give the p element a class set to quote and the text The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals --hints--\nYou should add two hr elements to your image-quote element js\nassert lengthOf(document querySelectorAll(' image-quote hr'), 2);\nYou should add a p element to your image-quote element js\nassert lengthOf(document querySelectorAll(' image-quote p'), 1);\nYour image-quote children should be in the correct order js\nconst children = document querySelector(' image-quote') children;\nassert equal(children [0] localName, 'hr');\nassert equal(children [1] localName, 'p');\nassert equal(children [2] localName, 'hr');\nYour new p element should have a class set to quote js\nassert isTrue(document querySelector(' image-quote p') classList contains('quote'));\nYour new p element should have the text The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals js\nassert equal(document querySelector(' image-quote p') innerText, 'The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d003ad9e9d76766293ec.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d89bdb2df43017368a765fe8007a2d97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d003ad9e9d76766293ec.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitorIt wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d003ad9e9d76766293ec.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "25b4669047dbdc9f5bffe8b5f62de31a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d003ad9e9d76766293ec.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History Of the Curriculum V1 - 2014 We launched freeCodeCamp with a simple list of 15 resources, including Harvard's CS50 and Stanford's Database Class V2 - 2015 We added interactive algorithm challenges V3 - 2015 We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these)V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d003ad9e9d76766293ec.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "359a5d7b29ab643e40ab1c061241accc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d66a5358db0c80628757.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144d66a5358db0c80628757\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nCreate an html selector and give it a font-size property set to 62 5% This will set the default font size for your web page to 10px (the browser default is 16px) This will make it easier for you to work with rem units later, as 2rem would be 20px --hints--\nYou should create an html selector js\nassert exists(new __helpers CSSHelp(document) getStyle('html'));\nYour html selector should have a font-size property set to 62 5% js\nassert equal(new __helpers CSSHelp(document) getStyle('html') fontSize, '62 5%');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d66a5358db0c80628757.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "fe297230d2cb2247d282e85a1310dec5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d66a5358db0c80628757.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentalsThere is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d66a5358db0c80628757.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "764ffde5d37a7675ca461dcda05926f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d66a5358db0c80628757.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d66a5358db0c80628757.md",
      "source_type": "git_repo"
    },
    "token_count": 128,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3914ac0a1b0759f23527b1e8a426c92e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d2842b497779bad947de.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6143d2842b497779bad947de\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nTo start your CSS, normalize the CSS rules by targeting all elements with *, including the ::before and ::after pseudo-selectors Set the padding and margin properties both to 0 and set the box-sizing property to border-box --hints--\nYou should have a *, ::before, ::after selector js\nassert exists(new __helpers CSSHelp(document) getStyle('*, ::before, ::after'));\nYour *, ::before, ::after selector should have a padding property set to 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('*, ::before, ::after') padding, '0px');\nYour *, ::before, ::after selector should have a margin property set to 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('*, ::before, ::after') margin, '0px');\nYour *, ::before, ::after selector should have a box-sizing property set to border-box js\nassert equal(new __helpers CSSHelp(document) getStyle('*, ::before, ::after') boxSizing, 'border-box');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d2842b497779bad947de.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8ec14110f0950ff8a09a39456c7cd43b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d2842b497779bad947de.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of testsEach test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d2842b497779bad947de.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "912739198e5152b3b351593b358590e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d2842b497779bad947de.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these) V4 - 2016 We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challengesV6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6143d2842b497779bad947de.md",
      "source_type": "git_repo"
    },
    "token_count": 166,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4384e9c0905ee060a894c5a08612e5e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d7dbdd3e580da730ff45.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144d7dbdd3e580da730ff45\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nCreate a body selector Set the font-family property to Baskervville, with a fallback of serif Set the color property to linen and the background-color property to rgb(20, 30, 40) --hints--\nYou should have a body selector js\nassert exists(new __helpers CSSHelp(document) getStyle('body'));\nYour body selector should have a font-family property set to Baskervville, with a fallback of serif js\nconst fontFamily = new __helpers CSSHelp(document) getStyle('body') fontFamily;\nassert oneOf(fontFamily, ['Baskervville, serif', `\"Baskervville\", serif`]);\nYour body selector should have a color property set to linen js\nassert equal(new __helpers CSSHelp(document) getStyle('body') color, 'linen');\nYour body selector should have a background-color property set to rgb(20, 30, 40) js\nassert equal(new __helpers CSSHelp(document) getStyle('body') backgroundColor, 'rgb(20, 30, 40)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9152,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d7dbdd3e580da730ff45.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "58e4fe3a380e5d8e4441ce6d7ccc7998",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d7dbdd3e580da730ff45.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of testsEach test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9152,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d7dbdd3e580da730ff45.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "dcde40049601704ecef4f4f240998ef7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d7dbdd3e580da730ff45.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these) V4 - 2016 We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challengesV6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9152,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144d7dbdd3e580da730ff45.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "aa339432876259cd3738568519ccd709",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144de308591ec10e27d5383.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144de308591ec10e27d5383\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nCreate an h1 selector, and set the font-family property to Anton with the fallback of sans-serif --hints--\nYou should have an h1 selector js\nassert exists(new __helpers CSSHelp(document) getStyle('h1'));\nYour h1 selector should have a font-family property set to Anton with the fallback of sans-serif js\nconst fontFamily = new __helpers CSSHelp(document) getStyle('h1') fontFamily;\nassert oneOf(fontFamily, ['Anton, sans-serif', `\"Anton\", sans-serif`]);\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144de308591ec10e27d5383.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "09df0bbc5e3f19d39bf7d07a227b5162",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144de308591ec10e27d5383.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144de308591ec10e27d5383.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "cda5a14ad18b953f74df8a88af3bcb9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144de308591ec10e27d5383.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144de308591ec10e27d5383.md",
      "source_type": "git_repo"
    },
    "token_count": 148,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "df4cb29ee5c391ce3d2deea4dc3952ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144e1ba93e435127a7f516d.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144e1ba93e435127a7f516d\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nCreate an h2, h3, h4, h5, h6 selector Give it a font-family property set to Raleway with a fallback of sans-serif --hints--\nYou should have an h2, h3, h4, h5, h6 selector js\nassert exists(new __helpers CSSHelp(document) getStyle('h2, h3, h4, h5, h6'));\nYour h2, h3, h4, h5, h6 selector should have a font-family property set to Raleway with a fallback of sans-serif js\nconst fontFamily = new __helpers CSSHelp(document) getStyle('h2, h3, h4, h5, h6') fontFamily;\nassert oneOf(fontFamily, ['Raleway, sans-serif', `\"Raleway\", sans-serif`]);\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144e1ba93e435127a7f516d.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "65f4053224088481728b226aaa08521f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144e1ba93e435127a7f516d.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of testsJust one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144e1ba93e435127a7f516d.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b034dc9b011c8183975a4575a279eb11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144e1ba93e435127a7f516d.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144e1ba93e435127a7f516d.md",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ee86003787a072551a6a7a70d2222bf7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee790af79815ad15a832.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144ee790af79815ad15a832\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nNow you are ready to start putting together the grid layout In the previous lectures you learned that CSS Grid offers a two-dimensional grid-based layout, allowing you to center items horizontally and vertically while still retaining control to do things like overlap elements Begin by creating a main selector and giving it a display property set to grid --hints--\nYou should have a main selector js\nassert exists(new __helpers CSSHelp(document) getStyle('main'));\nYour main selector should have a display property set to grid js\nassert equal(new __helpers CSSHelp(document) getStyle('main') display, 'grid');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9098,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee790af79815ad15a832.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "80e6305fcd6f3ba7c22a9794329c167b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee790af79815ad15a832.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9098,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee790af79815ad15a832.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "dd1db5744bae35eb1b813f1a272177a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee790af79815ad15a832.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9098,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee790af79815ad15a832.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "cdd1fd97f32236d52e80e92502c70519",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee46a9d6e614c598cc05.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144ee46a9d6e614c598cc05\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nCreate an a selector, and give it a text-decoration property set to none and a color property set to linen --hints--\nYou should have an a selector js\nassert exists(new __helpers CSSHelp(document) getStyle('a'));\nYour a selector should have a text-decoration property set to none js\nassert equal(new __helpers CSSHelp(document) getStyle('a') textDecoration, 'none');\nYour a selector should have a color property set to linen js\nassert equal(new __helpers CSSHelp(document) getStyle('a') color, 'linen');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee46a9d6e614c598cc05.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b2ec91831cce63ba79146c7ac8d9d1e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee46a9d6e614c598cc05.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee46a9d6e614c598cc05.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f3c65544f449939fc26e1823143aa5c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee46a9d6e614c598cc05.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144ee46a9d6e614c598cc05.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "32fd4e8faca6552a2dec4c998c0ba1d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f1410990ea17187a722b.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144f1410990ea17187a722b\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nNow you can style the layout of your grid CSS Grid is similar to Flexbox in that it has a special property for both the parent and child elements In this case, your parent element is the main element Set the content to have a three-column layout by adding a grid-template-columns property with a value of 1fr 94rem 1fr This will create three columns where the middle column is 94rem wide, and the first and last columns are both 1 fraction of the remaining space in the grid container --hints--\nYour main section should have a grid-template-columns property set to 1fr 94rem 1fr js\nassert equal(new __helpers CSSHelp(document) getStyle('main') gridTemplateColumns, '1fr 94rem 1fr');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f1410990ea17187a722b.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bc2407a4f32480157b96150f281a20d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f1410990ea17187a722b.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working projectOver the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f1410990ea17187a722b.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8b11cfacc7d59ff1680976165e2c7958",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f1410990ea17187a722b.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\n--fcc-editable-region--\nmain {\ndisplay: grid;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f1410990ea17187a722b.md",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "de4a68a9625deacf8d4d6869292f2e69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f3818bfbc51844152e36.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144f3818bfbc51844152e36\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nUse the minmax function to make your columns responsive on any device The minmax function takes two arguments, the first being the minimum value and the second being the maximum These values could be a length, percentage, fr, or even a keyword like max-content Wrap each of your already defined values of the grid-template-columns property in a minmax function, using each value as the second argument The first argument should be 2rem, min-content, and 2rem respectively --hints--\nYour main selector should have a grid-template-columns property set to minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr) js\nassert equal(new __helpers CSSHelp(document) getStyle('main') gridTemplateColumns, 'minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9323,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f3818bfbc51844152e36.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0dae7d5a8def262be544e0052e019009",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f3818bfbc51844152e36.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough)\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9323,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f3818bfbc51844152e36.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e73b01b551bcd38b80d3f1472280a0d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f3818bfbc51844152e36.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\n--fcc-editable-region--\nmain {\ndisplay: grid;\ngrid-template-columns: 1fr 94rem 1fr;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9323,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f3818bfbc51844152e36.md",
      "source_type": "git_repo"
    },
    "token_count": 274,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0430b1cdaca4a287fec3a1b173d1a3ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f42204c8c8195f1f3345.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144f42204c8c8195f1f3345\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nTo add space between rows in the grid layout, you can use the row-gap property Give the main selector a row-gap property of 3rem --hints--\nYour main selector should have a row-gap property of 3rem js\nassert equal(new __helpers CSSHelp(document) getStyle('main') rowGap, '3rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f42204c8c8195f1f3345.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "91a4177a195c2c05704183bc609f70e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f42204c8c8195f1f3345.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description textEach project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f42204c8c8195f1f3345.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a126425938bc6e16190e7d350a9f150a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f42204c8c8195f1f3345.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\n--fcc-editable-region--\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f42204c8c8195f1f3345.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8e32121d3c83f87e9496559628bf020a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f47b7c631e1a6f304dd5.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6144f47b7c631e1a6f304dd5\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nYour magazine will have three primary sections You already set the overall layout in the main rule, but you can adjust the placement in the child rules One option is the grid-column property, which is shorthand for grid-column-start and grid-column-end The grid-column property tells the grid item which grid line to start and end at Create a heading rule and set the grid-column property to 2 / 3 This will tell the heading element to start at grid line 2 and end at grid line 3 --hints--\nYou should have a heading selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' heading'));\nYour heading selector should have a grid-column property set to 2 / 3 js\nassert equal(new __helpers CSSHelp(document) getStyle(' heading') gridColumn, '2 / 3');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f47b7c631e1a6f304dd5.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5ebf9e9c62bf0096ae420a366c41256a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f47b7c631e1a6f304dd5.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of testsJust one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f47b7c631e1a6f304dd5.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "eb7d502a512a330525961485429de9a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f47b7c631e1a6f304dd5.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6144f47b7c631e1a6f304dd5.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c2bee5b83ed1425b759acbffe208fccb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b07081759c2c691166a9.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148b07081759c2c691166a9\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nCreate a text selector and give it a grid-column property set to 2 / 3 --hints--\nYou should have a text selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' text'));\nYour text selector should have a grid-column property set to 2 / 3 js\nassert equal(new __helpers CSSHelp(document) getStyle(' text') gridColumn, '2 / 3');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b07081759c2c691166a9.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "92f488884fd461efacf5716b917ba9dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b07081759c2c691166a9.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b07081759c2c691166a9.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "18fc5f1346c4d2a3ba89f909b37a3692",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b07081759c2c691166a9.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n} heading {\ngrid-column: 2 / 3;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b07081759c2c691166a9.md",
      "source_type": "git_repo"
    },
    "token_count": 260,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "86e5a782c12a372c5cf4d0fe16a91e38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b0d764e4192e5712ed92.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148b0d764e4192e5712ed92\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nFor additional control over the layout of your content, you can have a CSS Grid within a CSS Grid Set the display property of your heading selector to grid --hints--\nYour heading selector should have a display property set to grid js\nassert equal(new __helpers CSSHelp(document) getStyle(' heading') display, 'grid');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8994,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b0d764e4192e5712ed92.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "36020852d09c69d307b45e1a96c925c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b0d764e4192e5712ed92.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like thisPeople will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying\non General Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This\nwas the biggest curriculum improvement to date The millions of people who are learning to code\nthrough freeCodeCamp will have an even better resource to help\nthem learn these fundamentals ```\n```css\n*, ::before, ::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8994,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b0d764e4192e5712ed92.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a8477eb27cb50f1e18f4dd842c6a13b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b0d764e4192e5712ed92.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\n--fcc-editable-region-- heading {\ngrid-column: 2 / 3;\n}\n--fcc-editable-region-- text {\ngrid-column: 2 / 3;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8994,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b0d764e4192e5712ed92.md",
      "source_type": "git_repo"
    },
    "token_count": 272,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "66b4244749237c73432a7bcdc35ab020",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b185ef37522f688316b0.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148b185ef37522f688316b0\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nNow you can style the content of the heading element with CSS Grid The CSS repeat() function is used to repeat a value, rather than writing it out manually, and is helpful for grid layouts For example, setting the grid-template-columns property to repeat(20, 200px) would create 20 columns each 200px wide Give your heading element a grid-template-columns property set to repeat(2, 1fr) to create two columns of equal width --hints--\nYour heading selector should have a grid-template-columns property set to repeat(2, 1fr) js\nassert equal(new __helpers CSSHelp(document) getStyle(' heading') gridTemplateColumns, 'repeat(2, 1fr)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9339,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b185ef37522f688316b0.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3ac266b870f1c5597ebd7ee51c9103ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b185ef37522f688316b0.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working projectOver the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9339,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b185ef37522f688316b0.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0c1b411403b86e45f74c1b555bb2447a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b185ef37522f688316b0.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\n--fcc-editable-region-- heading {\ngrid-column: 2 / 3;\ndisplay: grid;\n}\n--fcc-editable-region-- text {\ngrid-column: 2 / 3;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9339,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b185ef37522f688316b0.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5da319b8bda76b429427dcf8eebf6476",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b30464daf630848c21d4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148b30464daf630848c21d4\ntitle: Step 39\nchallengeType: 0\ndashedName: step-39\n--description--\nGive your heading selector a row-gap property set to 1 5rem --hints--\nYour heading selector should have a row-gap property set to 1 5rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' heading') rowGap, '1 5rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b30464daf630848c21d4.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7d7dd64e12f9fd9f9de2b145a19da18a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b30464daf630848c21d4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like thisPeople will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b30464daf630848c21d4.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "580131e11d752edf8cb5f6873381f1ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b30464daf630848c21d4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\n--fcc-editable-region-- heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\n}\n--fcc-editable-region-- text {\ngrid-column: 2 / 3;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b30464daf630848c21d4.md",
      "source_type": "git_repo"
    },
    "token_count": 288,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f037e883d911517db5088e1d47caef6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b4b150434734143db6f2.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148b4b150434734143db6f2\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nRemember that the grid-column property determines which columns an element starts and ends at There may be times where you are unsure of how many columns your grid will have, but you want an element to stop at the last column To do this, you can use -1 for the end column Create a hero selector and give it a grid-column property set to 1 / -1 This will tell the element to span the full width of the grid --hints--\nYou should have a hero selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' hero'));\nYour hero selector should have a grid-column property set to 1 / -1 js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero') gridColumn, '1 / -1');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b4b150434734143db6f2.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f12762bd1aa5e43bbc9c3f57993aa9ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b4b150434734143db6f2.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working projectOver the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b4b150434734143db6f2.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "22b8f5796c6c22f6cd5edb1872ccb692",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b4b150434734143db6f2.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b4b150434734143db6f2.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e0a2425aaef579d0f5dd0c7ae3f31596",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b5623efa8f369f2c3643.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148b5623efa8f369f2c3643\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nGive the hero selector a position property set to relative --hints--\nYour hero selector should have a position property set to relative js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero') position, 'relative');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9010,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b5623efa8f369f2c3643.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "79cb18003bc1ea97b4e45252ed3294d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b5623efa8f369f2c3643.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like thisPeople will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9010,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b5623efa8f369f2c3643.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0b4e260621ca102242c23426922352d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b5623efa8f369f2c3643.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n}\n--fcc-editable-region-- hero {\ngrid-column: 1 / -1;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9010,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b5623efa8f369f2c3643.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "845f1b18a43a8b5b8a1a9be8fd1a5e88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b59ef318e03875f35c4a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148b59ef318e03875f35c4a\ntitle: Step 43\nchallengeType: 0\ndashedName: step-43\n--description--\nCreate an img selector and give it a width property set to 100%, and an object-fit property set to cover The object-fit property tells the browser how to position the element within its container In this case, cover will set the image to fill the container, cropping as needed to avoid changing the aspect ratio --hints--\nYou should have an img selector js\nassert exists(new __helpers CSSHelp(document) getStyle('img'));\nYour img selector should have a width property set to 100% js\nassert equal(new __helpers CSSHelp(document) getStyle('img') width, '100%');\nYour img selector should have an object-fit property set to cover js\nassert equal(new __helpers CSSHelp(document) getStyle('img') objectFit, 'cover');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b59ef318e03875f35c4a.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "32a027e888dbd8dae42fd44a82b53211",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b59ef318e03875f35c4a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working projectOver the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b59ef318e03875f35c4a.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "eaba3be5e8b9bf5fa53dc2c0b6d9663e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b59ef318e03875f35c4a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\n--fcc-editable-region--\n--fcc-editable-region-- heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9534,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148b59ef318e03875f35c4a.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3bcc6b81fd5075b57f414fa7bd6909b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be3d605d6b3ca9425d11.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148be3d605d6b3ca9425d11\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nThe subtitle also needs to be styled Create a hero-subtitle selector and give it a font-size property set to 2 4rem, a color property set to orangered, and a text-align property set to center --hints--\nYou should have a hero-subtitle selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' hero-subtitle'));\nYour hero-subtitle selector should have a font-size property set to 2 4rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero-subtitle') fontSize, '2 4rem');\nYour hero-subtitle selector should have a color property set to orangered js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero-subtitle') color, 'orangered');\nYour hero-subtitle selector should have a text-align property set to center js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero-subtitle') textAlign, 'center');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be3d605d6b3ca9425d11.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0e69f8a2a80c85844be61855ee2430e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be3d605d6b3ca9425d11.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough)\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be3d605d6b3ca9425d11.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d13be31d2e273ea912f275646a8df794",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be3d605d6b3ca9425d11.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be3d605d6b3ca9425d11.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "764a4a09b8ae18abf1fd653cd8c68de4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bd62bbb8c83a5f1fc1b3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148bd62bbb8c83a5f1fc1b3\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nCreate a hero-title selector and give it a text-align property set to center, a color property set to orangered and a font-size property set to 8rem --hints--\nYou should have a hero-title selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' hero-title'));\nYour hero-title selector should have a text-align property set to center js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero-title') textAlign, 'center');\nYour hero-title selector should have a color property set to orangered js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero-title') color, 'orangered');\nYour hero-title selector should have a font-size property set to 8rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' hero-title') fontSize, '8rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bd62bbb8c83a5f1fc1b3.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "dc1611431a3b0cca09e69e8585427d0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bd62bbb8c83a5f1fc1b3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of testsJust one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bd62bbb8c83a5f1fc1b3.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "cebcfb1788bb666d220c87c8c7aa3c76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bd62bbb8c83a5f1fc1b3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bd62bbb8c83a5f1fc1b3.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "269841f1e890bf25476bbad221f5374e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be82ca63c63daa8cca49.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148be82ca63c63daa8cca49\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nCreate an author selector and give it a font-size property set to 2rem and a font-family property set to Raleway with a fallback of sans-serif --hints--\nYou should have an author selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' author'));\nYour author selector should have a font-size property set to 2rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' author') fontSize, '2rem');\nYour author selector should have a font-family property set to Raleway with a fallback of sans-serif js\nconst fontFamily = new __helpers CSSHelp(document) getStyle(' author') fontFamily;\nassert oneOf(fontFamily, ['Raleway, sans-serif', `\"Raleway\", sans-serif`]);\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9705,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be82ca63c63daa8cca49.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d85ca5171199ca31765e03b9706ba11d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be82ca63c63daa8cca49.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working projectOver the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9705,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be82ca63c63daa8cca49.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e017f0735b8c2f14af3f03a408840af6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be82ca63c63daa8cca49.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9705,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148be82ca63c63daa8cca49.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0b48fe3f7771b2106a681422d7292b99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bf49fcc7913f05dbf9b7.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148bf49fcc7913f05dbf9b7\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nCreate a author-name a:hover selector and give it a background-color property set to #306203 This will create a hover effect only for the a element within the author-name, showing the original freeCodeCamp green in the background --hints--\nYou should have an author-name a:hover selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' author-name a:hover'));\nYour author-name a:hover selector should have a background-color property set to #306203 js\nassert equal(new __helpers CSSHelp(document) getStyle(' author-name a:hover') backgroundColor, 'rgb(48, 98, 3)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bf49fcc7913f05dbf9b7.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "73a15b30db47ff9a3a6b75d8561b8973",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bf49fcc7913f05dbf9b7.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentalsThere is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bf49fcc7913f05dbf9b7.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b8c5df894675eb89db3875ff6478c71e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bf49fcc7913f05dbf9b7.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bf49fcc7913f05dbf9b7.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9613e42c3ca729a8b5745da8a4a6e86a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bfc43df3bc40fe0e6405.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148bfc43df3bc40fe0e6405\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nCreate a publish-date selector and give it a color property of rgba(255, 255, 255, 0 5) --hints--\nYou should have a publish-date selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' publish-date'));\nYour publish-date selector should have a color property set to rgba(255, 255, 255, 0 5) js\nassert equal(new __helpers CSSHelp(document) getStyle(' publish-date') color, 'rgba(255, 255, 255, 0 5)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9542,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bfc43df3bc40fe0e6405.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b7b6f15afc72881db35c30c461b9985e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bfc43df3bc40fe0e6405.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9542,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bfc43df3bc40fe0e6405.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "22749ef8fcc36e5ad3c5a278dbcb2bcc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bfc43df3bc40fe0e6405.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9542,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148bfc43df3bc40fe0e6405.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "deccaa49a8d3791334ca96b29882ac9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c004ffc8434252940dc3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148c004ffc8434252940dc3\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nCreate a social-icons selector Give it a display property set to grid, and a font-size property set to 3rem --hints--\nYou should have a social-icons selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' social-icons'));\nYour social-icons selector should have a display property set to grid js\nassert equal(new __helpers CSSHelp(document) getStyle(' social-icons') display, 'grid');\nYour social-icons selector should have a font-size property set to 3rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' social-icons') fontSize, '3rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c004ffc8434252940dc3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b22cc1364f8e953435d71653448eb87f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c004ffc8434252940dc3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c004ffc8434252940dc3.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6c12e9136ebec7f706811b4b9c8c8e59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c004ffc8434252940dc3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c004ffc8434252940dc3.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9742435ea1c795767a5302d04532d170",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c224ecb157439bc5247c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148c224ecb157439bc5247c\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nThe default settings for CSS Grid will create additional rows as needed, unlike Flexbox Give the social-icons selector a grid-template-columns property set to repeat(5, 1fr) to arrange the icons in a single row --hints--\nYour social-icons selector should have a grid-template-columns property set to repeat(5, 1fr) js\nassert(new __helpers CSSHelp(document) getStyle(' social-icons') gridTemplateColumns === 'repeat(5, 1fr)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c224ecb157439bc5247c.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "cc4ff12948277881f07ba4a7cfc28a0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c224ecb157439bc5247c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c224ecb157439bc5247c.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b804cc1152bcf497509e9345529f9abe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c224ecb157439bc5247c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}\n--fcc-editable-region-- social-icons {\ndisplay: grid;\nfont-size: 3rem;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c224ecb157439bc5247c.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ac61dab6cc6270c165e559d666bc2fad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148c434bd731d45617a76c6\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nIf you wanted to add more social icons, but keep them on the same row, you would need to update grid-template-columns to create additional columns As an alternative, you can use the grid-auto-flow property This property takes either row or column as the first value, with an optional second value of dense grid-auto-flow uses an auto-placement algorithm to adjust the grid layout Setting it to column will tell the algorithm to create new columns for content as needed The dense value allows the algorithm to backtrack and fill holes in the grid with smaller items, which can result in items appearing out of order For your social-icons selector, set the grid-auto-flow property to column --hints--\nYour social-icons selector should have a grid-auto-flow property set to column js\nassert(new __helpers CSSHelp(document) getStyle(' social-icons') gridAutoFlow === 'column');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10162,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "7a356dcfafbbae08be3416a692fbb136",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of testsJust one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10162,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "61fe3ea53d936bc29a3e1d24ee07902c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10162,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "29a384ebe1075f793a253bbf774e3307",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "cover; } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); } --fcc-editable-region--social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10162,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c434bd731d45617a76c6.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4a04a32506ad5a1e8565858706b0dd08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c5036ddad94692a66230.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148c5036ddad94692a66230\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nNow the auto-placement algorithm will kick in when you add a new icon element However, the algorithm defaults the new column width to be auto, which will not match your current columns You can override this with the grid-auto-columns property Give the social-icons selector a grid-auto-columns property set to 1fr --hints--\nYour social-icons selector should have a grid-auto-columns property set to 1fr js\nassert equal(new __helpers CSSHelp(document) getStyle(' social-icons') gridAutoColumns, '1fr');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9800,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c5036ddad94692a66230.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7eaa48ea4c445ee866fd6b7a534cc024",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c5036ddad94692a66230.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9800,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c5036ddad94692a66230.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "dd50de2df8459645d222ead607809050",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c5036ddad94692a66230.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}\n--fcc-editable-region-- social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9800,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c5036ddad94692a66230.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0bcdac99e8ce242e9a24edcdc5a55689",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c6aa9981d74af202125e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148c6aa9981d74af202125e\ntitle: Step 54\nchallengeType: 0\ndashedName: step-54\n--description--\nGive the text selector a font-size property set to 1 8rem and a letter-spacing property set to 0 6px --hints--\nYour text selector should have a font-size property set to 1 8rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' text') fontSize, '1 8rem');\nYour text selector should have a letter-spacing property set to 0 6px js\nassert equal(new __helpers CSSHelp(document) getStyle(' text') letterSpacing, '0 6px');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9786,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c6aa9981d74af202125e.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "571e2a90d0a3d9e1db5f2bb444579bf2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c6aa9981d74af202125e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9786,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c6aa9981d74af202125e.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e26ea7709f28c15a9286aae474c2eba7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c6aa9981d74af202125e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n}\n--fcc-editable-region-- text {\ngrid-column: 2 / 3;\n}\n--fcc-editable-region-- hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9786,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c6aa9981d74af202125e.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2e0cee636c4ecb007c6eb99e18880657",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c58bace368497fb11bcf.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148c58bace368497fb11bcf\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nMuch like Flexbox, with CSS Grid you can align the content of grid items with align-items and justify-items align-items will align child elements along the column axis, and justify-items will align child elements along the row axis Give the social-icons selector an align-items property set to center --hints--\nYour social-icons selector should have an align-items property set to center js\nassert equal(new __helpers CSSHelp(document) getStyle(' social-icons') alignItems, 'center');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9812,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c58bace368497fb11bcf.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bfbe5ce82879eea6b09889444a4fa4c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c58bace368497fb11bcf.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9812,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c58bace368497fb11bcf.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2b253c6dc2fe24b162eb55964b7916bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c58bace368497fb11bcf.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}\n--fcc-editable-region-- social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9812,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c58bace368497fb11bcf.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "820a4ab91ead35e319d3f2afbd75595d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c721e74ecd4c619ae51c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148c721e74ecd4c619ae51c\ntitle: Step 55\nchallengeType: 0\ndashedName: step-55\n--description--\nYour text element is not a CSS Grid, but you can create columns within an element without using Grid by using the column-width property Give your text selector a column-width property set to 25rem --hints--\nYour text selector should have a column-width property set to 25rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' text') columnWidth, '25rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9756,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c721e74ecd4c619ae51c.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5d5df228452fb4388e6a8c7caecccd71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c721e74ecd4c619ae51c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9756,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c721e74ecd4c619ae51c.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9c5400c78b00a7518e2af1e819469a27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c721e74ecd4c619ae51c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n}\n--fcc-editable-region-- text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\n}\n--fcc-editable-region-- hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9756,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148c721e74ecd4c619ae51c.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b1ef15bf7c6e42410710b12f9f2c015d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148ceaf5d897d4d8b3554b3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148ceaf5d897d4d8b3554b3\ntitle: Step 56\nchallengeType: 0\ndashedName: step-56\n--description--\nMagazines often use justified text in their printed content to structure their layout and control the flow of their content While this works in printed form, justified text on websites can be an accessibility concern, for example presenting challenges for folks with dyslexia To make your project look like a printed magazine, give the text selector a text-align property set to justify --hints--\nYour text selector should have a text-align property set to justify js\nassert equal(new __helpers CSSHelp(document) getStyle(' text') textAlign, 'justify');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148ceaf5d897d4d8b3554b3.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "84521baed669425eef49458a65caadc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148ceaf5d897d4d8b3554b3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148ceaf5d897d4d8b3554b3.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6a7ac27de436e0dfbefb9cae7fb67c45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148ceaf5d897d4d8b3554b3.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n}\n--fcc-editable-region-- text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\n}\n--fcc-editable-region-- hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148ceaf5d897d4d8b3554b3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8aa1a65aed1850baed6a68463d095ead",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148cf094b3f2b4e8a032c63\ntitle: Step 57\nchallengeType: 0\ndashedName: step-57\n--description--\nThe ::first-letter pseudo-selector allows you to target the first letter in the text content of an element Create a first-paragraph::first-letter selector and set the font-size property to 6rem Also give it a color property set to orangered to make it stand out --hints--\nYou should have a first-paragraph::first-letter selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' first-paragraph::first-letter'));\nYour first-paragraph::first-letter selector should have a font-size property set to 6rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' first-paragraph::first-letter') fontSize, '6rem');\nYour first-paragraph::first-letter selector should have a color property set to orangered js\nassert equal(new __helpers CSSHelp(document) getStyle(' first-paragraph::first-letter') color, 'orangered');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8f313ece00d042565c4e277fca5e08af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory textNo more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e0256107a78efcda6223195d2a88b30f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "916123db3b1c2733495ded89831bc3d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148cf094b3f2b4e8a032c63.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b69a5e38bd4fe5ee23515c241aa36053",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d1bdf39c5b5186f5974b\ntitle: Step 59\nchallengeType: 0\ndashedName: step-59\n--description--\nCreate an hr selector, and give it a margin property set to 1 5rem 0 --hints--\nYou should have an hr selector js\nassert exists(new __helpers CSSHelp(document) getStyle('hr'));\nYour hr selector should have a margin property set to 1 5rem 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('hr') margin, '1 5rem 0px');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c5556c8fe411c8226a200e3c72affbb4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "c398386de12bb1229832f2d2511d04ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\n--fcc-editable-region--\n--fcc-editable-region-- heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "465eaf230ba6ec1c75fbcec0319141ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); } social-icons { display: grid; font-size: 3rem; grid-template-columns: repeat(5, 1fr); grid-auto-flow: column; grid-auto-columns: 1fr; align-items: center; }first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1bdf39c5b5186f5974b.md",
      "source_type": "git_repo"
    },
    "token_count": 219,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "10052c5c26b6744a5a470262d22cd2dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d0b863d10d50544ace0e\ntitle: Step 58\nchallengeType: 0\ndashedName: step-58\n--description--\nThe other text has been shifted out of place Move it into position by giving the first-paragraph::first-letter selector a float property set to left and a margin-right property set to 1rem --hints--\nYour first-paragraph::first-letter selector should have a float property set to left js\nassert equal(new __helpers CSSHelp(document) getStyle(' first-paragraph::first-letter') float, 'left');\nYour first-paragraph::first-letter selector should have a margin-right property set to 1rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' first-paragraph::first-letter') marginRight, '1rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10125,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d9f0d18f35cb886b6c1f4ee3b86ece40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentalsThere is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10125,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1976b8b6f2eba0dffbdcfcde8e26ce5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10125,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8e80592c22d023eaeaf9c92934ee47bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n}\n--fcc-editable-region-- first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10125,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d0b863d10d50544ace0e.md",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6d89a6048eaa75f442bb79da17d62636",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d1f9eb63c252e1f8acc4\ntitle: Step 60\nchallengeType: 0\ndashedName: step-60\n--description--\nTo give the hr a color, you need to adjust the border property Give the hr selector a border property set to 1px solid rgba(120, 120, 120, 0 6) --hints--\nYour hr should have a border property set to 1px solid rgba(120, 120, 120, 0 6) js\nassert equal(new __helpers CSSHelp(document) getStyle('hr') borderWidth, '1px');\nassert equal(new __helpers CSSHelp(document) getStyle('hr') borderStyle, 'solid');\nassert equal(new __helpers CSSHelp(document) getStyle('hr') borderColor, 'rgba(120, 120, 120, 0 6)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "902a54898fba00a8a970733f027c781b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working projectOver the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f6731c854ce7467ed07d919cdeebbe97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\n--fcc-editable-region--\nhr {\nmargin: 1 5rem 0;\n}\n--fcc-editable-region-- heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "1d018348d328ba071b3c4924d9c41c0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d1f9eb63c252e1f8acc4.md",
      "source_type": "git_repo"
    },
    "token_count": 260,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "a92a4dffb84fa91afae656037a0aa3be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d33e31fccf558696c745\ntitle: Step 62\nchallengeType: 0\ndashedName: step-62\n--description--\nTo make the quote text stand out more, give the quote selector a font-family property set to Raleway with a fallback of sans-serif --hints--\nYour quote selector should have a font-family property set to Raleway with a fallback of sans-serif js\nconst fontFamily = new __helpers CSSHelp(document) getStyle(' quote') fontFamily;\nassert oneOf(fontFamily, ['Raleway, sans-serif', `\"Raleway\", sans-serif`]);\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "601f4506a69af7cfbaede0a54e501c81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "c5bfd1488007a9f3bc59205fe1314a3d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "1a3cffa5626827802698fd57dfed7774",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n}\n--fcc-editable-region-- quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d33e31fccf558696c745.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "0086436efbc656f40f21c4735d4948af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d2444d01ab541e64a1e4\ntitle: Step 61\nchallengeType: 0\ndashedName: step-61\n--description--\nCreate a quote selector Give it a color property set to #00beef, a font-size property set to 2 4rem, and a text-align property set to center --hints--\nYou should have a quote selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' quote'));\nYour quote selector should have a color property set to #00beef js\nassert equal(new __helpers CSSHelp(document) getStyle(' quote') color, 'rgb(0, 190, 239)');\nYour quote selector should have a font-size property set to 2 4rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' quote') fontSize, '2 4rem');\nYour quote selector should have a text-align property set to center js\nassert equal(new __helpers CSSHelp(document) getStyle(' quote') textAlign, 'center');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "05a2ab2437baf8ca6a47a4411f18ed9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of testsJust one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "96564737d9d758edd488c5219cee5b80",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "44b55c104a8c2a9b18c73cd85dc54ea4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; }author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d2444d01ab541e64a1e4.md",
      "source_type": "git_repo"
    },
    "token_count": 304,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "30da9e6d2a4221338d67bbb208c3683d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d4d57b965358c9fa38bf\ntitle: Step 64\nchallengeType: 0\ndashedName: step-64\n--description--\nNow it's time to style your third section Note that it has the text and text-with-images values for the class attribute, which means it is already inheriting the styles from your text rule Create a text-with-images selector and set the display property to grid --hints--\nYou should have a text-with-images selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' text-with-images'));\nYour text-with-images selector should have a display property set to grid js\nassert equal(new __helpers CSSHelp(document) getStyle(' text-with-images') display, 'grid');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10396,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "ae618681bb36bcc2fa26a0165ac815d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10396,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "66aa3ebf1dca3a868ec63c1b497c2850",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10396,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "fc917930ea9fc0067d1ddf06c0f71d9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10396,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d4d57b965358c9fa38bf.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4bd9fc585b4313a59de60a5777289365",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d3fff5186b57123d97e2\ntitle: Step 63\nchallengeType: 0\ndashedName: step-63\n--description--\nA quote is not really a quote without proper quotation marks You can add these with CSS pseudo selectors Create a quote::before selector and set the content property to \" with a space following it Also, create a quote::after selector and set the content property to \" with a space preceding it --hints--\nYou should have a quote::before selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' quote::before'));\nYour quote::before selector should have a content property set to '\" ' js\nassert match(new __helpers CSSHelp(document) getStyle(' quote::before') content, /\\\"\\\\\"\\s\\\"/);\nYou should have a quote::after selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' quote::after'));\nYour quote::after selector should have a content property set to ' \"' js\nassert match(new __helpers CSSHelp(document) getStyle(' quote::after') content, /\\\"\\s\\\\\"\"/);\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10661,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "417584c245b79fb7d40a21489b62a41b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough)\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10661,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f4cba7f8bbb5963299d19b4f66dde805",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10661,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "812fd4b715f54af896a46b39b90a528e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; }author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10661,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d3fff5186b57123d97e2.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6d4ab2723ce0e46e787ee87825fcca46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d7720f0db36775db868a\ntitle: Step 65\nchallengeType: 0\ndashedName: step-65\n--description--\nYou will need to have a column for text and a column for images Give the text-with-images selector a grid-template-columns property set to 1fr 2fr Also set the column-gap property to 3rem to provide more spacing between the columns --hints--\nYour text-with-images selector should have a grid-template-columns property set to 1fr 2fr js\nassert equal(new __helpers CSSHelp(document) getStyle(' text-with-images') gridTemplateColumns, '1fr 2fr');\nYour text-with-images selector should have a column-gap property set to 3rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' text-with-images') columnGap, '3rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "dda48a2616b1a1d44331cdba91494f2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working projectOver the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "eaffe0cc2ebd43994006cd4e2f4ea93a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "215a56053d6265ecb09972bc29ee4fcd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n}\n--fcc-editable-region-- text-with-images {\ndisplay: grid;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d7720f0db36775db868a.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "840d24a767094ffc701a52a5d259096d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d94fdf6a5d6899f8ff15\ntitle: Step 66\nchallengeType: 0\ndashedName: step-66\n--description--\nGive the text-with-images selector a margin-bottom property set to 3rem --hints--\nYour text-with-images selector should have a margin-bottom property set to 3rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' text-with-images') marginBottom, '3rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10158,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "7227dc8aed4af29855b9b10c4e175459",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like thisPeople will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10158,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "05d6f6a8584f1e06576051901a980c42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10158,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "31bd5f5ce2f31661e72f60aae001bd0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n}\n--fcc-editable-region-- text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10158,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d94fdf6a5d6899f8ff15.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "09876c65706a7c56146f48067986b36c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148d9825b50a3698aeee644\ntitle: Step 67\nchallengeType: 0\ndashedName: step-67\n--description--\nCreate a lists selector and set the list-style-type property to none This will get rid of the bullet points on the list items --hints--\nYou should have a lists selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' lists'));\nYour lists selector should have a list-style-type property set to none js\nassert equal(new __helpers CSSHelp(document) getStyle(' lists') listStyleType, 'none');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "5a80b2f5e46ec4155f2acae45613b7b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "cbfc45528784c158614b818022231363",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "52af511201b2075ef6013b9a206d0405",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10335,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148d9825b50a3698aeee644.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b4c548539c987f97e635618c954f7e49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e162e255676ae0da6a76\ntitle: Step 68\nchallengeType: 0\ndashedName: step-68\n--description--\nGive the lists selector a margin-top property set to 2rem --hints--\nYour lists selector should have a margin-top property set to 2rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' lists') marginTop, '2rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "421944cb7aa03c25a11a31c2ae8fc6c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like thisPeople will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "a299a0e9df03dc0e5282452823892812",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ccc5c37940b3d5ab531c4bff52619162",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n}\n--fcc-editable-region-- lists {\nlist-style-type: none;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10176,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e162e255676ae0da6a76.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "cc90af69a9394d3c8de043e24c205364",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e19c3e26436be0155690\ntitle: Step 69\nchallengeType: 0\ndashedName: step-69\n--description--\nCreate a lists li rule to target the list items within your lists element Give it a margin-bottom property set to 1 5rem --hints--\nYou should have a lists li selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' lists li'));\nYour lists li selector should have a margin-bottom property set to 1 5rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' lists li') marginBottom, '1 5rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10403,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "54051f89ffaa0ebd555c86ddb23f5b07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10403,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "9fd640d817ba82a36d7549009f5b2d47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10403,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "38b966de4ee40867523591a3b9fd91d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10403,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e19c3e26436be0155690.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "1d92f5b0d41ca0273be3b27d6d7fd360",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e2dcdd60306dd77d41cc\ntitle: Step 71\nchallengeType: 0\ndashedName: step-71\n--description--\nTime to style the last section of the magazine - the images The images are wrapped with an aside element using the image-wrapper class, so create an image-wrapper selector Set the display property to grid --hints--\nYou should have an image-wrapper selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' image-wrapper'));\nYour image-wrapper selector should have a display property set to grid js\nassert equal(new __helpers CSSHelp(document) getStyle(' image-wrapper') display, 'grid');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b8036eeae848f3447d6fe62c251d8acb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetitionThe main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "0d5122e20997ca5590a9d9a3ff605906",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "edfb1609dd7cdd8f4fe0a6aa3e7fa65b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e2dcdd60306dd77d41cc.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "854c093a488dd0754b5bd07c5d0ffda7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e246146b646cf4255f0c\ntitle: Step 70\nchallengeType: 0\ndashedName: step-70\n--description--\nCreate a list-title, list-subtitle selector and set the color property to #00beef --hints--\nYou should have a list-title, list-subtitle selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' list-title, list-subtitle'));\nYour list-title, list-subtitle selector should have a color property set to #00beef js\nassert equal(new __helpers CSSHelp(document) getStyle(' list-title, list-subtitle') color, 'rgb(0, 190, 239)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10469,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "6b2eefa8cb30c48d9e9f8a086a3aa29f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10469,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8b458b1d8ceaceca2354e71a7eafbd49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10469,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "e74cbc8cddb02ab8bdb0c069bab0ffca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10469,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e246146b646cf4255f0c.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "3908cb9605537a7114c0326fc0a45951",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e5a204d99e70343a63e4\ntitle: Step 73\nchallengeType: 0\ndashedName: step-73\n--description--\nThe gap property is a shorthand way to set the value of column-gap and row-gap at the same time If given one value, it sets the column-gap and row-gap both to that value If given two values, it sets the row-gap to the first value and the column-gap to the second Give the image-wrapper selector a gap property set to 2rem --hints--\nYour image-wrapper element should have a gap property set to 2rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' image-wrapper') gap, '2rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "dd4f2efe24ce0087c37606f66408ba44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projectsAnd there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e803595b260fbc9852f8c4907ffa4e4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "1705a4c289609e3c7017a3ed1fa44daf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n}\n--fcc-editable-region-- image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10688,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e5a204d99e70343a63e4.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "e22610382a1b36494fc6f0e05dd487c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e62a6f768f71c4f04828\ntitle: Step 74\nchallengeType: 0\ndashedName: step-74\n--description--\nThe place-items property can be used to set the align-items and justify-items values at the same time The place-items property takes one or two values If one value is provided, it is used for both the align-items and justify-items properties If two values are provided, the first value is used for the align-items property and the second value is used for the justify-items property Give the image-wrapper selector a place-items property set to center --hints--\nYour image-wrapper selector should have a place-items property set to center js\nassert equal(new __helpers CSSHelp(document) getStyle(' image-wrapper') placeItems, 'center');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10854,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "cacad0080c8e0cb41359fa3ec99bdceb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentalsThere is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10854,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "ae94aa64af94e4485c0a460831eaff9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10854,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2a3d3dfe356b5335fe8825901692c177",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n}\n--fcc-editable-region-- image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\ngap: 2rem;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10854,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e62a6f768f71c4f04828.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "f245dd0227be38adc1cb83557ec847be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e4d6861a486f60681f36\ntitle: Step 72\nchallengeType: 0\ndashedName: step-72\n--description--\nThe images should be within a two column, three row layout Give the image-wrapper selector a grid-template-columns property set to 2fr 1fr and a grid-template-rows property set to repeat(3, min-content) This will give our grid rows that adjust in height based on the content, but columns that remain a fixed width based on the container --hints--\nYour image-wrapper selector should have a grid-template-columns property set to 2fr 1fr js\nassert equal(new __helpers CSSHelp(document) getStyle(' image-wrapper') gridTemplateColumns, '2fr 1fr');\nYour image-wrapper selector should have a grid-template-rows property set to repeat(3, min-content) js\nassert equal(new __helpers CSSHelp(document) getStyle(' image-wrapper') gridTemplateRows, 'repeat(3, min-content)');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "110194c16a53f2b617cd8ed25dab302e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of testsJust one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1526d4b2285db172407f3b60f4a6dd30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "22f35e08f41b1ac20548645dd5a291ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; }author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n}\n--fcc-editable-region-- image-wrapper {\ndisplay: grid;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10891,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e4d6861a486f60681f36.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "c624361c83a254915777b9df40d905ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148e789329dc9736ce59b85\ntitle: Step 75\nchallengeType: 0\ndashedName: step-75\n--description--\nCreate an image-1, image-3 rule and give it a grid-column property set to 1 / -1 This will allow the first and third images to span the full width of the grid --hints--\nYou should have an image-1, image-3 selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' image-1, image-3'));\nYour image-1, image-3 selector should have a grid-column property set to 1 / -1 js\nassert equal(new __helpers CSSHelp(document) getStyle(' image-1, image-3') gridColumn, '1 / -1');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "39804d398ba17d71b572121f3dc9f3f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough ) The entire curriculum should be a series of projects No more walls of explanatory text No more walls of tests Just one test at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentalsThere is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "2794a1159d3b69ada187ded30a854c2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "e29a0447ec7f7b13f9850a4b4711ffef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; } author-name a:hover { background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); }social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n} image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\ngap: 2rem;\nplace-items: center;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148e789329dc9736ce59b85.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "2453f1ec25fb9b727074a0556fa82b98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148f34ebedc2274bceeb99c\ntitle: Step 76\nchallengeType: 0\ndashedName: step-76\n--description--\nNow that the magazine layout is finished, you need to make it responsive Start with a @media query for only screen with a max-width of 720px Inside, create an image-wrapper selector and give it a grid-template-columns property of 1fr This will collapse the three images into one column on smaller screens --hints--\nYou should have a new @media rule for only screen and (max-width: 720px) js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [0] media mediaText, 'only screen and (max-width: 720px)');\nYour new @media rule should have an image-wrapper selector js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [0] cssRules [0] selectorText, ' image-wrapper');\nYour new image-wrapper selector should have a grid-template-columns property of 1fr js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [0] cssRules [0] style gridTemplateColumns, '1fr');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "e5dc5048191cd15503911ba200bb4519",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of testsEach test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "d8c6d2e3aad45e0703b82f5812a2ce10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these) V4 - 2016 We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challengesV6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "721d7f808271d13d932ea45fad0a27d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "img { width: 100%; object-fit: cover; } hr { margin: 1 5rem 0; border: 1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 24rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n} image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\ngap: 2rem;\nplace-items: center;\n} image-1,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "784cea9ee06a93ea052c6d5f51cae24c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "margin-right: 1rem; } quote { color: #00beef; font-size: 2 4rem; text-align: center; font-family: \"Raleway\", sans-serif; } quote::before { content: '\" '; } quote::after { content: ' \"'; } text-with-images { display: grid; grid-template-columns: 1fr 2fr; column-gap: 3rem; margin-bottom: 3rem; } lists { list-style-type: none; margin-top: 2rem; } lists li { margin-bottom: 1 5rem; } list-title, list-subtitle { color: #00beef; } image-wrapper { display: grid; grid-template-columns: 2fr 1fr; grid-template-rows: repeat(3, min-content); gap: 2rem; place-items: center; } image-1,image-3 {\ngrid-column: 1 / -1;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11221,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f34ebedc2274bceeb99c.md",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "0a10c27d0e5017d7b33a594141c5afb3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148f600cde42b7670c2611f\ntitle: Step 77\nchallengeType: 0\ndashedName: step-77\n--description--\nCreate another @media query for only screen with a max-width of 600px Within, create a text-with-images rule and give it a grid-template-columns property of 1fr This will collapse your bottom text area into a single column on smaller screens --hints--\nYou should create a new @media query for only screen and (max-width: 600px) This should be below your previous @media query js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [1] media mediaText, 'only screen and (max-width: 600px)');\nYour new @media query should have a text-with-images selector js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [1] cssRules [0] selectorText, ' text-with-images');\nYour new text-with-images selector should have a grid-template-columns property with a value of 1fr js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [1] cssRules [0] style gridTemplateColumns, '1fr');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11334,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "3a7549ae3777181b0721c99db9961691",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of testsEach test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11334,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "08ec9fc83b78b49cbbe4299aa8f10069",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these) V4 - 2016 We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challengesV6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11334,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "cea9f0133b6129be626197844c2a0e28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "img { width: 100%; object-fit: cover; } hr { margin: 1 5rem 0; border: 1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 24rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n} image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\ngap: 2rem;\nplace-items: center;\n} image-1,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11334,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9dbeab845bc8245f1144d25fca87379c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "margin-right: 1rem; } quote { color: #00beef; font-size: 2 4rem; text-align: center; font-family: \"Raleway\", sans-serif; } quote::before { content: '\" '; } quote::after { content: ' \"'; } text-with-images { display: grid; grid-template-columns: 1fr 2fr; column-gap: 3rem; margin-bottom: 3rem; } lists { list-style-type: none; margin-top: 2rem; } lists li { margin-bottom: 1 5rem; } list-title, list-subtitle { color: #00beef; } image-wrapper { display: grid; grid-template-columns: 2fr 1fr; grid-template-rows: repeat(3, min-content); gap: 2rem; place-items: center; } image-1,image-3 {\ngrid-column: 1 / -1;\n}\n@media only screen and (max-width: 720px) { image-wrapper {\ngrid-template-columns: 1fr;\n}\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11334,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f600cde42b7670c2611f.md",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "11440639f6a4a162055df829915bc8de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e588f0e8a772a8a81a6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 614e0e588f0e8a772a8a81a6\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nYour image currently takes up a lot of space. To better see what you are working on, add a width attribute to the img element, with a value of 400.\nYou will remove this later on when you have worked on the CSS.\n--hints--\nYour img element should have a width attribute set to 400.\njs\nassert.equal(document.querySelector('img')?.getAttribute('width'), '400');\n--seed--\n--seed-contents--\n```html\nMagazine\n--fcc-editable-region--\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1647,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e588f0e8a772a8a81a6.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "87551e3fef432e0db4d636a8dfe28b5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6165d3b702a5d92ad970b30c.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6165d3b702a5d92ad970b30c\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nAfter your img element, add an h1 element with the class set to hero-title and the text set to OUR NEW CURRICULUM, followed by a p element with the class set to hero-subtitle and the text set to Our efforts to restructure our curriculum with a more project-based focus.\n--hints--\nYou should create an h1 element.\njs\nassert.exists(document.querySelector('h1'));\nYour h1 element should come after your img element.\njs\nassert.equal(document.querySelector('h1')?.previousElementSibling?.localName, 'img');\nYour h1 element should have the class set to hero-title.\njs\nassert.equal(document.querySelector('h1')?.className, 'hero-title');\nYour h1 element should have the text set to OUR NEW CURRICULUM.\njs\nassert.equal(document.querySelector('h1')?.textContent, 'OUR NEW CURRICULUM');\nYou should create a new p element.\njs\nassert.exists(document.querySelector('p'));\nYour p element should come after your h1 element.\njs\nassert.equal(document.querySelector('p')?.previousElementSibling?.localName, 'h1');\nYour p element should have the class set to hero-subtitle.\njs\nassert.equal(document.querySelector('p')?.className, 'hero-subtitle');\nYour p element should have the text set to Our efforts to restructure our curriculum with a more project-based focus.\njs\nassert.equal(document.querySelector('p')?.textContent?.trim()?.replace(/\\s{2,}/, ' '), 'Our efforts to restructure our curriculum with a more project-based focus');\n--seed--\n--seed-contents--\n```html\nMagazine\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6165d3b702a5d92ad970b30c.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ac53a1b74f835fe09d8cfb7d2bd2e46c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6169cd8a558aa8434e0ad7f6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6169cd8a558aa8434e0ad7f6\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nThe Referer HTTP header contains information about the address or URL of a page that a user might be visiting from. This information can be used in analytics to track how many users from your page visit freecodecamp.org, for example. Setting the rel attribute to noreferrer omits this information from the HTTP request. Give your a element a rel attribute set to noreferrer.\n--hints--\nYour a element should have the rel set to noreferrer.\njs\nassert.equal(document.querySelector('div')?.querySelector('p')?.firstElementChild?.getAttribute('rel'), 'noreferrer');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\n--fcc-editable-region--\nBy\nfreeCodeCamp\nMarch 7, 2019\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2147,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6169cd8a558aa8434e0ad7f6.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f2daf2bb9f75e168acd62946414b0431",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea7adae8053065a64f9002.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ea7adae8053065a64f9002\ntitle: Step 1\nchallengeType: 1\ndashedName: step-1\n--description--\nIn this workshop, you will review working with the different Math object methods by building a Mathbot. This Mathbot will log some math operations and messages to the console in efforts to teach you about JavaScript's Math object.\nFor this first step, start by creating a variable called botName and assign it the string value of \"MathBot\".\nThen, create another variable called greeting and assign it the sentence \"Hi there! My name is [botName goes here] and I am here to teach you about the Math object!\". In place of the [botName goes here] placeholder, use the botName variable.\nYou are free to use template literals or string concatenation with the + operator to achieve this.\nFinally, log the greeting variable to the console.\n--hints--\nYou should have a variable called botName.\njs\nassert.isNotNull(botName);\nYour botName variable should be a string.\njs\nassert.isString(botName);\nYou should assign the string value \"MathBot\" to the botName variable.\njs\nassert.strictEqual(botName, \"MathBot\");\nYou should have a variable called greeting.\njs\nassert.isNotNull(greeting);\nYour greeting variable should be a string.\njs\nassert.isString(greeting);\nYou should assign the following sentence to the greeting variable: \"Hi there! My name is [MathBot goes here] and I am here to teach you about the Math object!\". Make sure to replace [MathBot goes here] with the botName variable.\njs\nassert.strictEqual(greeting, \"Hi there! My name is MathBot and I am here to teach you about the Math object!\");\nYou should log the greeting variable to the console.\njs\nassert.match(code, /console\\.log\\(greeting\\)/);\n--seed--\n--seed-contents--\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1910,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea7adae8053065a64f9002.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9dd52aec8394503b0349d9ce298a9c53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea7e7399244c6d4b6052a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ea7e7399244c6d4b6052a1\ntitle: Step 2\nchallengeType: 1\ndashedName: step-2\n--description--\nThe next part of the workshop will review how the Math.random() method works.\nStart by adding another console.log() that logs the string \"The Math.random() method returns a pseudo random number between 0 and less than 1.\" to the console.\n--hints--\nYou should have a console.log() that logs the string \"The Math.random() method returns a pseudo random number between 0 and less than 1.\".\njs\nassert.match(code, /console\\.log\\((`|'|\")\\s*The\\s+Math\\.random\\(\\)\\s+method\\s+returns\\s+a\\s+pseudo\\s+random\\s+number\\s+between\\s+0\\s+and\\s+less\\s+than\\s+1\\.\\1\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea7e7399244c6d4b6052a1.md",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b7299bf98be2908a1d79ab3723cbf577",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea7fc048a6e26e33c598fe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ea7fc048a6e26e33c598fe\ntitle: Step 3\nchallengeType: 1\ndashedName: step-3\n--description--\nNow, it is time to generate a random number using the Math.random() method.\nCreate a variable called randomNum and assign it the value of the result of calling the Math.random() method.\nThen, log the randomNum variable to the console.\nTry adding a space in the code to re-run the bot and see different random numbers that are generated.\n--hints--\nYou should have a variable called randomNum.\njs\nassert.isNotNull(randomNum);\nYou should assign the result of calling the Math.random() method to the randomNum variable.\njs\nassert.match(code, /randomNum\\s*=\\s*Math\\.random\\(\\);?/);\nYou should not hardcode a random number for the randomNum variable. Make sure to use the Math.random() method to generate the random number.\n```js\nassert.notMatch(code, /randomNum\\s=\\s0.\\d+;?/);\n// check for whole random numbers just in case a camper does this\nassert.notMatch(code, /randomNum\\s=\\s\\d+;?/);\n```\nYou should log the randomNum variable to the console.\njs\nassert.match(code, /console\\.log\\(\\s*randomNum\\s*\\);?/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1517,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea7fc048a6e26e33c598fe.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0354a43741c58c601f8fdc16fa4e8dbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e503b110f76d3ac2ff6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 614e0e503b110f76d3ac2ff6\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nYou should remove the temporary width attribute before writing the CSS for your hero-img --hints--\nYour hero-img should not have a width attribute js\nassert isNull(document querySelector(' hero-img') getAttribute('width'));\n--seed--\n--seed-contents--\n```html\nMagazine\n--fcc-editable-region--\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\n--fcc-editable-region--\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e503b110f76d3ac2ff6.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "53a8baf0656cbb12f8b6ce37cf610fbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e503b110f76d3ac2ff6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like thisPeople will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e503b110f76d3ac2ff6.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a8aeb38d2240d4df949c62034c131814",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e503b110f76d3ac2ff6.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp will have an even better resource to help them learn these fundamentals ``` ```css *, ::before, ::after { padding: 0; margin: 0; box-sizing: border-box; } html { font-size: 625%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\614e0e503b110f76d3ac2ff6.md",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3cee82a6c3819ead01b6b8f5853ab084",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea8239b9eeb76f12299030.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ea8239b9eeb76f12299030\ntitle: Step 4\nchallengeType: 1\ndashedName: step-4\n--description--\nThe next portion of the workshop is to review how to generate a random number between two values.\nStart by adding another console.log() that logs the message \"Now, generate a random number between two values.\" to the console.\nThen, create a variable called min and assign it the value of 1 and create a variable called max and assign it the value of 100.\nIn the next step, you will generate a random number between these two values.\n--hints--\nYou should have a console.log() that logs the message \"Now, generate a random number between two values.\".\njs\nassert.match(code, /console\\.log\\((`|'|\")\\s*Now,\\s+generate\\s+a\\s+random\\s+number\\s+between\\s+two\\s+values\\.\\s*\\1\\);?/);\nYou should have a variable called min.\njs\nassert.isNotNull(min);\nYour min variable should be a number.\njs\nassert.isNumber(min);\nYou should assign the number 1 to your min variable.\njs\nassert.equal(min, 1);\nYou should have a variable called max.\njs\nassert.isNotNull(max);\nYour max variable should be a number.\njs\nassert.isNumber(max);\nYou should assign the number 100 to your max variable.\njs\nassert.equal(max, 100);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1706,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea8239b9eeb76f12299030.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "176dc0f6d0290311a68b1cf0ef1ccb5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea89c25e1bd871688eba6a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ea89c25e1bd871688eba6a\ntitle: Step 6\nchallengeType: 1\ndashedName: step-6\n--description--\nUp until this point, you have only been dealing with floating point numbers and the number 0.\nFor the next part of the workshop, you will review how to work with the Math.floor() method.\nStart by adding a console.log() that logs the message \"The Math.floor() method rounds the value down to the nearest whole integer.\"\n--hints--\nYou should log the message \"The Math.floor() method rounds the value down to the nearest whole integer.\"\njs\nassert.match(code, /console\\.log\\(([\"'])The\\s+Math\\.floor\\(\\)\\s+method\\s+rounds\\s+the\\s+value\\s+down\\s+to\\s+the\\s+nearest\\s+whole\\s+integer\\.\\1\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\nconsole.log(\"Now, generate a random number between two values.\");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math.random() * (max - min) + min;\nconsole.log(randomNum2);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1302,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea89c25e1bd871688eba6a.md",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b8fe00cd3e37e8905af2d63b0eb1de14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea845f54195c7020cc521b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ea845f54195c7020cc521b\ntitle: Step 5\nchallengeType: 1\ndashedName: step-5\n--description--\nThe formula to generate a random number between two values is the following:\njs\nMath.random() * (maximum - minimum) + minimum;\nThis will produce a result that is a floating point number between two values.\nCreate a variable called randomNum2 and assign it the result of generating a value between the min and max values.\nThen, log the randomNum2 variable to see the result. Try refreshing the page to see different results.\n--hints--\nYou should have a variable called randomNum2.\njs\nassert.isNotNull(randomNum2);\nYour randomNum2 variable should be a number.\njs\nassert.isNumber(randomNum2);\nYou should assign the result of generating a value between the min and max values. Make sure not to hardcode a value. You should use the formulae provided above.\n```js\nassert.isAtLeast(randomNum2, min);\nassert.isAtMost(randomNum2, max);\nassert.notMatch(code, /randomNum2\\s=\\s0.\\d+;?/);\n// check for whole random numbers just in case a camper does this\nassert.notMatch(code, /randomNum2\\s=\\s\\d+;?/);\n```\nYou should log the randomNum2 variable to the console.\njs\nassert.match(code, /console\\.log\\(\\s*randomNum2\\s*\\);?/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\nconsole.log(\"Now, generate a random number between two values.\");\nconst min = 1;\nconst max = 100;\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1789,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ea845f54195c7020cc521b.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "18a8fdc12f6ae329e98b82e5073d6c29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148f693e0728f77c87f3020\ntitle: Step 78\nchallengeType: 0\ndashedName: step-78\n--description--\nCreate a third @media query for only screen with a max-width of 550px Within, create a hero-title selector with a font-size set to 6rem, a hero-subtitle, author, quote, list-title selector with a font-size set to 1 8rem, a social-icons selector with a font-size set to 2rem, and a text selector with a font-size set to 1 6rem --hints--\nYou should have a new @media query for only screen with a max-width of 550px This should come after your previous two js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] media mediaText, 'only screen and (max-width: 550px)');\nYour new @media rule should have a hero-title selector, a hero-subtitle, author, quote, list-title selector, a social-icons selector, and a text selector These selectors should be in this order js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [0] selectorText, ' hero-title');\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [1] selectorText, ' hero-subtitle, author, quote, list-title');\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [2] selectorText, ' social-icons');\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [3] selectorText, ' text');\nYour hero-title selector should have a font-size set to 6rem js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [0] style fontSize, '6rem');\nYour hero-subtitle, author, quote, list-title selector should have a font-size set to 1 8rem js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [1] style fontSize, '1 8rem');\nYour social-icons selector should have a font-size set to 2rem js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12630,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "3f96b5b1b93af9c2867e329fb439b7b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "__helpers CSSHelp(document) getCSSRules('media') [2] cssRules [3] selectorText, ' text'); Your hero-title selector should have a font-size set to 6rem js assert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [0] style fontSize, '6rem'); Your hero-subtitle, author, quote, list-title selector should have a font-size set to 1 8rem js assert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [1] style fontSize, '1 8rem'); Your social-icons selector should have a font-size set to 2rem js assert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules[2] style fontSize, '2rem');\nYour text selector should have a font-size set to 1 6rem js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [2] cssRules [3] style fontSize, '1 6rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12630,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "fc16aa1ff94e0f3ae6ccbb307a97c84d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough)\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12630,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "24c57e3c84bfea61dd6df9971c5437df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old ones This was the biggest curriculum improvement to dateThe millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12630,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5c5787636c564a9c0555e2d7038c1fac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; } author { font-size: 2rem; font-family: \"Raleway\", sans-serif; }author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n} image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\ngap: 2rem;\nplace-items: center;\n} image-1, image-3 {\ngrid-column: 1 / -1;\n}\n@media only screen and (max-width: 720px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12630,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c6fe66d4b551467dc38bf78d556fac68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "sans-serif; } quote::before { content: '\" '; } quote::after { content: ' \"'; } text-with-images { display: grid; grid-template-columns: 1fr 2fr; column-gap: 3rem; margin-bottom: 3rem; } lists { list-style-type: none; margin-top: 2rem; } lists li { margin-bottom: 1 5rem; } list-title, list-subtitle { color: #00beef; } image-wrapper { display: grid; grid-template-columns: 2fr 1fr; grid-template-rows: repeat(3, min-content); gap: 2rem; place-items: center; } image-1, image-3 { grid-column: 1 / -1; } @media only screen and (max-width: 720px) {image-wrapper {\ngrid-template-columns: 1fr;\n}\n}\n@media only screen and (max-width: 600px) { text-with-images {\ngrid-template-columns: 1fr;\n}\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12630,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f693e0728f77c87f3020.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "f97c84186f6d9bab85f8006006ad9adb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb3ec3b07dfe8f898646c0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66eb3ec3b07dfe8f898646c0\ntitle: Step 7\nchallengeType: 1\ndashedName: step-7\n--description--\nAs you learned in the previous lectures, the Math.floor() method rounds the value down to the nearest whole integer.\njs\nconst price = 10.99;\nMath.floor(price); // 10\nCreate a variable called numRoundedDown and assign it the result of rounding the floating point number 6.7 down to the nearest whole integer.\nThen, log the numRoundedDown variable to the console to see the result.\n--hints--\nYou should have a numRoundedDown variable.\njs\nassert.isNotNull(numRoundedDown);\nThe numRoundedDown variable should be a number.\njs\nassert.isNumber(numRoundedDown);\nYour numRoundedDown variable should equal the result of rounding the floating point number 6.7 down to the nearest whole integer.\njs\nassert.equal(numRoundedDown, 6);\nYou should not hardcode the value of 6 for the numRoundedDown variable.\njs\nassert.notMatch(code, /numRoundedDown\\s*=\\s*6/);\nYou should log the numRoundedDown variable to the console.\njs\nassert.match(code, /console\\.log\\(\\s*numRoundedDown\\s*\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\nconsole.log(\"Now, generate a random number between two values.\");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math.random() * (max - min) + min;\nconsole.log(randomNum2);\nconsole.log(\"The Math.floor() method rounds the value down to the nearest whole integer.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1832,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb3ec3b07dfe8f898646c0.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "717e0d405dec15bffe1afdb353af8cfe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb480d996af5918d7c9c86.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66eb480d996af5918d7c9c86\ntitle: Step 8\nchallengeType: 1\ndashedName: step-8\n--description--\nNow, it is time to review how the Math.ceil() method works.\nStart by logging the string \"The Math.ceil() method rounds the value up to the nearest whole integer.\" to the console.\n--hints--\nYou should log the message \"The Math.ceil() method rounds the value up to the nearest whole integer.\"\njs\nassert.match(code, /console\\.log\\((['\"`])The\\s+Math\\.ceil\\(\\)\\s+method\\s+rounds\\s+the\\s+value\\s+up\\s+to\\s+the\\s+nearest\\s+whole\\s+integer\\.\\1\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\nconsole.log(\"Now, generate a random number between two values.\");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math.random() * (max - min) + min;\nconsole.log(randomNum2);\nconsole.log(\"The Math.floor() method rounds the value down to the nearest whole integer.\");\nconst numRoundedDown = Math.floor(6.7);\nconsole.log(numRoundedDown);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1315,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb480d996af5918d7c9c86.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "59d12045c544c90052571ad4377552b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb488c0129e192542f0865.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66eb488c0129e192542f0865\ntitle: Step 9\nchallengeType: 1\ndashedName: step-9\n--description--\nIn the previous lectures, you learned how to work with the Math.ceil() method like this:\njs\nconst price = 10.01;\nMath.ceil(price); // 11\nThe Math.ceil() method rounds the value up to the nearest whole integer.\nCreate a variable called numRoundedUp and assign it the result of rounding the floating point number 3.2 up to the nearest whole integer.\nThen, log the numRoundedUp variable to the console to see the result.\n--hints--\nYou should have a numRoundedUp variable.\njs\nassert.isNotNull(numRoundedUp);\nThe numRoundedUp variable should be a number.\njs\nassert.isNumber(numRoundedUp);\nYour numRoundedUp variable should equal the result of rounding the floating point number 3.2 down to the nearest whole integer.\njs\nassert.equal(numRoundedUp, 4);\nYou should not hardcode the value of 4 for the numRoundedUp variable.\njs\nassert.notMatch(code, /numRoundedUp\\s*=\\s*4/);\nYou should log the numRoundedUp variable to the console.\njs\nassert.match(code, /console\\.log\\(\\s*numRoundedUp\\s*\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\nconsole.log(\"Now, generate a random number between two values.\");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math.random() * (max - min) + min;\nconsole.log(randomNum2);\nconsole.log(\"The Math.floor() method rounds the value down to the nearest whole integer.\");\nconst numRoundedDown = Math.floor(6.7);\nconsole.log(numRoundedDown);\nconsole.log(\"The Math.ceil() method rounds the value up to the nearest whole integer.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb488c0129e192542f0865.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "45cdd1757ac0bdba903c49337fdb11ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb499511810e932ca7eecc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66eb499511810e932ca7eecc\ntitle: Step 10\nchallengeType: 1\ndashedName: step-10\n--description--\nThe next portion of the workshop will review how to round numbers to the nearest whole integer.\nStart by adding a console.log() that logs the message \"The Math.round() method rounds the value to the nearest whole integer.\" to the console.\n--hints--\nYou should log the message \"The Math.round() method rounds the value to the nearest whole integer.\" to the console.\njs\nassert.match(code, /console\\.log\\((['\"])The\\s+Math\\.round\\(\\)\\s+method\\s+rounds\\s+the\\s+value\\s+to\\s+the\\s+nearest\\s+whole\\s+integer\\.\\1\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\nconsole.log(\"Now, generate a random number between two values.\");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math.random() * (max - min) + min;\nconsole.log(randomNum2);\nconsole.log(\"The Math.floor() method rounds the value down to the nearest whole integer.\");\nconst numRoundedDown = Math.floor(6.7);\nconsole.log(numRoundedDown);\nconsole.log(\"The Math.ceil() method rounds the value up to the nearest whole integer.\");\nconst numRoundedUp = Math.ceil(3.2);\nconsole.log(numRoundedUp);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1542,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66eb499511810e932ca7eecc.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "81bf3eac172fbb07b8fad888f79daada",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece0b518f5dcf5930612ab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ece0b518f5dcf5930612ab\ntitle: Step 12\nchallengeType: 1\ndashedName: step-12\n--description--\nFor the last portion of the workshop, you will review how to get the minimum and maximum values of a set of numbers.\nStart by adding a console.log() that logs the message \"The Math.max() and Math.min() methods are used to get the maximum and minimum number from a range.\" to the console.\n--hints--\nYou should log the message \"The Math.max() and Math.min() methods are used to get the maximum and minimum number from a range.\" to the console.\njs\nassert.match(code, /console\\.log\\((['\"`])The\\s+Math\\.max\\(\\)\\s+and\\s+Math\\.min\\(\\)\\s+methods\\s+are\\s+used\\s+to\\s+get\\s+the\\s+maximum\\s+and\\s+minimum\\s+number\\s+from\\s+a\\s+range\\.\\1\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there! My name is ${botName} and I am here to teach you about the Math object!`;\nconsole.log(greeting);\nconsole.log(\"The Math.random() method returns a pseudo random number between 0 and less than 1.\");\nconst randomNum = Math.random();\nconsole.log(randomNum);\nconsole.log(\"Now, generate a random number between two values.\");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math.random() * (max - min) + min;\nconsole.log(randomNum2);\nconsole.log(\"The Math.floor() method rounds the value down to the nearest whole integer.\");\nconst numRoundedDown = Math.floor(6.7);\nconsole.log(numRoundedDown);\nconsole.log(\"The Math.ceil() method rounds the value up to the nearest whole integer.\");\nconst numRoundedUp = Math.ceil(3.2);\nconsole.log(numRoundedUp);\nconsole.log(\n\"The Math.round() method rounds the value to the nearest whole integer.\"\n);\nconst numRounded = Math.round(2.7);\nconsole.log(numRounded);\nconst numRounded2 = Math.round(11.2);\nconsole.log(numRounded2);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece0b518f5dcf5930612ab.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "23a6ca9c11ae3459974374100fcbdb07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ecdcf7c8d9a6f49094ffde.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ecdcf7c8d9a6f49094ffde\ntitle: Step 11\nchallengeType: 1\ndashedName: step-11\n--description--\nIn the lectures, you learned that the Math round() method rounds the value to the nearest whole integer Here are some examples:\njs\nMath round(6 7); // 7\nMath round(3 2); // 3\nThis differs from the Math floor() and Math ceil() methods, which round down and up to the nearest whole integer, respectively Create a new variable called numRounded and assign the result of rounding the number 2 7 Then, log the value of numRounded to the console Below that, create another new variable called numRounded2 and assign the result of rounding the number 11 2 Then, log the value of numRounded2 to the console --hints--\nYou should have a variable called numRounded js\nassert isNotNull(numRounded);\nYou should assign the result of rounding the number 2 7 to the variable numRounded js\nassert equal(numRounded, 3);\nYou should not hardcode the value of 3 for the variable numRounded Make sure you are using the Math round() method js\nassert notMatch(code, /numRounded\\s*=\\s*3/);\nYou should log the value of numRounded to the console js\nassert match(code, /console\\ log\\(\\s*numRounded\\s*\\)/);\nYou should have a variable called numRounded2 js\nassert isNotNull(numRounded2);\nYou should assign the result of rounding the number 11 2 to the variable numRounded2 js\nassert equal(numRounded2, 11);\nYou should not hardcode the value of 11 for the variable numRounded2 Make sure you are using the Math round() method js\nassert notMatch(code, /numRounded2\\s*=\\s*11/);\nYou should log the value of numRounded2 to the console js\nassert match(code, /console\\ log\\(\\s*numRounded2\\s*\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there My name is ${botName} and I am here to teach you about the Math object `;\nconsole log(greeting);\nconsole log(\"The Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2809,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ecdcf7c8d9a6f49094ffde.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0c1506bf78c52962c400d26aec67242b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ecdcf7c8d9a6f49094ffde.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert equal(numRounded2, 11); You should not hardcode the value of 11 for the variable numRounded2 Make sure you are using the Math round() method js assert notMatch(code, /numRounded2\\s*=\\s*11/); You should log the value of numRounded2 to the console js assert match(code, /console\\ log\\(\\s*numRounded2\\s*\\)/); --seed-- --seed-contents-- ``js const botName = \"MathBot\"; const greeting =Hi there My name is ${botName} and I am here to teach you about the Math object `; console log(greeting); console log(\"The Mathrandom() method returns a pseudo random number between 0 and less than 1 \");\nconst randomNum = Math random();\nconsole log(randomNum);\nconsole log(\"Now, generate a random number between two values \");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math random() * (max - min) + min;\nconsole log(randomNum2);\nconsole log(\"The Math floor() method rounds the value down to the nearest whole integer \");\nconst numRoundedDown = Math floor(6 7);\nconsole log(numRoundedDown);\nconsole log(\"The Math ceil() method rounds the value up to the nearest whole integer \");\nconst numRoundedUp = Math ceil(3 2);\nconsole log(numRoundedUp);\nconsole log(\"The Math round() method rounds the value to the nearest whole integer \");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2809,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ecdcf7c8d9a6f49094ffde.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6df7ef9e5f4a2928f8759e8244612e48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\683ecb010f4c6bafd428802c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 683ecb010f4c6bafd428802c\ntitle: Step 1\nchallengeType: 20\ndashedName: step-1\n--description--\nIn this workshop, you'll validate a set of medical data to ensure that it complies with a set of rules.\nDeclare a variable named medical_records and assign it an empty list. In the following steps, you are going to use it to store your medical data.\n--hints--\nYou should declare a variable named medical_records.\njs\n({ test: () => runPython(`\nassert _Node(_code).has_variable(\"medical_records\")\n`) })\nYou should assign an empty list to your medical_records variable.\njs\n({ test: () => runPython(`\nassert medical_records == []\n`) })\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 763,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\683ecb010f4c6bafd428802c.md",
      "source_type": "git_repo"
    },
    "token_count": 183,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "acf2d03824ad8e722a2a7d3898ff1c20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece147323c91f654bf8dd9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ece147323c91f654bf8dd9\ntitle: Step 13\nchallengeType: 1\ndashedName: step-13\n--description--\nIn the previous lectures, you learned how to get the maximum and minimum values from a range of numbers like this:\njs\nMath max(1, 2, 3, 4, 5); // 5\nMath min(1, 2, 3, 4, 5); // 1\nCreate a variable called maxNum and assign it the result of finding the maximum number between the numbers 3, 125, 55, 24 Then, log the value of maxNum to the console Below that, create a variable called minNum and assign it the result of finding the minimum number between the numbers 6, 90, 14, 90, 2 Then, log the value of minNum to the console --hints--\nYou should have a variable called maxNum js\nassert isNotNull(maxNum);\nYour maxNum variable should be assigned the result of the finding the maximum number between the numbers 3, 125, 55, 24 js\nassert equal(maxNum, 125);\nYou should not hardcode the value of 125 to the maxNum variable Make sure to use the Math max() method instead js\nassert notMatch(code, /maxNum\\s*=\\s*125/);\nYou should log the value of maxNum to the console js\nassert match(code, /console\\ log\\(\\s*maxNum\\s*\\)/);\nYou should have a variable called minNum js\nassert isNotNull(minNum);\nYour minNum variable should be assigned the result of the finding the minimum number between the numbers 6, 90, 14, 90, 2 js\nassert equal(minNum, 2);\nYou should not hardcode the value of 2 to the minNum variable Make sure to use the Math min() method instead js\nassert notMatch(code, /minNum\\s*=\\s*2/);\nYou should log the value of minNum to the console js\nassert match(code, /console\\ log\\(\\s*minNum\\s*\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there My name is ${botName} and I am here to teach you about the Math object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2982,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece147323c91f654bf8dd9.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b84942d588351b8693fb74ed05a2c87a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece147323c91f654bf8dd9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "numbers 6, 90, 14, 90, 2 js assert equal(minNum, 2); You should not hardcode the value of 2 to the minNum variable Make sure to use the Math min() method instead js assert notMatch(code, /minNum\\s*=\\s*2/); You should log the value of minNum to the console js assert match(code, /console\\ log\\(\\s*minNum\\s*\\)/); --seed-- --seed-contents-- ``js const botName = \"MathBot\"; const greeting =Hi there My name is ${botName} and I am here to teach you about the Math object`;\nconsole log(greeting);\nconsole log(\"The Math random() method returns a pseudo random number between 0 and less than 1 \");\nconst randomNum = Math random();\nconsole log(randomNum);\nconsole log(\"Now, generate a random number between two values \");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math random() * (max - min) + min;\nconsole log(randomNum2);\nconsole log(\"The Math floor() method rounds the value down to the nearest whole integer \");\nconst numRoundedDown = Math floor(6 7);\nconsole log(numRoundedDown);\nconsole log(\"The Math ceil() method rounds the value up to the nearest whole integer \");\nconst numRoundedUp = Math ceil(3 2);\nconsole log(numRoundedUp);\nconsole log(\n\"The Math round() method rounds the value to the nearest whole integer \"\n);\nconst numRounded = Math round(2 7);\nconsole log(numRounded);\nconst numRounded2 = Math round(11 2);\nconsole log(numRounded2);\nconsole log(\"The Math max() and Math min() methods are used to get the maximum and minimum number from a range \");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2982,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece147323c91f654bf8dd9.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0ce3d3a5b3619aa765593c74dc0b23c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842aee5bcaf4ab8883f8191.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6842aee5bcaf4ab8883f8191\ntitle: Step 2\nchallengeType: 20\ndashedName: step-2\n--description--\nAs you learned in the previous lectures, a dictionary is a data structure that holds key-value pairs, where keys are immutable data types (such as strings) and unique within a dictionary:\npy\nperson = {\n'name': 'John',\n'age': 33\n}\nThe medical_records list will store dictionaries, each of them representing a patient. Add a dictionary with a key patient_id and value of the string P1001 to the medical_records list.\n--hints--\nYour medical_records list should contain a single dictionary.\njs\n({ test: () => runPython(`\nassert isinstance(medical_records[0], dict) and len(medical_records) == 1\n`) })\nYou should have a patient_id key with the value of the string P1001 in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"patient_id\", None) == \"P1001\"\n`) })\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\nmedical_records = [\n]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842aee5bcaf4ab8883f8191.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1d9ab6e4c2ee4257fb84d0cddff8a492",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842ba0086201089ea268c92.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6842ba0086201089ea268c92\ntitle: Step 5\nchallengeType: 20\ndashedName: step-5\n--description--\nFollowing the same structure you used in the previous steps, the medical_records list has been filled up for you with other patients' data Feel free to take a look at it Next you'll start to write the function to validate the data set Create a function named validate with a single parameter data You want to ensure that your data is either a list or a tuple Therefore, within the validate function, declare a variable named is_sequence and assign it a call to isinstance Pass in data as the first argument and a tuple containing list and tuple as the second argument --hints--\nYou should have a function named validate js\n({ test: () => runPython(`\nassert _Node(_code) has_function(\"validate\")\n`) })\nYour validate function should have a single parameter data js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") has_args(\"data\")\n`) })\nYou should have a variable named is_sequence within your validate function js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") has_variable(\"is_sequence\")\n`) })\nYou should assign isinstance(data, (list, tuple)) to your is_sequence variable js\n({ test: () => runPython(`\n_cond = _Node(_code) find_function(\"validate\") find_variable(\"is_sequence\")\nassert _cond is_equivalent(\"is_sequence = isinstance(data, (list, tuple))\") or _cond",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2520,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842ba0086201089ea268c92.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8c5329e150ca90a86c4a24b4744a093a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842ba0086201089ea268c92.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "`) }) Your validate function should have a single parameter data js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") has_args(\"data\") `) }) You should have a variable named is_sequence within your validate function js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") has_variable(\"is_sequence\") `) }) You should assign isinstance(data, (list, tuple)) to your is_sequence variable js ({ test: () => runPython(` _cond = _Node(_code) find_function(\"validate\") find_variable(\"is_sequence\") assert _cond is_equivalent(\"is_sequence = isinstance(data, (list, tuple))\") or _condis_equivalent(\"is_sequence = isinstance(data, (tuple, list))\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2520,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842ba0086201089ea268c92.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "79cefbb56479df8a88b40d13d709b72e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842d5b537c64266420faf62.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6842d5b537c64266420faf62\ntitle: Step 3\nchallengeType: 20\ndashedName: step-3\n--description--\nAdd a key age with the value of the integer 34 and a key gender with the value of the string Female to your dictionary. Don't forget the comma between the key-value pairs.\n--hints--\nYour medical_records list should contain a single dictionary.\njs\n({ test: () => runPython(`\nassert isinstance(medical_records[0], dict) and len(medical_records) == 1\n`) })\nYou should have a age key with the value of the integer 34 in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"age\", None) == 34\n`) })\nYou should have a gender key with the value of the string Female in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"gender\", None) == \"Female\"\n`) })\nYou should have a patient_id key with the value of the string P1001 in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"patient_id\", None) == \"P1001\"\n`) })\n--seed--\n--seed-contents--\npy\n--fcc-editable-region--\nmedical_records = [\n{\n'patient_id': 'P1001'\n}\n]\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842d5b537c64266420faf62.md",
      "source_type": "git_repo"
    },
    "token_count": 304,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d5d821d1bbbf944b5dcffd6d9738baff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "id: 6148f6f7d8914c78e93136ca\ntitle: Step 79\nchallengeType: 0\ndashedName: step-79\n--description--\nCreate one final @media query for only screen with a max-width of 420px Within, create a hero-title selector with a font-size property set to 4 5rem Congratulations Your magazine is now complete --hints--\nYou should have a new @media query for only screen and (max-width: 420px) This should be the last query in the @media query list js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [3] media mediaText, 'only screen and (max-width: 420px)');\nYour new @media query should have a hero-title selector js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [3] cssRules [0] selectorText, ' hero-title');\nYour hero-title selector should have a font-size property set to 4 5rem js\nassert equal(new __helpers CSSHelp(document) getCSSRules('media') [3] cssRules [0] style fontSize, '4 5rem');\n--seed--\n--seed-contents--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this This is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "438a2352e9d8f5a0591f4f579709f583",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It just occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass(And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these) V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "7fd9f81357b103b8f71ac5f008c6bada",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "Dash course for these) V4 - 2016 We expanded the curriculum to 3 certifications, including Front End, Back End, and Data Visualization They each had 10 required projects, but only the Front End section had its own challenges For the other certs, we were still using external resources like Node School V5 - 2017 We added the back end and data visualization challenges V6 - 2018 We launched 6 new certifications to replace our old onesThis was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\n}\nhtml {\nfont-size: 62 5%;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1 8rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "3050ea80bdee4ca79153373090f5c514",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "} hr { margin: 1 5rem 0; border: 1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 1 8rem; letter-spacing: 0 6px; column-width: 25rem; text-align: justify; } hero { grid-column: 1 / -1; position: relative; } hero-title { text-align: center; color: orangered; font-size: 8rem; } hero-subtitle { font-size: 2 4rem; color: orangered; text-align: center; }author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n} lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n} image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\ngap: 2rem;\nplace-items: center;\n} image-1,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "45707f8ec339f7c3baabad2e887b9512",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "margin-right: 1rem; } quote { color: #00beef; font-size: 2 4rem; text-align: center; font-family: \"Raleway\", sans-serif; } quote::before { content: '\" '; } quote::after { content: ' \"'; } text-with-images { display: grid; grid-template-columns: 1fr 2fr; column-gap: 3rem; margin-bottom: 3rem; } lists { list-style-type: none; margin-top: 2rem; } lists li { margin-bottom: 1 5rem; } list-title, list-subtitle { color: #00beef; } image-wrapper { display: grid; grid-template-columns: 2fr 1fr; grid-template-rows: repeat(3, min-content); gap: 2rem; place-items: center; } image-1,image-3 {\ngrid-column: 1 / -1;\n}\n@media only screen and (max-width: 720px) { image-wrapper {\ngrid-template-columns: 1fr;\n}\n}\n@media only screen and (max-width: 600px) { text-with-images {\ngrid-template-columns: 1fr;\n}\n}\n@media only screen and (max-width: 550px) { hero-title {\nfont-size: 6rem;\n} hero-subtitle, author, quote, list-title {\nfont-size: 1 8rem;\n} social-icons {\nfont-size: 2rem;\n} text {\nfont-size: 1 6rem;\n}\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```html\nMagazine\nOUR NEW CURRICULUM\nOur efforts to restructure our curriculum with a more project-based\nfocus\nBy\nfreeCodeCamp\nMarch 7, 2019\nSoon the freeCodeCamp curriculum will be 100% project-driven learning Instead of a series of coding challenges, you'll learn through building projects - step by step Before we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "606726953f2adb97e4c495cb154104f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "we get into the details, let me emphasize: we are not changing the certifications All 6 certifications will still have the same 5 required projects We are only changing the optional coding challenges After years - years - of pondering these two problems and how to solve them, I slipped, hit my head on the sink, and when I came to I had a revelation A vision A picture in my head A picture of thisThis is what makes time travel possible: the flux capacitor It wasn't as dramatic as Doc's revelation in Back to the Future It\njust occurred to me while I was going for a run The revelation: the entire curriculum should be a series of projects Instead of individual coding challenges, we'll just have projects, each with their own seamless series of tests Each test gives you just enough information to figure out how to get it to pass (And you can view hints if that isn't enough )\nThe entire curriculum should be a series of projects\nNo more walls of explanatory text No more walls of tests Just one\ntest at a time, as you build up a working project Over the course of passing thousands of tests, you build up projects and your own understanding of coding fundamentals There is no transition between lessons and projects, because the lessons themselves are baked into projects And there's plenty of repetition to help you retain everything because - hey - building projects in real life has plenty of repetition The main design challenge is taking what is currently paragraphs of explanation and instructions and packing them into a single test description text Each project will involve dozens of tests like this People will be coding the entire time, rather than switching back and forth from \"reading mode\" to \"coding mode\" Instead of a series of coding challenges, people will be in their code editor passing one test after another, quickly building up a project People will get into a real flow state, similar to what they experience when they build the required projects at the end of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History\nOf the Curriculum\nV1 - 2014\nWe launched freeCodeCamp with a simple list of 15 resources,\nincluding Harvard's CS50 and Stanford's Database Class V2 - 2015\nWe added interactive algorithm challenges V3 - 2015\nWe added our own HTML+CSS challenges (before we'd been relying on\nGeneral Assembly's Dash course for these)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "c4ceedc4fb3c9ab0eca1f4c54d53b09a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "of each certification They'll get that sense of forward progress right from the beginning And freeCodeCamp will be a much smoother experience A Brief History Of the Curriculum V1 - 2014 We launched freeCodeCamp with a simple list of 15 resources, including Harvard's CS50 and Stanford's Database Class V2 - 2015 We added interactive algorithm challenges V3 - 2015 We added our own HTML+CSS challenges (before we'd been relying on General Assembly's Dash course for these)V4 - 2016\nWe expanded the curriculum to 3 certifications, including Front\nEnd, Back End, and Data Visualization They each had 10 required\nprojects, but only the Front End section had its own challenges For the other certs, we were still using external resources like\nNode School V5 - 2017\nWe added the back end and data visualization challenges V6 - 2018\nWe launched 6 new certifications to replace our old ones This was\nthe biggest curriculum improvement to date The millions of people who are learning to code through freeCodeCamp\nwill have an even better resource to help them learn these\nfundamentals ```\n```css\n*,\n::before,\n::after {\npadding: 0;\nmargin: 0;\n}\nhtml {\nfont-size: 62 5%;\nbox-sizing: border-box;\n}\nbody {\nfont-family: 'Baskervville', serif;\ncolor: linen;\nbackground-color: rgb(20, 30, 40);\n}\nh1 {\nfont-family: 'Anton', sans-serif;\n}\nh2, h3, h4, h5, h6 {\nfont-family: 'Raleway', sans-serif;\n}\na {\ntext-decoration: none;\ncolor: linen;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);\nrow-gap: 3rem;\n}\nimg {\nwidth: 100%;\nobject-fit: cover;\n}\nhr {\nmargin: 1 5rem 0;\nborder: 1px solid rgba(120, 120, 120, 0 6);\n} heading {\ngrid-column: 2 / 3;\ndisplay: grid;\ngrid-template-columns: repeat(2, 1fr);\nrow-gap: 1 5rem;\n} text {\ngrid-column: 2 / 3;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "7cff5e86ce5871b6ba348625ee403805",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "h2, h3, h4, h5, h6 { font-family: 'Raleway', sans-serif; } a { text-decoration: none; color: linen; } main { display: grid; grid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr); row-gap: 3rem; } img { width: 100%; object-fit: cover; } hr { margin: 1 5rem 0; border: 1px solid rgba(120, 120, 120, 0 6); } heading { grid-column: 2 / 3; display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 1 5rem; } text { grid-column: 2 / 3; font-size: 18rem;\nletter-spacing: 0 6px;\ncolumn-width: 25rem;\ntext-align: justify;\n} hero {\ngrid-column: 1 / -1;\nposition: relative;\n} hero-title {\ntext-align: center;\ncolor: orangered;\nfont-size: 8rem;\n} hero-subtitle {\nfont-size: 2 4rem;\ncolor: orangered;\ntext-align: center;\n} author {\nfont-size: 2rem;\nfont-family: \"Raleway\", sans-serif;\n} author-name a:hover {\nbackground-color: #306203;\n} publish-date {\ncolor: rgba(255, 255, 255, 0 5);\n} social-icons {\ndisplay: grid;\nfont-size: 3rem;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\nalign-items: center;\n} first-paragraph::first-letter {\nfont-size: 6rem;\ncolor: orangered;\nfloat: left;\nmargin-right: 1rem;\n} quote {\ncolor: #00beef;\nfont-size: 2 4rem;\ntext-align: center;\nfont-family: \"Raleway\", sans-serif;\n} quote::before {\ncontent: '\" ';\n} quote::after {\ncontent: ' \"';\n} text-with-images {\ndisplay: grid;\ngrid-template-columns: 1fr 2fr;\ncolumn-gap: 3rem;\nmargin-bottom: 3rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "53a8c2a4a228d7981a5056a6095fc948",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
    "source_type": "git_repo",
    "title": "Magazine",
    "content": "background-color: #306203; } publish-date { color: rgba(255, 255, 255, 0 5); } social-icons { display: grid; font-size: 3rem; grid-template-columns: repeat(5, 1fr); grid-auto-flow: column; grid-auto-columns: 1fr; align-items: center; } first-paragraph::first-letter { font-size: 6rem; color: orangered; float: left; margin-right: 1rem; } quote { color: #00beef; font-size: 2 4rem; text-align: center; font-family: \"Raleway\", sans-serif; } quote::before { content: '\" '; } quote::after { content: ' \"'; } text-with-images { display: grid; grid-template-columns: 1fr 2fr; column-gap: 3rem; margin-bottom: 3rem; }lists {\nlist-style-type: none;\nmargin-top: 2rem;\n} lists li {\nmargin-bottom: 1 5rem;\n} list-title, list-subtitle {\ncolor: #00beef;\n} image-wrapper {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngrid-template-rows: repeat(3, min-content);\ngap: 2rem;\nplace-items: center;\n} image-1, image-3 {\ngrid-column: 1 / -1;\n}\n@media only screen and (max-width: 720px) { image-wrapper {\ngrid-template-columns: 1fr;\n}\n}\n@media only screen and (max-width: 600px) { text-with-images {\ngrid-template-columns: 1fr;\n}\n}\n@media only screen and (max-width: 550px) { hero-title {\nfont-size: 6rem;\n} hero-subtitle, author, quote, list-title {\nfont-size: 1 8rem;\n} social-icons {\nfont-size: 2rem;\n} text {\nfont-size: 1 6rem;\n}\n}\n@media only screen and (max-width: 420px) { hero-title {\nfont-size: 4 5rem;\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22226,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-magazine\\6148f6f7d8914c78e93136ca.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "c10029539213f9fba7d20e59a9730e27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842c3eee327042f1da17b89.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6842c3eee327042f1da17b89\ntitle: Step 6\nchallengeType: 20\ndashedName: step-6\n--description--\nCreate an if statement For its condition, use the not operator to negate is_sequence Within the if statement, print Invalid format: expected a list or tuple and return False --hints--\nYou should create an if statement within your validate function js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_ifs()[0]\n`) })\nYour if statement should have not is_sequence as its condition js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_ifs()[0] find_conditions()[0] is_equivalent(\"not is_sequence\")\n`) })\nYou should print Invalid format: expected a list or tuple inside your if statement js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_ifs()[0] find_bodies()[0] has_call(\"print('Invalid format: expected a list or tuple ')\")\n`) })\nYou should return False at the end of your if statement ``js\n({ test: () => runPython(\n_if_body = _Node(_code) find_function(\"validate\") find_ifs()[0] find_bodies()[0]\n_p_statement = \"print('Invalid format: expected a list or tuple ')\"\nif not _if_body has_call(_p_statement):\nassert _if_body[-1] is_equivalent(\"return False\")\nelse:\nassert _if_body",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2418,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842c3eee327042f1da17b89.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2945414227356faafeb9237ace48c502",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842c3eee327042f1da17b89.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Invalid format: expected a list or tuple inside your if statement js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_ifs()[0] find_bodies()[0] has_call(\"print('Invalid format: expected a list or tuple ')\") `) }) You should return False at the end of your if statement ``js ({ test: () => runPython( _if_body = _Node(_code) find_function(\"validate\") find_ifs()[0] find_bodies()[0] _p_statement = \"print('Invalid format: expected a list or tuple ')\" if not _if_body has_call(_p_statement): assert _if_body[-1] is_equivalent(\"return False\") else: assert _if_bodyis_ordered(_p_statement, \"return False\")\n`) })\n```\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2418,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842c3eee327042f1da17b89.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2e40155b5042aea2471d363634661634",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842d659a4ae7973dabab3b0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6842d659a4ae7973dabab3b0\ntitle: Step 4\nchallengeType: 20\ndashedName: step-4\n--description--\nComplete the dictionary by adding the following three key-value pairs:\nA key diagnosis with the value of Hypertension\nA key medications with the value of the list ['Lisinopril']\nA key last_visit_id with the value of V2301.\n--hints--\nYou should have a diagnosis key with the value of the string Hypertension in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"diagnosis\", None) == \"Hypertension\"\n`) })\nYou should have a medications key with the value of the list ['Lisinopril'] in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"medications\", None) == ['Lisinopril']\n`) })\nYou should have a last_visit_id key with the value of the string V2301 in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"last_visit_id\", None) == \"V2301\"\n`) })\nYou should have a patient_id key with the value of the string P1001 in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"patient_id\", None) == \"P1001\"\n`) })\nYou should have a age key with the value of the integer 34 in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"age\", None) == 34\n`) })\nYou should have a gender key with the value of the string Female in your dictionary.\njs\n({ test: () => runPython(`\nassert medical_records[0].get(\"gender\", None) == \"Female\"\n`) })\n--seed--\n--seed-contents--\npy\n--fcc-editable-region--\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female'\n}\n]\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1766,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842d659a4ae7973dabab3b0.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7794bd26734c62af5427b83e8c0b6acc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842ff2b3c45aa4a89785ecb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6842ff2b3c45aa4a89785ecb\ntitle: Step 7\nchallengeType: 20\ndashedName: step-7\n--description--\nRight after your if statement, declare a variable named is_invalid and set it to False. Later on, you'll use it as a flag to run a conditional statement.\n--hints--\nYou should have a variable named is_invalid in your function.\njs\n({ test: () => runPython(`\nassert _Node(_code).find_function(\"validate\").has_variable(\"is_invalid\")\n`) })\nYou should assign False to your is_invalid variable.\njs\n({ test: () => runPython(`\nassert _Node(_code).find_function(\"validate\").find_variable(\"is_invalid\").is_equivalent(\"is_invalid = False\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple.')\nreturn False\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6842ff2b3c45aa4a89785ecb.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7b9563f0f5ca319b93d6747ed129615d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece75c0b840df77c7e20f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ece75c0b840df77c7e20f0\ntitle: Step 14\nchallengeType: 1\ndashedName: step-14\n--description--\nFor the last step of the workshop, you will log the message \"It was fun learning about the different Math methods with you \" to the console And with that last change, you have completed the MathBot workshop --hints--\nYou should log the message \"It was fun learning about the different Math methods with you \" to the console js\nassert match(code, /console\\ log\\((['\"`])It\\s+was\\s+fun\\s+learning\\s+about\\s+the\\s+different\\s+Math\\s+methods\\s+with\\s+you\\ \\1\\)/);\n--seed--\n--seed-contents--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there My name is ${botName} and I am here to teach you about the Math object `;\nconsole log(greeting);\nconsole log(\"The Math random() method returns a pseudo random number between 0 and less than 1 \");\nconst randomNum = Math random();\nconsole log(randomNum);\nconsole log(\"Now, generate a random number between two values \");\nconst min = 1;\nconst max = 100;\nconst randomNum2 = Math random() * (max - min) + min;\nconsole log(randomNum2);\nconsole log(\"The Math floor() method rounds the value down to the nearest whole integer \");\nconst numRoundedDown = Math floor(6 7);\nconsole log(numRoundedDown);\nconsole log(\"The Math ceil() method rounds the value up to the nearest whole integer \");\nconst numRoundedUp = Math ceil(3 2);\nconsole log(numRoundedUp);\nconsole log(\n\"The Math round() method rounds the value to the nearest whole integer \"\n);\nconst numRounded = Math round(2 7);\nconsole log(numRounded);\nconst numRounded2 = Math round(11 2);\nconsole log(numRounded2);\nconsole log(\"The Math max() and Math min() methods are used to get the maximum and minimum number from a range \");\nconst maxNum = Math max(3, 125, 55, 24);\nconsole log(maxNum);\nconst minNum = Math min(6, 90, 14, 90, 2);\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3365,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece75c0b840df77c7e20f0.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "089b01801e2b8ff228cfd320186eca10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece75c0b840df77c7e20f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2); console log(numRoundedUp); console log( \"The Math round() method rounds the value to the nearest whole integer \" ); const numRounded = Math round(2 7); console log(numRounded); const numRounded2 = Math round(11 2); console log(numRounded2); console log(\"The Math max() and Math min() methods are used to get the maximum and minimum number from a range \"); const maxNum = Math max(3, 125, 55, 24); console log(maxNum); const minNum = Math min(6, 90, 14, 90, 2); consolelog(minNum);\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n``js\nconst botName = \"MathBot\";\nconst greeting =Hi there My name is ${botName} and I want to teach you about the different Math methods in JavaScript `;\nconsole log(greeting);\nconsole log(\n\"The Math random() method returns a pseudo random number between 0 and less than 1 \"\n);\nconst randomNum = Math random();\nconsole log(randomNum);\nconsole log(\"Now, generate a random number between two values \");\nconst max = 100;\nconst min = 1;\nconst randomNum2 = Math random() * (max - min) + min;\nconsole log(randomNum2);\nconsole log(\n\"The Math floor() method rounds the value down to the nearest whole integer \"\n);\nconst numRoundedDown = Math floor(6 7);\nconsole log(numRoundedDown);\nconsole log(\n\"The Math ceil() method rounds the value up to the nearest whole integer \"\n);\nconst numRoundedUp = Math ceil(3 2);\nconsole log(numRoundedUp);\nconsole log(\n\"The Math round() method rounds the value to the nearest whole integer \"\n);\nconst numRounded = Math round(2 7);\nconsole log(numRounded);\nconst numRounded2 = Math round(11 2);\nconsole log(numRounded2);\nconsole log(\n\"The Math max() and Math min() methods are used to get the maximum and minimum number from a range \"\n);\nconst maxNum = Math max(3, 125, 55, 24);\nconsole log(maxNum);\nconst minNum = Math min(6, 90, 14, 90, 2);\nconsole log(minNum);\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3365,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece75c0b840df77c7e20f0.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "34765d9676e92fd6bd8c0eb4ac5fa10d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece75c0b840df77c7e20f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "log( \"The Math round() method rounds the value to the nearest whole integer \" ); const numRounded = Math round(2 7); console log(numRounded); const numRounded2 = Math round(11 2); console log(numRounded2); console log( \"The Math max() and Math min() methods are used to get the maximum and minimum number from a range \" ); const maxNum = Math max(3, 125, 55, 24); console log(maxNum); const minNum = Math min(6, 90, 14, 90, 2); console log(minNum); consolelog(\"It was fun learning about the different Math methods with you \");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3365,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-mathbot\\66ece75c0b840df77c7e20f0.md",
      "source_type": "git_repo"
    },
    "token_count": 148,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a24ae170c128392378ccc7e99c86d442",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a33f665a435203da0ad7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846a33f665a435203da0ad7\ntitle: Step 12\nchallengeType: 20\ndashedName: step-12\n--description--\nAt the bottom of your code, call the validate function with medical_records as the argument. You should see Valid format. printed to the terminal.\n--hints--\nYou should call the validate function with medical_records as the argument.\njs\n({ test: () => runPython(`\nassert _Node(_code).has_call(\"validate(medical_records)\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple.')\nreturn False\nis_invalid = False\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}.')\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format.')\nreturn True\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1912,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a33f665a435203da0ad7.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b5d5a014bb437049abca0b120e5491a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a82852dae0bba941a9a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846a82852dae0bba941a9a1\ntitle: Step 13\nchallengeType: 20\ndashedName: step-13\n--description--\nTo test the first if statement of your function, turn medical_records into a string. You should see Invalid format: expected a list or tuple. printed to the terminal.\n--hints--\nYou should turn your medical_records list into a string.\njs\n({ test: () => runPython(`\nassert isinstance(medical_records, str)\n`) })\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple.')\nreturn False\nis_invalid = False\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}.')\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format.')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1906,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a82852dae0bba941a9a1.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "249ad49da622dae06c2e31be55ee145d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a902bd25bdcdf6bba268.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846a902bd25bdcdf6bba268\ntitle: Step 14\nchallengeType: 20\ndashedName: step-14\n--description--\nNow turn medical_records back to a list/tuple of dictionaries.\n--hints--\nYou should turn medical_records back to a list/tuple of dictionaries.\njs\n({ test: () => runPython(`\nassert isinstance(medical_records, (list, tuple))\nfor i in medical_records:\nassert isinstance(i, dict)\n`) })\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\nmedical_records = \"\"\"[\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\"\"\"\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple.')\nreturn False\nis_invalid = False\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}.')\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format.')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a902bd25bdcdf6bba268.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9ae33551688ad0479549d25d7da066e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a9d1f115c1de0d357778.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846a9d1f115c1de0d357778\ntitle: Step 15\nchallengeType: 20\ndashedName: step-15\n--description--\nTo test the second conditional statement, add two items of your choice that are not dictionaries at the end of the medical_records list. You should see two validation messages printed to the terminal.\n--hints--\nYou should add two items of your choice that are not dictionaries at the end of the medical_records list.\njs\n({ test: () => runPython(`\nassert not isinstance(medical_records[-1], dict)\nassert not isinstance(medical_records[-2], dict)\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'P1002',\n'age': 47,\n'gender': 'Male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'V2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'Female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'V2303',\n},\n--fcc-editable-region--\n{\n'patient_id': 'P1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n},\n]\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple.')\nreturn False\nis_invalid = False\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}.')\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format.')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2054,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a9d1f115c1de0d357778.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f3a9b906cf41e1dd159f91476df02e38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ab64c43448fcc72b3e9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846ab64c43448fcc72b3e9e\ntitle: Step 16\nchallengeType: 20\ndashedName: step-16\n--description--\nNow that you tested the validation for this part, remove the last two items from the medical_records list.\n--hints--\nYou should remove the last two non-dictionary items from the medical_records list.\njs\n({ test: () => runPython(`\nassert isinstance(medical_records, (list, tuple))\nfor i in medical_records:\nassert isinstance(i, dict)\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'P1002',\n'age': 47,\n'gender': 'Male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'V2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'Female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'V2303',\n},\n--fcc-editable-region--\n{\n'patient_id': 'P1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n},\n\"spam\",\n42\n]\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple.')\nreturn False\nis_invalid = False\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}.')\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format.')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ab64c43448fcc72b3e9e.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c0fa8a294db95ff0b278e4b57f073510",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a1f2805ac73ce671a5d8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846a1f2805ac73ce671a5d8\ntitle: Step 8\nchallengeType: 20\ndashedName: step-8\n--description--\nAs you learned in a previous lecture, the enumerate function allows to keep track of the index while looping over an iterable:\n```py\nperson = {'name': 'John', 'age': 33}\nfor index, item in enumerate(person):\nprint(index, item)\n0 name\n1 age\n```\nCreate a for loop that iterates over data Use the enumerate function to get both the index and the item in data at each iteration Use index and dictionary as iteration variables For now use pass to fill the loop body --hints--\nYou should have a for loop in your validate function js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0]\n`) })\nYour for loop should iterate over enumerate(data) js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_for_iter() is_equivalent(\"enumerate(data)\")\n`) })\nYou should use index and dictionary as the iteration variables in your for loop js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_for_vars()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2406,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a1f2805ac73ce671a5d8.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d3ae32de835ced692845cd1fa5e14173",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a1f2805ac73ce671a5d8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "use pass to fill the loop body --hints-- You should have a for loop in your validate function js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_for_loops()[0] `) }) Your for loop should iterate over enumerate(data) js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_for_iter() is_equivalent(\"enumerate(data)\") `) }) You should use index and dictionary as the iteration variables in your for loop js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_for_vars()is_equivalent(\"index, dictionary\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2406,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846a1f2805ac73ce671a5d8.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7ca7bb84e9e52d86189d7d98b12ba81a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ba7ef391f007fcc37688.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846ba7ef391f007fcc37688\ntitle: Step 19\nchallengeType: 20\ndashedName: step-19\n--description--\nTo test the everything is working correctly, try to comment out the age key from the first dictionary in medical_records You should see a validation message appear in the terminal --hints--\nYou should comment out the line 'age': 34, in your code js\n({ test: () => assert match(code, /#\\s*'age'\\s*:\\s*34\\s*,/)})\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n--fcc-editable-region--\n'age': 34,\n--fcc-editable-region--\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ba7ef391f007fcc37688.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "dbea5a847c3dc99a1d0fa7f1b89fadb4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ba7ef391f007fcc37688.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Therapy'], 'last_visit_id': 'V2304', } ] def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple ') return False is_invalid = False key_set = set( ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] ) for index, dictionary in enumerate(data): if not isinstance(dictionary, dict): print(f'Invalid format: expected a dictionary at position {index} ') is_invalid = True if set(dictionary keys()) = key_set: print( f'Invalid format: {dictionary} at position {index} has missing and/or invalid keys'\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ba7ef391f007fcc37688.md",
      "source_type": "git_repo"
    },
    "token_count": 176,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "38bced3c7d8d12449f54db318dc71511",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ac424529900e7327d326.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846ac424529900e7327d326\ntitle: Step 17\nchallengeType: 20\ndashedName: step-17\n--description--\nAs you learned in a previous lecture, a set is an unordered collection of unique elements:\npy\nintegers = set([3, 5, 1, 2, 1, 3, 4])\nprint(integers) # {1, 2, 3, 4, 5}\nYou're going to use a set to ensure that each dictionary does not contain extra or misspelled keys Use the set() constructor to create a set from the following list of keys that each dictionary should have: ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] Assign the set to a variable named key_set --hints--\nYou should have a variable named key_set js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") has_variable(\"key_set\")\n`) })\nYou should assign set(['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']) to your key_set variable js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_variable(\"key_set\")",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ac424529900e7327d326.md",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "052db5e1feb22a9d18d230cbdab72941",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ac424529900e7327d326.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Use the set() constructor to create a set from the following list of keys that each dictionary should have: ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] Assign the set to a variable named key_set --hints-- You should have a variable named key_set js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") has_variable(\"key_set\") `) }) You should assign set(['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']) to your key_set variable js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_variable(\"key_set\")is_equivalent(\"key_set = set(['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'])\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ac424529900e7327d326.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0cec1b2fff3373c27562674dd8331f14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ac424529900e7327d326.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'gender': 'Female', 'diagnosis': 'Hypertension', 'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\n--fcc-editable-region--\n--fcc-editable-region--\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ac424529900e7327d326.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b4c4c6383b049f584f94d48c5a4ea40c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5043cc341d7fee2412e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846d5043cc341d7fee2412e\ntitle: Step 20\nchallengeType: 20\ndashedName: step-20\n--description--\nNow restore the line 'age': 34, --hints--\nYou should restore the line 'age': 34,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2931,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5043cc341d7fee2412e.md",
      "source_type": "git_repo"
    },
    "token_count": 64,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "dbb8e7001c4da055fbdb8f165255382f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5043cc341d7fee2412e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846d5043cc341d7fee2412e\ntitle: Step 20\nchallengeType: 20\ndashedName: step-20\n--description--\nNow restore the line 'age': 34, --hints--\nYou should restore the line 'age': 34,js\n({ test: () => runPython(`\n_medical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\nassert medical_records == _medical_records\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n--fcc-editable-region--\n# 'age': 34,\n--fcc-editable-region--\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2931,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5043cc341d7fee2412e.md",
      "source_type": "git_repo"
    },
    "token_count": 585,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7146357fbc508d5db930cadaaace515f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5043cc341d7fee2412e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'gender': 'Female', 'diagnosis': 'Hypertension', 'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2931,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5043cc341d7fee2412e.md",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "baf798fdbd42af13ffd814ae5217a298",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846b0048f71fc4efd786b42\ntitle: Step 18\nchallengeType: 20\ndashedName: step-18\n--description--\nThe keys() method returns a view object containing all the keys from a dictionary:\n```py\nperson = {\n'name': 'John',\n'age': 33\n}\nprint(person keys()) # dict_keys(['name, 'age'])\n```\nInside your for loop, after the first if statement, create an if statement that runs when the set of keys from the current dictionary is different from key_set This is to ensure that no missing or invalid keys are present in the dictionary Within the new if statement, print Invalid format: <dictionary> at position <index> has missing and/or invalid keys (where <dictionary> and <index> should be replaced by the dictionary and index at the current iteration) and set is_invalid to True --hints--\nYou should have a second if statement inside your for loop js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[1]\n`) })\nYour new if statement should run when set(dictionary keys()) is different from key_set ``js\n({ test: () => assert(runPython(\n_condition = _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[1] find_conditions()[0]\n_condition is_equivalent(\"set(dictionary keys()) = key_set\") or _condition is_equivalent(\"key_set = set(dictionary keys())\")\n`)) })\n```\nYou should print Invalid format: <dictionary> at position <index> has missing and/or invalid keys (where <dictionary> and <index> should be replaced by the dictionary and index at the current iteration) inside your new if statement ``js\n({ test: () => assert(runPython(\nbuilt_in_print = print\nout = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\nout",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "a7765cefe286727f00f5dc6b5f611db3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "find_for_loops()[0] find_bodies()[0] find_ifs()[1] find_conditions()[0] _condition is_equivalent(\"set(dictionary keys()) = key_set\") or _condition is_equivalent(\"key_set = set(dictionary keys())\") `)) }) ``` You should print Invalid format: <dictionary> at position <index> has missing and/or invalid keys (where <dictionary> and <index> should be replaced by the dictionary and index at the current iteration) inside your new if statement ``js ({ test: () => assert(runPython( built_in_print = print out = [] def custom_print(args, *kwargs): call_args = [arg for arg in args] outextend(call_args)\nprint = custom_print\n_test_data = [\n{'testing': 'stuff'},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'Female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'V2303',\n},\n{'keep testing': 'stuff'}\n]\nvalidate(_test_data)\nprint = built_in_print\n_first = f\"Invalid format: {_test_data[0]} at position 0 has missing and/or invalid keys \"\n_second = f\"Invalid format: {_test_data[2]} at position 2 has missing and/or invalid keys \"\nlen(out) >= 2 and _first in out and _second in out\n`)) })\n```\nYou should set is_invalid to True inside your new if statement js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[1] find_bodies()[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "98372b617ec15a667ee12a32dcb3dbf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'V2303', }, {'keep testing': 'stuff'} ] validate(_test_data) print = built_in_print _first = f\"Invalid format: {_test_data[0]} at position 0 has missing and/or invalid keys \" _second = f\"Invalid format: {_test_data[2]} at position 2 has missing and/or invalid keys \" len(out) >= 2 and _first in out and _second in out `)) }) ``` You should set is_invalid to True inside your new if statement js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[1] find_bodies()[0]has_stmt(\"is_invalid = True\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "d208b5fb5ed1b4e503dfebdb4e4dde8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple ') return False is_invalid = False key_set = set( ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] ) for index, dictionary in enumerate(data): if not isinstance(dictionary, dict): print(f'Invalid format: expected a dictionary at position {index}')\nis_invalid = True\n--fcc-editable-region--\n--fcc-editable-region--\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846b0048f71fc4efd786b42.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "45be38ee151286406e053d631d7126f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5b4d1ca2de562d6629c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846d5b4d1ca2de562d6629c\ntitle: Step 10\nchallengeType: 20\ndashedName: step-10\n--description--\nAfter your for loop, still inside the validate function, create an if statement If is_invalid is True, return False --hints--\nYou should have an if statement at the bottom of your validate function js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_ifs()[1]\n`) })\nYour if statement should run when is_invalid is True js\n({ test: () => runPython(`\n_actual = _Node(_code) find_function(\"validate\") find_ifs()[1] find_conditions()[0]\n_conditions = [\n\"is_invalid\",\n\"is_invalid == True\",\n\"True == is_invalid\",\n\"is_invalid is True\",\n\"True is is_invalid\",\n]\nassert any(_actual is_equivalent(expected) for expected in _conditions)\n`) })\nYou should return False inside your if statement ``js\n({ test: () => runPython(\nassert _Node(_code) find_function(\"validate\") find_ifs()[1] find_bodies()[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2511,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5b4d1ca2de562d6629c.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e265dca2c8dfbcc785ef736e85c3c2bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5b4d1ca2de562d6629c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_ifs()[1] `) }) Your if statement should run when is_invalid is True js ({ test: () => runPython(` _actual = _Node(_code) find_function(\"validate\") find_ifs()[1] find_conditions()[0] _conditions = [ \"is_invalid\", \"is_invalid == True\", \"True == is_invalid\", \"is_invalid is True\", \"True is is_invalid\", ] assert any(_actual is_equivalent(expected) for expected in _conditions) `) }) You should return False inside your if statement ``js ({ test: () => runPython( assert _Node(_code) find_function(\"validate\") find_ifs()[1] find_bodies()[0]has_return(\"False\")\nbuit_in_print = print\ndef custom_print(args, *kwargs):\npass\nprint = custom_print\nassert validate([{}, \"\", 0]) == False\n`) })\n```\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2511,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5b4d1ca2de562d6629c.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "35ab29cc7b93e4d66791a6b3c7958e7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5b4d1ca2de562d6629c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'gender': 'Female', 'diagnosis': 'Hypertension', 'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2511,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846d5b4d1ca2de562d6629c.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5a3f41a0d6d79578e97ac91ea0832e84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e4482d1a78f9cfd25eed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846e4482d1a78f9cfd25eed\ntitle: Step 23\nchallengeType: 20\ndashedName: step-23\n--description--\nThe constraints dictionary will contain each key you should expect to have in the data to validate The value associated to each of them will indicate the result of the validation Add the key patient_id to the constraints dictionary For its value, use a call to isinstance passing in patient_id and str as the arguments --hints--\nYour constraints dictionary should have a key patient_id with the value of isinstance(patient_id, str) js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") is_equivalent(\"constraints = {'patient_id': isinstance(patient_id, str)}\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2774,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e4482d1a78f9cfd25eed.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1ae8af238abbe22b912c0a17a40d70a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e4482d1a78f9cfd25eed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { } --fcc-editable-region-- return constraints def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2774,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e4482d1a78f9cfd25eed.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6fca27f71f2009f170ceb8914c9ca6aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e3e61271e1f164636b13.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846e3e61271e1f164636b13\ntitle: Step 21\nchallengeType: 20\ndashedName: step-21\n--description--\nNow you are going to make the validation more granular Create a function named find_invalid_records to find invalid values in a dictionary Give it the following parameters: patient_id, age, gender, diagnosis, medications, last_visit_id Inside your new function, create an empty dictionary named constraints Then, return constraints from your new function --hints--\nYou should have a function named find_invalid_records js\n({ test: () => runPython(`\nassert _Node(_code) has_function(\"find_invalid_records\")\n`) })\nYour find_invalid_records function should have the following parameters: patient_id, age, gender, diagnosis, medications, last_visit_id, in this order js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"find_invalid_records\") has_args(\"patient_id, age, gender, diagnosis, medications, last_visit_id\")\n`) })\nYou should have a variable named constraints with the value of an empty dictionary inside your new function js\n({ test: () => assert(runPython(`\n_foo = _Node(_code) find_function(\"find_invalid_records\")\n_foo has_stmt(\"constraints = {}\") or _foo has_stmt(\"constraints = dict()\")\n`)) })\nYou should return the constraints dictionary from your find_invalid_records function js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"find_invalid_records\")",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3311,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e3e61271e1f164636b13.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bd18c37635aacdf3d9e96ffc36c0c324",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e3e61271e1f164636b13.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "order js ({ test: () => runPython(` assert _Node(_code) find_function(\"find_invalid_records\") has_args(\"patient_id, age, gender, diagnosis, medications, last_visit_id\") `) }) You should have a variable named constraints with the value of an empty dictionary inside your new function js ({ test: () => assert(runPython(` _foo = _Node(_code) find_function(\"find_invalid_records\") _foo has_stmt(\"constraints = {}\") or _foo has_stmt(\"constraints = dict()\") `)) }) You should return the constraints dictionary from your find_invalid_records function js ({ test: () => runPython(` assert _Node(_code) find_function(\"find_invalid_records\")has_return(\"constraints\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\n--fcc-editable-region--\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3311,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e3e61271e1f164636b13.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "186d30b4f83856d779e27f3999ea1015",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e3e61271e1f164636b13.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] --fcc-editable-region-- --fcc-editable-region-- def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple ') return False is_invalid = False key_set = set( ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] ) for index, dictionary in enumerate(data): if not isinstance(dictionary, dict): print(f'Invalid format: expected a dictionary at position {index}')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3311,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e3e61271e1f164636b13.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0e2c440dd99ff7f9cf1814be0772cb15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e87cfa1500452def10c0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846e87cfa1500452def10c0\ntitle: Step 24\nchallengeType: 20\ndashedName: step-24\n--description--\nAs you wrote in the previous step, patient_id should be a string You want to check that it also has a specific pattern though For that, you are going to use a regular expression Therefore, at the top of your code, use the import keyword to import the re module --hints--\nYou should import the re module js\n({ test: () => runPython(`\nassert _Node(_code) has_import(\"import re\")\n`) })\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\n--fcc-editable-region--\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\n}\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e87cfa1500452def10c0.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d416e654506a093b33711c5c1b4df895",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e87cfa1500452def10c0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) } return constraints def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846e87cfa1500452def10c0.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "77bd1c8019cef0075da9287570f09a62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ee2d4d66bda7e22362ab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6846ee2d4d66bda7e22362ab\ntitle: Step 25\nchallengeType: 20\ndashedName: step-25\n--description--\nA regular expression, or regex, is a pattern used to match a sequence of characters in text The search function from the re module takes a regex pattern and a string as its arguments It returns a corresponding match object if the pattern produces a match Otherwise it returns None ```py\nimport re\ngreeting = \"Hello there \"\nprint(re search('Hi', greeting)) # None\nprint(re search('Hello', greeting)) #\n```\nCall re search with the string p as the first argument and patient_id as the second argument Use the and operator to add the function call as a second expression to the value of your patient_id key --hints--\nYour constraints dictionary should have a key patient_id with the value of isinstance(patient_id, str) and re search('p', patient_id) js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") is_equivalent(\"constraints = {'patient_id': isinstance(patient_id, str) and re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3225,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ee2d4d66bda7e22362ab.md",
      "source_type": "git_repo"
    },
    "token_count": 245,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a5d3aed3dc21790b2450c44ddf118432",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ee2d4d66bda7e22362ab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "greeting)) # ``` Call re search with the string p as the first argument and patient_id as the second argument Use the and operator to add the function call as a second expression to the value of your patient_id key --hints-- Your constraints dictionary should have a key patient_id with the value of isinstance(patient_id, str) and re search('p', patient_id) js ({ test: () => runPython(` assert _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") is_equivalent(\"constraints = {'patient_id': isinstance(patient_id, str) and research('p', patient_id)}\")\n`) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str)\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3225,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ee2d4d66bda7e22362ab.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "dbbdce17424bb4be93385e97ebaac943",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ee2d4d66bda7e22362ab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) } --fcc-editable-region-- return constraints def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3225,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6846ee2d4d66bda7e22362ab.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ac7206cba717dc85a87264d392e06885",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6849a0d59a98011bb2e46d12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6849a0d59a98011bb2e46d12\ntitle: Step 11\nchallengeType: 20\ndashedName: step-11\n--description--\nAfter the if statement, print the string Valid format.. Then return True.\n--hints--\nYou should print Valid format. after your if statement.\njs\n({ test: () => assert(runPython(`\n_if_statement = \"if is_invalid:\\\\n  return False\"\n_Node(_code).find_function(\"validate\").is_ordered(_if_statement, \"print('Valid format.')\")\n`)) })\nYou should return True after your print() call.\njs\n({ test: () => assert(runPython(`\n_Node(_code).find_function(\"validate\").is_ordered(\"print('Valid format.')\", \"return True\")\n`)) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple.')\nreturn False\nis_invalid = False\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index}.')\nis_invalid = True\n--fcc-editable-region--\nif is_invalid:\nreturn False\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6849a0d59a98011bb2e46d12.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e0b32cc3102cc3034ed68a3ee0a03bbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6849311be42a0431b8e59109.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6849311be42a0431b8e59109\ntitle: Step 9\nchallengeType: 20\ndashedName: step-9\n--description--\nYou are checking if the data passed to your function is a list or a tuple You still need to ensure that each item in the sequence is a dictionary Inside your for loop, if the item in dictionary is not an instance of dict, print Invalid format: expected a dictionary at position <index> (where <index> should be replaced by the current index) and set is_invalid to True --hints--\nYou should have an if statement inside your for loop js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[0]\n`) })\nYour if statement should check if dictionary is not an instance of dict js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[0] find_conditions()[0] is_equivalent(\"not isinstance(dictionary, dict)\")\n`) })\nYou should print Invalid format: expected a dictionary at position <index> (where <index> should be replaced by the current index) inside your if statement ``js\n({ test: () => assert(runPython(\nbuilt_in_print = print\nout = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\nvalidate([{}, \"\", {}, [], 0])\nprint = built_in_print\n_first = 'Invalid format: expected a dictionary at position 1 '\n_second = 'Invalid format: expected a dictionary at position 3 '\n_third = 'Invalid format: expected a dictionary at position 4 '\nlen(out) >= 3 and _first in out and _second in out and _third in out\n`)) })\n```\nYou should set is_invalid to True inside your if statement js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[0] find_bodies()[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3159,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6849311be42a0431b8e59109.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c4f9ff1003f30e5536361f8871980aed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6849311be42a0431b8e59109.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= built_in_print _first = 'Invalid format: expected a dictionary at position 1 ' _second = 'Invalid format: expected a dictionary at position 3 ' _third = 'Invalid format: expected a dictionary at position 4 ' len(out) >= 3 and _first in out and _second in out and _third in out `)) }) ``` You should set is_invalid to True inside your if statement js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()[0] find_bodies()[0]has_stmt(\"is_invalid = True\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\n--fcc-editable-region--\nfor index, dictionary in enumerate(data):\npass\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3159,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6849311be42a0431b8e59109.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "be7a2b149dec7050cadd088a67889aff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684ed67f4c678896445f973f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 684ed67f4c678896445f973f\ntitle: Step 22\nchallengeType: 20\ndashedName: step-22\n--description--\nThe ** operator can be used to unpack the elements in a dictionary and pass them as keyword arguments in a function call:\n```py\ndef sum(a, b, c):\nreturn a + b + c\nnums = {'a': 2, 'b': 4, 'c': 1}\nprint(sum(**nums)) # 7\n```\nIn the example above, sum(**nums) is equivalent to sum(a=2, b=4, c=1) At the bottom of your code, print the result of calling the find_invalid_records function For its arguments, use the ** operator to unpack medical_records[0] --hints--\nYou should print find_invalid_records(**medical_records[0]) js\n({ test: () => runPython(`\nassert _Node(_code)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684ed67f4c678896445f973f.md",
      "source_type": "git_repo"
    },
    "token_count": 200,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b5a03ce2782464189ac1f7750ae69334",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684ed67f4c678896445f973f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "arguments in a function call: ```py def sum(a, b, c): return a + b + c nums = {'a': 2, 'b': 4, 'c': 1} print(sum(**nums)) # 7 ``` In the example above, sum(**nums) is equivalent to sum(a=2, b=4, c=1) At the bottom of your code, print the result of calling the find_invalid_records function For its arguments, use the ** operator to unpack medical_records[0] --hints-- You should print find_invalid_records(**medical_records[0]) js ({ test: () => runPython(` assert _Node(_code)has_call(\"print(find_invalid_records(**medical_records[0]))\")\n`) })\n--seed--\n--seed-contents--\n```py\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n}\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684ed67f4c678896445f973f.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f1ddad7fea57e654cf2fd583b5e79519",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684ed67f4c678896445f973f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { } return constraints def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684ed67f4c678896445f973f.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a792472dfb7cd7a194970e0395263510",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fd85424ffdb2edff3afd1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 684fd85424ffdb2edff3afd1\ntitle: Step 26\nchallengeType: 20\ndashedName: step-26\n--description--\nNow you can see {'patient_id': None} printed to the terminal because the lowercase p does not match P1001 and the and operator returns the first falsy value of the expression You want to ensure that the patient ID starts with the letter p, but it can be either lowercase or uppercase To modify the matching behavior of regular expressions, you can use flags For example, re search accepts a third argument to specify any flags:\n```py\nimport re\ngreeting = \"Hello there \"\nprint(re search('hello', greeting)) # None\nprint(re search('hello', greeting, re IGNORECASE))\n```\nAdd re IGNORECASE as the third argument to your re search call This will make your regex search case insensitive After that, you'll see None replaced by the match object <re Match object; span=(0, 1), match='P'>, where match indicates the match and span indicates its location in the string --hints--\nYou should add re IGNORECASE as the third argument to your re search call js\n({ test: () => assert(runPython(`\n_var = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\")\n_first = \"constraints = {'patient_id': isinstance(patient_id, str) and re search('p', patient_id, flags=re IGNORECASE)}\"\n_second = \"constraints = {'patient_id': isinstance(patient_id, str) and re search('p', patient_id, re IGNORECASE)}\"\n_var is_equivalent(_first) or _var",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fd85424ffdb2edff3afd1.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e9bdaa9ec7ebd557426c2afda9d68aa1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fd85424ffdb2edff3afd1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "object <re Match object; span=(0, 1), match='P'>, where match indicates the match and span indicates its location in the string --hints-- You should add re IGNORECASE as the third argument to your re search call js ({ test: () => assert(runPython(` _var = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") _first = \"constraints = {'patient_id': isinstance(patient_id, str) and re search('p', patient_id, flags=re IGNORECASE)}\" _second = \"constraints = {'patient_id': isinstance(patient_id, str) and re search('p', patient_id, re IGNORECASE)}\" _var is_equivalent(_first) or _varis_equivalent(_second)\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re search('p', patient_id)\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fd85424ffdb2edff3afd1.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "29ff526c9fc54a56e65611245bcccb1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fd85424ffdb2edff3afd1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re search('p', patient_id) } --fcc-editable-region-- return constraints def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fd85424ffdb2edff3afd1.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f2a6117cadf3719018e1f26aac683d9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fdb4386b473631d8e27ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 684fdb4386b473631d8e27ca\ntitle: Step 27\nchallengeType: 20\ndashedName: step-27\n--description--\nRegular expressions can contain special sequences consisting in a backslash (\\) followed by a character These sequences have a special meaning For example, \\d matches a decimal digit ```py\nimport re\nbook = \"Fahrenheit 451\"\nprint(re search('\\d', book))\n```\nAfter the letter p, patient_id should have a series of numbers So, modify your regex pattern to have the character p followed by the special sequence \\d --hints--\nYou should modify your regex pattern to be p\\d js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") is_equivalent(\"constraints = {'patient_id': isinstance(patient_id, str) and re search('p\\\\d', patient_id, re IGNORECASE)}\")\n`) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re search('p', patient_id, re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fdb4386b473631d8e27ca.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4060189d865b6cd1cb3ff84250631336",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fdb4386b473631d8e27ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re search('p', patient_id, reIGNORECASE)\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fdb4386b473631d8e27ca.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "639294a4328a825fee560bef7fef17f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fde383e4b1298310927b9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 684fde383e4b1298310927b9\ntitle: Step 28\nchallengeType: 20\ndashedName: step-28\n--description--\nQuantifiers are used in regular expressions to specify how many times a character can be repeated For example, the + character matches the previous character one or more times:\n```py\nimport re\nbook = \"Fahrenheit 451\"\nprint(re search('\\d', book))\nprint(re search('\\d+', book))\n```\nSo append a + quantifier to your regex pattern to match one or more digits --hints--\nYou should add the + quantifier to your current regex pattern p\\d js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") is_equivalent(\"constraints = {'patient_id': isinstance(patient_id, str) and re search('p\\\\d+', patient_id, re IGNORECASE)}\")\n`) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re search('p\\d', patient_id, re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fde383e4b1298310927b9.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a5ab6a9aafc095c0148570e5ba438e6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fde383e4b1298310927b9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re search('p\\d', patient_id, reIGNORECASE)\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fde383e4b1298310927b9.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3108be4d77cdc2fd22b8493aaa97b4fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fe1be09b05ad785832546.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 684fe1be09b05ad785832546\ntitle: Step 29\nchallengeType: 20\ndashedName: step-29\n--description--\nNow that your regex matches the letter p followed by one or more digits, one last thing you need to check is that no extra characters are found in the string To do that you can make use of another function from the re module The fullmatch function returns a match object when the regex pattern matches the entire string and None otherwise ```py\nimport re\nbook = \"Fahrenheit 451\"\nprint(re fullmatch('\\d+', book)) #None\nprint(re fullmatch('Fahrenheit \\d+', book))\n```\nReplace the search call with a fullmatch call keeping the same arguments --hints--\nYou should replace re search('p\\d+', patient_id, re IGNORECASE) with re fullmatch('p\\d+', patient_id, re IGNORECASE) js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") is_equivalent(\"constraints = {'patient_id': isinstance(patient_id, str) and re fullmatch('p\\\\d+', patient_id, re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fe1be09b05ad785832546.md",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5e3130a334f4cb145c75943864eb707e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fe1be09b05ad785832546.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "match object when the regex pattern matches the entire string and None otherwise ```py import re book = \"Fahrenheit 451\" print(re fullmatch('\\d+', book)) #None print(re fullmatch('Fahrenheit \\d+', book)) ``` Replace the search call with a fullmatch call keeping the same arguments --hints-- You should replace re search('p\\d+', patient_id, re IGNORECASE) with re fullmatch('p\\d+', patient_id, re IGNORECASE) js ({ test: () => runPython(` assert _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") is_equivalent(\"constraints = {'patient_id': isinstance(patient_id, str) and re fullmatch('p\\\\d+', patient_id, reIGNORECASE)}\")\n`) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re search('p\\d+', patient_id, re IGNORECASE)\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fe1be09b05ad785832546.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3c72471672c265843c76224168dca5dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fe1be09b05ad785832546.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re search('p\\d+', patient_id, re IGNORECASE) } --fcc-editable-region-- return constraints def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\684fe1be09b05ad785832546.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0cecf89469b613819b80583ac38abdb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851051b0da0e34840f3919f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6851051b0da0e34840f3919f\ntitle: Step 31\nchallengeType: 20\ndashedName: step-31\n--description--\nage should not only be a integer, it should be a positive integer greater than or equal to 18 Using the and operator, add a second expression to check that to the value of the age key --hints--\nThe age key of your constraints dictionary should have the value of isinstance(age, int) and age >= 18 js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('age')\n_val = _target values[_index]\n_Node(_val) is_equivalent(\"isinstance(age, int) and age >= 18\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851051b0da0e34840f3919f.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7a601163cb07afd7b6deaae27190c875",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851051b0da0e34840f3919f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Hypertension', 'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, reIGNORECASE),\n--fcc-editable-region--\n'age': isinstance(age, int)\n--fcc-editable-region--\n}\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851051b0da0e34840f3919f.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7d37f143c7676246451f5600ce380cfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685106fab1f801691d8f58a0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 685106fab1f801691d8f58a0\ntitle: Step 32\nchallengeType: 20\ndashedName: step-32\n--description--\nAdd another key gender to the constraints dictionary Following the format of the expression you wrote in the previous steps, verify that gender is a string Then, use the and operator to check that the lowercase gender is in ('male', 'female') --hints--\nYour constraints dictionary should have a key gender js\n({ test: () => assert(runPython(`\n_ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys\n_keys = [k value for k in _ast_keys]\n'gender' in _keys\n`)) })\nThe gender key of your constraints dictionary should have the value of isinstance(gender, str) and gender lower() in ('male', 'female') js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('gender')\n_val = _target values[_index]\n_Node(_val) is_equivalent(\"isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3298,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685106fab1f801691d8f58a0.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "caf79dd7930fc523d70952dd253686ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685106fab1f801691d8f58a0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "_ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys _keys = [k value for k in _ast_keys] 'gender' in _keys `)) }) The gender key of your constraints dictionary should have the value of isinstance(gender, str) and gender lower() in ('male', 'female') js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('gender') _val = _target values[_index] _Node(_val) is_equivalent(\"isinstance(gender, str) and genderlower() in ('male', 'female')\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3298,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685106fab1f801691d8f58a0.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4ea510aad94b80174eed6a6173936c32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685106fab1f801691d8f58a0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, reIGNORECASE),\n'age': isinstance(age, int) and age >= 18\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3298,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685106fab1f801691d8f58a0.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ae98b865a677e1d4913b9b5ff59ff8cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685081f42afaba3a60bdf94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 685081f42afaba3a60bdf94f\ntitle: Step 30\nchallengeType: 20\ndashedName: step-30\n--description--\nNext, you want to verify that age is an integer So add another key age to the constraints dictionary For its value, call isinstance passing age and int as its arguments --hints--\nYour constraints dictionary should have a key age js\n({ test: () => assert(runPython(`\n_ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys\n_keys = [k value for k in _ast_keys]\n'age' in _keys\n`)) })\nThe age key of your constraints dictionary should have the value of isinstance(age, int) js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('age')\n_val = _target values[_index]\n_Node(_val)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3073,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685081f42afaba3a60bdf94f.md",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4b829b759d9692a44f493436bc332885",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685081f42afaba3a60bdf94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have a key age js ({ test: () => assert(runPython(` _ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys _keys = [k value for k in _ast_keys] 'age' in _keys `)) }) The age key of your constraints dictionary should have the value of isinstance(age, int) js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('age') _val = _target values[_index] _Node(_val)is_equivalent(\"isinstance(age, int)\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE)\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3073,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685081f42afaba3a60bdf94f.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "73a02cca0fa7759395804cb8037d233a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685081f42afaba3a60bdf94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE) } --fcc-editable-region-- return constraints def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3073,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685081f42afaba3a60bdf94f.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "063007147fe0bb5753f4d85b54719ed1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685118ddcad14fa5d62faaef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 685118ddcad14fa5d62faaef\ntitle: Step 33\nchallengeType: 20\ndashedName: step-33\n--description--\nNow add a key diagnosis to the constraints dictionary For its value, write an expression that checks that diagnosis is either an instance of str or is None --hints--\nYour constraints dictionary should have a key diagnosis js\n({ test: () => assert(runPython(`\n_ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys\n_keys = [k value for k in _ast_keys]\n'diagnosis' in _keys\n`)) })\nThe diagnosis key of your constraints dictionary should have the value of isinstance(diagnosis, str) or diagnosis is None js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('diagnosis')\n_val = _target values[_index]\n_Node(_val)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685118ddcad14fa5d62faaef.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f0183485a56e5ff76a227032a4cf77e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685118ddcad14fa5d62faaef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js ({ test: () => assert(runPython(` _ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys _keys = [k value for k in _ast_keys] 'diagnosis' in _keys `)) }) The diagnosis key of your constraints dictionary should have the value of isinstance(diagnosis, str) or diagnosis is None js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('diagnosis') _val = _target values[_index] _Node(_val)is_equivalent(\"isinstance(diagnosis, str) or diagnosis is None\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685118ddcad14fa5d62faaef.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "68bd4d95c32d2456f629e5cf53409052",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685118ddcad14fa5d62faaef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female')\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3270,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685118ddcad14fa5d62faaef.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6994b58d277b19dee1634b178bd84034",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516ab0ba81759b1ff864e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68516ab0ba81759b1ff864e3\ntitle: Step 36\nchallengeType: 20\ndashedName: step-36\n--description--\nThe all function returns True if all the elements from the iterable passed to it are truthy, and False otherwise:\n```py\ntruthy = [1, 2, 3]\nprint(all(truthy)) # True\nfalsy = [0, 1, 2, 3]\nprint(all(falsy)) # False\n```\nPass the list [isinstance(i, str) for i in medications] to the all function to ensure that every element in it is a string --hints--\nYou should modify the value of your medications key by passing [isinstance(i, str) for i in medications] to the all function js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('medications')\n_val = _target values[_index]\n_Node(_val)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516ab0ba81759b1ff864e3.md",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "083d6b4b28d425ff1a211ca93a373e77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516ab0ba81759b1ff864e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Pass the list [isinstance(i, str) for i in medications] to the all function to ensure that every element in it is a string --hints-- You should modify the value of your medications key by passing [isinstance(i, str) for i in medications] to the all function js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('medications') _val = _target values[_index] _Node(_val)is_equivalent(\"isinstance(medications, list) and all([isinstance(i, str) for i in medications])\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516ab0ba81759b1ff864e3.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "af025c87abde85fcad5643fed1f5d657",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516ab0ba81759b1ff864e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n--fcc-editable-region--\n'medications': isinstance(medications, list) and [isinstance(i, str) for i in medications]\n--fcc-editable-region--\n}\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516ab0ba81759b1ff864e3.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3401ee7348692d347bcefd15baf79010",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511bdce9282edbef75ca48.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68511bdce9282edbef75ca48\ntitle: Step 35\nchallengeType: 20\ndashedName: step-35\n--description--\nAs you learned in a previous lecture, a list comprehension can be used to create a list starting from an existing iterable:\n```py\nsquares = [0, 1, 4, 9, 16, 25]\nroots = [i ** 0 5 for i in squares]\nprint(roots) # [0 0, 1 0, 2 0, 3 0, 4 0, 5 0]\n```\nEach item in the medications list should be a string In this step and the next one you'll write an expression to check that Use the and operator to add another expression to the value of the medications key On the right side of the and operator, use the list comprehension syntax to create a list made by evaluating isinstance(i, str) for each i in medications --hints--\nThe medications key of your constraints dictionary should have the value of isinstance(medications, list) and [isinstance(i, str) for i in medications] js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('medications')\n_val = _target values[_index]\n_Node(_val)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511bdce9282edbef75ca48.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c1912c9b9a386c4d86fbdef0c9e6595d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511bdce9282edbef75ca48.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the and operator, use the list comprehension syntax to create a list made by evaluating isinstance(i, str) for each i in medications --hints-- The medications key of your constraints dictionary should have the value of isinstance(medications, list) and [isinstance(i, str) for i in medications] js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('medications') _val = _target values[_index] _Node(_val)is_equivalent(\"isinstance(medications, list) and [isinstance(i, str) for i in medications]\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511bdce9282edbef75ca48.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a30b264e0491286e3a72ee7ff0eca29e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511bdce9282edbef75ca48.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n--fcc-editable-region--\n'medications': isinstance(medications, list)\n--fcc-editable-region--\n}\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511bdce9282edbef75ca48.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a918c0caa9d31f4fc3702545682b5587",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511abf14415dc7c27fbea7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68511abf14415dc7c27fbea7\ntitle: Step 34\nchallengeType: 20\ndashedName: step-34\n--description--\nNext, add a medications key to the constraints dictionary For its value use isinstance to check that medications is a list --hints--\nYour constraints dictionary should have a key medications js\n({ test: () => assert(runPython(`\n_ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys\n_keys = [k value for k in _ast_keys]\n'medications' in _keys\n`)) })\nThe medications key of your constraints dictionary should have the value of isinstance(medications, list) js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('medications')\n_val = _target values[_index]\n_Node(_val)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3276,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511abf14415dc7c27fbea7.md",
      "source_type": "git_repo"
    },
    "token_count": 217,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2a889215554e9571433be627144baa6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511abf14415dc7c27fbea7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have a key medications js ({ test: () => assert(runPython(` _ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys _keys = [k value for k in _ast_keys] 'medications' in _keys `)) }) The medications key of your constraints dictionary should have the value of isinstance(medications, list) js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('medications') _val = _target values[_index] _Node(_val)is_equivalent(\"isinstance(medications, list)\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3276,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511abf14415dc7c27fbea7.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d68e6adf86dc6ac92fec359018cfa017",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511abf14415dc7c27fbea7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3276,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68511abf14415dc7c27fbea7.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "44ff78efc3ff0d632e097559010f2056",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516e3c627b43de8c138ea9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68516e3c627b43de8c138ea9\ntitle: Step 38\nchallengeType: 20\ndashedName: step-38\n--description--\nIt's time to use another regular expression Similarly to what you've already done, use the and operator to add an expression to the current value of constraints['last_visit_id'] On the right side of the and operator, use the fullmatch function from the re module to ensure that last_visit_id starts with the letter v (either lowercase or uppercase) followed by one or more digits --hints--\nThe last_visit_id key of your constraints dictionary should have the value of isinstance(last_visit_id, str) and re fullmatch('v\\d+', last_visit_id, re IGNORECASE) js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('last_visit_id')\n_val = _target values[_index]\n_Node(_val) is_equivalent(\"isinstance(last_visit_id, str) and re fullmatch('v\\\\d+', last_visit_id, re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3538,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516e3c627b43de8c138ea9.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "32d585a6ed487c2dd0417488775c4c69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516e3c627b43de8c138ea9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that last_visit_id starts with the letter v (either lowercase or uppercase) followed by one or more digits --hints-- The last_visit_id key of your constraints dictionary should have the value of isinstance(last_visit_id, str) and re fullmatch('v\\d+', last_visit_id, re IGNORECASE) js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('last_visit_id') _val = _target values[_index] _Node(_val) is_equivalent(\"isinstance(last_visit_id, str) and re fullmatch('v\\\\d+', last_visit_id, reIGNORECASE)\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3538,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516e3c627b43de8c138ea9.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "bbf06f8560cdd83b924b8d8998614bda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516e3c627b43de8c138ea9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list) and all([isinstance(i, str) for i in medications]),\n--fcc-editable-region--\n'last_visit_id': isinstance(last_visit_id, str)\n--fcc-editable-region--\n}\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3538,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516e3c627b43de8c138ea9.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4b7ec2f4a52bffde0439dcea86677e50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516d0c0cb162c7578616ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68516d0c0cb162c7578616ad\ntitle: Step 37\nchallengeType: 20\ndashedName: step-37\n--description--\nAdd one last key last_visit_id to the constraints dictionary For its value, use isinstance to verify that last_visit_id is a string --hints--\nYour constraints dictionary should have a key last_visit_id js\n({ test: () => assert(runPython(`\n_ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys\n_keys = [k value for k in _ast_keys]\n'last_visit_id' in _keys\n`)) })\nThe last_visit_id key of your constraints dictionary should have the value of isinstance(last_visit_id, str) js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value\n_keys = [k value for k in _target keys]\n_index = _keys index('last_visit_id')\n_val = _target values[_index]\n_Node(_val)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516d0c0cb162c7578616ad.md",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b6372ffefc699ca05a4b45da962fc885",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516d0c0cb162c7578616ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have a key last_visit_id js ({ test: () => assert(runPython(` _ast_keys = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value keys _keys = [k value for k in _ast_keys] 'last_visit_id' in _keys `)) }) The last_visit_id key of your constraints dictionary should have the value of isinstance(last_visit_id, str) js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_variable(\"constraints\") tree value _keys = [k value for k in _target keys] _index = _keys index('last_visit_id') _val = _target values[_index] _Node(_val)is_equivalent(\"isinstance(last_visit_id, str)\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\n--fcc-editable-region--\nconstraints = {\n'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516d0c0cb162c7578616ad.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d1a0184f36ea9b8e2575fe61fcdcc50f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516d0c0cb162c7578616ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): --fcc-editable-region-- constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list) and all([isinstance(i, str) for i in medications])\n}\n--fcc-editable-region--\nreturn constraints\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68516d0c0cb162c7578616ad.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b67297238fb04fc9917aac33954686bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851719eee78621daa093a00.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6851719eee78621daa093a00\ntitle: Step 39\nchallengeType: 20\ndashedName: step-39\n--description--\nNow that your constraints dictionary is complete, you'll change the return statement of find_invalid_records to make it return a list of the invalid keys Using the list comprehension syntax, return a list that evaluates key for each key, value in constraints items() --hints--\nYour find_invalid_records function should return a list comprehension that iterates over constraints items() js\n({ test: () => assert(runPython(`\n_iter = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_iters()[0]\n_iter is_equivalent(\"constraints items()\")\n`)) })\nYour find_invalid_records function should return a list comprehension that uses key, value to iterate over constraints items() js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_targets()[0]\n_target is_equivalent(\"key, value\")\n`)) })\nYour find_invalid_records function should return a list comprehension that evaluates key for each key, value in constraints items() js\n({ test: () => assert(runPython(`\n_expr = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_expr()\n_expr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3885,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851719eee78621daa093a00.md",
      "source_type": "git_repo"
    },
    "token_count": 274,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "037b7fec1521bee0b29cecd6d33decb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851719eee78621daa093a00.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "_iter = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_iters()[0] _iter is_equivalent(\"constraints items()\") `)) }) Your find_invalid_records function should return a list comprehension that uses key, value to iterate over constraints items() js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_targets()[0] _target is_equivalent(\"key, value\") `)) }) Your find_invalid_records function should return a list comprehension that evaluates key for each key, value in constraints items() js ({ test: () => assert(runPython(` _expr = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_expr() _expris_equivalent(\"key\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\nand re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3885,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851719eee78621daa093a00.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2ad4cdd9a52e4913fe728d8491368a8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851719eee78621daa093a00.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list)\nand all([isinstance(i, str) for i in medications]),\n'last_visit_id': isinstance(last_visit_id, str)\nand re fullmatch('v\\d+', last_visit_id, re IGNORECASE)\n}\n--fcc-editable-region--\nreturn constraints\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3885,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6851719eee78621daa093a00.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ab08273442bec8b3f8634ea52515ba48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685294b4a1ccb3de0e40410c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 685294b4a1ccb3de0e40410c\ntitle: Step 42\nchallengeType: 20\ndashedName: step-42\n--description--\nGoing back to the validate function, after the two if statements and still inside the for loop, create a variable named invalid_records Then, assign it a call to find_invalid_records using the ** operator to unpack dictionary --hints--\nYou should have a variable named invalid_records at the bottom of your for loop inside the validate function js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] has_variable(\"invalid_records\")\n`) })\nYour invalid_records variable should have the value of find_invalid_records(**dictionary) js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_variable(\"invalid_records\") is_equivalent(\"invalid_records = find_invalid_records(**dictionary)\")\n`) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\nand re fullmatch('p\\d+', patient_id, re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3518,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685294b4a1ccb3de0e40410c.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e0dd31eff0b3921f72bf4c6b96080ec7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685294b4a1ccb3de0e40410c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Hypertension', 'medications': ['Lisinopril'], 'last_visit_id': 'V2301', }, { 'patient_id': 'p1002', 'age': 47, 'gender': 'male', 'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, reIGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender lower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list)\nand all([isinstance(i, str) for i in medications]),\n'last_visit_id': isinstance(last_visit_id, str)\nand re fullmatch('v\\d+', last_visit_id, re IGNORECASE)\n}\nreturn [key for key, value in constraints items() if not value]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3518,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685294b4a1ccb3de0e40410c.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "59f8e7c4e93c61c33fe5d9db9c92a9ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685294b4a1ccb3de0e40410c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "constraints items() if not value] def validate(data): is_sequence = isinstance(data, (list, tuple)) if not is_sequence: print('Invalid format: expected a list or tuple ') return False is_invalid = False key_set = set( ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] ) for index, dictionary in enumerate(data): if not isinstance(dictionary, dict): print(f'Invalid format: expected a dictionary at position {index} ') is_invalid = True if set(dictionary keys()) = key_set: print( f'Invalid format: {dictionary} at position {index} has missing and/or invalid keys'\n)\nis_invalid = True\n--fcc-editable-region--\n--fcc-editable-region--\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3518,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\685294b4a1ccb3de0e40410c.md",
      "source_type": "git_repo"
    },
    "token_count": 179,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5841baee259d92deb79e5486611d7777",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529393dcd6a5c80de570fc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68529393dcd6a5c80de570fc\ntitle: Step 41\nchallengeType: 20\ndashedName: step-41\n--description--\nThe find_invalid_records function is complete Now, remove print(find_invalid_records(**medical_records[0])) from your code --hints--\nYou should not have print(find_invalid_records(**medical_records[0])) in your code js\n({ test: () => assert(runPython(`\nnot _Node(_code) has_call(\"print(find_invalid_records(**medical_records[0]))\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\nand re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender lower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list)\nand all([isinstance(i, str) for i in medications]),\n'last_visit_id': isinstance(last_visit_id, str)\nand re",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529393dcd6a5c80de570fc.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "566790f339c1e52709b36d20b108db59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529393dcd6a5c80de570fc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and gender lower() in ('male', 'female'), 'diagnosis': isinstance(diagnosis, str) or diagnosis is None, 'medications': isinstance(medications, list) and all([isinstance(i, str) for i in medications]), 'last_visit_id': isinstance(last_visit_id, str) and refullmatch('v\\d+', last_visit_id, re IGNORECASE)\n}\nreturn [key for key, value in constraints items() if not value]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n--fcc-editable-region--\nprint(find_invalid_records(**medical_records[0]))\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3062,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529393dcd6a5c80de570fc.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e4053d69ee727b11cc2afcf1d8f72399",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68517af94b02d6cc2bc08280.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68517af94b02d6cc2bc08280\ntitle: Step 40\nchallengeType: 20\ndashedName: step-40\n--description--\nList comprehensions also accepts if clauses to filter out items from an iterable:\npy\nnums = [1, 2, 3, 4, 5, 6]\neven_nums = [num for num in nums if num % 2 == 0]\nprint(even_nums) # [2, 4, 6]\nSince you want to return a list containing only invalid keys, add an if clause to your comprehension so that each key is added to the list only when value is falsy --hints--\nYour find_invalid_records function should return a list comprehension that evaluates key for each key, value in constraints items() if value is falsy js\n({ test: () => assert(runPython(`\n_if_clause = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_ifs()[0]\n_if_clause is_equivalent(\"not value\") or _if_clause is_equivalent(\"value == False\")\n`)) })\nYour find_invalid_records function should return a list comprehension that iterates over constraints items() js\n({ test: () => assert(runPython(`\n_iter = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_iters()[0]\n_iter is_equivalent(\"constraints items()\")\n`)) })\nYour find_invalid_records function should return a list comprehension that uses key, value to iterate over constraints items() js\n({ test: () => assert(runPython(`\n_target = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_targets()[0]\n_target is_equivalent(\"key, value\")\n`)) })\nYour find_invalid_records function should return a list comprehension that evaluates key for each key, value in constraints items() js\n({ test: () => assert(runPython(`\n_expr = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_expr()\n_expr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68517af94b02d6cc2bc08280.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "070a9d5deec2214353f1c5d4d4016192",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68517af94b02d6cc2bc08280.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "_iter = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_iters()[0] _iter is_equivalent(\"constraints items()\") `)) }) Your find_invalid_records function should return a list comprehension that uses key, value to iterate over constraints items() js ({ test: () => assert(runPython(` _target = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_targets()[0] _target is_equivalent(\"key, value\") `)) }) Your find_invalid_records function should return a list comprehension that evaluates key for each key, value in constraints items() js ({ test: () => assert(runPython(` _expr = _Node(_code) find_function(\"find_invalid_records\") find_return() find_comp_expr() _expris_equivalent(\"key\")\n`)) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\nand re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68517af94b02d6cc2bc08280.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4ee8ab40621ab015939547e4d32106ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68517af94b02d6cc2bc08280.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list)\nand all([isinstance(i, str) for i in medications]),\n'last_visit_id': isinstance(last_visit_id, str)\nand re fullmatch('v\\d+', last_visit_id, re IGNORECASE)\n}\n--fcc-editable-region--\nreturn [key for key, value in constraints items()]\n--fcc-editable-region--\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\nprint(find_invalid_records(**medical_records[0]))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68517af94b02d6cc2bc08280.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "dd0dada17b7c2d738514a1a67fe7e9f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\655cd899f8de09431eabb40c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 655cd899f8de09431eabb40c\ntitle: Step 1\nchallengeType: 20\ndashedName: step-1\n--description--\nMerge sort is a sorting algorithm that uses the divide-and-conquer principle to sort collections of data. That is, it \"divides\" a collection into smaller sub-parts, and \"conquers\" the sub-parts by sorting them independently, then merges the sorted sub-parts.\nBegin by creating a function called merge_sort that takes the parameter array. This function will handle the task of sorting a list of numbers. Use the pass keyword in the function body.\n--hints--\nYou should declare a function named merge_sort with a single parameter: array. Don't forget to use the pass keyword in the function body.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").has_args(\"array\")`))\n})\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 926,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\655cd899f8de09431eabb40c.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e01764b60982319a25f77ef93ef50f90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656627b47bd2d2a4afbc945d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656627b47bd2d2a4afbc945d\ntitle: Step 3\nchallengeType: 20\ndashedName: step-3\n--description--\nIn the previous step, you got the mid point. You can use it to divide array into two and assign each part to new variables.\nUse the slice syntax to extract the left half of array and assign it to a variable named left_part.\n--hints--\nYou should have a variable named left_part in your merge_sort function.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").has_variable(\"left_part\")`))\n})\nYou should use the slice syntax to extract the left half of the array and assign it to the left_part variable.\njs\n({\ntest: () => assert(runPython(`\ncond = _Node(_code).find_function(\"merge_sort\").find_variable(\"left_part\")\ncond.is_equivalent(\"left_part = array[:middle_point]\") or cond.is_equivalent(\"left_part = array[0:middle_point]\")\n`))\n})\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\ndef merge_sort(array):\nmiddle_point = len(array) // 2\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656627b47bd2d2a4afbc945d.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ff20b6420757ff0ff6bca6c6549d6418",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6564aee9c077774ea49c3faf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6564aee9c077774ea49c3faf\ntitle: Step 2\nchallengeType: 20\ndashedName: step-2\n--description--\nThe merge sort algorithm performs three actions:\nDivide an unsorted sequence of items into sub-parts\nSort the items in the sub-parts\nMerge the sorted sub-parts\nThe above happens recursively until the sub-parts are merged into the complete sorted sequence. Let's start by dividing the sequence.\nFirst, replace the pass keyword with a variable middle_point. Use the integer division operator (//) to divide the length of the array list by 2 and assign the result to your new middle_point variable. Remember to indent your code.\n--hints--\nYou should not have pass in the body of the function.\njs\n({\ntest: () => assert.isFalse(runPython(`_Node(_code).find_function(\"merge_sort\").has_pass()`))\n})\nYou should declare a middle_point variable and assign len(array) // 2 to it.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").has_stmt(\"middle_point = len(array) // 2\")`))\n})\n--seed--\n--seed-contents--\npy\n--fcc-editable-region--\ndef merge_sort(array):\npass\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1178,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6564aee9c077774ea49c3faf.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "457960f65db1d0bf2fe9bbaa9a3f639e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656639771fed09b5c0e8fe71.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656639771fed09b5c0e8fe71\ntitle: Step 5\nchallengeType: 20\ndashedName: step-5\n--description--\nNow that you've divided the array list into two separate lists, you'll keep dividing each list until every element stands alone in its own list. A list with a single number is always sorted.\nTo do that, recursively call merge_sort inside your function and pass left_part as the argument to the call.\n--hints--\nYou should call merge_sort with the argument left_part at the bottom of your function body.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").is_ordered(\"right_part = array[middle_point:]\", \"merge_sort(left_part)\")`\n))\n})\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656639771fed09b5c0e8fe71.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d6e3b81397df5b13c7bd5cd1d5a5a55a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6852c7f62711efe79f8a4219.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6852c7f62711efe79f8a4219\ntitle: Step 43\nchallengeType: 20\ndashedName: step-43\n--description--\nIf you pass invalid data to the validate function, for example a list containing non-dictionary elements or dictionaries with missing and/or invalid keys, Python will raise an AttributeError and a TypeError, respectively Feel free to verify it by modifying the medical_records list To avoid that, after setting is_invalid to True, use the continue keyword to skip to the next iteration in both your if statements --hints--\nYou should use the continue statement after setting is_invalid to True in both your if statements ``js\n({ test: () => assert(runPython(\n_if_statements = _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs()\n_if_statements[0] find_bodies()[0] is_ordered(\"is_invalid = True\", \"continue\") and _if_statements[1] find_bodies()[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6852c7f62711efe79f8a4219.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1acdb6daf87e21ff1966e9b6903eda38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6852c7f62711efe79f8a4219.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and a TypeError, respectively Feel free to verify it by modifying the medical_records list To avoid that, after setting is_invalid to True, use the continue keyword to skip to the next iteration in both your if statements --hints-- You should use the continue statement after setting is_invalid to True in both your if statements ``js ({ test: () => assert(runPython( _if_statements = _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_ifs() _if_statements[0] find_bodies()[0] is_ordered(\"is_invalid = True\", \"continue\") and _if_statements[1] find_bodies()[0]is_ordered(\"is_invalid = True\", \"continue\")\n`)) })\n```\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\nand re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6852c7f62711efe79f8a4219.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3a4dd2cbe2b41f0b9ccd73f32168910c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6852c7f62711efe79f8a4219.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list)\nand all([isinstance(i, str) for i in medications]),\n'last_visit_id': isinstance(last_visit_id, str)\nand re fullmatch('v\\d+', last_visit_id, re IGNORECASE)\n}\nreturn [key for key, value in constraints items() if not value]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\n--fcc-editable-region--\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\n--fcc-editable-region--\ninvalid_records = find_invalid_records(**dictionary)\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3587,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\6852c7f62711efe79f8a4219.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "db3d9fe133d9fe8f2918f12f2c5bb7f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656702f8b4cbd8cbf0a433c6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656702f8b4cbd8cbf0a433c6\ntitle: Step 8\nchallengeType: 20\ndashedName: step-8\n--description--\nNext, you need to create a loop that continues as long as there are elements remaining in both left_part and right_part.\nFor that, create a while loop with two conditions: one that checks whether the left_array_index is less than the length of left_part and another condition that checks whether right_array_index is less than the length of right_part.\n--hints--\nYour while loop should check if left_array_index is less than the length of left_part and if right_array_index is less than the length of right_part.\n``js\n({ test: () => assert(runPython(\ncond= _Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_conditions()[0]\ncond.is_equivalent(\"left_array_index < len(left_part) and right_array_index < len(right_part)\") or cond.is_equivalent(\"right_array_index < len(right_part) and left_array_index < len(left_part)\")\n`))\n})\n```\nUse the pass keyword in the body of the loop.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_body().has_pass()`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656702f8b4cbd8cbf0a433c6.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d31b8493c96e7010d51ed941002ad811",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656706afd65547d22bee0b68.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656706afd65547d22bee0b68\ntitle: Step 9\nchallengeType: 20\ndashedName: step-9\n--description--\nWithin the while loop, replace pass with an if statement that checks if the element in the left_part is less than the element in the right_part.\nUse the pass keyword in the body of the if statement.\n--hints--\nYou should replace pass keyword with an if statement with this condition: left_part[left_array_index] < right_part[right_array_index]. Add the pass keyword to the body of the if statement.\njs\n({\ntest: () => assert(runPython(`\n_Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_body().is_equivalent(\"if left_part[left_array_index] < right_part[right_array_index]:\\\\n  pass\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\n--fcc-editable-region--\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\npass\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1207,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656706afd65547d22bee0b68.md",
      "source_type": "git_repo"
    },
    "token_count": 282,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d45aa0be7996b2d52ba1fd50405978eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656709e50ed928da35260276.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656709e50ed928da35260276\ntitle: Step 12\nchallengeType: 20\ndashedName: step-12\n--description--\nIn a previous step, you assigned the element in the left_part to the array list because it was smaller. But this will not always be the case. In some comparison cases, the element on the right could be smaller.\nCreate an else clause to execute when the element in left_part is not less than the element in right_part.\nInside the else block, assign right_part[right_array_index] to array[sorted_index].\n--hints--\nYou should have array[sorted_index] = right_part[right_array_index] in the body of your else clause.\njs\n({\ntest: () => assert(runPython(`\n_Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_ifs()[0].find_bodies()[1].find_body()[0].is_equivalent(\"array[sorted_index] = right_part[right_array_index]\")\n`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\n--fcc-editable-region--\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1491,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656709e50ed928da35260276.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1b097c6042bc8134aa6ddcca5ea8f8f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656707e11e671ed54c96f7ec.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656707e11e671ed54c96f7ec\ntitle: Step 10\nchallengeType: 20\ndashedName: step-10\n--description--\nWhen the if condition evaluates to True, it means that the element in the left_part list is smaller than the element it is being compared to in the right_part list.\nIn that case, you can put the element found at left_array_index in left_part within the sorted array.\nInside the if block, remove pass and assign left_part[left_array_index] to array[sorted_index].\n--hints--\nYou should replace pass with array[sorted_index] = left_part[left_array_index] in the body of the if statement.\njs\n({\ntest: () => assert(runPython(`\n_Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_ifs()[0].find_body().is_equivalent(\"array[sorted_index] = left_part[left_array_index]\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\n--fcc-editable-region--\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\npass\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1367,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656707e11e671ed54c96f7ec.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "851c6fc73b03b2f8f48f443b01f1db78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\65670d1ef177e7e2b76d9528.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 65670d1ef177e7e2b76d9528\ntitle: Step 14\nchallengeType: 20\ndashedName: step-14\n--description--\nThe if and else statements you created in the previous steps will assign elements to the sorted array.\nEach element assigned to the sorted array takes up an index in the list. So you have to move to the next index in the sorted array after each assignment.\nBelow the if/else block, but still within the while loop, increment sorted_index by 1.\n--hints--\nYou should increment the current value of sorted_index by 1 after your else clause.\njs\n({ test: () => assert(runPython(`\ncond= _Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_bodies()[0].find_body()[1]\ncond.is_equivalent(\"sorted_index += 1\") or cond.is_equivalent(\"sorted_index = sorted_index + 1\") or cond.is_equivalent(\"sorted_index = 1 + sorted_index\")\n`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\n--fcc-editable-region--\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\65670d1ef177e7e2b76d9528.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94097f454f3686122509118a88d383ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656680b0fc79f2c38a34d90e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656680b0fc79f2c38a34d90e\ntitle: Step 7\nchallengeType: 20\ndashedName: step-7\n--description--\nNow it's time to sort and merge the lists (left_part and right_part) into the original list You can do this by comparing elements on both lists, and merging the smaller element to the main list You are going to do this comparison for all the indexes in left_part and right_part Create three variables: left_array_index, right_array_index, and sorted_index and set their values to 0 These variables will help you keep track of each index during the sorting process --hints--\nYou should have a variable named left_array_index inside your merge_sort function\n``js\n({\ntest: () => assert(runPython(_Node(_code) find_function(\"merge_sort\") has_variable(\"left_array_index\")`))\n})\n```\nThe value of left_array_index should be 0 ``js\n({\ntest: () => assert(runPython(_Node(_code) find_function(\"merge_sort\") find_variable(\"left_array_index\") is_equivalent(\"left_array_index = 0\")`))\n})\n```\nYou should have a variable named right_array_index inside your merge_sort function\njs\n({\ntest: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") has_variable(\"right_array_index\")`))\n})\nThe value of right_array_index should be 0 ``js\n({\ntest: () => assert(runPython(_Node(_code) find_function(\"merge_sort\") find_variable(\"right_array_index\") is_equivalent(\"right_array_index = 0\")`))\n})\n```\nYou should have a variable named sorted_index inside your merge_sort function\njs\n({\ntest: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") has_variable(\"sorted_index\")`))\n})\nThe value of sorted_index should be 0 js\n({\ntest: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") find_variable(\"sorted_index\")",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2179,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656680b0fc79f2c38a34d90e.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "96e1be7e8792bf424ea3a1f4c107b209",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656680b0fc79f2c38a34d90e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "``` You should have a variable named right_array_index inside your merge_sort function js ({ test: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") has_variable(\"right_array_index\")`)) }) The value of right_array_index should be 0 ``js ({ test: () => assert(runPython(_Node(_code) find_function(\"merge_sort\") find_variable(\"right_array_index\") is_equivalent(\"right_array_index = 0\")`)) }) ``` You should have a variable named sorted_index inside your merge_sort function js ({ test: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") has_variable(\"sorted_index\")`)) }) The value of sorted_index should be 0 js ({ test: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") find_variable(\"sorted_index\")is_equivalent(\"sorted_index = 0\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2179,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656680b0fc79f2c38a34d90e.md",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a8f6bebb56317d8c545241b72b0e31c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68529fb26c581f13e901de3a\ntitle: Step 44\nchallengeType: 20\ndashedName: step-44\n--description--\nRight after the invalid_records variable, create a for loop to iterate over it For each invalid record, print Unexpected format '<key>: <val>' at position <index> (where <key>, <val>, and <index> should be replaced by the current key, value and index) Then, set is_invalid to True Feel free to test the validate function with invalid data to see the validation messages With that, the medical validator workshop is complete --hints--\nYou should have a for loop that iterates over invalid_records js\n({ test: () => assert(runPython(`\n_Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_for_loops()[0] find_for_iter() is_equivalent(\"invalid_records\")\n`)) })\nYou should print Unexpected format '<key>: <val>' at position <index> (where <key>, <val>, and <index> should be replaced by the current key, value and index) inside your for loop ``js\n({ test: () => runPython(\nbuilt_in_print = print\nout = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\n_test_data = [\n{'testing': 'stuff'},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'emale',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'V2303',\n},\n{'keep testing': 'stuff'},\n{\n'patient_id': '1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': 'Albuterol',\n'last_visit_id': 'V2303',\n},\n]\nvalidate(_test_data)\nprint = built_in_print\n_first = f\"Invalid format: {_test_data[0]} at position 0 has missing and/or invalid keys \"\n_second = \"Unexpected format 'gender: emale' at position 1 \"\n_third = f\"Invalid format: {_test_data[2]} at position 2 has missing and/or invalid keys",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "8a4cc3f29beda3bdd0cc66e7887e5710",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[ {'testing': 'stuff'}, { 'patient_id': 'P1003', 'age': 29, 'gender': 'emale', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'V2303', }, {'keep testing': 'stuff'}, { 'patient_id': '1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': 'Albuterol', 'last_visit_id': 'V2303', }, ] validate(_test_data) print = built_in_print _first = f\"Invalid format: {_test_data[0]} at position 0 has missing and/or invalid keys \" _second = \"Unexpected format 'gender: emale' at position 1 \" _third = f\"Invalid format: {_test_data[2]} at position 2 has missing and/or invalid keys\"\n_fourth = \"Unexpected format 'patient_id: 1003' at position 3 \"\n_fifth = \"Unexpected format 'medications: Albuterol' at position 3 \"\nassert len(out) >= 5\nassert _first in out\nassert _second in out\nassert _third in out\nassert _fourth in out\nassert _fifth in out\n`) })\n```\nYou should set is_invalid to True inside your new for loop js\n({ test: () => runPython(`\nassert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_for_loops()[0] find_bodies()[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "0952b7f07e984b319411a4b50f948a7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "has missing and/or invalid keys\" _fourth = \"Unexpected format 'patient_id: 1003' at position 3 \" _fifth = \"Unexpected format 'medications: Albuterol' at position 3 \" assert len(out) >= 5 assert _first in out assert _second in out assert _third in out assert _fourth in out assert _fifth in out `) }) ``` You should set is_invalid to True inside your new for loop js ({ test: () => runPython(` assert _Node(_code) find_function(\"validate\") find_for_loops()[0] find_bodies()[0] find_for_loops()[0] find_bodies()[0]has_stmt(\"is_invalid = True\")\n`) })\n--seed--\n--seed-contents--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\nand re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "6d74b1d7789dc22dfa35607f31b728e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list)\nand all([isinstance(i, str) for i in medications]),\n'last_visit_id': isinstance(last_visit_id, str)\nand re fullmatch('v\\d+', last_visit_id, re IGNORECASE)\n}\nreturn [key for key, value in constraints items() if not value]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\ncontinue\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\ncontinue\ninvalid_records = find_invalid_records(**dictionary)\n--fcc-editable-region--\n--fcc-editable-region--\nif is_invalid:\nreturn False\nprint('Valid format",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a507e2a0cf8b3abb5404588b9bc966ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a list or tuple ') return False is_invalid = False key_set = set( ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] ) for index, dictionary in enumerate(data): if not isinstance(dictionary, dict): print(f'Invalid format: expected a dictionary at position {index} ') is_invalid = True continue if set(dictionary keys()) = key_set: print( f'Invalid format: {dictionary} at position {index} has missing and/or invalid keys ' ) is_invalid = True continue invalid_records = find_invalid_records(**dictionary) --fcc-editable-region-- --fcc-editable-region-- if is_invalid: return False print('Valid format')\nreturn True\nvalidate(medical_records)\n```\n--solutions--\n```py\nimport re\nmedical_records = [\n{\n'patient_id': 'P1001',\n'age': 34,\n'gender': 'Female',\n'diagnosis': 'Hypertension',\n'medications': ['Lisinopril'],\n'last_visit_id': 'V2301',\n},\n{\n'patient_id': 'p1002',\n'age': 47,\n'gender': 'male',\n'diagnosis': 'Type 2 Diabetes',\n'medications': ['Metformin', 'Insulin'],\n'last_visit_id': 'v2302',\n},\n{\n'patient_id': 'P1003',\n'age': 29,\n'gender': 'female',\n'diagnosis': 'Asthma',\n'medications': ['Albuterol'],\n'last_visit_id': 'v2303',\n},\n{\n'patient_id': 'p1004',\n'age': 56,\n'gender': 'Male',\n'diagnosis': 'Chronic Back Pain',\n'medications': ['Ibuprofen', 'Physical Therapy'],\n'last_visit_id': 'V2304',\n}\n]\ndef find_invalid_records(\npatient_id, age, gender, diagnosis, medications, last_visit_id\n):\nconstraints = {\n'patient_id': isinstance(patient_id, str)\nand re fullmatch('p\\d+', patient_id, re IGNORECASE),\n'age': isinstance(age, int) and age >= 18,\n'gender': isinstance(gender, str) and gender",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "9938afb3da3254377bf4ada00dc8f31e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'diagnosis': 'Type 2 Diabetes', 'medications': ['Metformin', 'Insulin'], 'last_visit_id': 'v2302', }, { 'patient_id': 'P1003', 'age': 29, 'gender': 'female', 'diagnosis': 'Asthma', 'medications': ['Albuterol'], 'last_visit_id': 'v2303', }, { 'patient_id': 'p1004', 'age': 56, 'gender': 'Male', 'diagnosis': 'Chronic Back Pain', 'medications': ['Ibuprofen', 'Physical Therapy'], 'last_visit_id': 'V2304', } ] def find_invalid_records( patient_id, age, gender, diagnosis, medications, last_visit_id ): constraints = { 'patient_id': isinstance(patient_id, str) and re fullmatch('p\\d+', patient_id, re IGNORECASE), 'age': isinstance(age, int) and age >= 18, 'gender': isinstance(gender, str) and genderlower() in ('male', 'female'),\n'diagnosis': isinstance(diagnosis, str) or diagnosis is None,\n'medications': isinstance(medications, list)\nand all([isinstance(i, str) for i in medications]),\n'last_visit_id': isinstance(last_visit_id, str)\nand re fullmatch('v\\d+', last_visit_id, re IGNORECASE)\n}\nreturn [key for key, value in constraints items() if not value]\ndef validate(data):\nis_sequence = isinstance(data, (list, tuple))\nif not is_sequence:\nprint('Invalid format: expected a list or tuple ')\nreturn False\nis_invalid = False\nkey_set = set(\n['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id']\n)\nfor index, dictionary in enumerate(data):\nif not isinstance(dictionary, dict):\nprint(f'Invalid format: expected a dictionary at position {index} ')\nis_invalid = True\ncontinue\nif set(dictionary keys()) = key_set:\nprint(\nf'Invalid format: {dictionary} at position {index} has missing and/or invalid keys '\n)\nis_invalid = True\ncontinue\ninvalid_records = find_invalid_records(**dictionary)\nfor key in invalid_records:\nprint(\nf\"Unexpected format '{key}: {dictionary get(key)}' at position {index}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "53dd8b335a4f7ad6e544b1a070e18c3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return False is_invalid = False key_set = set( ['patient_id', 'age', 'gender', 'diagnosis', 'medications', 'last_visit_id'] ) for index, dictionary in enumerate(data): if not isinstance(dictionary, dict): print(f'Invalid format: expected a dictionary at position {index} ') is_invalid = True continue if set(dictionary keys()) = key_set: print( f'Invalid format: {dictionary} at position {index} has missing and/or invalid keys ' ) is_invalid = True continue invalid_records = find_invalid_records(**dictionary) for key in invalid_records: print( f\"Unexpected format '{key}: {dictionary get(key)}' at position {index}\"\n)\nis_invalid = True\nif is_invalid:\nreturn False\nprint('Valid format ')\nreturn True\nvalidate(medical_records)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-medical-data-validator\\68529fb26c581f13e901de3a.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "43704829f0d707335f7ff5209449f14f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656710d1e0ec62253426db24.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 656710d1e0ec62253426db24\ntitle: Step 15\nchallengeType: 20\ndashedName: step-15\n--description--\nThe while loop you created compares one element from left_part with another in right_part, then adds the smaller element to the main array list.\nIt will continue this operation until there are no elements left to be compared. But left_part may still have elements left while right_part has none, and vice versa.\nCreate another while loop that runs when left_array_index is less than len(left_part). In the next steps, you'll use it to copy the remaining elements in left_part into the array list.\n--hints--\nYour while loop should have this condition: left_array_index < len(left_part). Don't forget to use the pass keyword in the body of the loop.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").find_whiles()[1].find_conditions()[0].is_equivalent(\"left_array_index < len(left_part)\")`))\n})\nYou should have the pass keyword in the body of your while loop\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").find_whiles()[1].find_bodies()[0].has_pass()`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1941,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\656710d1e0ec62253426db24.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d2c1a8ba878dcc498c6cc8a1bed8ee09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b0a63423f65dd30888df.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569b0a63423f65dd30888df\ntitle: Step 16\nchallengeType: 20\ndashedName: step-16\n--description--\nRemove the pass keyword. For the while loop's code block, assign left_part[left_array_index] to array[sorted_index].\n--hints--\nYou should have array[sorted_index] = left_part[left_array_index] in the body of the loop. Don't forget to remove the pass keyword in the body of the loop.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").find_whiles()[1].find_bodies()[0].find_body()[0].is_equivalent(\"array[sorted_index] = left_part[left_array_index]\")`))\n})\nYou should not have pass in the while loop.\njs\n({\ntest: () => assert.isFalse(runPython(`_Node(_code).find_function(\"merge_sort\").find_whiles()[1].find_bodies()[0].has_pass()`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\nwhile left_array_index < len(left_part):\npass\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1633,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b0a63423f65dd30888df.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5fd33fc2915eef3479b14aaa0aeb8b6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b20f829b7e69d43c232a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569b20f829b7e69d43c232a\ntitle: Step 18\nchallengeType: 20\ndashedName: step-18\n--description--\nThe last thing to do for the while loop is to move to the next index in the sorted array.\nAdd 1 to the value of sorted_index.\n--hints--\nYou should increment the current value of sorted_index by one within the while loop. Note that the increment should be done after assigning the left part element to the sorted array\n``js\n({ test: () => assert(runPython(\ncond = _Node(_code).find_function(\"merge_sort\").find_whiles()[1].find_body()\ncond.is_ordered(\"array[sorted_index] = left_part[left_array_index]\", \"sorted_index += 1\") or cond.is_ordered(\"array[sorted_index] = left_part[left_array_index]\", \"sorted_index = sorted_index + 1\") or cond.is_ordered(\"array[sorted_index] = left_part[left_array_index]\", \"sorted_index = 1 + sorted_index\")\n`))\n})\n```\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b20f829b7e69d43c232a.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1caeb8e1adeb0857038bfed254355ba9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b19d31a09b65b4bc390a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569b19d31a09b65b4bc390a\ntitle: Step 17\nchallengeType: 20\ndashedName: step-17\n--description--\nStill within the while loop, increment the value of left_array_index by 1.\n--hints--\nYou should increment the current value of left_array_index by 1 within the while loop. Note that the increment should be done after assigning the left part element to the sorted array.\n``js\n({ test: () => assert(runPython(\ncond = _Node(_code).find_function(\"merge_sort\").find_whiles()[1].find_body()\ncond.is_ordered(\"array[sorted_index] = left_part[left_array_index]\", \"left_array_index += 1\") or cond.is_ordered(\"array[sorted_index] = left_part[left_array_index]\", \"left_array_index = left_array_index + 1\") or cond.is_ordered(\"array[sorted_index] = left_part[left_array_index]\", \"left_array_index = 1 + left_array_index\")\n`))\n})\n```\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1727,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b19d31a09b65b4bc390a.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f59fd25a1d8b6957cebf80ff9a2f89e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b743630ee592a65a7e2f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569b743630ee592a65a7e2f\ntitle: Step 20\nchallengeType: 20\ndashedName: step-20\n--description--\nBefore testing the merge_sort() function, you need to create a base case that stops the function execution when the length of array is less than or equal to 1.\nThis base case will stop the recursion call. Without it, the merge sort operation would continue to run even when the list has been sorted or has no elements in it.\nRight after the function declaration, create an if statement with this condition: len(array) <= 1. Within the body of the if statement add a return statement to stop the execution of the function.\n--hints--\nYou should create an if statement to check if len(array) <= 1.\njs\n({\ntest: () => assert(runPython(`\n_Node(_code).find_function(\"merge_sort\").find_ifs()[0].find_conditions()[0].is_equivalent(\"len(array) <= 1\")\n`))\n})\nYou should have a return statement in the body of the if statement.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").find_ifs()[0].find_body().has_stmt(\"return\")`))\n})\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\ndef merge_sort(array):\n--fcc-editable-region--\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\nwhile right_array_index < len(right_part):\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2198,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b743630ee592a65a7e2f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "288922b4a18b2e0319ae4ac2357a38cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c05b9166f9d5bb36c09e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569c05b9166f9d5bb36c09e\ntitle: Step 22\nchallengeType: 20\ndashedName: step-22\n--description--\nUse the print() function to print the string 'Unsorted array: '.\n--hints--\nYou should have print('Unsorted array: ')\njs\n({\ntest: () => assert(runPython(`\n_Node(_code).find_ifs()[0].has_call(\"print('Unsorted array: ')\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nif len(array) <= 1:\nreturn\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\nwhile right_array_index < len(right_part):\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\nif name == 'main':\nnumbers = [4, 10, 6, 14, 2, 1, 8, 5]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1551,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c05b9166f9d5bb36c09e.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c25f9820d4083a8342a1e4c704f7b8b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c166d708dcdf7c8fd34c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569c166d708dcdf7c8fd34c\ntitle: Step 23\nchallengeType: 20\ndashedName: step-23\n--description--\nCall the print() function again to print the numbers list. This will print the unsorted list in the console.\n--hints--\nYou should have print(numbers) at the end of your code, after the existing print call.\njs\n({\ntest: () => assert(runPython(`\n_Node(_code).find_ifs()[0].is_ordered(\"print('Unsorted array: ')\", \"print(numbers)\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nif len(array) <= 1:\nreturn\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\nwhile right_array_index < len(right_part):\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\nif name == 'main':\nnumbers = [4, 10, 6, 14, 2, 1, 8, 5]\nprint('Unsorted array: ')\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1697,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c166d708dcdf7c8fd34c.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f29ce5cc623881b5763b86c8e116e719",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c1aeecaf95e25a3e2573.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569c1aeecaf95e25a3e2573\ntitle: Step 24\nchallengeType: 20\ndashedName: step-24\n--description--\nAfter your print() calls, call the merge_sort function and pass in the numbers list as an argument.\n--hints--\nYou should call the merge_sort function passing numbers as the argument after the current print statements.\njs\n({\ntest: () => assert(runPython(`\n_Node(_code).find_ifs()[0].is_ordered(\"numbers = [4, 10, 6, 14, 2, 1, 8, 5]\", \"print('Unsorted array: ')\", \"print(numbers)\", \"merge_sort(numbers)\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nif len(array) <= 1:\nreturn\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\nwhile right_array_index < len(right_part):\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\nif name == 'main':\nnumbers = [4, 10, 6, 14, 2, 1, 8, 5]\nprint('Unsorted array: ')\nprint(numbers)\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c1aeecaf95e25a3e2573.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "38d79f7f1cb9b9662577385ff13eb4fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6577254891048c8f2c19e961.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6577254891048c8f2c19e961\ntitle: Step 6\nchallengeType: 20\ndashedName: step-6\n--description--\nAt the bottom of your function body, call the merge_sort() function again. This time, pass in right_part as the argument to the function call.\n--hints--\nYou should call merge_sort() with the argument right_part at the bottom of your function body.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").is_ordered(\"merge_sort(left_part)\", \"merge_sort(right_part)\")`\n))\n})\n--seed--\n--seed-contents--\n```py\n--fcc-editable-region--\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6577254891048c8f2c19e961.md",
      "source_type": "git_repo"
    },
    "token_count": 192,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8172c20fc505b121ded0d4a40137fa08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6577562501feabdf0984a184.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6577562501feabdf0984a184\ntitle: Step 11\nchallengeType: 20\ndashedName: step-11\n--description--\nAfter assigning the element in left_part to the sorted array, increment left_array_index by 1.\n--hints--\nYou should add 1 to the current value of left_array_index after inserting the element into the sorted array.\n``js\n({ test: () => assert(runPython(\ncond= _Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_ifs()[0].find_body()[1]\ncond.is_equivalent(\"left_array_index += 1\") or cond.is_equivalent(\"left_array_index = left_array_index + 1\") or cond.is_equivalent(\"left_array_index = 1 + left_array_index\")\n`))\n})\n```\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\n--fcc-editable-region--\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6577562501feabdf0984a184.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "84cfe30a66aab021f409765454f75bb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c2cbf6c993ea8cd85682.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569c2cbf6c993ea8cd85682\ntitle: Step 25\nchallengeType: 20\ndashedName: step-25\n--description--\nAt this point, the numbers list has been sorted Call the print function to print string 'Sorted array: ' followed by another print call to print the numbers list With that, the merge sort algorithm is complete --hints--\nYou should have print('Sorted array: ') call followed by another print call to print the numbers list js\n({\ntest: () => assert(runPython(`\n_Node(_code) find_ifs()[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c2cbf6c993ea8cd85682.md",
      "source_type": "git_repo"
    },
    "token_count": 126,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "79d420319066de6bb97518b1e526f368",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c2cbf6c993ea8cd85682.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569c2cbf6c993ea8cd85682\ntitle: Step 25\nchallengeType: 20\ndashedName: step-25\n--description--\nAt this point, the numbers list has been sorted Call the print function to print string 'Sorted array: ' followed by another print call to print the numbers list With that, the merge sort algorithm is complete --hints--\nYou should have print('Sorted array: ') call followed by another print call to print the numbers list js\n({\ntest: () => assert(runPython(`\n_Node(_code) find_ifs()[0]is_ordered(\"merge_sort(numbers)\", \"print('Sorted array: ')\", \"print(numbers)\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nif len(array) <= 1:\nreturn\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\nwhile right_array_index < len(right_part):\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\nif name == 'main':\nnumbers = [4, 10, 6, 14, 2, 1, 8, 5]\nprint('Unsorted array: ')\nprint(numbers)\nmerge_sort(numbers)\n--fcc-editable-region--\n```\n--solutions--\n```py\ndef merge_sort(array):\nif len(array) <= 1:\nreturn\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\nwhile right_array_index < len(right_part):\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nif name == 'main':\nnumbers = [4, 10, 6, 14, 2, 1, 8, 5]\nprint('Unsorted array: ')\nprint(numbers)\nmerge_sort(numbers)\nprint('Sorted array: ')\nprint(numbers)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569c2cbf6c993ea8cd85682.md",
      "source_type": "git_repo"
    },
    "token_count": 716,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "680787902e15970eb4366213d4102802",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b4e0bd29d17d4b53b16c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6569b4e0bd29d17d4b53b16c\ntitle: Step 19\nchallengeType: 20\ndashedName: step-19\n--description--\nNow, you are going to replicate the same while loop logic for right_part Create a while loop that runs when right_array_index is less than len(right_part) Within the while loop, assign right_part[right_array_index] to array[sorted_index] At the end, increment right_array_index and sorted_index by 1 --hints--\nYour while loop should check if right_array_index is less than len(right_part) js\n({\ntest: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") find_whiles()[2] find_conditions()[0] is_equivalent(\"right_array_index < len(right_part)\")`))\n})\nYou should assign right_part[right_array_index] to array[sorted_index] in the body of the loop js\n({\ntest: () => assert(runPython(`_Node(_code) find_function(\"merge_sort\") find_whiles()[2] find_body() has_stmt(\"array[sorted_index] = right_part[right_array_index]\")`))\n})\nYou should increment right_array_index by 1 within the while loop Note that the increment should be done after assigning the right part element to the sorted array ``js\n({ test: () => assert(runPython(\ncond = _Node(_code) find_function(\"merge_sort\") find_whiles()[2] find_body()\ncond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"right_array_index += 1\") or cond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"right_array_index = right_array_index + 1\") or cond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"right_array_index = 1 + right_array_index\")\n`))\n})\n```\nYou should use the increment the current value of sorted_index by 1 within the while loop Note that the increment should be done after assigning the right part element to the sorted array ``js\n({ test: () => assert(runPython(\ncond = _Node(_code) find_function(\"merge_sort\") find_whiles()[2] find_body()\ncond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"sorted_index += 1\") or cond",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3244,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b4e0bd29d17d4b53b16c.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9ff4cb345505b04eeb7f932eb91bec5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b4e0bd29d17d4b53b16c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "cond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"right_array_index = right_array_index + 1\") or cond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"right_array_index = 1 + right_array_index\") `)) }) ``` You should use the increment the current value of sorted_index by 1 within the while loop Note that the increment should be done after assigning the right part element to the sorted array ``js ({ test: () => assert(runPython( cond = _Node(_code) find_function(\"merge_sort\") find_whiles()[2] find_body() cond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"sorted_index += 1\") or condis_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"sorted_index = sorted_index + 1\") or cond is_ordered(\"array[sorted_index] = right_part[right_array_index]\", \"sorted_index = 1 + sorted_index\")\n`))\n})\n```\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3244,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\6569b4e0bd29d17d4b53b16c.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "77bb3871e6c761ec848c055030d9a228",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657823a9f4f372518614c8b7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657823a9f4f372518614c8b7\ntitle: Step 13\nchallengeType: 20\ndashedName: step-13\n--description--\nStill within the else block, increment right_array_index by 1.\n--hints--\nYou should add 1 to the current value of right_array_index after inserting the element into the sorted array.\n``js\n({ test: () => assert(runPython(\ncond= _Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_ifs()[0].find_bodies()[1].find_body()[1]\ncond.is_equivalent(\"right_array_index += 1\") or cond.is_equivalent(\"right_array_index = right_array_index + 1\") or cond.is_equivalent(\"right_array_index = 1 + right_array_index\")\n`))\n})\n```\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\n--fcc-editable-region--\nelse:\narray[sorted_index] = right_part[right_array_index]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1363,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657823a9f4f372518614c8b7.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "aa652bc9be61153af84e362f6ff9be4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657f3a661730891aa64f3568.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657f3a661730891aa64f3568\ntitle: Step 4\nchallengeType: 20\ndashedName: step-4\n--description--\nUse the slice syntax to extract the right half of array and assign it to a variable named right_part.\n--hints--\nYou should have a variable named right_part\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").has_variable(\"right_part\")`))\n})\nYou should use the slice syntax to extract the right half of the array and assign it to the right_part variable.\njs\n({\ntest: () => assert(runPython(`_Node(_code).find_function(\"merge_sort\").find_variable(\"right_part\").is_equivalent(\"right_part = array[middle_point:]\")`))\n})\n--seed--\n--seed-contents--\npy\n--fcc-editable-region--\ndef merge_sort(array):\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657f3a661730891aa64f3568.md",
      "source_type": "git_repo"
    },
    "token_count": 215,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9fdf98c8be10e4186c837aa963a178cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6720fc487ab844522b5aa036.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 6720fc487ab844522b5aa036\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nYou have been provided with a page containing several instrument cards. You are going to add functionality to this static page so you'll be able to filter the instruments depending on their family.\nStart by creating a dropdown menu with the class of select-container.\n--hints--\nYou should have a select element.\njs\nassert.exists(document.querySelector(\"select\"));\nYour select element should have the class select-container.\njs\nassert.equal(document.querySelector(\"select\").getAttribute(\"class\"), \"select-container\");\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\n--fcc-editable-region--\n--fcc-editable-region--\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n}\n.select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n}\n.products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) {\n.products-container {\nflex-direction: row;\n}\n}\n.card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2922,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6720fc487ab844522b5aa036.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f9891e53d7450fb41bad4648c86b8890",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67210c430ddf4889785aca66.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 67210c430ddf4889785aca66\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nBefore starting to add the filter functionality to your page, link your script.js file to the HTML.\n--hints--\nYou should have a script element with the src attribute set to script.js.\njs\nconst script = document.querySelector(\"body>script\");\nassert.match(script?.getAttribute(\"data-src\"), /(?:\\.\\/)?script\\.js/)\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n}\n.select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n}\n.products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) {\n.products-container {\nflex-direction: row;\n}\n}\n.card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2985,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67210c430ddf4889785aca66.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fc406a1d851827f370ed4cba67dd33ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657f59751d5a5c9b069ae0f3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 657f59751d5a5c9b069ae0f3\ntitle: Step 21\nchallengeType: 20\ndashedName: step-21\n--description--\nAs you learned in a previous lecture, you can use the __name__ variable to determine if a Python script is being run as the main program or if it is being imported as a module (code written in another Python file) If the value of __name__ is set to '__main__', it implies that the current script is the main program, and not a module In this project, you'll use the current script as the main program Create an if statement that checks whether the value of __name__ is '__main__' Within the if statement, create a list called numbers, and assign these values to it: [4, 10, 6, 14, 2, 1, 8, 5] --hints--\nYour if statement should check if __name__ has a value of '__main__'\njs\n({\ntest: () => assert(runPython(`\n_Node(_code) find_ifs()[0] find_conditions()[0] is_equivalent(\"__name__ == '__main__'\")\n`))\n})\nYou should have a numbers list with these values: [4, 10, 6, 14, 2, 1, 8, 5]\njs\n({\ntest: () => assert(runPython(`_Node(_code) find_ifs()[0] find_body() find_variable(\"numbers\")",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2344,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657f59751d5a5c9b069ae0f3.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "78fb0aad639495aec60b9a14e2612078",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657f59751d5a5c9b069ae0f3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Within the if statement, create a list called numbers, and assign these values to it: [4, 10, 6, 14, 2, 1, 8, 5] --hints-- Your if statement should check if __name__ has a value of '__main__' js ({ test: () => assert(runPython(` _Node(_code) find_ifs()[0] find_conditions()[0] is_equivalent(\"__name__ == '__main__'\") `)) }) You should have a numbers list with these values: [4, 10, 6, 14, 2, 1, 8, 5] js ({ test: () => assert(runPython(`_Node(_code) find_ifs()[0] find_body() find_variable(\"numbers\")is_equivalent(\"numbers = [4, 10, 6, 14, 2, 1, 8, 5]\")`))\n})\n--seed--\n--seed-contents--\n```py\ndef merge_sort(array):\nif len(array) <= 1:\nreturn\nmiddle_point = len(array) // 2\nleft_part = array[:middle_point]\nright_part = array[middle_point:]\nmerge_sort(left_part)\nmerge_sort(right_part)\nleft_array_index = 0\nright_array_index = 0\nsorted_index = 0\nwhile left_array_index < len(left_part) and right_array_index < len(right_part):\nif left_part[left_array_index] < right_part[right_array_index]:\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nelse:\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\nwhile left_array_index < len(left_part):\narray[sorted_index] = left_part[left_array_index]\nleft_array_index += 1\nsorted_index += 1\nwhile right_array_index < len(right_part):\narray[sorted_index] = right_part[right_array_index]\nright_array_index += 1\nsorted_index += 1\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2344,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-merge-sort\\657f59751d5a5c9b069ae0f3.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9c2dba33c6fddc27f0d343c931962c16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67210ef0bbb7c895a7351b0d.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 67210ef0bbb7c895a7351b0d\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nDeclare an empty array named instrumentsArr.\n--hints--\nYou should have an empty array named instrumentsArr.\njs\nassert.isArray(instrumentsArr);\nassert.isEmpty(instrumentsArr);\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n}\n.select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n}\n.products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) {\n.products-container {\nflex-direction: row;\n}\n}\n.card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67210ef0bbb7c895a7351b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f5a1992f9fc5ad896b426c97d7d7c601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721128fdf008f9fd484486a.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 6721128fdf008f9fd484486a\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nAdd another two objects to your instrumentsArr to represent the remaining woodwinds instruments, clarinet and oboe --hints--\nYou should have { category: \"woodwinds\", instrument: \"Clarinet\", price: 200 } inside your instrumentsArr js\nassert deepInclude(instrumentsArr, { category: \"woodwinds\", instrument: \"Clarinet\", price: 200 });\nYou should have { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 } inside your instrumentsArr js\nassert deepInclude(instrumentsArr, { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 });\nYou should still have { category: \"woodwinds\", instrument: \"Flute\", price: 500 } inside your instrumentsArr js\nassert deepInclude(instrumentsArr, { category: \"woodwinds\", instrument: \"Flute\", price: 500 });\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721128fdf008f9fd484486a.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "35558946b8beeb0b998425b7ff00fd3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721128fdf008f9fd484486a.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "Flute $500 Clarinet $200 Oboe $4000 Trumpet $200 Trombone $300 French Horn $4300 Drum Set $500 Xylophone $3000 Cymbals $200 Marimba $3000 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; }products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n} card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\njs\n--fcc-editable-region--\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 }\n]\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721128fdf008f9fd484486a.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1ca4c45bd80226e75d5b29d0b4fb257f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721089b71655f803ce3bef2.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 6721089b71655f803ce3bef2\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nNow add four options to your dropdown, All, Woodwinds, Brass, and Percussion, in this order For each option, use the lowercase option to specify the id attribute and the value attribute --hints--\nYou should have four option elements in your select element js\nassert lengthOf(document querySelectorAll(\"select>option\"), 4);\nYour first option element should have the text All js\nassert equal(document querySelectorAll(\"select>option\")[0] innerText,\"All\");\nYour All option should have an id attribute and a value attribute with the value all js\nassert equal(document querySelectorAll(\"select>option\")[0] getAttribute(\"id\"),\"all\");\nassert equal(document querySelectorAll(\"select>option\")[0] getAttribute(\"value\"),\"all\");\nYour second option element should have the text Woodwinds js\nassert equal(document querySelectorAll(\"select>option\")[1] innerText,\"Woodwinds\");\nYour Woodwinds option should have an id attribute and a value attribute with the value woodwinds js\nassert equal(document querySelectorAll(\"select>option\")[1] getAttribute(\"id\"),\"woodwinds\");\nassert equal(document querySelectorAll(\"select>option\")[1] getAttribute(\"value\"),\"woodwinds\");\nYour third option element should have the text Brass js\nassert equal(document querySelectorAll(\"select>option\")[2] innerText,\"Brass\");\nYour Brass option should have an id attribute and a value attribute with the value brass js\nassert equal(document querySelectorAll(\"select>option\")[2] getAttribute(\"id\"),\"brass\");\nassert equal(document querySelectorAll(\"select>option\")[2] getAttribute(\"value\"),\"brass\");\nYour fourth option element should have the text Percussion js\nassert equal(document querySelectorAll(\"select>option\")[3] innerText,\"Percussion\");\nYour Percussion option should have an id attribute and a value attribute with the value percussion js\nassert equal(document querySelectorAll(\"select>option\")[3] getAttribute(\"id\"),\"percussion\");\nassert equal(document querySelectorAll(\"select>option\")[3]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721089b71655f803ce3bef2.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ad6f2ddba6220f460dca37b5da624b4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721089b71655f803ce3bef2.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "third option element should have the text Brass js assert equal(document querySelectorAll(\"select>option\")[2] innerText,\"Brass\"); Your Brass option should have an id attribute and a value attribute with the value brass js assert equal(document querySelectorAll(\"select>option\")[2] getAttribute(\"id\"),\"brass\"); assert equal(document querySelectorAll(\"select>option\")[2] getAttribute(\"value\"),\"brass\"); Your fourth option element should have the text Percussion js assert equal(document querySelectorAll(\"select>option\")[3] innerText,\"Percussion\"); Your Percussion option should have an id attribute and a value attribute with the value percussion js assert equal(document querySelectorAll(\"select>option\")[3] getAttribute(\"id\"),\"percussion\"); assert equal(document querySelectorAll(\"select>option\")[3]getAttribute(\"value\"),\"percussion\");\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\n--fcc-editable-region--\n--fcc-editable-region--\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721089b71655f803ce3bef2.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b9180ee945df27a9430ab965079c4de3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721089b71655f803ce3bef2.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721089b71655f803ce3bef2.md",
      "source_type": "git_repo"
    },
    "token_count": 233,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "73039e637ecfa1f1414ded8e101fd254",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672110bda073669bcc2302e6.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 672110bda073669bcc2302e6\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\ninstrumentsArr is going to hold an object for each of your instrument cards Each object will have the keys category, instrument, and price Add a first object representing the flute to your array For the values use woodwinds, Flute, and 500, respectively --hints--\nYour instrumentsArr array should have one element js\nassert lengthOf(instrumentsArr, 1);\nYou should have one object inside instrumentsArr js\nassert isObject(instrumentsArr[0]);\nThe object inside instrumentsArr should have a category key with the value woodwinds js\nassert equal(instrumentsArr[0] category, \"woodwinds\");\nThe object inside instrumentsArr should have an instrument key with the value Flute js\nassert equal(instrumentsArr[0] instrument, \"Flute\");\nThe object inside instrumentsArr should have a price key with the value 500 js\nassert strictEqual(instrumentsArr[0] price, 500);\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3679,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672110bda073669bcc2302e6.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f5192ddc1d3f29ac71d69c5423aa597d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672110bda073669bcc2302e6.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "Flute $500 Clarinet $200 Oboe $4000 Trumpet $200 Trombone $300 French Horn $4300 Drum Set $500 Xylophone $3000 Cymbals $200 Marimba $3000 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; }products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n} card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\n--fcc-editable-region--\nconst instrumentsArr = [\n]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3679,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672110bda073669bcc2302e6.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4a786e60015eba86785f5119e604b20c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721134b2844faa0be27c791.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 6721134b2844faa0be27c791\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nThe remaining instruments have been added for you to the instrumentsArr array Now, declare two variables selectContainer and productsContainer and assign them your HTML dropdown and the element with the class products-container, respectively --hints--\nYou should have a selectContainer variable js\nassert exists(selectContainer);\nYour selectContainer variable should have the value of your select element js\nassert strictEqual(selectContainer, document querySelector(\"select\"));\nYou should have a productsContainer variable js\nassert exists(productsContainer);\nYour productsContainer variable should have the value of your products-container element js\nassert strictEqual(productsContainer, document querySelector(\" products-container\"));\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4177,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721134b2844faa0be27c791.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cae9b2d04f82eec72c2b710157b6752e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721134b2844faa0be27c791.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4177,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721134b2844faa0be27c791.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3b685b7986ce1ad66275259c780ad8d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672134eef863b05aaee80c75.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 672134eef863b05aaee80c75\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nTo implement the filter functionality, you'll need a function Declare an empty function named instrumentCards that takes a single parameter --hints--\nYou should have a function named instrumentCards js\nassert isFunction(instrumentCards);\nYour instrumentCards function should take a single parameter js\nassert lengthOf(instrumentCards, 1);\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3968,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672134eef863b05aaee80c75.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cb8288afd165dc8068eaaa0385262993",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672134eef863b05aaee80c75.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document querySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\n--fcc-editable-region--\n--fcc-editable-region--\nselectContainer addEventListener(\"change\", () => {\nconsole log(selectContainer value);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3968,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672134eef863b05aaee80c75.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "38ffb42429fdc6d4e84d48b6c97c5259",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721145f25a6b9a1a5d19461.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 6721145f25a6b9a1a5d19461\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nAs you learned in the previous lesson videos, the change event is triggered when the user modifies the value of certain input elements You want to be able to update your page any time that a new value is picked from the dropdown menu For that, add an event listener for the change event to selectContainer For now, inside the callback, log the string this is a test to the console Then, select different options from your dropdown menu and check the console to test that the event listener works correctly --hints--\nYou should add an event listener for the change event to selectContainer and log the string this is a test inside the callback passed to the method js\nlet flag = false;\nconst temp = console log;\nconsole log = (arg) => {\nif (arg === \"this is a test\") flag = true;\n}\ntry {\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(flag);\n} finally {\nconsole log = temp;\n}\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4438,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721145f25a6b9a1a5d19461.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "93fae105756580506d594a1e86248545",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721145f25a6b9a1a5d19461.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "Flute $500 Clarinet $200 Oboe $4000 Trumpet $200 Trombone $300 French Horn $4300 Drum Set $500 Xylophone $3000 Cymbals $200 Marimba $3000 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; }products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n} card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4438,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721145f25a6b9a1a5d19461.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e86646a5f827bd9943793276fdd4a6a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721145f25a6b9a1a5d19461.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "instrument: \"Clarinet\", price: 200 }, { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 }, { category: \"brass\", instrument: \"Trumpet\", price: 200 }, { category: \"brass\", instrument: \"Trombone\", price: 300 }, { category: \"brass\", instrument: \"French Horn\", price: 4300 }, { category: \"percussion\", instrument: \"Drum Set\", price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 } ] const selectContainer = documentquerySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4438,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\6721145f25a6b9a1a5d19461.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ef5144460084efdd21161b0e8af642e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67211aa4a8959cc122dfa0bb.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 67211aa4a8959cc122dfa0bb\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nModify your console log call to log the selected value from the dropdown --hints--\nYou should log the selected value from the dropdown when a change event is triggered on selectContainer js\nlet flag = false;\nconst temp = console log;\nconsole log = (arg) => {\nif (arg === selectContainer value) flag = true;\n}\ntry {\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(flag);\n} finally {\nconsole log = temp;\n}\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67211aa4a8959cc122dfa0bb.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "50bc7a193b90a7a5297e1d3e6dd27d31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67211aa4a8959cc122dfa0bb.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document querySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\n--fcc-editable-region--\nselectContainer addEventListener(\"change\", () => {\nconsole log(\"this is a test\");\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67211aa4a8959cc122dfa0bb.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b7d0088c8cfd6f6642cfcc368dd8a599",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 67213641373a23696b74424b\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nWithin your new function, you need to filter the instruments depending on the selected category Filter out items from instrumentsArr and make your function return an array containing the instrument objects with the same category of instrumentCategory If instrumentCategory is equal to all, return the whole instrumentsArr array Then, remove the console log from the callback of your event listener and log the result of calling instrumentCards with the selected option from the dropdown menu as argument so you can test your function selecting different category options --hints--\ninstrumentCards(\"all\") should return instrumentsArr js\nassert sameDeepMembers(instrumentCards(\"all\"), instrumentsArr);\ninstrumentCards(\"woodwinds\") should return [{ category: \"woodwinds\", instrument: \"Flute\", price: 500 }, { category: \"woodwinds\", instrument: \"Clarinet\", price: 200 }, { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 }] js\nassert sameDeepMembers(instrumentCards(\"woodwinds\"), [{ category: \"woodwinds\", instrument: \"Flute\", price: 500 }, { category: \"woodwinds\", instrument: \"Clarinet\", price: 200 }, { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 }]);\ninstrumentCards(\"brass\") should return [{ category: \"brass\", instrument: \"Trumpet\", price: 200 }, { category: \"brass\", instrument: \"Trombone\", price: 300 }, { category: \"brass\", instrument: \"French Horn\", price: 4300 }] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "65b84879822bb7cd76aff6a573933e0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "price: 500 }, { category: \"woodwinds\", instrument: \"Clarinet\", price: 200 }, { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 }] js assert sameDeepMembers(instrumentCards(\"woodwinds\"), [{ category: \"woodwinds\", instrument: \"Flute\", price: 500 }, { category: \"woodwinds\", instrument: \"Clarinet\", price: 200 }, { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 }]); instrumentCards(\"brass\") should return [{ category: \"brass\", instrument: \"Trumpet\", price: 200 }, { category: \"brass\", instrument: \"Trombone\", price: 300 }, { category: \"brass\", instrument: \"French Horn\", price: 4300 }] js assertsameDeepMembers(instrumentCards(\"brass\"), [{ category: \"brass\", instrument: \"Trumpet\", price: 200 }, { category: \"brass\", instrument: \"Trombone\", price: 300 }, { category: \"brass\", instrument: \"French Horn\", price: 4300 }]);\ninstrumentCards(\"percussion\") should return [{ category: \"percussion\", instrument: \"Drum Set\", price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 }] js\nassert sameDeepMembers(instrumentCards(\"percussion\"), [{ category: \"percussion\", instrument: \"Drum Set\", price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 }]);\nWhen you change the selected category from the dropdown menu, you should log the result of instrumentCards(selectContainer value) to the console js\nlet flag = false;\nconst temp = console log;\nconsole log = (arg) => {\nif (arg === instrumentCards(selectContainer value)) flag = true;\n}\ntry {\nselectContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "128f9c0ea1255bcb3536b0af67078381",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 }]); When you change the selected category from the dropdown menu, you should log the result of instrumentCards(selectContainer value) to the console js let flag = false; const temp = console log; console log = (arg) => { if (arg === instrumentCards(selectContainer value)) flag = true; } try { selectContainerdispatchEvent(new Event(\"change\"));\nassert isTrue(flag);\n} finally {\nconsole log = temp;\n}\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "e3d4319f2f001519307b694e28355bd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document querySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\n--fcc-editable-region--\nfunction instrumentCards(instrumentCategory) {\n}\nselectContainer addEventListener(\"change\", () => {\nconsole log(selectContainer value);\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6389,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213641373a23696b74424b.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "72b6b097a4ac2356acc316e3de9f4392",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 67213ce0a2ba1278a38df3a5\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nRemove your console log from the event listener and set the inner HTML of productsContainer to the result of calling instrumentCards with the selected category option Then, select different options from your dropdown and see the result in the preview window --before-all--\n```js\nconst allInstrmnts = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nfunction getCardsArr(family) {\nconst instrmnts =\nfamily === \"all\" allInstrmnts\n: allInstrmnts filter(\n({ category }) => category === family\n);\nreturn instrmnts map(({ instrument, price }) => {\nreturn <div class=\"card\">\n<h2>${instrument}</h2>\n<p>$${price}</p>\n</div>;\n})\n}\n```\n--hints--\nWhen the dropdown menu option is changed you should set the inner HTML of productsContainer to the result of the instrumentCards function called with the selected option as argument ```js\nlet cardsArr = getCardsArr(\"all\");\nconst testDiv = document createElement(\"div\");\ntestDiv classList add(\"products-container\");\ntestDiv innerHTML = cardsArr;\nselectContainer value = \"all\";\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\ncardsArr = getCardsArr(\"woodwinds\");\ntestDiv innerHTML = cardsArr;\nselectContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8041c036265a220f1df0d2163c6a633d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "=> { return <div class=\"card\"> <h2>${instrument}</h2> <p>$${price}</p> </div>; }) } ``` --hints-- When the dropdown menu option is changed you should set the inner HTML of productsContainer to the result of the instrumentCards function called with the selected option as argument ```js let cardsArr = getCardsArr(\"all\"); const testDiv = document createElement(\"div\"); testDiv classList add(\"products-container\"); testDiv innerHTML = cardsArr; selectContainer value = \"all\"; selectContainer dispatchEvent(new Event(\"change\")); assert isTrue(productsContainer isEqualNode(testDiv)); cardsArr = getCardsArr(\"woodwinds\"); testDiv innerHTML = cardsArr; selectContainervalue = \"woodwinds\";\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\ncardsArr = getCardsArr(\"brass\");\ntestDiv innerHTML = cardsArr;\nselectContainer value = \"brass\";\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\ncardsArr = getCardsArr(\"percussion\");\ntestDiv innerHTML = cardsArr;\nselectContainer value = \"percussion\";\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\n```\nYou should remove console log(instrumentCards(selectContainer value)) from your event listener's callback js\nlet flag = false;\nconst temp = console log;\nconsole log = (arg) => {\nif (arg === instrumentCards(selectContainer value)) flag = true;\n}\ntry {\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isFalse(flag);\n} finally {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "1da5c29bfdc4c87cc67a274d18fbce87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "cardsArr; selectContainer value = \"brass\"; selectContainer dispatchEvent(new Event(\"change\")); assert isTrue(productsContainer isEqualNode(testDiv)); cardsArr = getCardsArr(\"percussion\"); testDiv innerHTML = cardsArr; selectContainer value = \"percussion\"; selectContainer dispatchEvent(new Event(\"change\")); assert isTrue(productsContainer isEqualNode(testDiv)); ``` You should remove console log(instrumentCards(selectContainer value)) from your event listener's callback js let flag = false; const temp = console log; console log = (arg) => { if (arg === instrumentCards(selectContainer value)) flag = true; } try { selectContainer dispatchEvent(new Event(\"change\")); assert isFalse(flag); } finally { consolelog = temp;\n}\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "16fdc0f96212d8591867242bdc73f39c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document querySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\nfunction instrumentCards(instrumentCategory) {\nconst instruments =\ninstrumentCategory === \"all\" instrumentsArr\n: instrumentsArr filter(\n({ category }) => category === instrumentCategory\n);\nreturn instruments",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "7ad2dffab260c7da2d1107b32a4c2edb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "category: \"brass\", instrument: \"French Horn\", price: 4300 }, { category: \"percussion\", instrument: \"Drum Set\", price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 } ] const selectContainer = document querySelector(\"select\"); const productsContainer = document querySelector(\" products-container\"); function instrumentCards(instrumentCategory) { const instruments = instrumentCategory === \"all\" instrumentsArr : instrumentsArr filter( ({ category }) => category === instrumentCategory ); return instrumentsmap(({ instrument, price }) => {\nreturn <div class=\"card\">\n<h2>${instrument}</h2>\n<p>$${price}</p>\n</div>;\n})\n}\n--fcc-editable-region--\nselectContainer addEventListener(\"change\", () => {\nconsole log(instrumentCards(selectContainer value));\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\67213ce0a2ba1278a38df3a5.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "cfd584d14379397770847b09ec4ef02d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 672137c47fa88d6f753f6d0b\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nCurrently, your instrumentCards function returns an array with instrument objects, so you'll need another couple of steps before you can display your instrument cards on the page Modify your function so that it returns an array of strings containing the HTML code to display the instrument cards, each string corresponding to an object in the instruments array The strings should have this format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div>\n--before-all--\n```js\nconst allInstrmnts = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nfunction getInstrumentsArr(instrumentCategory) {\nconst instruments =\ninstrumentCategory === \"all\" JSON parse(JSON stringify(allInstrmnts))\n: allInstrmnts filter(\n({ category }) => category === instrumentCategory\n);\nreturn instruments\n}\nconst regex = /<\\sdiv\\s+class=('|\")card\\1\\s>\\s<\\sh2\\s>[\\s\\w]+ <\\/\\sh2\\s>\\s<\\sp\\s>\\$\\d+ <\\/\\sp\\s>\\s<\\/\\sdiv\\s*>/;\n```\n--hints--\ninstrumentCards(\"all\") should return an array of strings representing instrument cards, each with the format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div>",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "de82a8b2e3fd712be4810dabbc0e8316",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "}, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 } ] function getInstrumentsArr(instrumentCategory) { const instruments = instrumentCategory === \"all\" JSON parse(JSON stringify(allInstrmnts)) : allInstrmnts filter( ({ category }) => category === instrumentCategory ); return instruments } const regex = /<\\sdiv\\s+class=('|\")card\\1\\s>\\s<\\sh2\\s>[\\s\\w]+ <\\/\\sh2\\s>\\s<\\sp\\s>\\$\\d+ <\\/\\sp\\s>\\s<\\/\\sdiv\\s*>/; ``` --hints-- instrumentCards(\"all\") should return an array of strings representing instrument cards, each with the format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div>js\nconst all = instrumentCards(\"all\");\nassert isNotEmpty(all);\nall forEach(i => {\nassert match(i, regex)\n})\ninstrumentCards(\"woodwinds\") should return an array of strings representing instrument cards, each with the format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div> js\nconst woodwinds = instrumentCards(\"woodwinds\");\nassert isNotEmpty(woodwinds);\nwoodwinds forEach(i => {\nassert match(i, regex)\n})\ninstrumentCards(\"brass\") should return an array of strings representing instrument cards, each with the format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div> js\nconst brass = instrumentCards(\"brass\");\nassert isNotEmpty(brass);\nbrass forEach(i => {\nassert match(i, regex)\n})\ninstrumentCards(\"percussion\") should return an array of strings representing instrument cards, each with the format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div> js\nconst percussion = instrumentCards(\"percussion\");\nassert isNotEmpty(percussion);\npercussion forEach(i => {\nassert match(i, regex)\n})\ninstrumentCards(\"all\") should return an array with ten strings representing the instrument cards for all the instruments on your page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "da06cd7053de8407b1c80c9a3f0ed27d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "of strings representing instrument cards, each with the format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div> js const brass = instrumentCards(\"brass\"); assert isNotEmpty(brass); brass forEach(i => { assert match(i, regex) }) instrumentCards(\"percussion\") should return an array of strings representing instrument cards, each with the format <div class=\"card\"><h2>[instrument]</h2><p>$[price]</p></div> js const percussion = instrumentCards(\"percussion\"); assert isNotEmpty(percussion); percussion forEach(i => { assert match(i, regex) }) instrumentCards(\"all\") should return an array with ten strings representing the instrument cards for all the instruments on your pagejs\nconst instrArr = getInstrumentsArr(\"all\");\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = instrumentCards(\"all\") join(\"\");\nconst cards = testDiv querySelectorAll('div[class=\"card\"]');\nassert lengthOf(cards, 10);\nArray from(cards) forEach(card => {\nconst h2 = card firstElementChild;\nassert equal(h2 tagName, \"H2\");\nconst instrObjIndex = instrArr findIndex(el => el instrument === h2 innerText);\nconst p = card lastElementChild;\nassert equal(p tagName, \"P\");\nassert equal(p previousElementSibling, h2);\nassert equal(p innerText, `$${instrArr[instrObjIndex] price}`);\ninstrArr splice(instrObjIndex, 1);\n})\nassert isEmpty(instrArr);\ninstrumentCards(\"woodwinds\") should return an array with three strings representing the instrument cards for the woodwind instruments on your page js\nconst instrArr = getInstrumentsArr(\"woodwinds\");\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = instrumentCards(\"woodwinds\") join(\"\");\nconst cards = testDiv querySelectorAll('div[class=\"card\"]');\nassert lengthOf(cards, 3);\nArray from(cards) forEach(card => {\nconst h2 = card firstElementChild;\nassert equal(h2 tagName, \"H2\");\nconst instrObjIndex = instrArr findIndex(el => el instrument === h2 innerText);\nconst p = card lastElementChild;\nassert equal(p tagName, \"P\");\nassert equal(p previousElementSibling, h2);\nassert equal(p innerText, `$${instrArr[instrObjIndex] price}`);\ninstrArr splice(instrObjIndex, 1);\n})\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "d6e915bc5fabe8498551f8d4d760e296",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "woodwind instruments on your page js const instrArr = getInstrumentsArr(\"woodwinds\"); const testDiv = document createElement(\"div\"); testDiv innerHTML = instrumentCards(\"woodwinds\") join(\"\"); const cards = testDiv querySelectorAll('div[class=\"card\"]'); assert lengthOf(cards, 3); Array from(cards) forEach(card => { const h2 = card firstElementChild; assert equal(h2 tagName, \"H2\"); const instrObjIndex = instrArr findIndex(el => el instrument === h2 innerText); const p = card lastElementChild; assert equal(p tagName, \"P\"); assert equal(p previousElementSibling, h2); assert equal(p innerText, `$${instrArr[instrObjIndex] price}`); instrArr splice(instrObjIndex, 1); }) assertisEmpty(instrArr);\ninstrumentCards(\"brass\") should return an array with three strings representing the instrument cards for the brass instruments on your page js\nconst instrArr = getInstrumentsArr(\"brass\");\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = instrumentCards(\"brass\") join(\"\");\nconst cards = testDiv querySelectorAll('div[class=\"card\"]');\nassert lengthOf(cards, 3);\nArray from(cards) forEach(card => {\nconst h2 = card firstElementChild;\nassert equal(h2 tagName, \"H2\");\nconst instrObjIndex = instrArr findIndex(el => el instrument === h2 innerText);\nconst p = card lastElementChild;\nassert equal(p tagName, \"P\");\nassert equal(p previousElementSibling, h2);\nassert equal(p innerText, `$${instrArr[instrObjIndex] price}`);\ninstrArr splice(instrObjIndex, 1);\n})\nassert isEmpty(instrArr);\ninstrumentCards(\"percussion\") should return an array with four strings representing the instrument cards for the percussion instruments on your page js\nconst instrArr = getInstrumentsArr(\"percussion\");\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = instrumentCards(\"percussion\") join(\"\");\nconst cards = testDiv querySelectorAll('div[class=\"card\"]');\nassert lengthOf(cards, 4);\nArray from(cards) forEach(card => {\nconst h2 = card firstElementChild;\nassert equal(h2 tagName, \"H2\");\nconst instrObjIndex = instrArr findIndex(el => el instrument === h2 innerText);\nconst p = card lastElementChild;\nassert equal(p tagName, \"P\");\nassert equal(p",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "19185a7614faf1aebc5d19b1908d2565",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "return an array with four strings representing the instrument cards for the percussion instruments on your page js const instrArr = getInstrumentsArr(\"percussion\"); const testDiv = document createElement(\"div\"); testDiv innerHTML = instrumentCards(\"percussion\") join(\"\"); const cards = testDiv querySelectorAll('div[class=\"card\"]'); assert lengthOf(cards, 4); Array from(cards) forEach(card => { const h2 = card firstElementChild; assert equal(h2 tagName, \"H2\"); const instrObjIndex = instrArr findIndex(el => el instrument === h2 innerText); const p = card lastElementChild; assert equal(p tagName, \"P\"); assert equal(ppreviousElementSibling, h2);\nassert equal(p innerText, `$${instrArr[instrObjIndex] price}`);\ninstrArr splice(instrObjIndex, 1);\n})\nassert isEmpty(instrArr);\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "e1c4ca43bcfe99190347bf54a73cc541",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document querySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\n--fcc-editable-region--\nfunction instrumentCards(instrumentCategory) {\nconst instruments =\ninstrumentCategory === \"all\" instrumentsArr\n: instrumentsArr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "f6ccf121f6a2b6ccd25100b43aa5415d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "}, { category: \"brass\", instrument: \"Trombone\", price: 300 }, { category: \"brass\", instrument: \"French Horn\", price: 4300 }, { category: \"percussion\", instrument: \"Drum Set\", price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 } ] const selectContainer = document querySelector(\"select\"); const productsContainer = document querySelector(\" products-container\"); --fcc-editable-region-- function instrumentCards(instrumentCategory) { const instruments = instrumentCategory === \"all\" instrumentsArr : instrumentsArrfilter(\n({ category }) => category === instrumentCategory\n);\nreturn instruments\n}\n--fcc-editable-region--\nselectContainer addEventListener(\"change\", () => {\nconsole log(instrumentCards(selectContainer value));\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672137c47fa88d6f753f6d0b.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "cf22338f8e9f43d7328eb7202915ad6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 67471d60ce8e6268fe9e12f6\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop you will create a music player app capable of playing, pausing, and skipping songs from a playlist The HTML and CSS of this project have been provided for you, so you can focus on the JavaScript Start by accessing the #playlist-songs, #play, and #pause elements and assign them to the variables playlistSongs, playButton and pauseButton, respectively --hints--\nYou should have a variable called playlistSongs js\nassert isDefined(playlistSongs);\nYou should assign the #playlist-songs element to the variable playlistSongs js\nassert equal(playlistSongs, document getElementById('playlist-songs'));\nYou should have a variable called playButton js\nassert isDefined(playButton);\nYou should assign the #play element to the variable playButton js\nassert equal(playButton, document getElementById('play'));\nYou should have a variable called pauseButton js\nassert isDefined(pauseButton);\nYou should assign the #pause element to the variable pauseButton js\nassert equal(pauseButton, document getElementById('pause'));\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "094d9a1f401319923dcb98f523a62d38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "You should assign the #pause element to the variable pauseButton js assert equal(pauseButton, document getElementById('pause')); --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop Me Can't Even Slow Me DownQuincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "e1d9802031c595a35bfad4f3517c6cd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "bc01d3a997cf706f227677884055d33a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } #player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } #player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "8a320ce37adc6fbbb0701708295f46b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } #playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "fdc923612c3488b4f0968734301543aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "e31ac5619883c8ef3730b46c4852a97d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14414,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67471d60ce8e6268fe9e12f6.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "a6d5aecd4dac38be58376f1dc7641486",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "id: 672146dde7104896adb274ae\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nWhen you select a category from the dropdown menu, the instrument cards are correctly filtered and displayed on the page, but you have to get rid of those commas in between the cards Do it by joining the array returned by instrumentCards With that, your music instrument filter is complete --before-all--\n```js\nconst allInstrmnts = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nfunction getCardsArr(family) {\nconst instrmnts =\nfamily === \"all\" allInstrmnts\n: allInstrmnts filter(\n({ category }) => category === family\n);\nreturn instrmnts map(({ instrument, price }) => {\nreturn <div class=\"card\">\n<h2>${instrument}</h2>\n<p>$${price}</p>\n</div>;\n}) join(\"\");\n}\n```\n--hints--\nYou should join the array returned by the instrumentCards function Do not modify your event listener ```js\nlet cardsArr = getCardsArr(\"all\");\nconst testDiv = document createElement(\"div\");\ntestDiv classList add(\"products-container\");\ntestDiv innerHTML = cardsArr;\nselectContainer value = \"all\";\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\ncardsArr = getCardsArr(\"woodwinds\");\ntestDiv innerHTML = cardsArr;\nselectContainer value = \"woodwinds\";\nselectContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "9b585324e42de4a87a3b6008f49294fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "family ); return instrmnts map(({ instrument, price }) => { return <div class=\"card\"> <h2>${instrument}</h2> <p>$${price}</p> </div>; }) join(\"\"); } ``` --hints-- You should join the array returned by the instrumentCards function Do not modify your event listener ```js let cardsArr = getCardsArr(\"all\"); const testDiv = document createElement(\"div\"); testDiv classList add(\"products-container\"); testDiv innerHTML = cardsArr; selectContainer value = \"all\"; selectContainer dispatchEvent(new Event(\"change\")); assert isTrue(productsContainer isEqualNode(testDiv)); cardsArr = getCardsArr(\"woodwinds\"); testDiv innerHTML = cardsArr; selectContainer value = \"woodwinds\"; selectContainerdispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\ncardsArr = getCardsArr(\"brass\");\ntestDiv innerHTML = cardsArr;\nselectContainer value = \"brass\";\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\ncardsArr = getCardsArr(\"percussion\");\ntestDiv innerHTML = cardsArr;\nselectContainer value = \"percussion\";\nselectContainer dispatchEvent(new Event(\"change\"));\nassert isTrue(productsContainer isEqualNode(testDiv));\n```\n--seed--\n--seed-contents--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "f3b60c0acd4c3ca950dbcd4617b48ebb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "Event(\"change\")); assert isTrue(productsContainer isEqualNode(testDiv)); ``` --seed-- --seed-contents-- ```html Music Instruments product page Student Instruments All Woodwinds Brass Percussion Flute $500 Clarinet $200 Oboe $4000 Trumpet $200 Trombone $300 French Horn $4300 Drum Set $500 Xylophone $3000 Cymbals $200 Marimba $3000 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; }select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n} products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "d5efe80bd29b5b6581dff4c5e9fe757c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": ", ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; }select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; } products-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; justify-content: center; gap: 20px; } @media (min-width: 760px) { products-container { flex-direction: row; } }card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document querySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\n--fcc-editable-region--\nfunction instrumentCards(instrumentCategory) {\nconst instruments =\ninstrumentCategory === \"all\" instrumentsArr\n: instrumentsArr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "35df37f12a9f5def2b2149b128769360",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "}, { category: \"brass\", instrument: \"Trombone\", price: 300 }, { category: \"brass\", instrument: \"French Horn\", price: 4300 }, { category: \"percussion\", instrument: \"Drum Set\", price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 } ] const selectContainer = document querySelector(\"select\"); const productsContainer = document querySelector(\" products-container\"); --fcc-editable-region-- function instrumentCards(instrumentCategory) { const instruments = instrumentCategory === \"all\" instrumentsArr : instrumentsArrfilter(\n({ category }) => category === instrumentCategory\n);\nreturn instruments map(({ instrument, price }) => {\nreturn <div class=\"card\">\n<h2>${instrument}</h2>\n<p>$${price}</p>\n</div>;\n})\n}\n--fcc-editable-region--\nselectContainer addEventListener(\"change\", () => {\nproductsContainer innerHTML = instrumentCards(selectContainer value);\n});\n```\n--solutions--\n```html\nMusic Instruments product page\nStudent Instruments\nAll\nWoodwinds\nBrass\nPercussion\nFlute\n$500\nClarinet\n$200\nOboe\n$4000\nTrumpet\n$200\nTrombone\n$300\nFrench Horn\n$4300\nDrum Set\n$500\nXylophone\n$3000\nCymbals\n$200\nMarimba\n$3000\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #0a0a23;\n--white: #ffffff;\n--yellow: #f1be32;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1 {\ntext-align: center;\nmargin-top: 20px;\n} select-container {\ndisplay: block;\nmargin: 25px auto;\npadding: 8px;\nborder: 4px solid var(--white);\nborder-radius: 4px;\nwidth: 200px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "1d6590c9385fbb883168bb1655323d6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "Flute $500 Clarinet $200 Oboe $4000 Trumpet $200 Trombone $300 French Horn $4300 Drum Set $500 Xylophone $3000 Cymbals $200 Marimba $3000 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #0a0a23; --white: #ffffff; --yellow: #f1be32; } body { background-color: var(--dark-grey); color: var(--white); } h1 { text-align: center; margin-top: 20px; } select-container { display: block; margin: 25px auto; padding: 8px; border: 4px solid var(--white); border-radius: 4px; width: 200px; }products-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\njustify-content: center;\ngap: 20px;\n}\n@media (min-width: 760px) { products-container {\nflex-direction: row;\n}\n} card {\nbackground-color: var(--white);\ncolor: var(--dark-grey);\nborder: 4px solid var(--yellow);\nborder-radius: 5px;\npadding: 10px;\nwidth: 200px;\n}\n```\n```js\nconst instrumentsArr = [\n{ category: \"woodwinds\", instrument: \"Flute\", price: 500 },\n{ category: \"woodwinds\", instrument: \"Clarinet\", price: 200 },\n{ category: \"woodwinds\", instrument: \"Oboe\", price: 4000 },\n{ category: \"brass\", instrument: \"Trumpet\", price: 200 },\n{ category: \"brass\", instrument: \"Trombone\", price: 300 },\n{ category: \"brass\", instrument: \"French Horn\", price: 4300 },\n{ category: \"percussion\", instrument: \"Drum Set\", price: 500 },\n{ category: \"percussion\", instrument: \"Xylophone\", price: 3000 },\n{ category: \"percussion\", instrument: \"Cymbals\", price: 200 },\n{ category: \"percussion\", instrument: \"Marimba\", price: 3000 }\n]\nconst selectContainer = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "1d89e413c5eb2c29fc19ca876be7d4d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
    "source_type": "git_repo",
    "title": "Music Instruments product page",
    "content": "instrument: \"Clarinet\", price: 200 }, { category: \"woodwinds\", instrument: \"Oboe\", price: 4000 }, { category: \"brass\", instrument: \"Trumpet\", price: 200 }, { category: \"brass\", instrument: \"Trombone\", price: 300 }, { category: \"brass\", instrument: \"French Horn\", price: 4300 }, { category: \"percussion\", instrument: \"Drum Set\", price: 500 }, { category: \"percussion\", instrument: \"Xylophone\", price: 3000 }, { category: \"percussion\", instrument: \"Cymbals\", price: 200 }, { category: \"percussion\", instrument: \"Marimba\", price: 3000 } ] const selectContainer = documentquerySelector(\"select\");\nconst productsContainer = document querySelector(\" products-container\");\nfunction instrumentCards(instrumentCategory) {\nconst instruments =\ninstrumentCategory === \"all\" instrumentsArr\n: instrumentsArr filter(\n({ category }) => category === instrumentCategory\n);\nreturn instruments map(({ instrument, price }) => {\nreturn <div class=\"card\">\n<h2>${instrument}</h2>\n<p>$${price}</p>\n</div>;\n}) join(\"\");\n}\nselectContainer addEventListener(\"change\", () => {\nproductsContainer innerHTML = instrumentCards(selectContainer value);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-instrument-filter\\672146dde7104896adb274ae.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "8e5d5c291d6950acaa133a3d73ae737a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 6747237371f13173c9f6c27e\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nAccess the #next and #previous elements from the HTML file Assign them to variables named nextButton, and previousButton, respectively --hints--\nYou should have a variable called nextButton js\nassert isDefined(nextButton);\nYou should assign the #next element to the variable nextButton js\nassert equal(nextButton, document getElementById('next'));\nYou should have a variable called previousButton js\nassert isDefined(previousButton);\nYou should assign the #previous element to the variable previousButton js\nassert equal(previousButton, document getElementById('previous'));\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down Quincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14081,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "943086bc464f8f560d55d9f329f0947d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "The Surest Way Out is Through Quincy Larson 3:10 Chasing That Feeling Quincy Larson 2:43 ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; /* font sizes */ --root-font-size: 16px; font-size: var(--root-font-size); /* font-families */ --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14081,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "9fafe0ca57e2adf77971434faa8cb702",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14081,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "7f342902d6a74f2cf3b3747c54ccf964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14081,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d52c76151d7f007504746c8de1e8afeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } #player-song-title, #player-song-artist { margin: 0; } #player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; }playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14081,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "1897e57168f15ff7ac96eaa4500ab1d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "(max-width: 700px) { player, playlist { width: 300px; } player { height: 340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; }playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\n--fcc-editable-region--\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14081,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747237371f13173c9f6c27e.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "36f4fad5815d0394ee77f0ad7cc3f489",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 674724ff8af92f7733e6d980\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nNext, create an empty array named allSongs to store all the songs --hints--\nYou should have a variable called allSongs js\nassert isDefined(allSongs)\nYou should assign an array to your allSongs variable js\nassert isArray(allSongs)\nYour array should be empty js\nassert isEmpty(allSongs)\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down Quincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13875,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "8d42d22dd17083c75e7f828c18c636a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "Quincy Larson 2:43 ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; /* font sizes */ --root-font-size: 16px; font-size: var(--root-font-size); /* font-families */ --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13875,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "b1b8cf4fc3189d5825b7e83e9ec139ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13875,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "2bdbcb5f46a64ef3ec6239ef5a07fd83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13875,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "97be45d9bca6f5eb3a55f2be1e06bd7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } #player-song-title, #player-song-artist { margin: 0; } #player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; }playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13875,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "269c8995661b52811ba9fc51ed8cf0c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "(max-width: 700px) { player, playlist { width: 300px; } player { height: 340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; }playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13875,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674724ff8af92f7733e6d980.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "933c7e56a7533fe98610a4dde874951f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 6747257cdf5412781e138bb2\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nInside the allSongs array, create an object with the following properties and values:\njs\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n--hints--\nYour allSongs array should have one value js\nassert equal(allSongs length, 1);\nYour allSongs array should have an object as its first value js\nassert isObject(allSongs[0]);\nYour allSongs array should have an object with an id property set to the number 0 js\nassert strictEqual(allSongs[0] id, 0);\nYour allSongs array should have an object with a title property set to the string \"Scratching The Surface\" js\nassert equal(allSongs[0] title, \"Scratching The Surface\");\nYour allSongs array should have an object with an artist property set to the string \"Quincy Larson\" js\nassert equal(allSongs[0] artist, \"Quincy Larson\");\nYour allSongs array should have an object with a duration property set to the string \"4:25\" js\nassert equal(allSongs[0] duration, \"4:25\");\nYour allSongs array should have an object with a src property set to the string \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\" js\nassert equal(allSongs[0] src, \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\");\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "bdb332263cff0f284da88e9e5c7fbbd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "to the string \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\" js assert equal(allSongs[0] src, \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\"); --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop Me Can't Even Slow Me DownQuincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "d4c2fa2c971aaa233c15b7ff455ea3d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "16px; font-size: var(--root-font-size); /* font-families */ --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); }player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "e299c035edf5a69d11470aee183cb4e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } #player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } #player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "15dd19aaed2df0e0cdb6852b5380aa97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } #playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "330bee240098670f1d960469f4d86942",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } #player-song-title, #player-song-artist { margin: 0; } #player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle,playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "5de6cc3d709f6f0085645f0e8fc1491a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\n--fcc-editable-region--\nconst allSongs = [\n]\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747257cdf5412781e138bb2.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "171591288bc896478b0df9b3973cfd73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 674728eda5829d7b4c360643\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nAdd a third object with the following properties and values:\njs\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n--hints--\nYour allSongs array should have an object as its third value js\nassert isObject(allSongs[2]);\nThe third object in your allSongs array should have an id property set to the number 2 js\nassert equal(allSongs[2] id, 2);\nThe third object in your allSongs array should have a title property set to the string \"Still Learning\" js\nassert equal(allSongs[2] title, \"Still Learning\");\nThe third object in your allSongs array should have an artist property set to the string \"Quincy Larson\" js\nassert equal(allSongs[2] artist, \"Quincy Larson\");\nThe third object in your allSongs array should have a duration property set to the string \"3:51\" js\nassert equal(allSongs[2] duration, \"3:51\");\nThe third object in your allSongs array should have a src property set to the string \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\" js\nassert equal(allSongs[2] src, \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\");\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "95ad9ba39ddd3447d2effa09c65ac00c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "to the string \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\" js assert equal(allSongs[2] src, \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\"); --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop Me Can't Even Slow Me DownQuincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "da414cf0a1b4212cf907e280e673811f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; }player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "48234f333b60c242b01d36a8862a2961",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } #player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } #player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "f3abfdba1acfbbe6cdbf7e8901af2650",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } #playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "6cdba1bbd54ef7d88352b99ed6da9e42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "31f053f3b5a6e04a655f0cfaef2a903a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n--fcc-editable-region--\n--fcc-editable-region--\n];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674728eda5829d7b4c360643.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "dc2cd283dc9be79370553248d3ac7244",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 6747274264e8a5799fb3e0b5\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nAdd a second object with the following keys and values:\njs\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n--hints--\nYour allSongs array should have two values js\nassert equal(allSongs length, 2);\nYour allSongs array should have an object as its second value js\nassert isObject(allSongs[1]);\nThe second object in your allSongs array should have an id property set to the number 1 js\nassert strictEqual(allSongs[1] id, 1);\nThe second object in your allSongs array should have a title property set to the string \"Can't Stay Down\" js\nassert equal(allSongs[1] title, \"Can't Stay Down\");\nThe second object in your allSongs array should have an artist property set to the string \"Quincy Larson\" js\nassert equal(allSongs[1] artist, \"Quincy Larson\");\nThe second object in your allSongs array should have a duration property set to the string \"4:15\" js\nassert equal(allSongs[1] duration, \"4:15\");\nThe second object in your allSongs array should have a src property set to the string \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\" js\nassert equal(allSongs[1] src, \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\");\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "7718b398ad4077fd730a44b2696d3b7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "have a src property set to the string \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\" js assert equal(allSongs[1] src, \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\"); --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop MeCan't Even Slow Me Down Quincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "a351b713983b2411bf74cfbb45efcb9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "16px; font-size: var(--root-font-size); /* font-families */ --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); }player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "6cf9ae5a91bf8f84e4396a4a80219f7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } #player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } #player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "3b1db2ac7f7f31a246337199824dae74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } #playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "cc83c36001354e43c012d00050e7a2d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } #player-song-title, #player-song-artist { margin: 0; } #player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle,playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "bea7ecc6906dbc91689d52d80b2b3d49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n--fcc-editable-region--\n--fcc-editable-region--\n];\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747274264e8a5799fb3e0b5.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "a1bd3a1e3be86a28a3e956e3890d27b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 6747299cbed5107c6a00d64c\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nThe rest of the songs has been added to the allSongs array for you In the previous lecture, you learned about the Web Audio API and how to use it to play songs All modern browsers support the Web Audio API, which lets you generate and process audio in web applications Create a variable named audio and set it equal to new Audio() This will create a new HTML5 audio element --hints--\nYou should have a variable named audio js\nassert isDefined(audio);\nYou should assign a new instance of the Audio object to the variable named audio js\nassert instanceOf(audio, Audio)\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down Quincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "04f531e852c5e3531769244feb34e6b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "The Surest Way Out is Through Quincy Larson 3:10 Chasing That Feeling Quincy Larson 2:43 ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; /* font sizes */ --root-font-size: 16px; font-size: var(--root-font-size); /* font-families */ --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "14791c7b4d8e62327d00040fa4ccd418",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "38c5310a6d1f35b9ff2df01760130ded",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "3028294e69183d4fedcd323a14b656ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } #player-song-title, #player-song-artist { margin: 0; } #player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; }playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "986b728ab4fa39b898a98cba3e28c36d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "(max-width: 700px) { player, playlist { width: 300px; } player { height: 340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; }playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "8c66468f440eb05b752c6a1db627fc33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "10px; } player-display-song-artist > p { white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "034bbf32e0c3858259e04b20553cb96d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16199,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\6747299cbed5107c6a00d64c.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "ee27fa9626f0d18d6775b444a00a53ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 67472ab9f570797dbb01568a\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nYour music player should keep track of the songs, the current song playing, and the time of the current song To do this, you will need to create an object to store this information Start by declaring a new variable called userData and assign it an empty object --hints--\nYou should have a variable named userData js\nassert isDefined(userData);\nYou should assign an empty object to your userData variable js\nassert deepEqual(userData, {});\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down Quincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "c3e69517e9cf6e011369588570307489",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "Quincy Larson 2:43 ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; /* font sizes */ --root-font-size: 16px; font-size: var(--root-font-size); /* font-families */ --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "72aaff4763777eb72842bf5b31d003c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "781403070bd664d76977bdcd4281199f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "bca71b8d02aa29538b642394f67701a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } #player-song-title, #player-song-artist { margin: 0; } #player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; }playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "29e672551460298046044631d777bbf6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "(max-width: 700px) { player, playlist { width: 300px; } player { height: 340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; }playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "10aa7be0dd3c0136fc0a0b3cb867fcc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "10px; } player-display-song-artist > p { white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "940269a58a5c02aff39854590fbbf223",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472ab9f570797dbb01568a.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "078bf254fbc38cbd4c390323d4ef83cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 67472eef7b4b7ba77b50929b\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nIn your userData object, create a songs property and set its value to the allSongs array Then, to handle the current song's information and track its playback time, create a currentSong and songCurrentTime properties Set the values to null and 0, respectively --hints--\nYour userData object should have a songs key set to the allSongs array js\nassert propertyVal(userData, \"songs\", allSongs);\nYour userData object should have a currentSong key set to null js\nassert propertyVal(userData, \"currentSong\", null);\nYour userData object should have a songCurrentTime key set to 0 js\nassert propertyVal(userData, \"songCurrentTime\", 0);\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "4eb9a9e2a1dfc7ecea4520b9a897b8bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "userData object should have a songCurrentTime key set to 0 js assert propertyVal(userData, \"songCurrentTime\", 0); --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop Me Can't Even Slow Me DownQuincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "4b381840cf2d0b2582d735825c2697a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "f0da9127a519f25d52fc951970d73479",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } #player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } #player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "61979abbede309da14dcdbabf5b059c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } #playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "b34e0757c39b333b294357ec69239c6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "cc606e4a7730357a6609d6241bdb952c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "29444f54abee8524fb57c37064844fb4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "document getElementById(\"previous\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musingmp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "2de959afc15a0a551c1410d366aaea9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\", }, { id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdnfreecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\n--fcc-editable-region--\nconst userData = {\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67472eef7b4b7ba77b50929b.md",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "dad297a710f206ced9f909b557511b09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 67473042e8751eac62fafc82\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nIt's time to begin implementing the functionality for playing the displayed songs Define a playSong function that takes an single parameter which will represent the unique identifier of the song you want to play --hints--\nYou should have an empty function named playSong js\nassert isFunction(playSong);\nYour playSong function should take a single parameter js\nassert lengthOf(playSong, 1);\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down Quincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "aed26faa430ba74a10aae36b65d10494",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "Quincy Larson 2:43 ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; /* font sizes */ --root-font-size: 16px; font-size: var(--root-font-size); /* font-families */ --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "015e7441b19808f70b3adb8830062af1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "1710d8e5c54b52a414fc91f72b41fc13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "6aabd998c021fdde6fa927a8508a1b77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } #player-song-title, #player-song-artist { margin: 0; } #player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; }playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "df372c218a63804f539ca26af07bf807",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "(max-width: 700px) { player, playlist { width: 300px; } player { height: 340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; }playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "79316b3609286b213449719d87fc39e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "10px; } player-display-song-artist > p { white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "2b4dcabf20d15f86adf16f1f7a8b7586",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nconst userData = {\nsongs: allSongs,\ncurrentSong: null,\nsongCurrentTime: 0,\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16113,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\67473042e8751eac62fafc82.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "6bd07fd828caa777cbbc84f973cee6df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 674757668684f9deaa6ac3c0\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nStill inside the playSong function, set the audio src property equal to song src This tells the audio element where to find the audio data for the selected song Also, set the audio title property equal to song title This tells the audio element what to display as the title of the song --hints--\nYou should set the audio src property equal to song src inside your playSong function js\nconst temp = audio;\ntry {\nplaySong(2);\nassert equal(audio src, \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\");\n} finally {\naudio = temp;\n}\nYou should set the audio title property equal to song title inside your playSong function js\nconst temp = audio;\ntry {\nplaySong(2);\nassert equal(audio title, \"Still Learning\");\n} finally {\naudio = temp;\n}\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "aad5812b3ab71fcd413c9e700b085738",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "try { playSong(2); assert equal(audio title, \"Still Learning\"); } finally { audio = temp; } --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop Me Can't Even Slow Me DownQuincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "7bb4ef25871364a24088f133046e5496",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "7329d9783dee43fa6276a44140988d87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } #player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } #player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "2d308b4b8fa265b1769e56469e0164da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } #playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "ce65cafbd6f51e83488d98e7436042ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "da353a5117502f2f582e84af14e990e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "dc90090b4aa635090d176fc15413616b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "document getElementById(\"previous\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musingmp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "b08a26783bd544b280f937009a12238f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\", }, { id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdnfreecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nconst userData = {\nsongs: allSongs,\ncurrentSong: null,\nsongCurrentTime: 0,\n}\n--fcc-editable-region--\nconst playSong = id => {\nconst song = userData songs find((song) => song id === id);\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674757668684f9deaa6ac3c0.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "b1eadebe643a064f08f10b98d9123146",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 674735e3b28351b8b8f05807\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nThe find() method retrieves the first element within an array that fulfills the conditions specified in the provided callback function If no element satisfies the condition, the method returns undefined In the example below, the find() method is used to find the first number greater than 25:\n```js\nconst numbers = [10, 20, 30, 40, 50];\n// Find the first number greater than 25\nconst foundNumber = numbers find((number) => number > 25);\nconsole log(foundNumber); // Output: 30\n```\nWithin your playSong function, use the find() method on the userData songs array to search for a song which has an id strictly equal to the id passed into the playSong function Assign the find call to a variable named song --hints--\nYour playSong function should call the find method on userData songs js\nlet flag = false;\nconst temp = userData songs find;\nuserData songs find = foo => {flag = true};\ntry {\nplaySong(0);\nassert isTrue(flag);\n} finally {\nuserData songs find = temp;\n}\nYour find call should return a song whose id is strictly equal to the id passed into the playSong function js\nconst testArr = [\n{id: 0},\n{id: 1},\n{id: 2},\n]\nlet callback;\nconst testFind = id => testArr find(callback);\nconst temp = userData songs find;\nuserData songs find = foo => {callback = foo};\ntry {\nplaySong(0);\nassert deepEqual(testFind(0), {id: 0});\nplaySong(1);\nassert deepEqual(testFind(1), {id: 1});\nplaySong(2);\nassert deepEqual(testFind(2), {id: 2});\nplaySong(3);\nassert isUndefined(testFind(3));\nplaySong(\"0\");\nassert isUndefined(testFind(\"0\"));\n} finally {\nuserData songs find = temp;\n}\nYou should assign your find call to a variable named song js\nassert match(__helpers removeJSComments(code), /(const|let|var)\\s+song\\s*=\\s*userData\\s*\\ \\s*songs\\s*\\ \\s*find\\s*\\(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "9f981d0373de2e3d5ee572a409e7bc12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "2}, ] let callback; const testFind = id => testArr find(callback); const temp = userData songs find; userData songs find = foo => {callback = foo}; try { playSong(0); assert deepEqual(testFind(0), {id: 0}); playSong(1); assert deepEqual(testFind(1), {id: 1}); playSong(2); assert deepEqual(testFind(2), {id: 2}); playSong(3); assert isUndefined(testFind(3)); playSong(\"0\"); assert isUndefined(testFind(\"0\")); } finally { userData songs find = temp; } You should assign your find call to a variable named song js assert match(__helpers removeJSComments(code), /(const|let|var)\\s+song\\s*=\\s*userData\\s*\\ \\s*songs\\s*\\ \\s*find\\s*\\(+\\)/)\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "852066628d884312d838453d86d36b16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "your find call to a variable named song js assert match(__helpers removeJSComments(code), /(const|let|var)\\s+song\\s*=\\s*userData\\s*\\ \\s*songs\\s*\\ \\s*find\\s*\\(+\\)/) --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop Me Can't Even Slow Me DownQuincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "0fa69995bbe2e46bcbd6e456c080cbd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\n#player-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\n#player-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "bf688e45467e819f8bed19f8cb5e815f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } #player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } #player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\n#playlist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "ceb583cd076c2b0c08f005b94bd5b8af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } #playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\n#player-song-title,\n#player-song-artist {\nmargin: 0;\n}\n#player-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\n#player-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "04bc69eceabb70913c6f2316e7e387a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } #player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "18f8b7b7fb5adf1e9f46447aab96bdb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "2a427da5e4e391ce49989c321e34d33d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "document getElementById(\"previous\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musingmp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "95ab016ee8c61c684e7a426c8bc609c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\", }, { id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdnfreecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nconst userData = {\nsongs: allSongs,\ncurrentSong: null,\nsongCurrentTime: 0,\n}\n--fcc-editable-region--\nconst playSong = id => {\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674735e3b28351b8b8f05807.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "3ffb9879a7840fc3e4921ffd3ac7b4be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674836ba82e9057dfee1849c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "id: 674836ba82e9057dfee1849c\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nNext, use the classList property and the add() method to add the playing class to the playButton element This will look for the class playing in the CSS file and add it to the playButton element Then, set userData currentSong to song, and to finally play the song, use the play() method on the audio variable play() is a method from the web audio API for playing an mp3 file --hints--\nYou should add the playing class to the playButton element within your playSong function js\nplayButton classList remove(\"playing\");\nplaySong(0);\nassert isTrue(playButton classList contains(\"playing\"));\nYou should set userData currentSong to song within your playSong function js\nuserData currentSong = null;\nplaySong(0);\nassert deepEqual(userData currentSong, {id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\"});\nYou should call the play() method on the audio variable within your playSong function js\nlet flag = false;\nconst temp = audio play;\naudio play = () => {flag = true};\ntry {\nplaySong(0);\nassert isTrue(flag);\n} finally {\naudio play = temp;\n}\n--seed--\n--seed-contents--\n```html\nBuild a Music Player App\nfreeCodeCamp\nPlaylist\nScratching The Surface\nQuincy Larson\n4:25\nCan't Stay Down\nQuincy Larson\n4:15\nStill Learning\nQuincy Larson\n3:51\nCruising for a Musing\nQuincy Larson\n3:34\nNever Not Favored\nQuincy Larson\n3:35\nFrom the Ground Up\nQuincy Larson\n3:12\nWalking on Air\nQuincy Larson\n3:25\nCan't Stop Me Can't Even Slow Me Down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674836ba82e9057dfee1849c.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "fcfd57e53e2246bfa91eb147c97b50b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674836ba82e9057dfee1849c.md",
    "source_type": "git_repo",
    "title": "Build a Music Player App",
    "content": "= true}; try { playSong(0); assert isTrue(flag); } finally { audio play = temp; } --seed-- --seed-contents-- ```html Build a Music Player App freeCodeCamp Playlist Scratching The Surface Quincy Larson 4:25 Can't Stay Down Quincy Larson 4:15 Still Learning Quincy Larson 3:51 Cruising for a Musing Quincy Larson 3:34 Never Not Favored Quincy Larson 3:35 From the Ground Up Quincy Larson 3:12 Walking on Air Quincy Larson 3:25 Can't Stop Me Can't Even Slow Me DownQuincy Larson\n3:52\nThe Surest Way Out is Through\nQuincy Larson\n3:10\nChasing That Feeling\nQuincy Larson\n2:43\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/* font sizes */\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/* font-families */\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-music-player\\674836ba82e9057dfee1849c.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 9
  }
]