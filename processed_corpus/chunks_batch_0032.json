[
  {
    "id": "555016277b6ba13e6f3ea61deb6ba4e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee5e0f08e82208364c4128.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 399,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += `\n${name}\n$${price}\nCategory: ${category}\n</div>\n`;\n}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee5e0f08e82208364c4128.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "2eda8cfe1d534d4e30ba6a37c3f39209",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee7c664f9b65137d925c8a\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nYour ShoppingCart class needs the ability to add items Create an empty addItem method, which takes two parameters: id and products Creating a method might look like this:\n```js\nclass Computer {\nconstructor() {\nthis ram = 16;\n}\naddRam(amount) {\nthis ram += amount;\n}\n}\n```\nThe first parameter, id, is the id of the product the user has added to their cart The second parameter, products, is an array of product objects By using a parameter instead of directly referencing your existing products array, this method will be more flexible if you wanted to add additional product lists in the future --hints--\nYour ShoppingCart class should have an addItem method js\nconst cart = new ShoppingCart();\nassert isFunction(cart addItem);\nYour addItem method should take two parameters: id and products js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)/);\nYour addItem method should be empty js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "9cb7c53f20c2aadb3c1640a83758183a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "empty js const cart = new ShoppingCart(); assert match(cart addItem toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)\\s*\\{\\s*\\}/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "eb7efca72de55a057444f295a43b8c46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; }product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "831258a06e303acf132841581219aeb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 399,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "192c67f6c73f8b80fe28407d4518c4ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\n--fcc-editable-region--\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n};\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 265,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a3611b27b9479eca875569033c1c1640",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee611d478dca0b77f6a393\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nThe this keyword in JavaScript is used to refer to the current object Depending on where this is used, what it references changes In the case of a class, it refers to the instance of the object being constructed You can use the this keyword to set the properties of the object being instantiated Here is an example:\njs\nclass Computer {\nconstructor() {\nthis ram = 16;\n}\n}\nIn your constructor, use the this keyword to set the items property to an empty array Also, set the total property to 0, and the taxRate property to 8 25 --hints--\nYou should use the this keyword to set the items property of your class to an empty array js\nassert match(code, /this\\ items/);\nconst cart = new ShoppingCart();\nassert isArray(cart items);\nassert isEmpty(cart items);\nYou should use the this keyword to set the total property of your class to 0 js\nassert match(code, /this\\ total/);\nconst cart = new ShoppingCart();\nassert equal(cart total, 0);\nYou should use the this keyword to set the taxRate property of your class to 8 25 js\nassert match(code, /this\\ taxRate/);\nconst cart = new ShoppingCart();\nassert equal(cart taxRate, 8 25);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2a6e7d55ef8784da364c6ceb21c8e690",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "/this\\ taxRate/); const cart = new ShoppingCart(); assert equal(cart taxRate, 8 25); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "195246c0f3d1205ab5d7d7ccad4e60b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; }product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "cde44d44ec6478dbc9f7a021a44072f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 399,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "cc2eb0872ecff8db92700f8bb45750a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\n--fcc-editable-region--\nclass ShoppingCart {\nconstructor() {\n}\n};\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "9dd511103dc471059965df81f392ce90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eea5cea403a81a68ae493c\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nYou need to find the product that the user is adding to the cart Remember that arrays have a find() method In your addItem function, declare a product variable, and assign it the value of calling the find() method on the products array For the callback to find(), pass a function that takes a single parameter item, and returns whether the id property of item is strictly equal to the id parameter passed to addItem --hints--\nYou should declare a product variable in your addItem function js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /product\\s*=/);\nYou should call the find() method on your products array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(/);\nYou should pass a callback function to the find() method js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(/);\nThe callback function should take a single parameter js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)/);\nThe callback function should return whether the id property of item is strictly equal to the id parameter passed to addItem js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)\\s*\\{\\s*return\\s+item\\ id\\s*===\\s*id\\s*; \\s*\\}/);\nYou should assign the value of the find() method to the product variable js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /product\\s*=\\s*products\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "e6c9f3a04c91a37c0ec90a2201994c1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "should take a single parameter js const cart = new ShoppingCart(); assert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)/); The callback function should return whether the id property of item is strictly equal to the id parameter passed to addItem js const cart = new ShoppingCart(); assert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)\\s*\\{\\s*return\\s+item\\ id\\s*===\\s*id\\s*; \\s*\\}/); You should assign the value of the find() method to the product variable js const cart = new ShoppingCart(); assert match(cart addItem toString(), /product\\s*=\\s*products\\find\\(/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "675a612e982cfb7dab8ac624c41bb540",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "9e0247111abdf943c6d74be5f42991f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "ed6797732b91108263c207e2fbebeebf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "3209ae8c3a0e7127ca7becec64471eb1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3c1d8e8390f9fc9525f2c71c50eb4f83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eea8e1e143ae1d098c8c9d\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nNow you need to push the product into the cart's items array Remember to use the this keyword --hints--\nYou should call the push method on the items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /items\\ push\\(/);\nRemember you need to use the this keyword to access the items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ push\\(/);\nYou should push the product variable to the items array js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert deepEqual(cart items, [products[0]]);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "0ca11deeb52c37972e1ddeb0b79f6da7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "725936b867c844a57f689971624679f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "b8fe07defee95ea17ed6bbc7a5818188",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "475daa9f99d066bda3f43203f8b962c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "e4449b210a97cc51117a04f3c3fc7933",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eea817673c8e1c22927fa6\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nUse const and destructuring to extract name and price variables from product --hints--\nYou should use destructuring to get the name and price variables js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /\\{\\s*name\\s*,\\s*price\\s*\\}/);\nYou should use const to declare the name and price variables js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s*\\{\\s*name\\s*,\\s*price\\s*\\}/);\nYou should use destructuring to get the name and price variables from product js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s*\\{\\s*name\\s*,\\s*price\\s*\\}\\s*=\\s*product\\s*; \\b/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "6ae5d30d96c62c0da22e821e6e7f2df7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "82a5117f9c6f70e610354f9d135ac36f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "14609f95e094426c39c2cfdcc45ba860",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c6c6695c2f21d347a854aedd6334da04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "da69d91967806658094d6845924ddd50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eeb8e86becbf1e75c2cb0d\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nYou now need a total count of each product that the user has in the cart Declare a totalCountPerProduct variable, and assign it an empty object --hints--\nYou should declare a totalCountPerProduct variable in your addItem function js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*=/);\nYou should use const to declare totalCountPerProduct js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+totalCountPerProduct\\s*=/);\nYou should assign an empty object to totalCountPerProduct js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+totalCountPerProduct\\s*=\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "4349d479b44aebb177ec6094835ddc44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "64c02c7fd29185255ab0629e33de7093",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d2defde8748bc4cae33a985b7a1728bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "fe1d6ca152791eef38a2614169a324da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "743394f486fdfab5a6b8137885adde5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eedebb0ec0231ff1cede1a\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nUse the forEach() method to loop through the items array Pass an empty callback function that takes a single parameter dessert --hints--\nYou should use the forEach() method on your items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /items\\ forEach\\(/);\nRemember to use the this keyword to access the items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(/);\nYou should pass a callback function to the forEach() method js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(\\s*function\\s*\\(/);\nYour callback function should take a single parameter js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(\\s*function\\s*\\(\\s*dessert\\s*\\)/);\nYour callback function should be empty js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(\\s*function\\s*\\(\\s*dessert\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "53ad7be590235f586f8ed41edd495067",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "7245d5c4fb5d5a6bcaedbedd4dbdaded",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "1436b37d0a6f6b0cd87bd8188b64b3f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "160cb93ae9092ae2cf7a83ba0e2a8322",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "41d75293fcc6972af739bad36d4f6c6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63efdbc22a0c56070beabed7\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nYou’re on the right track However, let’s take a moment to address a common issue when working with objects in JavaScript When you try to access an object property that doesn’t exist, JavaScript returns undefined If you then attempt to perform arithmetic operations on undefined, it can lead to unexpected results, such as NaN To prevent this, you can use the || (logical OR) operator to provide a default value ```js\nlet scores = {};\nlet players = [\"Alice\", \"Bob\", \"Charlie\"];\nplayers forEach(player => {\nscores[player] = scores[player] || 0;\n});\n```\nNow, let’s apply this concept to your totalCountPerProduct object in the forEach callback Make sure that each dessert id property is initialized properly Initialize totalCountPerProduct[dessert id] with a default value of 0 using the || operator --hints--\nYou should use dot notation to access the id property of dessert js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /dessert\\ id/);\nYou should use bracket notation to access the property of totalCountPerProduct that corresponds to dessert id js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]/);\nYou should initialize totalCountPerProduct[dessert id] with 0 as a default value using || operator at the end of the expression js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*totalCountPerProduct\\s*\\[\\s*dessert\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "514ba43c879f4174b786f4c3cf7e9c5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id property of dessert js const cart = new ShoppingCart(); assert match(cart addItem toString(), /dessert\\ id/); You should use bracket notation to access the property of totalCountPerProduct that corresponds to dessert id js const cart = new ShoppingCart(); assert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]/); You should initialize totalCountPerProduct[dessert id] with 0 as a default value using || operator at the end of the expression js const cart = new ShoppingCart(); assert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*totalCountPerProduct\\s*\\[\\s*dessert\\id\\s*\\]\\s*\\|\\|\\s*0\\s*/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "cf1eb7c504e83ebcccf9c62c19fb0c12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "f2f24a0050810e2bd69c16393cac5c61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "b832c1df20a977a79387ba37883a8ae8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "572d85c37a9fc94a08a472537800dfae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\n})\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3781c03378d8972a2415a691c680884f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eff02f00e69a0b2ac10b43\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nNow you need to get prepared to update the display with the new product the user added Declare a currentProductCount variable, and assign it the value of the totalCountPerProduct object's property matching the id of product --hints--\nYou should declare a currentProductCount variable in your addItem function js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*=/);\nYou should use const to declare currentProductCount js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+currentProductCount\\s*=/);\nYou should assign the value of totalCountPerProduct[product id] to currentProductCount js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*=\\s*totalCountPerProduct\\s*\\[\\s*product\\ id\\s*\\]/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "12a2900eb5487507e6def02afba53508",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "*::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 12rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "e12fa4a444efcee7e62fb5e0440fe460",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3e4e1c12d65a8863f5295b0267b8ebb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9058211213424e0dc5f67c66ba222445",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "4d4e63aa53dab3897a1df980e5526927",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63efe370bbfc4a08d500118e\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nIn the forEach callback, wrap the right-hand assignment totalCountPerProduct[dessert id] || 0 in parentheses () to ensure proper evaluation, then increment the value by one --hints--\nYou should use dot notation to access the id property of dessert js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /dessert\\ id/);\nYou should use bracket notation to access the property of totalCountPerProduct that corresponds to dessert id js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]/);\nYou should use the assignment operator to update the value of the property of totalCountPerProduct that corresponds to dessert id js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=/);\nYou should wrap totalCountPerProduct[dessert id] || 0 in parentheses () before incrementing it by one js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*\\|\\|\\s*0\\s*\\)\\s*\\+\\s*1/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "53bacedaf9207112ec596c2fd94b1d42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "const cart = new ShoppingCart(); assert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*\\|\\|\\s*0\\s*\\)\\s*\\+\\s*1/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "13c22592cdd8269fa362673b2083d4cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c278ce60af29820f239f3e4c4a4d1a07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "b8553b6b7836f4813711cdfeaeb1d9de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = totalCountPerProduct[dessert id] || 0\n})\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "80fba787e1e4f8424fad96737405740f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eff98ffb1d5a0d24ec79cb\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nYou haven't written the code to generate the HTML yet, but if a product has already been added to the user's cart then there will be a matching element which you'll need Use getElementById() to get the matching element - you'll be setting the id value to product-count-for-id${product id}, so use a template literal to query that value Assign your query to a currentProductCountSpan variable --hints--\nYou should declare a currentProductCountSpan variable js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCountSpan\\s*=/);\nYou should use const to declare currentProductCountSpan js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+currentProductCountSpan\\s*=/);\nYou should use document getElementById() to get the matching element js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /document\\ getElementById\\(/);\nYou should use a template literal to query the id value js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /document\\ getElementById\\(\\s*`product-count-for-id\\$\\{(product\\ ) id\\}`\\s*\\)/);\nYou should assign the value of document getElementById() to currentProductCountSpan js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCountSpan\\s*=\\s*document\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "56ff9e1bc1066f1234bf6784cedfca31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "currentProductCountSpan js const afterAdd = code split(\"addItem\")[1]; assert match(afterAdd, /const\\s+currentProductCountSpan\\s*=/); You should use document getElementById() to get the matching element js const cart = new ShoppingCart(); assert match(cart addItem toString(), /document\\ getElementById\\(/); You should use a template literal to query the id value js const afterAdd = code split(\"addItem\")[1]; assert match(afterAdd, /document\\ getElementById\\(\\s*`product-count-for-id\\$\\{(product\\ ) id\\}`\\s*\\)/); You should assign the value of document getElementById() to currentProductCountSpan js const cart = new ShoppingCart(); assert match(cart addItem toString(), /currentProductCountSpan\\s*=\\s*document\\getElementById\\(/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "f136ce7c4b689b58d9945cb718c88919",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "53a59de38a8fa904e867c2c9930a050c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "06febb355122d09c54bf786e94d3a113",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "fc7d6e24ac4f14c18734c87a02ca5fa2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "90eabd0cc1d24c028940df9738690035",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0165121a9181342d5bc66\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nFor your truthy expression, removing the undefined, you need to update the textContent of the currentProductCountSpan to be the currentProductCount followed by an x Use a template literal to do so --hints--\nYou should remove the undefined from your truthy expression js\nconst cart = new ShoppingCart();\nassert notMatch(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*undefined/);\nYou should access the textContent property of currentProductCountSpan js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*currentProductCountSpan\\ textContent/);\nYou should use template literal syntax to update the textContent to be ${currentProductCount}x js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /currentProductCount\\s*>\\s*1\\s*\\ \\s*currentProductCountSpan\\ textContent\\s*=\\s*`\\$\\{currentProductCount\\}x`\\s*:/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "b26ed5962b8e824124f606cf60983fc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "7abb35aaf480fc13d1f1d9d2d3b4a2a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "b65b1e815da10b5a8e0368d78eb7327c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "8a5b975d97ec21827651f7c8695d4c0c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 undefined : undefined;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "21115e03bdf120844c0d23917b77a5df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63effe558c87a70e7072e447\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nThe behavior of the addItem method needs to change if the product is already in the cart or not Create a ternary that checks if the current product is already in the cart Use undefined for both the truthy and falsy expressions to avoid a syntax error --hints--\nYou should check if currentProductCount is greater than 1 js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1/);\nYou should use a ternary operator with your currentProductCount > 1 condition js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ /);\nYou should use undefined as the truthy expression js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*undefined/);\nYou should use undefined as the falsy expression js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*undefined\\s*:\\s*undefined/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "6ed3e9512236eb297218c4afa861fe6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "6c79035e8a49f59fa2b02aff7b6cab7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "efbce51f7a7ac73590fd989aec934930",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "0f0a49da31c0b5121f4c05866e520279",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "962239416939b385a98a308defb5261a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f017b4ad028a148eb713c0\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nFor your falsy expression, you'll need to add new HTML to your productsContainer Start by removing the undefined, then use the addition assignment operator and template literal syntax to add a div with the class set to product and the id set to dessert${id} to the innerHTML property of the productsContainer --hints--\nYou should remove the undefined from your falsy expression js\nconst cart = new ShoppingCart();\nassert notMatch(cart addItem toString(), /undefined/);\nYou should use the addition assignment operator to add HTML to the productsContainer Remember that HTML goes in the innerHTML property js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /productsContainer\\ innerHTML\\s*\\+=\\s*/);\nYou should use template literal syntax to add HTML to the productsContainer js\nassert match(code, /productsContainer\\ innerHTML\\s*\\+=\\s*`/);\nYou should add a div to the productsContainer js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert equal(productsContainer children [0] tagName, \"DIV\");\nYour div should have the class set to product js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert equal(productsContainer children [0] className, \"product\");\nYour div should have the id set to dessert${id} js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert equal(productsContainer children [0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "3c9c1d84d3b32daba6b651f826d8b702",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "the productsContainer js assert match(code, /productsContainer\\ innerHTML\\s*\\+=\\s*`/); You should add a div to the productsContainer js const cart = new ShoppingCart(); cart addItem(1, products); assert equal(productsContainer children [0] tagName, \"DIV\"); Your div should have the class set to product js const cart = new ShoppingCart(); cart addItem(1, products); assert equal(productsContainer children [0] className, \"product\"); Your div should have the id set to dessert${id} js const cart = new ShoppingCart(); cart addItem(1, products); assert equal(productsContainer children [0]id, \"dessert1\");\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "b009ea91a9ce4696353ffa6c3db87142",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "e2dc0bf8ac34a331feaa5530664810b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "b637e44f699ab28fe283d6517d1fa114",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "051abdfd31c23b351d0204266b11e618",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } --fcc-editable-region-- addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1currentProductCountSpan textContent = `${currentProductCount}x`\n: undefined;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "b4030e1e3914f73fa491eb002578e3ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f01861f813e01564c95315\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nInside your div, add two p elements Set the text of the second p element to be the value of the price variable --hints--\nYou should add two p elements inside your div element js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nassert equal(div children length, 2);\nassert equal(div children[0] tagName, 'P');\nassert equal(div children[1] tagName, 'P');\nYour second p element should have the text of the price variable js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nassert equal(div children[1] textContent, '12 99');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c0e5a383536dce19eac0c2cddc2e8a15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "8f30c5c696f88e9d24d7d6c27e5da153",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "0a7e1cebdcae829f4f0af7f4e6f901ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c0f007c885a95c2e6348305bdbf3e59e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n</div>\n`;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6ccd1d71d8e7e17b8434e5a449fab668",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f018f04e487e164dc27bd9\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nIn your first p element, add a span element Give the span a class of product-count and an id of product-count-for-id${id} Then, after the span, give your p element the text of the name variable --hints--\nYour first p element should have a span element js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p children length, 1);\nassert equal(p children[0] tagName, 'SPAN');\nYour span element should have a class of product-count js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p children[0] className, 'product-count');\nYour span element should have an id of product-count-for-id${id} js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p children[0] id, 'product-count-for-id1');\nYour first p element should have the text of the name variable This should be outside the span js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p innerText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "32b9f5a689cfbf898a47950269dd25e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "'product-count'); Your span element should have an id of product-count-for-id${id} js const cart = new ShoppingCart(); cart addItem(1, products); const div = document querySelector(' product'); const p = div querySelector('p'); assert equal(p children[0] id, 'product-count-for-id1'); Your first p element should have the text of the name variable This should be outside the span js const cart = new ShoppingCart(); cart addItem(1, products); const div = document querySelector(' product'); const p = div querySelector('p'); assert equal(p innerTexttrim(), 'Vanilla Cupcakes (6 Pack)');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "0a554f2f83c103278376f8c17f37c303",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "09a8dd1a7f9c108012567395f3ed205d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "91eec3f6132ba16e7c880e6773ea45a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c95d44f9e206685ab226735e681cadf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } --fcc-editable-region-- addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "e5cc8cc2168cccabc059bd46071a32a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f01c9791a0aa1751c73760\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nThere is still more functionality that your ShoppingCart class needs, but first you need to be able to test the code you have currently written You'll need to instantiate a new ShoppingCart object and assign it to a variable Here is an example of instantiating the Computer class from earlier examples:\njs\nconst myComputer = new Computer();\nDeclare a cart variable, and assign it a new ShoppingCart object Note the use of the new keyword when instantiating the object --hints--\nYou should use const to declare a cart variable js\nassert match(code, /const\\s+cart\\s*=/);\nYou should use the new keyword to instantiate a new ShoppingCart object js\nassert match(code, /new\\s+ShoppingCart\\s*\\(\\s*\\)/);\nYou should assign your new ShoppingCart object to the cart variable js\nassert isTrue(cart instanceof ShoppingCart);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c1ee2e58ec88c61d2152f2daf635e785",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "57f0d65793406227bfe0c51d8ab14df0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "479c407e6cf4189622606ee77ebfebd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "a6b6293e37c5be955633a4506a307fde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "e4646cb4f5786aa6087d75fa2c181025",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f026d041bc6c1a3d5cba0f\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nYou need to iterate through the buttons in your addToCartBtns variable However, getElementsByClassName() returns a Collection, which does not have a forEach method Use the spread operator on the addToCartBtns variable to convert it into an array Then, use the forEach method to iterate through the array Do not pass a callback function yet --hints--\nYou should use the spread operator on the addToCartBtns variable js\nassert match(code, /\\ \\ \\ addToCartBtns/);\nYou should spread the addToCartBtns variable into an array js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]/);\nYou should use the forEach method on the array you created js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(/);\nYou should not pass a callback function to the forEach method js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2fadd1607cbcad9566dd73ccf7d8702e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "5d962f5c4e536f381bba579aaeaa8082",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "646f8fa415a9db785a11b485bfc995af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c7ebc110792a591111d384439fea4e0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6d7f2b04cfcc7fc45bbf990f85eaa5e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0224ceb16dc196d2c860a\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nYou need to get all of the Add to cart buttons that you added to the DOM earlier Declare an addToCartBtns variable, and assign it the value of calling the getElementsByClassName() method on the document object, passing in the string \"add-to-cart-btn\" --hints--\nYou should use const to declare your addToCartBtns variable js\nassert match(code, /const\\s+addToCartBtns\\s*=/);\nYou should call the getElementsByClassName() method on the document object js\nassert match(code, /document\\s*\\ \\s*getElementsByClassName\\s*\\(/);\nYou should pass the string \"add-to-cart-btn\" to the getElementsByClassName() method js\nassert match(code, /document\\s*\\ \\s*getElementsByClassName\\s*\\(\\s*('|\"|`)add-to-cart-btn\\1\\s*\\)/);\nYou should assign the value returned by the getElementsByClassName() method to the addToCartBtns variable js\nassert deepEqual(addToCartBtns, document getElementsByClassName('add-to-cart-btn'));\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "0eafc016ffee7c3eff658661b2912df3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "e9f3c19cb36f86dce623586b291f6bd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a6c0369ae54977330fb4bff986b5814a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "0ed105be598f323670fbf02e954bfb9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a6f3869aa7931180069b83231eb931e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0284532742c1b26c7a052\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nAdd your callback function to the forEach method It should take a btn parameter Then, in the callback, add an event listener to the btn The event listener should listen for a click event, and should take another callback with an event parameter The second callback should be empty --hints--\nYou should use arrow syntax to add a callback function to the forEach method which takes a btn parameter js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{|\\s*)/);\nYou should add an event listener to the btn variable js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(|\\s*btn\\s*\\ \\s*addEventListener\\s*\\()/);\nYou should listen for a click event on the btn variable js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*|\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\2\\s*,\\s*)/);\nYou should add an empty callback function to the event listener Remember to give it an event parameter js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "f511910590a239802229cab1b66f2e49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{|\\s*)/); You should add an event listener to the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(|\\s*btn\\s*\\ \\s*addEventListener\\s*\\()/); You should listen for a click event on the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*|\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\2\\s*,\\s*)/); You should add an empty callback function to the event listener Remember to give it an event parameter js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\3\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "04594ebf18ca9e602374c4decd85abfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{|\\s*)/); You should add an event listener to the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(|\\s*btn\\s*\\ \\s*addEventListener\\s*\\()/); You should listen for a click event on the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*|\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\2\\s*,\\s*)/); You should add an empty callback function to the event listener Remember to give it an event parameter js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\3\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;\\s*\\))/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 592,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "61f9539c1461343a1d9abcaba093130b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\3\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;\\s*\\))/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "794794634f37a189c29fd32e14dde423",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "--golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "50dc96b5bf07d3555fc549cf2355b4f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = documentgetElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "a911e50c25203568fc92b3d373ff48c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "99ca80686d2b34fd3ddc274128b39461",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "7bab38d21f3cf30f3859e70897d4642e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0289df84a581bbdbd29b7\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nIn your event listener callback, call the addItem() method of your cart object, and pass in the event target id Remember that the id here will be a string, so you need to convert it to a number Pass your products array as the second argument --hints--\nYour event listener callback should call the addItem() method of your cart object js\nassert match(code, /cart\\ addItem\\(/);\nYour addItem() method should be called with the event target id as the first argument Remember to convert the id to a number using Number() js\nassert match(code, /cart\\ addItem\\(\\s*Number\\(\\s*event\\ target\\ id\\s*\\)\\s*/);\nYour addItem() method should be called with the products array as the second argument js\nassert match(code, /cart\\ addItem\\(\\s*Number\\(\\s*event\\ target\\ id\\s*\\)\\s*,\\s*products\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "b8f542750b81a24d2667f26c5e75ec35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "88892501522f36dcccc338ed51458311",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "4a42ef766b9677246c14e56534822e6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "44409f6527c4e9b3fc0721b906e9f0d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\n})\n}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "67f99bd90dbadd5ac04dedc6fcfc32b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0295e673b661ccb299e8a\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nYou need a way to access the total number of items in the cart The best way to do this is to add another method to your ShoppingCart class, rather than accessing the items array directly Add a getCounts method to the ShoppingCart class It should return the number of items in the items array --hints--\nYour ShoppingCart class should have a getCounts method js\nassert isFunction(cart getCounts);\nRemember to use the this keyword to access the items array js\nconst afterCounts = code split('getCounts')[1];\nassert match(afterCounts, /this\\s*\\ \\s*items\\s*\\ \\s*length/);\nYour getCounts method should return the number of items in the items array js\nassert equal(cart getCounts(), 0);\ncart addItem(1, products);\nassert equal(cart getCounts(), 1);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "a62e2b4154331351303f8f8e6d5f4440",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "100659e90bdbb20a36dd4310132267d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "0d72cef8917b98231a6f2702f67c35e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "7d268e74bfbb506d4fb7202c423bdb7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3af5a2439f8f2d12a0d1e5c0cb8ed089",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f029b96b9e9e1df93be951\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nNow you can update the total number of items on the webpage Assign the value of your cart object's getCounts() method to the textContent of the totalNumberOfItems variable --hints--\nYou should access the textContent property of the totalNumberOfItems variable js\nassert match(code, /totalNumberOfItems\\s*\\ \\s*textContent/)\nYou should assign the value of your cart object's getCounts() method to the textContent property of the totalNumberOfItems variable js\nassert match(code, /totalNumberOfItems\\s*\\ \\s*textContent\\s*=\\s*cart\\s*\\ \\s*getCounts\\(\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2314bc9dfb507f71ff7f199609b701ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "df13a461b48ecb3255ee4b1fce24e2f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "5bef014ba41f5bffdb73569d3a665e86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "564ace2731c0ccb95629169ee4fe6819",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "52064bbdd57976247b2de3979463eaaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02b22cce1c11fe9604381\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nPart of the total cost will include the tax, so you need to calculate that as well Create a calculateTaxes method in the ShoppingCart class This method should take an amount parameter --hints--\nYou should create a calculateTaxes method in the ShoppingCart class js\nassert isFunction(cart calculateTaxes);\nYour calculateTaxes method should take an amount parameter js\nassert match(cart calculateTaxes toString(), /\\(\\s*amount\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "3deda7b1ef9a94a74184157424da3044",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "371b89a318f4d280165ae2d46b4506c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "850e9d833cbcb6e5b0c209d3af19c1e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9f274e9eee970c94907fc1b01ad70fdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "c737c03deda5ac5186db9d9fedecae41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02a4ef92d711ec1ff618c\ntitle: Step 43\nchallengeType: 0\ndashedName: step-43\n--description--\nYou also need to update the total price of the cart when the user adds an item Create a calculateTotal method in the ShoppingCart class In that method, declare a subTotal variable and use the reduce method on the items array to calculate the sum of the price property of each item in the array Use total and item as the parameters for your callback Remember to set your initial value in the reduce method --hints--\nYou should create a calculateTotal method in the ShoppingCart class js\nassert isFunction(cart calculateTotal);\nYour calculateTotal method should have a subTotal variable declared with const js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /const\\s+subTotal\\s*=/);\nYour calculateTotal method should use the reduce method on the items array js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /this\\s*\\ \\s*items\\s*\\ \\s*reduce/);\nYour reduce callback should use total and item as the first and second parameter Remember to use arrow function syntax js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>/);\nYour reduce callback should return the sum of total and item price Use an implicit return js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\ price\\s*\\+\\s*total)/);\nYour reduce call should have an initial value of 0 js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /this\\s*\\ \\s*items\\s*\\ \\s*reduce\\s*\\(\\s*\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "adead21821d69ffd6cf7112eb09288e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "use total and item as the first and second parameter Remember to use arrow function syntax js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>/); Your reduce callback should return the sum of total and item price Use an implicit return js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\ price\\s*\\+\\s*total)/); Your reduce call should have an initial value of 0 js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /this\\s*\\ \\s*items\\s*\\ \\s*reduce\\s*\\(\\s*\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\price\\s*\\+\\s*total)\\s*,\\s*0\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "b81826b098568f26053a7cef07a641a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "4000689cfdb9471cd08db6476e6eb038",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "84d67652e0941d095f528e6264972ead",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "e8565a668614ecead30983449cd0a7fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "c7a34c1efa0935091a3125d143c4c92f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- --fcc-editable-region-- }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event targetid), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 272,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "5fe5b0f11f4c11dd2683513e0bfabb9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02bdeb9b428208b97eb6b\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nYour calculateTaxes method should return the value of the taxRate (divided by 100, to convert it to a percent) multiplied by the amount parameter For clarity, wrap the taxRate / 100 calculation in parentheses --hints--\nYou should divide the taxRate by 100 in your calculateTaxes method Remember to use the this keyword js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /this\\s*\\ \\s*taxRate\\s*\\/\\s*100/);\nYou should wrap the this taxRate / 100 calculation in parentheses js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)/);\nYou should multiply the amount parameter by the taxRate divided by 100 in your calculateTaxes method js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /amount\\s*\\*\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)|\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount/);\nYour calculateTaxes method should return the value of the taxRate (divided by 100, to convert it to a percent) multiplied by the amount parameter js\nassert equal(cart calculateTaxes(10), (cart",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "d960417907a5d380dbaab7302a57af22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "should wrap the this taxRate / 100 calculation in parentheses js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)/); You should multiply the amount parameter by the taxRate divided by 100 in your calculateTaxes method js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /amount\\s*\\*\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)|\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount/); Your calculateTaxes method should return the value of the taxRate (divided by 100, to convert it to a percent) multiplied by the amount parameter js assert equal(cart calculateTaxes(10), (carttaxRate / 100) * 10);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "0bf160573872c7bffcd5a2bf1e628283",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "6133d0e67756f4affdd9717771d81677",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "59acf773fc8ab443fdedbcecbe0f0ae3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "5e3da4e2ccdcae923ec413114dbc41b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "a748ddca4bd6849b922fb63f0371d5f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- calculateTaxes(amount) { } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); } }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); }) } ); cartBtn addEventListener(\"click\", () => { isCartShowing = isCartShowing; showHideCartSpantextContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "467724972c37d47a28c5e6cd4f3de4a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0311f5ea9382388d6124f\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nThe issue with toFixed() returning a string is that you want to be able to perform calculations with the tax rate To fix this, you can pass the toFixed() call (including the calculation) to the parseFloat() function This will convert the fixed string back into a number, preserving the existing decimal places Pass your toFixed() call to parseFloat() --hints--\nYou should pass your entire calculation (excluding the return statement) to parseFloat() js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*parseFloat\\(\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\ \\s*toFixed\\s*\\(\\s*2\\s*\\)\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "df45bbcab473c483639c8879a3eb709d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "b850f3871f36e8e8ace1540839139455",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "5d5a26389ddcbaa123e15a2102996213",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "2ce252bdd7a2c087208837044b55b066",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn ((this taxRate / 100) * amount) toFixed(2);\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4ef468fac00c28496d69cc7b0c28e886",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- calculateTaxes(amount) { return ((this taxRate / 100) * amount) toFixed(2); } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); } }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); }) } ); cartBtnaddEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "543538f01c17e5c741f25d4e9bd35bf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f033fdb1fbcc254999fcc3\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nYour cart currently isn't visible on the webpage To make it visible, start by adding an event listener to the cartBtn variable, listening for the click event The callback does not need any parameters --hints--\nYou should add an event listener to the cartBtn variable js\nassert match(code, /cartBtn\\s*\\ \\s*addEventListener\\s*\\(/);\nYou should listen for a click event on the cartBtn variable js\nassert match(code, /cartBtn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*/);\nYou should add an empty callback function (using arrow syntax) to the event listener Remember that it does not need any parameters js\nassert match(code, /cartBtn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ae253ebbf57b79f35ec47fa6a7b1f353",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; }dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "81f128f3900d5485a9c803b18b90e0c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "f81d264e7639250bf4f66b22a45aeaad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "f67dfb87300f51a4ee0399b02760fb8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "c82c3b2eb27b14f841820195165eafa8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02c6e18773921ba50aa53\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nBecause of the way computers store and work with numbers, calculations involving decimal numbers can result in some strange behavior For example, 0 1 + 0 2 is not equal to 0 3 This is because computers store decimal numbers as binary fractions, and some binary fractions cannot be represented exactly as decimal fractions We want to clean up the number result from your calculation Wrap your calculation in parentheses (don't include the return statement ) and call the toFixed() method on it Pass the toFixed() method the number 2 as an argument This will round the number to two decimal places and return a string --hints--\nYou should wrap your calculation in parentheses js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)/)\nYou should call the toFixed() method on your calculation js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\ \\s*toFixed\\(/)\nYou should pass the toFixed() method the number 2 as an argument js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "bfd11c455875e6514edcd87365c625d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "as an argument This will round the number to two decimal places and return a string --hints-- You should wrap your calculation in parentheses js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)/) You should call the toFixed() method on your calculation js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\ \\s*toFixed\\(/) You should pass the toFixed() method the number 2 as an argument js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\\\s*toFixed\\s*\\(\\s*2\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "7ca0e872498bbde3e4b214be63a0606c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "023707998dd1b749a818b54d2fd8296e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "cb2fe3877ae828c4e34ea533fbdeb653",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "b7c060cad36726875ff2ecbd07e43c0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn (this taxRate / 100) * amount;\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "7ee62cd82e2a75a7620fc292c1ee87d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- calculateTaxes(amount) { return (this taxRate / 100) * amount; } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + itemprice, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "b9a3dc725c8115e668517d9527d34bdc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03446c2ed3e264be6c7fc\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nStart by inverting the value of isCartShowing Remember that you can use the logical not operator to invert the value of a boolean Assign the inverted value to isCartShowing --hints--\nYou should invert the value of isCartShowing js\nassert match(code, / isCartShowing/);\nYou should assign the inverted value of isCartShowing to isCartShowing js\nassert match(code, /isCartShowing\\s*=\\s* isCartShowing/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "cbeb9b36574e402309bf2391a5af0a7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "d9bf9f8b6c5e162dfe6480b380b77c7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "f9d9453326d1ac99936dac305d296d06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "56cc3c3d1e709798b72d1a2ec1ad5a25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6845fce30859279d893a796782d12ac2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0348a54a177272071a595\ntitle: Step 39\nchallengeType: 0\ndashedName: step-39\n--description--\nNow assign the textContent of the showHideCartSpan variable the result of a ternary expression which checks if isCartShowing is true If it is, set the textContent to \"Hide\", otherwise set it to \"Show\" --hints--\nYou should use the assignment operator on the textContent property of the showHideCartSpan variable js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*/)\nYou should use ternary syntax to check if isCartShowing is true js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*/)\nYou should set the textContent of the showHideCartSpan variable to \"Hide\" if isCartShowing is true js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)Hide\\1\\s*:\\s*/)\nYou should set the textContent of the showHideCartSpan variable to \"Show\" if isCartShowing is false js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)Hide\\1\\s*:\\s*('|\"|`)Show\\2/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "994bddb3dfe1e94e33cd99cbf1f643fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "to \"Show\" if isCartShowing is false js assert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)Hide\\1\\s*:\\s*('|\"|`)Show\\2/) --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "aab2a4c318633b072890fa1647e99851",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "7c7c65791b1babb4743fb1c0f9cf7465",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "99c02af173396d06f88cc7c63f679a3d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "2d1cf97d11a2d43a1a60251d7a38bba0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainerinnerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "256adf447bfb1aac0ad8b92487a84818",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f034d012f74627ce538d3a\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nFinally, update the display property of the style object of the cartContainer variable to another ternary which checks if isCartShowing is true If it is, set the display property to \"block\", otherwise set it to \"none\" Now you should be able to see your cart and add items to it --hints--\nYou should access the display property of the style property of the cartContainer variable js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display/)\nYou should use the assignment operator on the display property of the style property of the cartContainer variable js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*/)\nYou should use ternary syntax to check if isCartShowing is true js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*/)\nYou should set the display property of the style property of the cartContainer variable to \"block\" if isCartShowing is true js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)block\\1\\s*:\\s*/)\nYou should set the display property of the style property of the cartContainer variable to \"none\" if isCartShowing is false js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "93ade4d40688deec61a0f077e585978f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*/) You should use ternary syntax to check if isCartShowing is true js assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*/) You should set the display property of the style property of the cartContainer variable to \"block\" if isCartShowing is true js assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)block\\1\\s*:\\s*/) You should set the display property of the style property of the cartContainer variable to \"none\" if isCartShowing is false js assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\\\s*('|\"|`)block\\1\\s*:\\s*('|\"|`)none\\2/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "aa6456f847d69d09daa626444859bb86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; }dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "9521c9edac4b513b9f82b66c3e395a25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "fc1db32495268ad56a9b596cfbb51a5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "81620ef44399375d56c7624c4e64d4ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "d9c9fda4dc39dc03ca5f709acbec26e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f036ec91fdf238c90665f5\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nUpdate the total value to be the sum of the subTotal and tax values --hints--\nYou should update the total value Remember to use the this keyword js\nassert match(cart calculateTotal toString(), /this\\ total/);\nYou should set the total value to be the sum of the subTotal and tax values js\nassert match(cart calculateTotal toString(), /this\\ total\\s*=\\s*(subTotal\\s*\\+\\s*tax|tax\\s*\\+\\s*subTotal)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2596170c6425e5c86f6b2808adc91a99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "26a2a2f7057d2bc128b4e9fd5a400e51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "b64d76caa3e187cc500280a9b8a39f0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "dd49107d0a03c674c5636edec71404d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "4d9df7a9278be90726a831491b07c35e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03686c5ea863533ec71f4\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nDeclare a variable tax and assign it the value of calling your new calculateTaxes() method, passing subTotal as the argument --hints--\nUse const to declare a variable named tax js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /const\\s+tax\\s*=/);\nAssign the value of calling your new calculateTaxes() method, passing subTotal as the argument, to the tax variable Remember to use the this keyword js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /const\\s+tax\\s*=\\s*this\\s*\\ \\s*calculateTaxes\\s*\\(\\s*subTotal\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "32e663f8753800fec64603f4b955935b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "7c6bad5445b00c184b50cdf9dda34e77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "83ca74d0719000ed007253a2f0f4d72b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "45d329367af1ec8a34ff133e04b0a440",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "7d5b9c937272061743f417489a4a4802",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p>${price}</p> </div> `; } getCounts() { return this items length; } calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); } --fcc-editable-region-- }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); }) } ); cartBtnaddEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 205,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "5c4c52edb75c2598b856e438019e4ea1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0370b340915399d31e5eb\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nYou're going to update the HTML in this method as well Set the textContent of the cartSubTotal to be the value of subTotal to a fixed 2 decimal places Use template literal syntax to add the dollar sign to the beginning of the value --hints--\nYou should access the textContent property of the cartSubTotal element js\nassert match(cart calculateTotal toString(), /cartSubTotal\\ textContent/);\nYou should call the toFixed() method on the subTotal variable, passing 2 as the argument js\nassert match(cart calculateTotal toString(), /subTotal\\ toFixed\\(\\s*2\\s*\\)/);\nYou should use template literal syntax to add the dollar sign before your toFixed() call js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /`\\$\\$\\{subTotal\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should set the textContent of the cartSubTotal element to your template string js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /cartSubTotal\\ textContent\\s*=\\s*`\\$\\$\\{subTotal\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "50a79853dbd49e2e9a787c55c8ec9f1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "string js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /cartSubTotal\\ textContent\\s*=\\s*`\\$\\$\\{subTotal\\ toFixed\\(\\s*2\\s*\\)\\}\\`/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "e1c5e9b51ee77d057afcdf9544097032",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "52e45478a51e3bf685269d13108b101a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d7e8db5612c15350512313885fc7733c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "dbd942c2b3146225787f8ddd9ba24e07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3036fd599eb278e434166c85d587dca1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0378e173e3c3b7638b528\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nFinally, return the value of the total property Remember your this keyword --hints--\nYour calculateTotal method should return the value of the total property js\nassert equal(cart calculateTotal(), 0);\ncart addItem(1, products);\nassert approximately(cart calculateTotal(), 14 06, 0 1);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8b0a64ec396cae2c63469f8c8f9e8968",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "02de64d28778aa3a875b237919a22f3a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "1287ced1698c6ad584d22522ed8a418d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "43c1667e0b041581700a24fd51902c06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "d6a97d1a6cfc9252921fc3dc2b502a0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0374d5351223a747c301d\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nFollowing the same pattern as your cartSubTotal, update the cartTaxes to display the tax value, and your cartTotal to display the total property --hints--\nYou should access the textContent property of the cartTaxes element js\nassert match(cart calculateTotal toString(), /cartTaxes\\ textContent/);\nYou should call the toFixed() method on the tax variable, passing 2 as the argument js\nassert match(cart calculateTotal toString(), /tax\\ toFixed\\(\\s*2\\s*\\)/);\nYou should use template literal syntax to add the dollar sign before your toFixed() call js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /`\\$\\$\\{tax\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should set the textContent of the cartTaxes element to tax toFixed template string js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /cartTaxes\\ textContent\\s*=\\s*`\\$\\$\\{tax\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should access the textContent property of the cartTotal element js\nassert match(cart calculateTotal toString(), /cartTotal\\ textContent/);\nYou should call the toFixed() method on the total variable, passing 2 as the argument Remember to use the this keyword js\nassert match(cart calculateTotal toString(), /this\\ total\\ toFixed\\(\\s*2\\s*\\)/);\nYou should use template literal syntax to add the dollar sign before your toFixed() call js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /`\\$\\$\\{this\\ total\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should set the textContent of the cartTotal element to your total toFixed template string js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /cartTotal\\ textContent\\s*=\\s*`\\$\\$\\{this\\ total\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "fd3b1a565ee8268edcc559ab4f180bfb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "method on the total variable, passing 2 as the argument Remember to use the this keyword js assert match(cart calculateTotal toString(), /this\\ total\\ toFixed\\(\\s*2\\s*\\)/); You should use template literal syntax to add the dollar sign before your toFixed() call js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /`\\$\\$\\{this\\ total\\ toFixed\\(\\s*2\\s*\\)\\}\\`/); You should set the textContent of the cartTotal element to your total toFixed template string js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /cartTotal\\ textContent\\s*=\\s*`\\$\\$\\{this\\ total\\toFixed\\(\\s*2\\s*\\)\\}\\`/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "d4309163911617053b5db22e41e12f58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "ba2dc8347e840115b48926bc7deb4273",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "3e1443cc9f2fdebf0205dbe46ddc35d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "84bd669322eaaf9ff0853dd16cb79009",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "0ae38d260ab4c7cffe2e1dcd8764551a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); const tax = this calculateTaxes(subTotal); this total = subTotal + tax; cartSubTotal textContent = $${subTotal toFixed(2)}; } --fcc-editable-region-- }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btnaddEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "769e203d55515d02edb3fa9e0fbfe687",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f038a0ae041d3c5b0cdf23\ntitle: Step 54\nchallengeType: 0\ndashedName: step-54\n--description--\nYour last feature is to allow users to clear their cart Add a clearCart() method to your ShoppingCart class --hints--\nYour ShoppingCart class should have a clearCart method js\nassert isFunction(cart clearCart);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "9b41953f6a811b105211b26f3cf47a20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0711b1c8af8deab5113f48a54474ba58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a5c40d327321278dcc421f4780bac20b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "d692b3a877235a32d0a5f63e75024436",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\n--fcc-editable-region--\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "54d3423ba86edd8b84bebbc9c2dee704",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f038e671d3f73d5a041973\ntitle: Step 55\nchallengeType: 0\ndashedName: step-55\n--description--\nThe first thing you should do is check if the items array is empty If it is, display an alert to the user with the text Your shopping cart is already empty, then return from the function Remember that 0 is a falsy value, so you can use the operator to check if the array is empty After displaying the alert, return from the function to stop execution --hints--\nYou should create an if statement that checks if the items array is empty, using the negation operator js\nassert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)/);\nYour if statement should display an alert to the user with the text Your shopping cart is already empty js\nassert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*/);\nYour if statement should return from the function js\nassert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*; \\s*return\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "a5204ee00c57fc2917f896797885acd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "checks if the items array is empty, using the negation operator js assert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)/); Your if statement should display an alert to the user with the text Your shopping cart is already empty js assert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*/); Your if statement should return from the function js assert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*; \\s*return\\s*;\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "73781aecd158d487688fe78c20644be6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "d27f569cae47929039205f87d9e56782",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "f92e3384cb178269c6a63f8498797dee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "eba0a7a0a80c6300c6cc3eb169a201ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "9f10051ce5811d661e4aaa74d8e0f28e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- clearCart() { } --fcc-editable-region-- calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); const tax = this calculateTaxes(subTotal); this total = subTotal + tax; cartSubTotal textContent = $${subTotal toFixed(2)}; cartTaxes textContent = $${tax toFixed(2)}; cartTotal textContent = $${this total toFixed(2)}; return thistotal;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c03e964965c4751915b575d5cb1de0ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f039dbcef7673e4e758fa3\ntitle: Step 56\nchallengeType: 0\ndashedName: step-56\n--description--\nBrowsers have a built-in confirm() function which displays a confirmation prompt to the user confirm() accepts a string, which is the message displayed to the user It returns true if the user confirms, and false if the user cancels Declare a variable isCartCleared and assign it the value of calling confirm() with the string \"Are you sure you want to clear all items from your shopping cart \" --hints--\nYou should use const to declare the isCartCleared variable js\nconst afterClearCart = code split('clearCart()')[1];\nassert match(afterClearCart, /const\\s+isCartCleared\\s*=/);\nYou should call the confirm() function js\nassert match(cart clearCart toString(), /confirm\\s*\\(/);\nYou should pass the string Are you sure you want to clear all items from your shopping cart to the confirm() function js\nassert match(cart clearCart toString(), /confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\ \\1\\s*\\)/);\nYou should assign the value of the confirm() function to the isCartCleared variable js\nassert match(cart clearCart toString(), /isCartCleared\\s*=\\s*confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "81cfb019f27c07fcc7717da3fd9969ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "match(cart clearCart toString(), /confirm\\s*\\(/); You should pass the string Are you sure you want to clear all items from your shopping cart to the confirm() function js assert match(cart clearCart toString(), /confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\ \\1\\s*\\)/); You should assign the value of the confirm() function to the isCartCleared variable js assert match(cart clearCart toString(), /isCartCleared\\s*=\\s*confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\\\1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "733188e767a5a7c0f67354c16a9f37be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "d47555d88a7dc0219764e1b0c1350500",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "c278a74e04b109ca46a79b5cb62b6070",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "138ec1aa6ecc57b4843e2d66c77f4b41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "c977cda046a6575241f20d47ea5268e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03a7143a6ef3f7f3344f0\ntitle: Step 57\nchallengeType: 0\ndashedName: step-57\n--description--\nYou only want to clear the cart if the user confirms the prompt Create an if statement that checks if the user confirmed the prompt In the if statement, set the items property back to an empty array, then set the total property to 0 --hints--\nYou should create an if statement that checks if the user confirmed the prompt Remember that you can check the truthiness of isCartCleared directly js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)/);\nYour if statement should set the items property back to an empty array js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]/);\nYour if statement should set the total property to 0 js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]\\s*; \\s*this\\s*\\ \\s*total\\s*=\\s*0\\s*; \\s*}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "d4b4343883c220e1ba2847885af2d84d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "to 0 js assert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]\\s*; \\s*this\\s*\\ \\s*total\\s*=\\s*0\\s*; \\s*}/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "f5b0a54a5a0665fc7c681d13819035f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "4022c0d4a653f5d226ec421fbf0beddf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "2333e18c1e597f4cb058e18ab97b3534",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "6499a2aeed2f1443a0d40338df1abed5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "c254aef991108b0fa9c045287ab86192",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03af535682e4138fdb915\ntitle: Step 59\nchallengeType: 0\ndashedName: step-59\n--description--\nSet the textContent of the totalNumberOfItems, cartSubTotal, cartTaxes, and cartTotal elements all to the number 0 --hints--\nYou should set the textContent of the totalNumberOfItems element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /totalNumberOfItems\\ textContent\\s*=\\s*0/);\nYou should set the textContent of the cartSubTotal element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /cartSubTotal\\ textContent\\s*=\\s*0/);\nYou should set the textContent of the cartTaxes element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /cartTaxes\\ textContent\\s*=\\s*0/);\nYou should set the textContent of the cartTotal element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /cartTotal\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "6f7311d72f3e0646af12f8c0325c69d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartSubTotal element to 0 js const secondIf = cart clearCart toString() split('if')[2]; const inIf = secondIf split('}')[0]; assert match(inIf, /cartSubTotal\\ textContent\\s*=\\s*0/); You should set the textContent of the cartTaxes element to 0 js const secondIf = cart clearCart toString() split('if')[2]; const inIf = secondIf split('}')[0]; assert match(inIf, /cartTaxes\\ textContent\\s*=\\s*0/); You should set the textContent of the cartTotal element to 0 js const secondIf = cart clearCart toString() split('if')[2]; const inIf = secondIf split('}')[0]; assert match(inIf, /cartTotal\\textContent\\s*=\\s*0/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "b184e1fb08d208a46a1d4d568c6c27f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "cd381cbf1586faf0f66e7a53f4e26198",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "3ebac65a15af6b3f3a7caf856b57dd0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "6f290f35497dfd0f6503b85d2db8fb22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis total = 0;\nproductsContainer innerHTML = \"\";\n}\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "58e97c6776eb79fc32f779e9827793c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ if ( this items length) { alert(\"Your shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; this total = 0; productsContainer innerHTML = \"\"; } } --fcc-editable-region-- calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = this items reduce((total, item) => total + itemprice, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "a25ec2991e86647dd27f4ff333c7e622",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03ac2b428b2404a5a7518\ntitle: Step 58\nchallengeType: 0\ndashedName: step-58\n--description--\nYou also need to start clearing the HTML Set the innerHTML property of the productsContainer back to an empty string --hints--\nIn your if statement, you should set the innerHTML property of the productsContainer back to an empty string js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]\\s*; \\s*this\\s*\\ \\s*total\\s*=\\s*0\\s*; \\s*productsContainer\\ innerHTML\\s*=\\s*('|\"|`)\\1\\s*; \\s*}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "51c960d9d1b389749478dde6e0abac59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "3d79a8c6b18631dabf780b80c55a99d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "ad303f0dd3aaf3c3997cfe6106444706",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "493a6bbe9a0f8ddf6953fb689306aadf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis total = 0;\n}\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "84b64f3d815734441a79a1abdd10efdc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "( this items length) { alert(\"Your shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; this total = 0; } } --fcc-editable-region-- calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); const tax = thiscalculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "794a3145c6afb19ad9bf6f88e50a7c13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c63bfa4685e4e3843fa0dc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c63bfa4685e4e3843fa0dc\ntitle: Step 1\nchallengeType: 1\ndashedName: step-1\n--description--\nIn this workshop, you will continue to learn about arrays by building a grocery shopping list.\nStart by adding a console.log that logs the string \"Grocery shopping list\" to the console.\n--hints--\nYou should have a console.log in your code.\njs\nassert.match(code, /console\\.log(.*)/);\nYour console.log should output the message \"Grocery shopping list\". Double check for spelling and capitalization errors.\njs\nassert.match(code, /console\\.log\\(([\"'])(Grocery\\s+shopping\\s+list)\\1\\)/);\n--seed--\n--seed-contents--\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c63bfa4685e4e3843fa0dc.md",
      "source_type": "git_repo"
    },
    "token_count": 181,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6ccf62297e38b4bfe61ef94dec40a7d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c64210413532ee9d3bd342.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c64210413532ee9d3bd342\ntitle: Step 3\nchallengeType: 1\ndashedName: step-3\n--description--\nFor this next portion of the workshop, you will practice adding food items to the grocery list.\nStart by using console.log to log the message \"It will be nice to have some fruit to eat.\".\n--hints--\nYou should log the message \"It will be nice to have some fruit to eat.\" to the console.\njs\nassert.match(code, /console\\.log\\s*\\(\\s*(['\"])(It\\s+will\\s+be\\s+nice\\s+to\\s+have\\s+some\\s+fruit\\s+to\\s+eat\\.)\\1\\s*\\)\\s*;?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 700,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c64210413532ee9d3bd342.md",
      "source_type": "git_repo"
    },
    "token_count": 200,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8a1f4acec337a4790ac624bfdad89eb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c644c08ebcd2ef90c750bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c644c08ebcd2ef90c750bd\ntitle: Step 4\nchallengeType: 1\ndashedName: step-4\n--description--\nIn the previous lectures, you learned how to add items to the end of an array using the push method like this:\njs\nfruits.push('pear');\nUsing the push method, add the string \"Apples\" to the shoppingList array.\n--hints--\nYour shoppingList array should have one item in it.\njs\nassert.lengthOf(shoppingList, 1);\nYour shoppingList array should have the string \"Apples\" in it. Double check for spelling and capitalization errors.\njs\nassert.includeMembers(shoppingList, ['Apples']);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c644c08ebcd2ef90c750bd.md",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5b2dca678fa7af1ac88d806f80967cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c64095f61166ede6e39a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c64095f61166ede6e39a84\ntitle: Step 2\nchallengeType: 1\ndashedName: step-2\n--description--\nFor this shopping list, you will use an array to represent the items you need to buy.\nIn the previous lectures, you learned how to create arrays like this:\njs\nconst fruits = ['apple', 'banana', 'orange'];\nIn this step, create a variable called shoppingList and assign it an empty array.\n--hints--\nYou should have a variable called shoppingList.\njs\nassert.isNotNull(shoppingList);\nYou should assign an array to the shoppingList variable.\njs\nassert.isArray(shoppingList);\nYour array should be empty.\njs\nassert.isEmpty(shoppingList);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 817,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c64095f61166ede6e39a84.md",
      "source_type": "git_repo"
    },
    "token_count": 190,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d5df356e8ffe80330b1eab9705c7b224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c645b345a39bf04864dc50.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c645b345a39bf04864dc50\ntitle: Step 5\nchallengeType: 1\ndashedName: step-5\n--description--\nTo see the updated shopping list, you will need to log the current shopping list and a short message to the console.\nSince this message will be used repeatedly throughout the workshop, it is best to create a reusable function.\nCreate a function called getShoppingListMsg that takes an array as a parameter and returns the string \"Current Shopping List: \" followed by the contents of the provided array.\nYou can use template literals or string concatenation with the + operator to combine the string with the array passed to the function.\n--hints--\nYou should have a function called getShoppingListMsg in your code.\njs\nassert.isFunction(getShoppingListMsg);\nYour getShoppingListMsg function should return a string.\njs\nassert.isString(getShoppingListMsg(shoppingList));\nYour getShoppingListMsg function should accept an array as an argument.\njs\nassert.strictEqual(getShoppingListMsg([\"Anchovies\", \"Olives\"]), \"Current Shopping List: Anchovies,Olives\");\nYour getShoppingListMsg function should accept an array and return the message \"Current Shopping List: \" followed by the contents of that array. Double check spacing and spelling errors.\njs\nassert.strictEqual(getShoppingListMsg([\"Apples\"]), \"Current Shopping List: Apples\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c645b345a39bf04864dc50.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1f8767cd0ee2db5457ffe765dba40326",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c64ad16796c7f2419b45c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c64ad16796c7f2419b45c5\ntitle: Step 8\nchallengeType: 1\ndashedName: step-8\n--description--\nNow it is time to start adding items to the top of the grocery list.\nStart by adding a console.log that logs the message \"It looks like we need to get some cooking oil.\" to the console.\n--hints--\nYou should log the message \"It looks like we need to get some cooking oil.\" to the console.\njs\nassert.match(code, /console\\.log\\((['\"])(It\\s+looks\\s+like\\s+we\\s+need\\s+to\\s+get\\s+some\\s+cooking\\s+oil\\.)\\1\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c64ad16796c7f2419b45c5.md",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1a53523cf91826cead7999eca3114dd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f6721d5110af243ef8f3d9\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nNow call your calculateTotal() method inside your forEach loop --hints--\nYou should call cart calculateTotal() inside your forEach loop js\nconst afterForEach = code split('[ addToCartBtns] forEach(')[1];\nassert match(afterForEach, /cart\\ calculateTotal\\(\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "6e4979bdacb5df63518145d9892ff880",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "25d0c61e451b3dd66b3dbb012c9fe03d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "32096700bbfe0b177901d949a087e836",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "ac2746b8bf133b06fb6e85a5fc7b2fd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "9f96646d21c002aad45c52324e5b140c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c6491fe4c8e0f16845425f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c6491fe4c8e0f16845425f\ntitle: Step 7\nchallengeType: 1\ndashedName: step-7\n--description--\nNow it is time to add another fruit to the list.\nUsing the same array method as earlier, add the string \"Grapes\" to the end of the shoppingList array.\nThen, add a console.log and call the getShoppingListMsg function inside of the console.log to see the updated list logged to the console.\n--hints--\nYour shoppingList array should now contain two items.\njs\nassert.lengthOf(shoppingList, 2);\nYour shoppingList array should contain the string \"Grapes\".\njs\nassert.equal(shoppingList[1], \"Grapes\");\nYou should call getShoppingListMsg(shoppingList) function inside of the console.log.\njs\nassert.lengthOf(code.match(/console\\.log\\(\\s*getShoppingListMsg\\(\\s*shoppingList\\s*\\)\\s*\\)/g), 2);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1217,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c6491fe4c8e0f16845425f.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0f240a7b10c09e1b9e976bb58f4cf9c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c726c34ecf1e238aa9d7d5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c726c34ecf1e238aa9d7d5\ntitle: Step 9\nchallengeType: 1\ndashedName: step-9\n--description--\nIn the lectures, you learned how to add elements to the beginning of an array using the unshift() method.\nHere is a reminder of how to use the unshift() method:\njs\narray.unshift(item1, item2, ..., itemX);\nUse the unshift() method to add the string \"Vegetable Oil\" to the beginning of the shoppingList array.\n--hints--\nYou should have three items in your shoppingList array.\njs\nassert.lengthOf(shoppingList, 3);\nYou should use the unshift() method to add \"Vegetable Oil\" to the beginning of the shoppingList array.\njs\nassert.equal(shoppingList[0], \"Vegetable Oil\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1239,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c726c34ecf1e238aa9d7d5.md",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6216d122948fc0052374a43881dd9acf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c72b0ffbc5522525768558.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c72b0ffbc5522525768558\ntitle: Step 11\nchallengeType: 1\ndashedName: step-11\n--description--\nIn earlier steps, you reviewed how to add an item to the end of the array using the push method.\nBut the push method accepts multiple arguments, so you can add multiple items to the end of the array like this:\njs\narray.push(item1, item2, item3);\nIn this step, use the push method to add the strings \"Popcorn\", \"Beef Jerky\", \"Potato Chips\" to the shoppingList array.\nThe order is important, so make sure to add the items in the order they are listed.\n--hints--\nYour shoppingList array should have a total of 6 strings.\njs\nassert.lengthOf(shoppingList, 6);\nYour shoppingList should have the string \"Popcorn\".\njs\nassert.strictEqual(shoppingList[3], \"Popcorn\");\nYour shoppingList should have the string \"Beef Jerky\".\njs\nassert.strictEqual(shoppingList[4], \"Beef Jerky\");\nYour shoppingList should have the string \"Potato Chips\".\njs\nassert.strictEqual(shoppingList[5], \"Potato Chips\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1671,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c72b0ffbc5522525768558.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cc8e3c0ade54e7d1c9c57cf20e85c829",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c72a55418cc9247b710827.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c72a55418cc9247b710827\ntitle: Step 10\nchallengeType: 1\ndashedName: step-10\n--description--\nNext, add a console.log and call the getShoppingListMsg function inside of the console.log to see the updated list logged to the console.\n--hints--\nYou should call getShoppingListMsg(shoppingList) inside of the console.log.\njs\nassert.lengthOf(code.match(/console\\.log\\(\\s*getShoppingListMsg\\(\\s*shoppingList\\s*\\)\\s*\\)/g), 3);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1015,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c72a55418cc9247b710827.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ce1f776ab28d7adbfa77dd43b66691bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c730183f4020275cbf0611.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c730183f4020275cbf0611\ntitle: Step 13\nchallengeType: 1\ndashedName: step-13\n--description--\nFor this next portion of the workshop, you will review how to remove items from the end of the array.\nStart by adding a console.log that logs the message \"This looks like too much junk food.\".\n--hints--\nYou should log the message \"This looks like too much junk food.\".\njs\nassert.match(code, /console\\.log\\((['\"])(This\\s+looks\\s+like\\s+too\\s+much\\s+junk\\s+food.)\\1\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole.log(getShoppingListMsg(shoppingList));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1210,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c730183f4020275cbf0611.md",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "044b76979e58fa0cfd5d4c83f0160fdb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c730ee6ae076281721d0b9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c730ee6ae076281721d0b9\ntitle: Step 14\nchallengeType: 1\ndashedName: step-14\n--description--\nIn the previous lectures, you learned how to remove items from the end of an array using the pop method.\nHere is a reminder of how to use the pop method:\n```js\nlet array = [1, 2, 3, 4, 5];\narray.pop();\n// [1, 2, 3, 4]\nconsole.log(array);\n```\nUse the pop method to remove the last item from the shoppingList array.\n--hints--\nYour shoppingList array should now have 5 items in it.\njs\nassert.lengthOf(shoppingList, 5);\nYour shoppingList array should no longer have the string \"Potato Chips\" in it.\njs\nassert.notInclude(shoppingList, \"Potato Chips\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"This looks like too much junk food.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1465,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c730ee6ae076281721d0b9.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e7f496ca4d60921d365a8e0a3f07dd69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c72f4d0528bd268a82107b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c72f4d0528bd268a82107b\ntitle: Step 12\nchallengeType: 1\ndashedName: step-12\n--description--\nNow it is time to log the updated shoppingList array to the console.\nAdd another console.log and call the getShoppingListMsg function inside of the console.log to see the updated list logged to the console.\n--hints--\nYou should call getShoppingListMsg(shoppingList) inside of the console.log.\njs\nassert.lengthOf(code.match(/console\\.log\\(\\s*getShoppingListMsg\\(\\s*shoppingList\\s*\\)\\s*\\)/g), 4);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1195,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c72f4d0528bd268a82107b.md",
      "source_type": "git_repo"
    },
    "token_count": 293,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bf54cbfdc3fdb605284d5d45455a547e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73a0c5b264f2a75164d94.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c73a0c5b264f2a75164d94\ntitle: Step 15\nchallengeType: 1\ndashedName: step-15\n--description--\nNow it is time to log the updated shoppingList array to the console.\nAdd a console.log and call the getShoppingListMsg function inside of the console.log to see the updated list logged to the console.\n--hints--\nYou should call getShoppingListMsg(shoppingList) inside of the console.log.\njs\nassert.lengthOf(code.match(/console\\.log\\(\\s*getShoppingListMsg\\(\\s*shoppingList\\s*\\)\\s*\\)/g), 5);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"This looks like too much junk food.\");\nshoppingList.pop();\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1310,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73a0c5b264f2a75164d94.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2a8470187821cbc536ccb14f7a8239f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73fa7433e082c4be096b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c73fa7433e082c4be096b1\ntitle: Step 17\nchallengeType: 1\ndashedName: step-17\n--description--\nIn this last part of the workshop, you will review how to remove an item from the beginning of an array.\nStart by adding a console.log that logs the message \"On second thought, maybe we should be more health conscious.\".\n--hints--\nYou should have a console.log that logs the message \"On second thought, maybe we should be more health conscious.\".\njs\nassert.match(code, /console\\.log\\(([\"'])(On\\s+second\\s+thought,\\s+maybe\\s+we\\s+should\\s+be\\s+more\\s+health\\s+conscious\\.)\\1\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"This looks like too much junk food.\");\nshoppingList.pop();\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It might be nice to get a dessert.\");\nshoppingList.unshift(\"Chocolate Cake\");\nconsole.log(getShoppingListMsg(shoppingList));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1583,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73fa7433e082c4be096b1.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7311b5f0310c7fd580688002309f2e15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c74079c30b1c2d166cb9a4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c74079c30b1c2d166cb9a4\ntitle: Step 18\nchallengeType: 1\ndashedName: step-18\n--description--\nIn the lectures, you learned how to remove an item from the beginning of the array using the shift method.\nHere is a reminder of how to use the shift method:\n```js\nconst array = [1, 2, 3, 4, 5];\narray.shift();\n// Result: [2, 3, 4, 5]\nconsole.log(array);\n```\nUse the shift method to remove the first item from the shoppingList array.\n--hints--\nYour shoppingList array should have a total of 5 items.\njs\nassert.lengthOf(shoppingList, 5);\nYou should use the shift method to remove the first item from the shoppingList array.\njs\nassert.strictEqual(shoppingList[0], \"Vegetable Oil\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"This looks like too much junk food.\");\nshoppingList.pop();\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It might be nice to get a dessert.\");\nshoppingList.unshift(\"Chocolate Cake\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"On second thought, maybe we should be more health conscious.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c74079c30b1c2d166cb9a4.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "88045291ce500fbad81dbc73b6df7977",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c742d045c9fc2e09fa64b1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c742d045c9fc2e09fa64b1\ntitle: Step 19\nchallengeType: 1\ndashedName: step-19\n--description--\nThe last change to make to the grocery list is to update the first item in the list.\nIn the previous lectures, you learned how to update an item using bracket notation and the index of the item you want to update.\nHere is a reminder of how to update an item in an array:\n```js\nconst array = [1, 2, 3, 4, 5];\narray[0] = 10;\n// Result: [10, 2, 3, 4, 5]\nconsole.log(array);\n```\nUpdate the first item in the shoppingList array to be \"Canola Oil\".\n--hints--\nYou should update the first item in the shoppingList array to be \"Canola Oil\".\njs\nassert.equal(shoppingList[0], \"Canola Oil\");\nassert.notEqual(shoppingList[1], \"Vegetable Oil\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Grapes\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It looks like we need to get some cooking oil.\");\nshoppingList.unshift(\"Vegetable Oil\");\nconsole.log(getShoppingListMsg(shoppingList));\nshoppingList.push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"This looks like too much junk food.\");\nshoppingList.pop();\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"It might be nice to get a dessert.\");\nshoppingList.unshift(\"Chocolate Cake\");\nconsole.log(getShoppingListMsg(shoppingList));\nconsole.log(\"On second thought, maybe we should be more health conscious.\");\nshoppingList.shift();\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c742d045c9fc2e09fa64b1.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6eb25176e826f516d6a8be761d052bf2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66cbe2319d3845545a293a0b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66cbe2319d3845545a293a0b\ntitle: Step 6\nchallengeType: 1\ndashedName: step-6\n--description--\nNow it is time to see the message logged to the console.\nAdd a console.log and call the getShoppingListMsg function inside of the console.log to see the message logged to the console.\n--hints--\nYou should call the getShoppingListMsg(shoppingList) function inside of the console.log.\njs\nassert.match(code, /console\\.log\\(\\s*getShoppingListMsg\\(\\s*shoppingList\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole.log(\"It will be nice to have some fruit to eat.\");\nshoppingList.push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 831,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66cbe2319d3845545a293a0b.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d1f52d2d96828932d5dd37672c78d754",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73a7798f6f62b2ae58f22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c73a7798f6f62b2ae58f22\ntitle: Step 16\nchallengeType: 1\ndashedName: step-16\n--description--\nNow it is time to add more items to the beginning of the grocery list Start by adding a console log statement that logs the message \"It might be nice to get a dessert \"\nBelow that console statement, use the correct array method to add the string \"Chocolate Cake\" to the beginning of the shoppingList array Finally, add a console log and call the getShoppingListMsg function inside of the console log to see the updated list logged to the console --hints--\nYou should have a console log that logs the message \"It might be nice to get a dessert \" js\nassert match(code, /console\\ log\\((['\"])(It\\s+might\\s+be\\s+nice\\s+to\\s+get\\s+a\\s+dessert\\ )\\1\\)/);\nYour shoppingList array should have a total of 6 items js\nassert lengthOf(shoppingList, 6);\nYou should use the unshift method to add the string \"Chocolate Cake\" to the beginning of the shoppingList array js\nassert strictEqual(shoppingList[0], \"Chocolate Cake\");\nYou should call getShoppingListMsg(shoppingList) inside of the console log js\nassert lengthOf(code match(/console\\ log\\(\\s*getShoppingListMsg\\(\\s*shoppingList\\s*\\)\\s*\\)/g), 6);\n--seed--\n--seed-contents--\n```js\nconsole log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole log(\"It will be nice to have some fruit to eat \");\nshoppingList push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole log(getShoppingListMsg(shoppingList));\nshoppingList push(\"Grapes\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"It looks like we need to get some cooking oil \");\nshoppingList unshift(\"Vegetable Oil\");\nconsole log(getShoppingListMsg(shoppingList));\nshoppingList push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"This looks like too much junk food \");\nshoppingList pop();\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2112,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73a7798f6f62b2ae58f22.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b5eb8ee242e80fe6d47a7170f2fa0e1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73a7798f6f62b2ae58f22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--seed-contents-- ```js console log(\"Grocery shopping list\"); const shoppingList = []; console log(\"It will be nice to have some fruit to eat \"); shoppingList push(\"Apples\"); function getShoppingListMsg(arr) { return Current Shopping List: ${arr}; } console log(getShoppingListMsg(shoppingList)); shoppingList push(\"Grapes\"); console log(getShoppingListMsg(shoppingList)); console log(\"It looks like we need to get some cooking oil \"); shoppingList unshift(\"Vegetable Oil\"); console log(getShoppingListMsg(shoppingList)); shoppingList push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\"); console log(getShoppingListMsg(shoppingList)); console log(\"This looks like too much junk food \"); shoppingList pop(); consolelog(getShoppingListMsg(shoppingList));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2112,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c73a7798f6f62b2ae58f22.md",
      "source_type": "git_repo"
    },
    "token_count": 186,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a978784cb24786a15e81bc46454c58e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f63e58ce657ae05908d6c8.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67f63e58ce657ae05908d6c8\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you'll build a simple shopping list app to practice using the useMemo() and useCallback() hooks in React You'll learn how to use these hooks to optimize the performance of your app by memoizing potentially expensive calculations and functions All the basic HTML and CSS you'll need has been provided for you, along with the basic structure of a React component named ShoppingList Within the ShoppingList component, return an empty pair of parentheses for now --hints--\nYou should use the export keyword to export the ShoppingList component js\nassert match(code, /export\\s+(const|let|var|function)\\s+ShoppingList\\s*(=\\s*) \\(\\)\\s*(=>\\s*) \\{\\s*/);\nYou should return an empty pair of round parentheses inside the ShoppingList function js\nassert match(code, /export\\s+(const|let|var|function)\\s+ShoppingList\\s*(=\\s*) \\(\\)\\s*(=>\\s*) \\{\\s*return\\s*\\(\\s*\\)\\s*; \\s*\\}/)\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f63e58ce657ae05908d6c8.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4c1ced38fdd5f3b5aa4926b848ca06d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f63e58ce657ae05908d6c8.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "js assert match(code, /export\\s+(const|let|var|function)\\s+ShoppingList\\s*(=\\s*) \\(\\)\\s*(=>\\s*) \\{\\s*/); You should return an empty pair of round parentheses inside the ShoppingList function js assert match(code, /export\\s+(const|let|var|function)\\s+ShoppingList\\s*(=\\s*) \\(\\)\\s*(=>\\s*) \\{\\s*return\\s*\\(\\s*\\)\\s*; \\s*\\}/) --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) { container {\nwidth: 400px;\n}\n}\n```\n```jsx\n--fcc-editable-region--\nconst { useState } = React;\nexport const ShoppingList = () => {\n};\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f63e58ce657ae05908d6c8.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "460f09c2fa774df615bd88a20a8f44c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c748ffdfbe4f2ede268be2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c748ffdfbe4f2ede268be2\ntitle: Step 20\nchallengeType: 1\ndashedName: step-20\n--description--\nIn this final step of the workshop, log the final grocery list to the console To do this, call the getShoppingListMsg function with the shoppingList array as an argument inside console log And with this last step your grocery list is complete --hints--\nYou should call getShoppingListMsg(shoppingList) inside of the console log js\nassert lengthOf(code match(/console\\ log\\(\\s*getShoppingListMsg\\(\\s*shoppingList\\s*\\)\\s*\\)/g), 7);\n--seed--\n--seed-contents--\n```js\nconsole log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole log(\"It will be nice to have some fruit to eat \");\nshoppingList push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole log(getShoppingListMsg(shoppingList));\nshoppingList push(\"Grapes\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"It looks like we need to get some cooking oil \");\nshoppingList unshift(\"Vegetable Oil\");\nconsole log(getShoppingListMsg(shoppingList));\nshoppingList push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"This looks like too much junk food \");\nshoppingList pop();\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"It might be nice to get a dessert \");\nshoppingList unshift(\"Chocolate Cake\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"On second thought, maybe we should be more health conscious \");\nshoppingList shift();\nshoppingList[0] = \"Canola Oil\";\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```js\nconsole log(\"Grocery shopping list\");\nconst shoppingList = [];\nconsole log(\"It will be nice to have some fruit to eat \");\nshoppingList push(\"Apples\");\nfunction getShoppingListMsg(arr) {\nreturn Current Shopping List: ${arr};\n}\nconsole log(getShoppingListMsg(shoppingList));\nshoppingList push(\"Grapes\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"It looks like we need to get some cooking oil \");\nshoppingList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2762,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c748ffdfbe4f2ede268be2.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1b4873c042bc382ca22fdbafa83f0569",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c748ffdfbe4f2ede268be2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Cake\"); console log(getShoppingListMsg(shoppingList)); console log(\"On second thought, maybe we should be more health conscious \"); shoppingList shift(); shoppingList[0] = \"Canola Oil\"; --fcc-editable-region-- --fcc-editable-region-- ``` --solutions-- ```js console log(\"Grocery shopping list\"); const shoppingList = []; console log(\"It will be nice to have some fruit to eat \"); shoppingList push(\"Apples\"); function getShoppingListMsg(arr) { return Current Shopping List: ${arr}; } console log(getShoppingListMsg(shoppingList)); shoppingList push(\"Grapes\"); console log(getShoppingListMsg(shoppingList)); console log(\"It looks like we need to get some cooking oil \"); shoppingListunshift(\"Vegetable Oil\");\nconsole log(getShoppingListMsg(shoppingList));\nshoppingList push(\"Popcorn\", \"Beef Jerky\", \"Potato Chips\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"This looks like too much junk food \");\nshoppingList pop();\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"It might be nice to get a dessert \");\nshoppingList unshift(\"Chocolate Cake\");\nconsole log(getShoppingListMsg(shoppingList));\nconsole log(\"On second thought, maybe we should be more health conscious \");\nshoppingList shift();\nshoppingList[0] = \"Canola Oil\";\nconsole log(getShoppingListMsg(shoppingList));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2762,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list\\66c748ffdfbe4f2ede268be2.md",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "48ac75e35cf97f1dcb62e76f9914de6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f647f3ce657ae05908d6c9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67f647f3ce657ae05908d6c9\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nWithin the return statement of the ShoppingList component, add a div element with a className of container Inside the div, nest an h1 element with the text Shopping List, and below that, nest an empty form element --hints--\nYour ShoppingList component should return a div element with a className of container js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nassert equal(testElem firstElementChild tagName, 'DIV');\nassert isTrue(\n[ testElem firstElementChild classList] includes('container')\n);\n}\nYour div should contain an h1 element with the text Shopping List js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst h1 = testElem querySelector('h1');\nassert exists(h1);\nassert equal(h1 textContent toLowerCase() trim(), 'shopping list');\n}\nYour div should also contain an empty form element js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst form = testElem querySelector('form');\nassert exists(form);\nassert equal(form tagName, 'FORM');\n}\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f647f3ce657ae05908d6c9.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "780d0b904c6314ad64392c89a1ab3533",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f647f3ce657ae05908d6c9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "element js async () => { const testElem = await __helpers prepTestComponent(window index ShoppingList); const form = testElem querySelector('form'); assert exists(form); assert equal(form tagName, 'FORM'); } --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) { container {\nwidth: 400px;\n}\n}\n```\n```jsx\n--fcc-editable-region--\nconst { useState } = React;\nexport const ShoppingList = () => {\nreturn (\n);\n};\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67f647f3ce657ae05908d6c9.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a6cf7b5ca4203f6daf0bae9a6a851a15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03b1ed5ab15420c057463\ntitle: Step 60\nchallengeType: 0\ndashedName: step-60\n--description--\nYour final step is to make your clear button functional Add a click event listener to the clearCartBtn For the callback, you can pass in cart clearCart directly However, doing so will not work, because the context of this will be the clearCartBtn element You need to bind the clearCart method to the cart object You can do this by passing cart clearCart bind(cart) as the callback And with that, the shopping cart workshop is complete --hints--\nYou should add an event listener to your clearCartBtn element js\nassert match(code, /clearCartBtn\\ addEventListener\\(/);\nYour event listener should listen for the click event js\nassert match(code, /clearCartBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,/);\nYour event listener should take cart clearCart bind(cart) as the callback js\nassert match(code, /clearCartBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*cart\\ clearCart\\s*\\ bind\\(\\s*cart\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "52756a4642bf3766622e9614c1481f8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "16546992609ea688247ba501ab4d571a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "7a9098185271f856959eaa0e360196cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "a799c923c989c7744b66e04391ad6824",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "f98bbc3ecec241a63cf01ce55a935915",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } clearCart() { if ( this items length) { alert(\"Your shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; thistotal = 0;\nproductsContainer innerHTML = \"\";\ntotalNumberOfItems textContent = 0;\ncartSubTotal textContent = 0;\ncartTaxes textContent = 0;\ncartTotal textContent = 0;\n}\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "2d5c7f94d8ea980511346f651fa61d64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "textContent = $${subTotal toFixed(2)}; cartTaxes textContent = $${tax toFixed(2)}; cartTotal textContent = $${this total toFixed(2)}; return this total; } }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); cart calculateTotal(); }) } ); cartBtn addEventListener(\"click\", () => { isCartShowing = isCartShowing; showHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\"; cartContainer style display = isCartShowing\"block\" : \"none\";\n});\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "49d9ebe577ddcaeb629265980b8a5263",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "9027faa1647ee714b6f4348df59f17bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "b4acc83d7ec4ab8a265f4a814790ca84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "7f0871e448594ab15763085ddf321658",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis total = 0;\nproductsContainer innerHTML = \"\";\ntotalNumberOfItems textContent = 0;\ncartSubTotal textContent = 0;\ncartTaxes textContent = 0;\ncartTotal textContent = 0;\n}\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "52520fa63ddc0dd35ed80bc76b59e5a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; this total = 0; productsContainer innerHTML = \"\"; totalNumberOfItems textContent = 0; cartSubTotal textContent = 0; cartTaxes textContent = 0; cartTotal textContent = 0; } } calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = thisitems reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\nclearCartBtn addEventListener(\"click\", cart clearCart bind(cart));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "ed973068f9a114a1bd10facc3cce171b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdbea6714f8df73b83c86.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fcdbea6714f8df73b83c86\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nNext, you need to create a state variable, a setter function, and set the initial state with the useState() hook to store the user's input As a reminder, here's how to create a state variable named age, a setter function to update it named setAge, and initialize age to the number 0 with the useState() hook:\njs\nconst [age, setAge] = useState(0);\nAt the top of the ShoppingList component, use the useState() hook to create a state variable named query and a setter function to update it named setQuery Initialize query to an empty string This will be used to store the user's search input --hints--\nYou should create a state variable named query and a setter function named setQuery js\nassert match(code, /(const|let|var)\\s+\\[\\s*query\\s*,\\s*setQuery\\s*\\]\\s*=\\s*useState\\(/);\nThe initial value of query should be an empty string js\nconst queryValue = code match(/( :const|let|var)\\s+\\[\\s*query\\s*,\\s*setQuery\\s*\\]\\s*=\\s*useState\\(\\s*(['\"])( * )\\1\\s*\\)/) [2] null;\nassert typeOf(queryValue, \"string\");\nassert lengthOf(queryValue, 0);\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdbea6714f8df73b83c86.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8c2e428fdc765d7521ec55a84d87078a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdbea6714f8df73b83c86.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "initial value of query should be an empty string js const queryValue = code match(/( :const|let|var)\\s+\\[\\s*query\\s*,\\s*setQuery\\s*\\]\\s*=\\s*useState\\(\\s*(['\"])( * )\\1\\s*\\)/) [2] null; assert typeOf(queryValue, \"string\"); assert lengthOf(queryValue, 0); --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdbea6714f8df73b83c86.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e448b09d444a71aa3692d28f907d896d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdbea6714f8df73b83c86.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nType to filter the list below:\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdbea6714f8df73b83c86.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d2de95df3f8b7e207d1fc688c360ed81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd83e40fa32ca2c6af073.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fcd83e40fa32ca2c6af073\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nNow that you have the basic structure of the app, it's time to add some items and get the search functionality working Create an array and assign it to a variable named items Within the array, add the strings Apples, Bananas, Strawberries, Blueberries, Mangoes, Pineapple, Lettuce, Broccoli, Paper Towels, and Dish Soap This will be the list of items that will be displayed in the app --hints--\nitems is an array js\nassert match(code, /(const|let|var)\\s+items\\s*=\\s*\\[/i);\nYour items array should contain the strings Apples, Bananas, Strawberries, Blueberries, Mangoes, Pineapple, Lettuce, Broccoli, Paper Towels, and Dish Soap ```js\nconst expected = [\n\"Apples\", \"Bananas\", \"Strawberries\", \"Blueberries\", \"Mangoes\",\n\"Pineapple\", \"Lettuce\", \"Broccoli\", \"Paper Towels\", \"Dish Soap\"\n];\nconst itemArrContentsString = code match(/( :const|let|var)\\s+items\\s=\\s[\\s([\\s\\S] )\\s*]/) [1] null;\nconst itemArr = itemArrContentsString itemArrContentsString split(\",\") map(item => item replace(/['\"]/g, \"\")) : [];\nconst normalizeArray = (arr) => arr map((str) => str toLowerCase() replace(/\\W/g, \"\")) filter(Boolean);\nconst normalizedItemArr = normalizeArray(itemArr);\nconst normalizedExpected = normalizeArray(expected);\nassert isTrue(\nnormalizedItemArr length === normalizedExpected length &&\nnormalizedItemArr every((item) => normalizedExpected includes(item))\n);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd83e40fa32ca2c6af073.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2d885e6e718581bed92cb738fc98b8c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd83e40fa32ca2c6af073.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "=> item replace(/['\"]/g, \"\")) : []; const normalizeArray = (arr) => arr map((str) => str toLowerCase() replace(/\\W/g, \"\")) filter(Boolean); const normalizedItemArr = normalizeArray(itemArr); const normalizedExpected = normalizeArray(expected); assert isTrue( normalizedItemArr length === normalizedExpected length && normalizedItemArr every((item) => normalizedExpected includes(item)) ); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 15;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) { container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\n--fcc-editable-region--\n--fcc-editable-region--\nexport const ShoppingList = () => {\nreturn (\nShopping List\nSearch for an item:\nType to filter the list below:\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd83e40fa32ca2c6af073.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a46181ee3947e31bf3e2dde7b4b952ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd561ae787aba05a9d917.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fcd561ae787aba05a9d917\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nWithin the form element, add a label element with the text Search for an item: Next, give the label an htmlFor attribute set to search This will associate the label with an input element you'll add next Below the label, add an input element with the type and id attributes set to search Also, give the input a placeholder of Search , and an aria-describedby attribute set to search-description Finally, add a p element below the input, and give it the text Type to filter the list below: and an id of search-description This will provide additional context for screen readers --hints--\nYour form element should contain a label element with the text Search for an item: js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst label = testElem querySelector('form label');\nassert exists(label);\nassert equal(label textContent toLowerCase() trim(), 'search for an item:');\n}\nYour label should have an htmlFor attribute set to search js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst label = testElem querySelector('form label');\nassert equal(label getAttribute('for'), 'search');\n}\nYour form element should contain an input element with the type and id attributes set to search js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst input = testElem querySelector('form input');\nassert exists(input);\nassert equal(input getAttribute('type'), 'search');\nassert equal(input getAttribute('id'), 'search');\n}\nYour input should have a placeholder of Search and an aria-describedby attribute set to search-description js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst input = testElem querySelector('form input');\nassert equal(input getAttribute('placeholder') toLowerCase() trim(), 'search ');\nassert equal(input getAttribute('aria-describedby'), 'search-description');\n}\nYour form element should contain a p element with the text Type to filter the list below: js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst p = testElem querySelector('form p');\nassert exists(p);\nassert equal(p textContent toLowerCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd561ae787aba05a9d917.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "86bc63965c9e35503a0ac9c5943cb8c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd561ae787aba05a9d917.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "set to search-description js async () => { const testElem = await __helpers prepTestComponent(window index ShoppingList); const input = testElem querySelector('form input'); assert equal(input getAttribute('placeholder') toLowerCase() trim(), 'search '); assert equal(input getAttribute('aria-describedby'), 'search-description'); } Your form element should contain a p element with the text Type to filter the list below: js async () => { const testElem = await __helpers prepTestComponent(window index ShoppingList); const p = testElem querySelector('form p'); assert exists(p); assert equal(p textContent toLowerCase()trim(), 'type to filter the list below:');\n}\nYour p element should have an id of search-description js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst p = testElem querySelector('form p');\nassert equal(p getAttribute('id'), 'search-description');\n}\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd561ae787aba05a9d917.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5e93110246b4f8d5d659e8e2a0ca982d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd561ae787aba05a9d917.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "of search-description js async () => { const testElem = await __helpers prepTestComponent(window index ShoppingList); const p = testElem querySelector('form p'); assert equal(p getAttribute('id'), 'search-description'); } --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) { container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nexport const ShoppingList = () => {\nreturn (\nShopping List\n--fcc-editable-region--\n--fcc-editable-region--\n</form>\n</div>\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcd561ae787aba05a9d917.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9f52e6814ea9ef98bf41600867c67e53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcde1677d474ebe61b4f2e.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fcde1677d474ebe61b4f2e\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nIn the input element, add a value attribute and set it to the query state variable This will allow the input field to display the current value of query Also, remember that you need to use curly braces ({}) to embed JavaScript expressions like query in JSX Then, add an onChange event handler to the input element Pass it an anonymous function that takes e as an argument, which is the event object Inside the anonymous function, call setQuery() and pass it e target value This will update the query state variable with the current value of the input field whenever the user types in it --hints--\nYou should add a value attribute to the input element and set it to the query state variable js\nassert match(code, /<input[^>]*value={\\s*query\\s*}[^>]*\\/ >/);\nYour onChange event handler should be a function that takes e as an argument js\nconst input = document querySelector('input');\nconst key = Object keys(input) find(key => key startsWith(\"__reactProps\"));\nconst reactInput = input[key];\nassert match(reactInput onChange toString(), /onChange\\s*\\(\\s*e\\s*\\)/);\nYour onChange event handler should call setQuery() with e target value js\nconst input = document querySelector('input');\nconst key = Object keys(input) find(key => key startsWith(\"__reactProps\"));\nconst reactInput = input[key];\nassert match(reactInput onChange toString(), /setQuery\\s*\\(\\s*e\\ target\\ value\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4697,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcde1677d474ebe61b4f2e.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1c15c9552ced7718ff6d7ce9cbdb0861",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcde1677d474ebe61b4f2e.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "js const input = document querySelector('input'); const key = Object keys(input) find(key => key startsWith(\"__reactProps\")); const reactInput = input[key]; assert match(reactInput onChange toString(), /setQuery\\s*\\(\\s*e\\ target\\ value\\s*\\)/); --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4697,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcde1677d474ebe61b4f2e.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "83ff56c8e83b80927d003da21157e03f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcde1677d474ebe61b4f2e.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nreturn (\nShopping List\nSearch for an item:\n<input\nid=\"search\"\ntype=\"search\"\nplaceholder=\"Search \"\naria-describedby=\"search-description\"\n--fcc-editable-region--\n--fcc-editable-region--\n/>\n<p id=\"search-description\">Type to filter the list below:</p>\n</form>\n</div>\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4697,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcde1677d474ebe61b4f2e.md",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a30929c6bfa681f6488371751610359a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdef983296ff197e9a1cf.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fcdef983296ff197e9a1cf\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nCreate a variable named filteredItems and assign it the result of filtering the items array with the filter() method Pass an anonymous function to the filter() method that takes item as an argument Inside the anonymous function, just return item for now --hints--\nYou should create a variable named filteredItems js\nassert match(code, /(const|let|var)\\s+filteredItems\\s*=/);\nYou should use the filter() method on the items array js\nassert match(code, /items\\ filter\\s*\\(/);\nYour filter() method should take an anonymous function that takes item as an argument and returns item ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /filteredItems\\s=\\sitems filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item; \\s}\\s)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdef983296ff197e9a1cf.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "67f3b64710a409947ad3a928e6d4f524",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdef983296ff197e9a1cf.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /filteredItems\\s=\\sitems filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item; \\s}\\s)/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdef983296ff197e9a1cf.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "862671688e5f8723755712e0a8128fbf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdef983296ff197e9a1cf.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fcdef983296ff197e9a1cf.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4c449a5ebce3d6d6e4317aa7b99913ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe42e8e6bbaaf3f128004c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe42e8e6bbaaf3f128004c\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nIf you check the console, you'll see a warning about a missing key prop This is because React needs a unique key for each element in a list to help it identify which items have changed, are added, or are removed It is also important for performance reasons To fix this, add a key prop to the li element inside the map() method Set the key to the value of item Generally, you should use a unique identifier like an id as the key, but since the items are all unique strings, you can use the string itself in this case --hints--\nThe key prop for your li element should be set to the value of item ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /React createElement(\"li\", {\\skey:\\s+item\\s}, item)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4461,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe42e8e6bbaaf3f128004c.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "dc34fc9ee3095b663037be08b9bc1b45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe42e8e6bbaaf3f128004c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /React createElement(\"li\", {\\skey:\\s+item\\s}, item)/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) { container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst filteredItems = items filter((item) => item);\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4461,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe42e8e6bbaaf3f128004c.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "158ea570dbc1953264ca4dc81db927a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe42e8e6bbaaf3f128004c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) { container { width: 400px; } } ``` ```jsx const { useState } = React; const items = [ \"Apples\", \"Bananas\", \"Strawberries\", \"Blueberries\", \"Mangoes\", \"Pineapple\", \"Lettuce\", \"Broccoli\", \"Paper Towels\", \"Dish Soap\", ]; export const ShoppingList = () => { const [query, setQuery] = useState(\"\"); const filteredItems = items filter((item) => item); return ( Shopping List Search for an item: setQuery(etarget value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\n--fcc-editable-region--\n--fcc-editable-region--\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4461,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe42e8e6bbaaf3f128004c.md",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a01461dad2eb98053fadc505713740e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe45cc404a5604ea3a1eb9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe45cc404a5604ea3a1eb9\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nNow it's time to finish the search functionality The search input should be case-insensitive, and should also match partial strings For example, if a user types in app, it should match both Apples and Pineapples This is because the lowercase version of app is a substring of the lowercase version of both Apples and Pineapples First, inside the filter() method, use the toLowerCase() method to convert item into a lowercase string --hints--\nYou should use the toLowerCase() method on item within the filter() method ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /filteredItems\\s=\\sitems filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item toLowerCase(\\s); \\s}\\s*)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4441,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe45cc404a5604ea3a1eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "959ee1ed4a85147348f72f37bfc150ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe45cc404a5604ea3a1eb9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /filteredItems\\s=\\sitems filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item toLowerCase(\\s); \\s}\\s*)/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4441,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe45cc404a5604ea3a1eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "680292f688fc5aae3d85568bc24f764e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe45cc404a5604ea3a1eb9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\n--fcc-editable-region--\nconst filteredItems = items filter((item) => item);\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4441,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe45cc404a5604ea3a1eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3d2942dc0b8117aad1e8dc989d1a2847",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe3fe8910ff7e2106ff340.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe3fe8910ff7e2106ff340\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nWhile you're not really filtering anything yet, and filteredItems matches the items array, it would be nice to see the list of items on the page First, add a ul element below the p element in the form Inside the unordered list, use the map() method to iterate over the filteredItems array, and pass an anonymous function to it The anonymous function should take item as an argument, and return an li element for each item Each li should display the item text --hints--\nYour form element should contain a ul element js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nassert exists(testElem querySelector('form ul'));\n}\nYou should use the map() method on the filteredItems array within the ul element ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /React createElement(\"ul\", null, filteredItems map(function\\s*(/);\n```\nYour map() method should take an anonymous function that takes item as an argument ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /React createElement(\"ul\", null, filteredItems map(function\\s(\\sitem\\s)\\s{/);\n```\nThe anonymous function for map() should return an li element with the item text for each element in the filteredItems array ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /React createElement(\"ul\", null, filteredItems map(function\\s(\\sitem\\s)\\s{\\s* +React",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe3fe8910ff7e2106ff340.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b16845835319250d0848d2cf133ffeb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe3fe8910ff7e2106ff340.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /React createElement(\"ul\", null, filteredItems map(function\\s(\\sitem\\s)\\s{/); ``` The anonymous function for map() should return an li element with the item text for each element in the filteredItems array ```js const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /React createElement(\"ul\", null, filteredItems map(function\\s(\\sitem\\s)\\s{\\s* +ReactcreateElement(\"li\", null, item)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe3fe8910ff7e2106ff340.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ab406d1ac71940b745f3553d1c7110be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe3fe8910ff7e2106ff340.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst filteredItems = items filter((item) => item);\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n--fcc-editable-region--\n--fcc-editable-region--\n</form>\n</div>\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe3fe8910ff7e2106ff340.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7424f0253690ccd7caf976a3201b5c1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe49ea92b9fc1c09b6e314.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe49ea92b9fc1c09b6e314\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nNext, use the includes() method to check if the lowercase version of item includes the lowercase version of query as a substring For example, here's how to use the toLowerCase() and includes() methods to check if the string freeCodeCamp includes code:\njs\nconst str1 = \"freeCodeCamp\";\nconst str2 = \"code\";\nstr1 toLowerCase() includes(str2 toLowerCase()); // true\nChain the includes() method to the lowercase item and check if it includes the lowercase query Remember to lowercase query as well --hints--\nYou should chain the includes() method to the lowercase item ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /filteredItems\\s=\\sitems filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item toLowerCase(\\s) includes(\\s/);\n```\nYou should check if the lowercase item string includes the lowercase query as a substring ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /filteredItems\\s=\\sitems filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item toLowerCase(\\s) includes(\\squery toLowerCase(\\s)\\s); \\s}\\s)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5031,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe49ea92b9fc1c09b6e314.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "22658acf1cc8ada14e50568a4c3ba8bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe49ea92b9fc1c09b6e314.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "[ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /filteredItems\\s=\\sitems filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item toLowerCase(\\s) includes(\\squery toLowerCase(\\s)\\s); \\s}\\s)/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main,container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5031,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe49ea92b9fc1c09b6e314.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9544471d8736238da2d96e75be01bda2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe49ea92b9fc1c09b6e314.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\n--fcc-editable-region--\nconst filteredItems = items filter((item) => item toLowerCase());\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5031,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe49ea92b9fc1c09b6e314.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "28f0b5c466bb5610beff6c4f8a5831a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4adca39a9b224b72d642.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe4adca39a9b224b72d642\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nNow the search input should work as expected, and filter the shopping list based on the user's input Next, we'll add a way to check off items in the list so users can keep track of what they've already purchased To do this, we'll need another state variable and a setter function Use the useState hook to create a state variable named selectedItems and a setter function named setSelectedItems Initialize selectedItems as an empty array This array will store the items the user has selected, and we'll apply some styling to those selected items later --hints--\nYou should create a state variable named selectedItems and a setter function named setSelectedItems js\nassert match(code, /(const|let|var)\\s+\\[\\s*selectedItems\\s*,\\s*setSelectedItems\\s*\\]\\s*=\\s*useState\\(/);\nThe initial value of selectedItems should be an empty array ```js\nconst selectedItemsValue = code match(/( :const|let|var)\\s+[\\sselectedItems\\s,\\ssetSelectedItems\\s]\\s=\\suseState(\\s([\\s( )\\s])\\s*)/) [1] null;\nassert isTrue(\nselectedItemsValue &&\nselectedItemsValue replace(/\\s/g, \"\") === \"[]\"\n);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4696,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4adca39a9b224b72d642.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9cb3c39e657e3b9c8ed60fd93ff08375",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4adca39a9b224b72d642.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "should be an empty array ```js const selectedItemsValue = code match(/( :const|let|var)\\s+[\\sselectedItems\\s,\\ssetSelectedItems\\s]\\s=\\suseState(\\s([\\s( )\\s])\\s*)/) [1] null; assert isTrue( selectedItemsValue && selectedItemsValue replace(/\\s/g, \"\") === \"[]\" ); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4696,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4adca39a9b224b72d642.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2d65017cc4a6513b6e00f9195889ccb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4adca39a9b224b72d642.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\n--fcc-editable-region--\n--fcc-editable-region--\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4696,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4adca39a9b224b72d642.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1192f00ba972f025dd7a899ee647af2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4fa5e660453e884d6710.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe4fa5e660453e884d6710\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nCreate a function named toggleItem that takes item as an argument Inside the function, just call the setSelectedItems() function for now We'll come back a bit later to implement the logic to toggle selected items --hints--\nYou should have a function named toggleItem that takes item as an argument ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /function\\s+toggleItem\\s(\\sitem\\s)\\s{/);\n```\nYou should call the setSelectedItems() function inside the toggleItem() function ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /function\\s+toggleItem\\s(\\sitem\\s)\\s{( |\\n)setSelectedItems\\s(\\s*)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4fa5e660453e884d6710.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "cca472a4da57d05944e58b49ab899f90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4fa5e660453e884d6710.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /function\\s+toggleItem\\s(\\sitem\\s)\\s{( |\\n)setSelectedItems\\s(\\s*)/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4fa5e660453e884d6710.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "63566b1376f2b7edaf8d22a6fa9e6bb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4fa5e660453e884d6710.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe4fa5e660453e884d6710.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4b4751b21466be6b8348a7bf98ca2023",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe512b066c4a479f82d6bd.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe512b066c4a479f82d6bd\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nWithin the li element, above the item text, add an input element with the type attribute set to checkbox Also, set its onChange attribute to an anonymous function that calls toggleItem() with item as an argument Finally, wrap the input and the item text in a label element for better accessibility --hints--\nYou should add another input element with the type attribute set to checkbox ```js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst checkbox = testElem querySelector('input[type=\"checkbox\"]');\nassert exists(checkbox);\n}\n```\nYour new input should have an onChange attribute set to an anonymous function that calls toggleItem() with item as an argument ```js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst checkbox = testElem querySelector('input[type=\"checkbox\"]');\nconst key = checkbox && Object keys(checkbox) find(key => key startsWith(\"__reactProps\"));\nconst reactCheckbox = checkbox && checkbox[key];\nconst onChangeString = reactCheckbox && reactCheckbox onChange toString();\nassert match(onChangeString, /function onChange\\s(\\s)\\s{\\s(return) \\s+toggleItem\\s(\\sitem\\s); \\s}/);\n}\n```\nYour new input and the item text should be wrapped in a label element ```js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst label = testElem querySelector('li label');\nconst key = label && Object keys(label) find(key => key startsWith(\"__reactProps\"));\nconst reactLabel = label && label[key];\nconst reactLabelChildren = reactLabel children || [];\nassert lengthOf(reactLabelChildren, 2);\nassert isTrue(reactLabelChildren some((item => item type === 'input')));\nassert isTrue(reactLabelChildren",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe512b066c4a479f82d6bd.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0083787a6fbde9eb9f121ae0842f19e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe512b066c4a479f82d6bd.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "/function onChange\\s(\\s)\\s{\\s(return) \\s+toggleItem\\s(\\sitem\\s); \\s}/); } ``` Your new input and the item text should be wrapped in a label element ```js async () => { const testElem = await __helpers prepTestComponent(window index ShoppingList); const label = testElem querySelector('li label'); const key = label && Object keys(label) find(key => key startsWith(\"__reactProps\")); const reactLabel = label && label[key]; const reactLabelChildren = reactLabel children || []; assert lengthOf(reactLabelChildren, 2); assert isTrue(reactLabelChildren some((item => item type === 'input'))); assert isTrue(reactLabelChildrensome((item => typeof item === 'string')));\n}\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe512b066c4a479f82d6bd.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a08b2fdeb2d30cb4ff1bec0d171108ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe512b066c4a479f82d6bd.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems();\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\n--fcc-editable-region--\n{item}\n--fcc-editable-region--\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe512b066c4a479f82d6bd.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ec23adb83c25b888b7291a82a1a89434",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe53c21e2f8956dcaef1c5.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe53c21e2f8956dcaef1c5\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nBack to the toggleItem() function If you recall from a past lecture, you can compare past and present states in React, and use that to determine an upcoming state In this case, you'll use the past and present states to either add or remove items from the selectedItems array First, call the setSelectedItems() function, and pass it an anonymous function as an argument This anonymous function should take prev as an argument, which is the previous state of selectedItems Inside the anonymous function, use the includes method to check if prev includes item and return the result --hints--\nYou should pass an anonymous function that takes prev as an argument to the setSelectedItems() function ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /function\\stoggleItem\\s(\\sitem\\s)\\s{( |\\n)setSelectedItems\\s(function\\s(\\sprev\\s)\\s*{/);\n```\nUse the includes() method inside the anonymous function to check if prev includes item, and return the result of that check ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /function\\s(\\sprev\\s)\\s{\\sreturn\\s+prev includes\\s(\\sitem\\s)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5417,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe53c21e2f8956dcaef1c5.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c8ec70ea25fd4eec32751367a1bea91d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe53c21e2f8956dcaef1c5.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "```js const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /function\\s(\\sprev\\s)\\s{\\sreturn\\s+prev includes\\s(\\sitem\\s)/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main,container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5417,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe53c21e2f8956dcaef1c5.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a045a82d147cfdb91fc4d1295a7eb566",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe53c21e2f8956dcaef1c5.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n--fcc-editable-region--\nconst toggleItem = (item) => {\nsetSelectedItems();\n};\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\ntoggleItem(item)}\n/>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5417,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe53c21e2f8956dcaef1c5.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "20fd22cec7429ddd2b18a48e47b3d84b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5810b61de16e891dd02f.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe5810b61de16e891dd02f\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nRather than just returning prev includes(item), return a ternary operator with prev includes(item) as the condition Just return null for both cases for now --hints--\nReturn a ternary operator that checks if prev includes(item) is true Return null for both the truthy and falsy cases ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /setSelectedItems\\s(function\\s(\\sprev\\s)\\s{\\sreturn\\s+prev includes\\s(\\sitem\\s)\\s\\ \\snull\\s:\\snull; \\s}/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5810b61de16e891dd02f.md",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c67cb541c3c891bd11be20ee7a783198",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5810b61de16e891dd02f.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /setSelectedItems\\s(function\\s(\\sprev\\s)\\s{\\sreturn\\s+prev includes\\s(\\sitem\\s)\\s\\ \\snull\\s:\\snull; \\s}/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5810b61de16e891dd02f.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c1ffb08734d072534031e6e482ff7ee3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5810b61de16e891dd02f.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\n--fcc-editable-region--\nprev includes(item)\n--fcc-editable-region--\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\ntoggleItem(item)}\n/>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5810b61de16e891dd02f.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "97b9fb70d0ad4f283743ae1fb7ef3b85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5f1eaea66710b08c03f1.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe5f1eaea66710b08c03f1\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nNow you'll work on some logic to cross off any selected items on the list First off, since everything inside of this filteredItems map() call is being implicitly returned, wrap all the code within it in curly braces, and return the li element explicitly For example, here's how you would do this with a simple component that renders a list of names:\n```jsx\nconst names = [\"Abbey\", \"Beau\", \"Quincy\"];\nconst NameList = () => {\nreturn (\n{names map((name) => {\nreturn (\n{name}\n);\n})}\n);\n};\n```\n--hints--\nYou should wrap the code within the filteredItems map() call in curly braces ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(code, /{\\sfilteredItems map(\\s(function) \\s( \\sitem\\s) \\s)\\s(=>) \\s{( |\\n)}\\s); \\s*}/);\n```\nYou should return the li element explicitly ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(code, /{\\sfilteredItems map(\\s(function) \\s( \\sitem\\s) \\s)\\s(=>) \\s{\\sreturn\\s(\\s( |\\n)}\\s); \\s}/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5388,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5f1eaea66710b08c03f1.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9b013dad8edbff2e7c413dafb8d2edfa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5f1eaea66710b08c03f1.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(code, /{\\sfilteredItems map(\\s(function) \\s( \\sitem\\s) \\s)\\s(=>) \\s{\\sreturn\\s(\\s( |\\n)}\\s); \\s}/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main,container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5388,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5f1eaea66710b08c03f1.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9522df471cbb21398179abbba5449ffd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5f1eaea66710b08c03f1.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n--fcc-editable-region--\n{filteredItems map((item) =>\ntoggleItem(item)}\n/>\n{item}\n)}\n--fcc-editable-region--\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5388,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe5f1eaea66710b08c03f1.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "028a200e7fc8bbe8779e95b64f0f1276",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe66d2490f143c510038bf.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe66d2490f143c510038bf\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nThen, in the checkbox input element, add a checked attribute and set it to isChecked While it's not strictly necessary to set the checked attribute, it's a good practice to ensure that each checkbox reflects the current state of the selectedItems array --hints--\nYou should add a checked attribute to the checkbox input element ```js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst checkbox = testElem querySelector('input[type=\"checkbox\"]');\nconst key = checkbox && Object keys(checkbox) find(key => key startsWith(\"__reactProps\"));\nconst reactCheckbox = checkbox && checkbox[key];\nassert exists(reactCheckbox checked);\n}\n```\nYou should set the checked attribute to isChecked ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /\"input\"\\s,\\s{( |\\n)checked:\\sisChecked/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5282,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe66d2490f143c510038bf.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b25a442b752d91eebbaa92c623752453",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe66d2490f143c510038bf.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /\"input\"\\s,\\s{( |\\n)checked:\\sisChecked/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) { container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5282,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe66d2490f143c510038bf.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0b17e2b27fa00459db2c1457cb251361",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe66d2490f143c510038bf.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) { container { width: 400px; } } ``` ```jsx const { useState } = React; const items = [ \"Apples\", \"Bananas\", \"Strawberries\", \"Blueberries\", \"Mangoes\", \"Pineapple\", \"Lettuce\", \"Broccoli\", \"Paper Towels\", \"Dish Soap\", ]; export const ShoppingList = () => { const [query, setQuery] = useState(\"\"); const [selectedItems, setSelectedItems] = useState([]); const filteredItems = items filter((item) => itemtoLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\n--fcc-editable-region--\ntoggleItem(item)}\n/>\n--fcc-editable-region--\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5282,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe66d2490f143c510038bf.md",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "27f05cee908a1b5d9ac29538b9e100f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe626cc464f1238514cd8b.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe626cc464f1238514cd8b\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nBefore the return statement within the filteredItems map() call, create a variable called isChecked and use the includes() method to check if the current item is in the selectedItems array Then, add a style prop to the li element, and use a ternary operator to set the textDecoration property to line-through if isChecked is true, or none if it is false Remember that you need to wrap the ternary operator in curly braces since it's a JavaScript expression For example, here's how you can use a ternary operator to conditionally set the color of a paragraph in a simple component:\n```jsx\nconst MyComponent = () => {\nconst isActive = true;\nreturn (\nThis text is conditionally styled );\n};\n```\n--hints--\nYou should create a variable called isChecked which uses the includes() method on the selectedItems array to check if the current item is in the array ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\sisChecked\\s=\\sselectedItems includes\\s(\\sitem\\s)/);\n```\nYou should add a style prop to the li element ```js\nasync () => {\nconst testElem = await __helpers prepTestComponent(window index ShoppingList);\nconst li = testElem querySelector('li');\nconst key = li && Object keys(li) find(key => key startsWith(\"__reactProps\"));\nconst reactLi = li && li[key];\nassert exists(reactLi style);\n}\n```\nYour style prop should include a ternary operator that sets the textDecoration property to line-through if isChecked is true, or none if it is false ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /\"li\"\\s,\\s{( |\\n)style:\\s{\\stextDecoration\\s:\\sisChecked\\s\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe626cc464f1238514cd8b.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c7384212289145f70a5f07ddea5873db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe626cc464f1238514cd8b.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "Object keys(li) find(key => key startsWith(\"__reactProps\")); const reactLi = li && li[key]; assert exists(reactLi style); } ``` Your style prop should include a ternary operator that sets the textDecoration property to line-through if isChecked is true, or none if it is false ```js const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /\"li\"\\s,\\s{( |\\n)style:\\s{\\stextDecoration\\s:\\sisChecked\\s\\\\s(\"|')line-through(\"|')\\s:\\s*(\"|')none(\"|')/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe626cc464f1238514cd8b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6069567155bdd66ba927e7723134cc85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe626cc464f1238514cd8b.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\n--fcc-editable-region--\nreturn (\n<li\nkey={item}\n>\n<label>\n<input\ntype=\"checkbox\"\nonChange={() => toggleItem(item)}\n/>\n{item}\n</label>\n</li>\n);\n--fcc-editable-region--\n})}\n</ul>\n</form>\n</div>\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe626cc464f1238514cd8b.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9e1c81738f243d5fe3389ac3da9d3905",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe694ebcafe94ab7451a8f.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67fe694ebcafe94ab7451a8f\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nYour app works Go ahead and test it out However, it's not as efficient as it could be While React is already very performant, there are some cases where it can be better to cache the results of potentially expensive calculations, or to ensure that functions are not recreated on every render We'll improve the performance of your app over the following steps But first, let's add some logging so you can see the lifecycle of this component more clearly Above filteredItems, add a console log() statement that logs the string Filtering items to the console --hints--\nYou should add a console log() statement above filteredItems that logs the string Filtering items to the console ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /console log\\s(\\s(\"|'|)\\s*Filtering\\s+items\\s*\\ \\ \\ \\s*(\"|'|)\\s*); /i);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe694ebcafe94ab7451a8f.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "22f600d69bb22e760f1ea30645392084",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe694ebcafe94ab7451a8f.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "\"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /console log\\s(\\s(\"|'|)\\s*Filtering\\s+items\\s*\\ \\ \\ \\s*(\"|'|)\\s*); /i); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe694ebcafe94ab7451a8f.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7c8c8e6b900c43b5cd5f13d01f554c6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe694ebcafe94ab7451a8f.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\n--fcc-editable-region--\n--fcc-editable-region--\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5267,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67fe694ebcafe94ab7451a8f.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a771fd5663284667a4d4cdab9f4d0cd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7500255008598207a70c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff7500255008598207a70c\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nNow you will see Filtering items in the console every time you type in the search bar and check or uncheck an item This is because those actions update the state of the component, which causes it to re-render This isn't usually a problem But if you have a lot of items in the list, or if you're fetching a lot of data from an API and manipulating it, your app can feel slow To improve performance, you can use the useMemo() hook to memoize, or in other words, cache, the result of the filtering operation Then, React will only re-run the filtering operation when its dependency changes, rather than on every render First, destructure the useMemo() hook from React at the top of your file --hints--\nYou should destructure useMemo from React at the top of the file Make sure you aren't removing the useState hook you're already using js\nassert match(code, /(const|let|var)\\s*{[^}]*\\buse(State|Memo)\\b[^}]*\\buse(Memo|State)\\b[^}]*}\\s*=\\s*React/);\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5231,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7500255008598207a70c.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8c89c77406840bea52bf9755999bfbb5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7500255008598207a70c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "should destructure useMemo from React at the top of the file Make sure you aren't removing the useState hook you're already using js assert match(code, /(const|let|var)\\s*{[^}]*\\buse(State|Memo)\\b[^}]*\\buse(Memo|State)\\b[^}]*}\\s*=\\s*React/); --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5231,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7500255008598207a70c.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b12a41bdce4681d08ae910c202acc799",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7500255008598207a70c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\n--fcc-editable-region--\nconst { useState } = React;\n--fcc-editable-region--\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconsole log(\"Filtering items \");\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5231,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7500255008598207a70c.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1d15fd7e1e4a2d7efb808047c9569a52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7e6d04d17507e8923f46.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff7e6d04d17507e8923f46\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nAnother thing React does each time it re-renders a component is recreate the functions inside of it Here, every time you check or uncheck an item, the toggleItem() function is recreated This is not a problem in most cases, but can lead to performance issues in larger apps Let's add some logging to track this Above the ShoppingList component, use let to create a variable named prevToggleItem and set it to null You'll use this to track the function definition of toggleItem() across renders --hints--\nYou should use let to create a variable named prevToggleItem and set it to null js\nassert match(code, /let\\s+prevToggleItem\\s*=\\s*null/);\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7e6d04d17507e8923f46.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "829f25eb27af92e8adf6133751924719",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7e6d04d17507e8923f46.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "function definition of toggleItem() across renders --hints-- You should use let to create a variable named prevToggleItem and set it to null js assert match(code, /let\\s+prevToggleItem\\s*=\\s*null/); --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7e6d04d17507e8923f46.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1f929bace46d88c7d808928711141576",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7e6d04d17507e8923f46.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState, useMemo } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\n--fcc-editable-region--\n--fcc-editable-region--\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = useMemo(() => {\nconsole log(\"Filtering items \");\nreturn items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n}, [query]);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7e6d04d17507e8923f46.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "22b8bb63cf23d5b78f15db3633e9f809",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8059bac7f0146857c2b1.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff8059bac7f0146857c2b1\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nIf you use the app now, you'll see that the toggleItem() function is recreated every time you check or uncheck an item, or type in the search bar To improve performance, you can use the useCallback() hook to memoize or cache the toggleItem() function Then React will only recreate the function when its dependencies change First, destructure the useCallback() hook from React at the top of your file --hints--\nYou should destructure useCallback from React at the top of the file Make sure you aren't removing any other hooks you're already using js\nassert match(code, /(const|let|var)\\s*{[^}]*\\buse(State|Memo|Callback)\\b[^}]*\\buse(State|Memo|Callback)\\b[^}]*\\buse(State|Memo|Callback)\\b[^}]*}\\s*=\\s*React/);\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8059bac7f0146857c2b1.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a78da0e09c783b1e82cad525f17e21e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8059bac7f0146857c2b1.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "should destructure useCallback from React at the top of the file Make sure you aren't removing any other hooks you're already using js assert match(code, /(const|let|var)\\s*{[^}]*\\buse(State|Memo|Callback)\\b[^}]*\\buse(State|Memo|Callback)\\b[^}]*\\buse(State|Memo|Callback)\\b[^}]*}\\s*=\\s*React/); --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8059bac7f0146857c2b1.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e02d51c867429025acd51a5bd8109843",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8059bac7f0146857c2b1.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\n--fcc-editable-region--\nconst { useState, useMemo } = React;\n--fcc-editable-region--\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nlet prevToggleItem = null;\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = useMemo(() => {\nconsole log(\"Filtering items \");\nreturn items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n}, [query]);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nif (prevToggleItem == toggleItem) {\nconsole log(\"New toggleItem function\");\nprevToggleItem = toggleItem;\n} else {\nconsole log(\"Current toggleItem function\");\n}\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5253,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8059bac7f0146857c2b1.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3d44637c198b93bcaf037819066c58b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7f5515db250dc015f128.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff7f5515db250dc015f128\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nNow that you can see when the toggleItem() function definition is first set or changes, you should also log when the function is the same across renders Add an else statement to the if statement you just wrote Inside the else block, log the string Current toggleItem function to the console --hints--\nYou should add an else statement to the if statement you wrote in the last step js\nassert match(code, /if\\s*\\(\\s*prevToggleItem\\s* ==\\s*toggleItem\\s*\\)\\s*{ *}\\s*else\\s*{/si);\nYou should log the string Current toggleItem function to the console inside the else statement ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText || '';\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString() || '';\nconsole log(shoppingListString);\nassert match(shoppingListString, /else\\s{\\sconsole log\\s(\\s(\"|')\\sCurrent\\s+toggleItem\\s+function\\s(\"|')\\s*); /si);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7f5515db250dc015f128.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b6daddf611060637db5024e64ef16b14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7f5515db250dc015f128.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "|| ''; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString() || ''; console log(shoppingListString); assert match(shoppingListString, /else\\s{\\sconsole log\\s(\\s(\"|')\\sCurrent\\s+toggleItem\\s+function\\s(\"|')\\s*); /si); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7f5515db250dc015f128.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2ae0c1078ddd674a4dd286ce600dca36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7f5515db250dc015f128.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState, useMemo } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nlet prevToggleItem = null;\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = useMemo(() => {\nconsole log(\"Filtering items \");\nreturn items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n}, [query]);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\n--fcc-editable-region--\nif (prevToggleItem == toggleItem) {\nconsole log(\"New toggleItem function\");\nprevToggleItem = toggleItem;\n}\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5464,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff7f5515db250dc015f128.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "12d2977024e6b981f7554d82e7442a69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff838da1cb2927ae18a3f5\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nuseMemo() takes two arguments: a function that returns the value you want to memoize, and an array of dependencies The memoized value will only be recomputed when one or more of its dependencies change Here's the basic syntax for useMemo():\njs\nconst memoizedValue = useMemo(() => {\n// Some expensive calculation\nreturn value;\n}, [dependency1, dependency2]);\nSet filteredItems equal to useMemo(), and pass it an anonymous function with curly braces Inside the curly braces, use a return statement to explicitly return your existing filtering logic Also, add query as the only dependency in the dependencies array This ensures that the filtering operation is only re-run when query changes --hints--\nYou should set filteredItems equal to calling the useMemo() hook ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(/);\n```\nYou should pass an anonymous function to useMemo() with curly braces ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{/);\n```\nYou should use a return statement to explicitly return your existing filtering logic ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{\\sreturn\\s+items filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item toLowerCase(\\s) includes(\\squery toLowerCase(\\s)\\s); \\s}\\s); \\s}/);\n```\nYou should add query as the only dependency in the dependencies array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "bb7f17d6bced57888a1566362deff93e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{/); ``` You should use a return statement to explicitly return your existing filtering logic ```js const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{\\sreturn\\s+items filter\\s(function\\s(\\sitem\\s)\\s{\\sreturn\\s+item toLowerCase(\\s) includes(\\squery toLowerCase(\\s)\\s); \\s}\\s); \\s}/); ``` You should add query as the only dependency in the dependencies array```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{( |\\n)},\\s[\\squery\\s]\\s*); /);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3a0168de7f3016028cde217b3643b7cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{( |\\n)},\\s[\\squery\\s]\\s*); /); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "32f235faa2a1758c232674746fdff134",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState, useMemo } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconsole log(\"Filtering items \");\n--fcc-editable-region--\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n--fcc-editable-region--\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6780,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff838da1cb2927ae18a3f5.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "78026bf78d8586401c485cfcbf39f601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff89b745907449e0e5bae4.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff89b745907449e0e5bae4\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nFinally, move your console log() statement inside the useMemo() callback function, just above the return statement --hints--\nYou should move your Filtering items log before the return statement inside the useMemo() callback function ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{\\sconsole log\\s(\\s(\"|'|)\\s*Filtering\\s+items\\s*\\ \\ \\ \\s*(\"|'|)\\s); \\s*return\\s+items filter/i);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff89b745907449e0e5bae4.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9723192f3d476530e7a00a255ae52603",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff89b745907449e0e5bae4.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /var\\sfilteredItems\\s=\\suseMemo\\s(\\sfunction\\s(\\s)\\s{\\sconsole log\\s(\\s(\"|'|)\\s*Filtering\\s+items\\s*\\ \\ \\ \\s*(\"|'|)\\s); \\s*return\\s+items filter/i); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff89b745907449e0e5bae4.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6273f2ae5ef4a49e88c20dc0f2d00ee6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff89b745907449e0e5bae4.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState, useMemo } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\n--fcc-editable-region--\nconsole log(\"Filtering items \");\nconst filteredItems = useMemo(() => {\nreturn items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n}, [query]);\n--fcc-editable-region--\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff89b745907449e0e5bae4.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5553461a2fe7cd878b8587da4eefca60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8defd6747d621c4b838c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff8defd6747d621c4b838c\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nNext, write an if statement to check if prevToggleItem is not strictly equal to toggleItem If they are not equal, log the string New toggleItem function to the console Then, set prevToggleItem equal to toggleItem --hints--\nYou should write an if statement to check if prevToggleItem is not strictly equal to toggleItem js\nassert match(code, /if\\s*\\(\\s*prevToggleItem\\s* ==\\s*toggleItem\\s*\\)/);\nYou should log the string New toggleItem function to the console inside the if statement if the condition is met ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText || '';\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString() || '';\nassert match(shoppingListString, /if\\s(\\sprevToggleItem\\s ==\\stoggleItem\\s)\\s{ console log\\s(\\s(\"|')\\sNew\\s+toggleItem\\s+function\\s(\"|')\\s); /si);\n```\nYou should set prevToggleItem equal to toggleItem inside the if statement if the condition is met js\nassert match(code, /if\\s*\\(\\s*prevToggleItem\\s* ==\\s*toggleItem\\s*\\)\\s*{ *prevToggleItem\\s*=\\s*toggleItem; \\s*/si);\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5523,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8defd6747d621c4b838c.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f7c8a56e3b438685cbf4f468b3110253",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8defd6747d621c4b838c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "log\\s(\\s(\"|')\\sNew\\s+toggleItem\\s+function\\s(\"|')\\s); /si); ``` You should set prevToggleItem equal to toggleItem inside the if statement if the condition is met js assert match(code, /if\\s*\\(\\s*prevToggleItem\\s* ==\\s*toggleItem\\s*\\)\\s*{ *prevToggleItem\\s*=\\s*toggleItem; \\s*/si); --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5523,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8defd6747d621c4b838c.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b5dced4caea146dd114b3d72b7f48050",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8defd6747d621c4b838c.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState, useMemo } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nlet prevToggleItem = null;\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = useMemo(() => {\nconsole log(\"Filtering items \");\nreturn items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n}, [query]);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5523,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8defd6747d621c4b838c.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0bd4987f8ec063363fdce591d57bc907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808bcac6bd35f568a19f21a.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 6808bcac6bd35f568a19f21a\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nFor the falsy condition, use the spread operator to return a copy of the prev array with item appended to the end This will add item to the selectedItems array --hints--\nYou should use the spread operator to clone the prev array with item appended to the end js\nassert match(code, /\\:\\s*\\[\\s*\\ \\ \\ prev\\s*\\,\\s*item\\s*\\]/);\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808bcac6bd35f568a19f21a.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d2722cbb0d9cfcf9c748c019eadf9433",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808bcac6bd35f568a19f21a.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\n--fcc-editable-region--\nprev includes(item) prev filter((i) => i == item) : null\n--fcc-editable-region--\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\ntoggleItem(item)}\n/>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808bcac6bd35f568a19f21a.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f24b0c4fb7d2e92cb8fbb9132318bb46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd18eb67c661d8a9e11f3.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641cd18eb67c661d8a9e11f3\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nTo begin the project, retrieve the #message-input, #result-message, and #check-message-btn elements from the HTML document, and assign them to the variables messageInput, result, and checkMessageButton, respectively --hints--\nYou should declare a messageInput variable js\nassert exists(messageInput);\nYour messageInput variable should have the value of the #message-input element js\nassert deepEqual(messageInput, document getElementById('message-input'));\nYou should declare a result variable js\nassert exists(result);\nYour result variable should have the value of the #result-message element js\nassert deepEqual(result, document getElementById('result-message'));\nYou should declare a checkMessageButton variable js\nassert exists(checkMessageButton);\nYour checkMessageButton variable should have the value of the #check-message-btn element js\nassert deepEqual(checkMessageButton, document getElementById('check-message-btn'));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3425,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd18eb67c661d8a9e11f3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e87f820284a7ae8acce78a26860675fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd18eb67c661d8a9e11f3.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3425,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd18eb67c661d8a9e11f3.md",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d42bca5e1944dd46690bd689a4dc8f33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808baa8f8dcaf4f50a7acaa.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 6808baa8f8dcaf4f50a7acaa\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nFor the truthy condition, if prev includes item, return a filtered array with item removed Chain the filter() method to prev and pass it an anonymous function that takes i as an argument Inside the function, check that i is not strictly equal to item This will return a new array with all items except item --hints--\nYou should chain the filter() method to prev and pass it an anonymous function that takes i as an argument ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /prev includes\\s(\\sitem\\s)\\s\\ \\sprev filter\\s(function\\s(\\si\\s)\\s{/);\n```\nInside the anonymous filter() function, you should check that i is not strictly equal to item Remember to return the result of that check ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /prev includes\\s(\\sitem\\s)\\s\\ \\sprev filter\\s(function\\s(\\si\\s)\\s{\\sreturn\\s+i\\s ==\\sitem; \\s}\\s*)/);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808baa8f8dcaf4f50a7acaa.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e5f096d4305096f1712041b4457535c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808baa8f8dcaf4f50a7acaa.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "\"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /prev includes\\s(\\sitem\\s)\\s\\ \\sprev filter\\s(function\\s(\\si\\s)\\s{\\sreturn\\s+i\\s ==\\sitem; \\s}\\s*)/); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808baa8f8dcaf4f50a7acaa.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "94a1ed769b21117d7f2c50638f69afa7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808baa8f8dcaf4f50a7acaa.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\n--fcc-editable-region--\nprev includes(item) null : null\n--fcc-editable-region--\n);\n};\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) =>\ntoggleItem(item)}\n/>\n{item}\n)}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\6808baa8f8dcaf4f50a7acaa.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "20642f893107c3fcc4f3698ec7866ebd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd91d28bebe226f765d86.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641cd91d28bebe226f765d86\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nAttach an event listener to your checkMessageButton, listening for the click event If the messageInput is empty, display an alert to the user with the message \"Please enter a message \" Then, exit the function execution --hints--\nWhen you click your checkMessageButton and the messageInput is empty, you should alert the user with the message \"Please enter a message \" js\nconst testArr = [];\nconst temp = alert;\nalert = (msg) => {testArr push(msg)};\ntry {\nmessageInput value = \"\";\ncheckMessageButton dispatchEvent(new Event(\"click\"));\nassert lengthOf(testArr, 1);\nassert strictEqual(testArr[0], \"Please enter a message \")\n} finally {\nalert = temp;\n}\nWhen you click your checkMessageButton you should only alert the user if messageInput is empty js\nconst testArr = [];\nconst temp = alert;\nalert = (msg) => {testArr push(msg)};\ntry {\nmessageInput value = \"some message\";\ncheckMessageButton dispatchEvent(new Event(\"click\"));\nassert isEmpty(testArr);\n} finally {\nalert = temp;\n}\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3621,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd91d28bebe226f765d86.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5cd695f568405d34405c30c64e15ee8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd91d28bebe226f765d86.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; }message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3621,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cd91d28bebe226f765d86.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "06f6f30ec4bbbd27ee3a782eafddc8fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdefa704f232675ed98aa.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641cdefa704f232675ed98aa\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nCreate an isSpam function that takes a single parameter Make it return false for now --hints--\nYou should have a function named isSpam js\nassert isFunction(isSpam);\nYour isSpam function should have a single parameter js\nassert lengthOf(isSpam, 1);\nYour isSpam function should return false js\nassert isFalse(isSpam(\"\"));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdefa704f232675ed98aa.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4cbbdd3a4ed96c27c337c7477c0f1fe6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdefa704f232675ed98aa.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; }footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdefa704f232675ed98aa.md",
      "source_type": "git_repo"
    },
    "token_count": 282,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3f38444b078d200dba3a6765e77a778c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce03dfeca10293e05dad7.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641ce03dfeca10293e05dad7\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nYour first regular expression will be used to catch help requests Declare a helpRegex variable, and assign it a regular expression that matches the string please help As a refresher, here is a regular expression to match the string hello world:\njs\nconst regex = /hello world/;\n--hints--\nYou should declare a helpRegex variable js\nassert exists(helpRegex);\nYour helpRegex variable should be a regular expression js\nassert instanceOf(helpRegex, RegExp);\nYour helpRegex variable should match the string please help js\nconst matched = \"please help\" match(helpRegex);\nassert equal(matched[0], \"please help\")\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce03dfeca10293e05dad7.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d8acb56b1be8ce62359772c5fdf0991f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce03dfeca10293e05dad7.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\nconst isSpam = (msg) => false;\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce03dfeca10293e05dad7.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "46382a5195cb46d9245b19f8b6d5009b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdf57c3f7ee276e1d9b32.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641cdf57c3f7ee276e1d9b32\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nBack in your event listener, you need to update the text of the result element You can use a ternary operator to achieve this task Here is an example of assigning the result of a ternary operator to an element's text content:\njs\nel textContent = condition \"Use this text if the condition is true\" : \"Use this text if the condition is false\";\nAfter the if statement, update the text of the result element based on the truthiness of calling isSpam() with messageInput value as the argument If true, set the textContent property on the result element to \"Oh no This looks like a spam message \" Otherwise, set it to \"This message does not seem to contain any spam \"\nThen set the messageInput element's value property to an empty string --hints--\nWhen you click your checkMessageButton and the isSpam(messageInput value) is truthy, you should set the textContent property of result to \"Oh no This looks like a spam message \" js\nconst temp = isSpam;\nisSpam = (msg) => true;\nmessageInput value = \"spam\";\ntry {\ncheckMessageButton dispatchEvent(new Event(\"click\"));\nassert equal(document querySelector(\"#result-message\") textContent, \"Oh no This looks like a spam message \");\n} finally {\nisSpam = temp;\n}\nWhen you click your checkMessageButton and the isSpam(messageInput value) is falsy, you should set the textContent property of result to \"This message does not seem to contain any spam \" js\nmessageInput value = \"spam\";\ncheckMessageButton dispatchEvent(new Event(\"click\"));\nassert equal(document querySelector(\"#result-message\") textContent, \"This message does not seem to contain any spam \");\nAfter setting the textContent of result, you should reset the value property on the messageInput element to an empty string ```js\nmessageInput value = \"spam\";\ncheckMessageButton dispatchEvent(new Event(\"click\"));\nassert isEmpty(messageInput value);\nmessageInput value = \"spam\";\nconst temp = isSpam;\nisSpam = (msg) => true;\ntry {\ncheckMessageButton dispatchEvent(new Event(\"click\"));\nassert isEmpty(messageInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4910,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdf57c3f7ee276e1d9b32.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "34a2747c77151875e8fc2206c193e34d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdf57c3f7ee276e1d9b32.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "any spam \" js messageInput value = \"spam\"; checkMessageButton dispatchEvent(new Event(\"click\")); assert equal(document querySelector(\"#result-message\") textContent, \"This message does not seem to contain any spam \"); After setting the textContent of result, you should reset the value property on the messageInput element to an empty string ```js messageInput value = \"spam\"; checkMessageButton dispatchEvent(new Event(\"click\")); assert isEmpty(messageInput value); messageInput value = \"spam\"; const temp = isSpam; isSpam = (msg) => true; try { checkMessageButton dispatchEvent(new Event(\"click\")); assert isEmpty(messageInputvalue);\n} finally {\nisSpam = temp;\n}\n```\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4910,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdf57c3f7ee276e1d9b32.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d53a5241c40d4bd7345c0fdf8b123af9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdf57c3f7ee276e1d9b32.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst isSpam = (msg) => false;\n--fcc-editable-region--\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4910,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cdf57c3f7ee276e1d9b32.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b188b8043b554991c29ba488065b450f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3065c50e62f97406973.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641ce3065c50e62f97406973\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nRegular expressions can take flags to modify their behavior For instance, the i flag can be used to make the expression ignore case, causing it to match hello, HELLO, and Hello for the expression /hello/ Flags are added after the trailing slash Add the i flag to your helpRegex --hints--\nYour helpRegex should have the case-insensitive i flag js\nassert include(helpRegex flags, 'i');\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3065c50e62f97406973.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ae73297ba835af14bc92bd780554fd0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3065c50e62f97406973.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; }footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\n--fcc-editable-region--\nconst helpRegex = /please help/;\n--fcc-editable-region--\nconst isSpam = (msg) => false;\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3065c50e62f97406973.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4419bd7d63675f398f1fa57e9a7257f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "id: 67ff8eacd3d965670c9121f9\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nThe useCallback() hook takes two arguments: a function and an array of dependencies The function will only be recreated if one of the dependencies changes Here's the basic syntax for useCallback():\njs\nconst memoizedCallback = useCallback(() => {\n// Your function logic\nreturn value;\n}, [dependency1, dependency2]);\nSet toggleItem equal to useCallback(), and pass it an anonymous function that takes item as an argument Move your existing toggleItem() function logic inside the anonymous function, where setSelectedItems is called Finally, add setSelectedItems as a dependency in the dependencies array After that, you're done optimizing Your app should still work the same way, but you'll only see your console logs when the query state changes or when the toggleItem() function is recreated --hints--\nYou should set toggleItem equal to calling the useCallback() hook ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\stoggleItem\\s=\\suseCallback\\s(/);\n```\nYou should pass an anonymous function that takes item as an argument to useCallback() ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\stoggleItem\\s=\\suseCallback\\s(\\sfunction\\s(\\sitem\\s)\\s*{/);\n```\nYou should move your existing toggleItem() function logic, starting with the call to setSelectedItems(), inside the anonymous function ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\stoggleItem\\s=\\suseCallback\\s(\\sfunction\\s(\\sitem\\s)\\s{\\s(return) \\s+setSelectedItems\\s(\\sfunction\\s(prev)\\s{\\sreturn\\s+prev",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "02e9322202816d92619f05525fdb1548",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /var\\stoggleItem\\s=\\suseCallback\\s(\\sfunction\\s(\\sitem\\s)\\s*{/); ``` You should move your existing toggleItem() function logic, starting with the call to setSelectedItems(), inside the anonymous function ```js const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /var\\stoggleItem\\s=\\suseCallback\\s(\\sfunction\\s(\\sitem\\s)\\s{\\s(return) \\s+setSelectedItems\\s(\\sfunction\\s(prev)\\s{\\sreturn\\s+previncludes(item)\\s\\ \\sprev filter(function\\s(i)\\s{\\sreturn\\s+i\\s ==\\sitem;\\s}\\s)\\s:\\s[] concat(_toConsumableArray(prev),\\s+[item]);\\s*}); /);\n```\nYou should add setSelectedItems as the only dependency in the dependencies array ```js\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst shoppingListString = exports ShoppingList toString();\nassert match(shoppingListString, /var\\stoggleItem\\s=\\suseCallback\\s(\\sfunction\\s(\\sitem\\s)\\s{ },\\s[\\ssetSelectedItems\\s]\\s); /si);\n```\n--seed--\n--seed-contents--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "7ccdd690f5a00cfbdd1406a23e0163a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "dataset src === \"index jsx\") innerText; const exports = {}; const a = eval(script); const shoppingListString = exports ShoppingList toString(); assert match(shoppingListString, /var\\stoggleItem\\s=\\suseCallback\\s(\\sfunction\\s(\\sitem\\s)\\s{ },\\s[\\ssetSelectedItems\\s]\\s); /si); ``` --seed-- --seed-contents-- ```html Shopping List ``` ```css :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --dark-orange: #f89808; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { box-sizing: border-box; } body { font-family: Arial, sans-serif; line-height: 1 5; color: var(--dark-grey); background-color: var(--dark-grey); } main, container { display: flex; flex-direction: column; align-items: center; }container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "015419b3ec97ad72afa32ecde595ef10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState, useMemo, useCallback } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nlet prevToggleItem = null;\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = useMemo(() => {\nconsole log(\"Filtering items \");\nreturn items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n}, [query]);\n--fcc-editable-region--\nconst toggleItem = (item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n};\n--fcc-editable-region--\nif (prevToggleItem == toggleItem) {\nconsole log(\"New toggleItem function\");\nprevToggleItem = toggleItem;\n} else {\nconsole log(\"Current toggleItem function\");\n}\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "1119fc0cf85daf47df2906f28b9236a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "toLowerCase() includes(query toLowerCase()) ); }, [query]); --fcc-editable-region-- const toggleItem = (item) => { setSelectedItems((prev) => prev includes(item) prev filter((i) => i == item) : [ prev, item] ); }; --fcc-editable-region-- if (prevToggleItem == toggleItem) { console log(\"New toggleItem function\"); prevToggleItem = toggleItem; } else { console log(\"Current toggleItem function\"); } return ( Shopping List Search for an item: setQuery(e target value)} /> Type to filter the list below: {filteredItems map((item) => { const isChecked = selectedItemsincludes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```\n--solutions--\n```html\nShopping List\n```\n```css\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--dark-orange: #f89808;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\nline-height: 1 5;\ncolor: var(--dark-grey);\nbackground-color: var(--dark-grey);\n}\nmain, container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} container {\nbackground-color: var(--light-grey);\nwidth: 90%;\nmargin: 20px;\npadding: 10px;\n}\nh1 {\ncolor: var(--dark-grey);\n}\nform {\ntext-align: center;\n}\nbutton {\ncursor: pointer;\n}\nbutton {\ncursor: pointer;\nwidth: 100px;\nmargin: 3px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\ninput {\ncolor: var(--dark-grey);\nmargin-left: 5px;\npadding: 3px;\n}\nli {\ntext-align: left;\nmargin: 10px 0;\n} selected-item {\nfont-weight: bold;\n}\n@media (min-width: 425px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "0f47032d4b02fcd7c0ddd1aa72e9e758",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
    "source_type": "git_repo",
    "title": "Shopping List",
    "content": "background-color: var(--light-grey); width: 90%; margin: 20px; padding: 10px; } h1 { color: var(--dark-grey); } form { text-align: center; } button { cursor: pointer; } button { cursor: pointer; width: 100px; margin: 3px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } input { color: var(--dark-grey); margin-left: 5px; padding: 3px; } li { text-align: left; margin: 10px 0; } selected-item { font-weight: bold; } @media (min-width: 425px) {container {\nwidth: 400px;\n}\n}\n```\n```jsx\nconst { useState, useMemo, useCallback } = React;\nconst items = [\n\"Apples\",\n\"Bananas\",\n\"Strawberries\",\n\"Blueberries\",\n\"Mangoes\",\n\"Pineapple\",\n\"Lettuce\",\n\"Broccoli\",\n\"Paper Towels\",\n\"Dish Soap\",\n];\nlet prevToggleItem = null;\nexport const ShoppingList = () => {\nconst [query, setQuery] = useState(\"\");\nconst [selectedItems, setSelectedItems] = useState([]);\nconst filteredItems = useMemo(() => {\nconsole log(\"Filtering items \");\nreturn items filter((item) =>\nitem toLowerCase() includes(query toLowerCase())\n);\n}, [query]);\nconst toggleItem = useCallback(\n(item) => {\nsetSelectedItems((prev) =>\nprev includes(item) prev filter((i) => i == item) : [ prev, item]\n);\n},\n[setSelectedItems]\n);\nif (prevToggleItem == toggleItem) {\nconsole log(\"New toggleItem function\");\nprevToggleItem = toggleItem;\n} else {\nconsole log(\"Current toggleItem function\");\n}\nreturn (\nShopping List\nSearch for an item:\nsetQuery(e target value)}\n/>\nType to filter the list below:\n{filteredItems map((item) => {\nconst isChecked = selectedItems includes(item);\nreturn (\ntoggleItem(item)}\nchecked={isChecked}\n/>\n{item}\n);\n})}\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11768,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-shopping-list-app\\67ff8eacd3d965670c9121f9.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "aa9a48bbcb99dfd33a43e332c121fc28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cf198ec366c33d6504854.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641cf198ec366c33d6504854\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nThe alternate sequence | can be used to match either the text on the left or the text on the right of the | For example, the regular expression /yes|no/ will match either yes or no Update your helpRegex to match either please help or assist me --hints--\nYour helpRegex should use the | alternate sequence js\nassert include(helpRegex toString(), \"|\");\nYour helpRegex should match the string please help js\nconst help = 'please help';\nassert deepEqual(help match(helpRegex), help match(/please help/i));\nYour helpRegex should match the string assist me js\nconst assist = 'assist me';\nassert deepEqual(assist match(helpRegex), assist match(/assist me/i));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cf198ec366c33d6504854.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d8456ba973a93bfe204a5f180a45363d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cf198ec366c33d6504854.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\n--fcc-editable-region--\nconst helpRegex = /please help/i;\n--fcc-editable-region--\nconst isSpam = (msg) => helpRegex test(msg);\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641cf198ec366c33d6504854.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "69afcc6a4021d09e69d98d7b105196f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3dcd0aec8309fbc9971.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641ce3dcd0aec8309fbc9971\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nStrings have a match() method, which accepts a regular expression as an argument and determines if the string matches that expression Update your isSpam function to return the result of calling the match() method on msg, passing helpRegex as the argument Then, try entering some messages on your page and see the result --hints--\nYour isSpam function should return the result of calling match() on msg, passing helpRegex as the argument js\nconst spam = \"pleAse HelP\";\nassert deepEqual(isSpam(spam), spam match(helpRegex));\nassert isNull(isSpam(\"hello there\"));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3dcd0aec8309fbc9971.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0723824f25d2de62e9106613df247938",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3dcd0aec8309fbc9971.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help/i;\n--fcc-editable-region--\nconst isSpam = (msg) => false;\n--fcc-editable-region--\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ce3dcd0aec8309fbc9971.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fdcaf2fbf146ef0ef277f970666d04f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f6f59d665615c9e94d8a.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 6421f6f59d665615c9e94d8a\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nBefore you start creating additional regular expressions, you need to update your application to check more than one regular expression Start by declaring a denyList variable Assign it an array containing your helpRegex --hints--\nYou should declare a denyList variable js\nassert exists(denyList);\nYour denyList variable should be an array js\nassert isArray(denyList);\nYour denyList array should have helpRegex as its only element js\nassert deepEqual(denyList, [helpRegex]);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f6f59d665615c9e94d8a.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8f909ce774ceaeb96ab5f588483091e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f6f59d665615c9e94d8a.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\n--fcc-editable-region--\nconst isSpam = (msg) => helpRegex test(msg);\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3525,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f6f59d665615c9e94d8a.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2faff20b2e168b30fd9271f7f7803557",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ceed81533263283835c3d.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 641ceed81533263283835c3d\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nInstead of using the match() method, you can use the test() method of a regular expression to test if a string matches the pattern Unlike match(), test() returns a boolean value indicating whether or not the string matches the pattern Update your isSpam() function to use the test() method on helpRegex to test if msg is a match Then, try entering some messages on your page and see the result --hints--\nYour isSpam() function should use the test() method js\nconst testArr = [];\nconst temp = RegExp prototype test;\nRegExp prototype test = (msg) => {testArr push(\"test\")};\ntry {\nisSpam(\"\");\nassert strictEqual(testArr[0], \"test\");\n} finally {\nRegExp prototype test = temp;\n}\nYour isSpam() function should call the test() method on helpRegex with msg as the argument js\nconst testArr = [];\nconst temp = helpRegex test;\nhelpRegex test = (msg) => {testArr push(msg)};\ntry {\nisSpam(\"spam\");\nassert strictEqual(testArr[0], \"spam\");\nassert lengthOf(testArr, 1);\n} finally {\nhelpRegex test = temp;\n}\nYour isSpam() function should return the result of helpRegex test(msg) js\nconst testArr = [];\nconst temp = helpRegex test;\nhelpRegex test = (msg) => testArr push(msg);\nconst spam = \"pleASe HeLp\";\ntry {\nisSpam(spam);\nassert strictEqual(testArr[0], spam);\n} finally {\nhelpRegex test = temp;\nassert isTrue(isSpam(spam));\nassert isFalse(isSpam(\"not spam\"));\n}\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ceed81533263283835c3d.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "faaf3849b82142a34554a2d6822b4623",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ceed81533263283835c3d.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "should return the result of helpRegex test(msg) js const testArr = []; const temp = helpRegex test; helpRegex test = (msg) => testArr push(msg); const spam = \"pleASe HeLp\"; try { isSpam(spam); assert strictEqual(testArr[0], spam); } finally { helpRegex test = temp; assert isTrue(isSpam(spam)); assert isFalse(isSpam(\"not spam\")); } --seed-- --seed-contents-- ```html Learn Regular Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or notMessage:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ceed81533263283835c3d.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "bee81165e2b96265e728f73a4709f7c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ceed81533263283835c3d.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = documentgetElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help/i;\n--fcc-editable-region--\nconst isSpam = (msg) => msg match(helpRegex);\n--fcc-editable-region--\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\641ceed81533263283835c3d.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8f091a5ed41b107df3120cc40807973d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642205fa6376c818f78bb24e.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642205fa6376c818f78bb24e\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nThe next regular expression you will work on is one that matches mentions of dollar amounts Declare a dollarRegex variable, and assign it a case-insensitive regular expression that matches the text dollars Add your dollarRegex to the denyList array so that you can test the regular expression Then try entering a message in your app --hints--\nYou should declare a dollarRegex variable js\nassert exists(dollarRegex);\nYour dollarRegex variable should be a regular expression js\nassert instanceOf(dollarRegex, RegExp);\nYour dollarRegex should match dollars js\nconst dollars = \"dollars\";\nassert deepEqual(dollars match(dollarRegex), dollars match(/dollars/));\nYour dollarRegex should be case-insensitive js\nassert include(dollarRegex flags, 'i');\nYour denyList array should contain helpRegex and dollarRegex js\nassert sameMembers(denyList, [helpRegex, dollarRegex]);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642205fa6376c818f78bb24e.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ac2b82996fa19ca89fd35015b3864174",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642205fa6376c818f78bb24e.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\nconst denyList = [helpRegex];\n--fcc-editable-region--\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642205fa6376c818f78bb24e.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9902ae69b9c4fc2d7b143969cbc25556",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f98f4999d1179ce37cb4.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 6421f98f4999d1179ce37cb4\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nArrays have a some() method Like the filter() method, some() accepts a callback function which should take an element of the array as the argument The some() method will return true if the callback function returns true for at least one element in the array Here is an example of a some() method call to check if any element in the array is an uppercase letter js\nconst arr = [\"A\", \"b\", \"C\"];\narr some(letter => letter === letter toUpperCase());\nUpdate the isSpam() function to use the some() method, which will check if testing msg against any of the regular expressions in denyList returns true \"\n--hints--\nYour isSpam function should use the some() method js\nlet flag = false;\nconst temp = Array prototype some;\nArray prototype some = (arg) => {flag = true};\ntry {\nisSpam(\"\");\nassert isTrue(flag);\n} finally {\nArray prototype some = temp;\n}\nYour isSpam function should call denyList some() js\nlet flag = false;\nconst temp = denyList some;\ndenyList some = (arg) => {flag = true};\ntry {\nisSpam(\"\");\nassert isTrue(flag);\n} finally {\ndenyList some = temp;\n}\nYour isSpam function should return the result of denyList some(), where its callback should evaluate test(msg) on each item of denyList js\nconst help = \"plEase hElp\";\nconst assist = \"AssIst ME\";\nconst notSpam = \"not spam\";\nconst mockSpam = (msg) => denyList some((regex) => regex test(msg));\ndenyList = [helpRegex, /test1/, /test2/]\nassert strictEqual(isSpam(help), mockSpam(help));\nassert strictEqual(isSpam(assist), mockSpam(assist));\nassert strictEqual(isSpam(notSpam), mockSpam(notSpam));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4685,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f98f4999d1179ce37cb4.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4f95cc277aacc528ab33526ce1c34efe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f98f4999d1179ce37cb4.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "should evaluate test(msg) on each item of denyList js const help = \"plEase hElp\"; const assist = \"AssIst ME\"; const notSpam = \"not spam\"; const mockSpam = (msg) => denyList some((regex) => regex test(msg)); denyList = [helpRegex, /test1/, /test2/] assert strictEqual(isSpam(help), mockSpam(help)); assert strictEqual(isSpam(assist), mockSpam(assist)); assert strictEqual(isSpam(notSpam), mockSpam(notSpam)); --seed-- --seed-contents-- ```html Learn Regular Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or notMessage:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4685,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f98f4999d1179ce37cb4.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d88c413119a48de6eb5b02b2fa0af26d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f98f4999d1179ce37cb4.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; }footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst denyList = [helpRegex];\n--fcc-editable-region--\nconst isSpam = (msg) => helpRegex test(msg);\n--fcc-editable-region--\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4685,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6421f98f4999d1179ce37cb4.md",
      "source_type": "git_repo"
    },
    "token_count": 355,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6d1b22a1b6588b452d4ad56b8f0efaa7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642206e054eef81b5e3092ed.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642206e054eef81b5e3092ed\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nYou need to match a number before the text dollars While you could write out 0|1|2 and so on, regular expressions have a feature that makes this easier A character class is defined by square brackets, and matches any character within the brackets For example, [aeiou] matches any character in the list aeiou You can also define a range of characters to match using a hyphen For example, [a-z] matches any character from a to z Add a character class to match the digits 0 through 9 to your dollarRegex expression - remember the digit must come before the word dollars, and there should be a space between the digit and the word --hints--\nYour dollarRegex should use a character class js\nassert match(dollarRegex source, /\\[ *\\]/);\nYour character class should be 0-9 js\nassert match(dollarRegex source, /\\[0-9\\]/);\nYour dollarRegex should still match \"1 dollars\" js\nconst oneDollar = '1 dollars'\nassert deepEqual(oneDollar match(dollarRegex), oneDollar match(/[0-9] dollars/i));\nYour dollarRegex should be case-insensitive js\nassert include(dollarRegex flags, 'i');\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642206e054eef81b5e3092ed.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ab5dd5155d9a7ac664e6554608c9428b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642206e054eef81b5e3092ed.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "a phrase to check if it would be marked as spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 25rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\nconst dollarRegex = /dollars/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642206e054eef81b5e3092ed.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "96041f61483f61cf907ebfbeaa59d958",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642206e054eef81b5e3092ed.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; --fcc-editable-region-- const dollarRegex = /dollars/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex]; const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButton addEventListener(\"click\", () => { if (messageInput value === \"\") { alert(\"Please enter a message \"); return; } result textContent = isSpam(messageInput value) \"Oh noThis looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642206e054eef81b5e3092ed.md",
      "source_type": "git_repo"
    },
    "token_count": 183,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f4a90726ce2443b25fadd05dff1dc377",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642208bc4d44701c6fd6f65e.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642208bc4d44701c6fd6f65e\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nThe dollar value may be more than one digit To match this, the + quantifier can be used - this matches one or more consecutive occurrences For example, the regular expression /a+/ matches one or more consecutive a characters Update your regular expression to match one or more consecutive digits --hints--\nYour dollarRegex should use the + quantifier js\nassert match(dollarRegex source, /\\+/);\nYour dollarRegex should use the + quantifier on your [0-9] character class js\nassert match(dollarRegex source, /\\[0-9\\]\\+/);\nYour dollarRegex should still match \"100 dollars\" js\nconst hundredDollars = '100 dollars'\nassert deepEqual(hundredDollars match(dollarRegex), hundredDollars match(/[0-9]+ dollars/i));\nYour dollarRegex should still match \"3 dollars\" js\nconst threeDollars = '3 dollars'\nassert deepEqual(threeDollars match(dollarRegex), threeDollars match(/[0-9]+ dollars/i));\nYour dollarRegex should be case-insensitive js\nassert include(dollarRegex flags, 'i');\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4152,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642208bc4d44701c6fd6f65e.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "369d83428ddf3fc530a2d80aafbd0be6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642208bc4d44701c6fd6f65e.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "marked as spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 14rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\nconst dollarRegex = /[0-9] dollars/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4152,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642208bc4d44701c6fd6f65e.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "fccf6d3f49caf79e817a436b46897721",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642208bc4d44701c6fd6f65e.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; --fcc-editable-region-- const dollarRegex = /[0-9] dollars/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex]; const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButton addEventListener(\"click\", () => { if (messageInput value === \"\") { alert(\"Please enter a message \"); return; } result textContent = isSpam(messageInput value) \"Oh no This looks like a spam message\"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4152,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642208bc4d44701c6fd6f65e.md",
      "source_type": "git_repo"
    },
    "token_count": 173,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2decb96876fb72558807422cbca9e412",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220e8cb589f61e625bf453.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 64220e8cb589f61e625bf453\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nA capture group is a way to define a part of the expression that should be captured and saved for later reference You can define a capture group by wrapping a part of your expression in parentheses For example, /h(i|ey) camper/ would match either hi camper or hey camper, and would capture i or ey in a group Between your digits and your dollars text, you want to catch place values Add a capture group to your dollarRegex and use the | token inside it to allow hundred, thousand, million, or billion between your digits and your dollars text --hints--\nYour dollarRegex should use a capture group js\nassert match(dollarRegex source, /\\( *\\)/)\nYour dollarRegex should use the | token js\nassert match(dollarRegex source, /\\|/);\nYour dollarRegex should have three | tokens js\nassert lengthOf(dollarRegex source match(/\\|/g), 3);\nYour hundred|thousand|million|billion pattern should be a capture group js\nassert match(dollarRegex source, /\\(hundred\\|thousand\\|million\\|billion\\)/)\nYour dollarRegex should match 1 hundred dollars js\nconst dollarStr = '1 hundred dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i));\nYour dollarRegex should match 1 thousand dollars js\nconst dollarStr = '1 thousand dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i));\nYour dollarRegex should match 1 million dollars js\nconst dollarStr = '1 million dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i));\nYour dollarRegex should match 1 billion dollars js\nconst dollarStr = '1 billion dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i));\nYour dollarRegex should be case-insensitive js\nassert include(dollarRegex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220e8cb589f61e625bf453.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "703dc6932b0334a7c3918c8ae0afe112",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220e8cb589f61e625bf453.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i)); Your dollarRegex should match 1 thousand dollars js const dollarStr = '1 thousand dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i)); Your dollarRegex should match 1 million dollars js const dollarStr = '1 million dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i)); Your dollarRegex should match 1 billion dollars js const dollarStr = '1 billion dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i)); Your dollarRegex should be case-insensitive js assert include(dollarRegexflags, 'i');\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220e8cb589f61e625bf453.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5e3e128ad4a5a1ad8b8570e8a3572920",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220e8cb589f61e625bf453.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\nconst dollarRegex = /[0-9]+ dollars/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220e8cb589f61e625bf453.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "28f2fcf0a7a962e50faf65b5ec16734f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220fb017c57d20612de8b8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 64220fb017c57d20612de8b8\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nNow that you have your capture group, you can mark the entire pattern as an optional match The quantifier matches zero or one occurrence of the preceding character or group For example, the regular expression /colou r/ matches both color and colour, because the u is optional Mark your capture group as optional --hints--\nYour dollarRegex should use the quantifier js\nassert match(dollarRegex source, /\\ /);\nYour (hundred|thousand|million|billion) capture group should be optional js\nassert match(dollarRegex source, /\\(hundred\\|thousand\\|million\\|billion\\)\\ /);\nYour dollarRegex should still match 1 million dollars js\nconst dollarStr = '1 million dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+ (hundred|thousand|million|billion) dollars/i));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220fb017c57d20612de8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "96da6830eb32ad8a0f3af3aa810eda8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220fb017c57d20612de8b8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\nconst dollarRegex = /[0-9]+ (hundred|thousand|million|billion) dollars/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220fb017c57d20612de8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ed903cf208fea8a608ff3a76ce345485",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220fb017c57d20612de8b8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "= document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; --fcc-editable-region-- const dollarRegex = /[0-9]+ (hundred|thousand|million|billion) dollars/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex]; const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButton addEventListener(\"click\", () => { if (messageInput value === \"\") { alert(\"Please enter a message \"); return; } result textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \" : \"This message does not seem to contain any spam \"; messageInputvalue = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64220fb017c57d20612de8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 157,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "478b81516de3b7f74bbd4368346f1c80",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642213bf8d38b0227ed6ab0b.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642213bf8d38b0227ed6ab0b\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nYour next regular expression will look for strings like free money Declare a freeRegex variable and assign it a regular expression that will match the string free money Remember to make it case-insensitive Then, add your new regular expression to your denyList array so you can test it --hints--\nYou should declare a freeRegex variable js\nassert exists(freeRegex);\nYour freeRegex variable should be a regular expression js\nassert instanceOf(freeRegex, RegExp);\nYour freeRegex should match free money js\nconst spam = \"free money\";\nassert deepEqual(spam match(freeRegex), spam match(/free money/));\nYour freeRegex should be case-insensitive js\nassert include(freeRegex flags, 'i');\nYour denyList array should include your freeRegex variable js\nassert deepInclude(denyList, freeRegex);\nYour denyList array should include your dollarRegex variable js\nassert deepInclude(denyList, dollarRegex);\nYour denyList array should include your helpRegex variable js\nassert deepInclude(denyList, helpRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4247,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642213bf8d38b0227ed6ab0b.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "79cc0a2ee54e0fee2ee1bfe1c5dece1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642213bf8d38b0227ed6ab0b.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; }message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex];\n--fcc-editable-region--\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4247,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642213bf8d38b0227ed6ab0b.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0a3777c999cecae7ede7b759efc131d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642213bf8d38b0227ed6ab0b.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex]; --fcc-editable-region-- const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButton addEventListener(\"click\", () => { if (messageInput value === \"\") { alert(\"Please enter a message \"); return; } resulttextContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4247,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642213bf8d38b0227ed6ab0b.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b9da2c74183d0b09dd2a94ba239fe407",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423322e71f8d108608005cb.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 6423322e71f8d108608005cb\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nNow update your o character to match o and 0 (the digit) --hints--\nYour freeRegex should use a character class to match o and 0 js\nassert match(freeRegex source, /\\[(o0|0o)\\]/);\nYour freeRegex should match free money js\nassert match('free money', freeRegex);\nYour freeRegex should match fr33 m0n3y js\nassert match('fr33 m0n3y', freeRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423322e71f8d108608005cb.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "060016a5777314643f423b730f8a2a15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423322e71f8d108608005cb.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\n--fcc-editable-region--\nconst freeRegex = /fr[e3][e3] mon[e3]y/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423322e71f8d108608005cb.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5a9d45de4947b722ea034f35dbbebced",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64221007887f38213fa57827.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 64221007887f38213fa57827\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nOne last thing with this expression You don't actually need the match value from your capture group, so you can turn it into a non-capturing group This will allow you to group the characters together without preserving the result To create a non-capturing group in a regular expression, you can add : after the opening parenthesis of a group For instance, ( :a|b) will match either a or b, but it will not capture the result Update your regular expression to use a non-capturing group --hints--\nYour dollarRegex should use : js\nassert match(dollarRegex source, /\\ :/);\nYour dollarRegex should use a non-capturing group js\nassert match(dollarRegex source, /\\(\\ : *\\)/);\nYour (hundred|thousand|million|billion) should be a non-capturing group js\nassert match(dollarRegex source, /\\(\\ :hundred\\|thousand\\|million\\|billion\\)/);\nYour dollarRegex should still match 10hundred dollars js\nlet dollarStr = '10hundred dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i));\nYour dollarRegex should still match 10 hundred  dollars js\nlet dollarStr = '10 hundred  dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i));\nYour dollarRegex should still match 100 dollars js\nlet dollarStr = '100 dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64221007887f38213fa57827.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a5eef93a33914697cd4dec656fa686a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64221007887f38213fa57827.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i)); Your dollarRegex should still match 10 hundred dollars js let dollarStr = '10 hundred dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i)); Your dollarRegex should still match 100 dollars js let dollarStr = '100 dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i)); --seed-- --seed-contents-- ```html Learn Regular Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or notMessage:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64221007887f38213fa57827.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "88b65eece1acbedf9f93811d3a28696e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64221007887f38213fa57827.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\nconst dollarRegex = /[0-9]+\\s*(hundred|thousand|million|billion) \\s+dollars/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64221007887f38213fa57827.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c354a0dfea0a09e69413873f72268044",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233094a1293c079b5b0996.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 64233094a1293c079b5b0996\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nSpam messages often use numbers instead of letters to bypass filters Your regular expression should catch these Replace the e characters in your regular expression with character classes that match e and 3 --hints--\nYour freeRegex should use a character class js\nassert match(freeRegex source, /\\[ *\\]/);\nYour freeRegex should use a character class to match e and 3 js\nassert match(freeRegex source, /\\[(e3|3e)\\]/);\nYour freeRegex should use three character classes to match e and 3 js\nassert lengthOf(freeRegex source match(/\\[(e3|3e)\\]/g), 3);\nYour freeRegex should match free money js\nassert equal(\"free money\" match(freeRegex) [0], \"free money\");\nYour freeRegex should match fr33 mon3y js\nassert equal(\"fr33 mon3y\" match(freeRegex) [0], \"fr33 mon3y\");\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4034,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233094a1293c079b5b0996.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "87d26af4f33dece66f2b75280880a07f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233094a1293c079b5b0996.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 15rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\n--fcc-editable-region--\nconst freeRegex = /free money/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4034,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233094a1293c079b5b0996.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3350079b353bf886064359bb0a22b999",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233094a1293c079b5b0996.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; --fcc-editable-region-- const freeRegex = /free money/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex, freeRegex]; const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButton addEventListener(\"click\", () => { if (messageInput value === \"\") { alert(\"Please enter a message \"); return; } resulttextContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4034,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233094a1293c079b5b0996.md",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6765f10dfbc7abd7dac7d3341b1e185f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335220b7d830a69eb59fb.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642335220b7d830a69eb59fb\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nIf you try entering the message free money, you'll notice it doesn't match your expression This is because \\s doesn't match the beginning or end of the text To match the beginning of the text, you can use the ^ anchor This asserts that your pattern match starts at the beginning of the full string Replace your first \\s character with a non-capturing group that matches \\s or ^ --hints--\nYour freeRegex should use a non-capturing group js\nassert match(freeRegex source, /\\(\\ :/);\nYour freeRegex should use a non-capturing group to match \\s or ^ js\nassert match(freeRegex source, /\\(\\ :(\\^\\|\\\\s|\\\\s\\|\\^)\\)/);\nYour freeRegex should match it's free money time js\nassert match(\"it's free money time\", freeRegex);\nYour freeRegex should match free money time js\nassert match('free money time', freeRegex);\nYour freeRegex should not match hands-free money time js\nassert notMatch('hands-free money', freeRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335220b7d830a69eb59fb.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bdb9b0329756ca1613a74f1d0f9eedd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335220b7d830a69eb59fb.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; }message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\n--fcc-editable-region--\nconst freeRegex = /\\sfr[e3][e3] m[o0]n[e3]y\\s/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex];\nconst isSpam = (msg) => denyList some((regex) => regex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335220b7d830a69eb59fb.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d12b7b4f347a7c81bbbcae1914d9f0ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335220b7d830a69eb59fb.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; --fcc-editable-region-- const freeRegex = /\\sfr[e3][e3] m[o0]n[e3]y\\s/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex, freeRegex]; const isSpam = (msg) => denyList some((regex) => regextest(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335220b7d830a69eb59fb.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a3408f749fe09fa4d9dfd605f6942a28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423331f0527840934183aba.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 6423331f0527840934183aba\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nYour regex should match whole words, not partial words That is, you do not want to match hands-free money management To do this, start by checking for spaces before and after your pattern You can do this by using the meta character \\s, which will match spaces, tabs, and line breaks --hints--\nYour freeRegex should use the \\s token js\nassert match(freeRegex source, /\\\\s/);\nYour freeRegex should look for spaces at the beginning and end of your pattern js\nassert isTrue(freeRegex source startsWith('\\\\s'));\nassert isTrue(freeRegex source endsWith('\\\\s'));\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3797,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423331f0527840934183aba.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "35fb091783cc91485b921de223a13e56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423331f0527840934183aba.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\n--fcc-editable-region--\nconst freeRegex = /fr[e3][e3] m[o0]n[e3]y/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3797,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423331f0527840934183aba.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c794a17062ac4cfbf5db547b57c3fd13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335d232d7690b2d67dbaf.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642335d232d7690b2d67dbaf\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nYou still aren't matching free money yet, because you need to match the end of the string as well Like the ^ anchor, you can use the $ anchor to match the end of the string Update your regular expression to match either the end of the string or a space, like you did for the beginning of the string --hints--\nYour freeRegex should use a second non-capturing group js\nassert lengthOf(freeRegex source match(/\\(\\ :/g), 2);\nYour freeRegex should use a non-capturing group to match \\s or $ js\nassert match(freeRegex source, /\\(\\ :(\\$\\|\\\\s|\\\\s\\|\\$)\\)/);\nYour freeRegex should match it's free money time js\nassert match(\"it's free money time\", freeRegex);\nYour freeRegex should match free money time js\nassert match('free money time', freeRegex);\nYour freeRegex should match it's free money js\nassert match(\"it's free money\", freeRegex);\nYour freeRegex should match free money js\nassert match('free money', freeRegex);\nYour freeRegex should not match hands-free money time js\nassert notMatch('hands-free money', freeRegex);\nYour freeRegex should not match free money-management js\nassert notMatch('free money-management', freeRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335d232d7690b2d67dbaf.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f0bdc59388fa54df9ec318837a8068ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335d232d7690b2d67dbaf.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; }main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\n--fcc-editable-region--\nconst freeRegex = /(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335d232d7690b2d67dbaf.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ec09198ba871f76a9ae5dad119db8b39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335d232d7690b2d67dbaf.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; --fcc-editable-region-- const freeRegex = /(:^|\\s)fr[e3][e3] m[o0]n[e3]y\\s/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4467,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642335d232d7690b2d67dbaf.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5abb768582ff4a7704ed5fda6a601c49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233d08f234a310e73f9496.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 64233d08f234a310e73f9496\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nYour next regular expression will match strings like stock alert Declare a stockRegex variable and assign it a regular expression that will match the string stock alert Remember to make it case insensitive Add it to your denyList array as well --hints--\nYou should declare a stockRegex variable js\nassert exists(stockRegex);\nYour stockRegex variable should be assigned a regular expression js\nassert instanceOf(stockRegex, RegExp);\nYour stockRegex should match stock alert js\nconst spam = 'stock alert';\nassert deepEqual(spam match(stockRegex), spam match(/stock alert/));\nYour stockRegex should be case-insensitive js\nassert include(stockRegex flags, 'i');\nYour denyList array should contain stockRegex js\nassert deepInclude(denyList, stockRegex);\nYour denyList array should contain freeRegex js\nassert deepInclude(denyList, freeRegex);\nYour denyList array should contain dollarRegex js\nassert deepInclude(denyList, dollarRegex);\nYour denyList array should contain helpRegex js\nassert deepInclude(denyList, helpRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4362,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233d08f234a310e73f9496.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b3fa72149a0758d951d04557bc396a4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233d08f234a310e73f9496.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; }message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex];\n--fcc-editable-region--\nconst isSpam = (msg) => denyList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4362,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233d08f234a310e73f9496.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1b932459ab1b64ff0b7dcce41fbc77bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233d08f234a310e73f9496.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; const freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex, freeRegex]; --fcc-editable-region-- const isSpam = (msg) => denyListsome((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4362,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64233d08f234a310e73f9496.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8c9e4b30f431be4dee675bb8b8c5c0bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642344dc9390c712080432c7.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642344dc9390c712080432c7\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nLike your freeRegex, update your stockRegex to replace the e and o characters with character classes to match the letter and the corresponding number --hints--\nYour stockRegex should use a character class to match the letter e and the number 3 js\nassert match(stockRegex source, /\\[(e3|3e)\\]/);\nYour stockRegex should use a character class to match the letter o and the number 0 js\nassert match(stockRegex source, /\\[(o0|0o)\\]/);\nYour stockRegex should match stock alert js\nassert match('stock alert', stockRegex);\nYour stockRegex should match st0ck al3rt js\nassert match('st0ck al3rt', stockRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3938,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642344dc9390c712080432c7.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5edc4a44f120dab2ad367dbbaea6357a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642344dc9390c712080432c7.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\n--fcc-editable-region--\nconst stockRegex = /stock alert/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3938,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642344dc9390c712080432c7.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "60c5a9ccbe79f383f95a26e3917eb400",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642344dc9390c712080432c7.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; const freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i; --fcc-editable-region-- const stockRegex = /stock alert/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex, freeRegex, stockRegex]; const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButtonaddEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3938,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642344dc9390c712080432c7.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9e5cc9efb5706bee7c7a49a1100d0d6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234598ef08dd13114edae5.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 64234598ef08dd13114edae5\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nNext update your s and t characters to also match 5 and 7 respectively --hints--\nYour stockRegex should use a character class to match the letter s and the number 5 js\nassert match(stockRegex source, /\\[(s5|5s)\\]/);\nYour stockRegex should use a character class to match the letter t and the number 7 js\nassert match(stockRegex source, /\\[(t7|7t)\\]/);\nYour stockRegex should match stock alert js\nassert match('stock alert', stockRegex);\nYour stockRegex should match 570ck al3r7 js\nassert match('570ck al3r7', stockRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3865,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234598ef08dd13114edae5.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a91dcffe73fa1aef88e6f63e3d2cd3c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234598ef08dd13114edae5.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\n--fcc-editable-region--\nconst stockRegex = /st[o0]ck al[e3]rt/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3865,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234598ef08dd13114edae5.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4b1d544bd663fb3df63cb9aa8d6aab9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234598ef08dd13114edae5.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; const freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i; --fcc-editable-region-- const stockRegex = /st[o0]ck al[e3]rt/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex, freeRegex, stockRegex]; const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButtonaddEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3865,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234598ef08dd13114edae5.md",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f75ce63a45c1db2d8cdb20cde738c269",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423472aeed932150e8984b6.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 6423472aeed932150e8984b6\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nUsing the same syntax, update c to match c, {, [, and ( --hints--\nYour stockRegex should use a character class to match c, {, [, and ( js\nassert match(stockRegex source, /\\[(c\\{\\[\\(|\\{c\\[\\(|\\[c\\{\\(|c\\[\\{\\(|\\{\\[c\\(|\\[\\{c\\(|\\[\\{\\(c|\\{\\[\\(c|\\(\\[\\{c|\\[\\(\\{c|\\{\\(\\[c|\\(\\{\\[c|\\(c\\[\\{|c\\(\\[\\{|\\[\\(c\\{|\\(\\[c\\{|c\\[\\(\\{|\\[c\\(\\{|\\{c\\(\\[|c\\{\\(\\[|\\(\\{c\\[|\\{\\(c\\[|c\\(\\{\\[|\\(c\\{\\[)\\]/);\nYour stockRegex should match stock alert js\nassert match('stock alert', stockRegex);\nYour stockRegex should match 570(k 4l3r7 js\nassert match('570(k 4l3r7', stockRegex);\nYour stockRegex should match sto{k alert js\nassert match('sto{k alert', stockRegex);\nYour stockRegex should match sto[k alert js\nassert match('sto[k alert', stockRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423472aeed932150e8984b6.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8b1c76bcdda3a05d13e523be47116ec2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423472aeed932150e8984b6.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; }main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423472aeed932150e8984b6.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "825bb0edd77512f6edc3035639f5d153",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423472aeed932150e8984b6.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "{ display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; const freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y(:$|\\s)/i;\n--fcc-editable-region--\nconst stockRegex = /[s5][t7][o0]ck [a@4]l[e3]r[t7]/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4087,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423472aeed932150e8984b6.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b9abbd9649ec3a2fa85ef29b7adf241d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234797d84734163088961a.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 64234797d84734163088961a\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nFinally, allow your regex to match whole words (like you did with freeRegex) --hints--\nYour stockRegex should use a non-capturing group js\nassert match(stockRegex source, /\\(\\ :/);\nYour stockRegex should use a non-capturing group to match \\s or ^ js\nassert match(stockRegex source, /\\(\\ :(\\^\\|\\\\s|\\\\s\\|\\^)\\)/);\nYour stockRegex should use a second non-capturing group js\nassert lengthOf(stockRegex source match(/\\(\\ :/g), 2);\nYour stockRegex should use a non-capturing group to match \\s or $ js\nassert match(stockRegex source, /\\(\\ :(\\$\\|\\\\s|\\\\s\\|\\$)\\)/);\nYour stockRegex should match it's stock alert time js\nassert match(\"it's stock alert time\", stockRegex);\nYour stockRegex should match stock alert time js\nassert match('stock alert time', stockRegex);\nYour stockRegex should match it's stock alert js\nassert match(\"it's stock alert\", stockRegex);\nYour stockRegex should match stock alert js\nassert match('stock alert', stockRegex);\nYour stockRegex should not match hands-stock alert time js\nassert notMatch('hands-stock alert', stockRegex);\nYour stockRegex should not match stock alert-management js\nassert notMatch('stock alert-management', stockRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234797d84734163088961a.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "24d9d3abb449d0126385eaac735009d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234797d84734163088961a.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "stockRegex should match it's stock alert js assert match(\"it's stock alert\", stockRegex); Your stockRegex should match stock alert js assert match('stock alert', stockRegex); Your stockRegex should not match hands-stock alert time js assert notMatch('hands-stock alert', stockRegex); Your stockRegex should not match stock alert-management js assert notMatch('stock alert-management', stockRegex); --seed-- --seed-contents-- ```html Learn Regular Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or notMessage:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234797d84734163088961a.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "71ca42f37116678827ac613e9dad4b00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234797d84734163088961a.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "} message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = documentgetElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\n--fcc-editable-region--\nconst stockRegex = /[s5][t7][o0][c{[(]k [a@4]l[e3]r[t7]/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\64234797d84734163088961a.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "083157032f8c85688345fe38d0578395",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423462975f33b14056583de.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 6423462975f33b14056583de\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nCharacter classes can take more than two characters Replace your a character with a character class that matches a, @, and 4 --hints--\nYour stockRegex should use a character class to match a, @, and 4 js\nassert match(stockRegex source, /\\[(a@4|a4@|4@a|4a@|@a4|@4a)]/);\nYour stockRegex should match stock alert js\nassert match('stock alert', stockRegex);\nYour stockRegex should match stock @lert js\nassert match('stock @lert', stockRegex);\nYour stockRegex should match stock 4lert js\nassert match('stock 4lert', stockRegex);\nYour stockRegex should match 570ck 4l3r7 js\nassert match('570ck 4l3r7', stockRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423462975f33b14056583de.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d9da82819c0040be1ea1bf1dff38902d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423462975f33b14056583de.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\n--fcc-editable-region--\nconst stockRegex = /[s5][t7][o0]ck al[e3]r[t7]/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex];\nconst isSpam = (msg) => denyList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423462975f33b14056583de.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0abb753a7613f6562ee15f5615bfc3a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423462975f33b14056583de.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "} btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; const freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i; --fcc-editable-region-- const stockRegex = /[s5][t7][o0]ck al[e3]r[t7]/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex, freeRegex, stockRegex]; const isSpam = (msg) => denyListsome((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423462975f33b14056583de.md",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0b82a0b5a8c3434d25536ceb454c4929",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423491485db5e1786dd6434.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 6423491485db5e1786dd6434\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nYour final regular expression will look for strings like dear friend Declare a dearRegex and assign it a regular expression that will match the string dear friend Remember to make it case insensitive, and add it to your denyList array --hints--\nYou should declare a dearRegex variable js\nassert exists(dearRegex);\nYour dearRegex variable should be assigned a regular expression js\nassert instanceOf(dearRegex, RegExp);\nYour dearRegex should match dear friend js\nconst spam = 'dear friend';\nassert deepEqual(spam match(dearRegex), spam match(/dear friend/));\nYour dearRegex should be case-insensitive js\nassert include(dearRegex flags, 'i');\nYour denyList array should contain dearRegex js\nassert deepInclude(denyList, dearRegex);\nYour denyList array should contain stockRegex js\nassert deepInclude(denyList, stockRegex);\nYour denyList array should contain freeRegex js\nassert deepInclude(denyList, freeRegex);\nYour denyList array should contain dollarRegex js\nassert deepInclude(denyList, dollarRegex);\nYour denyList array should contain helpRegex js\nassert deepInclude(denyList, helpRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4533,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423491485db5e1786dd6434.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "769cd2ac34a622e5884fb18154bbc92c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423491485db5e1786dd6434.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "to check if it would be marked as spam or not Message: Check message © freeCodeCamp ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; }description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\nconst stockRegex = /(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4533,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423491485db5e1786dd6434.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e2ef16b833bf5a4e50afcb77bafce04c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423491485db5e1786dd6434.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; const freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i; const stockRegex = /(:^|\\s)[s5][t7][o0][c{[(]k [a@4]l[e3]rt7/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex];\n--fcc-editable-region--\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4533,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\6423491485db5e1786dd6434.md",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6b34930a0163e612e3770110abc0667c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-sql-student-database-part-1\\602da0c222201c65d2a019f5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 602da0c222201c65d2a019f5\ntitle: \"Build a Student Database: Part 1\"\nchallengeType: 12\nurl: freeCodeCamp/learn-sql-by-building-a-student-database-part-1\ndashedName: build-a-student-database-part-1\n--description--\nIn this 140-lesson workshop, you will create a Bash script that uses SQL to enter information about your computer science students into PostgreSQL.\n--instructions--\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 437,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-sql-student-database-part-1\\602da0c222201c65d2a019f5.md",
      "source_type": "git_repo"
    },
    "token_count": 114,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dadb2a6969398403c75fd21320734407",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-sql-student-database-part-2\\618590adb0730ca724e37672.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 618590adb0730ca724e37672\ntitle: \"Build a Student Database: Part 2\"\nchallengeType: 12\nurl: freeCodeCamp/learn-sql-by-building-a-student-database-part-2\ndashedName: build-a-student-database-part-2\n--description--\nIn this 140-lesson course, you will complete your student database while diving deeper into SQL commands.\n--instructions--\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 395,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-sql-student-database-part-2\\618590adb0730ca724e37672.md",
      "source_type": "git_repo"
    },
    "token_count": 103,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "757ae7abc09b8a92d69b54b426d9b876",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-sql-reference-object\\5fa323cdaf6a73463d590659.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5fa323cdaf6a73463d590659\ntitle: Build an SQL Reference Object\nchallengeType: 12\nurl: freeCodeCamp/learn-git-by-building-an-sql-reference-object\ndashedName: build-an-sql-reference-object\n--description--\nIn this 240-lesson workshop, you will learn how Git keeps track of your code by creating an object containing commonly used SQL commands.\n--instructions--\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 418,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-sql-reference-object\\5fa323cdaf6a73463d590659.md",
      "source_type": "git_repo"
    },
    "token_count": 101,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1f613e0d696a86621d4a62cfd36d2ac7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa1717ba9ea1a5fa028e0.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa1717ba9ea1a5fa028e0\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nCreate a main element with a class of story-container Inside the story-container element, create a div with a class of btn-container --hints--\nYou should have a main element with a class of story-container js\nassert exists(document querySelector('main story-container'));\nInside the story-container element, you should have a div with a class of btn-container js\nassert exists(document querySelector('main story-container div btn-container'));\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa1717ba9ea1a5fa028e0.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d51657ec21a8370e15eeb582d0b4425b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671f99a5dc221afb86fa2dc0.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671f99a5dc221afb86fa2dc0\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will build a storytelling app that allows users to select a type of story and display a short story of that type The CSS and the HTML boilerplate has been provided for you Begin by creating an h1 element and give it a text Want to hear a short story --hints--\nYou should have an h1 with the text Want to hear a short story js\nassert exists(document querySelector('h1'));\nassert equal(document querySelector('h1') textContent, 'Want to hear a short story ');\n--seed--\n--seed-contents--\n```html\nStorytelling App\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671f99a5dc221afb86fa2dc0.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "783575f1988c99417e0a4685e07755b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671f99a5dc221afb86fa2dc0.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "{ margin: 10px 0 15px; } story-container { margin: auto; padding: 10px; width: 80%; border-style: double; border-width: 14px; border-color: var(--white); } btn-container { display: flex; flex-direction: column; justify-content: center; align-items: center; } @media (min-width: 760px) { btn-container { flex-direction: row; } } result { margin-top: 15px; font-size: 1 2rem; line-height: 30px; } btn { cursor: pointer; width: 200px; margin: 10px 0 10px 0 5rem; color: var(--black); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671f99a5dc221afb86fa2dc0.md",
      "source_type": "git_repo"
    },
    "token_count": 210,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0141de8d578adbd5e20c8f11ade2f1a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 66bb6467b4b7381178420970\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nWhile this expression does match 1 hundred dollars, it will not match 1  hundred  dollars, or 10 dollars Spam messages can and will find a way to exploit flaws in your detection Time to improve your regex Replace the first literal space with the \\s* expression The \\s character class matches whitespace, such as spaces, tabs, and new lines The * quantifier means \"match the previous character 0 or more times\" Replace the second literal space with \\s+ The + quantifier means \"match the previous character at least one time\" --hints--\nYour dollarRegex must not use literal spaces js\nassert notMatch(dollarRegex source, / /);\nYour dollarRegex must allow any number of spaces before the dollar quantity, and one or more spaces after js\nlet dollarStr = '10hundred dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*(hundred|thousand|million|billion) \\s+dollars/i));\ndollarStr = '10 hundred   dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*(hundred|thousand|million|billion) \\s+dollars/i));\ndollarStr = '10    hundred dollars'\nassert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*(hundred|thousand|million|billion) \\s+dollars/i));\ndollarStr = '10 hundreddollars'\nassert notMatch(dollarStr, dollarRegex)\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "f943ee8d95502d45f466bd4bed0751df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "quantity, and one or more spaces after js let dollarStr = '10hundred dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*(hundred|thousand|million|billion) \\s+dollars/i)); dollarStr = '10 hundred dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*(hundred|thousand|million|billion) \\s+dollars/i)); dollarStr = '10 hundred dollars' assert deepEqual(dollarStr match(dollarRegex), dollarStr match(/[0-9]+\\s*(hundred|thousand|million|billion) \\s+dollars/i)); dollarStr = '10 hundreddollars' assert notMatch(dollarStr, dollarRegex) --seed-- --seed-contents-- ```html Learn Regular Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or notMessage:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "392ef5d979ed96734f017580a20e6148",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\n--fcc-editable-region--\nconst dollarRegex = /[0-9]+ (hundred|thousand|million|billion) dollars/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8ad63b7206ef3b83730b7e30ee82057e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "= document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; --fcc-editable-region-- const dollarRegex = /[0-9]+ (hundred|thousand|million|billion) dollars/i; --fcc-editable-region-- const denyList = [helpRegex, dollarRegex]; const isSpam = (msg) => denyList some((regex) => regex test(msg)); checkMessageButton addEventListener(\"click\", () => { if (messageInput value === \"\") { alert(\"Please enter a message \"); return; } result textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \" : \"This message does not seem to contain any spam \"; messageInputvalue = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4480,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\66bb6467b4b7381178420970.md",
      "source_type": "git_repo"
    },
    "token_count": 157,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "eb1b92a7054ee95531759a91f9fb7a8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa3adf532d9231b2c25b8.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa3adf532d9231b2c25b8\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nBelow the .btn-container element, you should have a p element with the id of result. This is where the story will be displayed.\n--hints--\nYou should have a p element with the id of result.\njs\nassert.exists(document.querySelector('.story-container p#result'));\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story?\nScary Story\nFunny Story\nAdventure Story\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n}\n.story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n}\n.btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) {\n.btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1.2rem;\nline-height: 30px;\n}\n.btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0.5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}\n.btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2360,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa3adf532d9231b2c25b8.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3cc4d826eded71ebc4bed15273da6f99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa537114e412950b62089.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa537114e412950b62089\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nIn your JavaScript file, select the story-container element and store it in a variable called storyContainer --hints--\nYou should have a storyContainer variable js\nassert isDefined(storyContainer);\nYou should select the story-container element using the querySelector method and store it in the storyContainer variable js\nassert deepEqual(storyContainer, document querySelector(\" story-container\"));\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa537114e412950b62089.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "043631c9ff56242500d5989ea491cdeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa47e415d88263d349a10.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa47e415d88263d349a10\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nNext, you will start working on the JavaScript For that, begin by linking the script js file to your HTML Create a script element with its src attribute pointing to the script js file For example:\n```html\n```\n--hints--\nYou should create a script element js\nassert lengthOf(document querySelectorAll('script'), 1);\nYour script element should have a src attribute set to script js js\nconst script = document querySelector(\"script[data-src$='script js']\");\nassert exists(script);\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa47e415d88263d349a10.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3c38ea82309109e500251e83b7fc549a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa47e415d88263d349a10.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "{ background-color: var(--dark-grey); color: var(--white); } h1, result { text-align: center; } h1 { margin: 10px 0 15px; } story-container { margin: auto; padding: 10px; width: 80%; border-style: double; border-width: 14px; border-color: var(--white); } btn-container { display: flex; flex-direction: column; justify-content: center; align-items: center; } @media (min-width: 760px) { btn-container { flex-direction: row; } } result { margin-top: 15px; font-size: 1 2rem; line-height: 30px; } btn { cursor: pointer; width: 200px; margin: 10px 0 10px 05rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa47e415d88263d349a10.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0a2e9f0278378833b935b20fd635aeda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "id: 642349b5b7bae31af21cd5f8\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nTo put everything you have learned together, update your dearRegex to map the vowels to the corresponding numbers (note that i should match 1, and also match the pipe symbol |), and to match whole words With that, your spam filter project is complete --hints--\nYour dearRegex should use a character class to match e or 3 js\nassert match(dearRegex source, /\\[(e3|3e)\\]/);\nYour dearRegex should use a character class to match a, @, or 4 js\nassert match(dearRegex source, /\\[(a@4|a4@|4a@|4@a|@a4|@4a)\\]/);\nYour dearRegex should use a character class to match i, 1, or | js\nassert match(dearRegex source, /\\[(i1\\||i\\|1|1i\\||1\\|i|\\|1i|\\|i1)\\]/);\nYour dearRegex should use a non-capturing group js\nassert match(dearRegex source, /\\(\\ :/);\nYour dearRegex should use a non-capturing group to match \\s or ^ js\nassert match(dearRegex source, /\\(\\ :(\\^\\|\\\\s|\\\\s\\|\\^)\\)/);\nYour dearRegex should use a second non-capturing group js\nassert lengthOf(dearRegex source match(/\\(\\ :/g), 2);\nYour dearRegex should use a non-capturing group to match \\s or $ js\nassert match(dearRegex source, /\\(\\ :(\\$\\|\\\\s|\\\\s\\|\\$)\\)/);\nYour dearRegex should match dear friend js\nassert match('dear friend', dearRegex);\nYour dearRegex should match d34r fr13nd js\nassert match('d34r fr13nd', dearRegex);\nYour dearRegex should match d3@r fr|3nd js\nassert match('d3@r fr|3nd', dearRegex);\nYour dearRegex should match my dear friend Naomi js\nassert match('my dear friend Naomi', dearRegex);\nYour dearRegex should match dear friend Naomi js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "6d64f5a95d5e07bb50e2d2a55b459ae5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "2); Your dearRegex should use a non-capturing group to match \\s or $ js assert match(dearRegex source, /\\(\\ :(\\$\\|\\\\s|\\\\s\\|\\$)\\)/); Your dearRegex should match dear friend js assert match('dear friend', dearRegex); Your dearRegex should match d34r fr13nd js assert match('d34r fr13nd', dearRegex); Your dearRegex should match d3@r fr|3nd js assert match('d3@r fr|3nd', dearRegex); Your dearRegex should match my dear friend Naomi js assert match('my dear friend Naomi', dearRegex); Your dearRegex should match dear friend Naomi js assertmatch('dear friend Naomi', dearRegex);\nYour dearRegex should match my dear friend js\nassert match('my dear friend', dearRegex);\nYour dearRegex should not match non-dear friend js\nassert notMatch('non-dear friend', dearRegex);\nYour dearRegex should not match dear friend-o js\nassert notMatch('dear friend-o', dearRegex);\n--seed--\n--seed-contents--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not Message:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "821f80ce88a3fed28972951c894a5fc9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--light-grey); } body, message-input:placeholder-shown { text-align: center; } textarea { max-width: 90%; } main-text { margin: 25px 0; } title { font-size: 2 5rem; } description { margin-top: 15px; font-size: 1 4rem; } message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document getElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\nconst stockRegex = /(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "74174862d5fa150d18114fb9de940d6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = document getElementById(\"check-message-btn\"); const helpRegex = /please help|assist me/i; const dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i; const freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i; const stockRegex = /(:^|\\s)[s5][t7][o0][c{[(]k [a@4]l[e3]rt7/i;\n--fcc-editable-region--\nconst dearRegex = /dear friend/i;\n--fcc-editable-region--\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex, dearRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```\n--solutions--\n```html\nLearn Regular Expressions by Building a Spam Filter\nIs this Spam Enter a phrase to check if it would be marked as spam or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "bb7b9387693a955e4273ee76f8c5e229",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "checkMessageButton addEventListener(\"click\", () => { if (messageInput value === \"\") { alert(\"Please enter a message \"); return; } result textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \" : \"This message does not seem to contain any spam \"; messageInput value = \"\"; }); ``` --solutions-- ```html Learn Regular Expressions by Building a Spam Filter Is this Spam Enter a phrase to check if it would be marked as spam or notMessage:\nCheck message\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\n}\nbody,\nmessage-input:placeholder-shown {\ntext-align: center;\n}\ntextarea {\nmax-width: 90%;\n} main-text {\nmargin: 25px 0;\n} title {\nfont-size: 2 5rem;\n} description {\nmargin-top: 15px;\nfont-size: 1 4rem;\n} message-label {\ndisplay: block;\nmargin-bottom: 20px;\nfont-size: 1 5rem;\n}\nmessage-input:placeholder-shown,\ntextarea {\nfont-size: 1 1rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 200px;\nmargin: 10px auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult {\nfont-size: 2rem;\nmargin: 20px 0;\n} footer {\nmargin-top: 10px;\n}\n```\n```js\nconst messageInput = document getElementById(\"message-input\");\nconst result = document getElementById(\"result-message\");\nconst checkMessageButton = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "11351964947b0b765807a5f7ec21364b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
    "source_type": "git_repo",
    "title": "Learn Regular Expressions by Building a Spam Filter",
    "content": "} message-label { display: block; margin-bottom: 20px; font-size: 1 5rem; } message-input:placeholder-shown, textarea { font-size: 1 1rem; } btn { display: block; cursor: pointer; width: 200px; margin: 10px auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result { font-size: 2rem; margin: 20px 0; } footer { margin-top: 10px; } ``` ```js const messageInput = document getElementById(\"message-input\"); const result = document getElementById(\"result-message\"); const checkMessageButton = documentgetElementById(\"check-message-btn\");\nconst helpRegex = /please help|assist me/i;\nconst dollarRegex = /[0-9]+\\s*( :hundred|thousand|million|billion) \\s+dollars/i;\nconst freeRegex = /( :^|\\s)fr[e3][e3] m[o0]n[e3]y( :$|\\s)/i;\nconst stockRegex = /( :^|\\s)[s5][t7][o0][c{[(]k [a@4]l[e3]rt7/i;\nconst dearRegex = /( :^|\\s)d[e3][a@4]r fr[i1|][e3]nd( :$|\\s)/i;\nconst denyList = [helpRegex, dollarRegex, freeRegex, stockRegex, dearRegex];\nconst isSpam = (msg) => denyList some((regex) => regex test(msg));\ncheckMessageButton addEventListener(\"click\", () => {\nif (messageInput value === \"\") {\nalert(\"Please enter a message \");\nreturn;\n}\nresult textContent = isSpam(messageInput value) \"Oh no This looks like a spam message \"\n: \"This message does not seem to contain any spam \";\nmessageInput value = \"\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8619,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-spam-filter\\642349b5b7bae31af21cd5f8.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "aff83914a7d1c890fe58bc8e765d95ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa22e99042b1e91fe9d2e.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa22e99042b1e91fe9d2e\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nInside the btn-container , create three buttons for each type of story Give each button a class of btn and an id of scary-btn, funny-btn, and adventure-btn The text for each button should be Scary Story, Funny Story, and Adventure Story respectively --hints--\nInside the btn-container element, you should have three buttons js\nassert lengthOf(document querySelectorAll(' btn-container > button') ,3);\nAll the three buttons should have a class of btn js\nassert equal(document querySelectorAll(' btn-container > btn') length, 3);\nYou should have a button with the id of scary-btn and a text of Scary Story js\nassert exists(document querySelector('#scary-btn'));\nassert equal(document querySelector('#scary-btn') textContent, 'Scary Story');\nYou should have a button with the id of funny-btn and a text of Funny Story js\nassert exists(document querySelector('#funny-btn'));\nassert equal(document querySelector('#funny-btn') textContent, 'Funny Story');\nYou should have a button with the id of adventure-btn and a text of Adventure Story js\nassert exists(document querySelector('#adventure-btn'));\nassert equal(document querySelector('#adventure-btn') textContent, 'Adventure Story');\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story --fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3155,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa22e99042b1e91fe9d2e.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "09140f870ec4ff9381d68aa86c26163d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa22e99042b1e91fe9d2e.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "App Want to hear a short story --fcc-editable-region-- --fcc-editable-region-- ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --black: #000; --white: #fff; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--white); } h1, result { text-align: center; } h1 { margin: 10px 0 15px; } story-container { margin: auto; padding: 10px; width: 80%; border-style: double; border-width: 14px; border-color: var(--white); }btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3155,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa22e99042b1e91fe9d2e.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "17c148cd675b994abc193cd4147a630b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa769540d152e53327f4b.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa769540d152e53327f4b\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nSelect the #scary-btn, #funny-btn, and #adventure-btn buttons and store them in variables called scaryStoryBtn, funnyStoryBtn, and adventureStoryBtn --hints--\nYou should select the #scary-btn button using the getElementById method and store it in the scaryStoryBtn variable js\nassert isDefined(scaryStoryBtn);\nassert deepEqual(scaryStoryBtn, document getElementById(\"scary-btn\"));\nYou should select the #funny-btn button using the getElementById method and store it in the funnyStoryBtn variable js\nassert isDefined(funnyStoryBtn);\nassert deepEqual(funnyStoryBtn, document getElementById(\"funny-btn\"));\nYou should select the #adventure-btn button using the getElementById method and store it in the adventureStoryBtn variable js\nassert isDefined(adventureStoryBtn);\nassert deepEqual(adventureStoryBtn, document getElementById(\"adventure-btn\"));\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\n--fcc-editable-region--\nconst storyContainer = document querySelector(\" story-container\");\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3130,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa769540d152e53327f4b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "338006e80b21178eb513a4786b61b203",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa769540d152e53327f4b.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --black: #000; --white: #fff; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--white); } h1, result { text-align: center; } h1 { margin: 10px 0 15px; } story-container { margin: auto; padding: 10px; width: 80%; border-style: double; border-width: 14px; border-color: var(--white); } btn-container { display: flex; flex-direction: column; justify-content: center; align-items: center; } @media (min-width: 760px) {btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3130,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa769540d152e53327f4b.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6ed8733ed0b58e27699fe54d4b21a73d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa7ed8364b130b5c55d2e.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa7ed8364b130b5c55d2e\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nSelect the #result paragraph and store it in a variable called resultParagraph You will use this variable to display the selected story --hints--\nYou should select the #result paragraph using the getElementById method and store it in the resultParagraph variable js\nassert isDefined(resultParagraph);\nassert deepEqual(resultParagraph, document getElementById(\"result\"));\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2809,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa7ed8364b130b5c55d2e.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "791d20bc6a576c6b4c24f6df0e56f48c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa7ed8364b130b5c55d2e.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "{ background-color: var(--dark-grey); color: var(--white); } h1, result { text-align: center; } h1 { margin: 10px 0 15px; } story-container { margin: auto; padding: 10px; width: 80%; border-style: double; border-width: 14px; border-color: var(--white); } btn-container { display: flex; flex-direction: column; justify-content: center; align-items: center; } @media (min-width: 760px) { btn-container { flex-direction: row; } } result { margin-top: 15px; font-size: 1 2rem; line-height: 30px; } btn { cursor: pointer; width: 200px; margin: 10px 0 10px 05rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2809,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa7ed8364b130b5c55d2e.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8434cf7245aeb468686325f2d0d118a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa93b5eee8737af8bafde.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa93b5eee8737af8bafde\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nCreate a function called displayStory Inside the function, log \"You clicked the button\" to the console --hints--\nYou should have a function called displayStory js\nassert isFunction(displayStory);\nYou should log \"You clicked the button\" to the console inside the displayStory function js\nassert match(displayStory toString(), /console\\ log\\([\"']You clicked the button[\"']\\)/);\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document getElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries ,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa93b5eee8737af8bafde.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1f8d1692599a35d7b4dc4f45879cc8a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa93b5eee8737af8bafde.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off , borderColor: \"#f1be32\", }, adventure: { story: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization,\nborderColor: \"#acd157\",\n},\n};\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa93b5eee8737af8bafde.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "679b200a8f2e80cb1a989bdc8a056064",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa82dc39e4c320352f371.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fa82dc39e4c320352f371\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nTo hold the different types of stories, create an object called storyObj The object should have three properties: scary, funny, and adventure Each property value should be an object with a story and a borderColor property Assign the following values to the individual objects:\nscary:\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries borderColor: #ee4b2b\nfunny:\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off borderColor: #f1be32\nadventure:\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization borderColor: #acd157\n--hints--\nYou should have an object storyObj js\nassert isObject(storyObj);\nYour storyObj object should have three properties: scary, funny, and adventure js\nassert containsAllKeys(storyObj, ['scary', 'funny', 'adventure']);\nEach property should have a story and a borderColor property js\nassert containsAllKeys(storyObj scary, ['story', 'borderColor']);\nassert containsAllKeys(storyObj funny, ['story', 'borderColor']);\nassert containsAllKeys(storyObj adventure, ['story', 'borderColor']);\nThe story property for scary should have the string value of \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \"\njs\nassert equal(\nstoryObj scary story replace(/\\s+/g, ' '),\n\"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \"\n);\nThe borderColor property for scary should have the string value of \"#ee4b2b\" js\nassert equal(storyObj scary",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa82dc39e4c320352f371.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c2f021afd4eb691a0f87f79c5763e78c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa82dc39e4c320352f371.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \" js assert equal( storyObj scary story replace(/\\s+/g, ' '), \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \" ); The borderColor property for scary should have the string value of \"#ee4b2b\" js assert equal(storyObj scaryborderColor, \"#ee4b2b\");\nThe story property for funny should have the string value of \"During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off \"\njs\nassert equal(storyObj funny story, \"During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off \");\nThe borderColor property for funny should have the string value of \"#f1be32\" js\nassert equal(storyObj funny borderColor, \"#f1be32\");\nThe story property for adventure should have the string value of \"Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization \"\njs\nassert equal(storyObj adventure story, \"Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization \");\nThe borderColor property for adventure should have the string value of \"#acd157\" js\nassert equal(storyObj adventure borderColor, \"#acd157\");\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa82dc39e4c320352f371.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1f7558799845c1cb2df31d3e87a6249b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa82dc39e4c320352f371.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization \"); The borderColor property for adventure should have the string value of \"#acd157\" js assert equal(storyObj adventure borderColor, \"#acd157\"); --seed-- --seed-contents-- ```html Storytelling App Want to hear a short story Scary Story Funny Story Adventure Story ``` ```js const storyContainer = document querySelector(\" story-container\"); const scaryStoryBtn = document getElementById(\"scary-btn\"); const funnyStoryBtn = document getElementById(\"funny-btn\"); const adventureStoryBtn = document getElementById(\"adventure-btn\"); const resultParagraph = documentgetElementById(\"result\");\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fa82dc39e4c320352f371.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "568c7c1470692846d93b175b678ad62d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faec4b3733242b2c10989.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671faec4b3733242b2c10989\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nNow, you know that the button works Remove the console log statement from the displayStory function --hints--\nYou should remove the console log statement from the displayStory function js\nassert notMatch(__helpers removeJSComments(displayStory toString()), /console\\ log\\([\"']You clicked the button[\"']\\)/);\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document getElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries ,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization ,\nborderColor: \"#acd157\"\n},\n};\n--fcc-editable-region--\nfunction displayStory() {\nconsole log(\"You clicked the button\");\n}\n--fcc-editable-region--\nscaryStoryBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faec4b3733242b2c10989.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "20696bc3176b3b1d8314167b99f0fd5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faec4b3733242b2c10989.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "fire However, his attempt caused him to burn the dinner as well as his eyebrows off , borderColor: \"#f1be32\", }, adventure: { story: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization , borderColor: \"#acd157\" }, }; --fcc-editable-region-- function displayStory() { console log(\"You clicked the button\"); } --fcc-editable-region-- scaryStoryBtnaddEventListener(\"click\", displayStory);\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faec4b3733242b2c10989.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "65c1d1ed9ce1ddd16cfa06a205d0cbbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fae2d8e402a405a930e44.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fae2d8e402a405a930e44\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nAdd an event listener for the click event to scaryStoryBtn and pass it the displayStory function Then, click your button and see the output in the console --hints--\nYou should add an event listener for the click event to scaryStoryBtn passing it the displayStory function ```js\nconst logArr = [];\nconst temp = console log;\nconsole log = function( args) {\nfor (const arg of args) {\nlogArr push(arg);\n}\n};\nscaryStoryBtn click();\nconsole log = temp;\nassert strictEqual(logArr[0], \"You clicked the button\");\n```\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document getElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries ,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization ,\nborderColor: \"#acd157\"\n},\n};\n--fcc-editable-region--\nfunction displayStory() {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fae2d8e402a405a930e44.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f1e4eee1ee1cc1c0d38deaa9e9b3ddb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fae2d8e402a405a930e44.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off , borderColor: \"#f1be32\", }, adventure: { story: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization , borderColor: \"#acd157\" }, }; --fcc-editable-region-- function displayStory() { consolelog(\"You clicked the button\");\n}\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3871,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fae2d8e402a405a930e44.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "094a0e742730f4b19ac751f4cb990a9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf18fd8b7b448a308bf3.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671faf18fd8b7b448a308bf3\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nTo differentiate between the different types of stories, you will need to pass the genre of the selected story to the displayStory function Add a parameter called genre to the displayStory function --hints--\nYou should add the genre parameter to the displayStory function js\nassert match(displayStory toString(), /\\s*displayStory\\(\\s*genre\\s*\\)\\s*{/);\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document getElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries ,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization ,\nborderColor: \"#acd157\"\n},\n};\n--fcc-editable-region--\nfunction displayStory() {\n}\n--fcc-editable-region--\nscaryStoryBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf18fd8b7b448a308bf3.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "66959a15f333e175edb74e6d6eb8c3fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf18fd8b7b448a308bf3.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off , borderColor: \"#f1be32\", }, adventure: { story: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization , borderColor: \"#acd157\" }, }; --fcc-editable-region-- function displayStory() { } --fcc-editable-region-- scaryStoryBtnaddEventListener(\"click\", displayStory);\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf18fd8b7b448a308bf3.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "be2e1aa0060588ebb207685435fdfad5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf4ac1e19245df4db7f5.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671faf4ac1e19245df4db7f5\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nInside the displayStory function, check if the storyObj object has a property that matches the genre parameter and set the #result paragraph's text content to the story of the selected genre Also, set the storyContainer's border color to the borderColor property of the selected genre Test this by calling the displayStory function with the scary genre The border color should be #ee4b2b and the story should be \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \" --hints--\nYou should call the displayStory function with the \"scary\" genre js\nassert match(code, /displayStory\\([\"']scary[\"']\\)/);\nWhen you call displayStory(\"scary\"), the border color should be #ee4b2b ```js\ndisplayStory(\"scary\");\nfunction rgbToHex(rgb) {\nconst rgbValues = rgb match(/\\d+/g);\nreturn (\n\"#\" +\nrgbValues map((num) => parseInt(num) toString(16) padStart(2, \"0\")) join(\"\")\n);\n}\nconst rgbColor = storyContainer style borderColor;\nconst hexColor = rgbToHex(rgbColor);\nconsole log(hexColor toLowerCase());\nassert equal(hexColor toLowerCase(), \"#ee4b2b\");\n```\nWhen you call displayStory(\"scary\"), the story displayed should be \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \" js\ndisplayStory(\"scary\");\nassert equal(result textContent, \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \");\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5080,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf4ac1e19245df4db7f5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ec268dc7ec15ead604ed1ef7efe79910",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf4ac1e19245df4db7f5.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "assert equal(result textContent, \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \"); --seed-- --seed-contents-- ```html Storytelling App Want to hear a short story Scary Story Funny Story Adventure Story ``` ```js const storyContainer = document querySelector(\" story-container\"); const scaryStoryBtn = document getElementById(\"scary-btn\"); const funnyStoryBtn = document getElementById(\"funny-btn\"); const adventureStoryBtn = document getElementById(\"adventure-btn\"); const resultParagraph = documentgetElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries ,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization ,\nborderColor: \"#acd157\"\n},\n};\n--fcc-editable-region--\nfunction displayStory(genre) {\n}\n--fcc-editable-region--\nscaryStoryBtn addEventListener(\"click\", displayStory);\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5080,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf4ac1e19245df4db7f5.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b5dce3d40f1013a3c6117acc1b6dd5f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf4ac1e19245df4db7f5.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "while deciphering cryptic clues left behind by a mysterious civilization , borderColor: \"#acd157\" }, }; --fcc-editable-region-- function displayStory(genre) { } --fcc-editable-region-- scaryStoryBtn addEventListener(\"click\", displayStory); ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --black: #000; --white: #fff; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--white); } h1, result { text-align: center; } h1 { margin: 10px 0 15px; }story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5080,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671faf4ac1e19245df4db7f5.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a59e5a931bdb10f15ac01dde73d2fd51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\6724da4a41a727b89d2541c3.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 6724da4a41a727b89d2541c3\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nNow that the displayStory function is working correctly, it is time to add the functionality to the buttons Before that, remove the displayStory(\"scary\") function call --hints--\nYou should remove the displayStory(\"scary\") function call js\nassert notMatch(__helpers removeJSComments(code), /displayStory\\([\"']scary[\"']\\)/);\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document getElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries ,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization ,\nborderColor: \"#acd157\"\n},\n};\nfunction displayStory(genre) {\nif (storyObj hasOwnProperty(genre)) {\nresultParagraph textContent = storyObj[genre] story;\nstoryContainer style borderColor = storyObj[genre] borderColor;\n}\n}\n--fcc-editable-region--\ndisplayStory(\"scary\");\n--fcc-editable-region--\nscaryStoryBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3885,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\6724da4a41a727b89d2541c3.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6fd7c5c5a41f673b5aee050f394c173e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\6724da4a41a727b89d2541c3.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "as his eyebrows off , borderColor: \"#f1be32\", }, adventure: { story: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization , borderColor: \"#acd157\" }, }; function displayStory(genre) { if (storyObj hasOwnProperty(genre)) { resultParagraph textContent = storyObj[genre] story; storyContainer style borderColor = storyObj[genre] borderColor; } } --fcc-editable-region-- displayStory(\"scary\"); --fcc-editable-region-- scaryStoryBtnaddEventListener(\"click\", displayStory);\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3885,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\6724da4a41a727b89d2541c3.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ab0e698911562ef0657311c0ab8b8ae1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c4.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590c4\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nBelow the paragraph, create a form element. Within it, add a div with a className of section.\n--hints--\nYou should create a form element.\njs\nassert.exists(document?.querySelector(\"form\"));\nYou should create a div element inside your form element.\njs\nassert.exists(document?.querySelector(\"form > div\"));\nYour div element should have a className of section.\njs\nassert.exists(document?.querySelector(\"form > div.section\"));\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n}\n.form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n}\n.form-wrap h2,\n.form-wrap p {\ntext-align: center;\n}\n.form-wrap p {\nposition: relative;\ntop: -18px;\n}\n.section {\ndisplay: flex;\nmargin-bottom: 30px;\n}\n.column {\nflex-direction: column;\n}\n.submit-wrap {\ntext-align: center;\n}\n.submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0.4rem 0.5rem;\nborder: 1px solid black\n}\n.submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}\n.submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\n--fcc-editable-region--\n--fcc-editable-region--\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c4.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "57c6fdc4314099f905cd478e9881bada",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\6808fe91a5cb0c3355f23027.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 6808fe91a5cb0c3355f23027\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you'll learn how to work with forms in React by building a superhero application form Some boilerplate has been provided, you just need to create the rest of the React component Begin by returning a div element with a className of form-wrap Inside the div, create an h2 element with the text Superhero Application Form Below that, create a p element with the text Please complete all fields --hints--\nYou should return a div element with the className of form-wrap js\nassert exists(document querySelector(\"div form-wrap\"));\nYou should create an h2 element inside your div element js\nassert exists(document querySelector(\" form-wrap > h2\"));\nYour h2 element should have the text Superhero Application Form js\nconst h2El = document querySelector(\"h2\")\nassert equal(h2El textContent, \"Superhero Application Form\");\nYou should create a p element inside your div element Make sure it comes after the h2 js\nassert exists(document querySelector(\" form-wrap > h2 + p\"));\nYour p element should have the text Please complete all fields js\nconst pEl = document querySelector(\"p\")\nassert equal(pEl textContent, \"Please complete all fields\");\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\6808fe91a5cb0c3355f23027.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "83438d9ca87a4aa5b44cc015d5d30159",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\6808fe91a5cb0c3355f23027.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) } form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 05rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\n--fcc-editable-region--\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\6808fe91a5cb0c3355f23027.md",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b71c395566f17baeb43fa8f267ffa94d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c5.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590c5\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nTime to create the labels and inputs In the form, create a label with the text Hero Name and an input element of type text inside it Connect the input for Hero Name to the heroName state variable by giving it a value attribute set to heroName --hints--\nYou should create a label element js\nassert exists(document querySelector(\"label\"));\nYour label element should have Hero Name as its text js\nconst labelEl = document querySelector(\"label\")\nassert equal(labelEl textContent, \"Hero Name\");\nYou should create an input of type text element inside your label element js\nconst inputEl = document querySelector(\"label > input\");\nassert equal(inputEl getAttribute(\"type\"), \"text\");\nYour input element should have its value set to the heroName state variable js\nassert match(code, /value\\s*=\\s*\\{\\s*heroName\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c5.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f07f153e17f45356a079cfaffeea07cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c5.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\n--fcc-editable-region--\n--fcc-editable-region--\n</div>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c5.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ecd06f8fc1ec94b80d28eeaada965edb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590c3\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nBefore building out the form itself, you will create the state variables you need They are heroName, realName, powerSource, and powers For now, create the variables and setters for heroName and realName Both should have an initial value of empty strings --hints--\nYou should use the array destructuring syntax to set a heroName state variable and a setHeroName setter js\nassert match(code, /(const|let|var)\\s+\\[\\s*heroName\\s*,\\s*setHeroName\\s*\\]/);\nYour heroName and setHeroName should use the useState hook ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nassert isAtLeast(abuseState calls length, 1);\n}\n```\nYour useState hook for heroName should have an initial value of empty string ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nassert equal(abuseState calls[0] [0], \"\");\n}\n```\nYou should use the array destructuring syntax to set a realName state variable and a setRealName setter js\nassert match(code, /(const|let|var)\\s+\\[\\s*realName\\s*,\\s*setRealName\\s*\\]/);\nYour realName and setRealName should use the useState hook ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nassert isAtLeast(abuseState calls",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ff6dbaaf2a6a3321246168f04ba93a68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} ``` You should use the array destructuring syntax to set a realName state variable and a setRealName setter js assert match(code, /(const|let|var)\\s+\\[\\s*realName\\s*,\\s*setRealName\\s*\\]/); Your realName and setRealName should use the useState hook ```js async () => { const abuseState = __helpers spyOn(React, \"useState\"); const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const _a = eval(script); const _b = await __helpers prepTestComponent(exports SuperheroForm); assert isAtLeast(abuseState callslength, 2);\n}\n```\nYour useState hook for realName should have an initial value of empty string ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nassert equal(abuseState calls[1] [0], \"\");\n}\n```\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c3.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ed7046cd7057c901c7dfb6d0935aedf6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nSuperhero Application Form\nPlease complete all fields\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c3.md",
      "source_type": "git_repo"
    },
    "token_count": 219,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "06ec41cb3d29492af2b8ca0a0587095f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c6.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590c6\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nYou may notice you can't type in the input If you open up the console you will see a warning To remove the warning and fix the input typing issue, use the onChange event to update heroName The value for the onChange event should be an arrow function with e for the parameter The arrow function should implicitly return setHeroName(e target value) --hints--\nYour input element should have an onChange attribute js\nassert match(code, /onChange\\s*=\\s*\\{/)\nYou should use onChange with an arrow function that implicitly returns to set the value of the heroName state variable js\nassert match(code, /onChange\\s*=\\s*\\{\\s*(e|\\(\\s*e\\s*\\))\\s*=>\\s*setHeroName\\s*\\(\\s*e\\s*\\ \\s*target\\s*\\ \\s*value\\s*\\)\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c6.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a8326debf048360d4c78a05d7d71defb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c6.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\n--fcc-editable-region--\nHero Name\n--fcc-editable-region--\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c6.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2b9ea40c6906407ae046a2abf391159e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "id: 671fafbae959c048d82bac8d\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nModify the scaryStoryBtn event listener to call the displayStory function with the argument \"scary\" Also, add a click event listener to the funnyStoryBtn, and adventureStoryBtn buttons that call the displayStory function with the arguments \"funny\" and \"adventure\" respectively With this, you have successfully completed the workshop --hints--\nWhen you click the scaryStoryBtn, the #result paragraph should display the scary story \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \" with a border color of #ee4b2b ```js\nscaryStoryBtn click();\nfunction rgbToHex(rgb) {\nconst rgbValues = rgb match(/\\d+/g);\nreturn (\n\"#\" +\nrgbValues map((num) => parseInt(num) toString(16) padStart(2, \"0\")) join(\"\")\n);\n}\nconst rgbColor = storyContainer style borderColor;\nconst hexColor = rgbToHex(rgbColor);\nconst expectedStory = \"In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries \";\nassert equal(hexColor toLowerCase(), \"#ee4b2b\");\nassert equal(result textContent replace(/\\s+/g, ' '), expectedStory);\n```\nWhen you click the funnyStoryBtn, the #result paragraph should display the funny story with a border color of #f1be32 ```js\nfunnyStoryBtn click();\nfunction rgbToHex(rgb) {\nconst rgbValues = rgb match(/\\d+/g);\nreturn (\n\"#\" +\nrgbValues map((num) => parseInt(num) toString(16) padStart(2, \"0\")) join(\"\")\n);\n}\nconst rgbColor = storyContainer style borderColor;\nconst hexColor = rgbToHex(rgbColor);\nconst expectedFunnyStory = \"During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off \";\nassert equal(hexColor toLowerCase(), \"#f1be32\");\nassert equal(result textContent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "884afb9921901ec40194e964f8f8b2c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "rgbToHex(rgb) { const rgbValues = rgb match(/\\d+/g); return ( \"#\" + rgbValues map((num) => parseInt(num) toString(16) padStart(2, \"0\")) join(\"\") ); } const rgbColor = storyContainer style borderColor; const hexColor = rgbToHex(rgbColor); const expectedFunnyStory = \"During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off \"; assert equal(hexColor toLowerCase(), \"#f1be32\"); assert equal(result textContentreplace(/\\s+/g, ' '), expectedFunnyStory);\n```\nWhen you click the adventureStoryBtn, the #result paragraph should display the adventure story with a border color of #acd157 ```js\nadventureStoryBtn click();\nfunction rgbToHex(rgb) {\nconst rgbValues = rgb match(/\\d+/g);\nreturn (\n\"#\" +\nrgbValues map((num) => parseInt(num) toString(16) padStart(2, \"0\")) join(\"\")\n);\n}\nconst rgbColor = storyContainer style borderColor;\nconst hexColor = rgbToHex(rgbColor);\nconst expectedAdventureStory = \"Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization \";\nassert equal(hexColor toLowerCase(), \"#acd157\");\nassert equal(result textContent replace(/\\s+/g, ' '), expectedAdventureStory);\n```\n--seed--\n--seed-contents--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document getElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries ,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "75001c61fb47fb5c81aa4b5e1341a415",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "const funnyStoryBtn = document getElementById(\"funny-btn\"); const adventureStoryBtn = document getElementById(\"adventure-btn\"); const resultParagraph = document getElementById(\"result\"); const storyObj = { scary: { story: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries , borderColor: \"#ee4b2b\", }, funny: { story: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fireHowever, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife, all while deciphering cryptic clues left behind by a mysterious civilization ,\nborderColor: \"#acd157\"\n},\n};\nfunction displayStory(genre) {\nif (storyObj hasOwnProperty(genre)) {\nresultParagraph textContent = storyObj[genre] story;\nstoryContainer style borderColor = storyObj[genre] borderColor;\n}\n}\n--fcc-editable-region--\nscaryStoryBtn addEventListener(\"click\", displayStory);\n--fcc-editable-region--\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n} story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "a4d666b4e53fc86899d905e04443b606",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --black: #000; --white: #fff; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--white); } h1, result { text-align: center; } h1 { margin: 10px 0 15px; } story-container { margin: auto; padding: 10px; width: 80%; border-style: double; border-width: 14px; border-color: var(--white); } btn-container { display: flex; flex-direction: column; justify-content: center; align-items: center; } @media (min-width: 760px) {btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```\n--solutions--\n```html\nStorytelling App\nWant to hear a short story Scary Story\nFunny Story\nAdventure Story\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--black: #000;\n--white: #fff;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--white);\n}\nh1,\nresult {\ntext-align: center;\n}\nh1 {\nmargin: 10px 0 15px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d16f3884cb6fbace8896860ab281bc40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "} btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } ``` --solutions-- ```html Storytelling App Want to hear a short story Scary Story Funny Story Adventure Story ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --black: #000; --white: #fff; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); color: var(--white); } h1, result { text-align: center; } h1 { margin: 10px 0 15px; }story-container {\nmargin: auto;\npadding: 10px;\nwidth: 80%;\nborder-style: double;\nborder-width: 14px;\nborder-color: var(--white);\n} btn-container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\n@media (min-width: 760px) { btn-container {\nflex-direction: row;\n}\n}\nresult {\nmargin-top: 15px;\nfont-size: 1 2rem;\nline-height: 30px;\n} btn {\ncursor: pointer;\nwidth: 200px;\nmargin: 10px 0 10px 0 5rem;\ncolor: var(--black);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n```\n```js\nconst storyContainer = document querySelector(\" story-container\");\nconst scaryStoryBtn = document getElementById(\"scary-btn\");\nconst funnyStoryBtn = document getElementById(\"funny-btn\");\nconst adventureStoryBtn = document getElementById(\"adventure-btn\");\nconst resultParagraph = document getElementById(\"result\");\nconst storyObj = {\nscary: {\nstory: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "25f11a361b1fd343e136c8db39f65f0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
    "source_type": "git_repo",
    "title": "Storytelling App",
    "content": "linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } ``` ```js const storyContainer = document querySelector(\" story-container\"); const scaryStoryBtn = document getElementById(\"scary-btn\"); const funnyStoryBtn = document getElementById(\"funny-btn\"); const adventureStoryBtn = document getElementById(\"adventure-btn\"); const resultParagraph = document getElementById(\"result\"); const storyObj = { scary: { story: In the dark woods, a group of friends stumbled upon an old, abandoned cabin They enter the cabin and awaken something malevolent that had been dormant for centuries,\nborderColor: \"#ee4b2b\",\n},\nfunny: {\nstory: During a camping trip, Mark decided to show off his culinary skills by cooking dinner over an open fire However, his attempt caused him to burn the dinner as well as his eyebrows off ,\nborderColor: \"#f1be32\",\n},\nadventure: {\nstory: Lost in the heart of the Amazon rain forest, Sarah and Jake stumbled upon an ancient temple They braved deadly traps and encountered strange wildlife,\nall while deciphering cryptic clues left behind by a mysterious civilization ,\nborderColor: \"#acd157\",\n},\n};\nfunction displayStory(genre) {\nif (storyObj hasOwnProperty(genre)) {\nresultParagraph textContent = storyObj[genre] story;\nstoryContainer style borderColor = storyObj[genre] borderColor;\n}\n}\nscaryStoryBtn addEventListener(\"click\", () => displayStory(\"scary\"));\nfunnyStoryBtn addEventListener(\"click\", () => displayStory(\"funny\"));\nadventureStoryBtn addEventListener(\"click\", () => displayStory(\"adventure\"));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9947,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-storytelling-app\\671fafbae959c048d82bac8d.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "e4eae4e73c0cee1afa344b2b46aeda19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c7.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590c7\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nCreate another label with the text Real Name and an input of type password within it Give the input a value of realName Then use the onChange event to update realName in the same way you updated heroName --hints--\nYou should create a label element js\nconst labels = document querySelectorAll(\"label\");\nassert lengthOf(labels, 2);\nYour label element should have Real Name as its text js\nconst labels = document querySelectorAll(\"label\");\nassert equal(labels[1] textContent trim(), \"Real Name\");\nYou should create an input of type password inside your label element js\nconst inputEl = document querySelectorAll(\"label > input\");\nassert equal(inputEl[1] getAttribute(\"type\"), \"password\");\nYour input element should have its value set to the realName state variable js\nassert match(code, /value\\s*=\\s*\\{\\s*realName\\s*\\}/)\nYou should use the onChange event to set the value of the realName state variable so you can type in the input field js\nassert match(code, /onChange\\s*=\\s*\\{\\s*(e|\\(\\s*e\\s*\\))\\s*=>\\s*setRealName\\s*\\(\\s*e\\s*\\ \\s*target\\s*\\ \\s*value\\s*\\)\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c7.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5806b5e0f8ec1e713579a764bf148548",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c7.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) } form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; }submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\n--fcc-editable-region--\n--fcc-editable-region--\n</div>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c7.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "79a7741e2e14005d45dcc21a750a5e1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c8.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590c8\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nNext, create a label with the className of section and column, and the text How did you get your powers Inside the label, create a select element --hints--\nYou should create a label element with a className of section and column js\nconst labelEl = document querySelector(\"label section column\");\nassert exists(labelEl);\nYour label element should have the text How did you get your powers js\nconst labelEl = document querySelector(\"label section column\");\nassert equal(labelEl textContent, \"How did you get your powers \")\nYou should create a select element inside your label element js\nconst selectEl = document querySelector(\"label > select\");\nassert exists(selectEl);\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c8.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f1b57ce1a9dd13482347142149adab85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c8.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\n--fcc-editable-region--\n--fcc-editable-region--\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c8.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "234b223036b3628845374c4353f2359f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ca.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590ca\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nTo account for the setter function, you will have to attach a value attribute and an onChange event to the select and a value attribute to each of the option elements That's a long process, right So the best way to handle this is to have an array of the option values and map over it to create the option elements A powerSourceOptions array has been added at the top of your component Give it a look For now, remove all the options inside the select element except for the first one In the next step you will map over the array --hints--\nYou should have the first option element in your code js\nconst optionEl = document querySelectorAll(\"select > option\");\nassert equal(optionEl[0] textContent, \"Select one\");\nYou should remove all the option elements apart from the first one js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert lengthOf(optionEls, 1)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ca.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2b7ded6e397959c63c2204c3df716f8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ca.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers --fcc-editable-region--\nSelect one\nBitten by a strange creature\nRadioactive exposure\nScience experiment\nAlien heritage\nAncient artifact discovery\nOther\n--fcc-editable-region--\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ca.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3307faf95fc95df51fc39fe0876fcd89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c9.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590c9\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nInside your select element, you need to create options for the user to choose as their power source The select should have seven options listed below:\n| Power Source                  |\n|-------------------------------|\n| Select one                    |\n| Bitten by a strange creature  |\n| Radioactive exposure          |\n| Science experiment           |\n| Alien heritage               |\n| Ancient artifact discovery    |\n| Other                         |\nThe first option (Select one) should have an empty string as its value attribute (i e , value='') This acts as a placeholder in the UI --hints--\nYou should create the first option element with the text Select one inside your select element js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert equal(optionEls[0] textContent, \"Select one\");\nYou should give the first option element a value attribute with an empty string js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert equal(optionEls[0] getAttribute('value'), '');\nYou should create a second option element with the text Bitten by a strange creature inside your select element js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert equal(optionEls[1] textContent, \"Bitten by a strange creature\");\nYou should create a third option element with the text Radioactive exposure inside your select element js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert equal(optionEls[2] textContent, \"Radioactive exposure\");\nYou should create a fourth option element with the text Science experiment inside your select element js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert equal(optionEls[3] textContent, \"Science experiment\");\nYou should create a fifth option element with the text Alien heritage inside your select element js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert equal(optionEls[4] textContent, \"Alien heritage\");\nYou should create a sixth option element with the text Ancient artifact discovery inside your select element js\nconst optionEls = document querySelectorAll(\"select > option\");\nassert equal(optionEls[5] textContent, \"Ancient artifact discovery\");\nYou should create a seventh option element with the text Other inside your select element js\nconst optionEls = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c9.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f5b7da6d3942b2ad7d1cc8a1fab79d10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c9.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "fifth option element with the text Alien heritage inside your select element js const optionEls = document querySelectorAll(\"select > option\"); assert equal(optionEls[4] textContent, \"Alien heritage\"); You should create a sixth option element with the text Ancient artifact discovery inside your select element js const optionEls = document querySelectorAll(\"select > option\"); assert equal(optionEls[5] textContent, \"Ancient artifact discovery\"); You should create a seventh option element with the text Other inside your select element js const optionEls = documentquerySelectorAll(\"select > option\");\nassert equal(optionEls[6] textContent, \"Other\");\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c9.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "58a696aa1e87add3751bfddc3dfd4bf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c9.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; } submit-btn:disabled { cursor: not-allowed; } ``` ```jsx const { useState } = React; export const SuperheroForm = () => { const [heroName, setHeroName] = useState(''); const [realName, setRealName] = useState(''); const [powerSource, setPowerSource] = useState(''); const [powers, setPowers] = useState([]); return ( Superhero Application Form Please complete all fields Hero Name setHeroName(e target value)} /> Real Name setRealName(e target value)} /> How did you get your powers--fcc-editable-region--\n</select>\n--fcc-editable-region--\n</label>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590c9.md",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d17aa6cc544bfb770dcc38581aa47c55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cd.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590cd\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nThe next input is a checkbox to mark all super hero powers that apply to the user Create a label element with a className of section and column, and the text of List your powers (select all that apply): --hints--\nYou should create a label element with a className of section and column js\nconst labelEl = document querySelectorAll(\"label section column\");\nassert equal(labelEl length, 2)\nYour label element should have the text List your powers (select all that apply): js\nconst labelEl = document querySelectorAll(\"label section column\");\nassert equal(labelEl[1] textContent, \"List your powers (select all that apply):\")\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4239,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cd.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d440984389dbf702566721ca9783dd04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cd.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\n--fcc-editable-region--\n--fcc-editable-region--\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4239,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cd.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e1af6711354cb7cb3e3c701d5f0a4da1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cc.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590cc\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nThe values of the powerSourceOptions now show up as the options for the select element Now, use powerSource as the value of the select element Then, set up an onChange handler using an arrow function that takes e as the parameter and implicitly returns setPowerSource(e target value) --hints--\nYou should use {powerSource} as the value of the select element js\nassert match(code, /<\\s*select\\s+[\\s\\S]*value\\s*=\\s*\\{\\s*powerSource\\s*\\}/)\nYou should set the value of the select element using onChange with an arrow function that implicitly returns to update the powerSource state with setPowerSource js\nassert match(code, /<\\s*select\\s+[\\s\\S]*onChange\\s*=\\s*\\{\\s*(e|\\(\\s*e\\s*\\))\\s*=>\\s*setPowerSource\\s*\\(\\s*e\\s*\\ \\s*target\\s*\\ \\s*value\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cc.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7ea31a450bda2dbb3b9e32ed1bae6804",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cc.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers --fcc-editable-region--\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\n--fcc-editable-region--\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cc.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d32b6ce75a9cf1469cff201e8ae08c36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cb.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590cb\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nIn a prior lecture, you learned how to render a list of options using the map() method like this:\njsx\nfunction FruitList() {\nconst fruits = [\"Apple\", \"Banana\", \"Cherry\", \"Date\"];\nreturn (\n<ul>\n{fruits map((fruit, index) => (\n<li key={`${fruit}-${index}`}>{fruit}</li>\n))}\n</ul>\n);\n}\nRemember that the key must always be unique It helps React identify which items have changed, and been added or removed After the first option, use an arrow function to map through the powerSourceOptions array using source as the parameter Then inside the map() method, create an option element with a key of source and a value of source Lastly, use {source} to display the name of each power source in the dropdown --hints--\nYou should map through powerSourceOptions js\nassert match(code, /\\{\\s*powerSourceOptions\\s*\\ \\s*map\\s*\\(/)\nYou should pass in source as the parameter of the map js\nassert match(code, /\\{\\s*powerSourceOptions\\s*\\ \\s*map\\s*\\(\\s*(source|\\(\\s*source\\s*\\))\\s*=>/)\nYou should create an option element with a key of source and value of source js\nassert match(code, /<\\s*option\\s+(key\\s*=\\s*{\\s*source\\s*}\\s*value\\s*=\\s*{\\s*source\\s*}|value\\s*=\\s*{\\s*source\\s*}\\s*key\\s*=\\s*{\\s*source\\s*})\\s*>\\s*{\\s*source\\s*}\\s*<\\/\\s*option\\s*>/)\nYou should have a total of seven option elements js\nconst optionElements = document querySelectorAll(\"option\");\nassert lengthOf(optionElements, 7);\nFor the last six option elements, each text content should correspond to one of the power source options from the powerSourceOptions array ```js\nconst optionElements = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cb.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "157b35b3075caf8af0297e6d066a7f1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cb.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "source as the parameter of the map js assert match(code, /\\{\\s*powerSourceOptions\\s*\\ \\s*map\\s*\\(\\s*(source|\\(\\s*source\\s*\\))\\s*=>/) You should create an option element with a key of source and value of source js assert match(code, /<\\s*option\\s+(key\\s*=\\s*{\\s*source\\s*}\\s*value\\s*=\\s*{\\s*source\\s*}|value\\s*=\\s*{\\s*source\\s*}\\s*key\\s*=\\s*{\\s*source\\s*})\\s*>\\s*{\\s*source\\s*}\\s*<\\/\\s*option\\s*>/) You should have a total of seven option elements js const optionElements = document querySelectorAll(\"option\"); assert lengthOf(optionElements, 7); For the last six option elements, each text content should correspond to one of the power source options from the powerSourceOptions array ```js const optionElements = documentquerySelectorAll(\"option\");\nconst powerSourceOptions = [\n\"Bitten by a strange creature\",\n\"Radioactive exposure\",\n\"Science experiment\",\n\"Alien heritage\",\n\"Ancient artifact discovery\",\n\"Other\"\n];\nfor (let i = 0; i < powerSourceOptions length; i++) {\nconst option = optionElements[i+1];\nconst expected = powerSourceOptions[i];\nassert strictEqual(option textContent, expected);\nassert strictEqual(option value, expected);\n}\n```\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cb.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ee69bd5f64b2ff0bbf7149ef239a0fc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cb.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) } form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; }submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers Select one\n--fcc-editable-region--\n--fcc-editable-region--\n</select>\n</label>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cb.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f85d599db64a48e459498cd1723a2270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d0.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590d0\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nTo fix the error, create a handlePowersChange arrow function with an e parameter Inside the function, destructure value and checked from e target to get the value of the checkbox and whether it is checked or not --hints--\nYou should create an handlePowersChange function with an e parameter js\nassert match(code, /(const|let|var)\\s+handlePowersChange\\s*=\\s*(e|\\(\\s*e\\s*\\))\\s*=>\\s*{/)\nYou should destructure value and checked from e target js\nassert match(code, /(const|let|var)\\s+handlePowersChange\\s*=\\s*(e|\\(\\s*e\\s*\\))\\s*=>\\s*{\\s*(const|let|var)\\s*{\\s*(value\\s*,\\s*checked|checked\\s*,\\s*value)\\s*}\\s*=\\s*e\\s*\\ \\s*target/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4804,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d0.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f14397695ead0f631125950d855a66e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d0.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n{powersOptions map(power => (\n<label key={power}>\n<input\ntype='checkbox'\nvalue={power}\nchecked={powers includes(power)}\nonChange={handlePowersChange}\n/>\n<span>{power}</span>\n</label>\n))}\n</label>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4804,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d0.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4dfd8771589f5f358069fca48a081d62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cf.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590cf\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nTo mark the checkboxes, add a checked attribute to the checkbox input Use the includes method to verify if the current power is in the powers array The onChange will be a separate function, set it to handlePowersChange for now This will lead to an error you will fix in the next step --hints--\nYou should set the checkbox checked state to reflect whether the current power value exists in the powers array js\nassert match(code, /checked\\s*=\\s*\\{\\s*powers\\s*\\ \\s*includes\\s*\\(\\s*power\\s*\\)\\s*\\}/)\nYou should set the checkbox onChange attribute to {handlePowersChange} js\nassert match(code, /onChange\\s*=\\s*\\{\\s*handlePowersChange\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cf.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8200564164a652d38041830c6c831b6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cf.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n{powersOptions map(power => (\n<label key={power}>\n--fcc-editable-region--\n<input\ntype='checkbox'\nvalue={power}\n/>\n--fcc-editable-region--\n<span>{power}</span>\n</label>\n))}\n</label>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590cf.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ebb3a0ac5857d03c51600eac68a545b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d1.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590d1\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nNext, tell the form how to submit Add a method attribute with a value of post and an action attribute with a value of https://superhero-application-form freecodecamp org to the form element Now, submitting form will send it to that URL You will do that in the next step --hints--\nYour form element should have a method attribute set to post js\nconst formEl = document querySelector(\"form\")\nassert equal(formEl getAttribute(\"method\"), \"post\")\nYour form element should have an action attribute set to https://superhero-application-form freecodecamp org js\nconst formEl = document querySelector(\"form\")\nassert equal(formEl getAttribute(\"action\"), \"https://superhero-application-form freecodecamp org\")\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5050,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d1.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "135f7d45373d933a3df4d1e36ea401aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d1.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nconst handlePowersChange = e => {\nconst { value, checked } = e target;\nsetPowers(checked [ powers, value] : powers filter(p => p == value));\n}\nreturn (\nSuperhero Application Form\nPlease complete all fields\n--fcc-editable-region--\n--fcc-editable-region--\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n{powersOptions map(power => (\n<label key={power}>\n<input\ntype='checkbox'\nvalue={power}\nchecked={powers includes(power)}\nonChange={handlePowersChange}\n/>\n<span>{power}</span>\n</label>\n))}\n</label>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5050,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d1.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9e51a00bc458e411bfc20aa9a09a745e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ce.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590ce\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nThere will be six checkboxes, so it's also best to create an array for them and map through them to display them as checkboxes For that, a powersOptions array has been provided for you Use an arrow function to map through the powersOptions array using parameter of power Inside the map, create a label element with a key of power, and a text of Hello After that, you should see six Hello text You will fill in the elements of the array in the next step --hints--\nYou should map through powersOptions js\nassert match(code, /\\{\\s*powersOptions\\s*\\ \\s*map\\s*\\(/)\nYou should use power as the parameter of your map js\nassert match(code, /{\\s*powersOptions\\s*\\ \\s*map\\s*\\(\\s*(power|\\(\\s*power\\s*\\))\\s*=>/)\nYou should create a label element with a key of power js\nassert match(code, /\\{\\s*powersOptions\\s*\\ \\s*map\\s*\\([\\s\\S]*<\\s*label\\s+key\\s*=\\s*\\{\\s*power\\s*\\}\\s*>[\\s\\S]*<\\s*\\/\\s*label\\s*>/)\nYour label element should have the text Hello ```js\nconst labelEls = document querySelectorAll(\"label\")\nconst targetLabelEls = Array from(labelEls) slice(4)\nfor (const label of targetLabelEls) {\nassert equal(label textContent, \"Hello\");\n}\n```\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ce.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "60e3b510df0ee6a0ec37f3875e5f1aca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ce.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "label of targetLabelEls) { assert equal(label textContent, \"Hello\"); } ``` --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) } form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; }section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n--fcc-editable-region--\n--fcc-editable-region--\n</label>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590ce.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "91b31acdde382b24dd9e5a0837f0373a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d2.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590d2\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nCreate a button element with the className of submit-btn and a type of submit Give the button the text Join the League After you do that, try to submit the form and see what happens --hints--\nYou should create a button element js\nassert exists(document querySelector(\"button\"));\nYour button element should have a className attribute set to submit-btn js\nassert exists(document querySelector(\"button submit-btn\"));\nYour button element should have Join the League as its text js\nconst btnEl = document querySelector(\"button\")\nassert equal(btnEl textContent, \"Join the League\");\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d2.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a4893d874570c41404eedbc8f677db75",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d2.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nconst handlePowersChange = e => {\nconst { value, checked } = e target;\nsetPowers(checked [ powers, value] : powers filter(p => p == value));\n}\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n{powersOptions map(power => (\n<label key={power}>\n<input\ntype='checkbox'\nvalue={power}\nchecked={powers includes(power)}\nonChange={handlePowersChange}\n/>\n<span>{power}</span>\n</label>\n))}\n</label>\n--fcc-editable-region--\n--fcc-editable-region--\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d2.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4c0c861141f5e721918bc16bde7d26fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68148d280ee30e5a567a0e2d.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 68148d280ee30e5a567a0e2d\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nRemove the Hello text inside the label, then create an input of type checkbox and a value of power Finally, display the values from the array next to each checkbox by creating a span element just before the closing label with a text content of {power} --hints--\nYou should remove the Hello text from the label element js\nassert notMatch(code, /hello/i)\nYou should create an input with its type set to checkbox and a value set to power as the first child of the label js\nassert match(code, /<\\s*label\\s+key\\s*=\\s*{\\s*power\\s*}\\s*>\\s*<\\s*input\\s+type\\s*=\\s*(\"|')checkbox\\1\\s*value\\s*=\\s*\\{\\s*power\\s*\\}\\s*\\/>[\\s\\S]*<\\/\\s*label\\s*>/)\nYou should create a span element with {power} for its text content as the last child of the label js\nassert match(code, /<\\s*label\\s+key\\s*=\\s*{\\s*power\\s*}\\s*>[\\s\\S]*<\\s*span\\s*>\\s*{\\s*power\\s*}\\s*<\\/\\s*span\\s*>\\s*<\\/\\s*label\\s*>/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4867,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68148d280ee30e5a567a0e2d.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "50603c1a746c539ebb2633435d6e3d6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68148d280ee30e5a567a0e2d.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) } form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; }submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n--fcc-editable-region--\n{powersOptions map(power => (\nHello\n))}\n--fcc-editable-region--\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4867,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68148d280ee30e5a567a0e2d.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b1081facad9d6b005bf71a82f2d913cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68551b677a5f6898af364b85.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 68551b677a5f6898af364b85\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will learn more about Tailwind CSS by using its flexbox utility classes to build a responsive call to action (CTA) component.\nThe basic HTML boilerplate has been provided for you, so you need to build out the HTML elements first.\nBegin by creating a div element. Inside that div, create two more separate div elements.\n--hints--\nYou should create a div element.\njs\nassert.exists(document.querySelector(\"div\"));\nYou should have two more div elements inside the div element.\njs\nassert.lengthOf(document.querySelectorAll(\"div > div\"), 2)\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1094,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68551b677a5f6898af364b85.md",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0c8a0e3f9ac2f65df8b8839b1c8a6d13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685523c05fb41d0848c4b52f.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 685523c05fb41d0848c4b52f\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nInside the first div element, create a span element with the text Soundflow, a h1 element with the text Discover New Music, and a p element with the text Stream your favorite tracks and discover new artists..\n--hints--\nYou should create a span element with the text Soundflow inside the first div element.\njs\nassert.equal(document.querySelector(\"div > div:first-child > span\")?.textContent, \"Soundflow\")\nYou should create a h1 element with the text Discover New Music inside the first div element.\njs\nassert.equal(document.querySelector(\"div > div:first-child > h1\")?.textContent, \"Discover New Music\")\nYou should create a p element with the text Stream your favorite tracks and discover new artists. inside the first div element.\njs\nassert.equal(document.querySelector(\"div > div:first-child > p\")?.textContent, \"Stream your favorite tracks and discover new artists.\")\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685523c05fb41d0848c4b52f.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0439fdceb9213d339b94f5d73f0a64c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680fc849a6f2be0a8597c593.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680fc849a6f2be0a8597c593\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nNow, create the state variables and setters for powerSource and powers powerSource should have an initial value of empty string, and powers should have an initial value of an empty array --hints--\nYou should use array destructuring to set a powerSource state variable and a setPowerSource setter js\nassert match(code, /(const|let|var)\\s+\\[\\s*powerSource\\s*,\\s*setPowerSource\\s*\\]/);\nYour powerSource and setPowerSource should use the useState hook ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nassert isAtLeast(abuseState calls length, 3);\n}\n```\nYour useState hook for powerSource should have an initial value of empty string ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nassert equal(abuseState calls[2] [0], \"\");\n}\n```\nYou should use array destructuring to set a powers state variable and a setPowers setter js\nassert match(code, /(const|let|var)\\s+\\[\\s*powers\\s*,\\s*setPowers\\s*\\]/);\nYour powers and setPowers should use the useState hook ```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nassert isAtLeast(abuseState calls length, 4);\n}\n```\nYour useState hook for powers should have an initial value of empty array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680fc849a6f2be0a8597c593.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bc226b66532fdb3340ccdc1005683520",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680fc849a6f2be0a8597c593.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "setPowers setter js assert match(code, /(const|let|var)\\s+\\[\\s*powers\\s*,\\s*setPowers\\s*\\]/); Your powers and setPowers should use the useState hook ```js async () => { const abuseState = __helpers spyOn(React, \"useState\"); const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const _a = eval(script); const _b = await __helpers prepTestComponent(exports SuperheroForm); assert isAtLeast(abuseState calls length, 4); } ``` Your useState hook for powers should have an initial value of empty array```js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports SuperheroForm);\nconsole log(\"State calls:\", abuseState calls)\nassert deepEqual(abuseState calls[3] [0], []);\n}\n```\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680fc849a6f2be0a8597c593.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2f400f1a75659d82f0856c9fd89cb6da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680fc849a6f2be0a8597c593.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\n--fcc-editable-region--\n--fcc-editable-region--\nreturn (\nSuperhero Application Form\nPlease complete all fields\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680fc849a6f2be0a8597c593.md",
      "source_type": "git_repo"
    },
    "token_count": 243,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3ac401f69fdd0391b5167c1a36491de7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68149b101d905a6fc2fcd6d8.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 68149b101d905a6fc2fcd6d8\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nBelow the destructured value and checked, update the list of checked powers Call the setPowers function, which takes an array argument Use a ternary operator to check if checked is true If it is, spread the existing powers array into a new array and add the value to it If it is not true, filter out the value from powers with powers filter(p => p == value) --hints--\nYou should use a ternary operator to check if checked is true If it is, spread in the existing powers and value into an array If it is not, filter out the value from powers js\nassert match(code, /(const|let|var)\\s*{\\s*(value\\s*,\\s*checked|checked\\s*,\\s*value)\\s*}\\s*=\\s*e\\s*\\ \\s*target\\s*; \\s*setPowers\\s*\\(\\s*checked\\s*\\ \\s*\\[\\s*\\ \\ \\ powers\\s*,\\s*value\\s*\\]\\s*:\\s*powers\\s*\\ \\s*filter\\s*\\(\\s*(p|\\(\\s*p\\s*\\))\\s*=>\\s*p\\s* == \\s*value\\s*\\)\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68149b101d905a6fc2fcd6d8.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bf41a8371410799f7dcb596ac77e99a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68149b101d905a6fc2fcd6d8.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) } form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 05rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\n--fcc-editable-region--\nconst handlePowersChange = e => {\nconst { value, checked } = e target;\n}\n--fcc-editable-region--\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n{powersOptions map(power => (\n<label key={power}>\n<input\ntype='checkbox'\nvalue={power}\nchecked={powers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68149b101d905a6fc2fcd6d8.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "381d444d4da11d960e77598b5939465a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68149b101d905a6fc2fcd6d8.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "[powers, setPowers] = useState([]); --fcc-editable-region-- const handlePowersChange = e => { const { value, checked } = e target; } --fcc-editable-region-- return ( Superhero Application Form Please complete all fields Hero Name setHeroName(e target value)} /> Real Name setRealName(e target value)} /> How did you get your powers setPowerSource(e target value)}> Select one {powerSourceOptions map(source => ( {source} ))} List your powers (select all that apply): {powersOptions map(power => ( <label key={power}> <input type='checkbox' value={power} checked={powersincludes(power)}\nonChange={handlePowersChange}\n/>\n<span>{power}</span>\n</label>\n))}\n</label>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5078,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\68149b101d905a6fc2fcd6d8.md",
      "source_type": "git_repo"
    },
    "token_count": 169,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7b2bc10f77ce50c018ab6fc9c89a62f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68552464ef378e1051a55c28.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 68552464ef378e1051a55c28\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nInside the second div, create two anchor elements. The first should have the text Learn more, and the second should have the text Start listening.\nFor the href attribute of the two anchor elements, set them both to #.\n--hints--\nYou should create two a elements inside the second div element\njs\nassert.lengthOf(document.querySelectorAll(\"div > div:nth-child(2) > a\"), 2)\nYour first a element should have the text Learn more and an href attribute of # inside the second div element.\n```js\nconst links = document.querySelectorAll(\"div > div:nth-child(2) > a\")\nassert.equal(links[0]?.textContent, \"Learn more\")\nassert.equal(links[0]?.getAttribute(\"href\"), \"#\")\n```\nYour second a element should have the text Start listening and a href attribute of # inside the second div element.\n```js\nconst links = document.querySelectorAll(\"div > div:nth-child(2) > a\")\nassert.equal(links[1]?.textContent, \"Start listening\")\nassert.equal(links[1]?.getAttribute(\"href\"), \"#\")\n```\n--seed--\n--seed-contents--\n```html\nCTA component\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1723,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68552464ef378e1051a55c28.md",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "16f6515de27b7dcd7daa252bc7dcc7fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6855255d96c1441bd919dc5d.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6855255d96c1441bd919dc5d\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nMoving to the span element with the text Soundflow, the text in it needs to be in uppercase.\nHere's an example showing how to use the uppercase utility class:\n```html\nQuincy Larson\n```\nAdd the class uppercase to the span element.\n--hints--\nYour span element should have the utility class uppercase.\njs\nconst spanEl = document.querySelector(\"span\");\nassert.isTrue(spanEl.classList.contains(\"uppercase\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\n--fcc-editable-region--\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1360,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6855255d96c1441bd919dc5d.md",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2e5510726de7749aa37fba38d135c4b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858e7e23bf9e475e14cb931.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858e7e23bf9e475e14cb931\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nNow that the HTML structure is built out, it's time to move to the proper styling with Tailwind.\nBegin with the div element that wraps the entire content. Set its background color by giving it a class of bg-indigo-600.\n--hints--\nYour outer div should have a class attribute set to bg-indigo-600.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"bg-indigo-600\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858e7e23bf9e475e14cb931.md",
      "source_type": "git_repo"
    },
    "token_count": 185,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0af65a07b9ae75e2f3dddd52ab9e22c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858e6408a0999603b2a4fee.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858e6408a0999603b2a4fee\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nFor the h1, add the classes font-bold and text-4xl. This will make the text bolder, bigger, and also give it more line spacing.\nAlso, add the class my-4 to increase the top and bottom margin of the h1 by 16 pixels, or 1rem.\n--hints--\nYour h1 element should have the utility class font-bold.\njs\nconst h1El = document.querySelector(\"h1\");\nassert.isTrue(h1El.classList.contains(\"font-bold\"));\nYour h1 element should have the utility class text-4xl.\njs\nconst h1El = document.querySelector(\"h1\");\nassert.isTrue(h1El.classList.contains(\"text-4xl\"));\nYour h1 element should have the utility class my-4.\njs\nconst h1El = document.querySelector(\"h1\");\nassert.isTrue(h1El.classList.contains(\"my-4\"));\n--seed--\n--seed-contents--\n```html\nCTA component\nSoundflow\n--fcc-editable-region--\nDiscover New Music\n--fcc-editable-region--\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858e6408a0999603b2a4fee.md",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6032fc7d3c00c7c9d3d3082d4760e6d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858e9f87e4faa903267d810.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858e9f87e4faa903267d810\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nAs the text in the outer div is the default black, it is not easy enough to see. So, add the class text-white to the div.\n--hints--\nYour outer div element should have the utility class text-white.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"text-white\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1115,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858e9f87e4faa903267d810.md",
      "source_type": "git_repo"
    },
    "token_count": 160,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2fc7ab42f6eb36bb71d708e277b3dd6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858eadd3144c89d45e02bc7.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858eadd3144c89d45e02bc7\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nIf you notice, the outer div is too attached to the top and the content in it is too stacked to the left. So, you should work on some spacing now.\nAdd the class mt-8 to the div to push it down a bit and p-4 to shift the text away from the left.\n--hints--\nYour outer div element should the utility class mt-8.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"mt-8\"));\nYour outer div element should the utility class p-4.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"p-4\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1409,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858eadd3144c89d45e02bc7.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1a76e63050e6dea9db52bbe0cbd823f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858ebf2552046ab3de9f17c.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858ebf2552046ab3de9f17c\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nAt this point, you'll notice there's too much space to the right of the content in the div. You can minimize this by adding a width.\nAdd the class md:w-1/2 to the div to reduce the width to 50% on medium and larger screens. That is, screens that are 768 pixels and up.\nTo see that in effect, expand the preview tab.\n--hints--\nYour outer div element should have the utility class md:w-1/2.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"md:w-1/2\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858ebf2552046ab3de9f17c.md",
      "source_type": "git_repo"
    },
    "token_count": 217,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c2816c9f20128433f070f35bd42a5371",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858ee73ed8106ccb214942a.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858ee73ed8106ccb214942a\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nNow that everything sticks to the left, you need to center the entire content by adding a margin of auto to the x-axis.\nAdd the Tailwind class that corresponds to that to the outer div element. To see that effect, adjust the preview tab until the entire content is centered.\n--hints--\nYour outer div element should have the utility class mx-auto.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"mx-auto\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1292,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858ee73ed8106ccb214942a.md",
      "source_type": "git_repo"
    },
    "token_count": 183,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "073bf717b9a34e59a727c0e6f894b7ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858ef974c8ad5dcd7abb9f1.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858ef974c8ad5dcd7abb9f1\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nThe content inside the div can be better spaced and arranged. For the rest of the spacing and that arrangement, you need to use flexbox.\nAdd the class flex to the div so the two child div elements sit side by side.\nAlso, add justify-around so the space around and between the content is evenly distributed, and items-center so the entire content is finally centered in the div.\n--hints--\nYour outer div element should have the utility class flex.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"flex\"));\nYour outer div element should have the utility class justify-around.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"justify-around\"));\nYour outer div element should have the utility class items-center.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"items-center\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1806,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858ef974c8ad5dcd7abb9f1.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "42df0f875785b33b08cc69387c69a4e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858f3a67aa8580ff37016c7.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858f3a67aa8580ff37016c7\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nIf you adjust the width of the preview tab to the width identical to a mobile device again, you will notice the content is always sitting side-by-side. This is not what you want on mobile devices.\nTo fix that, add the class flex-col to the div. This will change the flex direction to column, so things will stack on top of each other.\nHere's how to use the flex-col utility class:\n```html\n```\n--hints--\nYour opening div element should have the utility class flex-col.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"flex-col\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1539,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858f3a67aa8580ff37016c7.md",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6f9f28f30222a6d5262c5fd87ca970cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858f90c54647a48ddb8822d.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 6858f90c54647a48ddb8822d\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nAt this point, the content, that is, the two div elements inside the outer div will be stacked on top of each other no matter the screen size.\nThat's because you have the flex-col class in the wrapping div element. To fix that, use the lg: prefix to add the class flex-row to the div.\nThis means on devices with larger screens, the flex direction will be row. To see that in effect again, adjust the browser to a larger width.\n--hints--\nYour outer div element should have the utility class lg:flex-row.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"lg:flex-row\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1517,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\6858f90c54647a48ddb8822d.md",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "359e565de50eea23c0c1ee1c731c0563",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68591755e8cd86d27699d282.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 68591755e8cd86d27699d282\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nFinally, to remove the sharp edges of the outer div element, add the class rounded-md.\n--hints--\nYour outer div element should have the utility class rounded-md.\njs\nconst firstDiv = document.querySelectorAll(\"div\")[0];\nassert.isTrue(firstDiv.classList.contains(\"rounded-md\"));\n--seed--\n--seed-contents--\n```html\nCTA component\n--fcc-editable-region--\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1170,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68591755e8cd86d27699d282.md",
      "source_type": "git_repo"
    },
    "token_count": 146,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2ac55214732b157d1865e544ec0238f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68597114730d7c6b8838d204.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 68597114730d7c6b8838d204\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nThe paragraph under the h1 looks good, so it doesn't need any more styling. That means you can move to the anchor elements inside the second div element.\nGive the first anchor element the classes bg-white, hover:bg-gray-100, and text-indigo-600. This gives it a white background, a text-color of indigo, and a slightly light background when you hover on it.\nFor the second anchor element, give it the classes bg-pink-500, hover:bg-pink-600, and text-white.\n--hints--\nYour first anchor element should have the utility class bg-white.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[0].classList.contains(\"bg-white\"));\nYour first anchor element should have the utility class hover:bg-gray-100.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[0].classList.contains(\"hover:bg-gray-100\"));\nYour first anchor element should have the utility class text-indigo-600.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[0].classList.contains(\"text-indigo-600\"));\nYour second anchor element should have the utility class bg-pink-500.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[1].classList.contains(\"bg-pink-500\"));\nYour second anchor element should have the utility class hover:bg-pink-600.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[1].classList.contains(\"hover:bg-pink-600\"));\nYour second anchor element should have the utility class text-white.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[1].classList.contains(\"text-white\"));\n--seed--\n--seed-contents--\n```html\nCTA component\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\n--fcc-editable-region--\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2681,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\68597114730d7c6b8838d204.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dd9401adcd0d659770fedb30f530ca04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685972d14c6d8182fbae71f1.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 685972d14c6d8182fbae71f1\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nTo make the anchor tags look more like a button, add the classes px-4 and py-2 to each of them. px-4 will increase the right and left padding by 1rem, and py-2 will increase the top and bottom padding by 0.5rem.\n--hints--\nYour first anchor element should have the utility class px-4.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[0].classList.contains(\"px-4\"));\nYour first anchor element should have the utility class py-2.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[0].classList.contains(\"py-2\"));\nYour second anchor element should have the utility class px-4.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[1].classList.contains(\"px-4\"));\nYour second anchor element should have the utility class py-2.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[1].classList.contains(\"py-2\"));\n--seed--\n--seed-contents--\n```html\nCTA component\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\n--fcc-editable-region--\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2116,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685972d14c6d8182fbae71f1.md",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1741d8ebc4e5ec156df8e19a88397f41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685975c2505e3db255720561.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 685975c2505e3db255720561\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nLastly, the buttons can be better spaced apart and from the top. To do that, you need to target the div element that wraps them both. So, add the classes flex, gap-2, and mt-6 to that div.\nWith that, your CTA component workshop is complete!\n--hints--\nThe div element that wraps the anchor elements should have the utility class flex.\njs\nconst targetDiv = document.querySelectorAll(\"div\")[2];\nassert.isTrue(targetDiv.classList.contains(\"flex\"));\nThe div element that wraps the anchor elements should have the utility class gap-2.\njs\nconst targetDiv = document.querySelectorAll(\"div\")[2];\nassert.isTrue(targetDiv.classList.contains(\"gap-2\"));\nThe div element that wraps the anchor elements should have the utility class mt-6.\njs\nconst targetDiv = document.querySelectorAll(\"div\")[2];\nassert.isTrue(targetDiv.classList.contains(\"mt-6\"));\n--seed--\n--seed-contents--\n```html\nCTA component\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\n--fcc-editable-region--\nLearn more\nStart listening\n--fcc-editable-region--\n```\n--solutions--\n```html\nCTA component\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\nLearn more\nStart listening\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3133,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685975c2505e3db255720561.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fed699158f3b71b3ffb8b785c7815c70",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686383abac6c625a84458ea9.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686383abac6c625a84458ea9\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will learn more about Tailwind CSS by using its grid utility classes to build a pricing component.\nThe basic HTML boilerplate has been provided for you. Start by creating an h1 element with the text Choose your listening plan.\n--hints--\nYou should create an h1 element.\njs\nassert.exists(document.querySelector(\"h1\"));\nYour h1 element should have the text Choose your listening plan.\njs\nassert.equal(document.querySelector(\"h1\")?.textContent, \"Choose your listening plan\");\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1060,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686383abac6c625a84458ea9.md",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c3c090264468fb26f929acf32a24f59a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685973ca82469e940afcc422.md",
    "source_type": "git_repo",
    "title": "CTA component",
    "content": "id: 685973ca82469e940afcc422\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nTo finish up the button styling, add the utility class font-semibold to each a element so their text can be bolder. Also, add the class rounded to remove the sharp edges on the buttons.\n--hints--\nYour first anchor element should have the utility class font-semibold.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[0].classList.contains(\"font-semibold\"));\nYour first anchor element should have the utility class rounded.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[0].classList.contains(\"rounded\"));\nYour second anchor element should have the utility class font-semibold.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[1].classList.contains(\"font-semibold\"));\nYour second anchor element should have the utility class rounded.\njs\nconst anchorEls = document.querySelectorAll(\"a\");\nassert.isTrue(anchorEls[1].classList.contains(\"rounded\"));\n--seed--\n--seed-contents--\n```html\nCTA component\nSoundflow\nDiscover New Music\nStream your favorite tracks and discover new artists.\n--fcc-editable-region--\nLearn more\nStart listening\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-cta-component\\685973ca82469e940afcc422.md",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "636727c8b3417a7a6eb4e215fb5e5504",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52eb.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686386e76197458b7dfd52eb\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nCreate a div element under the h1. Inside that div, create another div element, and nest another div element inside it.\nAnd inside the innermost div, create an h2 element with the text Listener. This will represent the first pricing plan.\n--hints--\nYou should create a div element.\njs\nassert.exists(document.querySelector(\"div\"));\nYou should create another div element inside the outer div.\njs\nassert.exists(document.querySelector(\"div > div\"));\nYou should create another div element inside the inner div.\njs\nassert.exists(document.querySelector(\"div > div > div\"));\nYou should create an h2 with the text Listener inside the innermost div element.\njs\nassert.equal(document.querySelector(\"div > div > div > h2\")?.textContent, \"Listener\");\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1370,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52eb.md",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2b7847f518ffe8a69fb0ea5d5dacb682",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ec.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686386e76197458b7dfd52ec\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nUnder the h2, create a p element with the text $0. Then, inside that p element and after the text, create a span element with the text /month.\n--hints--\nYou should create a p element with the text $0.\n```js\nconst p = document.querySelector(\"p\");\nconst pTextBeforeSpan = p.childNodes[0].textContent.trim();\nassert.equal(pTextBeforeSpan, \"$0\");\n```\nYou should create a span element with the text /month inside the p element.\njs\nconst spanText = document.querySelector(\"p > span\")?.textContent;\nassert.equal(spanText, \"/month\");\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1262,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ec.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e03af73b294808b09f672b74397af137",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ed.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686386e76197458b7dfd52ed\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nUnder the p element you just added, create another p element with the text Start exploring millions of songs with basic features and ads.. Under that, create an empty ul element.\n--hints--\nYou should create another p element with the text Start exploring millions of songs with basic features and ads..\n```js\nconst paragraphs = document.querySelectorAll(\"p\")\nconst targetP = Array.from(paragraphs).find(p =>\np.textContent === \"Start exploring millions of songs with basic features and ads.\"\n)\nassert.exists(targetP)\n```\nYou should create an empty ul element under the p element.\n```js\nconst paragraphs = document.querySelectorAll(\"p\")\nconst targetP = Array.from(paragraphs).find(p =>\np.textContent === \"Start exploring millions of songs with basic features and ads.\"\n)\nconst ul = targetP.nextElementSibling\nassert.equal(ul?.tagName, \"UL\")\nassert.isEmpty(ul?.innerHTML.trim())\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ed.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c08943b134e039f32d6124aa95751824",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ee.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686386e76197458b7dfd52ee\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nInside the ul, create two list items. Inside the first list item, create a span element and add the HTML entity &#10003; as its text. Right after that span but within the list item, add the text Ad-supported streaming.\nInside the second list item, create a span element and add the entity &#10003; as its text. Right after that span, but within the list item, add the text Curated playlists.\n--hints--\nYou should have two list items inside your ul element.\njs\nassert.lengthOf(document.querySelectorAll(\"ul > li\"), 2)\nYour first li element should have a span element with the HTML character entity &#10003; in it.\n```js\nconst listItems = document.querySelectorAll(\"ul > li\")\nconst firstSpan = listItems[0].querySelector(\"span\")\nassert.equal(firstSpan?.textContent, \"✓\")\n```\nYour first li element should have the text Ad-supported streaming just after the span element.\n```js\nconst listItems = document.querySelectorAll(\"ul > li\");\nconst span = listItems[0].querySelector(\"span\");\nassert.equal(span.nextSibling?.textContent.trim(), \"Ad-supported streaming\");\n```\nYour second li element should have a span element with the HTML character entity &#10003; in it.\n```js\nconst listItems = document.querySelectorAll(\"ul > li\")\nconst secondSpan = listItems[1].querySelector(\"span\")\nassert.equal(secondSpan?.textContent, \"✓\")\n```\nYour second li element should have the text Curated playlists just after the span element.\n```js\nconst listItems = document.querySelectorAll(\"ul > li\");\nconst span = listItems[1].querySelector(\"span\");\nassert.equal(span.nextSibling?.textContent.trim(), \"Curated playlists\");\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2531,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ee.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "311768ed5e69613f04062598e775d9e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ef.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686386e76197458b7dfd52ef\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nNow you'll create a CTA button. A Call to Action (CTA) is a button or link designed to prompt a user to take a specific action, in this case, to start listening.\nOutside the innermost div, create an anchor element with an href of # and the text Start listening.\nThat concludes the HTML for the first pricing card.\n--hints--\nYou should create an anchor element.\njs\nassert.exists(document.querySelector(\"a\"))\nYour anchor element should have an href set to #.\njs\nconst link = document.querySelector(\"a\")\nassert.equal(link?.getAttribute(\"href\"), \"#\")\nYour anchor element should have the text Start listening.\njs\nassert.equal(document.querySelector(\"a\")?.textContent, \"Start listening\")\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1737,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52ef.md",
      "source_type": "git_repo"
    },
    "token_count": 248,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ab7c839bc1861a6447b0a53a73c97b51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52f9.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686386e76197458b7dfd52f9\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nThe rest of the HTML has been provided for you. That includes the premium and family plan cards. So, it's time to style the HTML elements with Tailwind CSS.\nBegin by giving the whole page a slightly grey background by assigning the body element a class of bg-gray-100.\n--hints--\nYour body element should have the class bg-gray-100.\njs\nconst bodyEl = document.querySelector(\"body\");\nassert.equal(bodyEl.className, \"bg-gray-100\");\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\n--fcc-editable-region--\n--fcc-editable-region--\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2764,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686386e76197458b7dfd52f9.md",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "82e6e2e9b09119a21c16f63380c65c6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864dafe72087c517e80f6e0.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864dafe72087c517e80f6e0\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nThe h1 text is too close to the top of the page and the text below it, so you should add some spacing around it.\nIn addition to the existing ones, assign the utility classes mt-8 and mb-12 to the h1.\n--hints--\nYour h1 element should have the class mt-8.\n```js\nconst h1El = document.querySelector(\"h1\")\nassert.isTrue(h1El.classList.contains(\"mt-8\"))\n```\nYour h1 element should have the class mb-12.\n```js\nconst h1El = document.querySelector(\"h1\")\nassert.isTrue(h1El.classList.contains(\"mb-12\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\n--fcc-editable-region--\nChoose your listening plan\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2926,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864dafe72087c517e80f6e0.md",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "32866e06ee5fdbd4e5fb6b8b55a9eddc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864dcea9ad9f86942ff0158.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864dcea9ad9f86942ff0158\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nIt's time to work on the div element that wraps the three pricing cards. To arrange the cards, you can use Tailwind CSS's grid utility classes.\nHere's how to assign a display of grid to an element using Tailwind:\n```html\nGrid Item\nGrid Item\nGrid Item\n```\nAssign a class of grid to the div element that wraps the pricing cards.\n--hints--\nYour div element should have the class grid.\n```js\nconst firstDiv = document.querySelector(\"div\")\nassert.isTrue(firstDiv.classList.contains(\"grid\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2984,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864dcea9ad9f86942ff0158.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5e9242ed91f63467fcbe28548557f92e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864d9999f8a4e3f0d569a3f.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864d9999f8a4e3f0d569a3f\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nNext, make the h1 text distinguishable by assigning it a class set to text-3xl to make it bigger, text-center to center it, font-semibold to make it bolder, text-gray-900 to make it darker, and md:text-5xl to make it bigger on medium and larger screen sizes.\n--hints--\nYour h1 element should have the class text-3xl.\n```js\nconst h1El = document.querySelector(\"h1\")\nassert.isTrue(h1El.classList.contains(\"text-3xl\"))\n```\nYour h1 element should have the class text-center.\n```js\nconst h1El = document.querySelector(\"h1\")\nassert.isTrue(h1El.classList.contains(\"text-center\"))\n```\nYour h1 element should have the class font-semibold.\n```js\nconst h1El = document.querySelector(\"h1\")\nassert.isTrue(h1El.classList.contains(\"font-semibold\"))\n```\nYour h1 element should have the class text-gray-900.\n```js\nconst h1El = document.querySelector(\"h1\")\nassert.isTrue(h1El.classList.contains(\"text-gray-900\"))\n```\nYour h1 element should have the class md:text-5xl.\n```js\nconst h1El = document.querySelector(\"h1\")\nassert.isTrue(h1El.classList.contains(\"md:text-5xl\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\n--fcc-editable-region--\nChoose your listening plan\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864d9999f8a4e3f0d569a3f.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b3da65fc5eb6478eecc2908f02298895",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864df7ec0fc508ac3828ab5.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864df7ec0fc508ac3828ab5\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nFrom regular CSS, you learned that assigning a display of grid to an element does not do anything until you specify the grid rows and columns. That's how it works in Tailwind, too.\nIn Tailwind, to assign a grid row and grid column, you'd use their respective utility classes like this:\n```html\nGrid Item\nGrid Item\nGrid Item\n```\nAssign the wrapper div the utility classes grid-cols-1 and md:grid-cols-3.\nThe grid-cols-1 class arranges the three items in a single column, stacking them vertically. On medium and larger screens, md:grid-cols-3 switches the layout to three columns, displaying the items side by side.\n--hints--\nYour div element should have the class grid-cols-1.\n```js\nconst firstDiv = document.querySelector(\"div\")\nassert.isTrue(firstDiv.classList.contains(\"grid-cols-1\"))\n```\nYour div element should have the class md:grid-cols-3.\n```js\nconst firstDiv = document.querySelector(\"div\")\nassert.isTrue(firstDiv.classList.contains(\"md:grid-cols-3\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3522,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864df7ec0fc508ac3828ab5.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5f29094f094c1fa3e1d1cd5a2b388f31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e31ef17310b9e6aa376e.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864e31ef17310b9e6aa376e\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nThe grid items are too close to the left and right edges of the page, so you should work on the spacing.\nAssign the class max-w-6xl to the div to set a fixed width of 72rem and prevent the items from stretching too far across the page.\nAs that will push all of them to the left, add mx-auto to the div to center the items horizontally.\n--hints--\nYour div element should have the class max-w-6xl.\n```js\nconst firstDiv = document.querySelector(\"div\")\nassert.isTrue(firstDiv.classList.contains(\"max-w-6xl\"))\n```\nYour div element should have the class mx-auto.\n```js\nconst firstDiv = document.querySelector(\"div\")\nassert.isTrue(firstDiv.classList.contains(\"mx-auto\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3152,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e31ef17310b9e6aa376e.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f9d3d4d4dcbc4acd0acff1de949e830",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e506a6f773d5e300c0b4.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864e506a6f773d5e300c0b4\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nAt this point, the items are too close to each other. Add gap-8 to create some space between them, and use mt-16 to push them down from the top a bit.\n--hints--\nYour div element should have the class gap-8.\n```js\nconst firstDiv = document.querySelector(\"div\")\nassert.isTrue(firstDiv.classList.contains(\"gap-8\"))\n```\nYour div element should have the class mt-16.\n```js\nconst firstDiv = document.querySelector(\"div\")\nassert.isTrue(firstDiv.classList.contains(\"mt-16\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e506a6f773d5e300c0b4.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6d1dcd14c95736b6b3592e9f26ea2cc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e996adaf0b13437f1d11.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864e996adaf0b13437f1d11\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nNow, you should move to styling the elements for the Listener plan.\nGive the outer div for the plan the classes bg-gray-100, ring-1 to create a thick outline around the div, and ring-gray-300 to assign a dark color to that outline.\n--hints--\nYour div element should have the class bg-gray-100.\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"bg-gray-100\"))\n```\nYour div element should have the class ring-1.\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"ring-1\"))\n```\nYour div element should have the class ring-gray-300.\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"ring-gray-300\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3360,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e996adaf0b13437f1d11.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e688469c12810b9c602ee63143f8fa12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e580f94941dcfa2bb26d.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864e580f94941dcfa2bb26d\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nNow you should work on the placement of the items inside the card for the plan.\nTo do this, set the container to use grid display and specify a custom row size using square brackets in your Tailwind class.\nHere's how you can set a custom grid row using fractional units:\n```html\nTakes one part\nTakes two parts of available space\n```\nGive the outer div for the plan the utility classes grid and grid-rows-[1fr_auto].\n--hints--\nYour div element should have the class grid.\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"grid\"))\n```\nYour div element should have the class grid-rows-[1fr_auto].\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"grid-rows-[1fr_auto]\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3457,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864e580f94941dcfa2bb26d.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "094d1bb25fe909ae9a54f63043fb7038",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864ebcd123f7c335e92d6dd.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864ebcd123f7c335e92d6dd\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nNow you should work on the spacing for the items inside that plan.\nAdd the utility class rounded-xl to remove the sharp edges for the ring, p-8 to increase the padding, and gap-6 to create space between the content and the CTA button.\n--hints--\nYour div element should have the class rounded-xl.\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"rounded-xl\"))\n```\nYour div element should have the class p-8.\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"p-8\"))\n```\nYour div element should have the class gap-6.\n```js\nconst listenerPlanWrapper = document.querySelectorAll(\"div\")[1]\nassert.isTrue(listenerPlanWrapper.classList.contains(\"gap-6\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864ebcd123f7c335e92d6dd.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9c4b8fca6963d02b48c821f0c1057fb6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f28c46eb6f00dccd5c54.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864f28c46eb6f00dccd5c54\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nMoving to the h2 inside the Listener plan, give it the utility class text-lg to make it larger, font-semibold to make it bolder, and text-indigo-600 to give it a beautiful indigo color.\n--hints--\nYour h2 element should have the class text-lg.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst listenerH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Listener\")\nassert.isTrue(listenerH2.classList.contains(\"text-lg\"))\n```\nYour h2 element should have the class font-semibold.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst listenerH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Listener\")\nassert.isTrue(listenerH2.classList.contains(\"font-semibold\"))\n```\nYour h2 element should have the class text-indigo-600.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst listenerH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Listener\")\nassert.isTrue(listenerH2.classList.contains(\"text-indigo-600\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\nListener\n--fcc-editable-region--\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3622,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f28c46eb6f00dccd5c54.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "caa1d2749cdacfba8e57b017e1a82652",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864ed58edec4b4aaeb571cc.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864ed58edec4b4aaeb571cc\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nMoving to the inner div in the Listener plan, give it the classes grid, grid-rows-[auto_auto_auto_1fr], and gap-y-2.\nThese classes will make the inner div a grid container, define four rows that stack on top of each other, with the first three set to auto and the last taking up the remaining spaces, and finally add a spacing of 0.5rem between the rows.\n--hints--\nYour inner div element should have the class grid.\n```js\nconst listenerPlanInnerDiv = document.querySelectorAll(\"div\")[2]\nassert.isTrue(listenerPlanInnerDiv.classList.contains(\"grid\"))\n```\nYour inner div element should have the class grid-rows-[auto_auto_auto_1fr].\n```js\nconst listenerPlanInnerDiv = document.querySelectorAll(\"div\")[2]\nassert.isTrue(listenerPlanInnerDiv.classList.contains(\"grid-rows-[auto_auto_auto_1fr]\"))\n```\nYour inner div element should have the class gap-y-2.\n```js\nconst listenerPlanInnerDiv = document.querySelectorAll(\"div\")[2]\nassert.isTrue(listenerPlanInnerDiv.classList.contains(\"gap-y-2\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\n--fcc-editable-region--\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\n--fcc-editable-region--\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3605,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864ed58edec4b4aaeb571cc.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d4df025ba3d7dbe66b625d51d34b46fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f340223afc0f133868d1.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864f340223afc0f133868d1\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nMoving to the price text inside the p and span, give the p element the classes text-4xl, font-bold, and text-gray-900 so the price is more visible.\n--hints--\nYour p element should have the class text-4xl.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$0\"))\nassert.isTrue(targetP.classList.contains(\"text-4xl\"))\n```\nYour p element should have the class font-bold.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$0\"))\nassert.isTrue(targetP.classList.contains(\"font-bold\"))\n```\nYour p element should have the class text-gray-900.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$0\"))\nassert.isTrue(targetP.classList.contains(\"text-gray-900\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n--fcc-editable-region--\n$0/month\n--fcc-editable-region--\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3566,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f340223afc0f133868d1.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b90ee10aa1d3a3ffeaaa8abd65b66237",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f66df54d9d3abcd4fd31.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864f66df54d9d3abcd4fd31\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nFor the span inside the p element that has the text /month, give it the classes text-base, font-medium, and text-gray-500. This will distinguish it from the price itself by making the text lighter.\n--hints--\nYour span element should have the class text-base.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$0\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"text-base\"))\n```\nYour span element should have the class font-medium.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$0\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"font-medium\"))\n```\nYour span element should have the class text-gray-500.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$0\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"text-gray-500\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n--fcc-editable-region--\n$0/month\n--fcc-editable-region--\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f66df54d9d3abcd4fd31.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f72d3042631e0962e027a7ac478e5279",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f704409f85463386cd91.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864f704409f85463386cd91\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nMoving to the next paragraph, give it the utility class text-gray-600.\n--hints--\nYour p element should have the class text-gray-600.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.trim() === \"Start exploring millions of songs with basic features and ads.\")\nassert.equal(targetP.className, \"text-gray-600\")\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\n--fcc-editable-region--\nStart exploring millions of songs with basic features and ads.\n--fcc-editable-region--\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3161,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f704409f85463386cd91.md",
      "source_type": "git_repo"
    },
    "token_count": 288,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e7707c40a789d7ae663048e51751342",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f81018a0085ae30afa9b.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864f81018a0085ae30afa9b\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nThe checkmark in each span at the start of a list item is decorative. Add aria-hidden to these span elements to hide them from screen readers.\nAlso, assign the classes text-green-700 and mr-2 to each of the span elements.\n--hints--\nYour two span elements should have the aria-hidden attribute.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst firstTwoSpans = [spanEls[0], spanEls[1]]\nfirstTwoSpans.forEach(span => {\nassert.isTrue(span.hasAttribute(\"aria-hidden\"))\n})\n```\nYour two span elements should have the class text-green-700.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst firstTwoSpans = [spanEls[0], spanEls[1]]\nfirstTwoSpans.forEach(span => {\nassert.isTrue(span.classList.contains(\"text-green-700\"))\n})\n```\nYour two span elements should have the class mr-2.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst firstTwoSpans = [spanEls[0], spanEls[1]]\nfirstTwoSpans.forEach(span => {\nassert.isTrue(span.classList.contains(\"mr-2\"))\n})\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n--fcc-editable-region--\n✓Ad-supported streaming\n✓Curated playlists\n--fcc-editable-region--\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3867,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f81018a0085ae30afa9b.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7d93b5599c6ba4b7e2530aafbc77f921",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f7985a9b7e5285e27257.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864f7985a9b7e5285e27257\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nNext, assign the utility classes mt-6, space-y-2, text-sm, and text-gray-700 to the ul.\n--hints--\nYour ul element should have the class mt-6.\n```js\nconst firstUl = document.querySelector(\"ul\")\nassert.isTrue(firstUl.classList.contains(\"mt-6\"))\n```\nYour ul element should have the class space-y-2.\n```js\nconst firstUl = document.querySelector(\"ul\")\nassert.isTrue(firstUl.classList.contains(\"space-y-2\"))\n```\nYour ul element should have the class text-sm.\n```js\nconst firstUl = document.querySelector(\"ul\")\nassert.isTrue(firstUl.classList.contains(\"text-sm\"))\n```\nYour ul element should have the class text-gray-700.\n```js\nconst firstUl = document.querySelector(\"ul\")\nassert.isTrue(firstUl.classList.contains(\"text-gray-700\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n--fcc-editable-region--\n✓Ad-supported streaming\n✓Curated playlists\n--fcc-editable-region--\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3570,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f7985a9b7e5285e27257.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7bed96181a4f07d2203d6b508533e60d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864fa68aae44b80f7d0863c.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864fa68aae44b80f7d0863c\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nIn addition to those, add the classes block and rounded-md to the anchor tag to make the it a block element and remove the sharp edges.\n--hints--\nYour anchor element should have the class block.\n```js\nconst firstATag = document.querySelector(\"a\")\nassert.isTrue(firstATag.classList.contains(\"block\"))\n```\nYour anchor element should have the class rounded-md.\n```js\nconst firstATag = document.querySelector(\"a\")\nassert.isTrue(firstATag.classList.contains(\"rounded-md\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\n--fcc-editable-region--\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3606,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864fa68aae44b80f7d0863c.md",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "154ae2dd7fb618fe3d9cc3fc580e3361",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864fb24b8070f904768c24f.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864fb24b8070f904768c24f\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nThe next pricing card is the Premium Plan.\nGive the wrapper div of the premium plan the classes bg-gray-950, text-white, ring-2, ring-fuchsia-500, and p-8.\n--hints--\nYour wrapper div element for the premium plan should have the class bg-gray-950.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"bg-gray-950\"))\n```\nYour wrapper div element for the premium plan should have the class text-white.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"text-white\"))\n```\nYour wrapper div element for the premium plan should have the class ring-2.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"ring-2\"))\n```\nYour wrapper div element for the premium plan should have the class ring-fuchsia-500.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"ring-fuchsia-500\"))\n```\nYour wrapper div element for the premium plan should have the class p-8.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"p-8\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864fb24b8070f904768c24f.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ee3a62b5e4c6ca2df337caa89d8d1176",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667227c6b33aaf41d4e086.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667227c6b33aaf41d4e086\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nTo position the items in the card, you need grid classes again. Assign the utility classes grid, grid-rows-[1fr_auto], and gap-6 to the wrapper div.\nAlso, remove the sharp edges with the class rounded-xl.\n--hints--\nYour wrapper div element for the premium plan should have the class grid.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"grid\"))\n```\nYour wrapper div element for the premium plan should have the class grid-rows-[1fr_auto].\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"grid-rows-[1fr_auto]\"))\n```\nYour wrapper div element for the premium plan should have the class gap-6.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"gap-6\"))\n```\nYour wrapper div element for the premium plan should have the class rounded-xl.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"rounded-xl\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4387,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667227c6b33aaf41d4e086.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4a7ba9bd51001d768d2e05d4a4c78f64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6866733f0b8f85bcb9587646.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6866733f0b8f85bcb9587646\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nThe premium pricing card should be the one that stands out the most on the page. Also, it's the only card that will have a Most popular badge. To make this card and its badge stand out, you can use Tailwind's relative positioning and scaling utility classes.\nHere's how you would make an element bigger with scaling in Tailwind CSS:\n```html\nThis element is scaled up by 10%\n```\nYou will take care of the positioning in the coming steps. For now, assign the class scale-105 to the wrapper div to make it a bit bigger than the other pricing cards.\n--hints--\nYour wrapper div element for the premium plan should have the class scale-105.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"scale-105\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4052,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6866733f0b8f85bcb9587646.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "97b174423e9e60a05f951c5ca6b4e085",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6866740a0f532cc7e9e21877.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6866740a0f532cc7e9e21877\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nLet's move onto the Most popular badge. You need to place it in the upper right corner of the card, so you can use some of Tailwind's positioning utility classes to do that.\nHere's how you would use CSS positioning in Tailwind:\n```html\nThis element is positioned at the top-left corner\n```\nAssign the class relative to the wrapper div and absolute to the div with the text Most popular.\n--hints--\nYour wrapper div element for the premium plan should have the class relative.\n```js\nconst premiumPlanWrapper = document.querySelectorAll(\"div\")[3]\nassert.isTrue(premiumPlanWrapper.classList.contains(\"relative\"))\n```\nYour div element with the text Most popular should have the class absolute.\n```js\nconst badgeDiv = document.querySelectorAll(\"div\")[4]\nassert.isTrue(badgeDiv.classList.contains(\"absolute\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4166,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6866740a0f532cc7e9e21877.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d977a107c08563d92bd0e2a140d6541a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f8fef1584f68696e8e24.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6864f8fef1584f68696e8e24\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nNow, you should move to the Start listening CTA to make it a proper button Assign it the utility classes bg-indigo-100, px-4, py-2, text-center, font-semibold, text-indigo-700, and hover:bg-indigo-200 --hints--\nYour anchor element should have the class bg-indigo-100 ```js\nconst firstATag = document querySelector(\"a\")\nassert isTrue(firstATag classList contains(\"bg-indigo-100\"))\n```\nYour anchor element should have the class px-4 ```js\nconst firstATag = document querySelector(\"a\")\nassert isTrue(firstATag classList contains(\"px-4\"))\n```\nYour anchor element should have the class py-2 ```js\nconst firstATag = document querySelector(\"a\")\nassert isTrue(firstATag classList contains(\"py-2\"))\n```\nYour anchor element should have the class text-center ```js\nconst firstATag = document querySelector(\"a\")\nassert isTrue(firstATag classList contains(\"text-center\"))\n```\nYour anchor element should have the class font-semibold ```js\nconst firstATag = document querySelector(\"a\")\nassert isTrue(firstATag classList contains(\"font-semibold\"))\n```\nYour anchor element should have the class text-indigo-700 ```js\nconst firstATag = document querySelector(\"a\")\nassert isTrue(firstATag classList contains(\"text-indigo-700\"))\n```\nYour anchor element should have the class hover:bg-indigo-200 ```js\nconst firstATag = document querySelector(\"a\")\nassert isTrue(firstATag classList contains(\"hover:bg-indigo-200\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads ✓Ad-supported streaming\n✓Curated playlists\n--fcc-editable-region--\nStart listening\n--fcc-editable-region--\nMost Popular\nPremium\n$9 99/month\nEnjoy the full music experience with unlimited access and\ndownloads ✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4426,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f8fef1584f68696e8e24.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6e91e4f43fc347b75f54522424159393",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f8fef1584f68696e8e24.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "contains(\"text-indigo-700\")) ``` Your anchor element should have the class hover:bg-indigo-200 ```js const firstATag = document querySelector(\"a\") assert isTrue(firstATag classList contains(\"hover:bg-indigo-200\")) ``` --seed-- --seed-contents-- ```html Music App Pricing Choose your listening plan Listener $0/month Start exploring millions of songs with basic features and ads ✓Ad-supported streaming ✓Curated playlists --fcc-editable-region-- Start listening --fcc-editable-region-- Most Popular Premium $9 99/month Enjoy the full music experience with unlimited access and downloads ✓Ad-free listening ✓Offline playback ✓Unlimited skips Go Premium Family $1499/month\nEnjoy all of the features with a plan for up to 6 family members ✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4426,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6864f8fef1584f68696e8e24.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1a18fc2dbac25d6f253d6973048c3f3d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6866771fa1b958f7560a6863.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6866771fa1b958f7560a6863\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nThat moves the badge text, but not exactly where you want. The magic is in the right-[num], left-[num], top-[num], and bottom-[num] utility classes.\nHere's how to use them:\n```html\nThis element is positioned 1rem from top and 2rem from left\n```\nYou can also indicate negative values by prefixing them with a hyphen:\n```html\nThis element is positioned 1rem above and 2rem to the left\n```\nAdd the classes -top-3 and right-3 to the Most popular badge div.\n--hints--\nYour div element with the text Most popular should have the class -top-3.\n```js\nconst badgeDiv = document.querySelectorAll(\"div\")[4]\nassert.isTrue(badgeDiv.classList.contains(\"-top-3\"))\n```\nYour div element with the text Most popular should have the class right-3.\n```js\nconst badgeDiv = document.querySelectorAll(\"div\")[4]\nassert.isTrue(badgeDiv.classList.contains(\"right-3\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\n--fcc-editable-region--\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4389,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6866771fa1b958f7560a6863.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8df56fae1a1fdab71df5355d90b52425",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667a42c6784620c088505c.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667a42c6784620c088505c\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nApart from the Go Premium CTA, the rest of the content is in a div. That makes CSS grid a good option to arrange everything.\nAdd the classes grid, grid-rows-[auto_auto_auto_1fr], and gap-y-2 to the div that wraps the h2, p, and ul elements.\n--hints--\nYour div element that wraps the h2, p, and ul elements should have the class grid.\n```js\nconst innerWrapperDiv = document.querySelectorAll(\"div\")[5]\nassert.isTrue(innerWrapperDiv.classList.contains(\"grid\"))\n```\nYour div element that wraps the h2, p, and ul elements should have the class grid-rows-[auto_auto_auto_1fr].\n```js\nconst innerWrapperDiv = document.querySelectorAll(\"div\")[5]\nassert.isTrue(innerWrapperDiv.classList.contains(\"grid-rows-[auto_auto_auto_1fr]\"))\n```\nYour div element that wraps the h2, p, and ul elements should have the class gap-y-2.\n```js\nconst innerWrapperDiv = document.querySelectorAll(\"div\")[5]\nassert.isTrue(innerWrapperDiv.classList.contains(\"gap-y-2\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\n--fcc-editable-region--\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\n--fcc-editable-region--\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667a42c6784620c088505c.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0483b36a94dfe5152b6719bc3f2598c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667b354cdc432f3f83c846.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667b354cdc432f3f83c846\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nAdd the classes text-lg, font-semibold, and text-fuchsia-200 to the h2 element of the premium plan.\n--hints--\nYour h2 element should have the class text-lg.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst premiumH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Premium\")\nassert.isTrue(premiumH2.classList.contains(\"text-lg\"))\n```\nYour h2 element should have the class font-semibold.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst premiumH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Premium\")\nassert.isTrue(premiumH2.classList.contains(\"font-semibold\"))\n```\nYour h2 element should have the class text-fuchsia-200.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst premiumH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Premium\")\nassert.isTrue(premiumH2.classList.contains(\"text-fuchsia-200\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\n--fcc-editable-region--\nPremium\n--fcc-editable-region--\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4320,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667b354cdc432f3f83c846.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d4c3c64dd888f703b7d8245c9e134300",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667bdd7e26613a6d013ac4.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667bdd7e26613a6d013ac4\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nAdd the classes text-4xl, font-bold, and text-white to the p element that has the price text to make it look more visible.\n--hints--\nYour p element should have the class text-4xl.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$9.99\"))\nassert.isTrue(targetP.classList.contains(\"text-4xl\"))\n```\nYour p element should have the class font-bold.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$9.99\"))\nassert.isTrue(targetP.classList.contains(\"font-bold\"))\n```\nYour p element should have the class text-white.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$9.99\"))\nassert.isTrue(targetP.classList.contains(\"text-white\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n--fcc-editable-region--\n$9.99/month\n--fcc-editable-region--\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4360,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667bdd7e26613a6d013ac4.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "103e04592cf73e8edbc544680108736c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667c33e3c13940ce87c40d.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667c33e3c13940ce87c40d\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nThe span that has the duration also needs some styling, so add the classes text-base, font-medium, and text-fuchsia-300 to it.\n--hints--\nYour span element should have the class text-base.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$9.99\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"text-base\"))\n```\nYour span element should have the class font-medium.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$9.99\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"font-medium\"))\n```\nYour span element should have the class text-fuchsia-300.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$9.99\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"text-fuchsia-300\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n--fcc-editable-region--\n$9.99/month\n--fcc-editable-region--\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4597,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667c33e3c13940ce87c40d.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5a028c4c25bb0b82b4b18a8629b50640",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686678efc0d9e60eb59ca029.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 686678efc0d9e60eb59ca029\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nThe badge can be better styled For this, you will use some Tailwind gradient classes Here's how you can use gradient styles in Tailwind:\n```html\nThis is a badge\n```\nAdd the classes bg-gradient-to-r, from-fuchsia-500, and to-indigo-500 to the badge div Also, add rounded-full, px-3, py-1, text-xs, font-bold, and text-white --hints--\nYour div element with the text Most popular should have the class bg-gradient-to-r ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"bg-gradient-to-r\"))\n```\nYour div element with the text Most popular should have the class from-fuchsia-500 ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"from-fuchsia-500\"))\n```\nYour div element with the text Most popular should have the class to-indigo-500 ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"to-indigo-500\"))\n```\nYour div element with the text Most popular should have the class rounded-full ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"rounded-full\"))\n```\nYour div element with the text Most popular should have the class px-3 ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"px-3\"))\n```\nYour div element with the text Most popular should have the class py-1 ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"py-1\"))\n```\nYour div element with the text Most popular should have the class text-xs ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"text-xs\"))\n```\nYour div element with the text Most popular should have the class font-bold ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5585,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686678efc0d9e60eb59ca029.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ee9006b75f5db9cb8f01dbcbcbf17620",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686678efc0d9e60eb59ca029.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "querySelectorAll(\"div\")[4] assert isTrue(badgeDiv classList contains(\"px-3\")) ``` Your div element with the text Most popular should have the class py-1 ```js const badgeDiv = document querySelectorAll(\"div\")[4] assert isTrue(badgeDiv classList contains(\"py-1\")) ``` Your div element with the text Most popular should have the class text-xs ```js const badgeDiv = document querySelectorAll(\"div\")[4] assert isTrue(badgeDiv classList contains(\"text-xs\")) ``` Your div element with the text Most popular should have the class font-bold ```js const badgeDiv = document querySelectorAll(\"div\")[4] assert isTrue(badgeDiv classListcontains(\"font-bold\"))\n```\nYour div element with the text Most popular should have the class text-white ```js\nconst badgeDiv = document querySelectorAll(\"div\")[4]\nassert isTrue(badgeDiv classList contains(\"text-white\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads ✓Ad-supported streaming\n✓Curated playlists\nStart listening\n--fcc-editable-region--\nMost Popular\n--fcc-editable-region--\nPremium\n$9 99/month\nEnjoy the full music experience with unlimited access and\ndownloads ✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14 99/month\nEnjoy all of the features with a plan for up to 6 family members ✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5585,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\686678efc0d9e60eb59ca029.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "90b3fa4865112a9baacb9da0b44be988",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667c8eca7580479ead76a0.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667c8eca7580479ead76a0\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nAdd the class text-gray-300 to the p element that has the one-line benefit of the plan.\n--hints--\nYour p element should have the class text-gray-300.\n```js\nconst targetP = document.querySelectorAll(\"p\")[3]\nassert.equal(targetP.className, \"text-gray-300\")\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\n--fcc-editable-region--\nEnjoy the full music experience with unlimited access and\ndownloads.\n--fcc-editable-region--\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3861,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667c8eca7580479ead76a0.md",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "34850130a0e93dc2d88b94bcf8e599a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667da4251a7c59e083bb7e.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667da4251a7c59e083bb7e\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nFor the span elements inside each list item, assign them the classes text-green-500 and mr-2 to make the markers green and push them a bit away from the text.\nAlso, assign them the aria-hidden attribute like you did for the span elements of the first pricing plan.\n--hints--\nYour span elements should have the class text-green-500.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst premiumSpans = [spanEls[2], spanEls[3], spanEls[4]]\npremiumSpans.forEach(span => {\nassert.isTrue(span.classList.contains(\"text-green-500\"))\n})\n```\nYour span elements should have the class mr-2.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst premiumSpans = [spanEls[2], spanEls[3], spanEls[4]]\npremiumSpans.forEach(span => {\nassert.isTrue(span.classList.contains(\"mr-2\"))\n})\n```\nYour span elements should have the aria-hidden attribute.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst premiumSpans = [spanEls[2], spanEls[3], spanEls[4]]\npremiumSpans.forEach(span => {\nassert.isTrue(span.hasAttribute(\"aria-hidden\"))\n})\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n--fcc-editable-region--\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\n--fcc-editable-region--\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667da4251a7c59e083bb7e.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c342a573d32f76253193479e85ab0d84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667cefaa5ad54e5ec212a4.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667cefaa5ad54e5ec212a4\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nMoving to the list element, add the classes mt-6, space-y-2, text-sm, and text-fuchsia-100 to the ul to space out the list items and make them look more appealing.\n--hints--\nYour ul element should have the class mt-6.\n```js\nconst secondUl = document.querySelectorAll(\"ul\")[1]\nassert.isTrue(secondUl.classList.contains(\"mt-6\"))\n```\nYour ul element should have the class space-y-2.\n```js\nconst secondUl = document.querySelectorAll(\"ul\")[1]\nassert.isTrue(secondUl.classList.contains(\"space-y-2\"))\n```\nYour ul element should have the class text-sm.\n```js\nconst secondUl = document.querySelectorAll(\"ul\")[1]\nassert.isTrue(secondUl.classList.contains(\"text-sm\"))\n```\nYour ul element should have the class text-fuchsia-100.\n```js\nconst secondUl = document.querySelectorAll(\"ul\")[1]\nassert.isTrue(secondUl.classList.contains(\"text-fuchsia-100\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n--fcc-editable-region--\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\n--fcc-editable-region--\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4508,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667cefaa5ad54e5ec212a4.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f286ecb8a0245c3b1c313f6401e2988d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68668014d6a84384018dc302.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68668014d6a84384018dc302\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nNext is the last pricing item, the Family Plan.\nTo begin, give the wrapper div for the plan the classes bg-gray-100, ring-1, ring-gray-300, p-8, and rounded-xl.\n--hints--\nYour wrapper div element for the family plan should have the class bg-gray-100.\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"bg-gray-100\"))\n```\nYour wrapper div element for the family plan should have the class ring-1.\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"ring-1\"))\n```\nYour wrapper div element for the family plan should have the class ring-gray-300.\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"ring-gray-300\"))\n```\nYour wrapper div element for the family plan should have the class p-8.\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"p-8\"))\n```\nYour wrapper div element for the family plan should have the class rounded-xl.\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"rounded-xl\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68668014d6a84384018dc302.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "54eec03e954bebd8a4058169e7a49e56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667f8aa360b17a01982b7c.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667f8aa360b17a01982b7c\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nNow, add the classes px-4, py-2, text-center, and font-semibold to the anchor element.\n--hints--\nYour anchor element should have the class px-4.\n```js\nconst premiumATag = document.querySelectorAll(\"a\")[1]\nassert.isTrue(premiumATag.classList.contains(\"px-4\"))\n```\nYour anchor element should have the class py-2.\n```js\nconst premiumATag = document.querySelectorAll(\"a\")[1]\nassert.isTrue(premiumATag.classList.contains(\"py-2\"))\n```\nYour anchor element should have the class font-semibold.\n```js\nconst premiumATag = document.querySelectorAll(\"a\")[1]\nassert.isTrue(premiumATag.classList.contains(\"font-semibold\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\n--fcc-editable-region--\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667f8aa360b17a01982b7c.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94ac10030686ff35583942718a701a83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c8a8185485144ebbb453.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867c8a8185485144ebbb453\ntitle: Step 43\nchallengeType: 0\ndashedName: step-43\n--description--\nThat takes care of some basic styling spacing for the item card, including the CTA button. For the rest of the inner content, you need to arrange everything in a grid by targeting the inner div.\nAssign the classes grid, grid-rows-[auto_auto_auto_1fr], and gap-y-2 to the inner div.\n--hints--\nYour inner div element for the family plan should have the class grid.\n```js\nconst familyPlanInnerDiv = document.querySelectorAll(\"div\")[7]\nassert.isTrue(familyPlanInnerDiv.classList.contains(\"grid\"))\n```\nYour inner div element for the family plan should have the class grid-rows-[auto_auto_auto_1fr].\n```js\nconst familyPlanInnerDiv = document.querySelectorAll(\"div\")[7]\nassert.isTrue(familyPlanInnerDiv.classList.contains(\"grid-rows-[auto_auto_auto_1fr]\"))\n```\nYour inner div element for the family plan should have the class gap-y-2.\n```js\nconst familyPlanInnerDiv = document.querySelectorAll(\"div\")[7]\nassert.isTrue(familyPlanInnerDiv.classList.contains(\"gap-y-2\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\n--fcc-editable-region--\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5192,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c8a8185485144ebbb453.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "70e419061f270ef3509d669aed29c3d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c7b1f41ee104cf4aaa16.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867c7b1f41ee104cf4aaa16\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nNow, you will use grid to arrange the items inside the wrapper div.\nAdd the classes grid, grid-rows-[1fr_auto], and gap-6 to the wrapper div.\n--hints--\nYour wrapper div element for the family plan should have the class grid.\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"grid\"))\n```\nYour wrapper div element for the family plan should have the class grid-rows-[1fr_auto].\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"grid-rows-[1fr_auto]\"))\n```\nYour wrapper div element for the family plan should have the class gap-6.\n```js\nconst familyPlanWrapper = document.querySelectorAll(\"div\")[6]\nassert.isTrue(familyPlanWrapper.classList.contains(\"gap-6\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4982,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c7b1f41ee104cf4aaa16.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "739ffcd7cc5697b4b4832be50dcccece",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c9fd16b48f2abe22bdaa.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867c9fd16b48f2abe22bdaa\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nThe next item to style is the price text, including the span in it. Give the p element of the price the classes text-4xl, font-bold, and text-gray-900.\n--hints--\nYour p element should have the class text-4xl.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$14.99\"))\nassert.isTrue(targetP.classList.contains(\"text-4xl\"))\n```\nYour p element should have the class font-bold.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$14.99\"))\nassert.isTrue(targetP.classList.contains(\"font-bold\"))\n```\nYour p element should have the class text-gray-900.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$14.99\"))\nassert.isTrue(targetP.classList.contains(\"text-gray-900\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n--fcc-editable-region--\n$14.99/month\n--fcc-editable-region--\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5184,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c9fd16b48f2abe22bdaa.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b2fc174f48b54a05ec7dfcc946eda8d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c93aefc7751d197d1187.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867c93aefc7751d197d1187\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nNow, target the h2 of the plan and assign to it the classes text-lg, font-semibold, and text-indigo-600.\n--hints--\nYour h2 element should have the class text-lg.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst familyH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Family\")\nassert.isTrue(familyH2.classList.contains(\"text-lg\"))\n```\nYour h2 element should have the class font-semibold.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst familyH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Family\")\nassert.isTrue(familyH2.classList.contains(\"font-semibold\"))\n```\nYour h2 element should have the class text-indigo-600.\n```js\nconst h2Els = document.querySelectorAll(\"h2\")\nconst familyH2 = Array.from(h2Els).find(h2 => h2.textContent === \"Family\")\nassert.isTrue(familyH2.classList.contains(\"text-indigo-600\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\n--fcc-editable-region--\nFamily\n--fcc-editable-region--\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5123,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867c93aefc7751d197d1187.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "19c9937a05acea9430e25d4e588c969b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cb70e797d142df4b88e5.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867cb70e797d142df4b88e5\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nNext, assign the classes mt-6, space-y-2, text-sm, and text-gray-700 to the ul element.\n--hints--\nYour ul element should have the class mt-6.\n```js\nconst thirdUl = document.querySelectorAll(\"ul\")[2]\nassert.isTrue(thirdUl.classList.contains(\"mt-6\"))\n```\nYour ul element should have the class space-y-2.\n```js\nconst thirdUl = document.querySelectorAll(\"ul\")[2]\nassert.isTrue(thirdUl.classList.contains(\"space-y-2\"))\n```\nYour ul element should have the class text-sm.\n```js\nconst thirdUl = document.querySelectorAll(\"ul\")[2]\nassert.isTrue(thirdUl.classList.contains(\"text-sm\"))\n```\nYour ul element should have the class text-gray-700.\n```js\nconst thirdUl = document.querySelectorAll(\"ul\")[2]\nassert.isTrue(thirdUl.classList.contains(\"text-gray-700\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n--fcc-editable-region--\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\n--fcc-editable-region--\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5202,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cb70e797d142df4b88e5.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3472c8f0a8985636e365ada899c9a4a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867caa0dbbeb93570ec0069.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867caa0dbbeb93570ec0069\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nAssign the class text-gray-600 to the paragraph under the price text.\n--hints--\nYour p element should have the class text-gray-600.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.trim() === \"Enjoy all of the features with a plan for up to 6 family members.\")\nassert.equal(targetP.className, \"text-gray-600\")\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\n--fcc-editable-region--\nEnjoy all of the features with a plan for up to 6 family members.\n--fcc-editable-region--\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4755,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867caa0dbbeb93570ec0069.md",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ed7234e7083b07f1570cb3e158bc5891",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667e17e51bbf62bc6e1737.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68667e17e51bbf62bc6e1737\ntitle: Step 39\nchallengeType: 0\ndashedName: step-39\n--description--\nNow you should style the CTA to make it look more like a button For the background and foreground colors, assign it the classes bg-gradient-to-r, from-fuchsia-500, to-indigo-600, text-white, hover:from-fuchsia-600, and hover:to-indigo-700 Also assign it the classes rounded-md and block --hints--\nYour anchor element should have the class bg-gradient-to-r ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList contains(\"bg-gradient-to-r\"))\n```\nYour anchor element should have the class from-fuchsia-500 ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList contains(\"from-fuchsia-500\"))\n```\nYour anchor element should have the class to-indigo-600 ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList contains(\"to-indigo-600\"))\n```\nYour anchor element should have the class text-white ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList contains(\"text-white\"))\n```\nYour anchor element should have the class hover:from-fuchsia-600 ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList contains(\"hover:from-fuchsia-600\"))\n```\nYour anchor element should have the class hover:to-indigo-700 ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList contains(\"hover:to-indigo-700\"))\n```\nYour anchor element should have the class rounded-md ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList contains(\"rounded-md\"))\n```\nYour anchor element should have the class block ```js\nconst premiumATag = document querySelectorAll(\"a\")[1]\nassert isTrue(premiumATag classList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667e17e51bbf62bc6e1737.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "06e59d4a0ad8ff480196fd2924b0e327",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667e17e51bbf62bc6e1737.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "contains(\"text-white\")) ``` Your anchor element should have the class hover:from-fuchsia-600 ```js const premiumATag = document querySelectorAll(\"a\")[1] assert isTrue(premiumATag classList contains(\"hover:from-fuchsia-600\")) ``` Your anchor element should have the class hover:to-indigo-700 ```js const premiumATag = document querySelectorAll(\"a\")[1] assert isTrue(premiumATag classList contains(\"hover:to-indigo-700\")) ``` Your anchor element should have the class rounded-md ```js const premiumATag = document querySelectorAll(\"a\")[1] assert isTrue(premiumATag classList contains(\"rounded-md\")) ``` Your anchor element should have the class block ```js const premiumATag = document querySelectorAll(\"a\")[1] assert isTrue(premiumATag classListcontains(\"block\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads ✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9 99/month\nEnjoy the full music experience with unlimited access and\ndownloads ✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\n--fcc-editable-region--\nGo Premium\n--fcc-editable-region--\nFamily\n$14 99/month\nEnjoy all of the features with a plan for up to 6 family members ✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68667e17e51bbf62bc6e1737.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a4a7682a6701c81c7ad60e039ef5e2b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cbfbbb4a9f4bc73b01e6.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867cbfbbb4a9f4bc73b01e6\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nThe markers of the list items need to be spaced out a bit. So, give each span in the list items the classes text-green-700 and mr-2.\nAlso, add the aria-hidden attribute to each of the span elements.\n--hints--\nYour span elements should have the class text-green-700.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst familyPlanSpans = [spanEls[5], spanEls[6], spanEls[7], spanEls[8]]\nfamilyPlanSpans.forEach(span => {\nassert.isTrue(span.classList.contains(\"text-green-700\"))\n})\n```\nYour span elements should have the class mr-2.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst familyPlanSpans = [spanEls[5], spanEls[6], spanEls[7], spanEls[8]]\nfamilyPlanSpans.forEach(span => {\nassert.isTrue(span.classList.contains(\"mr-2\"))\n})\n```\nYour span elements should have the aria-hidden attribute.\n```js\nconst spanEls = document.querySelectorAll(\"ul li span\")\nconst familyPlanSpans = [spanEls[5], spanEls[6], spanEls[7], spanEls[8]]\nfamilyPlanSpans.forEach(span => {\nassert.isTrue(span.hasAttribute(\"aria-hidden\"))\n})\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14.99/month\nEnjoy all of the features with a plan for up to 6 family members.\n--fcc-editable-region--\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\n--fcc-editable-region--\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cbfbbb4a9f4bc73b01e6.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "afd153b4fcea6d034b20cc52f157cdbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68755a4d49de76991ec3763d.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 68755a4d49de76991ec3763d\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nNow, assign the span inside the p element the classes text-base, font-medium, and text-gray-500.\n--hints--\nThe span inside your p element should have the class text-base.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$14.99\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"text-base\"))\n```\nThe span inside your p element should have the class font-medium.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$14.99\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"font-medium\"))\n```\nThe span inside your p element should have the class text-gray-500.\n```js\nconst PEls = document.querySelectorAll(\"p\")\nconst targetP = Array.from(PEls).find(p => p.textContent.startsWith(\"$14.99\"))\nconst durationSpan = targetP.querySelector(\"span\")\nassert.isTrue(durationSpan.classList.contains(\"text-gray-500\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads.\n✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9.99/month\nEnjoy the full music experience with unlimited access and\ndownloads.\n✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n--fcc-editable-region--\n$14.99/month\n--fcc-editable-region--\nEnjoy all of the features with a plan for up to 6 family members.\n✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\68755a4d49de76991ec3763d.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f9a7e47413757eeb98302013a277b0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b102ee0bdbad34a9f85ba0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b102ee0bdbad34a9f85ba0\ntitle: Step 1\nchallengeType: 1\ndashedName: step-1\n--description--\nIn this workshop, you are going to continue learning about strings by building a Teacher Chatbot.\nTo begin, add a console statement, with the message of \"Hi there!\".\n--hints--\nYou should have a console statement.\njs\nassert.match(code, /console\\.log(.*)/);\nYour console statement should output the message \"Hi there!\".\njs\nassert.match(code, /console\\.log\\((['\"])(Hi\\s+there!)\\1\\)/);\n--seed--\n--seed-contents--\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b102ee0bdbad34a9f85ba0.md",
      "source_type": "git_repo"
    },
    "token_count": 162,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f0ae06a122c855c3105561459d8856f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b5928b86e907fdfbf34e56.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b5928b86e907fdfbf34e56\ntitle: Step 2\nchallengeType: 1\ndashedName: step-2\n--description--\nNow it is time to set the bot's name.\nCreate a variable called botName and assign it the string value of \"teacherBot\".\n--hints--\nYou should have a variable called botName.\njs\nassert.isNotNull(botName);\nYour botName variable should be a string.\njs\nassert.isString(botName);\nYour botName variable should have the value of \"teacherBot\".\njs\nassert.strictEqual(botName, \"teacherBot\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b5928b86e907fdfbf34e56.md",
      "source_type": "git_repo"
    },
    "token_count": 159,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "020b91c47c3b0aff2c894255e5d6e7e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b59829dba144ff1351220f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b59829dba144ff1351220f\ntitle: Step 3\nchallengeType: 1\ndashedName: step-3\n--description--\nNow it is time to create a greeting using the botName variable.\nIn the previous lectures, you learned how to concatenate strings using template literals like this:\n```js\nconst name = \"John\";\n// \"Hello, John!\"\nHello, ${name}!;\n```\nStart by creating a variable called greeting.\nNext, using template literal syntax, assign a string that says My name is, followed by the botName variable, and ending with a period (.).\nFinally, log the greeting variable to the console.\n--hints--\nYou should have a variable called greeting.\njs\nassert.isNotNull(greeting);\nYou should assign a string to your greeting variable.\njs\nassert.isString(greeting);\nYou should use template literals to concatenate the string My name is with the botName variable followed by a period (.).\njs\nassert.equal(greeting, \"My name is teacherBot.\");\nYou should have a console statement that logs the greeting variable to the console.\njs\nassert.match(code, /console\\.log\\(.*greeting.*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1281,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b59829dba144ff1351220f.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5267a61aa45b2045c3d9dc9d189c473",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b59b12a745e10011158f7b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b59b12a745e10011158f7b\ntitle: Step 4\nchallengeType: 1\ndashedName: step-4\n--description--\nThe next step is to create a few more variables that will be used in future bot messages.\nCreate a variable called subject and assign it the string value \"JavaScript\".\nThen create a variable called topic and assign it the string value \"strings\".\n--hints--\nYou should have a variable called subject.\njs\nassert.isNotNull(subject);\nYou should assign a string to your subject variable.\njs\nassert.isString(subject);\nYou should assign the string \"JavaScript\" to your subject variable.\njs\nassert.equal(subject, \"JavaScript\");\nYou should have a variable called topic.\njs\nassert.isNotNull(topic);\nYou should assign a string to your topic variable.\njs\nassert.isString(topic);\nYou should assign the string \"strings\" to your topic variable.\njs\nassert.equal(topic, \"strings\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1173,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b59b12a745e10011158f7b.md",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eca8eab07fa31ce82e71411e93d41ba9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b59be6ab830800c4df9146.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b59be6ab830800c4df9146\ntitle: Step 5\nchallengeType: 1\ndashedName: step-5\n--description--\nNow, it's time to use the variables you created in the previous step.\nIn the lectures, you learned how to work with template literals like this:\n```js\nconst name = \"John\";\nconst age = 30;\n// My name is John and I am 30 years old.\nMy name is ${name} and I am ${age} years old.;\n```\nStart by creating a sentence variable.\nUsing template literal syntax, assign the string Today, you will learn about [topic variable goes here] in [subject variable goes here]. to the sentence variable.\nYou will replace the [topic variable goes here] and [subject variable goes here] placeholders with the topic and subject variables and ${} syntax.\nFinally, log the sentence variable to the console.\n--hints--\nYou should have a sentence variable.\njs\nassert.isNotNull(sentence);\nYour sentence variable should be a string.\njs\nassert.isString(sentence);\nYou should use template literal syntax to assign the string Today, you will learn about [topic variable goes here] in [subject variable goes here]. to the sentence variable. Refer to the example if you need help.\njs\nassert.match(code, /Today,\\s*you\\s+will\\s+learn\\s+about\\s+\\$\\{topic\\}\\s+in\\s+\\$\\{subject\\}\\./);\nYou should log the sentence variable to the console.\njs\nassert.match(code,/console\\.log\\(\\s*sentence\\s*\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1713,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b59be6ab830800c4df9146.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3e3ad0a472dd69b4e10d947314d1eb25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6d482bbb9e12f2e5ee1ae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6d482bbb9e12f2e5ee1ae\ntitle: Step 6\nchallengeType: 1\ndashedName: step-6\n--description--\nFor this next portion of the project, the bot will teach working with the string length property.\nStart by creating a new variable called strLengthIntro.\nThen using template literal syntax, assign the string Here is an example of using the length property on the word [subject]. to the strLengthIntro variable.\nReplace [subject] with the subject variable like you did earlier.\nFinally, log the strLengthIntro variable to the console.\n--hints--\nYou should have a variable called strLengthIntro.\njs\nassert.isNotNull(strLengthIntro);\nYour strLengthIntro variable should be a string.\njs\nassert.isString(strLengthIntro);\nYou should use template literal syntax to assign the string Here is an example of using the length property on the word [subject goes here]. to the strLengthIntro variable.\njs\nassert.match(code,/`Here\\s+is\\s+an\\s+example\\s+of\\s+using\\s+the\\s+length\\s+property\\s+on\\s+the\\s+word\\s+\\$\\{subject\\}\\.`/);\nYou should log the strLengthIntro variable to the console.\njs\nassert.match(code,/console\\.log\\(\\s*strLengthIntro\\s*\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1585,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6d482bbb9e12f2e5ee1ae.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f22f726a6988093763a24202e2dc7ebe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6e39031393e30f2c48d0f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6e39031393e30f2c48d0f\ntitle: Step 7\nchallengeType: 1\ndashedName: step-7\n--description--\nTo get the length of a string, you can use the length property. This property returns the number of characters in a string.\nHere is an example:\n```js\nconst greeting = \"Hello, world!\";\n// Output: 13\nconsole.log(greeting.length);\n```\nStart by using the length property to get the length of the subject string and log that value to the console.\n--hints--\nYou should use the length property to get the length of the subject string.\njs\nassert.match(code, /subject\\.length/);\nYou should log the length of the subject string to the console.\njs\nassert.match(code, /console\\.log\\(\\s*subject\\.length\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6e39031393e30f2c48d0f.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6135a6ef7eedf3f7c152cc9c55b08758",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6e62423e8a031d6c1f03d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6e62423e8a031d6c1f03d\ntitle: Step 8\nchallengeType: 1\ndashedName: step-8\n--description--\nNow it is time to get the length of the topic string.\nYou can use template literals inside console statements like this:\njs\nconst developer = \"Jessica\";\nconsole.log(`Hello, my name is ${developer}.`);\nStart by outputting the message Here is an example of using the length property on the word [topic]. to the console.\nRemember to replace [topic] with the topic variable, and use proper template literal syntax as you did in the previous steps.\nThen, add a second console.log statement that outputs the length of the topic string to the console.\n--hints--\nYou should use template literal syntax to output the message Here is an example of using the length property on the word [topic]. to the console.\njs\nassert.match(code, /console\\.log\\(`Here\\s+is\\s+an\\s+example\\s+of\\s+using\\s+the\\s+length\\s+property\\s+on\\s+the\\s+word\\s+\\$\\{topic\\}\\.`\\)/);\nYou should have a second console statement to output the length of the topic variable to the console.\njs\nassert.match(code, /console\\.log\\(\\s*topic\\.length\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1700,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6e62423e8a031d6c1f03d.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ae971a13e8319a73cacf346d46a177ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cca6236f87573044a39c.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "id: 6867cca6236f87573044a39c\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nThe last thing you will do is to style the CTA button for the family plan Give it the classes block, rounded-md, bg-indigo-600, px-4, py-2, text-center, font-semibold, text-white, and hover:bg-indigo-700 With that, your Tailwind pricing component workshop is complete --hints--\nYour anchor element should have the class bg-indigo-600 ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"bg-indigo-600\"))\n```\nYour anchor element should have the class px-4 ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"px-4\"))\n```\nYour anchor element should have the class py-2 ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"py-2\"))\n```\nYour anchor element should have the class text-center ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"text-center\"))\n```\nYour anchor element should have the class text-white ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"text-white\"))\n```\nYour anchor element should have the class font-semibold ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"font-semibold\"))\n```\nYour anchor element should have the class hover:bg-indigo-700 ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"hover:bg-indigo-700\"))\n```\nYour anchor element should have the class rounded-md ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList contains(\"rounded-md\"))\n```\nYour anchor element should have the class block ```js\nconst familyATag = document querySelectorAll(\"a\")[2]\nassert isTrue(familyATag classList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11541,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cca6236f87573044a39c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c0a60affd7b2a86fcb863c0c1261442c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cca6236f87573044a39c.md",
    "source_type": "git_repo",
    "title": "Music App Pricing",
    "content": "contains(\"text-white\")) ``` Your anchor element should have the class font-semibold ```js const familyATag = document querySelectorAll(\"a\")[2] assert isTrue(familyATag classList contains(\"font-semibold\")) ``` Your anchor element should have the class hover:bg-indigo-700 ```js const familyATag = document querySelectorAll(\"a\")[2] assert isTrue(familyATag classList contains(\"hover:bg-indigo-700\")) ``` Your anchor element should have the class rounded-md ```js const familyATag = document querySelectorAll(\"a\")[2] assert isTrue(familyATag classList contains(\"rounded-md\")) ``` Your anchor element should have the class block ```js const familyATag = document querySelectorAll(\"a\")[2] assert isTrue(familyATag classListcontains(\"block\"))\n```\n--seed--\n--seed-contents--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads ✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9 99/month\nEnjoy the full music experience with unlimited access and\ndownloads ✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14 99/month\nEnjoy all of the features with a plan for up to 6 family members ✓All Premium features\n✓Up to 6 accounts\n✓Individual playlists &\nlibraries\n✓Family Mix playlists\n--fcc-editable-region--\nStart Family Plan\n--fcc-editable-region--\n```\n--solutions--\n```html\nMusic App Pricing\nChoose your listening plan\nListener\n$0/month\nStart exploring millions of songs with basic features and ads ✓Ad-supported streaming\n✓Curated playlists\nStart listening\nMost Popular\nPremium\n$9 99/month\nEnjoy the full music experience with unlimited access and\ndownloads ✓Ad-free listening\n✓Offline playback\n✓Unlimited skips\nGo Premium\nFamily\n$14 99/month\nEnjoy all of the features with a plan for up to 6 family members ✓All\nPremium features\n✓Up\nto 6 accounts\n✓Individual playlists & libraries\n✓Family Mix playlists\nStart Family Plan\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11541,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-tailwind-pricing-component\\6867cca6236f87573044a39c.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ade00274220ae9f68a3c61d792a4f424",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6f586767a1534f3097353.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6f586767a1534f3097353\ntitle: Step 11\nchallengeType: 1\ndashedName: step-11\n--description--\nNow it is time to access the second letter of the subject variable.\nStart by adding a console statement that outputs the message Here is an example of accessing the second letter in the word [subject]. Remember to replace [subject] with the actual value of the subject variable and use correct template literal syntax.\nThen add another console statement that outputs the second letter of the subject variable using bracket notation and the correct index number.\n--hints--\nYour console statement should output the message Here is an example of accessing the second letter in the word [subject]..\njs\nassert.match(code, /console\\.log\\(`Here\\s+is\\s+an\\s+example\\s+of\\s+accessing\\s+the\\s+second\\s+letter\\s+in\\s+the\\s+word\\s+\\$\\{subject\\}\\.`\\);?/);\nYou should have another console statement that outputs the second letter of the subject variable using bracket notation index 1.\njs\nassert.match(code, /console\\.log\\(subject\\[1\\]\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\nconsole.log(Here is an example of accessing the first letter in the word ${subject}.);\nconsole.log(subject[0]);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1845,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6f586767a1534f3097353.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e1f76135b43a0fa6b641eca84e3a5341",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6e80d6c3f0b329c360283.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6e80d6c3f0b329c360283\ntitle: Step 9\nchallengeType: 1\ndashedName: step-9\n--description--\nThe next part of this workshop is to review accessing characters from a string.\nStart by outputting the message Here is an example of accessing the first letter in the word [subject]. to the console.\nRemember to replace [subject] with the subject variable and use proper template literal syntax like you did in the previous steps.\n--hints--\nYour console statement should output the message Here is an example of accessing the first letter in the word [subject]..\njs\nassert.match(code, /console\\.log\\(`Here\\s+is\\s+an\\s+example\\s+of\\s+accessing\\s+the\\s+first\\s+letter\\s+in\\s+the\\s+word\\s+\\${subject}\\.`\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6e80d6c3f0b329c360283.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "790fbbad01405b7ad7972635b05e6632",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6efddeca35833cd6f0b03.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6efddeca35833cd6f0b03\ntitle: Step 10\nchallengeType: 1\ndashedName: step-10\n--description--\nIn the previous lectures, you learned how to access characters in a string like this:\njs\nconst firstName = \"Jessica\";\n// returns \"J\"\nfirstName[0];\nRemember that index numbers start at 0, so the first letter in a string will always be at index 0.\nStart by adding another console statement.\nInside the console statement, output the first letter of the subject variable using bracket notation and the correct index number.\n--hints--\nYour console statement should output the first letter of the subject variable using bracket notation and index 0.\njs\nassert.match(code, /console\\.log\\(subject\\[0\\]\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\nconsole.log(Here is an example of accessing the first letter in the word ${subject}.);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6efddeca35833cd6f0b03.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e36ced5dbe439c5a2c8d1ea728931240",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6f80fca500635d1e8af8d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6f80fca500635d1e8af8d\ntitle: Step 12\nchallengeType: 1\ndashedName: step-12\n--description--\nNow it is time to access the last character of a string.\nStart by adding another console statement that outputs the message Here is an example of accessing the last letter in the word [subject].\nRemember to replace [subject] with the actual value of the subject variable and use correct template literal syntax.\n--hints--\nYour console statement should output the message Here is an example of accessing the last letter in the word [subject]. Remember to use the correct template literal syntax.\njs\nassert.match(code, /console\\.log\\(`Here\\s+is\\s+an\\s+example\\s+of\\s+accessing\\s+the\\s+last\\s+letter\\s+in\\s+the\\s+word\\s+\\${subject}\\.`\\);?/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\nconsole.log(Here is an example of accessing the first letter in the word ${subject}.);\nconsole.log(subject[0]);\nconsole.log(Here is an example of accessing the second letter in the word ${subject}.);\nconsole.log(subject[1]);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6f80fca500635d1e8af8d.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "13c7d8a540863f4857f28cd7581e53eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6fdb76441c738719039fa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6fdb76441c738719039fa\ntitle: Step 13\nchallengeType: 1\ndashedName: step-13\n--description--\nIn the lectures, you learned how to access the last character in a string like this:\n```js\nconst firstName = \"Jessica\";\n// returns \"a\"\nfirstName[firstName.length - 1];\n```\nstring.length - 1 will always give you the last index number for a string.\nCreate a new variable called lastCharacter and assign it the value of the last character in the subject variable.\nThen, log the value of the lastCharacter variable to the console.\n--hints--\nYou should have a variable called lastCharacter.\njs\nassert.isNotNull(lastCharacter);\nYou should assign the value of the last character in the subject variable to the lastCharacter variable. Refer to the example if you need help.\njs\nassert.strictEqual(lastCharacter, subject[subject.length - 1]);\nYou should log the value of the lastCharacter variable to the console.\njs\nassert.match(code, /console\\.log\\(lastCharacter\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\nconsole.log(Here is an example of accessing the first letter in the word ${subject}.);\nconsole.log(subject[0]);\nconsole.log(Here is an example of accessing the second letter in the word ${subject}.);\nconsole.log(subject[1]);\nconsole.log(Here is an example of accessing the last letter in the word ${subject}.);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6fdb76441c738719039fa.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ddc4cad8882bea1a5e3035982bde918a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6ffb42b88e33943788abf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b6ffb42b88e33943788abf\ntitle: Step 14\nchallengeType: 1\ndashedName: step-14\n--description--\nFor the last part of the workshop, you will review how to find the index position of substring in a string. Remember that a substring is a part of a string.\nStart by creating a variable called learningIsFunSentence and assign it the string value of \"Learning is fun.\".\n--hints--\nYou should have a variable called learningIsFunSentence.\njs\nassert.isNotNull(learningIsFunSentence);\nYour learningIsFunSentence should hold the value of a string.\njs\nassert.isString(learningIsFunSentence);\nYou should assign the value of \"Learning is fun.\" to the variable learningIsFunSentence.\njs\nassert.equal(learningIsFunSentence, \"Learning is fun.\");\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\nconsole.log(Here is an example of accessing the first letter in the word ${subject}.);\nconsole.log(subject[0]);\nconsole.log(Here is an example of accessing the second letter in the word ${subject}.);\nconsole.log(subject[1]);\nconsole.log(Here is an example of accessing the last letter in the word ${subject}.);\nconst lastCharacter = subject[subject.length - 1];\nconsole.log(lastCharacter);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1830,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b6ffb42b88e33943788abf.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "99cb23e50689b724ce5ae29adff6cbf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7049b7709ea3a9547c79d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b7049b7709ea3a9547c79d\ntitle: Step 15\nchallengeType: 1\ndashedName: step-15\n--description--\nThe next step is to add another console statement that outputs the string \"Here are examples of finding the positions of substrings in the sentence.\".\n--hints--\nYou should have a console statement that outputs the string \"Here are examples of finding the positions of substrings in the sentence.\".\njs\nassert.match(code, /console\\.log\\((['\"])(Here\\s+are\\s+examples\\s+of\\s+finding\\s+the\\s+positions\\s+of\\s+substrings\\s+in\\s+the\\s+sentence\\.)\\1\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconst strLength = subject.length;\nconsole.log(strLength);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\nconsole.log(Here is an example of accessing the first letter in the word ${subject}.);\nconsole.log(subject[0]);\nconsole.log(Here is an example of accessing the second letter in the word ${subject}.);\nconsole.log(subject[1]);\nconsole.log(Here is an example of accessing the last letter in the word ${subject}.);\nconst lastCharacter = subject[subject.length - 1];\nconsole.log(lastCharacter);\nconst learningIsFunSentence = \"Learning is fun.\";\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1700,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7049b7709ea3a9547c79d.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4e42ed983f52c3420c9b95a1cc9b9c13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b70b8a611cbf3bcc5c6c5f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b70b8a611cbf3bcc5c6c5f\ntitle: Step 16\nchallengeType: 1\ndashedName: step-16\n--description--\nIn the previous lectures, you learned how to work with the indexOf method like this:\n```js\nconst sentence = \"I love to learn.\";\n// returns index 2\nconsole.log(sentence.indexOf(\"love\"));\n// returns -1\nconsole.log(sentence.indexOf(\"hate\"));\n```\nRemember that the indexOf method returns the index position of the first occurrence of a substring in a string. If the substring is not found, it returns -1.\nAdd a new console statement that outputs the result of using the indexOf method on the learningIsFunSentence variable to find the index position of the substring \"Learning\".\n--hints--\nYour console should use the indexOf method on the learningIsFunSentence variable to find the index position of the substring \"Learning\".\njs\nassert.match(code, /console\\.log\\(\\s*learningIsFunSentence\\.indexOf\\(\\s*(['\"])(Learning)\\1\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole.log(\"Hi there!\");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName}.;\nconsole.log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject}.;\nconsole.log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject}.;\nconsole.log(strLengthIntro);\nconsole.log(subject.length);\nconsole.log(Here is an example of using the length property on the word ${topic}.);\nconsole.log(topic.length);\nconsole.log(Here is an example of accessing the first letter in the word ${subject}.);\nconsole.log(subject[0]);\nconsole.log(Here is an example of accessing the second letter in the word ${subject}.);\nconsole.log(subject[1]);\nconsole.log(Here is an example of accessing the last letter in the word ${subject}.);\nconst lastCharacter = subject[subject.length - 1];\nconsole.log(lastCharacter);\nconst learningIsFunSentence = \"Learning is fun.\";\nconsole.log(\"Here are examples of finding the positions of substrings in the sentence.\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2163,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b70b8a611cbf3bcc5c6c5f.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a11dd15ea7da7077734e2fc57f9d8cc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7137348cfb53fd3ec6c73.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b7137348cfb53fd3ec6c73\ntitle: Step 17\nchallengeType: 1\ndashedName: step-17\n--description--\nNext, you will add a new console statement that outputs the result of using the indexOf method on the learningIsFunSentence variable to find the position of the substring \"fun\" Below that console statement, add a new console statement that outputs the result of using the indexOf method to find the position of the substring \"learning\" Take note of what the last console statement outputs --hints--\nYour console should output the index position of the substring \"fun\" from the learningIsFunSentence variable js\nassert match(code, /console\\ log\\(\\s*learningIsFunSentence\\ indexOf\\(\\s*(['\"])(fun)\\1\\s*\\)\\s*\\)/);\nYour second console statement should output the index position of the substring \"learning\" from the learningIsFunSentence variable js\nassert match(code, /console\\ log\\(\\s*learningIsFunSentence\\ indexOf\\(\\s*(['\"])(learning)\\1\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole log(\"Hi there \");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName} ;\nconsole log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject} ;\nconsole log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject} ;\nconsole log(strLengthIntro);\nconsole log(subject length);\nconsole log(Here is an example of using the length property on the word ${topic} );\nconsole log(topic length);\nconsole log(Here is an example of accessing the first letter in the word ${subject} );\nconsole log(subject[0]);\nconsole log(Here is an example of accessing the second letter in the word ${subject} );\nconsole log(subject[1]);\nconsole log(Here is an example of accessing the last letter in the word ${subject} );\nconst lastCharacter = subject[subject length - 1];\nconsole log(lastCharacter);\nconst learningIsFunSentence = \"Learning is fun \";\nconsole log(\"Here are examples of finding the positions of substrings in the sentence \");\nconsole log(learningIsFunSentence",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7137348cfb53fd3ec6c73.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "88671936d450a009586094b7c0638be5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7137348cfb53fd3ec6c73.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of accessing the first letter in the word ${subject} ); console log(subject[0]); console log(Here is an example of accessing the second letter in the word ${subject} ); console log(subject[1]); console log(Here is an example of accessing the last letter in the word ${subject} ); const lastCharacter = subject[subject length - 1]; console log(lastCharacter); const learningIsFunSentence = \"Learning is fun \"; console log(\"Here are examples of finding the positions of substrings in the sentence \"); console log(learningIsFunSentenceindexOf(\"Learning\"));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7137348cfb53fd3ec6c73.md",
      "source_type": "git_repo"
    },
    "token_count": 131,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "892b8737e24baf8edba5bcd4102573df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7142e588c4a407a51cdb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b7142e588c4a407a51cdb6\ntitle: Step 18\nchallengeType: 1\ndashedName: step-18\n--description--\nThe last console statement outputs -1 because the substring \"learning\" is not found in the \"Learning is fun sentence The indexOf method is case-sensitive So the substring \"learning\" is not the same as the substring \"Learning\" Now that you understand how some common string methods work, you can complete the workshop by logging one last message to the console Add a console statement that outputs the message \"I hope you enjoyed learning today \" to the console And with that final message, you have completed the workshop --hints--\nYour console statement should output the message \"I hope you enjoyed learning today \" js\nassert match(code, /console\\ log\\(\\s*(['\"])(I\\s+hope\\s+you\\s+enjoyed\\s+learning\\s+today\\ )\\1\\s*\\)/);\n--seed--\n--seed-contents--\n```js\nconsole log(\"Hi there \");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName} ;\nconsole log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject} ;\nconsole log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject} ;\nconsole log(strLengthIntro);\nconsole log(subject length);\nconsole log(Here is an example of using the length property on the word ${topic} );\nconsole log(topic length);\nconsole log(Here is an example of accessing the first letter in the word ${subject} );\nconsole log(subject[0]);\nconsole log(Here is an example of accessing the second letter in the word ${subject} );\nconsole log(subject[1]);\nconsole log(Here is an example of accessing the last letter in the word ${subject} );\nconst lastCharacter = subject[subject length - 1];\nconsole log(lastCharacter);\nconst learningIsFunSentence = \"Learning is fun \";\nconsole log(\"Here are examples of finding the positions of substrings in the sentence \");\nconsole log(learningIsFunSentence indexOf(\"Learning\"));\nconsole log(learningIsFunSentence indexOf(\"fun\"));\nconsole log(learningIsFunSentence indexOf(\"learning\"));\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```js\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3566,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7142e588c4a407a51cdb6.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e309c654d0936c9b99fe3e7bc85bcd8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7142e588c4a407a51cdb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "log(Here is an example of accessing the second letter in the word ${subject} ); console log(subject[1]); console log(Here is an example of accessing the last letter in the word ${subject} ); const lastCharacter = subject[subject length - 1]; console log(lastCharacter); const learningIsFunSentence = \"Learning is fun \"; console log(\"Here are examples of finding the positions of substrings in the sentence \"); console log(learningIsFunSentence indexOf(\"Learning\")); console log(learningIsFunSentence indexOf(\"fun\")); console log(learningIsFunSentence indexOf(\"learning\")); --fcc-editable-region-- --fcc-editable-region-- ``` --solutions-- ```js consolelog(\"Hi there \");\nconst botName = \"teacherBot\";\nconst greeting = My name is ${botName} ;\nconsole log(greeting);\nconst subject = \"JavaScript\";\nconst topic = \"strings\";\nconst sentence = Today, you will learn about ${topic} in ${subject} ;\nconsole log(sentence);\nconst strLengthIntro = Here is an example of using the length property on the word ${subject} ;\nconsole log(strLengthIntro);\nconsole log(subject length);\nconsole log(Here is an example of using the length property on the word ${topic} );\nconsole log(topic length);\nconsole log(Here is an example of accessing the first letter in the word ${subject} );\nconsole log(subject[0]);\nconsole log(Here is an example of accessing the second letter in the word ${subject} );\nconsole log(subject[1]);\nconsole log(Here is an example of accessing the last letter in the word ${subject} );\nconst lastCharacter = subject[subject length - 1];\nconsole log(lastCharacter);\nconst learningIsFunSentence = \"Learning is fun \";\nconsole log(\"Here are examples of finding the positions of substrings in the sentence \");\nconsole log(learningIsFunSentence indexOf(\"Learning\"));\nconsole log(learningIsFunSentence indexOf(\"fun\"));\nconsole log(learningIsFunSentence indexOf(\"learning\"));\nconsole log(\"I hope you enjoyed learning today \");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3566,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-teacher-chatbot\\66b7142e588c4a407a51cdb6.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "80e12789011b4fa3c0fbe64e73794bce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4e4c4ec263b62ae7bf54d\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this project, you will learn how localStorage works in JavaScript by building a Todo app LocalStorage is a web storage feature of JavaScript that lets you persist data by storing the data as a key:value pair The HTML and CSS for this project have been provided for you Take a look at the files to get yourself familiarized with them Begin by accessing the task-form, confirm-close-dialog, and open-task-form-btn elements with the getElementById() method Save them in the variables taskForm, confirmCloseDialog, and openTaskFormBtn --hints--\nYou should use getElementById() to access the task-form element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)task\\-form\\1\\s*\\)\\s*; /)\nYou should assign the task-form element to the variable taskForm Don't forget to use const to declare the variable js\nassert match(code, /const\\s+taskForm\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)task\\-form\\1\\s*\\)\\s*; /)\nYou should use getElementById() to access the confirm-close-dialog element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)confirm\\-close\\-dialog\\1\\s*\\)\\s*; /)\nYou should assign the confirm-close-dialog element to the variable confirmCloseDialog Don't forget to use const to declare the variable js\nassert match(code, /const\\s+confirmCloseDialog\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)confirm\\-close\\-dialog\\1\\s*\\)\\s*; /)\nYou should use getElementById() to access the open-task-form-btn element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)open\\-task\\-form\\-btn\\1\\s*\\)\\s*; /)\nYou should assign the open-task-form-btn element to the variable openTaskFormBtn Don't forget to use const to declare the variable js\nassert match(code, /const\\s+openTaskFormBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)open\\-task\\-form\\-btn\\1\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b4317bea9cfbb272bf2e28b40a3c661c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "getElementById() to access the confirm-close-dialog element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)confirm\\-close\\-dialog\\1\\s*\\)\\s*; /) You should assign the confirm-close-dialog element to the variable confirmCloseDialog Don't forget to use const to declare the variable js assert match(code, /const\\s+confirmCloseDialog\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)confirm\\-close\\-dialog\\1\\s*\\)\\s*; /) You should use getElementById() to access the open-task-form-btn element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)open\\-task\\-form\\-btn\\1\\s*\\)\\s*; /) You should assign the open-task-form-btn element to the variable openTaskFormBtn Don't forget to use const to declare the variable js assert match(code, /const\\s+openTaskFormBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)open\\-task\\-form\\-btn\\1\\s*\\)\\s*;/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "098e666ee4539f4400e4ff7b09a685ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "7eb1fec5a7e619fab7258f9027157a1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e4c4ec263b62ae7bf54d.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "88dbf40035ce04b2f2f379f91f20aeb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "id: 680900675ae3d54ee19590d3\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nDid you notice that you can submit the form without filling in the inputs To stop that, add the disabled attribute to disable the submit button if heroName, realName, or powerSource are falsy, or if the length of powers is 0 Now, the button will be disabled if something isn't filled in Fill in the form with your superhero information and submit it to join the league With that, you superhero application form is complete --hints--\nYou should not modify the existing content of the button js\nassert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2/)\nYour button element should have a disabled property js\nassert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/)\nYou should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js\nassert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 65
  },
  {
    "id": "ba5f739c2031b6f6f5d6950677f5614a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "You should not modify the existing content of the button js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2/) Your button element should have a disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 65
  },
  {
    "id": "366241c120212b856153764bf17da284",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "Your button element should have a disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 65
  },
  {
    "id": "ad61c41543b71550df2e9c9e665faddb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 65
  },
  {
    "id": "4f77f7d2e82353165231cbb14d5b2696",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 514,
    "chunk_index": 4,
    "total_chunks": 65
  },
  {
    "id": "0c98ddd1cb39c3e0483c7462a4e543de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 517,
    "chunk_index": 5,
    "total_chunks": 65
  },
  {
    "id": "ca3fde44dada2af582eb7da78f7af8c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 525,
    "chunk_index": 6,
    "total_chunks": 65
  },
  {
    "id": "af96424f813d5225f4d95be99c447aca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 533,
    "chunk_index": 7,
    "total_chunks": 65
  },
  {
    "id": "565b37b41b2212189e1382c84cfb84b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 543,
    "chunk_index": 8,
    "total_chunks": 65
  },
  {
    "id": "2cf3c2e677946ecd9f49777efa7f24a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 552,
    "chunk_index": 9,
    "total_chunks": 65
  },
  {
    "id": "df0ea9efe053d520207a825ca9bb6e66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 560,
    "chunk_index": 10,
    "total_chunks": 65
  },
  {
    "id": "b36fe24ef76fdd4956a3d34e90ad3696",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 570,
    "chunk_index": 11,
    "total_chunks": 65
  },
  {
    "id": "468e0d86c87d3af57339be2930d28f12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 12,
    "total_chunks": 65
  },
  {
    "id": "00cbdb58b97f637549d8ab8efed11bfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 587,
    "chunk_index": 13,
    "total_chunks": 65
  },
  {
    "id": "661d7d65a20552b3650007ecae7988da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 595,
    "chunk_index": 14,
    "total_chunks": 65
  },
  {
    "id": "4d214691c00935ec76dba67f48fc5497",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 603,
    "chunk_index": 15,
    "total_chunks": 65
  },
  {
    "id": "63744103bd04a4e40c81a85f3695996c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 16,
    "total_chunks": 65
  },
  {
    "id": "f4e6a916e43739a6284df9af4f4dbae4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 17,
    "total_chunks": 65
  },
  {
    "id": "4af7165b73b13870f5f17c4b36efb97d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 18,
    "total_chunks": 65
  },
  {
    "id": "88b6f42da5b747868e190696f391731b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 640,
    "chunk_index": 19,
    "total_chunks": 65
  },
  {
    "id": "caa21d8bbaa8fb048e6e073347ac06c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 20,
    "total_chunks": 65
  },
  {
    "id": "e08906ec44b9b3fe2535471ecbaf9183",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 657,
    "chunk_index": 21,
    "total_chunks": 65
  },
  {
    "id": "4cc4f61a5149061652a701cfb2680a1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 22,
    "total_chunks": 65
  },
  {
    "id": "90189e6c8cfd9145fb75aa0b6b777dbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 23,
    "total_chunks": 65
  },
  {
    "id": "264693643da168ded8715b40ac40d506",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 24,
    "total_chunks": 65
  },
  {
    "id": "a5c827e2047428ea2469e0761dc2797f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 25,
    "total_chunks": 65
  },
  {
    "id": "f211494668ea2727b6c527b41bc1c71a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 702,
    "chunk_index": 26,
    "total_chunks": 65
  },
  {
    "id": "300ccb33ce8e51759d49a38e6df24f95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 716,
    "chunk_index": 27,
    "total_chunks": 65
  },
  {
    "id": "514856406269e1eacaab3c18256334be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 724,
    "chunk_index": 28,
    "total_chunks": 65
  },
  {
    "id": "dbff62c4ca07e660f45a8ea12409cb2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 729,
    "chunk_index": 29,
    "total_chunks": 65
  },
  {
    "id": "57188f5a1bb6a7470abe0f3d12fb6264",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 743,
    "chunk_index": 30,
    "total_chunks": 65
  },
  {
    "id": "8aff0c75cdaf9e04ddcb51ec81555346",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 751,
    "chunk_index": 31,
    "total_chunks": 65
  },
  {
    "id": "db5bd7bd7589524b7f3db1bf9a6823c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 759,
    "chunk_index": 32,
    "total_chunks": 65
  },
  {
    "id": "045c15dbccbcb8f3f63ef02837adae9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 764,
    "chunk_index": 33,
    "total_chunks": 65
  },
  {
    "id": "0c58f77761ad05272ec769fe49895613",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 778,
    "chunk_index": 34,
    "total_chunks": 65
  },
  {
    "id": "9a63d0d1684310c4ad8e3c027621f95b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 786,
    "chunk_index": 35,
    "total_chunks": 65
  },
  {
    "id": "72d150b4549bdd2c051ce638962f673f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 794,
    "chunk_index": 36,
    "total_chunks": 65
  },
  {
    "id": "c467396519b8315a6cf545e5d10bfe37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 799,
    "chunk_index": 37,
    "total_chunks": 65
  },
  {
    "id": "b7a154c80ef536f4316225b61cf44e21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 813,
    "chunk_index": 38,
    "total_chunks": 65
  },
  {
    "id": "d23f246359cc270caf3387d8e3f8ec58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 821,
    "chunk_index": 39,
    "total_chunks": 65
  },
  {
    "id": "e953d099345cf17b304f72c5021a5da3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 829,
    "chunk_index": 40,
    "total_chunks": 65
  },
  {
    "id": "29f51c9354f1cd816b40ba9c48874572",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 834,
    "chunk_index": 41,
    "total_chunks": 65
  },
  {
    "id": "32220451be9bae5ad24ac24f875e67f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 848,
    "chunk_index": 42,
    "total_chunks": 65
  },
  {
    "id": "fb814b367dc4cb6d944b12082b29b725",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 856,
    "chunk_index": 43,
    "total_chunks": 65
  },
  {
    "id": "c7b321de7df5c76e5d2d5c60302f7ca6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 864,
    "chunk_index": 44,
    "total_chunks": 65
  },
  {
    "id": "322aac2fd482b45a0fb0838593575d48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 869,
    "chunk_index": 45,
    "total_chunks": 65
  },
  {
    "id": "e460e5376a591d7283684a12a306c636",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 883,
    "chunk_index": 46,
    "total_chunks": 65
  },
  {
    "id": "cc7ce15e82046792622b2ef97d64ac64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 891,
    "chunk_index": 47,
    "total_chunks": 65
  },
  {
    "id": "0c6c3031139eab9a9fb2afa07be87862",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 899,
    "chunk_index": 48,
    "total_chunks": 65
  },
  {
    "id": "68e3b244261ba85c51a93a9d5134e01d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 904,
    "chunk_index": 49,
    "total_chunks": 65
  },
  {
    "id": "31d0f1e64723312e56497ffb9a2d5695",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 918,
    "chunk_index": 50,
    "total_chunks": 65
  },
  {
    "id": "6259965a0b280d5a9a9e991e77d8ec76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 926,
    "chunk_index": 51,
    "total_chunks": 65
  },
  {
    "id": "248bf1bfa7b4253ade5c5af66a0fe459",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 934,
    "chunk_index": 52,
    "total_chunks": 65
  },
  {
    "id": "097ee4bb4fb30634a3962bfa66f9c062",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "disabled property js assert match(code, /<\\s*button\\s+className\\s*=\\s*('|\")\\s*submit-btn\\s*\\1\\s*type\\s*=\\s*('|\")\\s*submit\\s*\\2\\s*disabled/) You should disable the button if any of heroName, realName, and powerSource is false, or if the length of powers is 0 js assert match(code, /disabled\\s*=\\s*\\{\\s*( : heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 1027,
    "chunk_index": 53,
    "total_chunks": 65
  },
  {
    "id": "2d97d20c24e86f371cbcc6cd8af81130",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": ": heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/) --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 969,
    "chunk_index": 54,
    "total_chunks": 65
  },
  {
    "id": "7e3502bd104ab33bb95531d5dcac77eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/) --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; }form-wrap h2,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 833,
    "chunk_index": 55,
    "total_chunks": 65
  },
  {
    "id": "26002cc962d1c643bb9e06efb846d28e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "length\\s*===\\s*0\\s*\\|\\|\\s* realName\\s*\\|\\|\\s* powerSource| heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/) --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; }form-wrap h2,form-wrap p {\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 833,
    "chunk_index": 56,
    "total_chunks": 65
  },
  {
    "id": "deee14b53d7b1ecbb1cc02f84b8d15bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "powerSource\\s*\\|\\|\\s*realName| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/) --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; }form-wrap h2,form-wrap p { text-align: center; }form-wrap p {\nposition: relative;\ntop: -18px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 799,
    "chunk_index": 57,
    "total_chunks": 65
  },
  {
    "id": "bdcfa57a33d7e0f53fb457c7ccdc4e60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "length\\s*===\\s*0\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0| realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/) --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; }form-wrap h2,form-wrap p { text-align: center; }form-wrap p { position: relative; top: -18px; }section {\ndisplay: flex;\nmargin-bottom: 30px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 749,
    "chunk_index": 58,
    "total_chunks": 65
  },
  {
    "id": "c78d1d5790453d30ce272adf5c7c2093",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "realName\\s*\\|\\|\\s* powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s* heroName| realName\\s*\\|\\|\\s*powers\\ length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/) --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; }form-wrap h2,form-wrap p { text-align: center; }form-wrap p { position: relative; top: -18px; }section { display: flex; margin-bottom: 30px; }column {\nflex-direction: column;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 705,
    "chunk_index": 59,
    "total_chunks": 65
  },
  {
    "id": "c28bf3e04797c109d1b32df50d0a4a74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "length\\s*===\\s*0\\s*\\|\\|\\s* heroName\\s*\\|\\|\\s* powerSource| realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0|powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powerSource\\s*\\|\\|\\s*powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*powerSource|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*heroName\\s*\\|\\|\\s*realName|powers\\length\\s*===\\s*0\\s*\\|\\|\\s*powerSource\\s*\\|\\|\\s*realName\\s*\\|\\|\\s*heroName)\\s*\\}/) --seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; }form-wrap h2,form-wrap p { text-align: center; }form-wrap p { position: relative; top: -18px; }section { display: flex; margin-bottom: 30px; }column { flex-direction: column; }submit-wrap {\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 60,
    "total_chunks": 65
  },
  {
    "id": "915bf657e1a6041b47eeb72a7af258c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "--seed-- --seed-contents-- ```html Superhero Application Form ``` ```css body { margin: 0; padding: 0; min-height: 100vh; font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; background: linear-gradient(30deg, #ff9999 50%, #6699ff 50%) }form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; }form-wrap h2,form-wrap p { text-align: center; }form-wrap p { position: relative; top: -18px; }section { display: flex; margin-bottom: 30px; }column { flex-direction: column; }submit-wrap { text-align: center; }submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n} submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nconst handlePowersChange = e => {\nconst { value, checked } = e target;\nsetPowers(checked [ powers, value] : powers filter(p => p == value));\n}\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n{powersOptions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 61,
    "total_chunks": 65
  },
  {
    "id": "4ac1198bd55673f984daab3e504ef0c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "[powers, setPowers] = useState([]); const handlePowersChange = e => { const { value, checked } = e target; setPowers(checked [ powers, value] : powers filter(p => p == value)); } return ( Superhero Application Form Please complete all fields Hero Name setHeroName(e target value)} /> Real Name setRealName(e target value)} /> How did you get your powers setPowerSource(e target value)}> Select one {powerSourceOptions map(source => ( {source} ))} List your powers (select all that apply): {powersOptionsmap(power => (\n<label key={power}>\n<input\ntype='checkbox'\nvalue={power}\nchecked={powers includes(power)}\nonChange={handlePowersChange}\n/>\n<span>{power}</span>\n</label>\n))}\n</label>\n--fcc-editable-region--\n<button\nclassName='submit-btn'\ntype='submit'\n>\nJoin the League\n</button>\n--fcc-editable-region--\n)\n};\n```\n--solutions--\n```html\nSuperhero Application Form\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nmin-height: 100vh;\nfont-family: Arial, sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: linear-gradient(30deg, #ff9999 50%, #6699ff 50%)\n} form-wrap {\nbackground-color: white;\nwidth: 400px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px black;\n} form-wrap h2, form-wrap p {\ntext-align: center;\n} form-wrap p {\nposition: relative;\ntop: -18px;\n} section {\ndisplay: flex;\nmargin-bottom: 30px;\n} column {\nflex-direction: column;\n} submit-wrap {\ntext-align: center;\n} submit-btn {\ndisplay: block;\nmargin: 0 auto;\npadding: 0 4rem 0 5rem;\nborder: 1px solid black\n} submit-btn:hover {\ncursor: pointer;\nbackground-color: #f3f3f3;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 62,
    "total_chunks": 65
  },
  {
    "id": "b13dd9626c6b29c6ccf8ad5b66eca32c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "} form-wrap { background-color: white; width: 400px; padding: 20px; border: 1px solid black; box-shadow: 5px 5px 10px black; } form-wrap h2, form-wrap p { text-align: center; } form-wrap p { position: relative; top: -18px; } section { display: flex; margin-bottom: 30px; } column { flex-direction: column; } submit-wrap { text-align: center; } submit-btn { display: block; margin: 0 auto; padding: 0 4rem 0 5rem; border: 1px solid black } submit-btn:hover { cursor: pointer; background-color: #f3f3f3; }submit-btn:disabled {\ncursor: not-allowed;\n}\n```\n```jsx\nconst { useState } = React;\nexport const SuperheroForm = () => {\nconst powerSourceOptions = [\n'Bitten by a strange creature',\n'Radioactive exposure',\n'Science experiment',\n'Alien heritage',\n'Ancient artifact discovery',\n'Other'\n];\nconst powersOptions = [\n'Super Strength',\n'Super Speed',\n'Flight',\n'Invisibility',\n'Telekinesis',\n'Other'\n];\nconst [heroName, setHeroName] = useState('');\nconst [realName, setRealName] = useState('');\nconst [powerSource, setPowerSource] = useState('');\nconst [powers, setPowers] = useState([]);\nconst handlePowersChange = e => {\nconst { value, checked } = e target;\nsetPowers(checked [ powers, value] : powers filter(p => p == value));\n}\nreturn (\nSuperhero Application Form\nPlease complete all fields\nHero Name\nsetHeroName(e target value)}\n/>\nReal Name\nsetRealName(e target value)}\n/>\nHow did you get your powers setPowerSource(e target value)}>\nSelect one\n{powerSourceOptions map(source => (\n{source}\n))}\nList your powers (select all that apply):\n{powersOptions map(power => (\n<label key={power}>\n<input\ntype='checkbox'\nvalue={power}\nchecked={powers includes(power)}\nonChange={handlePowersChange}\n/>\n<span>{power}</span>\n</label>\n))}\n</label>\n<button\nclassName='submit-btn'\ntype='submit'\ndisabled={ heroName || realName || powerSource || powers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 63,
    "total_chunks": 65
  },
  {
    "id": "e8a7cadd5290662ff1ee0cf7f4b1d958",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
    "source_type": "git_repo",
    "title": "Superhero Application Form",
    "content": "== value)); } return ( Superhero Application Form Please complete all fields Hero Name setHeroName(e target value)} /> Real Name setRealName(e target value)} /> How did you get your powers setPowerSource(e target value)}> Select one {powerSourceOptions map(source => ( {source} ))} List your powers (select all that apply): {powersOptions map(power => ( <label key={power}> <input type='checkbox' value={power} checked={powers includes(power)} onChange={handlePowersChange} /> <span>{power}</span> </label> ))} </label> <button className='submit-btn' type='submit' disabled={ heroName || realName || powerSource || powerslength === 0\n}\n>\nJoin the League\n</button>\n</form>\n</div>\n)\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11980,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-superhero-application-form\\680900675ae3d54ee19590d3.md",
      "source_type": "git_repo"
    },
    "token_count": 169,
    "chunk_index": 64,
    "total_chunks": 65
  },
  {
    "id": "b85e02c6e6bba6fe164d4c24c3217111",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4e6fe78b5aa67ef2fc3e7\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nNext, access the discard-btn, tasks-container, and title-input elements using the getElementById() method Save them in variables named discardBtn, tasksContainer, and titleInput, respectively --hints--\nYou should use getElementById() to access the discard-btn element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)discard\\-btn\\1\\s*\\)\\s*; /)\nYou should assign the discard-btn element to the variable discardBtn Don't forget to use const to declare the variable js\nassert match(code, /const\\s+discardBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)discard\\-btn\\1\\s*\\)\\s*; /)\nYou should use getElementById() to access the tasks-container element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)tasks\\-container\\1\\s*\\)\\s*; /)\nYou should assign the tasks-container element to the variable tasksContainer Don't forget to use const to declare the variable js\nassert match(code, /const\\s+tasksContainer\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)tasks\\-container\\1\\s*\\)\\s*; /)\nYou should use getElementById() to access the title-input element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)title\\-input\\1\\s*\\)\\s*; /)\nYou should assign the title-input element to the variable titleInput Don't forget to use const to declare the variable js\nassert match(code, /const\\s+titleInput\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)title\\-input\\1\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7105,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "824877e142fd8b267c271b0fd9de20f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "to use const to declare the variable js assert match(code, /const\\s+tasksContainer\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)tasks\\-container\\1\\s*\\)\\s*; /) You should use getElementById() to access the title-input element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)title\\-input\\1\\s*\\)\\s*; /) You should assign the title-input element to the variable titleInput Don't forget to use const to declare the variable js assert match(code, /const\\s+titleInput\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)title\\-input\\1\\s*\\)\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7105,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "d8f4ed764f4aeace6e3687a1b5139826",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 12rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7105,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "5a76ac411ccb6c3787fa4ad06615cb3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7105,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6fe78b5aa67ef2fc3e7.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "7b5e590846d339d6ed1e1a8f05f2d1ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4e6c86954de67a3e44ee3\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nYou need to access more elements with the getElementById() method This time you need the close-task-form-btn, add-or-update-task-btn, and cancel-btn elements Save them in the variables closeTaskFormBtn, addOrUpdateTaskBtn, and cancelBtn --hints--\nYou should use getElementById() to access the close-task-form-btn element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)close\\-task\\-form\\-btn\\1\\s*\\)\\s*; /)\nYou should assign the close-task-form-btn element to the variable closeTaskFormBtn Don't forget to use const to declare the variable js\nassert match(code, /const\\s+closeTaskFormBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)close\\-task\\-form\\-btn\\1\\s*\\)\\s*; /)\nYou should use getElementById() to access the add-or-update-task-btn element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)add\\-or\\-update\\-task\\-btn\\1\\s*\\)\\s*; /)\nYou should assign the add-or-update-task-btn element to the variable addOrUpdateTaskBtn Don't forget to use const to declare the variable js\nassert match(code, /const\\s+addOrUpdateTaskBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)add\\-or\\-update\\-task\\-btn\\1\\s*\\)\\s*; /)\nYou should use getElementById() to access the cancel-btn element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)cancel\\-btn\\1\\s*\\)\\s*; /)\nYou should assign the cancel-btn element to the variable cancelBtn Don't forget to use const to declare the variable js\nassert match(code, /const\\s+cancelBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)cancel\\-btn\\1\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "42dacb2190550fda3a1982b2501ced3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "to use const to declare the variable js assert match(code, /const\\s+addOrUpdateTaskBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)add\\-or\\-update\\-task\\-btn\\1\\s*\\)\\s*; /) You should use getElementById() to access the cancel-btn element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)cancel\\-btn\\1\\s*\\)\\s*; /) You should assign the cancel-btn element to the variable cancelBtn Don't forget to use const to declare the variable js assert match(code, /const\\s+cancelBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)cancel\\-btn\\1\\s*\\)\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "ae99b8c069524db4a140a7dc1a357966",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 12rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "1585a20632a1ffd51089c916e7d56a4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e6c86954de67a3e44ee3.md",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "60b20683d209fe417bd95ee266725fc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4e7241f52bb682eeb8211\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nThe last set of elements you need to get from the HTML file are the date-input and description-input elements Save them in the variables dateInput and descriptionInput respectively --hints--\nYou should use getElementById() to access the date-input element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)date\\-input\\1\\s*\\)\\s*; /)\nYou should assign the date-input element to the variable dateInput Don't forget to use const to declare the variable js\nassert match(code, /const\\s+dateInput\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)date\\-input\\1\\s*\\)\\s*; /)\nYou should use getElementById() to access the description-input element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)description\\-input\\1\\s*\\)\\s*; /)\nYou should assign the description-input element to the variable descriptionInput Don't forget to use const to declare the variable js\nassert match(code, /const\\s+descriptionInput\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)description\\-input\\1\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6866,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "33e703285641e0f5038b82b52f5363d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6866,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "df2bd5648dcfcb3726aeb8a537aa081d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6866,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "e499f8d98fc1f75cdc791a1ae3a05a50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6866,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7241f52bb682eeb8211.md",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b3fdfef12d69572ba8a6c483705c0798",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4e78a7ea4a168de4e6a38\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nNow, you will work on opening and closing the form modal In earlier projects, you learned how to add and remove classes from an element with el classList add() and el classList remove() Another method to use with the classList property is the toggle method The toggle method will add the class if it is not present on the element, and remove the class if it is present on the element js\nelement classList toggle(\"class-to-toggle\");\nAdd an event listener to the openTaskFormBtn element and pass in a \"click\" event for the first argument and an anonymous callback function for the second argument Inside the callback function, use the classList toggle() method to toggle the \"hidden\" class on the taskForm element Now you can click on the \"Add new Task\" button and see the form modal --hints--\nYou should call the addEventListener() method on your openTaskFormBtn variable js\nassert match(code, /openTaskFormBtn\\ addEventListener\\(/)\nYour event listener should listen for a click event js\nassert match(code, /openTaskFormBtn\\ addEventListener\\(\\s*('|\"|`)click\\1/)\nYour event listener's callback function should use the classList toggle() method to toggle the hidden class on the taskForm element Refer back to the example provided in the description js\nassert isTrue(taskForm classList contains('hidden'));\nopenTaskFormBtn click();\nassert isFalse(taskForm classList contains('hidden'));\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c4cf816e3100f34cfa7f4db243d8a143",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "event listener should listen for a click event js assert match(code, /openTaskFormBtn\\ addEventListener\\(\\s*('|\"|`)click\\1/) Your event listener's callback function should use the classList toggle() method to toggle the hidden class on the taskForm element Refer back to the example provided in the description js assert isTrue(taskForm classList contains('hidden')); openTaskFormBtn click(); assert isFalse(taskForm classList contains('hidden')); --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3d0037546f48754cc42decd373d2995a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; }task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "417f4195802984ea83f799b242981ad7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; }hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7451,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e78a7ea4a168de4e6a38.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "a8285787ef3b49010073bcc8788f5493",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4e74d0fb4f0687bf4145d\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nCreate a taskData constant and set it to an empty array This array will store all the tasks along with their associated data, including title, due date, and description This storage will enable you to keep track of tasks, display them on the page, and save them to localStorage Use let to create a currentTask variable and set it to an empty object This variable will be used to track the state when editing and discarding tasks --hints--\nYou should have a const variable called taskData js\nassert match(code, /const\\s+taskData\\s*=/)\nYou should assign an array to your taskData constant js\nassert isArray(taskData);\nYour taskData array should be empty js\nassert isEmpty(taskData);\nYou should use let to create a currentTask variable js\nassert match(code, /let\\s+currentTask/);\nYou should assign an object to your currentTask variable js\nassert isObject(currentTask);\nYour currentTask object should be empty js\nassert isEmpty(currentTask);\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "7082cdc7e49ffc541cab657174a981e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "448f46738dad2c2ef81e8f463869ad84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "3da175c6f75a2cf624e664aebd23770a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e74d0fb4f0687bf4145d.md",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ab3af4839d1e301a7f29f78e6ceb8902",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4e7bbedb22d6939001ad3\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nA modal is an element that prevents all interaction with elements outside it until the modal has been dismissed The HTML dialog element has a showModal() method that can be used to display a modal dialog box on a web page js\ndialogElement showModal();\nAdd an event listener to the closeTaskFormBtn variable and pass in a click event for the first argument and a callback function for the second argument For the callback function, call the showModal() method on the confirmCloseDialog element This will display a modal with the Discard and Cancel buttons --hints--\nYou should call the addEventListener() method on your closeTaskFormBtn variable js\nassert match(code, /closeTaskFormBtn\\ addEventListener\\(/)\nYour event listener should listen for a click event js\nassert match(code, /closeTaskFormBtn\\ addEventListener\\(\\s*('|\"|`)click\\1/)\nYour event listener's callback function should call the showModal() method on the confirmCloseDialog element js\nassert match(code, /closeTaskFormBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\( *\\)\\s*=>\\s*(\\{\\s*confirmCloseDialog\\ showModal\\(\\s*\\)\\s*; \\s*\\}|confirmCloseDialog\\ showModal\\(\\s*\\))\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "117fc44ac566d895ebd8e0708411f49e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "26b8db003cc80f9a162a60b2f679db10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "b4de376a7ed0109e67b6ee095e903bd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4e7bbedb22d6939001ad3.md",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d08465a82072af5533d377bbbe8fac6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4ecd7735a566c9266a338\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nNow that you've worked on opening and closing the modal, it's time to get the values from the input fields, save them into the taskData array, and display them on the page To start, add a submit event listener to your taskForm element and pass in e as the parameter of your arrow function Inside the curly braces, use the preventDefault() method to stop the browser from refreshing the page after submitting the form --hints--\nYou should call the addEventListener() method on your taskForm variable js\nassert match(code, /taskForm\\ addEventListener\\(/)\nYour event listener should listen for a submit event js\nassert match(code, /taskForm\\ addEventListener\\(\\s*('|\"|`)submit\\1/)\nYou should use arrow syntax to set your event listener to an empty pair of curly braces with e as the parameter js\nassert match(code, /taskForm\\ addEventListener\\(\\s*('|\"|`)submit\\1\\s*,\\s*(\\(\\s*e\\s*\\)|e)\\s*=>\\s*\\{/)\nYou should use the e preventDefault() method to stop the browser from reloading the page js\nassert match(code, /taskForm\\ addEventListener\\(\\s*('|\"|`)submit\\1\\s*,\\s*(\\(\\s*e\\s*\\)|e)\\s*=>\\s*\\{\\s*e\\ preventDefault\\(\\s*\\)\\s*; \\s*\\}\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ddd3184a21b03486e658b19badea6024",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "match(code, /taskForm\\ addEventListener\\(\\s*('|\"|`)submit\\1/) You should use arrow syntax to set your event listener to an empty pair of curly braces with e as the parameter js assert match(code, /taskForm\\ addEventListener\\(\\s*('|\"|`)submit\\1\\s*,\\s*(\\(\\s*e\\s*\\)|e)\\s*=>\\s*\\{/) You should use the e preventDefault() method to stop the browser from reloading the page js assert match(code, /taskForm\\ addEventListener\\(\\s*('|\"|`)submit\\1\\s*,\\s*(\\(\\s*e\\s*\\)|e)\\s*=>\\s*\\{\\s*e\\ preventDefault\\(\\s*\\)\\s*; \\s*\\}\\s*\\)\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "15ae8f6a1f1a302830243aff69689c20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); }large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "edd0e42fcdddfb86f9c0547e6a3e4193",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; }confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "5ca1342994a9eeab00cca5134396bbbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; openTaskFormBtnaddEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ecd7735a566c9266a338.md",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "79540695e2f289d0d21377a117a8dfe4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4ebc7eabc5a6babd479cd\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nIf the user clicks the Discard button, you want to close the modal showing the Cancel and Discard buttons, then hide the form modal Add a click event listener to discardBtn, then use the close() method on the confirmCloseDialog variable Also, use classList to toggle the class hidden on taskForm so the form modal will close too --hints--\nYou should call the addEventListener() method on your discardBtn variable js\nassert match(code, /discardBtn\\ addEventListener\\(/)\nYour event listener should listen for a click event js\nassert match(code, /discardBtn\\ addEventListener\\(\\s*('|\"|`)click\\1/)\nYou should use arrow syntax to set your event listener to an empty pair of curly braces js\nassert match(code, /discardBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{/)\nYour event listener should use the close() method on confirmCloseDialog js\nassert match(code, /discardBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*confirmCloseDialog\\ close\\(\\s*\\)\\s*; /)\nYour event listener should use classList to toggle the class hidden on taskForm js\nassert match(code, /discardBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*confirmCloseDialog\\ close\\(\\s*\\)\\s*; \\s*taskForm\\ classList\\ toggle\\(\\s*('|\"|`)hidden\\2\\s*\\)\\s*; \\s*\\}\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "84e2fbad1f865537e1fc5bdba2c25343",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "to an empty pair of curly braces js assert match(code, /discardBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{/) Your event listener should use the close() method on confirmCloseDialog js assert match(code, /discardBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*confirmCloseDialog\\ close\\(\\s*\\)\\s*; /) Your event listener should use classList to toggle the class hidden on taskForm js assert match(code, /discardBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*confirmCloseDialog\\ close\\(\\s*\\)\\s*; \\s*taskForm\\ classList\\ toggle\\(\\s*('|\"|`)hidden\\2\\s*\\)\\s*; \\s*\\}\\s*\\)\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "811f5f57dda05733787b8861805f7696",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "0b95475dfce269ffafe6834737423c00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "24a4393eb6cd361ec1f618a0e1095992",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4ebc7eabc5a6babd479cd.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "76ff8454bf55bde0ee1a53ee1761e4f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4eaaa9070a66aecbfe603\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nIf the user clicks the Cancel button, you want to cancel the process and close the modal so the user can continue editing The HTML dialog element has a close() method that can be used to close a modal dialog box on a web page js\ndialogElement close();\nAdd an event listener to the cancelBtn element and pass in a click event for the first argument and a callback function for the second argument For the callback function, call the close() method on the confirmCloseDialog element --hints--\nYou should call the addEventListener() method on your cancelBtn variable js\nassert match(code, /cancelBtn\\ addEventListener\\(/)\nYour event listener should listen for a click event js\nassert match(code, /cancelBtn\\ addEventListener\\(\\s*('|\"|`)click\\1/)\nYour event listener's callback function should call the close() method on confirmCloseDialog element js\nassert match(code, /cancelBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*(\\{\\s*confirmCloseDialog\\ close\\(\\s*\\)\\s*; \\s*\\}|confirmCloseDialog\\ close\\(\\s*\\))\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7260,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "29c70bc47962c2868f5b032b73bd1808",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7260,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "7f4a78f653f497d560eac7e768b5f12c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7260,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "b6865df47ecba7609e811be02656918b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7260,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eaaa9070a66aecbfe603.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "c366bf2a639b7cd1f2cb031f8748713b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec89ee549ecf802de2b3e2\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nNow it is time to add the remaining properties to the taskObj object Retrieve the values from the titleInput, dateInput, and descriptionInput fields, and then save them in the properties title, date, and description of the taskObj object Add a new task and open up the console to see the taskObj object with the new properties --hints--\nYour taskObj object should have a title key and value of titleInput value js\nassert match(code, /title:\\s*titleInput\\ value\\s*, /);\nYour taskObj object should have a date key and value of dateInput value js\nassert match(code, /date:\\s*dateInput\\ value\\s*, /);\nYour taskObj object should have a description key and value of descriptionInput value js\nassert match(code, /description:\\s*descriptionInput\\ value\\s*, /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c3c61f7af4a9203883eaa33c783eb17c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "15fe57f66a68a94af84986eb33ea1102",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "69436aea75c587b8192db3cfb102e0fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconsole log(taskObj);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec89ee549ecf802de2b3e2.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "70a484e3bd8872a94c9e58e78d358880",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec8f717b261e824d82d6a5\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nNow that you have obtained the values from the input fields and generated an id, you want to add them to your taskData array to keep track of each task However, you should only do this if the task is new If the task already exists, you will set it up for editing This is why you have the dataArrIndex variable, which provides the index of each task Create an if statement with the condition dataArrIndex === -1 Within the if statement, use the unshift() method to add the taskObj object to the beginning of the taskData array unshift() is an array method that is used to add one or more elements to the beginning of an array ```js\nconst arr = [1, 2, 3];\narr unshift(0);\n// [0, 1, 2, 3]\nconsole log(arr);\n```\n--hints--\nYou should create an if statement with the condition dataArrIndex === -1 js\nassert match(code, /if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{/)\nYour if statement should have taskData unshift(taskObj) in it's body js\nassert match(code, /if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\ unshift\\(\\s*taskObj\\s*\\)\\s*; \\s*\\}/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7823,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8cdee851df25d253186eda48b37c8a2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "of an array ```js const arr = [1, 2, 3]; arr unshift(0); // [0, 1, 2, 3] console log(arr); ``` --hints-- You should create an if statement with the condition dataArrIndex === -1 js assert match(code, /if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{/) Your if statement should have taskData unshift(taskObj) in it's body js assert match(code, /if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\ unshift\\(\\s*taskObj\\s*\\)\\s*; \\s*\\}/) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7823,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "cbf4e86370be3bbc270478a93dd8b60d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 12rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7823,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "01dcf752ab2f7d41e2b9fdc0c69d2e47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7823,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "373fbc2a340fec780b060ca6d9eab40c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { confirmCloseDialogshowModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\n--fcc-editable-region--\n--fcc-editable-region--\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7823,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec8f717b261e824d82d6a5.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "99257c634b095d74f571d6270bce22de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64e4eec13546c06d61a63d59\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nYou will need to determine whether the task being added to the taskData array already exists or not If the task does not exist, you will add it to the array If it does exist, you will update it To accomplish this, you can use the findIndex() method The findIndex() array method finds and returns the index of the first element in an array that meets the criteria specified by a provided testing callback function If no such element is found, the method returns -1 The callback should return a truthy value to indicate a matching element has been found, and a falsy value otherwise Here's an example:\n```js\nconst numbers = [3, 1, 5, 6];\nconst firstNumLargerThanThree = numbers findIndex((num) => num > 3);\nconsole log(firstNumLargerThanThree); // prints index 2\n```\nUse const to declare a variable called dataArrIndex and assign it the value of taskData findIndex() For the findIndex() method, pass in an arrow function with item as the parameter Within the arrow function, check if the id property of item is strictly equal to the id property of currentTask --hints--\nYou should use const to declare a dataArrIndex variable and set it to taskData findIndex() js\nassert match(code, /const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(/)\nYou should pass in item as the parameter of the arrow function callback Don't use curly braces js\nassert match(code, /const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)/)\nYour arrow function callback should check if item id === currentTask id js\nassert match(code, /const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*((item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)|({\\s*return\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "0a3c5bb62f05df7f1b74c798c4816d24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "item is strictly equal to the id property of currentTask --hints-- You should use const to declare a dataArrIndex variable and set it to taskData findIndex() js assert match(code, /const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(/) You should pass in item as the parameter of the arrow function callback Don't use curly braces js assert match(code, /const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)/) Your arrow function callback should check if item id === currentTask id js assert match(code, /const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*((item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)|({\\s*return\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\id\\s*===\\s*item\\ id); \\s*}))\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0633f3eb86656d68d81444a432c19b5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d48cbf9180a4f2eb71eb9a238d65a954",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "689c87c691f3c068ebf51832f62ddd75",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\n--fcc-editable-region--\n--fcc-editable-region--\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64e4eec13546c06d61a63d59.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "2cc24fe8810fe3bb6236627a4f991979",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9343769e8f85c1e17e05\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nCreate a div element with the class of task Utilize template strings to set the id attribute of the div to the id you destructured from the task data --hints--\nYou should create a div element with the class task js\nconst splitted = code split(/tasksContainer\\s*\\ \\s*innerHTML\\s*\\+=\\s*`/)[1]\nconst matched = __helpers removeJSComments(splitted) match(/<div( <attributes> * )>\\s*<\\/\\s*div\\s*>/);\nassert match(matched groups attributes, /\\s+class\\s*=\\s*('|\")task\\1(\\s|$)/);\nYour div element should have an id of ${id} js\nconst splitted = code split(/tasksContainer\\s*\\ \\s*innerHTML\\s*\\+=\\s*`/)[1]\nconst matched = __helpers removeJSComments(splitted) match(/<div( <attributes> * )>\\s*<\\/\\s*div\\s*>/);\nassert match(matched groups attributes, /\\s+id\\s*=\\s*('|\")\\$\\{id\\}\\1(\\s|$)/);\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "858b32bc08a103e8f7ff795925f940da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "63f28f63208f4218061e00f187f07a6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ae179c5ec899785f770f04d2ba45fdbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(({id, title, date, description}) => {\ntasksContainer innerHTML += `\n--fcc-editable-region--\n--fcc-editable-region--\n`\n}\n);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7730,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9343769e8f85c1e17e05.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "cd923f7556a4c050b54da92162d9e380",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9145e424d8835a4e0f28\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nNow that you have saved the task in the taskData array, you should display the task on the page by looping through it Use forEach() on taskData, then destructure id, title, date, description as the parameters Don't return anything yet --hints--\nYou should use forEach() on taskData js\nassert match(code, /taskData\\ forEach\\(\\s*/)\nYou should use {id, title, date, description} as the destructured parameters of the forEach() callback function js\nassert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "746d2169c2cf2571975617a93ec7b2b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "display the task on the page by looping through it Use forEach() on taskData, then destructure id, title, date, description as the parameters Don't return anything yet --hints-- You should use forEach() on taskData js assert match(code, /taskData\\ forEach\\(\\s*/) You should use {id, title, date, description} as the destructured parameters of the forEach() callback function js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(:id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "49b8936649b22d7fabe210af2d9326ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task on the page by looping through it Use forEach() on taskData, then destructure id, title, date, description as the parameters Don't return anything yet --hints-- You should use forEach() on taskData js assert match(code, /taskData\\ forEach\\(\\s*/) You should use {id, title, date, description} as the destructured parameters of the forEach() callback function js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(:id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 521,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "54f359ebbdd75bb3ff98a4395d8b3e33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task on the page by looping through it Use forEach() on taskData, then destructure id, title, date, description as the parameters Don't return anything yet --hints-- You should use forEach() on taskData js assert match(code, /taskData\\ forEach\\(\\s*/) You should use {id, title, date, description} as the destructured parameters of the forEach() callback function js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(:id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 542,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "c66f8420dfe299c7b2a241568b893249",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task on the page by looping through it Use forEach() on taskData, then destructure id, title, date, description as the parameters Don't return anything yet --hints-- You should use forEach() on taskData js assert match(code, /taskData\\ forEach\\(\\s*/) You should use {id, title, date, description} as the destructured parameters of the forEach() callback function js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(:id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 563,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "8307c4d7133ae784a4a020b67e9bfce4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task on the page by looping through it Use forEach() on taskData, then destructure id, title, date, description as the parameters Don't return anything yet --hints-- You should use forEach() on taskData js assert match(code, /taskData\\ forEach\\(\\s*/) You should use {id, title, date, description} as the destructured parameters of the forEach() callback function js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(:id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "e53d3e0b0c123d8a156e22af5b6cc7c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task on the page by looping through it Use forEach() on taskData, then destructure id, title, date, description as the parameters Don't return anything yet --hints-- You should use forEach() on taskData js assert match(code, /taskData\\ forEach\\(\\s*/) You should use {id, title, date, description} as the destructured parameters of the forEach() callback function js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(:id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "c1712ce689a2625b71bb4922b9359b04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "anything yet --hints-- You should use forEach() on taskData js assert match(code, /taskData\\ forEach\\(\\s*/) You should use {id, title, date, description} as the destructured parameters of the forEach() callback function js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|(:id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 753,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "817f0ac83e3cd9438c5ebf0f5e7cd9a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "13a8218733963bab297dff0b899b7538",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "6bd20f97a9324204da119506f85a8e46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9145e424d8835a4e0f28.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "4b26f51f633392103f4668d133056a97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec94f0de20c086e09b0fc3\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nCreate a p element and use template strings to set its content to the title you destructured Right before the content of the p element, create a strong element with the text Title: --hints--\nYou should create a p element js\nassert match(code, /<p>/)\nYou should interpolate ${title} as the text of your p element js\nassert match(code, /<p> *\\$\\{title\\}<\\/p>/)\nYou should create a strong element after the opening tag of your p element js\nassert match(code, /<p><strong>/)\nYour strong element should have the text Title: js\nassert match(code, /<p><strong>Title:\\s*<\\/strong>\\s*/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c10e3fc02c480227d1cf5da509e49110",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "4e38c275ce616b6941467297eb2f4570",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 13rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ad3c2a8a3cc87db96de4907276f15c75",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = documentgetElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(({id, title, date, description}) => {\ntasksContainer innerHTML += `\n--fcc-editable-region--\n--fcc-editable-region--\n</div>\n`\n}\n);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec94f0de20c086e09b0fc3.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "3c96efcbdf6c694dfa45b3271d8dca33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec959a76336c8767f5cd4d\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nSimilarly to the previous step, create another p element, and interpolate the date you destructured as the text content Inside this paragraph, create a strong element with the text Date: --hints--\nYou should create a p element and interpolate ${date} as the text js\nassert match(code, /<p> *\\$\\{date\\}<\\/p>/)\nYou should create a strong element with the text Date: after the opening tag of your p element js\nassert match(code, /<p><strong>Date:\\s*<\\/strong>\\s*/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7524,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "43bcb62fbac28720d53802f4edeecf59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 12rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7524,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "6dbef04f0dfe5b31bb6e0c0e5d606311",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7524,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "3da775201334ea28a859d579f1aaab4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { confirmCloseDialogshowModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(({id, title, date, description}) => {\ntasksContainer innerHTML += `\nTitle: ${title}\n--fcc-editable-region--\n--fcc-editable-region--\n</div>\n`\n}\n);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7524,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec959a76336c8767f5cd4d.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "741e2ea825206d6af361e3b39ab8057f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec96761156a187ed32b274\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nTo allow for task management, you need to include both a delete and an edit button for each task Create two button elements with the type attribute set to button and the class attribute set to btn Set the text of the first button to Edit and the text of the second button to Delete --hints--\nYou should create a button element of type button, a class btn and \"Edit\" as the text, in that order js\nassert match(code, /<button\\s+type=('|\")button\\1\\s+class=('|\")btn\\2>Edit<\\/button/)\nYou should create a button element of type button a class btn and Delete as the text, in that order js\nassert match(code, /<button\\s+type=('|\")button\\1\\s+class=('|\")btn\\2>Delete<\\/button/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7855,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "777c541b2dc6e70c358e55c2e01a8919",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7855,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1d64bf81837a4358a6604dbdde6a7176",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7855,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "52f0a6100519bcf3eea75e6a50322e0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(({id, title, date, description}) => {\ntasksContainer innerHTML += `\nTitle: ${title}\nDate: ${date}\nDescription: ${description}\n--fcc-editable-region--\n--fcc-editable-region--\n</div>\n`\n}\n);\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7855,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec96761156a187ed32b274.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ed1e95293dbc9e47329bd775c5fb0204",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9c55fdeef78bacd2fc3b\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nIf you attempt to add another task now, you'll notice that the input fields retain the values you entered for the previous task To resolve this, you need to clear the input fields after adding a task Instead of clearing the input fields one by one, it's a good practice to create a function that handles clearing those fields You can then call this function whenever you need to clear the input fields again Use arrow syntax to create a reset function and set it to a pair of curly braces --hints--\nYou should use const and arrow syntax to create a reset function js\nassert match(code, /const\\s+reset\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/)\nYour reset function should be empty js\nassert match(reset toString(), /\\(\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8019,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "46d9c6e9cb772e5acf8d1ca29989c1c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8019,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "d9853b94cb001971bb542b8d7f59bf4e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8019,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d03d02047b7cbeb3e3ada8f3deb217b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\n--fcc-editable-region--\n--fcc-editable-region--\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(({id, title, date, description}) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8019,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "64dd3d2fb657b258c74b649d6a123a24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "confirmCloseDialog showModal(); }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); taskForm classList toggle(\"hidden\"); }); taskForm addEventListener(\"submit\", (e) => { e preventDefault(); const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } taskData forEach(({id, title, date, description}) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\ntaskForm classList toggle(\"hidden\");\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8019,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9c55fdeef78bacd2fc3b.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "2e4897f4903674039cfd748441701c44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9b10356c2d8aa05d9ce1\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nAfter adding the task to the page, you should close the form modal to view the task To do this, utilize classList to toggle the hidden class on the taskForm element --hints--\nYou should use classList to toggle the class hidden on taskForm js\nconst splitter = code split(\"taskData forEach\")[1] split(\"});\")\nassert match(splitter[0], /taskForm\\ classList\\ toggle\\(\\s*('|\")hidden\\1\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "ca4fad1e2e3825d58d66aca913e0ff2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; }close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "03713e00b76d8906c87bd9299a73bfa4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "7e8d5f47a4702035e0bfeb7c7cb6e776",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { confirmCloseDialogshowModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(({id, title, date, description}) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n--fcc-editable-region--\n--fcc-editable-region--\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9b10356c2d8aa05d9ce1.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d2d24ce584b2fc54756da35c2bb77047",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fac365aeb8ad70b69b366f\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nInside the reset function, set each value of titleInput, dateInput, descriptionInput to an empty string Also, use classList to toggle the class hidden on the taskForm and set currentTask to an empty object That's because at this point, currentTask will be filled with the task the user might have added --hints--\nYou should set titleInput value to an empty string js\nassert match(reset toString(), /titleInput\\ value\\s*=\\s*('|\")\\1\\s*; /)\nYou should set dateInput value to an empty string js\nassert match(reset toString(), /dateInput\\ value\\s*=\\s*('|\")\\1\\s*; /)\nYou should set descriptionInput value to an empty string js\nassert match(reset toString(), /descriptionInput\\ value\\s*=\\s*('|\")\\1\\s*; /)\nYou should use classList to toggle the class hidden on taskForm\njs\nassert match(reset toString(), /taskForm\\ classList\\ toggle\\(\\s*('|\")hidden\\1\\s*\\)/)\nYou should set currentTask to an empty object js\nassert match(reset toString(), /currentTask\\s*=\\s*\\{\\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "bf9665246afdf8f06f444ce6f5b1a151",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2df35da9c32409442360bdfcceda3836",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "270c74ecb27069dec574fdd5de84e924",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\n--fcc-editable-region--\nconst reset = () => {\n}\n--fcc-editable-region--\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "14c6b6b1fa2ceb8c74f693d1b970d547",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); taskForm classList toggle(\"hidden\"); }); taskForm addEventListener(\"submit\", (e) => { e preventDefault(); const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\ntaskForm classList toggle(\"hidden\");\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac365aeb8ad70b69b366f.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "8b68141b07046e0fe91b55e006e2700d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fac4d1773e7a719b1254de\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nRemove the existing code toggling the class of hidden on taskForm and call the reset function instead This would clear the input fields and also hide the form modal for the user to see the added task --hints--\nYou should remove the code toggling the hidden class on taskForm js\nconst splitter = code split('<button type=\"button\" class=\"btn\">Delete</button>')\nassert notMatch(splitter[1], /taskForm\\ classList\\ toggle\\(\\s*(\"|')hidden\\1\\s*\\)\\s*; /)\nYou should call the reset function js\nassert match(code, /reset\\(\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "27f1b04b560fb60ab652e2cfeb224a57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "ed04927525f2db81bf524194b9775873",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 13rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "aeb2e35e5b72b6fa75601ed0dea63872",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = documentgetElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "d0fd40f0a5a8a260cad1522b56c805fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); taskForm classList toggle(\"hidden\"); }); taskForm addEventListener(\"submit\", (e) => { e preventDefault(); const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n--fcc-editable-region--\ntaskForm classList toggle(\"hidden\");\n--fcc-editable-region--\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7989,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac4d1773e7a719b1254de.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "bfa85357a0688d802c43a593dce20009",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9282cd547785258cecf2\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nUsing arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints--\nYou should not alter the existing taskData forEach() and the values you destructured js\nassert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 26
  },
  {
    "id": "295f7ff13371003f53315ba7be26a55b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9282cd547785258cecf2\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nUsing arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints--\nYou should not alter the existing taskData forEach() and the values you destructured js\nassert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 527,
    "chunk_index": 1,
    "total_chunks": 26
  },
  {
    "id": "ec784cc126f19874d0903709a7699136",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9282cd547785258cecf2\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nUsing arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints--\nYou should not alter the existing taskData forEach() and the values you destructured js\nassert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 548,
    "chunk_index": 2,
    "total_chunks": 26
  },
  {
    "id": "852cda5ff368a9083971b3a355172ef4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9282cd547785258cecf2\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nUsing arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints--\nYou should not alter the existing taskData forEach() and the values you destructured js\nassert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 569,
    "chunk_index": 3,
    "total_chunks": 26
  },
  {
    "id": "6b455b1f725bc0a45a56b17d46142699",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9282cd547785258cecf2\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nUsing arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints--\nYou should not alter the existing taskData forEach() and the values you destructured js\nassert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 590,
    "chunk_index": 4,
    "total_chunks": 26
  },
  {
    "id": "4855d00e0ea98b63f5902b996848d513",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ec9282cd547785258cecf2\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nUsing arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints--\nYou should not alter the existing taskData forEach() and the values you destructured js\nassert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/)\nYou should use arrow syntax and attach innerHTML to tasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 5,
    "total_chunks": 26
  },
  {
    "id": "93ffe241f9f755feba21d92f61e53693",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "step-23 --description-- Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 597,
    "chunk_index": 6,
    "total_chunks": 26
  },
  {
    "id": "6992cb47b7198c8320aab1753defe579",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--description-- Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 600,
    "chunk_index": 7,
    "total_chunks": 26
  },
  {
    "id": "6ed1586a46b2c8dc2e410e9a4a802a22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 8,
    "total_chunks": 26
  },
  {
    "id": "6e156dd9991228610f61e8f9c0af8c7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 621,
    "chunk_index": 9,
    "total_chunks": 26
  },
  {
    "id": "8ae0a7b5a306b7abf078c00724cb7a71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 10,
    "total_chunks": 26
  },
  {
    "id": "207d108db0c2bfd7cae51fa37149ec8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 11,
    "total_chunks": 26
  },
  {
    "id": "20ae336ff79fc5e8b9ff9f7ffcea238e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 12,
    "total_chunks": 26
  },
  {
    "id": "854a0881bbbb03d515d585e39fd8287f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "Using arrow syntax complete the forEach callback function Inside the callback function body use an addition assignment to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/)\nYou should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticks",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 13,
    "total_chunks": 26
  },
  {
    "id": "1c70ef37fb22ac87d99bb1c8d5795108",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "to set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 14,
    "total_chunks": 26
  },
  {
    "id": "1e1eff72091a0979324b7a11c7b15266",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "set the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 15,
    "total_chunks": 26
  },
  {
    "id": "4c9ef5f2e9c9885313d4f6cf133965c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 16,
    "total_chunks": 26
  },
  {
    "id": "172e85088f4f0ff7d8ffbde29290bdb5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*\\{",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 666,
    "chunk_index": 17,
    "total_chunks": 26
  },
  {
    "id": "a7a2ea2186d01de6b8416d285eb40232",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*\\{\\s*(\\(\\s*tasksContainer\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 18,
    "total_chunks": 26
  },
  {
    "id": "2341a76fc093ec4bb07cf8df14eacfb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*\\{\\s*(\\(\\s*tasksContainer\\innerHTML\\s*\\+=\\s*`\\s*`\\s*\\)|tasksContainer\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 19,
    "total_chunks": 26
  },
  {
    "id": "d4064cfdbe35d07ef28ecceb72208a33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*\\{\\s*(\\(\\s*tasksContainer\\innerHTML\\s*\\+=\\s*`\\s*`\\s*\\)|tasksContainer\\innerHTML\\s*\\+=\\s*`\\s*`)\\s*\\}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 707,
    "chunk_index": 20,
    "total_chunks": 26
  },
  {
    "id": "0d7c3ef241daecb342b6c92a3ece3351",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "the innerHTML of tasksContainer to empty backticks --hints-- You should not alter the existing taskData forEach() and the values you destructured js assert match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*\\{\\s*(\\(\\s*tasksContainer\\innerHTML\\s*\\+=\\s*`\\s*`\\s*\\)|tasksContainer\\innerHTML\\s*\\+=\\s*`\\s*`)\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 748,
    "chunk_index": 21,
    "total_chunks": 26
  },
  {
    "id": "61d3730804227b84c9b13e9f6cbcc542",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "match(code, /taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*( :id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description)|( :title\\s*,\\s*id\\s*,\\s*date\\s*,\\s*description)|( :date\\s*,\\s*id\\s*,\\s*title\\s*,\\s*description)|( :id\\s*,\\s*date\\s*,\\s*title\\s*,\\s*description)|( :title\\s*,\\s*date\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*id\\s*,\\s*description)|( :date\\s*,\\s*title\\s*,\\s*description\\s*,\\s*id)|( :title\\s*,\\s*date\\s*,\\s*description\\s*,\\s*id)|( :description\\s*,\\s*date\\s*,\\s*title\\s*,\\s*id)|( :date\\s*,\\s*description\\s*,\\s*title\\s*,\\s*id)|( :title\\s*,\\s*description\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*title\\s*,\\s*date\\s*,\\s*id)|( :description\\s*,\\s*id\\s*,\\s*date\\s*,\\s*title)|( :id\\s*,\\s*description\\s*,\\s*date\\s*,\\s*title)|( :date\\s*,\\s*description\\s*,\\s*id\\s*,\\s*title)|( :description\\s*,\\s*date\\s*,\\s*id\\s*,\\s*title)|( :id\\s*,\\s*date\\s*,\\s*description\\s*,\\s*title)|( :date\\s*,\\s*id\\s*,\\s*description\\s*,\\s*title)|( :title\\s*,\\s*id\\s*,\\s*description\\s*,\\s*date)|(:id\\s*,\\s*title\\s*,\\s*description\\s*,\\s*date)|(:description\\s*,\\s*title\\s*,\\s*id\\s*,\\s*date)|(:title\\s*,\\s*description\\s*,\\s*id\\s*,\\s*date)|(:id\\s*,\\s*description\\s*,\\s*title\\s*,\\s*date)|(:description\\s*,\\s*id\\s*,\\s*title\\s*,\\s*date)\\s*\\}/) You should use arrow syntax and attach innerHTML to tasksContainerjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*(\\s*\\{\\(\\s*tasksContainer\\innerHTML\\s*\\)\\s*\\})/) You should use addition assignment to set the innerHTML of tasksContainer to an empty pair of backticksjs assertmatch(code, /taskData\\forEach\\(\\s*\\(\\s*\\{*\\}\\s*\\)\\s*=>\\s*\\{\\s*(\\(\\s*tasksContainer\\innerHTML\\s*\\+=\\s*`\\s*`\\s*\\)|tasksContainer\\innerHTML\\s*\\+=\\s*`\\s*`)\\s*\\}/) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 852,
    "chunk_index": 22,
    "total_chunks": 26
  },
  {
    "id": "01bea8d7e158855516235dc36dda3e9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 23,
    "total_chunks": 26
  },
  {
    "id": "592c6078521e29a8c54b8305dcb176b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 24,
    "total_chunks": 26
  },
  {
    "id": "c6e7e758c912c9b1812b50f323cc56ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\n--fcc-editable-region--\ntaskData forEach(({id, title, date, description}));\n--fcc-editable-region--\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8837,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ec9282cd547785258cecf2.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 25,
    "total_chunks": 26
  },
  {
    "id": "5f60cb95332cad77de60c7b9ed5b8c99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fac6a497811572b338e5e5\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nAlso, remove the existing code toggling the class hidden on taskForm inside the discardBtn event listener and call the reset function instead That's because when you click the Discard button, everything in the input fields should go away --hints--\nYou should remove the code toggling the class hidden on taskForm js\nconst splitter = code split(\"confirmCloseDialog close();\")\nassert notMatch(splitter[1], /taskForm\\ classList\\ toggle\\(\\s*(\"|')hidden\\1\\s*\\)\\s*; /)\nYou should call the reset function js\nassert match(code, /confirmCloseDialog\\ close\\(\\s*\\)\\s*; \\s*reset\\(\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8022,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "97554710505a7910f0013ba98b99d867",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8022,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f71d3467e8c7cd37eb3cfde4801ea1f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 13rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8022,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a0b11739d44412a21b1de11012d4d347",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = documentgetElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog showModal();\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\n--fcc-editable-region--\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\ntaskForm classList toggle(\"hidden\");\n});\n--fcc-editable-region--\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8022,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "207bb236dc2b68e2fdc342a8ecd8fc65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "() => confirmCloseDialog close()); --fcc-editable-region-- discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); taskForm classList toggle(\"hidden\"); }); --fcc-editable-region-- taskForm addEventListener(\"submit\", (e) => { e preventDefault(); const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\nreset()\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8022,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fac6a497811572b338e5e5.md",
      "source_type": "git_repo"
    },
    "token_count": 240,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "b40d1e650bbb138f627588af15a9612a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64faca774fd9fd74bc084cc9\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nYou should display the Cancel and Discard buttons to the user only if there is some text present in the input fields Start by removing the confirmCloseDialog showModal(); line Then inside the closeTaskFormBtn event listener, write some logic to check if there is a value in the titleInput, dateInput or the descriptionInput field If any of those input fields has a value, then use the showModal() method on confirmCloseDialog Otherwise, if there are no changes, call the reset() function to clear the input fields and hide the form modal --hints--\nIf any of the input fields has a value, then the confirmation dialog should display Otherwise, the reset function should be called ```js\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst fields = [\n{ name: \"titleInput\", element: titleInput, value: \"Test title\" },\n{ name: \"dateInput\", element: dateInput, value: \"2025-04-28\" },\n{ name: \"descriptionInput\", element: descriptionInput, value: \"Test description\" },\n];\ncloseTaskFormBtn click();\nassert isFalse(confirmCloseDialog open);\nfields forEach(({ name, element, value }) => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\nconfirmCloseDialog open = false;\nelement value = value;\ncloseTaskFormBtn click();\nassert isTrue(confirmCloseDialog open);\ncancelBtn click();\n});\n// Now test for reset functionality\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\nassert isTrue(taskForm classList toggle(\"hidden\"));\nassert isEmpty(currentTask);\n```\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c4b5e9ee77085255c6d3fa15aaba1b65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; confirmCloseDialog open = false; element value = value; closeTaskFormBtn click(); assert isTrue(confirmCloseDialog open); cancelBtn click(); }); // Now test for reset functionality titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; assert isTrue(taskForm classList toggle(\"hidden\")); assert isEmpty(currentTask); ``` --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f9ea2087ab84e8ee2c747c5daf2c9764",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; }task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "5a91d53343dcd905518a7c3bf57ac27e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; }hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\n--fcc-editable-region--\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "1c8d18926ef03f4423e891c1f5bb7025",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "= document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); --fcc-editable-region-- closeTaskFormBtn addEventListener(\"click\", () => { confirmCloseDialogshowModal();\n});\n--fcc-editable-region--\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\nreset()\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9284,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faca774fd9fd74bc084cc9.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "c8abbf2d367133462d5ba596b743a6c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fad9cd2eeb1e7ca2ca8c8b\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nUse arrow syntax to create an updateTaskContainer function Then move the taskData forEach() and its content from the taskForm's submit event listener into the newly created function --hints--\nYou should use const and arrow syntax to create a updateTaskContainer function js\nassert match(code, /const\\s+updateTaskContainer\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{/)\nYou should move taskData forEach() and its content into the updateTaskContainer() function js\nassert match(code, /const\\s+updateTaskContainer\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description\\s*\\}\\s*\\)\\s*=>\\s*{\\s*tasksContainer\\ innerHTML\\s*\\+=\\s*`\\s*<div\\s+class\\s*=\\s*('|\")task\\1\\s*id\\s*=\\s*('|\")\\$\\{id\\}\\2>\\s*<p><strong>Title:<\\/strong>\\s*\\$\\{title\\}<\\/p>\\s*<p><strong>Date:<\\/strong>\\s*\\$\\{date\\}<\\/p>\\s*<p><strong>Description:<\\/strong>\\s*\\$\\{description\\}<\\/p>\\s*<button\\s+type\\s*=\\s*('|\")button\\3\\s*class\\s*=\\s*('|\")btn\\4>Edit<\\/button>\\s*<button\\s+type\\s*=\\s*('|\")button\\5\\s*class\\s*=\\s*('|\")btn\\6>Delete<\\/button>\\s*<\\/div>\\s*`; \\s*}\\s*\\)\\s*; \\s*\\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "2bcd4d464ba95c8b3133638ec74d28ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "forEach() and its content from the taskForm's submit event listener into the newly created function --hints-- You should use const and arrow syntax to create a updateTaskContainer function js assert match(code, /const\\s+updateTaskContainer\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{/) You should move taskData forEach() and its content into the updateTaskContainer() function js assert match(code, /const\\s+updateTaskContainer\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*taskData\\ forEach\\(\\s*\\(\\s*\\{\\s*id\\s*,\\s*title\\s*,\\s*date\\s*,\\s*description\\s*\\}\\s*\\)\\s*=>\\s*{\\s*tasksContainer\\ innerHTML\\s*\\+=\\s*`\\s*<div\\s+class\\s*=\\s*('|\")task\\1\\s*id\\s*=\\s*('|\")\\$\\{id\\}\\2>\\s*<p><strong>Title:<\\/strong>\\s*\\$\\{title\\}<\\/p>\\s*<p><strong>Date:<\\/strong>\\s*\\$\\{date\\}<\\/p>\\s*<p><strong>Description:<\\/strong>\\s*\\$\\{description\\}<\\/p>\\s*<button\\s+type\\s*=\\s*('|\")button\\3\\s*class\\s*=\\s*('|\")btn\\4>Edit<\\/button>\\s*<button\\s+type\\s*=\\s*('|\")button\\5\\s*class\\s*=\\s*('|\")btn\\6>Delete<\\/button>\\s*<\\/div>\\s*`; \\s*}\\s*\\)\\s*; \\s*\\}\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
      "source_type": "git_repo"
    },
    "token_count": 539,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "cb41b61648250afa9f58b613e202b143",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "a8c693fcdfd9cbb6c23a6f7fb536dc84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "1c4c7cc9494895237dc0a440f8f86214",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\n};\n--fcc-editable-region--\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "477044b73e06e895df546cd7c71f43c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} }; --fcc-editable-region-- --fcc-editable-region-- const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; if (formInputsContainValues) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialogclose();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\nreset()\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8672,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad9cd2eeb1e7ca2ca8c8b.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "ba4eaab3656958b6877168af91f1457d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fadae4f2d51b7d5d8b98d8\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nInside the addOrUpdateTask function, call the updateTaskContainer and reset functions --hints--\nYou should call the updateTaskContainer function js\nassert match(code, /updateTaskContainer\\(\\s*\\)\\s*/)\nYou should call the reset function after calling the updateTaskContainer function js\nassert match(code, /updateTaskContainer\\(\\s*\\)\\s*; \\s*reset\\(\\s*\\)\\s*; \\s*/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "6f9fe8d2157a1ae197942d0ff07599c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; }close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "673a3d222cc804db67b970204e1c9e5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "bcef0bb24e64c8241f797f08371bee76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTaskid);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst updateTaskContainer = () => {\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nreset()\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadae4f2d51b7d5d8b98d8.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d769c1c216e8aa6c6e877e571cb07ddf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fadff23375f27ff06c6d40\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nNow remove the reset() call inside the taskForm submit event listener and call the addOrUpdateTask function instead --hints--\nYou should remove reset() and call addOrUpdateTask() js\nassert match(code, /addOrUpdateTask\\(\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7895,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c7e59979cad679c2a5153044e4e599c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; }task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7895,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3b29d37d63eedcfe014d3c1161218950",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; }hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7895,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "84fa376b92ff45cec39dc70adad915d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInputvalue,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\n--fcc-editable-region--\nreset()\n--fcc-editable-region--\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7895,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fadff23375f27ff06c6d40.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "62fa228e62cc8bec6b82a8b6f381fe2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fae068bcdc9c805bd8399e\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nTo enable editing and deleting for each task, add an onclick attribute to both buttons Set the value of the onclick attribute to editTask(this) for the Edit button and deleteTask(this) for the Delete button The editTask(this) function will handle editing, while the deleteTask(this) function will handle deletion this is a keyword that refers to the current context In this case, this points to the element that triggers the event – the buttons --hints--\nYou should add onclick=\"editTask(this)\" to your edit button js\nassert match(code, /<button( =[^>]*onclick\\s*=\\s*(\"|')editTask\\(\\s*this\\s*\\)\\1)[^>]*>Edit<\\/button>/);\nYou should add onclick=\"deleteTask(this)\" to your delete button js\nassert match(code, /<button( =[^>]*onclick\\s*=\\s*(\"|')deleteTask\\(\\s*this\\s*\\)\\1)[^>]*>Delete<\\/button>/);\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8553,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "d6da9698f6e807310c77cd831317bd33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8553,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "cafa9f9699733bc41abcdeb9601370e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8553,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "8e057ada6b52e4682106319e476d9350",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n--fcc-editable-region--\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n--fcc-editable-region--\n</div>\n}\n);\n};\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8553,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "2cb8671c98227ba690477623ec95f559",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "}; if (dataArrIndex === -1) { taskData unshift(taskObj); } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainer innerHTML += <div class=\"task\" id=\"${id}\"> <p><strong>Title:</strong> ${title}</p> <p><strong>Date:</strong> ${date}</p> <p><strong>Description:</strong> ${description}</p> --fcc-editable-region-- <button type=\"button\" class=\"btn\">Edit</button> <button type=\"button\" class=\"btn\">Delete</button> --fcc-editable-region-- </div> } ); }; const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classListtoggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8553,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fae068bcdc9c805bd8399e.md",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "32ae50709acc95bbbdf03e0d8b4b0892",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64faf0418e828c0114a558a7\ntitle: Step 39\nchallengeType: 0\ndashedName: step-39\n--description--\nThere's a problem If you add a task, and then add another, the previous task gets duplicated This means you need to clear out the existing contents of tasksContainer before adding a new task Set the innerHTML of tasksContainer back to an empty string --hints--\nYou should set the innerHTML of tasksContainer to an empty string js\nassert match(code, /tasksContainer\\ innerHTML\\s*=\\s*(\"|')\\1\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8083,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "20e06d69ccce523dfc0836633999e3a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; }close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8083,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f075bb94a79b493e7bceb305de942f82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8083,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "7f66a8dfd40d3775058aa7c0eac99486",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTaskid);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\n--fcc-editable-region--\n--fcc-editable-region--\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8083,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9bf207122c2c43e0463982b520a6409c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; if (formInputsContainValues) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); reset() }); taskForm addEventListener(\"submit\", (e) => { epreventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8083,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf0418e828c0114a558a7.md",
      "source_type": "git_repo"
    },
    "token_count": 153,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "460b48a0748b6125fb3909879da41459",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64faedcd16a1e985c4c2dc94\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nCreate a deleteTask function using arrow syntax Pass buttonEl as the parameter and define an empty set of curly braces for the function body --hints--\nYou should use const and arrow syntax to create a deleteTask function js\nassert match(code, /const\\s+deleteTask\\s*=\\s*(\\( *\\)|[^\\s()]+)\\s*=>\\s*/);\nYour deleteTask function should take a buttonEl parameter js\nassert match(deleteTask toString(), /\\(\\s*buttonEl\\s*\\)/);\nYour deleteTask function should be empty js\nassert match(deleteTask toString(), /\\(\\s*buttonEl\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "d2627d78548c27d287cc3e0bbeac39e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0ee7b6663dc46720e905cb959accf581",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 13rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d3988c9b6e342972ecb835337192955a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = documentgetElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\n--fcc-editable-region--\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "b8be41fceb5429ead97feaaff03a4803",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "(dataArrIndex === -1) { taskData unshift(taskObj); } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainer innerHTML += <div class=\"task\" id=\"${id}\"> <p><strong>Title:</strong> ${title}</p> <p><strong>Date:</strong> ${date}</p> <p><strong>Description:</strong> ${description}</p> <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button> <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> </div> } ); }; --fcc-editable-region-- --fcc-editable-region-- const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classListtoggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faedcd16a1e985c4c2dc94.md",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "716b1062c6fbed310b05f7670084e7d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64faf65b22ad8d07df9be14d\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nYou need to find the index of the task you want to delete first Create a dataArrIndex variable and set its value using the findIndex() method on the taskData array Pass item as the parameter for the arrow callback function, and within the callback, check if the id of item is equal to the id of the parentElement of buttonEl --hints--\nYou should not alter the deleteTask function js\nassert match(code, /const\\s+deleteTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*/)\nYou should use const to declare a dataArrIndex variable and set it to taskData findIndex() js\nassert match(code, /const\\s+deleteTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(/)\nYou should pass in item as the parameter of the findIndex() arrow function callback js\nassert match(code, /const\\s+deleteTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)/)\nYour arrow function callback should check if item id === buttonEl parentElement id Don't use curly braces js\nassert match(code, /const\\s+deleteTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*buttonEl\\ parentElement\\ id|buttonEl\\ parentElement\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*\\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "cf8b65857ac320d3a62a5613fb3ca2b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+deleteTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(/) You should pass in item as the parameter of the findIndex() arrow function callback js assert match(code, /const\\s+deleteTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)/) Your arrow function callback should check if item id === buttonEl parentElement id Don't use curly braces js assert match(code, /const\\s+deleteTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*buttonEl\\ parentElement\\ id|buttonEl\\ parentElement\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*\\}\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "cf5e917dbbee1d77db3330107e94f9f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "a02c03fae013e2a1d3361514be4971d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "75425b2c02e5fc6ed612b59e5c22a44f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "f7fe3fd031308ff351e12e5e6e8514cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "[]; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\n--fcc-editable-region--\nconst deleteTask = (buttonEl) => {\n}\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9154,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf65b22ad8d07df9be14d.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "dc64d09ed9485a85c0c7212acaed1893",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fad07f43a101779cb8692a\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nYou can enhance code readability and maintainability by refactoring the submit event listener into two separate functions The first function can be used to add the input values to taskData, while the second function can be responsible for adding the tasks to the DOM Use arrow syntax to create an addOrUpdateTask function Then move the dataArrIndex variable, the taskObj object, and the if statement into the addOrUpdateTask function --hints--\nYou should use const and arrow syntax to create an addOrUpdateTask function js\nassert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/)\nYou should move the dataArrIndex variable into the addOrUpdateTask function js\nassert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /)\nYou should move the taskObj object into the addOrUpdateTask function js\nassert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 26
  },
  {
    "id": "a28d50a7411968cba72f2420370d1940",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "variable, the taskObj object, and the if statement into the addOrUpdateTask function --hints-- You should use const and arrow syntax to create an addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /)\nYou should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 26
  },
  {
    "id": "2d11c370f58c3abad4d46ce819d60d0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "an addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 26
  },
  {
    "id": "5af16845b8a3454a13cfb8962beef22b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 3,
    "total_chunks": 26
  },
  {
    "id": "b32d3da68e20424ec10b384d2668d18c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 4,
    "total_chunks": 26
  },
  {
    "id": "f489b854193dd177b0abb89ce8df24b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 516,
    "chunk_index": 5,
    "total_chunks": 26
  },
  {
    "id": "85f5edc6be800a923bd8d3e4fb7dee38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 524,
    "chunk_index": 6,
    "total_chunks": 26
  },
  {
    "id": "ae300cbb162028cb45d6fdde16d9ea36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 553,
    "chunk_index": 7,
    "total_chunks": 26
  },
  {
    "id": "eb9878572dcd9ce3632f5dc25311ac6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 8,
    "total_chunks": 26
  },
  {
    "id": "dfbcdd934869ba014514c7612223424e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 561,
    "chunk_index": 9,
    "total_chunks": 26
  },
  {
    "id": "2cd0bde5e01f5c6e9a7e093e7a3007bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 577,
    "chunk_index": 10,
    "total_chunks": 26
  },
  {
    "id": "1590ec9deb6ec5089a39d17f953c0f59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 599,
    "chunk_index": 11,
    "total_chunks": 26
  },
  {
    "id": "2c10f11769b8bb85793c5a8f66cedc40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 12,
    "total_chunks": 26
  },
  {
    "id": "a15b0b86680593f98da24a90a9648b1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 13,
    "total_chunks": 26
  },
  {
    "id": "8a8b9b6c6056eff7e46ecb6dfebe192c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 653,
    "chunk_index": 14,
    "total_chunks": 26
  },
  {
    "id": "682b09d92dcbba7ed92d3f4eab52b1d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\value\\s*,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 15,
    "total_chunks": 26
  },
  {
    "id": "d970530922c863cf0eca90cdf762b6ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\value\\s*,\\s*\\}\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 16,
    "total_chunks": 26
  },
  {
    "id": "3b23569343848af4f227b7c761d5bb93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\value\\s*,\\s*\\}\\s*;\\s*if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 17,
    "total_chunks": 26
  },
  {
    "id": "408ae39675cf523e92c8df5489e2f239",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\value\\s*,\\s*\\}\\s*;\\s*if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\unshift\\(\\s*taskObj\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 706,
    "chunk_index": 18,
    "total_chunks": 26
  },
  {
    "id": "5af5b764a8cae1e272ec3d8488a73045",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\value\\s*,\\s*\\}\\s*;\\s*if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\unshift\\(\\s*taskObj\\s*\\)\\s*;\\s*\\}\\s*\\}\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 715,
    "chunk_index": 19,
    "total_chunks": 26
  },
  {
    "id": "00edc5d71d2ebac5c77524d50b04fbee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*/) You should move the dataArrIndex variable into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; /) You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\value\\s*,\\s*\\}\\s*;\\s*if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\unshift\\(\\s*taskObj\\s*\\)\\s*;\\s*\\}\\s*\\}\\s*;/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 756,
    "chunk_index": 20,
    "total_chunks": 26
  },
  {
    "id": "b85bf672ceddfa9ad3d8b6ad34470cb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "You should move the taskObj object into the addOrUpdateTask function js assert match(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\ id\\s*===\\s*currentTask\\ id|currentTask\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\ value\\ toLowerCase\\(\\s*\\)\\ split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\ join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\ now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\ value\\s*,\\s*description\\s*:\\s*descriptionInput\\ value\\s*, \\s*\\}\\s*; /) You should move the if statement with the condition dataArrIndex === -1 into your addOrUpdateTask function js assertmatch(code, /const\\s+addOrUpdateTask\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*( :\\(\\s*item\\s*\\)|item)\\s*=>\\s*( :item\\id\\s*===\\s*currentTask\\id|currentTask\\id\\s*===\\s*item\\id)\\s*\\)\\s*;\\s*const\\s+taskObj\\s*=\\s*\\{\\s*id\\s*:\\s*`\\$\\{\\s*titleInput\\value\\toLowerCase\\(\\s*\\)\\split\\(\\s*('|\")\\s{1}\\1\\s*\\)\\join\\(\\s*('|\")-\\2\\s*\\)\\s*\\}-\\$\\{\\s*Date\\now\\(\\s*\\)\\s*\\}`\\s*,\\s*title\\s*:\\s*titleInput\\value\\s*,\\s*date\\s*:\\s*dateInput\\value\\s*,\\s*description\\s*:\\s*descriptionInput\\value\\s*,\\s*\\}\\s*;\\s*if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\unshift\\(\\s*taskObj\\s*\\)\\s*;\\s*\\}\\s*\\}\\s*;/) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 746,
    "chunk_index": 21,
    "total_chunks": 26
  },
  {
    "id": "2f37b5fd271d7f5fa75cbc6c8065c388",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 22,
    "total_chunks": 26
  },
  {
    "id": "5124a22d3c6aaf3a7e8ec80c333c6449",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 23,
    "total_chunks": 26
  },
  {
    "id": "3d2a47c1e89c68a8b53ef96df68c0c48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\n--fcc-editable-region--\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 24,
    "total_chunks": 26
  },
  {
    "id": "ecf335284d340b6eb127126d674af7f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; if (formInputsContainValues) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); reset() }); taskForm addEventListener(\"submit\", (e) => { e preventDefault(); const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInputvalue,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button type=\"button\" class=\"btn\">Edit</button>\n<button type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\nreset()\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fad07f43a101779cb8692a.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 25,
    "total_chunks": 26
  },
  {
    "id": "b277fb738363ddb6618e5aace33548b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64faf874364ec308f875f636\ntitle: Step 43\nchallengeType: 0\ndashedName: step-43\n--description--\nYou need to remove the task from the DOM using remove() and from the taskData array using splice() splice() is an array method that modifies arrays by removing, replacing, or adding elements at a specified index, while also returning the removed elements It can take up to three arguments: the first one is the mandatory index at which to start, the second is the number of items to remove, and the third is an optional replacement element Here's an example:\n```js\nconst fruits = [\"mango\", \"date\", \"cherry\", \"banana\", \"apple\"];\n// Remove date and cherry from the array starting at index 1\nconst removedFruits = fruits splice(1, 2);\nconsole log(fruits); // [ 'mango', 'banana', 'apple' ]\nconsole log(removedFruits); // [ 'date', 'cherry' ]\n```\nUse the remove() method to remove the parentElement of the buttonEl from the DOM Then use splice() to remove the task from the taskData array Pass in dataArrIndex and 1 as the arguments of your splice() dataArrIndex is the index to start and 1 is the number of items to remove --hints--\nYou should use the remove() method to remove the parent element of buttonEl js\nassert match(deleteTask toString(), /buttonEl\\ parentElement\\ remove\\(\\s*\\)\\s*; /)\nYou should use splice() on the taskData array js\nassert match(deleteTask toString(), /taskData\\ splice\\(/)\nThe first argument of your splice() method should be dataArrIndex js\nassert match(deleteTask toString(), /taskData\\ splice\\(\\s*dataArrIndex/)\nThe second argument of your splice() method should be 1 js\nassert match(deleteTask toString(), /taskData\\ splice\\(\\s*dataArrIndex\\s*,\\s*1\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "9445bd71d41030d05a6edd41360457fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "match(deleteTask toString(), /buttonEl\\ parentElement\\ remove\\(\\s*\\)\\s*; /) You should use splice() on the taskData array js assert match(deleteTask toString(), /taskData\\ splice\\(/) The first argument of your splice() method should be dataArrIndex js assert match(deleteTask toString(), /taskData\\ splice\\(\\s*dataArrIndex/) The second argument of your splice() method should be 1 js assert match(deleteTask toString(), /taskData\\ splice\\(\\s*dataArrIndex\\s*,\\s*1\\s*\\)\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "2cd6f334b7b64ff6bd6b1598e5949f7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; }close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "6157e73f0c9a470d36e1fa5258d3dfd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; }task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d04bda89964f27b028fd8214e637dadd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInputvalue,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\n--fcc-editable-region--\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\n}\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c8581617be9e83a72ab4231c14b6797b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; if (formInputsContainValues) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); reset() }); taskForm addEventListener(\"submit\", (e) => { epreventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64faf874364ec308f875f636.md",
      "source_type": "git_repo"
    },
    "token_count": 153,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "a1ae698fed42d85c70b1f1daf65b3645",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fafac95328110a69bcb75f\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nUse arrow syntax to create an editTask function Pass in buttonEl as the parameter and add empty curly braces for the body --hints--\nYou should use const and arrow syntax to create an editTask function js\nassert match(code, /const\\s+editTask\\s*=\\s*(\\( *\\)|[^\\s()]+)\\s*=>\\s*\\{\\s*/)\nYour editTask function should take a buttonEl parameter js\nassert match(editTask toString(), /\\(\\s*buttonEl\\s*\\)/);\nYour editTask function should be empty js\nassert match(editTask toString(), /\\(\\s*buttonEl\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "9d25313fc0ecf6a3d4489da054b22b18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "a2a6f04cd8bcc234cc5f062fffc215fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 13rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "15402356684f8233a01b7704a51e94a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = documentgetElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "69470459c23a776fba62f42703cb1c72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "(dataArrIndex === -1) { taskData unshift(taskObj); } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainer innerHTML += <div class=\"task\" id=\"${id}\"> <p><strong>Title:</strong> ${title}</p> <p><strong>Date:</strong> ${date}</p> <p><strong>Description:</strong> ${description}</p> <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button> <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> </div> } ); }; const deleteTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); buttonEl parentElementremove();\ntaskData splice(dataArrIndex, 1);\n}\n--fcc-editable-region--\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fafac95328110a69bcb75f.md",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "21a43099225083078b4f1c988678b019",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb1061ca838611ed6a7d6b\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nUse square bracket notation to retrieve the task to be edited from the taskData array using the dataArrIndex Then, assign it to the currentTask object to keep track of it --hints--\nYou should assign taskData[dataArrIndex] to currentTask js\nassert match(code, /currentTask\\s*=\\s*taskData\\s*\\[\\s*dataArrIndex\\s*\\]\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ffd1b88c0e56036db92b1cdc9ac16e5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; }close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "42d25c318a4d2712c72dd7c35d09054a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; }task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c186e5c2a23b42bb460627534ec9a611",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInputvalue,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\n--fcc-editable-region--\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex((item) => item id === buttonEl parentElement id);\n}\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "d91cd9ea4f2fd70d3f0c581a54bf0f49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1); } --fcc-editable-region-- const editTask = (buttonEl) => { const dataArrIndex = taskData findIndex((item) => item id === buttonEl parentElement id); } --fcc-editable-region-- const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; if (formInputsContainValues) { confirmCloseDialogshowModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8423,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1061ca838611ed6a7d6b.md",
      "source_type": "git_repo"
    },
    "token_count": 207,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "970b231db1ec75d048d3050176f422f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb0fa0968f2b113b2d90e9\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nAs you did in the deleteTask function, you need to find the index of the task to be edited Create a dataArrIndex variable For its value, utilize the findIndex() method on taskData Pass item as the parameter to its callback function and check if the id of item is equal to the id of the parentElement of buttonEl --hints--\nYou should not alter the editTask function js\nassert match(code, /const\\s+editTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*/)\nYou should use const to declare a dataArrIndex variable and set it to taskData findIndex() js\nassert match(code, /const\\s+editTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(/)\nYou should pass in item as the parameter of the findIndex() arrow function callback Don't use curly braces js\nassert match(code, /const\\s+editTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)/)\nYour arrow function callback should check if item id === buttonEl parentElement id js\nassert match(code, /const\\s+editTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*buttonEl\\ parentElement\\ id|buttonEl\\ parentElement\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*\\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9343,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "beafa42ba143f3ab6d281ca00579d350",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "assert match(code, /const\\s+editTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(/) You should pass in item as the parameter of the findIndex() arrow function callback Don't use curly braces js assert match(code, /const\\s+editTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)/) Your arrow function callback should check if item id === buttonEl parentElement id js assert match(code, /const\\s+editTask\\s*=\\s*\\(\\s*buttonEl\\s*\\)\\s*=>\\s*\\{\\s*const\\s+dataArrIndex\\s*=\\s*taskData\\ findIndex\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*(item\\ id\\s*===\\s*buttonEl\\ parentElement\\ id|buttonEl\\ parentElement\\ id\\s*===\\s*item\\ id)\\s*\\)\\s*; \\s*\\}\\s*; /) --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9343,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "e313626f69f6b7e88717824177a77602",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9343,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "3be16dc755b4340798800a59da478a91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9343,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "9bcc19fbf3a140dda1cfa517db5bfd70",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9343,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4a6c286b16eb493fbbc9681abfbbf8a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "[]; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\n--fcc-editable-region--\nconst editTask = (buttonEl) => {\n}\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9343,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb0fa0968f2b113b2d90e9.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "5c7bf3bc137b4664d7dd3e70965f494f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb1321e189a6136d200f77\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nThe task to be edited is now in the currentTask object Stage it for editing inside the input fields by setting the value of titleInput to currentTask title, dateInput to currentTask date, and descriptionInput to currentTask description --hints--\nYou should set titleInput value to currentTask title js\nassert match(editTask toString(), /titleInput\\ value\\s*=\\s*currentTask\\ title\\s*; /)\nYou should set dateInput value to currentTask date js\nassert match(editTask toString(), /dateInput\\ value\\s*=\\s*currentTask\\ date\\s*; /)\nYou should set descriptionInput value to currentTask description js\nassert match(editTask toString(), /descriptionInput\\ value\\s*=\\s*currentTask\\ description\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "4fc29fdd70f8568266d887b9d9505376",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "cab87a1ff1b2730bf2d4d2eba714de8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "677e77820c5746801886901c94b5937c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "b0f115c2a8cd310fdb5454a2b2e4d612",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainer innerHTML += <div class=\"task\" id=\"${id}\"> <p><strong>Title:</strong> ${title}</p> <p><strong>Date:</strong> ${date}</p> <p><strong>Description:</strong> ${description}</p> <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button> <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> </div> } ); }; const deleteTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElementid\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\n--fcc-editable-region--\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\n}\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1321e189a6136d200f77.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "03d057329ee8989cf7d3e16aaf74b91b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb1436adef3e145b4c3501\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nSet the innerText of the addOrUpdateTaskBtn button to Update Task --hints--\nYou should set the inner text of the addOrUpdateTaskBtn button to Update Task\njs\nassert match(editTask toString(), /addOrUpdateTaskBtn\\ innerText\\s*=\\s*(\"|')Update Task\\1\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8537,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "1831cbe654c58dc981e1a4611adce3e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; }task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8537,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "88bdc7b31cc9cb67b732c9ca79065490",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; }hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8537,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "6bdc048029b2c9480f8a9398b2ad08c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInputvalue,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\n--fcc-editable-region--\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\n}\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8537,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "8e4c7ded23285fce65a122c6b7a076ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} --fcc-editable-region-- const editTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); currentTask = taskData[dataArrIndex]; titleInput value = currentTask title; dateInput value = currentTask date; descriptionInput value = currentTask description; } --fcc-editable-region-- const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtnaddEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8537,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1436adef3e145b4c3501.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6cf8417936c96556c105249910d69dec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb14d890415c14f93069ce\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nFinally, display the form modal with the values of the input fields by using classList to toggle the hidden class on taskForm --hints--\nYou should use classList to toggle the class hidden on taskForm js\nassert match(editTask toString(), /taskForm\\ classList\\ toggle\\(\\s*('|\")hidden\\1\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "322b30804acdb59bc6f5ee02f6dfc088",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; }close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f5a518f9e9001d6bbc9f71577280e301",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; }task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "0036b38d6cc1ccef4a7aac747fc92a1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInputvalue,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\n--fcc-editable-region--\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\n}\n--fcc-editable-region--\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "5152ca50d45cfaecfc32d2834708e302",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "const editTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); currentTask = taskData[dataArrIndex]; titleInput value = currentTask title; dateInput value = currentTask date; descriptionInput value = currentTask description; addOrUpdateTaskBtn innerText = \"Update Task\"; } --fcc-editable-region-- const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classListtoggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb14d890415c14f93069ce.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "d3af20a09c70b5200f80d83e3a13ff68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb154a7c48cd159924bb18\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nAt this point, editing a task won't reflect when you submit the task To make the editing functional, go back to the if statement inside the addOrUpdateTask function Create an else block and set taskData[dataArrIndex] to taskObj --hints--\nYour if statement should have an else block js\nassert match(code, /if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\ unshift\\(\\s*taskObj\\s*\\)\\s*; \\s*\\}\\s*else\\s*\\{\\s*/)\nYour else block should have the code taskData[dataArrIndex] = taskObj js\nassert match(code, /if\\s*\\(\\s*dataArrIndex\\s*===\\s*-1\\s*\\)\\s*\\{\\s*taskData\\ unshift\\(\\s*taskObj\\s*\\)\\s*; \\s*\\}\\s*else\\s*\\{\\s*taskData\\s*\\[\\s*dataArrIndex\\s*\\]\\s*=\\s*taskObj\\s*; \\s*\\}/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "864a41709afd471a676f591e5d4794ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "316a68b288fa50e734c2f9d5d8426f2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "3f9e16542e807ae2d394750c719e1f5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\n--fcc-editable-region--\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n}\n--fcc-editable-region--\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "e45a1c6aca7bf0d09aab88bba6316e30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; --fcc-editable-region-- if (dataArrIndex === -1) { taskData unshift(taskObj); } --fcc-editable-region-- updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "3221b0fd16b839ab4033af92f53c9ea1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "taskForm classList toggle(\"hidden\"); } const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; if (formInputsContainValues) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialogclose();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb154a7c48cd159924bb18.md",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "2cce46f4a841b6f8bee80d160ec84222",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb1c4dc0feb219149a7c7d\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nIf the user attempts to edit a task but decides not to make any changes before closing the form, there is no need to display the modal with the Cancel and Discard buttons Inside the closeTaskFormBtn event listener, use const to create another variable named formInputValuesUpdated Check if the user made changes while trying to edit a task by verifying that the titleInput value is not equal to currentTask title, or the dateInput value is not equal to currentTask date, or the descriptionInput value is not equal to currentTask description --hints--\nYour formInputValuesUpdated variable should check if titleInput value is not equal to currentTask title ```js\nconst regex = /const\\s+formInputValuesUpdated\\s=( = titleInput value\\s( ==| =)\\scurrentTask title)/\nassert match(code, regex)\n```\nYour formInputValuesUpdated variable should check if titleInput value is not equal to currentTask title or dateInput value is not equal to currentTask date ```js\nconst regex = /const\\s+formInputValuesUpdated\\s=( = titleInput value\\s( ==| =)\\scurrentTask title)( = dateInput value\\s( : ==| =)\\s*currentTask date)/\nassert match(code, regex);\n```\nYour formInputValuesUpdated variable should check if titleInput value is not equal to currentTask title, dateInput value is not equal to currentTask date, or descriptionInput value is not equal to currentTask description ```js\nconst regex = /const\\s+formInputValuesUpdated\\s=\\stitleInput value\\s( ==| =)\\scurrentTask title\\s\\|\\|\\sdateInput value\\s( ==| =)\\scurrentTask date\\s\\|\\|\\sdescriptionInput value\\s( ==| =)\\scurrentTask description\\s*; /\nassert match(code, regex);\n```\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "db38f9213f2783146976cda83df90fbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "Your formInputValuesUpdated variable should check if titleInput value is not equal to currentTask title, dateInput value is not equal to currentTask date, or descriptionInput value is not equal to currentTask description ```js const regex = /const\\s+formInputValuesUpdated\\s=\\stitleInput value\\s( ==| =)\\scurrentTask title\\s\\|\\|\\sdateInput value\\s( ==| =)\\scurrentTask date\\s\\|\\|\\sdescriptionInput value\\s( ==| =)\\scurrentTask description\\s*; / assert match(code, regex); ``` --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "02f87798038f0b0c8e621d0bd20fa09e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; }close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "f661c9655d50b2262f86b813eddcecb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; }task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "c821147f15eefb404697c59792330b1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInputvalue,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "1b5a4138995541d409e67f7d2ed8c3bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "splice(dataArrIndex, 1); } const editTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); currentTask = taskData[dataArrIndex]; titleInput value = currentTask title; dateInput value = currentTask date; descriptionInput value = currentTask description; addOrUpdateTaskBtn innerText = \"Update Task\"; taskForm classList toggle(\"hidden\"); } const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtnaddEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\n--fcc-editable-region--\n--fcc-editable-region--\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb1c4dc0feb219149a7c7d.md",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3d35092a117f8577dbbf44c441c759aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb285637fa1e1c222033e3\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nNow add formInputValuesUpdated as the second mandatory condition in the if statement using the AND operator This way, the Cancel and Discard buttons in the modal won't be displayed to the user if they haven't made any changes to the input fields while attempting to edit a task --hints--\nYour if should have the condition formInputsContainValues && formInputValuesUpdated js\nassert match(code split(\"if (formInputsContainValues\"), /\\s*&&\\s*formInputValuesUpdated/)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9060,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "cdd2d50eca2712e943d23f2b4784c58e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; }close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9060,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2f2fc684e92d90fe2d145c32a0adbe58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9060,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "09b820013247a3bd45c0de17d1e7a69b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTaskid);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9060,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "7079889a11c269f430e236200185ec18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "class=\"btn\">Delete</button> </div> } ); }; const deleteTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); buttonEl parentElement remove(); taskData splice(dataArrIndex, 1); } const editTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); currentTask = taskData[dataArrIndex]; titleInput value = currentTask title; dateInput value = currentTask date; descriptionInput value = currentTask description; addOrUpdateTaskBtn innerText = \"Update Task\"; taskFormclassList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\n--fcc-editable-region--\nif (formInputsContainValues) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n--fcc-editable-region--\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9060,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb285637fa1e1c222033e3.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "19350f337c3a85b3e168663c3466544f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fb29348a60361ccd45c1e2\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nlocalStorage offers methods for saving, retrieving, and deleting items The items you save can be of any JavaScript data type For instance, the setItem() method is used to save an item, and the getItem() method retrieves the item To delete a specific item, you can utilize the removeItem() method, or if you want to delete all items in the storage, you can use clear() Here's how you can save an item:\njs\nlocalStorage setItem(\"key\", value); // value could be string, number, or any other data type\nA myTaskArr array has been provided for you Use the setItem() method to save it with a key of data After that, open your browser console and go to the Applications tab, select Local Storage, and the freeCodeCamp domain you see --hints--\nYour localStorage setItem() should have a key of \"data\" js\nassert match(code, /localStorage\\ setItem\\(\\s*(\"|')data\\1/)\nYour localStorage setItem() should have a value of myTaskArr js\nassert match(code, /localStorage\\ setItem\\(\\s*(\"|')data\\1\\s*,\\s*myTaskArr\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9839,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "9665046631c8442643fe8a7c7aa8ffa8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9839,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "ba18f921d7c87c23af0938252f33d010",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9839,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "4158a14eae20c752e8b89a50b4d79f28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9839,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "3a1e1cd62f3d85cb11b179f0577de00e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } else { taskData[dataArrIndex] = taskObj; } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\nif (formInputsContainValues && formInputValuesUpdated) {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9839,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "9c658792378dcc76200803f8de476948",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; const formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description; if (formInputsContainValues && formInputValuesUpdated) { confirmCloseDialogshowModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\nconst myTaskArr = [\n{ task: \"Walk the Dog\", date: \"22-04-2022\" },\n{ task: \"Read some books\", date: \"02-11-2023\" },\n{ task: \"Watch football\", date: \"10-08-2021\" },\n];\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9839,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fb29348a60361ccd45c1e2.md",
      "source_type": "git_repo"
    },
    "token_count": 270,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "7db1d1e41e9c90df41c21d0403b090a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64fefebad99209211ec30537\ntitle: Step 54\nchallengeType: 0\ndashedName: step-54\n--description--\nIf you check the \"Application\" tab of your browser console, you'll notice a series of [object Object] This is because everything you save in localStorage needs to be in string format To resolve the issue, wrap the data you're saving in the JSON stringify() method Then, check local storage again to observe the results --hints--\nYour localStorage setItem() should have a key of \"data\" js\nassert match(code, /localStorage\\ setItem\\(\\s*(\"|')data\\1/)\nYou should wrap JSON stringify() around myTaskArr js\nassert match(code, /localStorage\\ setItem\\(\\s*(\"|')data\\1\\s*,\\s*JSON\\ stringify\\(\\s*myTaskArr\\s*\\)\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "db74c28007cb516cdd6c1be8ab67c725",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "709541de0080c5fca7e0b9862f9c80b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "7dbd1ca75a0fb1723f09bde6864d152e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "44b67d64319df494c513b9c1ac4ee5e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } else { taskData[dataArrIndex] = taskObj; } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainer innerHTML += <div class=\"task\" id=\"${id}\"> <p><strong>Title:</strong> ${title}</p> <p><strong>Date:</strong> ${date}</p> <p><strong>Description:</strong> ${description}</p> <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button> <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> </div> } ); }; const deleteTask = (buttonEl) => { const dataArrIndex = taskDatafindIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\nif (formInputsContainValues && formInputValuesUpdated) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "b18ab01fd6546ba61445ba2055a96c96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "() => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; const formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description; if (formInputsContainValues && formInputValuesUpdated) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); reset() }); taskForm addEventListener(\"submit\", (e) => { epreventDefault();\naddOrUpdateTask();\n});\nconst myTaskArr = [\n{ task: \"Walk the Dog\", date: \"22-04-2022\" },\n{ task: \"Read some books\", date: \"02-11-2023\" },\n{ task: \"Watch football\", date: \"10-08-2021\" },\n];\n--fcc-editable-region--\nlocalStorage setItem(\"data\", myTaskArr);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9460,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64fefebad99209211ec30537.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "dd912943622712a116dfe9b58068fcc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ff0313700dad264d19dfe4\ntitle: Step 55\nchallengeType: 0\ndashedName: step-55\n--description--\nNow that you have the myTaskArr array saved in localStorage correctly, you can retrieve it with getItem() by specifying the key you used to save the item Use the getItem() method to retrieve the myTaskArr array and assign it to the variable getTaskArr Then, log the getTaskArr variable to the console to see the result --hints--\nYou should use const to create a getTaskArr variable and assign localStorage getItem(\"data\") to it js\nassert match(code, /const\\s+getTaskArr\\s*=\\s*localStorage\\ getItem\\(\\s*('|\")data\\1\\s*\\)\\s*; /)\nYou should log the getTaskArr variable to the console js\nassert match(code, /console\\ log\\(\\s*getTaskArr\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "8a105275a0c14c839e6d00ed2f5f320f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "1276d9b01b0858a24129ceb4ab77862f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "d35d8b3bb9f251960be3b39d244d75e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "21ddc40ae136b054ba07267c7ae3143c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } else { taskData[dataArrIndex] = taskObj; } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainer innerHTML += <div class=\"task\" id=\"${id}\"> <p><strong>Title:</strong> ${title}</p> <p><strong>Date:</strong> ${date}</p> <p><strong>Description:</strong> ${description}</p> <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button> <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> </div> } ); }; const deleteTask = (buttonEl) => { const dataArrIndex = taskDatafindIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\nif (formInputsContainValues && formInputValuesUpdated) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "6d34a4998b4cd6dfec7d8db0134e57ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "() => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; const formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description; if (formInputsContainValues && formInputValuesUpdated) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); reset() }); taskForm addEventListener(\"submit\", (e) => { epreventDefault();\naddOrUpdateTask();\n});\nconst myTaskArr = [\n{ task: \"Walk the Dog\", date: \"22-04-2022\" },\n{ task: \"Read some books\", date: \"02-11-2023\" },\n{ task: \"Watch football\", date: \"10-08-2021\" },\n];\nlocalStorage setItem(\"data\", JSON stringify(myTaskArr));\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff0313700dad264d19dfe4.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "c10585412e5a095767b4a18bf1aa6167",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ff068e0426eb288874ed79\ntitle: Step 57\nchallengeType: 0\ndashedName: step-57\n--description--\nYou can use localStorage removeItem() to remove a specific item from the local storage Remove the data item from local storage and open the console to observe the result You should see null --hints--\nYou should use localStorage removeItem() to remove the data item from the browser's local storage js\nassert match(code, /localStorage\\ removeItem\\(\\s*('|\")data\\1\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9391,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "857a473af92606b17ef3d4a2dd08bab1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; }close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9391,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "d0484fb8cae83604c2e81a186f51be82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; } discard-message-text { font-weight: bold; font-size: 1 5rem; } tasks-container { height: 100%; overflow-y: auto; }task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9391,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "70cdf8034885a72d5f675db5a8e94281",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInputvalue,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9391,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "59281acb7575fe336c3e3a46d5c84d1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "splice(dataArrIndex, 1); } const editTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); currentTask = taskData[dataArrIndex]; titleInput value = currentTask title; dateInput value = currentTask date; descriptionInput value = currentTask description; addOrUpdateTaskBtn innerText = \"Update Task\"; taskForm classList toggle(\"hidden\"); } const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtnaddEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\nif (formInputsContainValues && formInputValuesUpdated) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\nconst myTaskArr = [\n{ task: \"Walk the Dog\", date: \"22-04-2022\" },\n{ task: \"Read some books\", date: \"02-11-2023\" },\n{ task: \"Watch football\", date: \"10-08-2021\" },\n];\nlocalStorage setItem(\"data\", JSON stringify(myTaskArr));\n--fcc-editable-region--\n--fcc-editable-region--\nconst getTaskArr = localStorage getItem(\"data\")\nconsole log(getTaskArr)\nconst getTaskArrObj = JSON parse(localStorage getItem(\"data\"));\nconsole log(getTaskArrObj);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9391,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff068e0426eb288874ed79.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3252fb3b9f6f083785f5126dd0d8c7a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ff04cc33779427a6412449\ntitle: Step 56\nchallengeType: 0\ndashedName: step-56\n--description--\nThe item you retrieve is a string, as you saved it with JSON stringify() To view it in its original form before saving, you need to use JSON parse() Use getItem() to retrieve the myTaskArr array again This time, wrap it inside JSON parse(), assign it to the variable getTaskArrObj and log the getTaskArrObj to the console Check the console to see the difference between getTaskArr and getTaskArrObj --hints--\nYou should use const to create a getTaskArrObj variable and assign it to JSON parse(localStorage getItem('data')); js\nassert match(code, /const\\s+getTaskArrObj\\s*=\\s*JSON\\ parse\\(\\s*localStorage\\ getItem\\(\\s*('|\")data\\1\\s*\\)\\s*\\)\\s*; /)\nYou should log the getTaskArrObj variable to the console js\nassert match(code, /console\\ log\\(\\s*getTaskArrObj\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "62f46b956e60e200447e47c4b18dc9dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "98ca1e58ee619b7230a3f6b44dcaae4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "64a039038a00ae22fb4a692b55853264",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "ba3b6e714f736e10da73a8810bef5d12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } else { taskData[dataArrIndex] = taskObj; } updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainer innerHTML += <div class=\"task\" id=\"${id}\"> <p><strong>Title:</strong> ${title}</p> <p><strong>Date:</strong> ${date}</p> <p><strong>Description:</strong> ${description}</p> <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button> <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> </div> } ); }; const deleteTask = (buttonEl) => { const dataArrIndex = taskDatafindIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\nif (formInputsContainValues && formInputValuesUpdated) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "7f3fa7b3341a680f8c9b2deac8ae2cbf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "() => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; const formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description; if (formInputsContainValues && formInputValuesUpdated) { confirmCloseDialog showModal(); } else { reset(); } }); cancelBtn addEventListener(\"click\", () => confirmCloseDialog close()); discardBtn addEventListener(\"click\", () => { confirmCloseDialog close(); reset() }); taskForm addEventListener(\"submit\", (e) => { epreventDefault();\naddOrUpdateTask();\n});\nconst myTaskArr = [\n{ task: \"Walk the Dog\", date: \"22-04-2022\" },\n{ task: \"Read some books\", date: \"02-11-2023\" },\n{ task: \"Watch football\", date: \"10-08-2021\" },\n];\nlocalStorage setItem(\"data\", JSON stringify(myTaskArr));\nconst getTaskArr = localStorage getItem(\"data\")\nconsole log(getTaskArr)\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff04cc33779427a6412449.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "379b9630af42089a168a3e8a99e2a743",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 64ff24b80431f62ec6b93f65\ntitle: Step 58\nchallengeType: 0\ndashedName: step-58\n--description--\nRemove the myTaskArr array and all of the code for localStorage because you don't need them anymore --hints--\nYou should remove myTaskArr and all the code related to localStorage that you've just learned js\nassert notMatch(code, /const\\s+myTaskArr\\s*=\\s*\\[\\s*\\{\\s*task:\\s*('|\")Walk\\s*the\\s*Dog\\1\\s*,\\s*date:\\s*('|\")22-04-2022\\2\\s*\\}\\s*,\\s*\\{\\s*task:\\s*('|\")Read\\s*some\\s*books\\3\\s*,\\s*date:\\s*('|\")02-11-2023\\4\\s*\\}\\s*,\\s*\\{\\s*task:\\s*('|\")Watch\\s*football\\5\\s*,\\s*date:\\s*('|\")10-08-2021\\6\\s*\\}\\s*\\]\\s*; \\s*localStorage\\ setItem\\(('|\")data\\7\\s*,\\s*JSON\\ stringify\\(\\s*myTaskArr\\s*\\)\\s*; \\)\\s*; \\s*localStorage\\ clear\\(\\s*\\)\\s*; \\s*const\\s+getTaskArr\\s*=\\s*localStorage\\ getItem\\(\\s*('|\")data\\8\\s*\\)\\s*console\\ log\\(\\s*getTaskArr\\s*\\)\\s*const\\s+getTaskArrObj\\s*=\\s*JSON\\ parse\\(\\s*localStorage\\ getItem\\(\\s*('|\")data\\9\\s*\\)\\s*\\)\\s*; \\s*console\\ log\\(\\s*getTaskArrObj\\s*\\)\\s*; /);\nYou should remove any remaining references to myTaskArr anywhere in the code js\nassert notMatch(code, /myTaskArr/);\nYou should remove any reference to localStorage getItem for the item \"data\" js\nassert notMatch(code, /localStorage\\ getItem\\(\\s*('|\")data\\1\\s*\\)/);\nYou should remove any remaining references to getTaskArrObj anywhere in the code js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "cf9964588561cb60b13da0dcf09bd4bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "and all the code related to localStorage that you've just learned js assert notMatch(code, /const\\s+myTaskArr\\s*=\\s*\\[\\s*\\{\\s*task:\\s*('|\")Walk\\s*the\\s*Dog\\1\\s*,\\s*date:\\s*('|\")22-04-2022\\2\\s*\\}\\s*,\\s*\\{\\s*task:\\s*('|\")Read\\s*some\\s*books\\3\\s*,\\s*date:\\s*('|\")02-11-2023\\4\\s*\\}\\s*,\\s*\\{\\s*task:\\s*('|\")Watch\\s*football\\5\\s*,\\s*date:\\s*('|\")10-08-2021\\6\\s*\\}\\s*\\]\\s*; \\s*localStorage\\ setItem\\(('|\")data\\7\\s*,\\s*JSON\\ stringify\\(\\s*myTaskArr\\s*\\)\\s*; \\)\\s*; \\s*localStorage\\ clear\\(\\s*\\)\\s*; \\s*const\\s+getTaskArr\\s*=\\s*localStorage\\ getItem\\(\\s*('|\")data\\8\\s*\\)\\s*console\\ log\\(\\s*getTaskArr\\s*\\)\\s*const\\s+getTaskArrObj\\s*=\\s*JSON\\ parse\\(\\s*localStorage\\ getItem\\(\\s*('|\")data\\9\\s*\\)\\s*\\)\\s*; \\s*console\\ log\\(\\s*getTaskArrObj\\s*\\)\\s*; /); You should remove any remaining references to myTaskArr anywhere in the code js assert notMatch(code, /myTaskArr/); You should remove any reference to localStorage getItem for the item \"data\" js assert notMatch(code, /localStorage\\ getItem\\(\\s*('|\")data\\1\\s*\\)/); You should remove any remaining references to getTaskArrObj anywhere in the code js assertnotMatch(code, /getTaskArrObj/);\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "2212bcea643bcad166a7df4d82dd8358",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "parse\\(\\s*localStorage\\ getItem\\(\\s*('|\")data\\9\\s*\\)\\s*\\)\\s*; \\s*console\\ log\\(\\s*getTaskArrObj\\s*\\)\\s*; /); You should remove any remaining references to myTaskArr anywhere in the code js assert notMatch(code, /myTaskArr/); You should remove any reference to localStorage getItem for the item \"data\" js assert notMatch(code, /localStorage\\ getItem\\(\\s*('|\")data\\1\\s*\\)/); You should remove any remaining references to getTaskArrObj anywhere in the code js assertnotMatch(code, /getTaskArrObj/); --seed-- --seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changesCancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "1b6336926c2acd0a45f396a9b3c82a30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; } btn { cursor: pointer; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; }close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "f06e986e0ae596e834ad46b4ee67d36b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; } task-form-label { margin-bottom: 5px; font-size: 1 3rem; font-weight: bold; } title-input, date-input, description-input { width: 100%; margin-bottom: 10px; padding: 2px; } confirm-close-dialog { padding: 10px; margin: 10px auto; border-radius: 15px; } confirm-close-dialog-btn-container { display: flex; justify-content: center; margin-top: 10px; }discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "fd83a4de273e9251dacdaa532c42f584",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = document getElementById(\"cancel-btn\"); const discardBtn = document getElementById(\"discard-btn\"); const tasksContainer = document getElementById(\"tasks-container\"); const titleInput = document getElementById(\"title-input\"); const dateInput = document getElementById(\"date-input\"); const descriptionInput = document getElementById(\"description-input\"); const taskData = []; let currentTask = {}; const addOrUpdateTask = () => { const dataArrIndex = taskData findIndex((item) => item id === currentTaskid);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer innerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "eae1b0e680081dd03dae470a414552ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "class=\"btn\">Delete</button> </div> } ); }; const deleteTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); buttonEl parentElement remove(); taskData splice(dataArrIndex, 1); } const editTask = (buttonEl) => { const dataArrIndex = taskData findIndex( (item) => item id === buttonEl parentElement id ); currentTask = taskData[dataArrIndex]; titleInput value = currentTask title; dateInput value = currentTask date; descriptionInput value = currentTask description; addOrUpdateTaskBtn innerText = \"Update Task\"; taskFormclassList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\nif (formInputsContainValues && formInputValuesUpdated) {\nconfirmCloseDialog showModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n--fcc-editable-region--\nconst myTaskArr = [\n{ task: \"Walk the Dog\", date: \"22-04-2022\" },\n{ task: \"Read some books\", date: \"02-11-2023\" },\n{ task: \"Watch football\", date: \"10-08-2021\" },\n];\nlocalStorage setItem(\"data\", JSON stringify(myTaskArr));\nlocalStorage removeItem(\"data\");\nconst getTaskArr = localStorage getItem(\"data\")\nconsole log(getTaskArr)\nconst getTaskArrObj = JSON parse(localStorage getItem(\"data\"));\nconsole log(getTaskArrObj);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10347,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\64ff24b80431f62ec6b93f65.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "0e66688aa1c26fa00ed1ae464c778625",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 65003986d17d1e1865b269c0\ntitle: Step 59\nchallengeType: 0\ndashedName: step-59\n--description--\nNow you should save the task items to local storage when the user adds, updates, or removes a task Inside the addOrUpdateTask function, use setItem() to save the tasks with a key of data, then pass the taskData array as its argument Ensure that you stringify the taskData This would persist data once the user adds or updates tasks --hints--\nYou should use localStorage setItem() to save the tasks to the browser local storage js\nassert match(code, /localStorage\\ setItem\\(/)\nYou should pass in \"data\" as the first argument of your localStorage setItem() js\nassert match(code, /localStorage\\ setItem\\(\\s*('|\")data\\1/)\nYou should pass in JSON stringify(taskData) as the second argument of your localStorage setItem() js\nassert match(code, /localStorage\\ setItem\\(\\s*('|\")data\\1\\s*,\\s*JSON\\ stringify\\(\\s*taskData\\s*\\)\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n} todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "9ab8a43cf22499ded41d1135493456df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; } todo-app { background-color: var(--white); width: 300px; height: 350px; border: 5px solid var(--yellow); border-radius: 8px; padding: 15px; position: relative; display: flex; flex-direction: column; gap: 10px; }btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n} task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "9bba37859db135300eab898f080572ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "{ background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; } task-form-footer { display: flex; justify-content: center; } task-form-label, title-input, date-input, description-input { display: block; }task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "39a0eca8ea08830a8553e44209c4c1b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = document getElementById(\"close-task-form-btn\"); const addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\"); const cancelBtn = documentgetElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "62c63e65431f0a95690a38f355e76887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "() => { const dataArrIndex = taskData findIndex((item) => item id === currentTask id); const taskObj = { id: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()}, title: titleInput value, date: dateInput value, description: descriptionInput value, }; if (dataArrIndex === -1) { taskData unshift(taskObj); } else { taskData[dataArrIndex] = taskObj; } --fcc-editable-region-- --fcc-editable-region-- updateTaskContainer() reset() }; const updateTaskContainer = () => { tasksContainer innerHTML = \"\"; taskData forEach( ({ id, title, date, description }) => { tasksContainerinnerHTML += <div class=\"task\" id=\"${id}\">\n<p><strong>Title:</strong> ${title}</p>\n<p><strong>Date:</strong> ${date}</p>\n<p><strong>Description:</strong> ${description}</p>\n<button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n<button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button>\n</div>\n}\n);\n};\nconst deleteTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\nbuttonEl parentElement remove();\ntaskData splice(dataArrIndex, 1);\n}\nconst editTask = (buttonEl) => {\nconst dataArrIndex = taskData findIndex(\n(item) => item id === buttonEl parentElement id\n);\ncurrentTask = taskData[dataArrIndex];\ntitleInput value = currentTask title;\ndateInput value = currentTask date;\ndescriptionInput value = currentTask description;\naddOrUpdateTaskBtn innerText = \"Update Task\";\ntaskForm classList toggle(\"hidden\");\n}\nconst reset = () => {\ntitleInput value = \"\";\ndateInput value = \"\";\ndescriptionInput value = \"\";\ntaskForm classList toggle(\"hidden\");\ncurrentTask = {};\n}\nopenTaskFormBtn addEventListener(\"click\", () =>\ntaskForm classList toggle(\"hidden\")\n);\ncloseTaskFormBtn addEventListener(\"click\", () => {\nconst formInputsContainValues = titleInput value || dateInput value || descriptionInput value;\nconst formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description;\nif (formInputsContainValues && formInputValuesUpdated) {\nconfirmCloseDialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "0fc031f43b66317ff9976de396193ad4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "} const reset = () => { titleInput value = \"\"; dateInput value = \"\"; descriptionInput value = \"\"; taskForm classList toggle(\"hidden\"); currentTask = {}; } openTaskFormBtn addEventListener(\"click\", () => taskForm classList toggle(\"hidden\") ); closeTaskFormBtn addEventListener(\"click\", () => { const formInputsContainValues = titleInput value || dateInput value || descriptionInput value; const formInputValuesUpdated = titleInput value == currentTask title || dateInput value == currentTask date || descriptionInput value == currentTask description; if (formInputsContainValues && formInputValuesUpdated) { confirmCloseDialogshowModal();\n} else {\nreset();\n}\n});\ncancelBtn addEventListener(\"click\", () => confirmCloseDialog close());\ndiscardBtn addEventListener(\"click\", () => {\nconfirmCloseDialog close();\nreset()\n});\ntaskForm addEventListener(\"submit\", (e) => {\ne preventDefault();\naddOrUpdateTask();\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\65003986d17d1e1865b269c0.md",
      "source_type": "git_repo"
    },
    "token_count": 195,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3d3b6c5e0a540c7a3c8f91139cd4165e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "id: 650046832f92c01a35834bca\ntitle: Step 60\nchallengeType: 0\ndashedName: step-60\n--description--\nYou also want a deleted task to be removed from local storage For this, you don't need the removeItem() or clear() methods Since you already use splice() to remove the deleted task from taskData, all you need to do now is save taskData to local storage again Use setItem() to save the taskData array again Pass in data as the key and ensure that taskData is stringified before saving --hints--\nYou should use localStorage setItem() to save the tasks to the browser local storage js\nconst splitter = code split(\"taskData splice(dataArrIndex, 1);\")\nassert match(splitter[1], /localStorage\\ setItem\\(/)\nYou should pass in \"data\" as the first argument of your localStorage setItem() js\nconst splitter = code split(\"taskData splice(dataArrIndex, 1);\")\nassert match(splitter[1], /localStorage\\ setItem\\(\\s*('|\")data\\1/)\nYou should pass in JSON stringify(taskData) as the second argument of your localStorage setItem() js\nconst splitter = code split(\"taskData splice(dataArrIndex, 1);\")\nassert match(splitter[1], /localStorage\\ setItem\\(\\s*('|\")data\\1\\s*,\\s*JSON\\ stringify\\(\\s*taskData\\s*\\)\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn localStorage by Building a Todo App\nTodo App\nAdd New Task\nTitle\nDate\nDescription\nAdd Task\nDiscard unsaved changes Cancel\nDiscard\n```\n```css\n:root {\n--white: #fff;\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--dark-grey);\n}\nmain {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n}\nh1 {\ncolor: var(--light-grey);\nmargin: 20px 0 40px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "1caef7fee3153fdf3ac12c8617cac05b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "--seed-contents-- ```html Learn localStorage by Building a Todo App Todo App Add New Task Title Date Description Add Task Discard unsaved changes Cancel Discard ``` ```css :root { --white: #fff; --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { background-color: var(--dark-grey); } main { display: flex; flex-direction: column; justify-content: center; align-items: center; } h1 { color: var(--light-grey); margin: 20px 0 40px 0; }todo-app {\nbackground-color: var(--white);\nwidth: 300px;\nheight: 350px;\nborder: 5px solid var(--yellow);\nborder-radius: 8px;\npadding: 15px;\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n} btn {\ncursor: pointer;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n} large-btn {\nwidth: 80%;\nfont-size: 1 2rem;\nalign-self: center;\njustify-self: center;\n} close-task-form-btn {\nbackground: none;\nborder: none;\ncursor: pointer;\n} close-icon {\nwidth: 20px;\nheight: 20px;\n} task-form {\ndisplay: flex;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: var(--white);\nborder-radius: 5px;\npadding: 15px;\nwidth: 300px;\nheight: 350px;\nflex-direction: column;\njustify-content: space-between;\noverflow: auto;\n} task-form-header {\ndisplay: flex;\njustify-content: flex-end;\n} task-form-body {\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "737121628b3958bf1da9dacf0361f285",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "#f89808); } large-btn { width: 80%; font-size: 1 2rem; align-self: center; justify-self: center; } close-task-form-btn { background: none; border: none; cursor: pointer; } close-icon { width: 20px; height: 20px; } task-form { display: flex; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: var(--white); border-radius: 5px; padding: 15px; width: 300px; height: 350px; flex-direction: column; justify-content: space-between; overflow: auto; } task-form-header { display: flex; justify-content: flex-end; } task-form-body { display: flex; flex-direction: column; justify-content: space-around; }task-form-footer {\ndisplay: flex;\njustify-content: center;\n} task-form-label,\ntitle-input,\ndate-input,\ndescription-input {\ndisplay: block;\n} task-form-label {\nmargin-bottom: 5px;\nfont-size: 1 3rem;\nfont-weight: bold;\n}\ntitle-input,\ndate-input,\ndescription-input {\nwidth: 100%;\nmargin-bottom: 10px;\npadding: 2px;\n}\nconfirm-close-dialog {\npadding: 10px;\nmargin: 10px auto;\nborder-radius: 15px;\n} confirm-close-dialog-btn-container {\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\n} discard-message-text {\nfont-weight: bold;\nfont-size: 1 5rem;\n}\ntasks-container {\nheight: 100%;\noverflow-y: auto;\n} task {\nmargin: 5px 0;\n} hidden {\ndisplay: none;\n}\n@media (min-width: 576px) { todo-app, task-form {\nwidth: 400px;\nheight: 450px;\n} task-form-label {\nfont-size: 1 5rem;\n}\n#title-input,\n#date-input {\nheight: 2rem;\n}\n#title-input,\n#date-input,\n#description-input {\npadding: 5px;\nmargin-bottom: 20px;\n}\n}\n```\n```js\nconst taskForm = document getElementById(\"task-form\");\nconst confirmCloseDialog = document getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "6501de5db25c273562cbb491d7b15577",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
    "source_type": "git_repo",
    "title": "Learn localStorage by Building a Todo App",
    "content": "1 5rem; } tasks-container { height: 100%; overflow-y: auto; } task { margin: 5px 0; } hidden { display: none; } @media (min-width: 576px) { todo-app, task-form { width: 400px; height: 450px; } task-form-label { font-size: 1 5rem; } #title-input, #date-input { height: 2rem; } #title-input, #date-input, #description-input { padding: 5px; margin-bottom: 20px; } } ``` ```js const taskForm = document getElementById(\"task-form\"); const confirmCloseDialog = document getElementById(\"confirm-close-dialog\"); const openTaskFormBtn = document getElementById(\"open-task-form-btn\"); const closeTaskFormBtn = documentgetElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document getElementById(\"cancel-btn\");\nconst discardBtn = document getElementById(\"discard-btn\");\nconst tasksContainer = document getElementById(\"tasks-container\");\nconst titleInput = document getElementById(\"title-input\");\nconst dateInput = document getElementById(\"date-input\");\nconst descriptionInput = document getElementById(\"description-input\");\nconst taskData = [];\nlet currentTask = {};\nconst addOrUpdateTask = () => {\nconst dataArrIndex = taskData findIndex((item) => item id === currentTask id);\nconst taskObj = {\nid: ${titleInput value toLowerCase() split(\" \") join(\"-\")}-${Date now()},\ntitle: titleInput value,\ndate: dateInput value,\ndescription: descriptionInput value,\n};\nif (dataArrIndex === -1) {\ntaskData unshift(taskObj);\n} else {\ntaskData[dataArrIndex] = taskObj;\n}\nlocalStorage setItem(\"data\", JSON stringify(taskData));\nupdateTaskContainer()\nreset()\n};\nconst updateTaskContainer = () => {\ntasksContainer innerHTML = \"\";\ntaskData forEach(\n({ id, title, date, description }) => {\ntasksContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-todo-app\\650046832f92c01a35834bca.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 3,
    "total_chunks": 6
  }
]